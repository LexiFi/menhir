State 0:
## Known stack suffix:
##
## LR(1) items:
main' -> . main [ # ]
## Transitions:
-- On Twchar_t shift to state 1
-- On Tvolatile shift to state 2
-- On Tvoid shift to state 3
-- On Tvirtual shift to state 4
-- On Tusing shift to state 5
-- On Tunsigned shift to state 15
-- On Tunion shift to state 16
-- On Ttypeof shift to state 17
-- On Ttypename shift to state 19
-- On Ttypedef shift to state 96
-- On Tthread_local shift to state 97
-- On Tstruct shift to state 27
-- On Tstatic shift to state 323
-- On Tsigned shift to state 30
-- On Tshort shift to state 32
-- On Trestrict shift to state 65
-- On Tregister shift to state 99
-- On Tnamespace shift to state 540
-- On Tmutable shift to state 100
-- On Tlong shift to state 38
-- On Tint shift to state 39
-- On Tinline shift to state 101
-- On Tfriend shift to state 102
-- On Tfloat shift to state 40
-- On Textern shift to state 103
-- On Tenum shift to state 66
-- On Tdouble shift to state 41
-- On Tdecltype shift to state 45
-- On Tconstexpr shift to state 104
-- On Tconst shift to state 76
-- On Tclass shift to state 77
-- On Tchar shift to state 58
-- On Tbool shift to state 60
-- On Tauto shift to state 105
-- On Tasm shift to state 366
-- On TIdent_Typedef shift to state 20
-- On TIdent_TemplatenameInQualifier_BeforeTypedef shift to state 21
-- On TIdent_Templatename shift to state 108
-- On TIdent_MacroDecl shift to state 423
-- On TIdent_ClassnameInQualifier_BeforeTypedef shift to state 111
-- On TColCol_BeforeTypedef shift to state 118
-- On using_directive shift to state 581
-- On using_declaration shift to state 582
-- On type_spec shift to state 314
-- On type_name shift to state 182
-- On type_cplusplus_id shift to state 183
-- On translation_unit shift to state 965
-- On template_id shift to state 120
-- On storage_class_spec shift to state 316
-- On simple_type_specifier shift to state 206
-- On simple_declaration shift to state 585
-- On nonempty_list(external_declaration) shift to state 967
-- On nested_name_specifier2 shift to state 207
-- On namespace_alias_definition shift to state 587
-- On main shift to state 968
-- On function_spec shift to state 437
-- On function_definition shift to state 969
-- On external_declaration shift to state 970
-- On enum_specifier shift to state 209
-- On enum_name_or_typedef_name_or_simple_class_name shift to state 123
-- On enum_head shift to state 210
-- On elaborated_type_specifier shift to state 274
-- On decltype_specifier shift to state 243
-- On decl_spec_seq shift to state 599
-- On decl_spec shift to state 473
-- On cv_qualif shift to state 475
-- On class_specifier shift to state 277
-- On class_or_namespace_name_for_qualifier2 shift to state 124
-- On class_key shift to state 278
-- On class_head shift to state 301
-- On block_declaration shift to state 972
-- On asm_definition shift to state 617
## Reductions:

State 1:
## Known stack suffix:
## Twchar_t
## LR(1) items:
simple_type_specifier -> Twchar_t . [ Twchar_t Tvolatile Tvoid Tvirtual Tunsigned Tunion Ttypeof Ttypename Ttypedef Tthread_local Tstruct Tstatic Tsigned Tshort Trestrict Tregister Toperator Tmutable Tlong Tint Tinline Tfriend Tfloat Textern Tenum Tdouble Tdecltype Tconstexpr Tconst Tclass Tchar Tbool Tauto Tasm TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtrOpStar TPtrOp TPtVirg TPlus TOrLog TOr TOPar_CplusplusInit TOPar TOCro TOBrace TNotEq TMul TMod TMinus TInfEq TInf TInc TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TIdent TEqEq TEq TEllipsis TDotStar TDot TDiv TDec TCommentNewline_DefineEndOfMacro TComma TColCol_BeforeTypedef TColCol TCol TCPar_EOL TCPar TCCro TCBrace TAssign TAndLog TAnd RDots EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production simple_type_specifier -> Twchar_t

State 2:
## Known stack suffix:
## Tvolatile
## LR(1) items:
cv_qualif -> Tvolatile . [ Twchar_t Tvolatile Tvoid Tvirtual Tunsigned Tunion Ttypeof Ttypename Ttypedef Tthread_local Tstruct Tstatic Tsigned Tshort Trestrict Tregister Toperator Tmutable Tlong Tint Tinline Tfriend Tfloat Textern Tenum Tdouble Tdecltype Tconstexpr Tconst Tclass Tchar Tbool Tauto TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtrOpStar TPtVirg TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMod TMinus TInfEq TInf TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TIdent TEqEq TEq TEllipsis TDotStar TDiv TCommentNewline_DefineEndOfMacro TComma TColCol_BeforeTypedef TColCol TCol TCPar_EOL TCPar TCCro TCBrace TAssign TAndLog TAnd RDots EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production cv_qualif -> Tvolatile

State 3:
## Known stack suffix:
## Tvoid
## LR(1) items:
simple_type_specifier -> Tvoid . [ Twchar_t Tvolatile Tvoid Tvirtual Tunsigned Tunion Ttypeof Ttypename Ttypedef Tthread_local Tstruct Tstatic Tsigned Tshort Trestrict Tregister Toperator Tmutable Tlong Tint Tinline Tfriend Tfloat Textern Tenum Tdouble Tdecltype Tconstexpr Tconst Tclass Tchar Tbool Tauto Tasm TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtrOpStar TPtrOp TPtVirg TPlus TOrLog TOr TOPar_CplusplusInit TOPar TOCro TOBrace TNotEq TMul TMod TMinus TInfEq TInf TInc TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TIdent TEqEq TEq TEllipsis TDotStar TDot TDiv TDec TCommentNewline_DefineEndOfMacro TComma TColCol_BeforeTypedef TColCol TCol TCPar_EOL TCPar TCCro TCBrace TAssign TAndLog TAnd RDots EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production simple_type_specifier -> Tvoid

State 4:
## Known stack suffix:
## Tvirtual
## LR(1) items:
function_spec -> Tvirtual . [ Twchar_t Tvolatile Tvoid Tvirtual Tunsigned Tunion Ttypeof Ttypename Ttypedef Tthread_local Tstruct Tstatic Tsigned Tshort Trestrict Tregister Toperator Tmutable Tlong Tint Tinline Tfriend Tfloat Textern Tenum Tdouble Tdecltype Tconstexpr Tconst Tclass Tchar Tbool Tauto TSup_Template TPtVirg TOPar TOCro TMul TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TIdent TEq TComma TColCol_BeforeTypedef TColCol TCol TCPar TAndLog TAnd ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production function_spec -> Tvirtual

State 5:
## Known stack suffix:
## Tusing
## LR(1) items:
using_declaration -> Tusing . option(Ttypename) option(TColCol) nested_name_specifier unqualified_id TPtVirg [ Twhile Twchar_t_Constr Twchar_t Tvolatile Tvoid Tvirtual Tusing Tunsigned Tunion Ttypeof Ttypename Ttypeid Ttypedef Ttry Ttrue Tthrow Tthread_local Tthis Ttemplate Tswitch Tstruct Tstatic_cast Tstatic Tsizeof Tsigned Tshort_Constr Tshort Treturn Trestrict Treinterpret_cast Tregister Tpublic Tprotected Tprivate Toperator Tnullptr Tnull Tnew Tnamespace Tmutable Tlong_Constr Tlong Tint_Constr Tint Tinline Tif Tgoto Tfriend Tfor Tfloat_Constr Tfloat Tfalse Textern Texplicit Tenum Telse Tdynamic_cast Tdouble_Constr Tdouble Tdo Tdelete Tdefault Tdecltype Tcontinue Tconstexpr Tconst_cast Tconst Tclass Tchar_Constr Tchar Tcase Tbreak Tbool_Constr Tbool Tauto Tasm TUndef TTilde TString TPtVirg TPlus TOPar TOCro_Lambda TOBrace TMul TMinus TInt TInclude TInc TIfdefelse TIfdefelif TIfdefVersion TIfdefMisc TIfdefBool TIfdef TIdent_TypedefConstr TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_MacroString TIdent_MacroStmt TIdent_MacroIterator TIdent_MacroDecl TIdent_Constructor TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TIdent TFloat TEndif TEllipsis TDefine TDec TCppDirectiveOther TCommentNewline_DefineEndOfMacro TColCol_BeforeTypedef TColCol TChar TCBrace TBang TAndLog TAnd LDots EOF ]
using_declaration -> Tusing . option(Ttypename) option(TColCol) unqualified_id TPtVirg [ Twhile Twchar_t_Constr Twchar_t Tvolatile Tvoid Tvirtual Tusing Tunsigned Tunion Ttypeof Ttypename Ttypeid Ttypedef Ttry Ttrue Tthrow Tthread_local Tthis Ttemplate Tswitch Tstruct Tstatic_cast Tstatic Tsizeof Tsigned Tshort_Constr Tshort Treturn Trestrict Treinterpret_cast Tregister Tpublic Tprotected Tprivate Toperator Tnullptr Tnull Tnew Tnamespace Tmutable Tlong_Constr Tlong Tint_Constr Tint Tinline Tif Tgoto Tfriend Tfor Tfloat_Constr Tfloat Tfalse Textern Texplicit Tenum Telse Tdynamic_cast Tdouble_Constr Tdouble Tdo Tdelete Tdefault Tdecltype Tcontinue Tconstexpr Tconst_cast Tconst Tclass Tchar_Constr Tchar Tcase Tbreak Tbool_Constr Tbool Tauto Tasm TUndef TTilde TString TPtVirg TPlus TOPar TOCro_Lambda TOBrace TMul TMinus TInt TInclude TInc TIfdefelse TIfdefelif TIfdefVersion TIfdefMisc TIfdefBool TIfdef TIdent_TypedefConstr TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_MacroString TIdent_MacroStmt TIdent_MacroIterator TIdent_MacroDecl TIdent_Constructor TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TIdent TFloat TEndif TEllipsis TDefine TDec TCppDirectiveOther TCommentNewline_DefineEndOfMacro TColCol_BeforeTypedef TColCol TChar TCBrace TBang TAndLog TAnd LDots EOF ]
using_directive -> Tusing . Tnamespace qualified_namespace_spec TPtVirg [ Twhile Twchar_t_Constr Twchar_t Tvolatile Tvoid Tvirtual Tusing Tunsigned Tunion Ttypeof Ttypename Ttypeid Ttypedef Ttry Ttrue Tthrow Tthread_local Tthis Ttemplate Tswitch Tstruct Tstatic_cast Tstatic Tsizeof Tsigned Tshort_Constr Tshort Treturn Trestrict Treinterpret_cast Tregister Tpublic Tprotected Tprivate Toperator Tnullptr Tnull Tnew Tnamespace Tmutable Tlong_Constr Tlong Tint_Constr Tint Tinline Tif Tgoto Tfriend Tfor Tfloat_Constr Tfloat Tfalse Textern Texplicit Tenum Telse Tdynamic_cast Tdouble_Constr Tdouble Tdo Tdelete Tdefault Tdecltype Tcontinue Tconstexpr Tconst_cast Tconst Tclass Tchar_Constr Tchar Tcase Tbreak Tbool_Constr Tbool Tauto Tasm TUndef TTilde TString TPtVirg TPlus TOPar TOCro_Lambda TOBrace TMul TMinus TInt TInclude TInc TIfdefelse TIfdefelif TIfdefVersion TIfdefMisc TIfdefBool TIfdef TIdent_TypedefConstr TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_MacroString TIdent_MacroStmt TIdent_MacroIterator TIdent_MacroDecl TIdent_Constructor TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TIdent TFloat TEndif TEllipsis TDefine TDec TCppDirectiveOther TCommentNewline_DefineEndOfMacro TColCol_BeforeTypedef TColCol TChar TCBrace TBang TAndLog TAnd LDots EOF ]
## Transitions:
-- On Ttypename shift to state 6
-- On Tnamespace shift to state 7
-- On option(Ttypename) shift to state 305
## Reductions:
-- On Toperator TIdent_TemplatenameInQualifier TIdent_ClassnameInQualifier TIdent TColCol
--   reduce production option(Ttypename) ->

State 6:
## Known stack suffix:
## Ttypename
## LR(1) items:
option(Ttypename) -> Ttypename . [ Toperator TIdent_TemplatenameInQualifier TIdent_ClassnameInQualifier TIdent TColCol ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production option(Ttypename) -> Ttypename

State 7:
## Known stack suffix:
## Tusing Tnamespace
## LR(1) items:
using_directive -> Tusing Tnamespace . qualified_namespace_spec TPtVirg [ Twhile Twchar_t_Constr Twchar_t Tvolatile Tvoid Tvirtual Tusing Tunsigned Tunion Ttypeof Ttypename Ttypeid Ttypedef Ttry Ttrue Tthrow Tthread_local Tthis Ttemplate Tswitch Tstruct Tstatic_cast Tstatic Tsizeof Tsigned Tshort_Constr Tshort Treturn Trestrict Treinterpret_cast Tregister Tpublic Tprotected Tprivate Toperator Tnullptr Tnull Tnew Tnamespace Tmutable Tlong_Constr Tlong Tint_Constr Tint Tinline Tif Tgoto Tfriend Tfor Tfloat_Constr Tfloat Tfalse Textern Texplicit Tenum Telse Tdynamic_cast Tdouble_Constr Tdouble Tdo Tdelete Tdefault Tdecltype Tcontinue Tconstexpr Tconst_cast Tconst Tclass Tchar_Constr Tchar Tcase Tbreak Tbool_Constr Tbool Tauto Tasm TUndef TTilde TString TPtVirg TPlus TOPar TOCro_Lambda TOBrace TMul TMinus TInt TInclude TInc TIfdefelse TIfdefelif TIfdefVersion TIfdefMisc TIfdefBool TIfdef TIdent_TypedefConstr TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_MacroString TIdent_MacroStmt TIdent_MacroIterator TIdent_MacroDecl TIdent_Constructor TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TIdent TFloat TEndif TEllipsis TDefine TDec TCppDirectiveOther TCommentNewline_DefineEndOfMacro TColCol_BeforeTypedef TColCol TChar TCBrace TBang TAndLog TAnd LDots EOF ]
## Transitions:
-- On TColCol shift to state 8
-- On qualified_namespace_spec shift to state 9
-- On option(TColCol) shift to state 11
## Reductions:
-- On TIdent_TemplatenameInQualifier TIdent_ClassnameInQualifier TIdent
--   reduce production option(TColCol) ->

State 8:
## Known stack suffix:
## TColCol
## LR(1) items:
option(TColCol) -> TColCol . [ Toperator TIdent_TemplatenameInQualifier TIdent_ClassnameInQualifier TIdent ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production option(TColCol) -> TColCol

State 9:
## Known stack suffix:
## Tusing Tnamespace qualified_namespace_spec
## LR(1) items:
using_directive -> Tusing Tnamespace qualified_namespace_spec . TPtVirg [ Twhile Twchar_t_Constr Twchar_t Tvolatile Tvoid Tvirtual Tusing Tunsigned Tunion Ttypeof Ttypename Ttypeid Ttypedef Ttry Ttrue Tthrow Tthread_local Tthis Ttemplate Tswitch Tstruct Tstatic_cast Tstatic Tsizeof Tsigned Tshort_Constr Tshort Treturn Trestrict Treinterpret_cast Tregister Tpublic Tprotected Tprivate Toperator Tnullptr Tnull Tnew Tnamespace Tmutable Tlong_Constr Tlong Tint_Constr Tint Tinline Tif Tgoto Tfriend Tfor Tfloat_Constr Tfloat Tfalse Textern Texplicit Tenum Telse Tdynamic_cast Tdouble_Constr Tdouble Tdo Tdelete Tdefault Tdecltype Tcontinue Tconstexpr Tconst_cast Tconst Tclass Tchar_Constr Tchar Tcase Tbreak Tbool_Constr Tbool Tauto Tasm TUndef TTilde TString TPtVirg TPlus TOPar TOCro_Lambda TOBrace TMul TMinus TInt TInclude TInc TIfdefelse TIfdefelif TIfdefVersion TIfdefMisc TIfdefBool TIfdef TIdent_TypedefConstr TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_MacroString TIdent_MacroStmt TIdent_MacroIterator TIdent_MacroDecl TIdent_Constructor TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TIdent TFloat TEndif TEllipsis TDefine TDec TCppDirectiveOther TCommentNewline_DefineEndOfMacro TColCol_BeforeTypedef TColCol TChar TCBrace TBang TAndLog TAnd LDots EOF ]
## Transitions:
-- On TPtVirg shift to state 10
## Reductions:

State 10:
## Known stack suffix:
## Tusing Tnamespace qualified_namespace_spec TPtVirg
## LR(1) items:
using_directive -> Tusing Tnamespace qualified_namespace_spec TPtVirg . [ Twhile Twchar_t_Constr Twchar_t Tvolatile Tvoid Tvirtual Tusing Tunsigned Tunion Ttypeof Ttypename Ttypeid Ttypedef Ttry Ttrue Tthrow Tthread_local Tthis Ttemplate Tswitch Tstruct Tstatic_cast Tstatic Tsizeof Tsigned Tshort_Constr Tshort Treturn Trestrict Treinterpret_cast Tregister Tpublic Tprotected Tprivate Toperator Tnullptr Tnull Tnew Tnamespace Tmutable Tlong_Constr Tlong Tint_Constr Tint Tinline Tif Tgoto Tfriend Tfor Tfloat_Constr Tfloat Tfalse Textern Texplicit Tenum Telse Tdynamic_cast Tdouble_Constr Tdouble Tdo Tdelete Tdefault Tdecltype Tcontinue Tconstexpr Tconst_cast Tconst Tclass Tchar_Constr Tchar Tcase Tbreak Tbool_Constr Tbool Tauto Tasm TUndef TTilde TString TPtVirg TPlus TOPar TOCro_Lambda TOBrace TMul TMinus TInt TInclude TInc TIfdefelse TIfdefelif TIfdefVersion TIfdefMisc TIfdefBool TIfdef TIdent_TypedefConstr TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_MacroString TIdent_MacroStmt TIdent_MacroIterator TIdent_MacroDecl TIdent_Constructor TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TIdent TFloat TEndif TEllipsis TDefine TDec TCppDirectiveOther TCommentNewline_DefineEndOfMacro TColCol_BeforeTypedef TColCol TChar TCBrace TBang TAndLog TAnd LDots EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production using_directive -> Tusing Tnamespace qualified_namespace_spec TPtVirg

State 11:
## Known stack suffix:
## option(TColCol)
## LR(1) items:
qualified_namespace_spec -> option(TColCol) . optl(nested_name_specifier) TIdent [ TPtVirg ]
## Transitions:
-- On TIdent_TemplatenameInQualifier shift to state 12
-- On TIdent_ClassnameInQualifier shift to state 112
-- On optl(nested_name_specifier) shift to state 963
-- On nested_name_specifier shift to state 173
-- On class_or_namespace_name_for_qualifier shift to state 170
## Reductions:
-- On TIdent
--   reduce production optl(nested_name_specifier) ->

State 12:
## Known stack suffix:
## TIdent_TemplatenameInQualifier
## LR(1) items:
class_or_namespace_name_for_qualifier -> TIdent_TemplatenameInQualifier . TInf_Template listc(template_argument) TSup_Template [ TColCol ]
## Transitions:
-- On TInf_Template shift to state 13
## Reductions:

State 13:
## Known stack suffix:
## TIdent_TemplatenameInQualifier TInf_Template
## LR(1) items:
class_or_namespace_name_for_qualifier -> TIdent_TemplatenameInQualifier TInf_Template . listc(template_argument) TSup_Template [ TColCol ]
## Transitions:
-- On Twchar_t_Constr shift to state 14
-- On Twchar_t shift to state 1
-- On Tvolatile shift to state 2
-- On Tvoid shift to state 3
-- On Tunsigned shift to state 15
-- On Tunion shift to state 16
-- On Ttypeof shift to state 17
-- On Ttypename shift to state 19
-- On Ttypeid shift to state 23
-- On Ttrue shift to state 25
-- On Tthrow shift to state 47
-- On Tthis shift to state 26
-- On Tstruct shift to state 27
-- On Tstatic_cast shift to state 28
-- On Tsizeof shift to state 29
-- On Tsigned shift to state 30
-- On Tshort_Constr shift to state 31
-- On Tshort shift to state 32
-- On Trestrict shift to state 65
-- On Treinterpret_cast shift to state 33
-- On Toperator shift to state 34
-- On Tnullptr shift to state 48
-- On Tnull shift to state 49
-- On Tlong_Constr shift to state 50
-- On Tlong shift to state 38
-- On Tint_Constr shift to state 51
-- On Tint shift to state 39
-- On Tfloat_Constr shift to state 52
-- On Tfloat shift to state 40
-- On Tfalse shift to state 53
-- On Tenum shift to state 66
-- On Tdynamic_cast shift to state 54
-- On Tdouble_Constr shift to state 55
-- On Tdouble shift to state 41
-- On Tdecltype shift to state 45
-- On Tconst_cast shift to state 56
-- On Tconst shift to state 76
-- On Tclass shift to state 77
-- On Tchar_Constr shift to state 57
-- On Tchar shift to state 58
-- On Tbool_Constr shift to state 59
-- On Tbool shift to state 60
-- On TTilde shift to state 61
-- On TString shift to state 62
-- On TPlus shift to state 63
-- On TOPar shift to state 64
-- On TOCro_Lambda shift to state 78
-- On TMul shift to state 88
-- On TMinus shift to state 89
-- On TInt shift to state 90
-- On TInc shift to state 91
-- On TIdent_TypedefConstr shift to state 106
-- On TIdent_Typedef shift to state 20
-- On TIdent_TemplatenameInQualifier_BeforeTypedef shift to state 21
-- On TIdent_TemplatenameInQualifier shift to state 12
-- On TIdent_Templatename shift to state 108
-- On TIdent_MacroString shift to state 110
-- On TIdent_ClassnameInQualifier_BeforeTypedef shift to state 111
-- On TIdent_ClassnameInQualifier shift to state 112
-- On TIdent shift to state 113
-- On TFloat shift to state 116
-- On TDec shift to state 117
-- On TColCol_BeforeTypedef shift to state 118
-- On TColCol shift to state 128
-- On TChar shift to state 174
-- On TBang shift to state 175
-- On TAndLog shift to state 176
-- On TAnd shift to state 177
-- On LDots shift to state 178
-- On unqualified_id shift to state 179
-- On unary_op shift to state 180
-- On unary_expr shift to state 181
-- On type_spec shift to state 204
-- On type_name shift to state 182
-- On type_id shift to state 892
-- On type_cplusplus_id shift to state 183
-- On template_id shift to state 120
-- On template_argument shift to state 893
-- On string_elem shift to state 184
-- On spec_qualif_list shift to state 225
-- On simple_type_specifier shift to state 266
-- On shift_expr shift to state 217
-- On relational_expr shift to state 229
-- On qualified_id shift to state 191
-- On primary_expr shift to state 192
-- On primary_cplusplus_id shift to state 193
-- On postfix_expr shift to state 194
-- On pm_expr shift to state 219
-- On option(TColCol) shift to state 221
-- On operator_function_id shift to state 168
-- On new_expr shift to state 233
-- On nested_name_specifier2 shift to state 207
-- On nested_name_specifier shift to state 165
-- On multiplicative_expr shift to state 234
-- On logical_or_expr shift to state 246
-- On logical_and_expr shift to state 250
-- On literal shift to state 238
-- On listc(template_argument) shift to state 961
-- On lambda_introducer shift to state 239
-- On inclusive_or_expr shift to state 272
-- On id_expression shift to state 241
-- On exclusive_or_expr shift to state 273
-- On equality_expr shift to state 256
-- On enum_specifier shift to state 209
-- On enum_name_or_typedef_name_or_simple_class_name shift to state 123
-- On enum_head shift to state 210
-- On elaborated_type_specifier shift to state 274
-- On delete_expr shift to state 242
-- On decltype_specifier shift to state 243
-- On cv_qualif shift to state 275
-- On cpp_cast_operator shift to state 244
-- On conversion_function_id shift to state 169
-- On cond_expr shift to state 330
-- On class_specifier shift to state 277
-- On class_or_namespace_name_for_qualifier2 shift to state 124
-- On class_or_namespace_name_for_qualifier shift to state 170
-- On class_key shift to state 278
-- On class_head shift to state 301
-- On cast_operator_expr shift to state 261
-- On cast_expr shift to state 331
-- On cast_constructor_expr shift to state 263
-- On basic_type_2 shift to state 264
-- On assign_expr shift to state 898
-- On and_expr shift to state 334
-- On additive_expr shift to state 341
## Reductions:
-- On Tnew Tdelete
--   reduce production option(TColCol) ->

State 14:
## Known stack suffix:
## Twchar_t_Constr
## LR(1) items:
basic_type_2 -> Twchar_t_Constr . [ TOPar ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production basic_type_2 -> Twchar_t_Constr

State 15:
## Known stack suffix:
## Tunsigned
## LR(1) items:
simple_type_specifier -> Tunsigned . [ Twchar_t Tvolatile Tvoid Tvirtual Tunsigned Tunion Ttypeof Ttypename Ttypedef Tthread_local Tstruct Tstatic Tsigned Tshort Trestrict Tregister Toperator Tmutable Tlong Tint Tinline Tfriend Tfloat Textern Tenum Tdouble Tdecltype Tconstexpr Tconst Tclass Tchar Tbool Tauto Tasm TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtrOpStar TPtrOp TPtVirg TPlus TOrLog TOr TOPar_CplusplusInit TOPar TOCro TOBrace TNotEq TMul TMod TMinus TInfEq TInf TInc TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TIdent TEqEq TEq TEllipsis TDotStar TDot TDiv TDec TCommentNewline_DefineEndOfMacro TComma TColCol_BeforeTypedef TColCol TCol TCPar_EOL TCPar TCCro TCBrace TAssign TAndLog TAnd RDots EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production simple_type_specifier -> Tunsigned

State 16:
## Known stack suffix:
## Tunion
## LR(1) items:
class_key -> Tunion . [ TOBrace TIdent_Typedef TIdent_TemplatenameInQualifier TIdent_ClassnameInQualifier TIdent ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production class_key -> Tunion

State 17:
## Known stack suffix:
## Ttypeof
## LR(1) items:
simple_type_specifier -> Ttypeof . TOPar assign_expr TCPar [ Twchar_t Tvolatile Tvoid Tvirtual Tunsigned Tunion Ttypeof Ttypename Ttypedef Tthread_local Tstruct Tstatic Tsigned Tshort Trestrict Tregister Toperator Tmutable Tlong Tint Tinline Tfriend Tfloat Textern Tenum Tdouble Tdecltype Tconstexpr Tconst Tclass Tchar Tbool Tauto Tasm TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtrOpStar TPtrOp TPtVirg TPlus TOrLog TOr TOPar_CplusplusInit TOPar TOCro TOBrace TNotEq TMul TMod TMinus TInfEq TInf TInc TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TIdent TEqEq TEq TEllipsis TDotStar TDot TDiv TDec TCommentNewline_DefineEndOfMacro TComma TColCol_BeforeTypedef TColCol TCol TCPar_EOL TCPar TCCro TCBrace TAssign TAndLog TAnd RDots EOF ]
simple_type_specifier -> Ttypeof . TOPar type_id TCPar [ Twchar_t Tvolatile Tvoid Tvirtual Tunsigned Tunion Ttypeof Ttypename Ttypedef Tthread_local Tstruct Tstatic Tsigned Tshort Trestrict Tregister Toperator Tmutable Tlong Tint Tinline Tfriend Tfloat Textern Tenum Tdouble Tdecltype Tconstexpr Tconst Tclass Tchar Tbool Tauto Tasm TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtrOpStar TPtrOp TPtVirg TPlus TOrLog TOr TOPar_CplusplusInit TOPar TOCro TOBrace TNotEq TMul TMod TMinus TInfEq TInf TInc TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TIdent TEqEq TEq TEllipsis TDotStar TDot TDiv TDec TCommentNewline_DefineEndOfMacro TComma TColCol_BeforeTypedef TColCol TCol TCPar_EOL TCPar TCCro TCBrace TAssign TAndLog TAnd RDots EOF ]
## Transitions:
-- On TOPar shift to state 18
## Reductions:

State 18:
## Known stack suffix:
## Ttypeof TOPar
## LR(1) items:
simple_type_specifier -> Ttypeof TOPar . assign_expr TCPar [ Twchar_t Tvolatile Tvoid Tvirtual Tunsigned Tunion Ttypeof Ttypename Ttypedef Tthread_local Tstruct Tstatic Tsigned Tshort Trestrict Tregister Toperator Tmutable Tlong Tint Tinline Tfriend Tfloat Textern Tenum Tdouble Tdecltype Tconstexpr Tconst Tclass Tchar Tbool Tauto Tasm TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtrOpStar TPtrOp TPtVirg TPlus TOrLog TOr TOPar_CplusplusInit TOPar TOCro TOBrace TNotEq TMul TMod TMinus TInfEq TInf TInc TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TIdent TEqEq TEq TEllipsis TDotStar TDot TDiv TDec TCommentNewline_DefineEndOfMacro TComma TColCol_BeforeTypedef TColCol TCol TCPar_EOL TCPar TCCro TCBrace TAssign TAndLog TAnd RDots EOF ]
simple_type_specifier -> Ttypeof TOPar . type_id TCPar [ Twchar_t Tvolatile Tvoid Tvirtual Tunsigned Tunion Ttypeof Ttypename Ttypedef Tthread_local Tstruct Tstatic Tsigned Tshort Trestrict Tregister Toperator Tmutable Tlong Tint Tinline Tfriend Tfloat Textern Tenum Tdouble Tdecltype Tconstexpr Tconst Tclass Tchar Tbool Tauto Tasm TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtrOpStar TPtrOp TPtVirg TPlus TOrLog TOr TOPar_CplusplusInit TOPar TOCro TOBrace TNotEq TMul TMod TMinus TInfEq TInf TInc TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TIdent TEqEq TEq TEllipsis TDotStar TDot TDiv TDec TCommentNewline_DefineEndOfMacro TComma TColCol_BeforeTypedef TColCol TCol TCPar_EOL TCPar TCCro TCBrace TAssign TAndLog TAnd RDots EOF ]
## Transitions:
-- On Twchar_t_Constr shift to state 14
-- On Twchar_t shift to state 1
-- On Tvolatile shift to state 2
-- On Tvoid shift to state 3
-- On Tunsigned shift to state 15
-- On Tunion shift to state 16
-- On Ttypeof shift to state 17
-- On Ttypename shift to state 19
-- On Ttypeid shift to state 23
-- On Ttrue shift to state 25
-- On Tthrow shift to state 47
-- On Tthis shift to state 26
-- On Tstruct shift to state 27
-- On Tstatic_cast shift to state 28
-- On Tsizeof shift to state 29
-- On Tsigned shift to state 30
-- On Tshort_Constr shift to state 31
-- On Tshort shift to state 32
-- On Trestrict shift to state 65
-- On Treinterpret_cast shift to state 33
-- On Toperator shift to state 34
-- On Tnullptr shift to state 48
-- On Tnull shift to state 49
-- On Tlong_Constr shift to state 50
-- On Tlong shift to state 38
-- On Tint_Constr shift to state 51
-- On Tint shift to state 39
-- On Tfloat_Constr shift to state 52
-- On Tfloat shift to state 40
-- On Tfalse shift to state 53
-- On Tenum shift to state 66
-- On Tdynamic_cast shift to state 54
-- On Tdouble_Constr shift to state 55
-- On Tdouble shift to state 41
-- On Tdecltype shift to state 45
-- On Tconst_cast shift to state 56
-- On Tconst shift to state 76
-- On Tclass shift to state 77
-- On Tchar_Constr shift to state 57
-- On Tchar shift to state 58
-- On Tbool_Constr shift to state 59
-- On Tbool shift to state 60
-- On TTilde shift to state 61
-- On TString shift to state 62
-- On TPlus shift to state 63
-- On TOPar shift to state 64
-- On TOCro_Lambda shift to state 78
-- On TMul shift to state 88
-- On TMinus shift to state 89
-- On TInt shift to state 90
-- On TInc shift to state 91
-- On TIdent_TypedefConstr shift to state 106
-- On TIdent_Typedef shift to state 20
-- On TIdent_TemplatenameInQualifier_BeforeTypedef shift to state 21
-- On TIdent_TemplatenameInQualifier shift to state 12
-- On TIdent_Templatename shift to state 108
-- On TIdent_MacroString shift to state 110
-- On TIdent_ClassnameInQualifier_BeforeTypedef shift to state 111
-- On TIdent_ClassnameInQualifier shift to state 112
-- On TIdent shift to state 113
-- On TFloat shift to state 116
-- On TDec shift to state 117
-- On TColCol_BeforeTypedef shift to state 118
-- On TColCol shift to state 128
-- On TChar shift to state 174
-- On TBang shift to state 175
-- On TAndLog shift to state 176
-- On TAnd shift to state 177
-- On LDots shift to state 178
-- On unqualified_id shift to state 179
-- On unary_op shift to state 180
-- On unary_expr shift to state 181
-- On type_spec shift to state 204
-- On type_name shift to state 182
-- On type_id shift to state 957
-- On type_cplusplus_id shift to state 183
-- On template_id shift to state 120
-- On string_elem shift to state 184
-- On spec_qualif_list shift to state 225
-- On simple_type_specifier shift to state 266
-- On shift_expr shift to state 217
-- On relational_expr shift to state 229
-- On qualified_id shift to state 191
-- On primary_expr shift to state 192
-- On primary_cplusplus_id shift to state 193
-- On postfix_expr shift to state 194
-- On pm_expr shift to state 219
-- On option(TColCol) shift to state 221
-- On operator_function_id shift to state 168
-- On new_expr shift to state 233
-- On nested_name_specifier2 shift to state 207
-- On nested_name_specifier shift to state 165
-- On multiplicative_expr shift to state 234
-- On logical_or_expr shift to state 246
-- On logical_and_expr shift to state 250
-- On literal shift to state 238
-- On lambda_introducer shift to state 239
-- On inclusive_or_expr shift to state 272
-- On id_expression shift to state 241
-- On exclusive_or_expr shift to state 273
-- On equality_expr shift to state 256
-- On enum_specifier shift to state 209
-- On enum_name_or_typedef_name_or_simple_class_name shift to state 123
-- On enum_head shift to state 210
-- On elaborated_type_specifier shift to state 274
-- On delete_expr shift to state 242
-- On decltype_specifier shift to state 243
-- On cv_qualif shift to state 275
-- On cpp_cast_operator shift to state 244
-- On conversion_function_id shift to state 169
-- On cond_expr shift to state 330
-- On class_specifier shift to state 277
-- On class_or_namespace_name_for_qualifier2 shift to state 124
-- On class_or_namespace_name_for_qualifier shift to state 170
-- On class_key shift to state 278
-- On class_head shift to state 301
-- On cast_operator_expr shift to state 261
-- On cast_expr shift to state 331
-- On cast_constructor_expr shift to state 263
-- On basic_type_2 shift to state 264
-- On assign_expr shift to state 959
-- On and_expr shift to state 334
-- On additive_expr shift to state 341
## Reductions:
-- On Tnew Tdelete
--   reduce production option(TColCol) ->

State 19:
## Known stack suffix:
## Ttypename
## LR(1) items:
elaborated_type_specifier -> Ttypename . type_cplusplus_id [ Twchar_t Tvolatile Tvoid Tvirtual Tunsigned Tunion Ttypeof Ttypename Ttypedef Tthread_local Tstruct Tstatic Tsigned Tshort Trestrict Tregister Toperator Tmutable Tlong Tint Tinline Tfriend Tfloat Textern Tenum Tdouble Tdecltype Tconstexpr Tconst Tclass Tchar Tbool Tauto TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtrOpStar TPtVirg TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMod TMinus TInfEq TInf TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TIdent TEqEq TEq TEllipsis TDotStar TDiv TCommentNewline_DefineEndOfMacro TComma TColCol_BeforeTypedef TColCol TCol TCPar_EOL TCPar TCCro TCBrace TAssign TAndLog TAnd RDots EOF ]
## Transitions:
-- On TIdent_Typedef shift to state 20
-- On TIdent_TemplatenameInQualifier_BeforeTypedef shift to state 21
-- On TIdent_Templatename shift to state 108
-- On TIdent_ClassnameInQualifier_BeforeTypedef shift to state 111
-- On TColCol_BeforeTypedef shift to state 118
-- On type_name shift to state 182
-- On type_cplusplus_id shift to state 956
-- On template_id shift to state 120
-- On nested_name_specifier2 shift to state 207
-- On enum_name_or_typedef_name_or_simple_class_name shift to state 123
-- On class_or_namespace_name_for_qualifier2 shift to state 124
## Reductions:

State 20:
## Known stack suffix:
## TIdent_Typedef
## LR(1) items:
enum_name_or_typedef_name_or_simple_class_name -> TIdent_Typedef . [ Twchar_t Tvolatile Tvoid Tvirtual Tunsigned Tunion Ttypeof Ttypename Ttypedef Tthread_local Tstruct Tstatic Tsigned Tshort Trestrict Tregister Toperator Tmutable Tlong Tint Tinline Tfriend Tfloat Textern Tenum Tdouble Tdecltype Tconstexpr Tconst Tclass Tchar Tbool Tauto Tasm TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtrOpStar TPtrOp TPtVirg TPlus TOrLog TOr TOPar_CplusplusInit TOPar TOCro TOBrace TNotEq TMul TMod TMinus TInfEq TInf TInc TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TIdent TEqEq TEq TEllipsis TDotStar TDot TDiv TDec TCommentNewline_DefineEndOfMacro TComma TColCol_BeforeTypedef TColCol TCol TCPar_EOL TCPar TCCro TCBrace TAssign TAndLog TAnd RDots EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production enum_name_or_typedef_name_or_simple_class_name -> TIdent_Typedef

State 21:
## Known stack suffix:
## TIdent_TemplatenameInQualifier_BeforeTypedef
## LR(1) items:
class_or_namespace_name_for_qualifier2 -> TIdent_TemplatenameInQualifier_BeforeTypedef . TInf_Template listc(template_argument) TSup_Template [ TColCol_BeforeTypedef ]
## Transitions:
-- On TInf_Template shift to state 22
## Reductions:

State 22:
## Known stack suffix:
## TIdent_TemplatenameInQualifier_BeforeTypedef TInf_Template
## LR(1) items:
class_or_namespace_name_for_qualifier2 -> TIdent_TemplatenameInQualifier_BeforeTypedef TInf_Template . listc(template_argument) TSup_Template [ TColCol_BeforeTypedef ]
## Transitions:
-- On Twchar_t_Constr shift to state 14
-- On Twchar_t shift to state 1
-- On Tvolatile shift to state 2
-- On Tvoid shift to state 3
-- On Tunsigned shift to state 15
-- On Tunion shift to state 16
-- On Ttypeof shift to state 17
-- On Ttypename shift to state 19
-- On Ttypeid shift to state 23
-- On Ttrue shift to state 25
-- On Tthrow shift to state 47
-- On Tthis shift to state 26
-- On Tstruct shift to state 27
-- On Tstatic_cast shift to state 28
-- On Tsizeof shift to state 29
-- On Tsigned shift to state 30
-- On Tshort_Constr shift to state 31
-- On Tshort shift to state 32
-- On Trestrict shift to state 65
-- On Treinterpret_cast shift to state 33
-- On Toperator shift to state 34
-- On Tnullptr shift to state 48
-- On Tnull shift to state 49
-- On Tlong_Constr shift to state 50
-- On Tlong shift to state 38
-- On Tint_Constr shift to state 51
-- On Tint shift to state 39
-- On Tfloat_Constr shift to state 52
-- On Tfloat shift to state 40
-- On Tfalse shift to state 53
-- On Tenum shift to state 66
-- On Tdynamic_cast shift to state 54
-- On Tdouble_Constr shift to state 55
-- On Tdouble shift to state 41
-- On Tdecltype shift to state 45
-- On Tconst_cast shift to state 56
-- On Tconst shift to state 76
-- On Tclass shift to state 77
-- On Tchar_Constr shift to state 57
-- On Tchar shift to state 58
-- On Tbool_Constr shift to state 59
-- On Tbool shift to state 60
-- On TTilde shift to state 61
-- On TString shift to state 62
-- On TPlus shift to state 63
-- On TOPar shift to state 64
-- On TOCro_Lambda shift to state 78
-- On TMul shift to state 88
-- On TMinus shift to state 89
-- On TInt shift to state 90
-- On TInc shift to state 91
-- On TIdent_TypedefConstr shift to state 106
-- On TIdent_Typedef shift to state 20
-- On TIdent_TemplatenameInQualifier_BeforeTypedef shift to state 21
-- On TIdent_TemplatenameInQualifier shift to state 12
-- On TIdent_Templatename shift to state 108
-- On TIdent_MacroString shift to state 110
-- On TIdent_ClassnameInQualifier_BeforeTypedef shift to state 111
-- On TIdent_ClassnameInQualifier shift to state 112
-- On TIdent shift to state 113
-- On TFloat shift to state 116
-- On TDec shift to state 117
-- On TColCol_BeforeTypedef shift to state 118
-- On TColCol shift to state 128
-- On TChar shift to state 174
-- On TBang shift to state 175
-- On TAndLog shift to state 176
-- On TAnd shift to state 177
-- On LDots shift to state 178
-- On unqualified_id shift to state 179
-- On unary_op shift to state 180
-- On unary_expr shift to state 181
-- On type_spec shift to state 204
-- On type_name shift to state 182
-- On type_id shift to state 892
-- On type_cplusplus_id shift to state 183
-- On template_id shift to state 120
-- On template_argument shift to state 893
-- On string_elem shift to state 184
-- On spec_qualif_list shift to state 225
-- On simple_type_specifier shift to state 266
-- On shift_expr shift to state 217
-- On relational_expr shift to state 229
-- On qualified_id shift to state 191
-- On primary_expr shift to state 192
-- On primary_cplusplus_id shift to state 193
-- On postfix_expr shift to state 194
-- On pm_expr shift to state 219
-- On option(TColCol) shift to state 221
-- On operator_function_id shift to state 168
-- On new_expr shift to state 233
-- On nested_name_specifier2 shift to state 207
-- On nested_name_specifier shift to state 165
-- On multiplicative_expr shift to state 234
-- On logical_or_expr shift to state 246
-- On logical_and_expr shift to state 250
-- On literal shift to state 238
-- On listc(template_argument) shift to state 954
-- On lambda_introducer shift to state 239
-- On inclusive_or_expr shift to state 272
-- On id_expression shift to state 241
-- On exclusive_or_expr shift to state 273
-- On equality_expr shift to state 256
-- On enum_specifier shift to state 209
-- On enum_name_or_typedef_name_or_simple_class_name shift to state 123
-- On enum_head shift to state 210
-- On elaborated_type_specifier shift to state 274
-- On delete_expr shift to state 242
-- On decltype_specifier shift to state 243
-- On cv_qualif shift to state 275
-- On cpp_cast_operator shift to state 244
-- On conversion_function_id shift to state 169
-- On cond_expr shift to state 330
-- On class_specifier shift to state 277
-- On class_or_namespace_name_for_qualifier2 shift to state 124
-- On class_or_namespace_name_for_qualifier shift to state 170
-- On class_key shift to state 278
-- On class_head shift to state 301
-- On cast_operator_expr shift to state 261
-- On cast_expr shift to state 331
-- On cast_constructor_expr shift to state 263
-- On basic_type_2 shift to state 264
-- On assign_expr shift to state 898
-- On and_expr shift to state 334
-- On additive_expr shift to state 341
## Reductions:
-- On Tnew Tdelete
--   reduce production option(TColCol) ->

State 23:
## Known stack suffix:
## Ttypeid
## LR(1) items:
postfix_expr -> Ttypeid . TOPar unary_expr TCPar [ TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtrOpStar TPtrOp TPtVirg TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMod TMinus TInfEq TInf TInc TEqEq TEq TEllipsis TDotStar TDot TDiv TDec TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAssign TAndLog TAnd RDots EOF ]
postfix_expr -> Ttypeid . TOPar type_id TCPar [ TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtrOpStar TPtrOp TPtVirg TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMod TMinus TInfEq TInf TInc TEqEq TEq TEllipsis TDotStar TDot TDiv TDec TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAssign TAndLog TAnd RDots EOF ]
## Transitions:
-- On TOPar shift to state 24
## Reductions:

State 24:
## Known stack suffix:
## Ttypeid TOPar
## LR(1) items:
postfix_expr -> Ttypeid TOPar . unary_expr TCPar [ TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtrOpStar TPtrOp TPtVirg TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMod TMinus TInfEq TInf TInc TEqEq TEq TEllipsis TDotStar TDot TDiv TDec TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAssign TAndLog TAnd RDots EOF ]
postfix_expr -> Ttypeid TOPar . type_id TCPar [ TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtrOpStar TPtrOp TPtVirg TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMod TMinus TInfEq TInf TInc TEqEq TEq TEllipsis TDotStar TDot TDiv TDec TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAssign TAndLog TAnd RDots EOF ]
## Transitions:
-- On Twchar_t_Constr shift to state 14
-- On Twchar_t shift to state 1
-- On Tvolatile shift to state 2
-- On Tvoid shift to state 3
-- On Tunsigned shift to state 15
-- On Tunion shift to state 16
-- On Ttypeof shift to state 17
-- On Ttypename shift to state 19
-- On Ttypeid shift to state 23
-- On Ttrue shift to state 25
-- On Tthis shift to state 26
-- On Tstruct shift to state 27
-- On Tstatic_cast shift to state 28
-- On Tsizeof shift to state 29
-- On Tsigned shift to state 30
-- On Tshort_Constr shift to state 31
-- On Tshort shift to state 32
-- On Trestrict shift to state 65
-- On Treinterpret_cast shift to state 33
-- On Toperator shift to state 34
-- On Tnullptr shift to state 48
-- On Tnull shift to state 49
-- On Tlong_Constr shift to state 50
-- On Tlong shift to state 38
-- On Tint_Constr shift to state 51
-- On Tint shift to state 39
-- On Tfloat_Constr shift to state 52
-- On Tfloat shift to state 40
-- On Tfalse shift to state 53
-- On Tenum shift to state 66
-- On Tdynamic_cast shift to state 54
-- On Tdouble_Constr shift to state 55
-- On Tdouble shift to state 41
-- On Tdecltype shift to state 45
-- On Tconst_cast shift to state 56
-- On Tconst shift to state 76
-- On Tclass shift to state 77
-- On Tchar_Constr shift to state 57
-- On Tchar shift to state 58
-- On Tbool_Constr shift to state 59
-- On Tbool shift to state 60
-- On TTilde shift to state 61
-- On TString shift to state 62
-- On TPlus shift to state 63
-- On TOPar shift to state 92
-- On TOCro_Lambda shift to state 78
-- On TMul shift to state 88
-- On TMinus shift to state 89
-- On TInt shift to state 90
-- On TInc shift to state 91
-- On TIdent_TypedefConstr shift to state 106
-- On TIdent_Typedef shift to state 20
-- On TIdent_TemplatenameInQualifier_BeforeTypedef shift to state 21
-- On TIdent_TemplatenameInQualifier shift to state 12
-- On TIdent_Templatename shift to state 108
-- On TIdent_MacroString shift to state 110
-- On TIdent_ClassnameInQualifier_BeforeTypedef shift to state 111
-- On TIdent_ClassnameInQualifier shift to state 112
-- On TIdent shift to state 113
-- On TFloat shift to state 116
-- On TDec shift to state 117
-- On TColCol_BeforeTypedef shift to state 118
-- On TColCol shift to state 128
-- On TChar shift to state 174
-- On TBang shift to state 175
-- On TAndLog shift to state 176
-- On TAnd shift to state 177
-- On LDots shift to state 178
-- On unqualified_id shift to state 179
-- On unary_op shift to state 180
-- On unary_expr shift to state 950
-- On type_spec shift to state 204
-- On type_name shift to state 182
-- On type_id shift to state 952
-- On type_cplusplus_id shift to state 183
-- On template_id shift to state 120
-- On string_elem shift to state 184
-- On spec_qualif_list shift to state 225
-- On simple_type_specifier shift to state 266
-- On qualified_id shift to state 191
-- On primary_expr shift to state 192
-- On primary_cplusplus_id shift to state 193
-- On postfix_expr shift to state 194
-- On option(TColCol) shift to state 221
-- On operator_function_id shift to state 168
-- On new_expr shift to state 233
-- On nested_name_specifier2 shift to state 207
-- On nested_name_specifier shift to state 165
-- On literal shift to state 238
-- On lambda_introducer shift to state 239
-- On id_expression shift to state 241
-- On enum_specifier shift to state 209
-- On enum_name_or_typedef_name_or_simple_class_name shift to state 123
-- On enum_head shift to state 210
-- On elaborated_type_specifier shift to state 274
-- On delete_expr shift to state 242
-- On decltype_specifier shift to state 243
-- On cv_qualif shift to state 275
-- On cpp_cast_operator shift to state 244
-- On conversion_function_id shift to state 169
-- On class_specifier shift to state 277
-- On class_or_namespace_name_for_qualifier2 shift to state 124
-- On class_or_namespace_name_for_qualifier shift to state 170
-- On class_key shift to state 278
-- On class_head shift to state 301
-- On cast_operator_expr shift to state 261
-- On cast_constructor_expr shift to state 263
-- On basic_type_2 shift to state 264
## Reductions:
-- On Tnew Tdelete
--   reduce production option(TColCol) ->

State 25:
## Known stack suffix:
## Ttrue
## LR(1) items:
literal -> Ttrue . [ TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtrOpStar TPtrOp TPtVirg TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMod TMinus TInfEq TInf TInc TEqEq TEq TEllipsis TDotStar TDot TDiv TDec TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAssign TAndLog TAnd RDots EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production literal -> Ttrue

State 26:
## Known stack suffix:
## Tthis
## LR(1) items:
primary_expr -> Tthis . [ TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtrOpStar TPtrOp TPtVirg TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMod TMinus TInfEq TInf TInc TEqEq TEq TEllipsis TDotStar TDot TDiv TDec TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAssign TAndLog TAnd RDots EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production primary_expr -> Tthis

State 27:
## Known stack suffix:
## Tstruct
## LR(1) items:
class_key -> Tstruct . [ TOBrace TIdent_Typedef TIdent_TemplatenameInQualifier TIdent_ClassnameInQualifier TIdent ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production class_key -> Tstruct

State 28:
## Known stack suffix:
## Tstatic_cast
## LR(1) items:
cpp_cast_operator -> Tstatic_cast . [ TOPar TInf_Template ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production cpp_cast_operator -> Tstatic_cast

State 29:
## Known stack suffix:
## Tsizeof
## LR(1) items:
unary_expr -> Tsizeof . unary_expr [ TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtrOpStar TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TEq TEllipsis TDotStar TDiv TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAssign TAndLog TAnd RDots EOF ]
unary_expr -> Tsizeof . TOPar type_id TCPar [ TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtrOpStar TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TEq TEllipsis TDotStar TDiv TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAssign TAndLog TAnd RDots EOF ]
## Transitions:
-- On Twchar_t_Constr shift to state 14
-- On Twchar_t shift to state 1
-- On Tvoid shift to state 3
-- On Tunsigned shift to state 15
-- On Ttypeof shift to state 17
-- On Ttypeid shift to state 23
-- On Ttrue shift to state 25
-- On Tthis shift to state 26
-- On Tstatic_cast shift to state 28
-- On Tsizeof shift to state 29
-- On Tsigned shift to state 30
-- On Tshort_Constr shift to state 31
-- On Tshort shift to state 32
-- On Treinterpret_cast shift to state 33
-- On Toperator shift to state 34
-- On Tnullptr shift to state 48
-- On Tnull shift to state 49
-- On Tlong_Constr shift to state 50
-- On Tlong shift to state 38
-- On Tint_Constr shift to state 51
-- On Tint shift to state 39
-- On Tfloat_Constr shift to state 52
-- On Tfloat shift to state 40
-- On Tfalse shift to state 53
-- On Tdynamic_cast shift to state 54
-- On Tdouble_Constr shift to state 55
-- On Tdouble shift to state 41
-- On Tdecltype shift to state 45
-- On Tconst_cast shift to state 56
-- On Tchar_Constr shift to state 57
-- On Tchar shift to state 58
-- On Tbool_Constr shift to state 59
-- On Tbool shift to state 60
-- On TTilde shift to state 61
-- On TString shift to state 62
-- On TPlus shift to state 63
-- On TOPar shift to state 946
-- On TOCro_Lambda shift to state 78
-- On TMul shift to state 88
-- On TMinus shift to state 89
-- On TInt shift to state 90
-- On TInc shift to state 91
-- On TIdent_TypedefConstr shift to state 106
-- On TIdent_Typedef shift to state 20
-- On TIdent_TemplatenameInQualifier_BeforeTypedef shift to state 21
-- On TIdent_TemplatenameInQualifier shift to state 12
-- On TIdent_Templatename shift to state 108
-- On TIdent_MacroString shift to state 110
-- On TIdent_ClassnameInQualifier_BeforeTypedef shift to state 111
-- On TIdent_ClassnameInQualifier shift to state 112
-- On TIdent shift to state 113
-- On TFloat shift to state 116
-- On TDec shift to state 117
-- On TColCol_BeforeTypedef shift to state 118
-- On TColCol shift to state 128
-- On TChar shift to state 174
-- On TBang shift to state 175
-- On TAndLog shift to state 176
-- On TAnd shift to state 177
-- On LDots shift to state 178
-- On unqualified_id shift to state 179
-- On unary_op shift to state 180
-- On unary_expr shift to state 949
-- On type_name shift to state 182
-- On type_cplusplus_id shift to state 183
-- On template_id shift to state 120
-- On string_elem shift to state 184
-- On simple_type_specifier shift to state 189
-- On qualified_id shift to state 191
-- On primary_expr shift to state 192
-- On primary_cplusplus_id shift to state 193
-- On postfix_expr shift to state 194
-- On option(TColCol) shift to state 221
-- On operator_function_id shift to state 168
-- On new_expr shift to state 233
-- On nested_name_specifier2 shift to state 207
-- On nested_name_specifier shift to state 165
-- On literal shift to state 238
-- On lambda_introducer shift to state 239
-- On id_expression shift to state 241
-- On enum_name_or_typedef_name_or_simple_class_name shift to state 123
-- On delete_expr shift to state 242
-- On decltype_specifier shift to state 243
-- On cpp_cast_operator shift to state 244
-- On conversion_function_id shift to state 169
-- On class_or_namespace_name_for_qualifier2 shift to state 124
-- On class_or_namespace_name_for_qualifier shift to state 170
-- On cast_operator_expr shift to state 261
-- On cast_constructor_expr shift to state 263
-- On basic_type_2 shift to state 264
## Reductions:
-- On Tnew Tdelete
--   reduce production option(TColCol) ->

State 30:
## Known stack suffix:
## Tsigned
## LR(1) items:
simple_type_specifier -> Tsigned . [ Twchar_t Tvolatile Tvoid Tvirtual Tunsigned Tunion Ttypeof Ttypename Ttypedef Tthread_local Tstruct Tstatic Tsigned Tshort Trestrict Tregister Toperator Tmutable Tlong Tint Tinline Tfriend Tfloat Textern Tenum Tdouble Tdecltype Tconstexpr Tconst Tclass Tchar Tbool Tauto Tasm TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtrOpStar TPtrOp TPtVirg TPlus TOrLog TOr TOPar_CplusplusInit TOPar TOCro TOBrace TNotEq TMul TMod TMinus TInfEq TInf TInc TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TIdent TEqEq TEq TEllipsis TDotStar TDot TDiv TDec TCommentNewline_DefineEndOfMacro TComma TColCol_BeforeTypedef TColCol TCol TCPar_EOL TCPar TCCro TCBrace TAssign TAndLog TAnd RDots EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production simple_type_specifier -> Tsigned

State 31:
## Known stack suffix:
## Tshort_Constr
## LR(1) items:
basic_type_2 -> Tshort_Constr . [ TOPar ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production basic_type_2 -> Tshort_Constr

State 32:
## Known stack suffix:
## Tshort
## LR(1) items:
simple_type_specifier -> Tshort . [ Twchar_t Tvolatile Tvoid Tvirtual Tunsigned Tunion Ttypeof Ttypename Ttypedef Tthread_local Tstruct Tstatic Tsigned Tshort Trestrict Tregister Toperator Tmutable Tlong Tint Tinline Tfriend Tfloat Textern Tenum Tdouble Tdecltype Tconstexpr Tconst Tclass Tchar Tbool Tauto Tasm TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtrOpStar TPtrOp TPtVirg TPlus TOrLog TOr TOPar_CplusplusInit TOPar TOCro TOBrace TNotEq TMul TMod TMinus TInfEq TInf TInc TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TIdent TEqEq TEq TEllipsis TDotStar TDot TDiv TDec TCommentNewline_DefineEndOfMacro TComma TColCol_BeforeTypedef TColCol TCol TCPar_EOL TCPar TCCro TCBrace TAssign TAndLog TAnd RDots EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production simple_type_specifier -> Tshort

State 33:
## Known stack suffix:
## Treinterpret_cast
## LR(1) items:
cpp_cast_operator -> Treinterpret_cast . [ TOPar TInf_Template ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production cpp_cast_operator -> Treinterpret_cast

State 34:
## Known stack suffix:
## Toperator
## LR(1) items:
conversion_function_id -> Toperator . conversion_type_id [ Tasm TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtrOpStar TPtrOp TPtVirg TPlus TOrLog TOr TOPar_CplusplusInit TOPar TOCro TOBrace TNotEq TMul TMod TMinus TInfEq TInf TInc TEqEq TEq TEllipsis TDotStar TDot TDiv TDec TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAssign TAndLog TAnd RDots EOF ]
operator_function_id -> Toperator . operator_kind [ Tasm TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtrOpStar TPtrOp TPtVirg TPlus TOrLog TOr TOPar_CplusplusInit TOPar TOCro TOBrace TNotEq TMul TMod TMinus TInfEq TInf TInc TEqEq TEq TEllipsis TDotStar TDot TDiv TDec TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAssign TAndLog TAnd RDots EOF ]
## Transitions:
-- On Twchar_t shift to state 1
-- On Tvoid shift to state 3
-- On Tunsigned shift to state 15
-- On Ttypeof shift to state 17
-- On Tsigned shift to state 30
-- On Tshort shift to state 32
-- On Tnew shift to state 35
-- On Tlong shift to state 38
-- On Tint shift to state 39
-- On Tfloat shift to state 40
-- On Tdouble shift to state 41
-- On Tdelete shift to state 42
-- On Tdecltype shift to state 45
-- On Tchar shift to state 58
-- On Tbool shift to state 60
-- On TXor shift to state 130
-- On TTilde shift to state 131
-- On TSupEq shift to state 132
-- On TSup shift to state 133
-- On TShr shift to state 134
-- On TShl shift to state 135
-- On TPtrOpStar shift to state 136
-- On TPtrOp shift to state 137
-- On TPlus shift to state 138
-- On TOrLog shift to state 139
-- On TOr shift to state 140
-- On TOPar shift to state 141
-- On TOCro shift to state 143
-- On TNotEq shift to state 145
-- On TMul shift to state 146
-- On TMod shift to state 147
-- On TMinus shift to state 148
-- On TInfEq shift to state 149
-- On TInf shift to state 150
-- On TInc shift to state 151
-- On TIdent_Typedef shift to state 20
-- On TIdent_TemplatenameInQualifier_BeforeTypedef shift to state 21
-- On TIdent_Templatename shift to state 108
-- On TIdent_ClassnameInQualifier_BeforeTypedef shift to state 111
-- On TEqEq shift to state 152
-- On TEq shift to state 153
-- On TDiv shift to state 154
-- On TDec shift to state 155
-- On TComma shift to state 156
-- On TColCol_BeforeTypedef shift to state 118
-- On TBang shift to state 157
-- On TAssign shift to state 158
-- On TAndLog shift to state 159
-- On TAnd shift to state 160
-- On type_name shift to state 182
-- On type_cplusplus_id shift to state 183
-- On template_id shift to state 120
-- On simple_type_specifier shift to state 941
-- On operator_kind shift to state 161
-- On nested_name_specifier2 shift to state 207
-- On enum_name_or_typedef_name_or_simple_class_name shift to state 123
-- On decltype_specifier shift to state 243
-- On conversion_type_id shift to state 945
-- On class_or_namespace_name_for_qualifier2 shift to state 124
## Reductions:

State 35:
## Known stack suffix:
## Tnew
## LR(1) items:
operator_kind -> Tnew . [ Tasm TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtrOpStar TPtrOp TPtVirg TPlus TOrLog TOr TOPar_CplusplusInit TOPar TOCro TOBrace TNotEq TMul TMod TMinus TInfEq TInf TInc TEqEq TEq TEllipsis TDotStar TDot TDiv TDec TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAssign TAndLog TAnd RDots EOF ]
operator_kind -> Tnew . TOCro_new TCCro_new [ Tasm TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtrOpStar TPtrOp TPtVirg TPlus TOrLog TOr TOPar_CplusplusInit TOPar TOCro TOBrace TNotEq TMul TMod TMinus TInfEq TInf TInc TEqEq TEq TEllipsis TDotStar TDot TDiv TDec TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAssign TAndLog TAnd RDots EOF ]
## Transitions:
-- On TOCro_new shift to state 36
## Reductions:
-- On Tasm TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtrOpStar TPtrOp TPtVirg TPlus TOrLog TOr TOPar_CplusplusInit TOPar TOCro TOBrace TNotEq TMul TMod TMinus TInfEq TInf TInc TEqEq TEq TEllipsis TDotStar TDot TDiv TDec TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAssign TAndLog TAnd RDots EOF
--   reduce production operator_kind -> Tnew

State 36:
## Known stack suffix:
## Tnew TOCro_new
## LR(1) items:
operator_kind -> Tnew TOCro_new . TCCro_new [ Tasm TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtrOpStar TPtrOp TPtVirg TPlus TOrLog TOr TOPar_CplusplusInit TOPar TOCro TOBrace TNotEq TMul TMod TMinus TInfEq TInf TInc TEqEq TEq TEllipsis TDotStar TDot TDiv TDec TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAssign TAndLog TAnd RDots EOF ]
## Transitions:
-- On TCCro_new shift to state 37
## Reductions:

State 37:
## Known stack suffix:
## Tnew TOCro_new TCCro_new
## LR(1) items:
operator_kind -> Tnew TOCro_new TCCro_new . [ Tasm TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtrOpStar TPtrOp TPtVirg TPlus TOrLog TOr TOPar_CplusplusInit TOPar TOCro TOBrace TNotEq TMul TMod TMinus TInfEq TInf TInc TEqEq TEq TEllipsis TDotStar TDot TDiv TDec TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAssign TAndLog TAnd RDots EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production operator_kind -> Tnew TOCro_new TCCro_new

State 38:
## Known stack suffix:
## Tlong
## LR(1) items:
simple_type_specifier -> Tlong . [ Twchar_t Tvolatile Tvoid Tvirtual Tunsigned Tunion Ttypeof Ttypename Ttypedef Tthread_local Tstruct Tstatic Tsigned Tshort Trestrict Tregister Toperator Tmutable Tlong Tint Tinline Tfriend Tfloat Textern Tenum Tdouble Tdecltype Tconstexpr Tconst Tclass Tchar Tbool Tauto Tasm TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtrOpStar TPtrOp TPtVirg TPlus TOrLog TOr TOPar_CplusplusInit TOPar TOCro TOBrace TNotEq TMul TMod TMinus TInfEq TInf TInc TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TIdent TEqEq TEq TEllipsis TDotStar TDot TDiv TDec TCommentNewline_DefineEndOfMacro TComma TColCol_BeforeTypedef TColCol TCol TCPar_EOL TCPar TCCro TCBrace TAssign TAndLog TAnd RDots EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production simple_type_specifier -> Tlong

State 39:
## Known stack suffix:
## Tint
## LR(1) items:
simple_type_specifier -> Tint . [ Twchar_t Tvolatile Tvoid Tvirtual Tunsigned Tunion Ttypeof Ttypename Ttypedef Tthread_local Tstruct Tstatic Tsigned Tshort Trestrict Tregister Toperator Tmutable Tlong Tint Tinline Tfriend Tfloat Textern Tenum Tdouble Tdecltype Tconstexpr Tconst Tclass Tchar Tbool Tauto Tasm TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtrOpStar TPtrOp TPtVirg TPlus TOrLog TOr TOPar_CplusplusInit TOPar TOCro TOBrace TNotEq TMul TMod TMinus TInfEq TInf TInc TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TIdent TEqEq TEq TEllipsis TDotStar TDot TDiv TDec TCommentNewline_DefineEndOfMacro TComma TColCol_BeforeTypedef TColCol TCol TCPar_EOL TCPar TCCro TCBrace TAssign TAndLog TAnd RDots EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production simple_type_specifier -> Tint

State 40:
## Known stack suffix:
## Tfloat
## LR(1) items:
simple_type_specifier -> Tfloat . [ Twchar_t Tvolatile Tvoid Tvirtual Tunsigned Tunion Ttypeof Ttypename Ttypedef Tthread_local Tstruct Tstatic Tsigned Tshort Trestrict Tregister Toperator Tmutable Tlong Tint Tinline Tfriend Tfloat Textern Tenum Tdouble Tdecltype Tconstexpr Tconst Tclass Tchar Tbool Tauto Tasm TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtrOpStar TPtrOp TPtVirg TPlus TOrLog TOr TOPar_CplusplusInit TOPar TOCro TOBrace TNotEq TMul TMod TMinus TInfEq TInf TInc TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TIdent TEqEq TEq TEllipsis TDotStar TDot TDiv TDec TCommentNewline_DefineEndOfMacro TComma TColCol_BeforeTypedef TColCol TCol TCPar_EOL TCPar TCCro TCBrace TAssign TAndLog TAnd RDots EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production simple_type_specifier -> Tfloat

State 41:
## Known stack suffix:
## Tdouble
## LR(1) items:
simple_type_specifier -> Tdouble . [ Twchar_t Tvolatile Tvoid Tvirtual Tunsigned Tunion Ttypeof Ttypename Ttypedef Tthread_local Tstruct Tstatic Tsigned Tshort Trestrict Tregister Toperator Tmutable Tlong Tint Tinline Tfriend Tfloat Textern Tenum Tdouble Tdecltype Tconstexpr Tconst Tclass Tchar Tbool Tauto Tasm TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtrOpStar TPtrOp TPtVirg TPlus TOrLog TOr TOPar_CplusplusInit TOPar TOCro TOBrace TNotEq TMul TMod TMinus TInfEq TInf TInc TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TIdent TEqEq TEq TEllipsis TDotStar TDot TDiv TDec TCommentNewline_DefineEndOfMacro TComma TColCol_BeforeTypedef TColCol TCol TCPar_EOL TCPar TCCro TCBrace TAssign TAndLog TAnd RDots EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production simple_type_specifier -> Tdouble

State 42:
## Known stack suffix:
## Tdelete
## LR(1) items:
operator_kind -> Tdelete . [ Tasm TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtrOpStar TPtrOp TPtVirg TPlus TOrLog TOr TOPar_CplusplusInit TOPar TOCro TOBrace TNotEq TMul TMod TMinus TInfEq TInf TInc TEqEq TEq TEllipsis TDotStar TDot TDiv TDec TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAssign TAndLog TAnd RDots EOF ]
operator_kind -> Tdelete . TOCro_new TCCro_new [ Tasm TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtrOpStar TPtrOp TPtVirg TPlus TOrLog TOr TOPar_CplusplusInit TOPar TOCro TOBrace TNotEq TMul TMod TMinus TInfEq TInf TInc TEqEq TEq TEllipsis TDotStar TDot TDiv TDec TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAssign TAndLog TAnd RDots EOF ]
## Transitions:
-- On TOCro_new shift to state 43
## Reductions:
-- On Tasm TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtrOpStar TPtrOp TPtVirg TPlus TOrLog TOr TOPar_CplusplusInit TOPar TOCro TOBrace TNotEq TMul TMod TMinus TInfEq TInf TInc TEqEq TEq TEllipsis TDotStar TDot TDiv TDec TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAssign TAndLog TAnd RDots EOF
--   reduce production operator_kind -> Tdelete

State 43:
## Known stack suffix:
## Tdelete TOCro_new
## LR(1) items:
operator_kind -> Tdelete TOCro_new . TCCro_new [ Tasm TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtrOpStar TPtrOp TPtVirg TPlus TOrLog TOr TOPar_CplusplusInit TOPar TOCro TOBrace TNotEq TMul TMod TMinus TInfEq TInf TInc TEqEq TEq TEllipsis TDotStar TDot TDiv TDec TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAssign TAndLog TAnd RDots EOF ]
## Transitions:
-- On TCCro_new shift to state 44
## Reductions:

State 44:
## Known stack suffix:
## Tdelete TOCro_new TCCro_new
## LR(1) items:
operator_kind -> Tdelete TOCro_new TCCro_new . [ Tasm TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtrOpStar TPtrOp TPtVirg TPlus TOrLog TOr TOPar_CplusplusInit TOPar TOCro TOBrace TNotEq TMul TMod TMinus TInfEq TInf TInc TEqEq TEq TEllipsis TDotStar TDot TDiv TDec TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAssign TAndLog TAnd RDots EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production operator_kind -> Tdelete TOCro_new TCCro_new

State 45:
## Known stack suffix:
## Tdecltype
## LR(1) items:
decltype_specifier -> Tdecltype . TOPar expr TCPar [ Twchar_t Tvolatile Tvoid Tvirtual Tunsigned Tunion Ttypeof Ttypename Ttypedef Tthread_local Tstruct Tstatic Tsigned Tshort Trestrict Tregister Toperator Tmutable Tlong Tint Tinline Tfriend Tfloat Textern Tenum Tdouble Tdecltype Tconstexpr Tconst Tclass Tchar Tbool Tauto Tasm TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtrOpStar TPtrOp TPtVirg TPlus TOrLog TOr TOPar_CplusplusInit TOPar TOCro TOBrace TNotEq TMul TMod TMinus TInfEq TInf TInc TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TIdent TEqEq TEq TEllipsis TDotStar TDot TDiv TDec TCommentNewline_DefineEndOfMacro TComma TColCol_BeforeTypedef TColCol TCol TCPar_EOL TCPar TCCro TCBrace TAssign TAndLog TAnd RDots EOF ]
decltype_specifier -> Tdecltype . TOPar TIdent_Typedef TCPar [ Twchar_t Tvolatile Tvoid Tvirtual Tunsigned Tunion Ttypeof Ttypename Ttypedef Tthread_local Tstruct Tstatic Tsigned Tshort Trestrict Tregister Toperator Tmutable Tlong Tint Tinline Tfriend Tfloat Textern Tenum Tdouble Tdecltype Tconstexpr Tconst Tclass Tchar Tbool Tauto Tasm TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtrOpStar TPtrOp TPtVirg TPlus TOrLog TOr TOPar_CplusplusInit TOPar TOCro TOBrace TNotEq TMul TMod TMinus TInfEq TInf TInc TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TIdent TEqEq TEq TEllipsis TDotStar TDot TDiv TDec TCommentNewline_DefineEndOfMacro TComma TColCol_BeforeTypedef TColCol TCol TCPar_EOL TCPar TCCro TCBrace TAssign TAndLog TAnd RDots EOF ]
## Transitions:
-- On TOPar shift to state 46
## Reductions:

State 46:
## Known stack suffix:
## Tdecltype TOPar
## LR(1) items:
decltype_specifier -> Tdecltype TOPar . expr TCPar [ Twchar_t Tvolatile Tvoid Tvirtual Tunsigned Tunion Ttypeof Ttypename Ttypedef Tthread_local Tstruct Tstatic Tsigned Tshort Trestrict Tregister Toperator Tmutable Tlong Tint Tinline Tfriend Tfloat Textern Tenum Tdouble Tdecltype Tconstexpr Tconst Tclass Tchar Tbool Tauto Tasm TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtrOpStar TPtrOp TPtVirg TPlus TOrLog TOr TOPar_CplusplusInit TOPar TOCro TOBrace TNotEq TMul TMod TMinus TInfEq TInf TInc TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TIdent TEqEq TEq TEllipsis TDotStar TDot TDiv TDec TCommentNewline_DefineEndOfMacro TComma TColCol_BeforeTypedef TColCol TCol TCPar_EOL TCPar TCCro TCBrace TAssign TAndLog TAnd RDots EOF ]
decltype_specifier -> Tdecltype TOPar . TIdent_Typedef TCPar [ Twchar_t Tvolatile Tvoid Tvirtual Tunsigned Tunion Ttypeof Ttypename Ttypedef Tthread_local Tstruct Tstatic Tsigned Tshort Trestrict Tregister Toperator Tmutable Tlong Tint Tinline Tfriend Tfloat Textern Tenum Tdouble Tdecltype Tconstexpr Tconst Tclass Tchar Tbool Tauto Tasm TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtrOpStar TPtrOp TPtVirg TPlus TOrLog TOr TOPar_CplusplusInit TOPar TOCro TOBrace TNotEq TMul TMod TMinus TInfEq TInf TInc TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TIdent TEqEq TEq TEllipsis TDotStar TDot TDiv TDec TCommentNewline_DefineEndOfMacro TComma TColCol_BeforeTypedef TColCol TCol TCPar_EOL TCPar TCCro TCBrace TAssign TAndLog TAnd RDots EOF ]
## Transitions:
-- On Twchar_t_Constr shift to state 14
-- On Twchar_t shift to state 1
-- On Tvoid shift to state 3
-- On Tunsigned shift to state 15
-- On Ttypeof shift to state 17
-- On Ttypeid shift to state 23
-- On Ttrue shift to state 25
-- On Tthrow shift to state 47
-- On Tthis shift to state 26
-- On Tstatic_cast shift to state 28
-- On Tsizeof shift to state 29
-- On Tsigned shift to state 30
-- On Tshort_Constr shift to state 31
-- On Tshort shift to state 32
-- On Treinterpret_cast shift to state 33
-- On Toperator shift to state 34
-- On Tnullptr shift to state 48
-- On Tnull shift to state 49
-- On Tlong_Constr shift to state 50
-- On Tlong shift to state 38
-- On Tint_Constr shift to state 51
-- On Tint shift to state 39
-- On Tfloat_Constr shift to state 52
-- On Tfloat shift to state 40
-- On Tfalse shift to state 53
-- On Tdynamic_cast shift to state 54
-- On Tdouble_Constr shift to state 55
-- On Tdouble shift to state 41
-- On Tdecltype shift to state 45
-- On Tconst_cast shift to state 56
-- On Tchar_Constr shift to state 57
-- On Tchar shift to state 58
-- On Tbool_Constr shift to state 59
-- On Tbool shift to state 60
-- On TTilde shift to state 61
-- On TString shift to state 62
-- On TPlus shift to state 63
-- On TOPar shift to state 64
-- On TOCro_Lambda shift to state 78
-- On TMul shift to state 88
-- On TMinus shift to state 89
-- On TInt shift to state 90
-- On TInc shift to state 91
-- On TIdent_TypedefConstr shift to state 106
-- On TIdent_Typedef shift to state 937
-- On TIdent_TemplatenameInQualifier_BeforeTypedef shift to state 21
-- On TIdent_TemplatenameInQualifier shift to state 12
-- On TIdent_Templatename shift to state 108
-- On TIdent_MacroString shift to state 110
-- On TIdent_ClassnameInQualifier_BeforeTypedef shift to state 111
-- On TIdent_ClassnameInQualifier shift to state 112
-- On TIdent shift to state 113
-- On TFloat shift to state 116
-- On TDec shift to state 117
-- On TColCol_BeforeTypedef shift to state 118
-- On TColCol shift to state 128
-- On TChar shift to state 174
-- On TBang shift to state 175
-- On TAndLog shift to state 176
-- On TAnd shift to state 177
-- On LDots shift to state 178
-- On unqualified_id shift to state 179
-- On unary_op shift to state 180
-- On unary_expr shift to state 181
-- On type_name shift to state 182
-- On type_cplusplus_id shift to state 183
-- On template_id shift to state 120
-- On string_elem shift to state 184
-- On simple_type_specifier shift to state 189
-- On shift_expr shift to state 217
-- On relational_expr shift to state 229
-- On qualified_id shift to state 191
-- On primary_expr shift to state 192
-- On primary_cplusplus_id shift to state 193
-- On postfix_expr shift to state 194
-- On pm_expr shift to state 219
-- On option(TColCol) shift to state 221
-- On operator_function_id shift to state 168
-- On new_expr shift to state 233
-- On nested_name_specifier2 shift to state 207
-- On nested_name_specifier shift to state 165
-- On multiplicative_expr shift to state 234
-- On logical_or_expr shift to state 246
-- On logical_and_expr shift to state 250
-- On literal shift to state 238
-- On lambda_introducer shift to state 239
-- On inclusive_or_expr shift to state 272
-- On id_expression shift to state 241
-- On expr shift to state 939
-- On exclusive_or_expr shift to state 273
-- On equality_expr shift to state 256
-- On enum_name_or_typedef_name_or_simple_class_name shift to state 123
-- On delete_expr shift to state 242
-- On decltype_specifier shift to state 243
-- On cpp_cast_operator shift to state 244
-- On conversion_function_id shift to state 169
-- On cond_expr shift to state 330
-- On class_or_namespace_name_for_qualifier2 shift to state 124
-- On class_or_namespace_name_for_qualifier shift to state 170
-- On cast_operator_expr shift to state 261
-- On cast_expr shift to state 331
-- On cast_constructor_expr shift to state 263
-- On basic_type_2 shift to state 264
-- On assign_expr shift to state 539
-- On and_expr shift to state 334
-- On additive_expr shift to state 341
## Reductions:
-- On Tnew Tdelete
--   reduce production option(TColCol) ->

State 47:
## Known stack suffix:
## Tthrow
## LR(1) items:
assign_expr -> Tthrow . option(assign_expr) [ TSup_Template TPtVirg TEllipsis TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace RDots EOF ]
## Transitions:
-- On Twchar_t_Constr shift to state 14
-- On Twchar_t shift to state 1
-- On Tvoid shift to state 3
-- On Tunsigned shift to state 15
-- On Ttypeof shift to state 17
-- On Ttypeid shift to state 23
-- On Ttrue shift to state 25
-- On Tthrow shift to state 47
-- On Tthis shift to state 26
-- On Tstatic_cast shift to state 28
-- On Tsizeof shift to state 29
-- On Tsigned shift to state 30
-- On Tshort_Constr shift to state 31
-- On Tshort shift to state 32
-- On Treinterpret_cast shift to state 33
-- On Toperator shift to state 34
-- On Tnullptr shift to state 48
-- On Tnull shift to state 49
-- On Tlong_Constr shift to state 50
-- On Tlong shift to state 38
-- On Tint_Constr shift to state 51
-- On Tint shift to state 39
-- On Tfloat_Constr shift to state 52
-- On Tfloat shift to state 40
-- On Tfalse shift to state 53
-- On Tdynamic_cast shift to state 54
-- On Tdouble_Constr shift to state 55
-- On Tdouble shift to state 41
-- On Tdecltype shift to state 45
-- On Tconst_cast shift to state 56
-- On Tchar_Constr shift to state 57
-- On Tchar shift to state 58
-- On Tbool_Constr shift to state 59
-- On Tbool shift to state 60
-- On TTilde shift to state 61
-- On TString shift to state 62
-- On TPlus shift to state 63
-- On TOPar shift to state 64
-- On TOCro_Lambda shift to state 78
-- On TMul shift to state 88
-- On TMinus shift to state 89
-- On TInt shift to state 90
-- On TInc shift to state 91
-- On TIdent_TypedefConstr shift to state 106
-- On TIdent_Typedef shift to state 20
-- On TIdent_TemplatenameInQualifier_BeforeTypedef shift to state 21
-- On TIdent_TemplatenameInQualifier shift to state 12
-- On TIdent_Templatename shift to state 108
-- On TIdent_MacroString shift to state 110
-- On TIdent_ClassnameInQualifier_BeforeTypedef shift to state 111
-- On TIdent_ClassnameInQualifier shift to state 112
-- On TIdent shift to state 113
-- On TFloat shift to state 116
-- On TDec shift to state 117
-- On TColCol_BeforeTypedef shift to state 118
-- On TColCol shift to state 128
-- On TChar shift to state 174
-- On TBang shift to state 175
-- On TAndLog shift to state 176
-- On TAnd shift to state 177
-- On LDots shift to state 178
-- On unqualified_id shift to state 179
-- On unary_op shift to state 180
-- On unary_expr shift to state 181
-- On type_name shift to state 182
-- On type_cplusplus_id shift to state 183
-- On template_id shift to state 120
-- On string_elem shift to state 184
-- On simple_type_specifier shift to state 189
-- On shift_expr shift to state 217
-- On relational_expr shift to state 229
-- On qualified_id shift to state 191
-- On primary_expr shift to state 192
-- On primary_cplusplus_id shift to state 193
-- On postfix_expr shift to state 194
-- On pm_expr shift to state 219
-- On option(assign_expr) shift to state 935
-- On option(TColCol) shift to state 221
-- On operator_function_id shift to state 168
-- On new_expr shift to state 233
-- On nested_name_specifier2 shift to state 207
-- On nested_name_specifier shift to state 165
-- On multiplicative_expr shift to state 234
-- On logical_or_expr shift to state 246
-- On logical_and_expr shift to state 250
-- On literal shift to state 238
-- On lambda_introducer shift to state 239
-- On inclusive_or_expr shift to state 272
-- On id_expression shift to state 241
-- On exclusive_or_expr shift to state 273
-- On equality_expr shift to state 256
-- On enum_name_or_typedef_name_or_simple_class_name shift to state 123
-- On delete_expr shift to state 242
-- On decltype_specifier shift to state 243
-- On cpp_cast_operator shift to state 244
-- On conversion_function_id shift to state 169
-- On cond_expr shift to state 330
-- On class_or_namespace_name_for_qualifier2 shift to state 124
-- On class_or_namespace_name_for_qualifier shift to state 170
-- On cast_operator_expr shift to state 261
-- On cast_expr shift to state 331
-- On cast_constructor_expr shift to state 263
-- On basic_type_2 shift to state 264
-- On assign_expr shift to state 936
-- On and_expr shift to state 334
-- On additive_expr shift to state 341
## Reductions:
-- On Tnew Tdelete
--   reduce production option(TColCol) ->
-- On TSup_Template TPtVirg TEllipsis TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace RDots EOF
--   reduce production option(assign_expr) ->

State 48:
## Known stack suffix:
## Tnullptr
## LR(1) items:
literal -> Tnullptr . [ TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtrOpStar TPtrOp TPtVirg TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMod TMinus TInfEq TInf TInc TEqEq TEq TEllipsis TDotStar TDot TDiv TDec TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAssign TAndLog TAnd RDots EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production literal -> Tnullptr

State 49:
## Known stack suffix:
## Tnull
## LR(1) items:
literal -> Tnull . [ TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtrOpStar TPtrOp TPtVirg TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMod TMinus TInfEq TInf TInc TEqEq TEq TEllipsis TDotStar TDot TDiv TDec TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAssign TAndLog TAnd RDots EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production literal -> Tnull

State 50:
## Known stack suffix:
## Tlong_Constr
## LR(1) items:
basic_type_2 -> Tlong_Constr . [ TOPar ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production basic_type_2 -> Tlong_Constr

State 51:
## Known stack suffix:
## Tint_Constr
## LR(1) items:
basic_type_2 -> Tint_Constr . [ TOPar ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production basic_type_2 -> Tint_Constr

State 52:
## Known stack suffix:
## Tfloat_Constr
## LR(1) items:
basic_type_2 -> Tfloat_Constr . [ TOPar ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production basic_type_2 -> Tfloat_Constr

State 53:
## Known stack suffix:
## Tfalse
## LR(1) items:
literal -> Tfalse . [ TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtrOpStar TPtrOp TPtVirg TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMod TMinus TInfEq TInf TInc TEqEq TEq TEllipsis TDotStar TDot TDiv TDec TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAssign TAndLog TAnd RDots EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production literal -> Tfalse

State 54:
## Known stack suffix:
## Tdynamic_cast
## LR(1) items:
cpp_cast_operator -> Tdynamic_cast . [ TOPar TInf_Template ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production cpp_cast_operator -> Tdynamic_cast

State 55:
## Known stack suffix:
## Tdouble_Constr
## LR(1) items:
basic_type_2 -> Tdouble_Constr . [ TOPar ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production basic_type_2 -> Tdouble_Constr

State 56:
## Known stack suffix:
## Tconst_cast
## LR(1) items:
cpp_cast_operator -> Tconst_cast . [ TOPar TInf_Template ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production cpp_cast_operator -> Tconst_cast

State 57:
## Known stack suffix:
## Tchar_Constr
## LR(1) items:
basic_type_2 -> Tchar_Constr . [ TOPar ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production basic_type_2 -> Tchar_Constr

State 58:
## Known stack suffix:
## Tchar
## LR(1) items:
simple_type_specifier -> Tchar . [ Twchar_t Tvolatile Tvoid Tvirtual Tunsigned Tunion Ttypeof Ttypename Ttypedef Tthread_local Tstruct Tstatic Tsigned Tshort Trestrict Tregister Toperator Tmutable Tlong Tint Tinline Tfriend Tfloat Textern Tenum Tdouble Tdecltype Tconstexpr Tconst Tclass Tchar Tbool Tauto Tasm TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtrOpStar TPtrOp TPtVirg TPlus TOrLog TOr TOPar_CplusplusInit TOPar TOCro TOBrace TNotEq TMul TMod TMinus TInfEq TInf TInc TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TIdent TEqEq TEq TEllipsis TDotStar TDot TDiv TDec TCommentNewline_DefineEndOfMacro TComma TColCol_BeforeTypedef TColCol TCol TCPar_EOL TCPar TCCro TCBrace TAssign TAndLog TAnd RDots EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production simple_type_specifier -> Tchar

State 59:
## Known stack suffix:
## Tbool_Constr
## LR(1) items:
basic_type_2 -> Tbool_Constr . [ TOPar ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production basic_type_2 -> Tbool_Constr

State 60:
## Known stack suffix:
## Tbool
## LR(1) items:
simple_type_specifier -> Tbool . [ Twchar_t Tvolatile Tvoid Tvirtual Tunsigned Tunion Ttypeof Ttypename Ttypedef Tthread_local Tstruct Tstatic Tsigned Tshort Trestrict Tregister Toperator Tmutable Tlong Tint Tinline Tfriend Tfloat Textern Tenum Tdouble Tdecltype Tconstexpr Tconst Tclass Tchar Tbool Tauto Tasm TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtrOpStar TPtrOp TPtVirg TPlus TOrLog TOr TOPar_CplusplusInit TOPar TOCro TOBrace TNotEq TMul TMod TMinus TInfEq TInf TInc TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TIdent TEqEq TEq TEllipsis TDotStar TDot TDiv TDec TCommentNewline_DefineEndOfMacro TComma TColCol_BeforeTypedef TColCol TCol TCPar_EOL TCPar TCCro TCBrace TAssign TAndLog TAnd RDots EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production simple_type_specifier -> Tbool

State 61:
## Known stack suffix:
## TTilde
## LR(1) items:
unary_op -> TTilde . [ Twchar_t_Constr Twchar_t Tvoid Tunsigned Ttypeof Ttypeid Ttrue Tthis Tstatic_cast Tsizeof Tsigned Tshort_Constr Tshort Treinterpret_cast Toperator Tnullptr Tnull Tnew Tlong_Constr Tlong Tint_Constr Tint Tfloat_Constr Tfloat Tfalse Tdynamic_cast Tdouble_Constr Tdouble Tdelete Tdecltype Tconst_cast Tchar_Constr Tchar Tbool_Constr Tbool TTilde TString TPlus TOPar TOCro_Lambda TMul TMinus TInt TInc TIdent_TypedefConstr TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_MacroString TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TIdent TFloat TDec TColCol_BeforeTypedef TColCol TChar TBang TAndLog TAnd LDots ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production unary_op -> TTilde

State 62:
## Known stack suffix:
## TString
## LR(1) items:
literal -> TString . [ TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtrOpStar TPtrOp TPtVirg TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMod TMinus TInfEq TInf TInc TEqEq TEq TEllipsis TDotStar TDot TDiv TDec TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAssign TAndLog TAnd RDots EOF ]
string_elem -> TString . [ TString TIdent_MacroString ]
## Transitions:
## Reductions:
-- On TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtrOpStar TPtrOp TPtVirg TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMod TMinus TInfEq TInf TInc TEqEq TEq TEllipsis TDotStar TDot TDiv TDec TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAssign TAndLog TAnd RDots EOF
--   reduce production literal -> TString
-- On TString TIdent_MacroString
--   reduce production string_elem -> TString

State 63:
## Known stack suffix:
## TPlus
## LR(1) items:
unary_op -> TPlus . [ Twchar_t_Constr Twchar_t Tvoid Tunsigned Ttypeof Ttypeid Ttrue Tthis Tstatic_cast Tsizeof Tsigned Tshort_Constr Tshort Treinterpret_cast Toperator Tnullptr Tnull Tnew Tlong_Constr Tlong Tint_Constr Tint Tfloat_Constr Tfloat Tfalse Tdynamic_cast Tdouble_Constr Tdouble Tdelete Tdecltype Tconst_cast Tchar_Constr Tchar Tbool_Constr Tbool TTilde TString TPlus TOPar TOCro_Lambda TMul TMinus TInt TInc TIdent_TypedefConstr TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_MacroString TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TIdent TFloat TDec TColCol_BeforeTypedef TColCol TChar TBang TAndLog TAnd LDots ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production unary_op -> TPlus

State 64:
## Known stack suffix:
## TOPar
## LR(1) items:
cast_expr -> TOPar . type_id TCPar cast_expr [ TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtrOpStar TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TEq TEllipsis TDotStar TDiv TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAssign TAndLog TAnd RDots EOF ]
cast_expr -> TOPar . type_id TIdent TCPar [ TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtrOpStar TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TEq TEllipsis TDotStar TDiv TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAssign TAndLog TAnd RDots EOF ]
postfix_expr -> TOPar . type_id TCPar braced_init_list [ TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtrOpStar TPtrOp TPtVirg TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMod TMinus TInfEq TInf TInc TEqEq TEq TEllipsis TDotStar TDot TDiv TDec TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAssign TAndLog TAnd RDots EOF ]
primary_expr -> TOPar . expr TCPar [ TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtrOpStar TPtrOp TPtVirg TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMod TMinus TInfEq TInf TInc TEqEq TEq TEllipsis TDotStar TDot TDiv TDec TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAssign TAndLog TAnd RDots EOF ]
primary_expr -> TOPar . compound TCPar [ TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtrOpStar TPtrOp TPtVirg TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMod TMinus TInfEq TInf TInc TEqEq TEq TEllipsis TDotStar TDot TDiv TDec TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAssign TAndLog TAnd RDots EOF ]
## Transitions:
-- On Twchar_t_Constr shift to state 14
-- On Twchar_t shift to state 1
-- On Tvolatile shift to state 2
-- On Tvoid shift to state 3
-- On Tunsigned shift to state 15
-- On Tunion shift to state 16
-- On Ttypeof shift to state 17
-- On Ttypename shift to state 19
-- On Ttypeid shift to state 23
-- On Ttrue shift to state 25
-- On Tthrow shift to state 47
-- On Tthis shift to state 26
-- On Tstruct shift to state 27
-- On Tstatic_cast shift to state 28
-- On Tsizeof shift to state 29
-- On Tsigned shift to state 30
-- On Tshort_Constr shift to state 31
-- On Tshort shift to state 32
-- On Trestrict shift to state 65
-- On Treinterpret_cast shift to state 33
-- On Toperator shift to state 34
-- On Tnullptr shift to state 48
-- On Tnull shift to state 49
-- On Tlong_Constr shift to state 50
-- On Tlong shift to state 38
-- On Tint_Constr shift to state 51
-- On Tint shift to state 39
-- On Tfloat_Constr shift to state 52
-- On Tfloat shift to state 40
-- On Tfalse shift to state 53
-- On Tenum shift to state 66
-- On Tdynamic_cast shift to state 54
-- On Tdouble_Constr shift to state 55
-- On Tdouble shift to state 41
-- On Tdecltype shift to state 45
-- On Tconst_cast shift to state 56
-- On Tconst shift to state 76
-- On Tclass shift to state 77
-- On Tchar_Constr shift to state 57
-- On Tchar shift to state 58
-- On Tbool_Constr shift to state 59
-- On Tbool shift to state 60
-- On TTilde shift to state 61
-- On TString shift to state 62
-- On TPlus shift to state 63
-- On TOPar shift to state 64
-- On TOCro_Lambda shift to state 78
-- On TOBrace shift to state 93
-- On TMul shift to state 88
-- On TMinus shift to state 89
-- On TInt shift to state 90
-- On TInc shift to state 91
-- On TIdent_TypedefConstr shift to state 106
-- On TIdent_Typedef shift to state 20
-- On TIdent_TemplatenameInQualifier_BeforeTypedef shift to state 21
-- On TIdent_TemplatenameInQualifier shift to state 12
-- On TIdent_Templatename shift to state 108
-- On TIdent_MacroString shift to state 110
-- On TIdent_ClassnameInQualifier_BeforeTypedef shift to state 111
-- On TIdent_ClassnameInQualifier shift to state 112
-- On TIdent shift to state 113
-- On TFloat shift to state 116
-- On TDec shift to state 117
-- On TColCol_BeforeTypedef shift to state 118
-- On TColCol shift to state 128
-- On TChar shift to state 174
-- On TBang shift to state 175
-- On TAndLog shift to state 176
-- On TAnd shift to state 177
-- On LDots shift to state 178
-- On unqualified_id shift to state 179
-- On unary_op shift to state 180
-- On unary_expr shift to state 181
-- On type_spec shift to state 204
-- On type_name shift to state 182
-- On type_id shift to state 930
-- On type_cplusplus_id shift to state 183
-- On template_id shift to state 120
-- On string_elem shift to state 184
-- On spec_qualif_list shift to state 225
-- On simple_type_specifier shift to state 266
-- On shift_expr shift to state 217
-- On relational_expr shift to state 229
-- On qualified_id shift to state 191
-- On primary_expr shift to state 192
-- On primary_cplusplus_id shift to state 193
-- On postfix_expr shift to state 194
-- On pm_expr shift to state 219
-- On option(TColCol) shift to state 221
-- On operator_function_id shift to state 168
-- On new_expr shift to state 233
-- On nested_name_specifier2 shift to state 207
-- On nested_name_specifier shift to state 165
-- On multiplicative_expr shift to state 234
-- On logical_or_expr shift to state 246
-- On logical_and_expr shift to state 250
-- On literal shift to state 238
-- On lambda_introducer shift to state 239
-- On inclusive_or_expr shift to state 272
-- On id_expression shift to state 241
-- On expr shift to state 914
-- On exclusive_or_expr shift to state 273
-- On equality_expr shift to state 256
-- On enum_specifier shift to state 209
-- On enum_name_or_typedef_name_or_simple_class_name shift to state 123
-- On enum_head shift to state 210
-- On elaborated_type_specifier shift to state 274
-- On delete_expr shift to state 242
-- On decltype_specifier shift to state 243
-- On cv_qualif shift to state 275
-- On cpp_cast_operator shift to state 244
-- On conversion_function_id shift to state 169
-- On cond_expr shift to state 330
-- On compound shift to state 916
-- On class_specifier shift to state 277
-- On class_or_namespace_name_for_qualifier2 shift to state 124
-- On class_or_namespace_name_for_qualifier shift to state 170
-- On class_key shift to state 278
-- On class_head shift to state 301
-- On cast_operator_expr shift to state 261
-- On cast_expr shift to state 331
-- On cast_constructor_expr shift to state 263
-- On basic_type_2 shift to state 264
-- On assign_expr shift to state 539
-- On and_expr shift to state 334
-- On additive_expr shift to state 341
## Reductions:
-- On Tnew Tdelete
--   reduce production option(TColCol) ->

State 65:
## Known stack suffix:
## Trestrict
## LR(1) items:
cv_qualif -> Trestrict . [ Twchar_t Tvolatile Tvoid Tvirtual Tunsigned Tunion Ttypeof Ttypename Ttypedef Tthread_local Tstruct Tstatic Tsigned Tshort Trestrict Tregister Toperator Tmutable Tlong Tint Tinline Tfriend Tfloat Textern Tenum Tdouble Tdecltype Tconstexpr Tconst Tclass Tchar Tbool Tauto TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtrOpStar TPtVirg TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMod TMinus TInfEq TInf TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TIdent TEqEq TEq TEllipsis TDotStar TDiv TCommentNewline_DefineEndOfMacro TComma TColCol_BeforeTypedef TColCol TCol TCPar_EOL TCPar TCCro TCBrace TAssign TAndLog TAnd RDots EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production cv_qualif -> Trestrict

State 66:
## Known stack suffix:
## Tenum
## LR(1) items:
elaborated_type_specifier -> Tenum . ident [ Twchar_t Tvolatile Tvoid Tvirtual Tunsigned Tunion Ttypeof Ttypename Ttypedef Tthread_local Tstruct Tstatic Tsigned Tshort Trestrict Tregister Toperator Tmutable Tlong Tint Tinline Tfriend Tfloat Textern Tenum Tdouble Tdecltype Tconstexpr Tconst Tclass Tchar Tbool Tauto TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtrOpStar TPtVirg TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMod TMinus TInfEq TInf TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TIdent TEqEq TEq TEllipsis TDotStar TDiv TCommentNewline_DefineEndOfMacro TComma TColCol_BeforeTypedef TColCol TCol TCPar_EOL TCPar TCCro TCBrace TAssign TAndLog TAnd RDots EOF ]
enum_head -> Tenum . option(ident) [ TOBrace ]
enum_head -> Tenum . Tclass option(ident) [ TOBrace ]
enum_head -> Tenum . Tstruct option(ident) [ TOBrace ]
## Transitions:
-- On Tstruct shift to state 67
-- On Tclass shift to state 72
-- On TIdent_Typedef shift to state 68
-- On TIdent shift to state 69
-- On option(ident) shift to state 74
-- On ident shift to state 75
## Reductions:
-- On TOBrace
--   reduce production option(ident) ->

State 67:
## Known stack suffix:
## Tenum Tstruct
## LR(1) items:
enum_head -> Tenum Tstruct . option(ident) [ TOBrace ]
## Transitions:
-- On TIdent_Typedef shift to state 68
-- On TIdent shift to state 69
-- On option(ident) shift to state 70
-- On ident shift to state 71
## Reductions:
-- On TOBrace
--   reduce production option(ident) ->

State 68:
## Known stack suffix:
## TIdent_Typedef
## LR(1) items:
ident -> TIdent_Typedef . [ Twchar_t Tvolatile Tvoid Tvirtual Tunsigned Tunion Ttypeof Ttypename Ttypedef Tthread_local Tstruct Tstatic Tsigned Tshort Trestrict Tregister Toperator Tmutable Tlong Tint Tinline Tfriend Tfloat Textern Tenum Tdouble Tdecltype Tconstexpr Tconst Tclass Tchar Tbool Tauto TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtrOpStar TPtVirg TPlus TOrLog TOr TOPar TOCro TOBrace TNotEq TMul TMod TMinus TInfEq TInf TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TIdent TEqEq TEq TEllipsis TDotStar TDot TDiv TCommentNewline_DefineEndOfMacro TComma TColCol_BeforeTypedef TColCol TCol TCPar_EOL TCPar TCCro TCBrace TAssign TAndLog TAnd RDots EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production ident -> TIdent_Typedef

State 69:
## Known stack suffix:
## TIdent
## LR(1) items:
ident -> TIdent . [ Twchar_t Tvolatile Tvoid Tvirtual Tunsigned Tunion Ttypeof Ttypename Ttypedef Tthread_local Tstruct Tstatic Tsigned Tshort Trestrict Tregister Toperator Tmutable Tlong Tint Tinline Tfriend Tfloat Textern Tenum Tdouble Tdecltype Tconstexpr Tconst Tclass Tchar Tbool Tauto TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtrOpStar TPtVirg TPlus TOrLog TOr TOPar TOCro TOBrace TNotEq TMul TMod TMinus TInfEq TInf TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TIdent TEqEq TEq TEllipsis TDotStar TDot TDiv TCommentNewline_DefineEndOfMacro TComma TColCol_BeforeTypedef TColCol TCol TCPar_EOL TCPar TCCro TCBrace TAssign TAndLog TAnd RDots EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production ident -> TIdent

State 70:
## Known stack suffix:
## Tenum Tstruct option(ident)
## LR(1) items:
enum_head -> Tenum Tstruct option(ident) . [ TOBrace ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production enum_head -> Tenum Tstruct option(ident)

State 71:
## Known stack suffix:
## ident
## LR(1) items:
option(ident) -> ident . [ TOBrace ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production option(ident) -> ident

State 72:
## Known stack suffix:
## Tenum Tclass
## LR(1) items:
enum_head -> Tenum Tclass . option(ident) [ TOBrace ]
## Transitions:
-- On TIdent_Typedef shift to state 68
-- On TIdent shift to state 69
-- On option(ident) shift to state 73
-- On ident shift to state 71
## Reductions:
-- On TOBrace
--   reduce production option(ident) ->

State 73:
## Known stack suffix:
## Tenum Tclass option(ident)
## LR(1) items:
enum_head -> Tenum Tclass option(ident) . [ TOBrace ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production enum_head -> Tenum Tclass option(ident)

State 74:
## Known stack suffix:
## Tenum option(ident)
## LR(1) items:
enum_head -> Tenum option(ident) . [ TOBrace ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production enum_head -> Tenum option(ident)

State 75:
## Known stack suffix:
## Tenum ident
## LR(1) items:
elaborated_type_specifier -> Tenum ident . [ Twchar_t Tvolatile Tvoid Tvirtual Tunsigned Tunion Ttypeof Ttypename Ttypedef Tthread_local Tstruct Tstatic Tsigned Tshort Trestrict Tregister Toperator Tmutable Tlong Tint Tinline Tfriend Tfloat Textern Tenum Tdouble Tdecltype Tconstexpr Tconst Tclass Tchar Tbool Tauto TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtrOpStar TPtVirg TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMod TMinus TInfEq TInf TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TIdent TEqEq TEq TEllipsis TDotStar TDiv TCommentNewline_DefineEndOfMacro TComma TColCol_BeforeTypedef TColCol TCol TCPar_EOL TCPar TCCro TCBrace TAssign TAndLog TAnd RDots EOF ]
option(ident) -> ident . [ TOBrace ]
## Transitions:
## Reductions:
-- On Twchar_t Tvolatile Tvoid Tvirtual Tunsigned Tunion Ttypeof Ttypename Ttypedef Tthread_local Tstruct Tstatic Tsigned Tshort Trestrict Tregister Toperator Tmutable Tlong Tint Tinline Tfriend Tfloat Textern Tenum Tdouble Tdecltype Tconstexpr Tconst Tclass Tchar Tbool Tauto TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtrOpStar TPtVirg TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMod TMinus TInfEq TInf TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TIdent TEqEq TEq TEllipsis TDotStar TDiv TCommentNewline_DefineEndOfMacro TComma TColCol_BeforeTypedef TColCol TCol TCPar_EOL TCPar TCCro TCBrace TAssign TAndLog TAnd RDots EOF
--   reduce production elaborated_type_specifier -> Tenum ident
-- On TOBrace
--   reduce production option(ident) -> ident

State 76:
## Known stack suffix:
## Tconst
## LR(1) items:
cv_qualif -> Tconst . [ Twchar_t Tvolatile Tvoid Tvirtual Tunsigned Tunion Ttypeof Ttypename Ttypedef Tthread_local Tstruct Tstatic Tsigned Tshort Trestrict Tregister Toperator Tmutable Tlong Tint Tinline Tfriend Tfloat Textern Tenum Tdouble Tdecltype Tconstexpr Tconst Tclass Tchar Tbool Tauto TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtrOpStar TPtVirg TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMod TMinus TInfEq TInf TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TIdent TEqEq TEq TEllipsis TDotStar TDiv TCommentNewline_DefineEndOfMacro TComma TColCol_BeforeTypedef TColCol TCol TCPar_EOL TCPar TCCro TCBrace TAssign TAndLog TAnd RDots EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production cv_qualif -> Tconst

State 77:
## Known stack suffix:
## Tclass
## LR(1) items:
class_key -> Tclass . [ TOBrace TIdent_Typedef TIdent_TemplatenameInQualifier TIdent_ClassnameInQualifier TIdent ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production class_key -> Tclass

State 78:
## Known stack suffix:
## TOCro_Lambda
## LR(1) items:
lambda_introducer -> TOCro_Lambda . TCCro [ TOBrace ]
lambda_introducer -> TOCro_Lambda . lambda_capture TCCro [ TOBrace ]
## Transitions:
-- On Tthis shift to state 79
-- On TIdent_Typedef shift to state 68
-- On TIdent shift to state 69
-- On TEq shift to state 80
-- On TCCro shift to state 81
-- On TAnd shift to state 82
-- On lambda_capture shift to state 84
-- On ident shift to state 86
-- On capture_list shift to state 920
-- On capture_default shift to state 925
-- On capture shift to state 928
## Reductions:

State 79:
## Known stack suffix:
## Tthis
## LR(1) items:
capture -> Tthis . [ TEllipsis TComma TCCro ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production capture -> Tthis

State 80:
## Known stack suffix:
## TEq
## LR(1) items:
capture_default -> TEq . [ TComma TCCro ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production capture_default -> TEq

State 81:
## Known stack suffix:
## TOCro_Lambda TCCro
## LR(1) items:
lambda_introducer -> TOCro_Lambda TCCro . [ TOBrace ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production lambda_introducer -> TOCro_Lambda TCCro

State 82:
## Known stack suffix:
## TAnd
## LR(1) items:
capture -> TAnd . ident [ TEllipsis TComma TCCro ]
capture_default -> TAnd . [ TComma TCCro ]
## Transitions:
-- On TIdent_Typedef shift to state 68
-- On TIdent shift to state 69
-- On ident shift to state 83
## Reductions:
-- On TComma TCCro
--   reduce production capture_default -> TAnd

State 83:
## Known stack suffix:
## TAnd ident
## LR(1) items:
capture -> TAnd ident . [ TEllipsis TComma TCCro ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production capture -> TAnd ident

State 84:
## Known stack suffix:
## TOCro_Lambda lambda_capture
## LR(1) items:
lambda_introducer -> TOCro_Lambda lambda_capture . TCCro [ TOBrace ]
## Transitions:
-- On TCCro shift to state 85
## Reductions:

State 85:
## Known stack suffix:
## TOCro_Lambda lambda_capture TCCro
## LR(1) items:
lambda_introducer -> TOCro_Lambda lambda_capture TCCro . [ TOBrace ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production lambda_introducer -> TOCro_Lambda lambda_capture TCCro

State 86:
## Known stack suffix:
## ident
## LR(1) items:
capture -> ident . [ TEllipsis TComma TCCro ]
capture -> ident . TEq assign_expr [ TEllipsis TComma TCCro ]
## Transitions:
-- On TEq shift to state 87
## Reductions:
-- On TEllipsis TComma TCCro
--   reduce production capture -> ident

State 87:
## Known stack suffix:
## ident TEq
## LR(1) items:
capture -> ident TEq . assign_expr [ TEllipsis TComma TCCro ]
## Transitions:
-- On Twchar_t_Constr shift to state 14
-- On Twchar_t shift to state 1
-- On Tvoid shift to state 3
-- On Tunsigned shift to state 15
-- On Ttypeof shift to state 17
-- On Ttypeid shift to state 23
-- On Ttrue shift to state 25
-- On Tthrow shift to state 47
-- On Tthis shift to state 26
-- On Tstatic_cast shift to state 28
-- On Tsizeof shift to state 29
-- On Tsigned shift to state 30
-- On Tshort_Constr shift to state 31
-- On Tshort shift to state 32
-- On Treinterpret_cast shift to state 33
-- On Toperator shift to state 34
-- On Tnullptr shift to state 48
-- On Tnull shift to state 49
-- On Tlong_Constr shift to state 50
-- On Tlong shift to state 38
-- On Tint_Constr shift to state 51
-- On Tint shift to state 39
-- On Tfloat_Constr shift to state 52
-- On Tfloat shift to state 40
-- On Tfalse shift to state 53
-- On Tdynamic_cast shift to state 54
-- On Tdouble_Constr shift to state 55
-- On Tdouble shift to state 41
-- On Tdecltype shift to state 45
-- On Tconst_cast shift to state 56
-- On Tchar_Constr shift to state 57
-- On Tchar shift to state 58
-- On Tbool_Constr shift to state 59
-- On Tbool shift to state 60
-- On TTilde shift to state 61
-- On TString shift to state 62
-- On TPlus shift to state 63
-- On TOPar shift to state 64
-- On TOCro_Lambda shift to state 78
-- On TMul shift to state 88
-- On TMinus shift to state 89
-- On TInt shift to state 90
-- On TInc shift to state 91
-- On TIdent_TypedefConstr shift to state 106
-- On TIdent_Typedef shift to state 20
-- On TIdent_TemplatenameInQualifier_BeforeTypedef shift to state 21
-- On TIdent_TemplatenameInQualifier shift to state 12
-- On TIdent_Templatename shift to state 108
-- On TIdent_MacroString shift to state 110
-- On TIdent_ClassnameInQualifier_BeforeTypedef shift to state 111
-- On TIdent_ClassnameInQualifier shift to state 112
-- On TIdent shift to state 113
-- On TFloat shift to state 116
-- On TDec shift to state 117
-- On TColCol_BeforeTypedef shift to state 118
-- On TColCol shift to state 128
-- On TChar shift to state 174
-- On TBang shift to state 175
-- On TAndLog shift to state 176
-- On TAnd shift to state 177
-- On LDots shift to state 178
-- On unqualified_id shift to state 179
-- On unary_op shift to state 180
-- On unary_expr shift to state 181
-- On type_name shift to state 182
-- On type_cplusplus_id shift to state 183
-- On template_id shift to state 120
-- On string_elem shift to state 184
-- On simple_type_specifier shift to state 189
-- On shift_expr shift to state 217
-- On relational_expr shift to state 229
-- On qualified_id shift to state 191
-- On primary_expr shift to state 192
-- On primary_cplusplus_id shift to state 193
-- On postfix_expr shift to state 194
-- On pm_expr shift to state 219
-- On option(TColCol) shift to state 221
-- On operator_function_id shift to state 168
-- On new_expr shift to state 233
-- On nested_name_specifier2 shift to state 207
-- On nested_name_specifier shift to state 165
-- On multiplicative_expr shift to state 234
-- On logical_or_expr shift to state 246
-- On logical_and_expr shift to state 250
-- On literal shift to state 238
-- On lambda_introducer shift to state 239
-- On inclusive_or_expr shift to state 272
-- On id_expression shift to state 241
-- On exclusive_or_expr shift to state 273
-- On equality_expr shift to state 256
-- On enum_name_or_typedef_name_or_simple_class_name shift to state 123
-- On delete_expr shift to state 242
-- On decltype_specifier shift to state 243
-- On cpp_cast_operator shift to state 244
-- On conversion_function_id shift to state 169
-- On cond_expr shift to state 330
-- On class_or_namespace_name_for_qualifier2 shift to state 124
-- On class_or_namespace_name_for_qualifier shift to state 170
-- On cast_operator_expr shift to state 261
-- On cast_expr shift to state 331
-- On cast_constructor_expr shift to state 263
-- On basic_type_2 shift to state 264
-- On assign_expr shift to state 919
-- On and_expr shift to state 334
-- On additive_expr shift to state 341
## Reductions:
-- On Tnew Tdelete
--   reduce production option(TColCol) ->

State 88:
## Known stack suffix:
## TMul
## LR(1) items:
unary_op -> TMul . [ Twchar_t_Constr Twchar_t Tvoid Tunsigned Ttypeof Ttypeid Ttrue Tthis Tstatic_cast Tsizeof Tsigned Tshort_Constr Tshort Treinterpret_cast Toperator Tnullptr Tnull Tnew Tlong_Constr Tlong Tint_Constr Tint Tfloat_Constr Tfloat Tfalse Tdynamic_cast Tdouble_Constr Tdouble Tdelete Tdecltype Tconst_cast Tchar_Constr Tchar Tbool_Constr Tbool TTilde TString TPlus TOPar TOCro_Lambda TMul TMinus TInt TInc TIdent_TypedefConstr TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_MacroString TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TIdent TFloat TDec TColCol_BeforeTypedef TColCol TChar TBang TAndLog TAnd LDots ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production unary_op -> TMul

State 89:
## Known stack suffix:
## TMinus
## LR(1) items:
unary_op -> TMinus . [ Twchar_t_Constr Twchar_t Tvoid Tunsigned Ttypeof Ttypeid Ttrue Tthis Tstatic_cast Tsizeof Tsigned Tshort_Constr Tshort Treinterpret_cast Toperator Tnullptr Tnull Tnew Tlong_Constr Tlong Tint_Constr Tint Tfloat_Constr Tfloat Tfalse Tdynamic_cast Tdouble_Constr Tdouble Tdelete Tdecltype Tconst_cast Tchar_Constr Tchar Tbool_Constr Tbool TTilde TString TPlus TOPar TOCro_Lambda TMul TMinus TInt TInc TIdent_TypedefConstr TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_MacroString TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TIdent TFloat TDec TColCol_BeforeTypedef TColCol TChar TBang TAndLog TAnd LDots ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production unary_op -> TMinus

State 90:
## Known stack suffix:
## TInt
## LR(1) items:
literal -> TInt . [ TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtrOpStar TPtrOp TPtVirg TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMod TMinus TInfEq TInf TInc TEqEq TEq TEllipsis TDotStar TDot TDiv TDec TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAssign TAndLog TAnd RDots EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production literal -> TInt

State 91:
## Known stack suffix:
## TInc
## LR(1) items:
unary_expr -> TInc . unary_expr [ TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtrOpStar TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TEq TEllipsis TDotStar TDiv TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAssign TAndLog TAnd RDots EOF ]
## Transitions:
-- On Twchar_t_Constr shift to state 14
-- On Twchar_t shift to state 1
-- On Tvoid shift to state 3
-- On Tunsigned shift to state 15
-- On Ttypeof shift to state 17
-- On Ttypeid shift to state 23
-- On Ttrue shift to state 25
-- On Tthis shift to state 26
-- On Tstatic_cast shift to state 28
-- On Tsizeof shift to state 29
-- On Tsigned shift to state 30
-- On Tshort_Constr shift to state 31
-- On Tshort shift to state 32
-- On Treinterpret_cast shift to state 33
-- On Toperator shift to state 34
-- On Tnullptr shift to state 48
-- On Tnull shift to state 49
-- On Tlong_Constr shift to state 50
-- On Tlong shift to state 38
-- On Tint_Constr shift to state 51
-- On Tint shift to state 39
-- On Tfloat_Constr shift to state 52
-- On Tfloat shift to state 40
-- On Tfalse shift to state 53
-- On Tdynamic_cast shift to state 54
-- On Tdouble_Constr shift to state 55
-- On Tdouble shift to state 41
-- On Tdecltype shift to state 45
-- On Tconst_cast shift to state 56
-- On Tchar_Constr shift to state 57
-- On Tchar shift to state 58
-- On Tbool_Constr shift to state 59
-- On Tbool shift to state 60
-- On TTilde shift to state 61
-- On TString shift to state 62
-- On TPlus shift to state 63
-- On TOPar shift to state 92
-- On TOCro_Lambda shift to state 78
-- On TMul shift to state 88
-- On TMinus shift to state 89
-- On TInt shift to state 90
-- On TInc shift to state 91
-- On TIdent_TypedefConstr shift to state 106
-- On TIdent_Typedef shift to state 20
-- On TIdent_TemplatenameInQualifier_BeforeTypedef shift to state 21
-- On TIdent_TemplatenameInQualifier shift to state 12
-- On TIdent_Templatename shift to state 108
-- On TIdent_MacroString shift to state 110
-- On TIdent_ClassnameInQualifier_BeforeTypedef shift to state 111
-- On TIdent_ClassnameInQualifier shift to state 112
-- On TIdent shift to state 113
-- On TFloat shift to state 116
-- On TDec shift to state 117
-- On TColCol_BeforeTypedef shift to state 118
-- On TColCol shift to state 128
-- On TChar shift to state 174
-- On TBang shift to state 175
-- On TAndLog shift to state 176
-- On TAnd shift to state 177
-- On LDots shift to state 178
-- On unqualified_id shift to state 179
-- On unary_op shift to state 180
-- On unary_expr shift to state 918
-- On type_name shift to state 182
-- On type_cplusplus_id shift to state 183
-- On template_id shift to state 120
-- On string_elem shift to state 184
-- On simple_type_specifier shift to state 189
-- On qualified_id shift to state 191
-- On primary_expr shift to state 192
-- On primary_cplusplus_id shift to state 193
-- On postfix_expr shift to state 194
-- On option(TColCol) shift to state 221
-- On operator_function_id shift to state 168
-- On new_expr shift to state 233
-- On nested_name_specifier2 shift to state 207
-- On nested_name_specifier shift to state 165
-- On literal shift to state 238
-- On lambda_introducer shift to state 239
-- On id_expression shift to state 241
-- On enum_name_or_typedef_name_or_simple_class_name shift to state 123
-- On delete_expr shift to state 242
-- On decltype_specifier shift to state 243
-- On cpp_cast_operator shift to state 244
-- On conversion_function_id shift to state 169
-- On class_or_namespace_name_for_qualifier2 shift to state 124
-- On class_or_namespace_name_for_qualifier shift to state 170
-- On cast_operator_expr shift to state 261
-- On cast_constructor_expr shift to state 263
-- On basic_type_2 shift to state 264
## Reductions:
-- On Tnew Tdelete
--   reduce production option(TColCol) ->

State 92:
## Known stack suffix:
## TOPar
## LR(1) items:
postfix_expr -> TOPar . type_id TCPar braced_init_list [ TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtrOpStar TPtrOp TPtVirg TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMod TMinus TInfEq TInf TInc TEqEq TEq TEllipsis TDotStar TDot TDiv TDec TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAssign TAndLog TAnd RDots EOF ]
primary_expr -> TOPar . expr TCPar [ TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtrOpStar TPtrOp TPtVirg TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMod TMinus TInfEq TInf TInc TEqEq TEq TEllipsis TDotStar TDot TDiv TDec TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAssign TAndLog TAnd RDots EOF ]
primary_expr -> TOPar . compound TCPar [ TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtrOpStar TPtrOp TPtVirg TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMod TMinus TInfEq TInf TInc TEqEq TEq TEllipsis TDotStar TDot TDiv TDec TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAssign TAndLog TAnd RDots EOF ]
## Transitions:
-- On Twchar_t_Constr shift to state 14
-- On Twchar_t shift to state 1
-- On Tvolatile shift to state 2
-- On Tvoid shift to state 3
-- On Tunsigned shift to state 15
-- On Tunion shift to state 16
-- On Ttypeof shift to state 17
-- On Ttypename shift to state 19
-- On Ttypeid shift to state 23
-- On Ttrue shift to state 25
-- On Tthrow shift to state 47
-- On Tthis shift to state 26
-- On Tstruct shift to state 27
-- On Tstatic_cast shift to state 28
-- On Tsizeof shift to state 29
-- On Tsigned shift to state 30
-- On Tshort_Constr shift to state 31
-- On Tshort shift to state 32
-- On Trestrict shift to state 65
-- On Treinterpret_cast shift to state 33
-- On Toperator shift to state 34
-- On Tnullptr shift to state 48
-- On Tnull shift to state 49
-- On Tlong_Constr shift to state 50
-- On Tlong shift to state 38
-- On Tint_Constr shift to state 51
-- On Tint shift to state 39
-- On Tfloat_Constr shift to state 52
-- On Tfloat shift to state 40
-- On Tfalse shift to state 53
-- On Tenum shift to state 66
-- On Tdynamic_cast shift to state 54
-- On Tdouble_Constr shift to state 55
-- On Tdouble shift to state 41
-- On Tdecltype shift to state 45
-- On Tconst_cast shift to state 56
-- On Tconst shift to state 76
-- On Tclass shift to state 77
-- On Tchar_Constr shift to state 57
-- On Tchar shift to state 58
-- On Tbool_Constr shift to state 59
-- On Tbool shift to state 60
-- On TTilde shift to state 61
-- On TString shift to state 62
-- On TPlus shift to state 63
-- On TOPar shift to state 64
-- On TOCro_Lambda shift to state 78
-- On TOBrace shift to state 93
-- On TMul shift to state 88
-- On TMinus shift to state 89
-- On TInt shift to state 90
-- On TInc shift to state 91
-- On TIdent_TypedefConstr shift to state 106
-- On TIdent_Typedef shift to state 20
-- On TIdent_TemplatenameInQualifier_BeforeTypedef shift to state 21
-- On TIdent_TemplatenameInQualifier shift to state 12
-- On TIdent_Templatename shift to state 108
-- On TIdent_MacroString shift to state 110
-- On TIdent_ClassnameInQualifier_BeforeTypedef shift to state 111
-- On TIdent_ClassnameInQualifier shift to state 112
-- On TIdent shift to state 113
-- On TFloat shift to state 116
-- On TDec shift to state 117
-- On TColCol_BeforeTypedef shift to state 118
-- On TColCol shift to state 128
-- On TChar shift to state 174
-- On TBang shift to state 175
-- On TAndLog shift to state 176
-- On TAnd shift to state 177
-- On LDots shift to state 178
-- On unqualified_id shift to state 179
-- On unary_op shift to state 180
-- On unary_expr shift to state 181
-- On type_spec shift to state 204
-- On type_name shift to state 182
-- On type_id shift to state 911
-- On type_cplusplus_id shift to state 183
-- On template_id shift to state 120
-- On string_elem shift to state 184
-- On spec_qualif_list shift to state 225
-- On simple_type_specifier shift to state 266
-- On shift_expr shift to state 217
-- On relational_expr shift to state 229
-- On qualified_id shift to state 191
-- On primary_expr shift to state 192
-- On primary_cplusplus_id shift to state 193
-- On postfix_expr shift to state 194
-- On pm_expr shift to state 219
-- On option(TColCol) shift to state 221
-- On operator_function_id shift to state 168
-- On new_expr shift to state 233
-- On nested_name_specifier2 shift to state 207
-- On nested_name_specifier shift to state 165
-- On multiplicative_expr shift to state 234
-- On logical_or_expr shift to state 246
-- On logical_and_expr shift to state 250
-- On literal shift to state 238
-- On lambda_introducer shift to state 239
-- On inclusive_or_expr shift to state 272
-- On id_expression shift to state 241
-- On expr shift to state 914
-- On exclusive_or_expr shift to state 273
-- On equality_expr shift to state 256
-- On enum_specifier shift to state 209
-- On enum_name_or_typedef_name_or_simple_class_name shift to state 123
-- On enum_head shift to state 210
-- On elaborated_type_specifier shift to state 274
-- On delete_expr shift to state 242
-- On decltype_specifier shift to state 243
-- On cv_qualif shift to state 275
-- On cpp_cast_operator shift to state 244
-- On conversion_function_id shift to state 169
-- On cond_expr shift to state 330
-- On compound shift to state 916
-- On class_specifier shift to state 277
-- On class_or_namespace_name_for_qualifier2 shift to state 124
-- On class_or_namespace_name_for_qualifier shift to state 170
-- On class_key shift to state 278
-- On class_head shift to state 301
-- On cast_operator_expr shift to state 261
-- On cast_expr shift to state 331
-- On cast_constructor_expr shift to state 263
-- On basic_type_2 shift to state 264
-- On assign_expr shift to state 539
-- On and_expr shift to state 334
-- On additive_expr shift to state 341
## Reductions:
-- On Tnew Tdelete
--   reduce production option(TColCol) ->

State 93:
## Known stack suffix:
## TOBrace
## LR(1) items:
compound -> TOBrace . list(statement_cpp) TCBrace [ Twhile Twchar_t_Constr Twchar_t Tvolatile Tvoid Tvirtual Tusing Tunsigned Tunion Ttypeof Ttypename Ttypeid Ttypedef Ttry Ttrue Tthrow Tthread_local Tthis Ttemplate Tswitch Tstruct Tstatic_cast Tstatic Tsizeof Tsigned Tshort_Constr Tshort Treturn Trestrict Treinterpret_cast Tregister Tpublic Tprotected Tprivate Toperator Tnullptr Tnull Tnew Tnamespace Tmutable Tlong_Constr Tlong Tint_Constr Tint Tinline Tif Tgoto Tfriend Tfor Tfloat_Constr Tfloat Tfalse Textern Texplicit Tenum Telse Tdynamic_cast Tdouble_Constr Tdouble Tdo Tdelete Tdefault Tdecltype Tcontinue Tconstexpr Tconst_cast Tconst Tclass Tchar_Constr Tchar Tcatch Tcase Tbreak Tbool_Constr Tbool Tauto Tasm TXor TWhy TUndef TTilde TSup_Template TSupEq TSup TString TShr TShl TPtrOpStar TPtrOp TPtVirg TPlus TOrLog TOr TOPar TOCro_Lambda TOCro TOBrace TNotEq TMul TMod TMinus TInt TInfEq TInf TInclude TInc TIfdefelse TIfdefelif TIfdefVersion TIfdefMisc TIfdefBool TIfdef TIdent_TypedefConstr TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_MacroString TIdent_MacroStmt TIdent_MacroIterator TIdent_MacroDecl TIdent_Constructor TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TIdent TFloat TEqEq TEq TEndif TEllipsis TDotStar TDot TDiv TDefine TDec TCppDirectiveOther TCommentNewline_DefineEndOfMacro TComma TColCol_BeforeTypedef TColCol TCol TChar TCPar_EOL TCPar TCCro TCBrace TBang TAssign TAndLog TAnd RDots LDots EOF ]
## Transitions:
-- On Twhile shift to state 94
-- On Twchar_t_Constr shift to state 14
-- On Twchar_t shift to state 1
-- On Tvolatile shift to state 2
-- On Tvoid shift to state 3
-- On Tvirtual shift to state 4
-- On Tusing shift to state 5
-- On Tunsigned shift to state 15
-- On Tunion shift to state 16
-- On Ttypeof shift to state 17
-- On Ttypename shift to state 19
-- On Ttypeid shift to state 23
-- On Ttypedef shift to state 96
-- On Ttry shift to state 431
-- On Ttrue shift to state 25
-- On Tthrow shift to state 47
-- On Tthread_local shift to state 97
-- On Tthis shift to state 26
-- On Tswitch shift to state 515
-- On Tstruct shift to state 27
-- On Tstatic_cast shift to state 28
-- On Tstatic shift to state 323
-- On Tsizeof shift to state 29
-- On Tsigned shift to state 30
-- On Tshort_Constr shift to state 31
-- On Tshort shift to state 32
-- On Treturn shift to state 537
-- On Trestrict shift to state 65
-- On Treinterpret_cast shift to state 33
-- On Tregister shift to state 99
-- On Toperator shift to state 34
-- On Tnullptr shift to state 48
-- On Tnull shift to state 49
-- On Tnamespace shift to state 540
-- On Tmutable shift to state 100
-- On Tlong_Constr shift to state 50
-- On Tlong shift to state 38
-- On Tint_Constr shift to state 51
-- On Tint shift to state 39
-- On Tinline shift to state 101
-- On Tif shift to state 545
-- On Tgoto shift to state 549
-- On Tfriend shift to state 102
-- On Tfor shift to state 553
-- On Tfloat_Constr shift to state 52
-- On Tfloat shift to state 40
-- On Tfalse shift to state 53
-- On Textern shift to state 103
-- On Tenum shift to state 66
-- On Tdynamic_cast shift to state 54
-- On Tdouble_Constr shift to state 55
-- On Tdouble shift to state 41
-- On Tdo shift to state 562
-- On Tdefault shift to state 563
-- On Tdecltype shift to state 45
-- On Tcontinue shift to state 565
-- On Tconstexpr shift to state 104
-- On Tconst_cast shift to state 56
-- On Tconst shift to state 76
-- On Tclass shift to state 77
-- On Tchar_Constr shift to state 57
-- On Tchar shift to state 58
-- On Tcase shift to state 566
-- On Tbreak shift to state 571
-- On Tbool_Constr shift to state 59
-- On Tbool shift to state 60
-- On Tauto shift to state 105
-- On Tasm shift to state 366
-- On TUndef shift to state 415
-- On TTilde shift to state 61
-- On TString shift to state 62
-- On TPlus shift to state 63
-- On TOPar shift to state 64
-- On TOCro_Lambda shift to state 78
-- On TOBrace shift to state 93
-- On TMul shift to state 88
-- On TMinus shift to state 89
-- On TInt shift to state 90
-- On TInclude shift to state 416
-- On TInc shift to state 91
-- On TIfdefelse shift to state 417
-- On TIfdefelif shift to state 418
-- On TIfdefVersion shift to state 419
-- On TIfdefMisc shift to state 420
-- On TIfdefBool shift to state 421
-- On TIfdef shift to state 422
-- On TIdent_TypedefConstr shift to state 106
-- On TIdent_Typedef shift to state 572
-- On TIdent_TemplatenameInQualifier_BeforeTypedef shift to state 21
-- On TIdent_TemplatenameInQualifier shift to state 12
-- On TIdent_Templatename shift to state 108
-- On TIdent_MacroString shift to state 110
-- On TIdent_MacroStmt shift to state 573
-- On TIdent_MacroIterator shift to state 574
-- On TIdent_MacroDecl shift to state 423
-- On TIdent_ClassnameInQualifier_BeforeTypedef shift to state 111
-- On TIdent_ClassnameInQualifier shift to state 112
-- On TIdent shift to state 578
-- On TFloat shift to state 116
-- On TEndif shift to state 428
-- On TEllipsis shift to state 580
-- On TDefine shift to state 429
-- On TDec shift to state 117
-- On TCppDirectiveOther shift to state 691
-- On TColCol_BeforeTypedef shift to state 118
-- On TColCol shift to state 128
-- On TChar shift to state 174
-- On TBang shift to state 175
-- On TAndLog shift to state 176
-- On TAnd shift to state 177
-- On LDots shift to state 178
-- On using_directive shift to state 581
-- On using_declaration shift to state 582
-- On unqualified_id shift to state 179
-- On unary_op shift to state 180
-- On unary_expr shift to state 181
-- On type_spec shift to state 314
-- On type_name shift to state 182
-- On type_cplusplus_id shift to state 183
-- On try_block shift to state 583
-- On template_id shift to state 120
-- On string_elem shift to state 184
-- On storage_class_spec shift to state 316
-- On statement_cpp shift to state 904
-- On statement shift to state 905
-- On simple_type_specifier shift to state 266
-- On simple_declaration shift to state 585
-- On shift_expr shift to state 217
-- On selection shift to state 586
-- On relational_expr shift to state 229
-- On qualified_id shift to state 191
-- On primary_expr shift to state 192
-- On primary_cplusplus_id shift to state 193
-- On postfix_expr shift to state 194
-- On pm_expr shift to state 219
-- On option(expr) shift to state 556
-- On option(TColCol) shift to state 221
-- On operator_function_id shift to state 168
-- On new_expr shift to state 233
-- On nested_name_specifier2 shift to state 207
-- On nested_name_specifier shift to state 165
-- On namespace_alias_definition shift to state 587
-- On multiplicative_expr shift to state 234
-- On logical_or_expr shift to state 246
-- On logical_and_expr shift to state 250
-- On literal shift to state 238
-- On list(statement_cpp) shift to state 909
-- On lambda_introducer shift to state 239
-- On labeled shift to state 588
-- On jump shift to state 589
-- On iteration shift to state 591
-- On inclusive_or_expr shift to state 272
-- On ident shift to state 592
-- On id_expression shift to state 241
-- On function_spec shift to state 437
-- On function_definition shift to state 595
-- On expr_statement shift to state 596
-- On expr shift to state 597
-- On exclusive_or_expr shift to state 273
-- On equality_expr shift to state 256
-- On enum_specifier shift to state 209
-- On enum_name_or_typedef_name_or_simple_class_name shift to state 123
-- On enum_head shift to state 210
-- On elaborated_type_specifier shift to state 274
-- On delete_expr shift to state 242
-- On decltype_specifier shift to state 243
-- On declaration_statement shift to state 598
-- On decl_spec_seq shift to state 599
-- On decl_spec shift to state 473
-- On cv_qualif shift to state 475
-- On cpp_ifdef_directive shift to state 907
-- On cpp_directive shift to state 908
-- On cpp_cast_operator shift to state 244
-- On conversion_function_id shift to state 169
-- On cond_expr shift to state 330
-- On compound shift to state 615
-- On class_specifier shift to state 277
-- On class_or_namespace_name_for_qualifier2 shift to state 124
-- On class_or_namespace_name_for_qualifier shift to state 170
-- On class_key shift to state 278
-- On class_head shift to state 301
-- On cast_operator_expr shift to state 261
-- On cast_expr shift to state 331
-- On cast_constructor_expr shift to state 263
-- On block_declaration shift to state 616
-- On basic_type_2 shift to state 264
-- On assign_expr shift to state 539
-- On asm_definition shift to state 617
-- On and_expr shift to state 334
-- On additive_expr shift to state 341
## Reductions:
-- On TCBrace
--   reduce production list(statement_cpp) ->
-- On Tnew Tdelete
--   reduce production option(TColCol) ->
-- On TPtVirg
--   reduce production option(expr) ->

State 94:
## Known stack suffix:
## Twhile
## LR(1) items:
iteration -> Twhile . TOPar condition TCPar statement [ Twhile Twchar_t_Constr Twchar_t Tvolatile Tvoid Tvirtual Tusing Tunsigned Tunion Ttypeof Ttypename Ttypeid Ttypedef Ttry Ttrue Tthrow Tthread_local Tthis Tswitch Tstruct Tstatic_cast Tstatic Tsizeof Tsigned Tshort_Constr Tshort Treturn Trestrict Treinterpret_cast Tregister Toperator Tnullptr Tnull Tnew Tnamespace Tmutable Tlong_Constr Tlong Tint_Constr Tint Tinline Tif Tgoto Tfriend Tfor Tfloat_Constr Tfloat Tfalse Textern Tenum Telse Tdynamic_cast Tdouble_Constr Tdouble Tdo Tdelete Tdefault Tdecltype Tcontinue Tconstexpr Tconst_cast Tconst Tclass Tchar_Constr Tchar Tcase Tbreak Tbool_Constr Tbool Tauto Tasm TUndef TTilde TString TPtVirg TPlus TOPar TOCro_Lambda TOBrace TMul TMinus TInt TInclude TInc TIfdefelse TIfdefelif TIfdefVersion TIfdefMisc TIfdefBool TIfdef TIdent_TypedefConstr TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_MacroString TIdent_MacroStmt TIdent_MacroIterator TIdent_MacroDecl TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TIdent TFloat TEndif TEllipsis TDefine TDec TCppDirectiveOther TCommentNewline_DefineEndOfMacro TColCol_BeforeTypedef TColCol TChar TCBrace TBang TAndLog TAnd LDots EOF ]
## Transitions:
-- On TOPar shift to state 95
## Reductions:

State 95:
## Known stack suffix:
## Twhile TOPar
## LR(1) items:
iteration -> Twhile TOPar . condition TCPar statement [ Twhile Twchar_t_Constr Twchar_t Tvolatile Tvoid Tvirtual Tusing Tunsigned Tunion Ttypeof Ttypename Ttypeid Ttypedef Ttry Ttrue Tthrow Tthread_local Tthis Tswitch Tstruct Tstatic_cast Tstatic Tsizeof Tsigned Tshort_Constr Tshort Treturn Trestrict Treinterpret_cast Tregister Toperator Tnullptr Tnull Tnew Tnamespace Tmutable Tlong_Constr Tlong Tint_Constr Tint Tinline Tif Tgoto Tfriend Tfor Tfloat_Constr Tfloat Tfalse Textern Tenum Telse Tdynamic_cast Tdouble_Constr Tdouble Tdo Tdelete Tdefault Tdecltype Tcontinue Tconstexpr Tconst_cast Tconst Tclass Tchar_Constr Tchar Tcase Tbreak Tbool_Constr Tbool Tauto Tasm TUndef TTilde TString TPtVirg TPlus TOPar TOCro_Lambda TOBrace TMul TMinus TInt TInclude TInc TIfdefelse TIfdefelif TIfdefVersion TIfdefMisc TIfdefBool TIfdef TIdent_TypedefConstr TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_MacroString TIdent_MacroStmt TIdent_MacroIterator TIdent_MacroDecl TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TIdent TFloat TEndif TEllipsis TDefine TDec TCppDirectiveOther TCommentNewline_DefineEndOfMacro TColCol_BeforeTypedef TColCol TChar TCBrace TBang TAndLog TAnd LDots EOF ]
## Transitions:
-- On Twchar_t_Constr shift to state 14
-- On Twchar_t shift to state 1
-- On Tvolatile shift to state 2
-- On Tvoid shift to state 3
-- On Tvirtual shift to state 4
-- On Tunsigned shift to state 15
-- On Tunion shift to state 16
-- On Ttypeof shift to state 17
-- On Ttypename shift to state 19
-- On Ttypeid shift to state 23
-- On Ttypedef shift to state 96
-- On Ttrue shift to state 25
-- On Tthrow shift to state 47
-- On Tthread_local shift to state 97
-- On Tthis shift to state 26
-- On Tstruct shift to state 27
-- On Tstatic_cast shift to state 28
-- On Tstatic shift to state 98
-- On Tsizeof shift to state 29
-- On Tsigned shift to state 30
-- On Tshort_Constr shift to state 31
-- On Tshort shift to state 32
-- On Trestrict shift to state 65
-- On Treinterpret_cast shift to state 33
-- On Tregister shift to state 99
-- On Toperator shift to state 34
-- On Tnullptr shift to state 48
-- On Tnull shift to state 49
-- On Tmutable shift to state 100
-- On Tlong_Constr shift to state 50
-- On Tlong shift to state 38
-- On Tint_Constr shift to state 51
-- On Tint shift to state 39
-- On Tinline shift to state 101
-- On Tfriend shift to state 102
-- On Tfloat_Constr shift to state 52
-- On Tfloat shift to state 40
-- On Tfalse shift to state 53
-- On Textern shift to state 103
-- On Tenum shift to state 66
-- On Tdynamic_cast shift to state 54
-- On Tdouble_Constr shift to state 55
-- On Tdouble shift to state 41
-- On Tdecltype shift to state 45
-- On Tconstexpr shift to state 104
-- On Tconst_cast shift to state 56
-- On Tconst shift to state 76
-- On Tclass shift to state 77
-- On Tchar_Constr shift to state 57
-- On Tchar shift to state 58
-- On Tbool_Constr shift to state 59
-- On Tbool shift to state 60
-- On Tauto shift to state 105
-- On TTilde shift to state 61
-- On TString shift to state 62
-- On TPlus shift to state 63
-- On TOPar shift to state 64
-- On TOCro_Lambda shift to state 78
-- On TMul shift to state 88
-- On TMinus shift to state 89
-- On TInt shift to state 90
-- On TInc shift to state 91
-- On TIdent_TypedefConstr shift to state 106
-- On TIdent_Typedef shift to state 20
-- On TIdent_TemplatenameInQualifier_BeforeTypedef shift to state 21
-- On TIdent_TemplatenameInQualifier shift to state 12
-- On TIdent_Templatename shift to state 108
-- On TIdent_MacroString shift to state 110
-- On TIdent_ClassnameInQualifier_BeforeTypedef shift to state 111
-- On TIdent_ClassnameInQualifier shift to state 112
-- On TIdent shift to state 113
-- On TFloat shift to state 116
-- On TDec shift to state 117
-- On TColCol_BeforeTypedef shift to state 118
-- On TColCol shift to state 128
-- On TChar shift to state 174
-- On TBang shift to state 175
-- On TAndLog shift to state 176
-- On TAnd shift to state 177
-- On LDots shift to state 178
-- On unqualified_id shift to state 179
-- On unary_op shift to state 180
-- On unary_expr shift to state 181
-- On type_spec shift to state 314
-- On type_name shift to state 182
-- On type_cplusplus_id shift to state 183
-- On template_id shift to state 120
-- On string_elem shift to state 184
-- On storage_class_spec shift to state 316
-- On simple_type_specifier shift to state 266
-- On shift_expr shift to state 217
-- On relational_expr shift to state 229
-- On qualified_id shift to state 191
-- On primary_expr shift to state 192
-- On primary_cplusplus_id shift to state 193
-- On postfix_expr shift to state 194
-- On pm_expr shift to state 219
-- On option(TColCol) shift to state 221
-- On operator_function_id shift to state 168
-- On new_expr shift to state 233
-- On nested_name_specifier2 shift to state 207
-- On nested_name_specifier shift to state 165
-- On multiplicative_expr shift to state 234
-- On logical_or_expr shift to state 246
-- On logical_and_expr shift to state 250
-- On literal shift to state 238
-- On lambda_introducer shift to state 239
-- On inclusive_or_expr shift to state 272
-- On id_expression shift to state 241
-- On function_spec shift to state 437
-- On expr shift to state 517
-- On exclusive_or_expr shift to state 273
-- On equality_expr shift to state 256
-- On enum_specifier shift to state 209
-- On enum_name_or_typedef_name_or_simple_class_name shift to state 123
-- On enum_head shift to state 210
-- On elaborated_type_specifier shift to state 274
-- On delete_expr shift to state 242
-- On decltype_specifier shift to state 243
-- On decl_spec_seq shift to state 520
-- On decl_spec shift to state 473
-- On cv_qualif shift to state 475
-- On cpp_cast_operator shift to state 244
-- On conversion_function_id shift to state 169
-- On condition shift to state 901
-- On cond_expr shift to state 330
-- On class_specifier shift to state 277
-- On class_or_namespace_name_for_qualifier2 shift to state 124
-- On class_or_namespace_name_for_qualifier shift to state 170
-- On class_key shift to state 278
-- On class_head shift to state 301
-- On cast_operator_expr shift to state 261
-- On cast_expr shift to state 331
-- On cast_constructor_expr shift to state 263
-- On basic_type_2 shift to state 264
-- On assign_expr shift to state 539
-- On and_expr shift to state 334
-- On additive_expr shift to state 341
## Reductions:
-- On Tnew Tdelete
--   reduce production option(TColCol) ->

State 96:
## Known stack suffix:
## Ttypedef
## LR(1) items:
decl_spec -> Ttypedef . [ Twchar_t Tvolatile Tvoid Tvirtual Tunsigned Tunion Ttypeof Ttypename Ttypedef Tthread_local Tstruct Tstatic Tsigned Tshort Trestrict Tregister Toperator Tmutable Tlong Tint Tinline Tfriend Tfloat Textern Tenum Tdouble Tdecltype Tconstexpr Tconst Tclass Tchar Tbool Tauto TSup_Template TPtVirg TOPar TOCro TMul TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TIdent TEq TComma TColCol_BeforeTypedef TColCol TCol TCPar TAndLog TAnd ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production decl_spec -> Ttypedef

State 97:
## Known stack suffix:
## Tthread_local
## LR(1) items:
storage_class_spec -> Tthread_local . [ Twchar_t Tvolatile Tvoid Tvirtual Tunsigned Tunion Ttypeof Ttypename Ttypedef Tthread_local Tstruct Tstatic Tsigned Tshort Trestrict Tregister Toperator Tmutable Tlong Tint Tinline Tfriend Tfloat Textern Tenum Tdouble Tdecltype Tconstexpr Tconst Tclass Tchar Tbool Tauto TSup_Template TPtVirg TOPar TOCro TMul TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TIdent TEq TComma TColCol_BeforeTypedef TColCol TCol TCPar TAndLog TAnd ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production storage_class_spec -> Tthread_local

State 98:
## Known stack suffix:
## Tstatic
## LR(1) items:
storage_class_spec -> Tstatic . [ Twchar_t Tvolatile Tvoid Tvirtual Tunsigned Tunion Ttypeof Ttypename Ttypedef Tthread_local Tstruct Tstatic Tsigned Tshort Trestrict Tregister Toperator Tmutable Tlong Tint Tinline Tfriend Tfloat Textern Tenum Tdouble Tdecltype Tconstexpr Tconst Tclass Tchar Tbool Tauto TSup_Template TPtVirg TOPar TOCro TMul TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TIdent TEq TComma TColCol_BeforeTypedef TColCol TCol TCPar TAndLog TAnd ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production storage_class_spec -> Tstatic

State 99:
## Known stack suffix:
## Tregister
## LR(1) items:
storage_class_spec -> Tregister . [ Twchar_t Tvolatile Tvoid Tvirtual Tunsigned Tunion Ttypeof Ttypename Ttypedef Tthread_local Tstruct Tstatic Tsigned Tshort Trestrict Tregister Toperator Tmutable Tlong Tint Tinline Tfriend Tfloat Textern Tenum Tdouble Tdecltype Tconstexpr Tconst Tclass Tchar Tbool Tauto TSup_Template TPtVirg TOPar TOCro TMul TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TIdent TEq TComma TColCol_BeforeTypedef TColCol TCol TCPar TAndLog TAnd ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production storage_class_spec -> Tregister

State 100:
## Known stack suffix:
## Tmutable
## LR(1) items:
storage_class_spec -> Tmutable . [ Twchar_t Tvolatile Tvoid Tvirtual Tunsigned Tunion Ttypeof Ttypename Ttypedef Tthread_local Tstruct Tstatic Tsigned Tshort Trestrict Tregister Toperator Tmutable Tlong Tint Tinline Tfriend Tfloat Textern Tenum Tdouble Tdecltype Tconstexpr Tconst Tclass Tchar Tbool Tauto TSup_Template TPtVirg TOPar TOCro TMul TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TIdent TEq TComma TColCol_BeforeTypedef TColCol TCol TCPar TAndLog TAnd ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production storage_class_spec -> Tmutable

State 101:
## Known stack suffix:
## Tinline
## LR(1) items:
function_spec -> Tinline . [ Twchar_t Tvolatile Tvoid Tvirtual Tunsigned Tunion Ttypeof Ttypename Ttypedef Tthread_local Tstruct Tstatic Tsigned Tshort Trestrict Tregister Toperator Tmutable Tlong Tint Tinline Tfriend Tfloat Textern Tenum Tdouble Tdecltype Tconstexpr Tconst Tclass Tchar Tbool Tauto TSup_Template TPtVirg TOPar TOCro TMul TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TIdent TEq TComma TColCol_BeforeTypedef TColCol TCol TCPar TAndLog TAnd ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production function_spec -> Tinline

State 102:
## Known stack suffix:
## Tfriend
## LR(1) items:
decl_spec -> Tfriend . [ Twchar_t Tvolatile Tvoid Tvirtual Tunsigned Tunion Ttypeof Ttypename Ttypedef Tthread_local Tstruct Tstatic Tsigned Tshort Trestrict Tregister Toperator Tmutable Tlong Tint Tinline Tfriend Tfloat Textern Tenum Tdouble Tdecltype Tconstexpr Tconst Tclass Tchar Tbool Tauto TSup_Template TPtVirg TOPar TOCro TMul TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TIdent TEq TComma TColCol_BeforeTypedef TColCol TCol TCPar TAndLog TAnd ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production decl_spec -> Tfriend

State 103:
## Known stack suffix:
## Textern
## LR(1) items:
storage_class_spec -> Textern . [ Twchar_t Tvolatile Tvoid Tvirtual Tunsigned Tunion Ttypeof Ttypename Ttypedef Tthread_local Tstruct Tstatic Tsigned Tshort Trestrict Tregister Toperator Tmutable Tlong Tint Tinline Tfriend Tfloat Textern Tenum Tdouble Tdecltype Tconstexpr Tconst Tclass Tchar Tbool Tauto TSup_Template TPtVirg TOPar TOCro TMul TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TIdent TEq TComma TColCol_BeforeTypedef TColCol TCol TCPar TAndLog TAnd ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production storage_class_spec -> Textern

State 104:
## Known stack suffix:
## Tconstexpr
## LR(1) items:
decl_spec -> Tconstexpr . [ Twchar_t Tvolatile Tvoid Tvirtual Tunsigned Tunion Ttypeof Ttypename Ttypedef Tthread_local Tstruct Tstatic Tsigned Tshort Trestrict Tregister Toperator Tmutable Tlong Tint Tinline Tfriend Tfloat Textern Tenum Tdouble Tdecltype Tconstexpr Tconst Tclass Tchar Tbool Tauto TSup_Template TPtVirg TOPar TOCro TMul TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TIdent TEq TComma TColCol_BeforeTypedef TColCol TCol TCPar TAndLog TAnd ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production decl_spec -> Tconstexpr

State 105:
## Known stack suffix:
## Tauto
## LR(1) items:
storage_class_spec -> Tauto . [ Twchar_t Tvolatile Tvoid Tvirtual Tunsigned Tunion Ttypeof Ttypename Ttypedef Tthread_local Tstruct Tstatic Tsigned Tshort Trestrict Tregister Toperator Tmutable Tlong Tint Tinline Tfriend Tfloat Textern Tenum Tdouble Tdecltype Tconstexpr Tconst Tclass Tchar Tbool Tauto TSup_Template TPtVirg TOPar TOCro TMul TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TIdent TEq TComma TColCol_BeforeTypedef TColCol TCol TCPar TAndLog TAnd ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production storage_class_spec -> Tauto

State 106:
## Known stack suffix:
## TIdent_TypedefConstr
## LR(1) items:
cast_constructor_expr -> TIdent_TypedefConstr . TOPar optl(listc(argument)) TCPar [ TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtrOpStar TPtrOp TPtVirg TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMod TMinus TInfEq TInf TInc TEqEq TEq TEllipsis TDotStar TDot TDiv TDec TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAssign TAndLog TAnd RDots EOF ]
## Transitions:
-- On TOPar shift to state 107
## Reductions:

State 107:
## Known stack suffix:
## TIdent_TypedefConstr TOPar
## LR(1) items:
cast_constructor_expr -> TIdent_TypedefConstr TOPar . optl(listc(argument)) TCPar [ TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtrOpStar TPtrOp TPtVirg TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMod TMinus TInfEq TInf TInc TEqEq TEq TEllipsis TDotStar TDot TDiv TDec TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAssign TAndLog TAnd RDots EOF ]
## Transitions:
-- On Twchar_t_Constr shift to state 14
-- On Twchar_t shift to state 1
-- On Tvolatile shift to state 2
-- On Tvoid shift to state 3
-- On Tunsigned shift to state 15
-- On Tunion shift to state 16
-- On Ttypeof shift to state 17
-- On Ttypename shift to state 19
-- On Ttypeid shift to state 23
-- On Ttrue shift to state 25
-- On Tthrow shift to state 47
-- On Tthis shift to state 26
-- On Tstruct shift to state 27
-- On Tstatic_cast shift to state 28
-- On Tsizeof shift to state 29
-- On Tsigned shift to state 30
-- On Tshort_Constr shift to state 31
-- On Tshort shift to state 32
-- On Trestrict shift to state 65
-- On Treinterpret_cast shift to state 33
-- On Toperator shift to state 34
-- On Tnullptr shift to state 48
-- On Tnull shift to state 49
-- On Tlong_Constr shift to state 50
-- On Tlong shift to state 38
-- On Tint_Constr shift to state 51
-- On Tint shift to state 39
-- On Tfloat_Constr shift to state 52
-- On Tfloat shift to state 40
-- On Tfalse shift to state 53
-- On Tenum shift to state 66
-- On Tdynamic_cast shift to state 54
-- On Tdouble_Constr shift to state 55
-- On Tdouble shift to state 41
-- On Tdecltype shift to state 45
-- On Tconst_cast shift to state 56
-- On Tconst shift to state 76
-- On Tclass shift to state 77
-- On Tchar_Constr shift to state 57
-- On Tchar shift to state 58
-- On Tbool_Constr shift to state 59
-- On Tbool shift to state 60
-- On TTilde shift to state 61
-- On TString shift to state 62
-- On TPlus shift to state 63
-- On TOPar shift to state 64
-- On TOCro_Lambda shift to state 78
-- On TMul shift to state 88
-- On TMinus shift to state 89
-- On TInt shift to state 90
-- On TInc shift to state 91
-- On TIdent_TypedefConstr shift to state 106
-- On TIdent_Typedef shift to state 20
-- On TIdent_TemplatenameInQualifier_BeforeTypedef shift to state 21
-- On TIdent_TemplatenameInQualifier shift to state 12
-- On TIdent_Templatename shift to state 108
-- On TIdent_MacroString shift to state 110
-- On TIdent_ClassnameInQualifier_BeforeTypedef shift to state 111
-- On TIdent_ClassnameInQualifier shift to state 112
-- On TIdent shift to state 113
-- On TFloat shift to state 116
-- On TEllipsis shift to state 201
-- On TDec shift to state 117
-- On TColCol_BeforeTypedef shift to state 118
-- On TColCol shift to state 128
-- On TChar shift to state 174
-- On TBang shift to state 175
-- On TAny_Action shift to state 202
-- On TAndLog shift to state 176
-- On TAnd shift to state 177
-- On LDots shift to state 178
-- On unqualified_id shift to state 179
-- On unary_op shift to state 180
-- On unary_expr shift to state 181
-- On type_spec shift to state 204
-- On type_name shift to state 182
-- On type_id shift to state 224
-- On type_cplusplus_id shift to state 183
-- On template_id shift to state 120
-- On string_elem shift to state 184
-- On spec_qualif_list shift to state 225
-- On simple_type_specifier shift to state 266
-- On shift_expr shift to state 217
-- On relational_expr shift to state 229
-- On qualified_id shift to state 191
-- On primary_expr shift to state 192
-- On primary_cplusplus_id shift to state 193
-- On postfix_expr shift to state 194
-- On pm_expr shift to state 219
-- On optl(listc(argument)) shift to state 899
-- On option(TColCol) shift to state 221
-- On operator_function_id shift to state 168
-- On nonempty_list(TAny_Action) shift to state 269
-- On new_expr shift to state 233
-- On nested_name_specifier2 shift to state 207
-- On nested_name_specifier shift to state 165
-- On multiplicative_expr shift to state 234
-- On logical_or_expr shift to state 246
-- On logical_and_expr shift to state 250
-- On literal shift to state 238
-- On listc(argument) shift to state 270
-- On lambda_introducer shift to state 239
-- On inclusive_or_expr shift to state 272
-- On id_expression shift to state 241
-- On exclusive_or_expr shift to state 273
-- On equality_expr shift to state 256
-- On enum_specifier shift to state 209
-- On enum_name_or_typedef_name_or_simple_class_name shift to state 123
-- On enum_head shift to state 210
-- On elaborated_type_specifier shift to state 274
-- On delete_expr shift to state 242
-- On decltype_specifier shift to state 243
-- On cv_qualif shift to state 275
-- On cpp_cast_operator shift to state 244
-- On conversion_function_id shift to state 169
-- On cond_expr shift to state 330
-- On class_specifier shift to state 277
-- On class_or_namespace_name_for_qualifier2 shift to state 124
-- On class_or_namespace_name_for_qualifier shift to state 170
-- On class_key shift to state 278
-- On class_head shift to state 301
-- On cast_operator_expr shift to state 261
-- On cast_expr shift to state 331
-- On cast_constructor_expr shift to state 263
-- On basic_type_2 shift to state 264
-- On assign_expr shift to state 354
-- On argument shift to state 355
-- On and_expr shift to state 334
-- On additive_expr shift to state 341
## Reductions:
-- On Tnew Tdelete
--   reduce production option(TColCol) ->
-- On TCPar
--   reduce production optl(listc(argument)) ->

State 108:
## Known stack suffix:
## TIdent_Templatename
## LR(1) items:
template_id -> TIdent_Templatename . TInf_Template listc(template_argument) TSup_Template [ Twchar_t Tvolatile Tvoid Tvirtual Tunsigned Tunion Ttypeof Ttypename Ttypedef Tthread_local Tstruct Tstatic Tsigned Tshort Trestrict Tregister Toperator Tmutable Tlong Tint Tinline Tfriend Tfloat Textern Tenum Tdouble Tdecltype Tconstexpr Tconst Tclass Tchar Tbool Tauto Tasm TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtrOpStar TPtrOp TPtVirg TPlus TOrLog TOr TOPar_CplusplusInit TOPar TOCro TOBrace TNotEq TMul TMod TMinus TInfEq TInf TInc TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TIdent TEqEq TEq TEllipsis TDotStar TDot TDiv TDec TCommentNewline_DefineEndOfMacro TComma TColCol_BeforeTypedef TColCol TCol TCPar_EOL TCPar TCCro TCBrace TAssign TAndLog TAnd RDots EOF ]
## Transitions:
-- On TInf_Template shift to state 109
## Reductions:

State 109:
## Known stack suffix:
## TIdent_Templatename TInf_Template
## LR(1) items:
template_id -> TIdent_Templatename TInf_Template . listc(template_argument) TSup_Template [ Twchar_t Tvolatile Tvoid Tvirtual Tunsigned Tunion Ttypeof Ttypename Ttypedef Tthread_local Tstruct Tstatic Tsigned Tshort Trestrict Tregister Toperator Tmutable Tlong Tint Tinline Tfriend Tfloat Textern Tenum Tdouble Tdecltype Tconstexpr Tconst Tclass Tchar Tbool Tauto Tasm TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtrOpStar TPtrOp TPtVirg TPlus TOrLog TOr TOPar_CplusplusInit TOPar TOCro TOBrace TNotEq TMul TMod TMinus TInfEq TInf TInc TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TIdent TEqEq TEq TEllipsis TDotStar TDot TDiv TDec TCommentNewline_DefineEndOfMacro TComma TColCol_BeforeTypedef TColCol TCol TCPar_EOL TCPar TCCro TCBrace TAssign TAndLog TAnd RDots EOF ]
## Transitions:
-- On Twchar_t_Constr shift to state 14
-- On Twchar_t shift to state 1
-- On Tvolatile shift to state 2
-- On Tvoid shift to state 3
-- On Tunsigned shift to state 15
-- On Tunion shift to state 16
-- On Ttypeof shift to state 17
-- On Ttypename shift to state 19
-- On Ttypeid shift to state 23
-- On Ttrue shift to state 25
-- On Tthrow shift to state 47
-- On Tthis shift to state 26
-- On Tstruct shift to state 27
-- On Tstatic_cast shift to state 28
-- On Tsizeof shift to state 29
-- On Tsigned shift to state 30
-- On Tshort_Constr shift to state 31
-- On Tshort shift to state 32
-- On Trestrict shift to state 65
-- On Treinterpret_cast shift to state 33
-- On Toperator shift to state 34
-- On Tnullptr shift to state 48
-- On Tnull shift to state 49
-- On Tlong_Constr shift to state 50
-- On Tlong shift to state 38
-- On Tint_Constr shift to state 51
-- On Tint shift to state 39
-- On Tfloat_Constr shift to state 52
-- On Tfloat shift to state 40
-- On Tfalse shift to state 53
-- On Tenum shift to state 66
-- On Tdynamic_cast shift to state 54
-- On Tdouble_Constr shift to state 55
-- On Tdouble shift to state 41
-- On Tdecltype shift to state 45
-- On Tconst_cast shift to state 56
-- On Tconst shift to state 76
-- On Tclass shift to state 77
-- On Tchar_Constr shift to state 57
-- On Tchar shift to state 58
-- On Tbool_Constr shift to state 59
-- On Tbool shift to state 60
-- On TTilde shift to state 61
-- On TString shift to state 62
-- On TPlus shift to state 63
-- On TOPar shift to state 64
-- On TOCro_Lambda shift to state 78
-- On TMul shift to state 88
-- On TMinus shift to state 89
-- On TInt shift to state 90
-- On TInc shift to state 91
-- On TIdent_TypedefConstr shift to state 106
-- On TIdent_Typedef shift to state 20
-- On TIdent_TemplatenameInQualifier_BeforeTypedef shift to state 21
-- On TIdent_TemplatenameInQualifier shift to state 12
-- On TIdent_Templatename shift to state 108
-- On TIdent_MacroString shift to state 110
-- On TIdent_ClassnameInQualifier_BeforeTypedef shift to state 111
-- On TIdent_ClassnameInQualifier shift to state 112
-- On TIdent shift to state 113
-- On TFloat shift to state 116
-- On TDec shift to state 117
-- On TColCol_BeforeTypedef shift to state 118
-- On TColCol shift to state 128
-- On TChar shift to state 174
-- On TBang shift to state 175
-- On TAndLog shift to state 176
-- On TAnd shift to state 177
-- On LDots shift to state 178
-- On unqualified_id shift to state 179
-- On unary_op shift to state 180
-- On unary_expr shift to state 181
-- On type_spec shift to state 204
-- On type_name shift to state 182
-- On type_id shift to state 892
-- On type_cplusplus_id shift to state 183
-- On template_id shift to state 120
-- On template_argument shift to state 893
-- On string_elem shift to state 184
-- On spec_qualif_list shift to state 225
-- On simple_type_specifier shift to state 266
-- On shift_expr shift to state 217
-- On relational_expr shift to state 229
-- On qualified_id shift to state 191
-- On primary_expr shift to state 192
-- On primary_cplusplus_id shift to state 193
-- On postfix_expr shift to state 194
-- On pm_expr shift to state 219
-- On option(TColCol) shift to state 221
-- On operator_function_id shift to state 168
-- On new_expr shift to state 233
-- On nested_name_specifier2 shift to state 207
-- On nested_name_specifier shift to state 165
-- On multiplicative_expr shift to state 234
-- On logical_or_expr shift to state 246
-- On logical_and_expr shift to state 250
-- On literal shift to state 238
-- On listc(template_argument) shift to state 894
-- On lambda_introducer shift to state 239
-- On inclusive_or_expr shift to state 272
-- On id_expression shift to state 241
-- On exclusive_or_expr shift to state 273
-- On equality_expr shift to state 256
-- On enum_specifier shift to state 209
-- On enum_name_or_typedef_name_or_simple_class_name shift to state 123
-- On enum_head shift to state 210
-- On elaborated_type_specifier shift to state 274
-- On delete_expr shift to state 242
-- On decltype_specifier shift to state 243
-- On cv_qualif shift to state 275
-- On cpp_cast_operator shift to state 244
-- On conversion_function_id shift to state 169
-- On cond_expr shift to state 330
-- On class_specifier shift to state 277
-- On class_or_namespace_name_for_qualifier2 shift to state 124
-- On class_or_namespace_name_for_qualifier shift to state 170
-- On class_key shift to state 278
-- On class_head shift to state 301
-- On cast_operator_expr shift to state 261
-- On cast_expr shift to state 331
-- On cast_constructor_expr shift to state 263
-- On basic_type_2 shift to state 264
-- On assign_expr shift to state 898
-- On and_expr shift to state 334
-- On additive_expr shift to state 341
## Reductions:
-- On Tnew Tdelete
--   reduce production option(TColCol) ->

State 110:
## Known stack suffix:
## TIdent_MacroString
## LR(1) items:
string_elem -> TIdent_MacroString . [ TXor TWhy TSup_Template TSupEq TSup TString TShr TShl TPtrOpStar TPtrOp TPtVirg TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMod TMinus TInfEq TInf TInc TIdent_MacroString TEqEq TEq TEllipsis TDotStar TDot TDiv TDec TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAssign TAndLog TAnd RDots EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production string_elem -> TIdent_MacroString

State 111:
## Known stack suffix:
## TIdent_ClassnameInQualifier_BeforeTypedef
## LR(1) items:
class_or_namespace_name_for_qualifier2 -> TIdent_ClassnameInQualifier_BeforeTypedef . [ TColCol_BeforeTypedef ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production class_or_namespace_name_for_qualifier2 -> TIdent_ClassnameInQualifier_BeforeTypedef

State 112:
## Known stack suffix:
## TIdent_ClassnameInQualifier
## LR(1) items:
class_or_namespace_name_for_qualifier -> TIdent_ClassnameInQualifier . [ TColCol ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production class_or_namespace_name_for_qualifier -> TIdent_ClassnameInQualifier

State 113:
## Known stack suffix:
## TIdent
## LR(1) items:
postfix_expr -> TIdent . braced_init_list [ TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtrOpStar TPtrOp TPtVirg TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMod TMinus TInfEq TInf TInc TEqEq TEq TEllipsis TDotStar TDot TDiv TDec TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAssign TAndLog TAnd RDots EOF ]
unqualified_id -> TIdent . [ TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtrOpStar TPtrOp TPtVirg TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMod TMinus TInfEq TInf TInc TEqEq TEq TEllipsis TDotStar TDot TDiv TDec TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAssign TAndLog TAnd RDots EOF ]
## Transitions:
-- On TOBrace shift to state 114
-- On braced_init_list shift to state 579
## Reductions:
-- On TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtrOpStar TPtrOp TPtVirg TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMod TMinus TInfEq TInf TInc TEqEq TEq TEllipsis TDotStar TDot TDiv TDec TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAssign TAndLog TAnd RDots EOF
--   reduce production unqualified_id -> TIdent

State 114:
## Known stack suffix:
## TOBrace
## LR(1) items:
braced_init_list -> TOBrace . TCBrace [ TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtrOpStar TPtrOp TPtVirg TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMod TMinus TInfEq TInf TInc TEqEq TEq TEllipsis TDotStar TDot TDiv TDec TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAssign TAndLog TAnd RDots EOF ]
braced_init_list -> TOBrace . initialize_list option(TComma) TCBrace [ TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtrOpStar TPtrOp TPtVirg TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMod TMinus TInfEq TInf TInc TEqEq TEq TEllipsis TDotStar TDot TDiv TDec TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAssign TAndLog TAnd RDots EOF ]
## Transitions:
-- On Twchar_t_Constr shift to state 14
-- On Twchar_t shift to state 1
-- On Tvoid shift to state 3
-- On Tunsigned shift to state 15
-- On Ttypeof shift to state 17
-- On Ttypeid shift to state 23
-- On Ttrue shift to state 25
-- On Tthis shift to state 26
-- On Tstatic_cast shift to state 28
-- On Tsizeof shift to state 29
-- On Tsigned shift to state 30
-- On Tshort_Constr shift to state 31
-- On Tshort shift to state 32
-- On Treinterpret_cast shift to state 33
-- On Toperator shift to state 34
-- On Tnullptr shift to state 48
-- On Tnull shift to state 49
-- On Tlong_Constr shift to state 50
-- On Tlong shift to state 38
-- On Tint_Constr shift to state 51
-- On Tint shift to state 39
-- On Tfloat_Constr shift to state 52
-- On Tfloat shift to state 40
-- On Tfalse shift to state 53
-- On Tdynamic_cast shift to state 54
-- On Tdouble_Constr shift to state 55
-- On Tdouble shift to state 41
-- On Tdecltype shift to state 45
-- On Tconst_cast shift to state 56
-- On Tchar_Constr shift to state 57
-- On Tchar shift to state 58
-- On Tbool_Constr shift to state 59
-- On Tbool shift to state 60
-- On TTilde shift to state 61
-- On TString shift to state 62
-- On TPlus shift to state 63
-- On TOPar shift to state 64
-- On TOCro_Lambda shift to state 78
-- On TOCro shift to state 115
-- On TOBrace shift to state 114
-- On TMul shift to state 88
-- On TMinus shift to state 89
-- On TInt shift to state 90
-- On TInc shift to state 91
-- On TIdent_TypedefConstr shift to state 106
-- On TIdent_Typedef shift to state 572
-- On TIdent_TemplatenameInQualifier_BeforeTypedef shift to state 21
-- On TIdent_TemplatenameInQualifier shift to state 12
-- On TIdent_Templatename shift to state 108
-- On TIdent_MacroString shift to state 110
-- On TIdent_ClassnameInQualifier_BeforeTypedef shift to state 111
-- On TIdent_ClassnameInQualifier shift to state 112
-- On TIdent shift to state 578
-- On TFloat shift to state 116
-- On TDot shift to state 662
-- On TDec shift to state 117
-- On TColCol_BeforeTypedef shift to state 118
-- On TColCol shift to state 128
-- On TChar shift to state 174
-- On TCBrace shift to state 887
-- On TBang shift to state 175
-- On TAndLog shift to state 176
-- On TAnd shift to state 177
-- On LDots shift to state 178
-- On unqualified_id shift to state 179
-- On unary_op shift to state 180
-- On unary_expr shift to state 181
-- On type_name shift to state 182
-- On type_cplusplus_id shift to state 183
-- On template_id shift to state 120
-- On string_elem shift to state 184
-- On simple_type_specifier shift to state 189
-- On shift_expr shift to state 217
-- On relational_expr shift to state 229
-- On qualified_id shift to state 191
-- On primary_expr shift to state 192
-- On primary_cplusplus_id shift to state 193
-- On postfix_expr shift to state 194
-- On pm_expr shift to state 219
-- On option(TColCol) shift to state 221
-- On operator_function_id shift to state 168
-- On nonempty_list(designator) shift to state 664
-- On new_expr shift to state 233
-- On nested_name_specifier2 shift to state 207
-- On nested_name_specifier shift to state 165
-- On multiplicative_expr shift to state 234
-- On logical_or_expr shift to state 246
-- On logical_and_expr shift to state 250
-- On literal shift to state 238
-- On lambda_introducer shift to state 239
-- On initialize_list shift to state 888
-- On initialize2 shift to state 680
-- On inclusive_or_expr shift to state 272
-- On ident shift to state 667
-- On id_expression shift to state 241
-- On exclusive_or_expr shift to state 273
-- On equality_expr shift to state 256
-- On enum_name_or_typedef_name_or_simple_class_name shift to state 123
-- On designator shift to state 670
-- On delete_expr shift to state 242
-- On decltype_specifier shift to state 243
-- On cpp_cast_operator shift to state 244
-- On conversion_function_id shift to state 169
-- On cond_expr shift to state 672
-- On class_or_namespace_name_for_qualifier2 shift to state 124
-- On class_or_namespace_name_for_qualifier shift to state 170
-- On cast_operator_expr shift to state 261
-- On cast_expr shift to state 262
-- On cast_constructor_expr shift to state 263
-- On braced_init_list shift to state 673
-- On basic_type_2 shift to state 264
-- On and_expr shift to state 334
-- On additive_expr shift to state 341
## Reductions:
-- On Tnew Tdelete
--   reduce production option(TColCol) ->

State 115:
## Known stack suffix:
## TOCro
## LR(1) items:
initialize2 -> TOCro . const_expr TCCro TEq initialize2 [ TComma TCBrace ]
initialize2 -> TOCro . const_expr TCCro initialize2 [ TComma TCBrace ]
## Transitions:
-- On Twchar_t_Constr shift to state 14
-- On Twchar_t shift to state 1
-- On Tvoid shift to state 3
-- On Tunsigned shift to state 15
-- On Ttypeof shift to state 17
-- On Ttypeid shift to state 23
-- On Ttrue shift to state 25
-- On Tthis shift to state 26
-- On Tstatic_cast shift to state 28
-- On Tsizeof shift to state 29
-- On Tsigned shift to state 30
-- On Tshort_Constr shift to state 31
-- On Tshort shift to state 32
-- On Treinterpret_cast shift to state 33
-- On Toperator shift to state 34
-- On Tnullptr shift to state 48
-- On Tnull shift to state 49
-- On Tlong_Constr shift to state 50
-- On Tlong shift to state 38
-- On Tint_Constr shift to state 51
-- On Tint shift to state 39
-- On Tfloat_Constr shift to state 52
-- On Tfloat shift to state 40
-- On Tfalse shift to state 53
-- On Tdynamic_cast shift to state 54
-- On Tdouble_Constr shift to state 55
-- On Tdouble shift to state 41
-- On Tdecltype shift to state 45
-- On Tconst_cast shift to state 56
-- On Tchar_Constr shift to state 57
-- On Tchar shift to state 58
-- On Tbool_Constr shift to state 59
-- On Tbool shift to state 60
-- On TTilde shift to state 61
-- On TString shift to state 62
-- On TPlus shift to state 63
-- On TOPar shift to state 64
-- On TOCro_Lambda shift to state 78
-- On TMul shift to state 88
-- On TMinus shift to state 89
-- On TInt shift to state 90
-- On TInc shift to state 91
-- On TIdent_TypedefConstr shift to state 106
-- On TIdent_Typedef shift to state 20
-- On TIdent_TemplatenameInQualifier_BeforeTypedef shift to state 21
-- On TIdent_TemplatenameInQualifier shift to state 12
-- On TIdent_Templatename shift to state 108
-- On TIdent_MacroString shift to state 110
-- On TIdent_ClassnameInQualifier_BeforeTypedef shift to state 111
-- On TIdent_ClassnameInQualifier shift to state 112
-- On TIdent shift to state 113
-- On TFloat shift to state 116
-- On TDec shift to state 117
-- On TColCol_BeforeTypedef shift to state 118
-- On TColCol shift to state 128
-- On TChar shift to state 174
-- On TBang shift to state 175
-- On TAndLog shift to state 176
-- On TAnd shift to state 177
-- On LDots shift to state 178
-- On unqualified_id shift to state 179
-- On unary_op shift to state 180
-- On unary_expr shift to state 181
-- On type_name shift to state 182
-- On type_cplusplus_id shift to state 183
-- On template_id shift to state 120
-- On string_elem shift to state 184
-- On simple_type_specifier shift to state 189
-- On shift_expr shift to state 217
-- On relational_expr shift to state 229
-- On qualified_id shift to state 191
-- On primary_expr shift to state 192
-- On primary_cplusplus_id shift to state 193
-- On postfix_expr shift to state 194
-- On pm_expr shift to state 219
-- On option(TColCol) shift to state 221
-- On operator_function_id shift to state 168
-- On new_expr shift to state 233
-- On nested_name_specifier2 shift to state 207
-- On nested_name_specifier shift to state 165
-- On multiplicative_expr shift to state 234
-- On logical_or_expr shift to state 246
-- On logical_and_expr shift to state 250
-- On literal shift to state 238
-- On lambda_introducer shift to state 239
-- On inclusive_or_expr shift to state 272
-- On id_expression shift to state 241
-- On exclusive_or_expr shift to state 273
-- On equality_expr shift to state 256
-- On enum_name_or_typedef_name_or_simple_class_name shift to state 123
-- On delete_expr shift to state 242
-- On decltype_specifier shift to state 243
-- On cpp_cast_operator shift to state 244
-- On conversion_function_id shift to state 169
-- On const_expr shift to state 882
-- On cond_expr shift to state 481
-- On class_or_namespace_name_for_qualifier2 shift to state 124
-- On class_or_namespace_name_for_qualifier shift to state 170
-- On cast_operator_expr shift to state 261
-- On cast_expr shift to state 262
-- On cast_constructor_expr shift to state 263
-- On basic_type_2 shift to state 264
-- On and_expr shift to state 334
-- On additive_expr shift to state 341
## Reductions:
-- On Tnew Tdelete
--   reduce production option(TColCol) ->

State 116:
## Known stack suffix:
## TFloat
## LR(1) items:
literal -> TFloat . [ TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtrOpStar TPtrOp TPtVirg TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMod TMinus TInfEq TInf TInc TEqEq TEq TEllipsis TDotStar TDot TDiv TDec TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAssign TAndLog TAnd RDots EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production literal -> TFloat

State 117:
## Known stack suffix:
## TDec
## LR(1) items:
unary_expr -> TDec . unary_expr [ TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtrOpStar TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TEq TEllipsis TDotStar TDiv TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAssign TAndLog TAnd RDots EOF ]
## Transitions:
-- On Twchar_t_Constr shift to state 14
-- On Twchar_t shift to state 1
-- On Tvoid shift to state 3
-- On Tunsigned shift to state 15
-- On Ttypeof shift to state 17
-- On Ttypeid shift to state 23
-- On Ttrue shift to state 25
-- On Tthis shift to state 26
-- On Tstatic_cast shift to state 28
-- On Tsizeof shift to state 29
-- On Tsigned shift to state 30
-- On Tshort_Constr shift to state 31
-- On Tshort shift to state 32
-- On Treinterpret_cast shift to state 33
-- On Toperator shift to state 34
-- On Tnullptr shift to state 48
-- On Tnull shift to state 49
-- On Tlong_Constr shift to state 50
-- On Tlong shift to state 38
-- On Tint_Constr shift to state 51
-- On Tint shift to state 39
-- On Tfloat_Constr shift to state 52
-- On Tfloat shift to state 40
-- On Tfalse shift to state 53
-- On Tdynamic_cast shift to state 54
-- On Tdouble_Constr shift to state 55
-- On Tdouble shift to state 41
-- On Tdecltype shift to state 45
-- On Tconst_cast shift to state 56
-- On Tchar_Constr shift to state 57
-- On Tchar shift to state 58
-- On Tbool_Constr shift to state 59
-- On Tbool shift to state 60
-- On TTilde shift to state 61
-- On TString shift to state 62
-- On TPlus shift to state 63
-- On TOPar shift to state 92
-- On TOCro_Lambda shift to state 78
-- On TMul shift to state 88
-- On TMinus shift to state 89
-- On TInt shift to state 90
-- On TInc shift to state 91
-- On TIdent_TypedefConstr shift to state 106
-- On TIdent_Typedef shift to state 20
-- On TIdent_TemplatenameInQualifier_BeforeTypedef shift to state 21
-- On TIdent_TemplatenameInQualifier shift to state 12
-- On TIdent_Templatename shift to state 108
-- On TIdent_MacroString shift to state 110
-- On TIdent_ClassnameInQualifier_BeforeTypedef shift to state 111
-- On TIdent_ClassnameInQualifier shift to state 112
-- On TIdent shift to state 113
-- On TFloat shift to state 116
-- On TDec shift to state 117
-- On TColCol_BeforeTypedef shift to state 118
-- On TColCol shift to state 128
-- On TChar shift to state 174
-- On TBang shift to state 175
-- On TAndLog shift to state 176
-- On TAnd shift to state 177
-- On LDots shift to state 178
-- On unqualified_id shift to state 179
-- On unary_op shift to state 180
-- On unary_expr shift to state 881
-- On type_name shift to state 182
-- On type_cplusplus_id shift to state 183
-- On template_id shift to state 120
-- On string_elem shift to state 184
-- On simple_type_specifier shift to state 189
-- On qualified_id shift to state 191
-- On primary_expr shift to state 192
-- On primary_cplusplus_id shift to state 193
-- On postfix_expr shift to state 194
-- On option(TColCol) shift to state 221
-- On operator_function_id shift to state 168
-- On new_expr shift to state 233
-- On nested_name_specifier2 shift to state 207
-- On nested_name_specifier shift to state 165
-- On literal shift to state 238
-- On lambda_introducer shift to state 239
-- On id_expression shift to state 241
-- On enum_name_or_typedef_name_or_simple_class_name shift to state 123
-- On delete_expr shift to state 242
-- On decltype_specifier shift to state 243
-- On cpp_cast_operator shift to state 244
-- On conversion_function_id shift to state 169
-- On class_or_namespace_name_for_qualifier2 shift to state 124
-- On class_or_namespace_name_for_qualifier shift to state 170
-- On cast_operator_expr shift to state 261
-- On cast_constructor_expr shift to state 263
-- On basic_type_2 shift to state 264
## Reductions:
-- On Tnew Tdelete
--   reduce production option(TColCol) ->

State 118:
## Known stack suffix:
## TColCol_BeforeTypedef
## LR(1) items:
type_cplusplus_id -> TColCol_BeforeTypedef . type_name [ Twchar_t Tvolatile Tvoid Tvirtual Tunsigned Tunion Ttypeof Ttypename Ttypedef Tthread_local Tstruct Tstatic Tsigned Tshort Trestrict Tregister Toperator Tmutable Tlong Tint Tinline Tfriend Tfloat Textern Tenum Tdouble Tdecltype Tconstexpr Tconst Tclass Tchar Tbool Tauto Tasm TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtrOpStar TPtrOp TPtVirg TPlus TOrLog TOr TOPar_CplusplusInit TOPar TOCro TOBrace TNotEq TMul TMod TMinus TInfEq TInf TInc TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TIdent TEqEq TEq TEllipsis TDotStar TDot TDiv TDec TCommentNewline_DefineEndOfMacro TComma TColCol_BeforeTypedef TColCol TCol TCPar_EOL TCPar TCCro TCBrace TAssign TAndLog TAnd RDots EOF ]
type_cplusplus_id -> TColCol_BeforeTypedef . nested_name_specifier2 type_name [ Twchar_t Tvolatile Tvoid Tvirtual Tunsigned Tunion Ttypeof Ttypename Ttypedef Tthread_local Tstruct Tstatic Tsigned Tshort Trestrict Tregister Toperator Tmutable Tlong Tint Tinline Tfriend Tfloat Textern Tenum Tdouble Tdecltype Tconstexpr Tconst Tclass Tchar Tbool Tauto Tasm TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtrOpStar TPtrOp TPtVirg TPlus TOrLog TOr TOPar_CplusplusInit TOPar TOCro TOBrace TNotEq TMul TMod TMinus TInfEq TInf TInc TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TIdent TEqEq TEq TEllipsis TDotStar TDot TDiv TDec TCommentNewline_DefineEndOfMacro TComma TColCol_BeforeTypedef TColCol TCol TCPar_EOL TCPar TCCro TCBrace TAssign TAndLog TAnd RDots EOF ]
## Transitions:
-- On TIdent_Typedef shift to state 20
-- On TIdent_TemplatenameInQualifier_BeforeTypedef shift to state 21
-- On TIdent_Templatename shift to state 108
-- On TIdent_ClassnameInQualifier_BeforeTypedef shift to state 111
-- On type_name shift to state 119
-- On template_id shift to state 120
-- On nested_name_specifier2 shift to state 121
-- On enum_name_or_typedef_name_or_simple_class_name shift to state 123
-- On class_or_namespace_name_for_qualifier2 shift to state 124
## Reductions:

State 119:
## Known stack suffix:
## TColCol_BeforeTypedef type_name
## LR(1) items:
type_cplusplus_id -> TColCol_BeforeTypedef type_name . [ Twchar_t Tvolatile Tvoid Tvirtual Tunsigned Tunion Ttypeof Ttypename Ttypedef Tthread_local Tstruct Tstatic Tsigned Tshort Trestrict Tregister Toperator Tmutable Tlong Tint Tinline Tfriend Tfloat Textern Tenum Tdouble Tdecltype Tconstexpr Tconst Tclass Tchar Tbool Tauto Tasm TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtrOpStar TPtrOp TPtVirg TPlus TOrLog TOr TOPar_CplusplusInit TOPar TOCro TOBrace TNotEq TMul TMod TMinus TInfEq TInf TInc TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TIdent TEqEq TEq TEllipsis TDotStar TDot TDiv TDec TCommentNewline_DefineEndOfMacro TComma TColCol_BeforeTypedef TColCol TCol TCPar_EOL TCPar TCCro TCBrace TAssign TAndLog TAnd RDots EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production type_cplusplus_id -> TColCol_BeforeTypedef type_name

State 120:
## Known stack suffix:
## template_id
## LR(1) items:
type_name -> template_id . [ Twchar_t Tvolatile Tvoid Tvirtual Tunsigned Tunion Ttypeof Ttypename Ttypedef Tthread_local Tstruct Tstatic Tsigned Tshort Trestrict Tregister Toperator Tmutable Tlong Tint Tinline Tfriend Tfloat Textern Tenum Tdouble Tdecltype Tconstexpr Tconst Tclass Tchar Tbool Tauto Tasm TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtrOpStar TPtrOp TPtVirg TPlus TOrLog TOr TOPar_CplusplusInit TOPar TOCro TOBrace TNotEq TMul TMod TMinus TInfEq TInf TInc TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TIdent TEqEq TEq TEllipsis TDotStar TDot TDiv TDec TCommentNewline_DefineEndOfMacro TComma TColCol_BeforeTypedef TColCol TCol TCPar_EOL TCPar TCCro TCBrace TAssign TAndLog TAnd RDots EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production type_name -> template_id

State 121:
## Known stack suffix:
## TColCol_BeforeTypedef nested_name_specifier2
## LR(1) items:
type_cplusplus_id -> TColCol_BeforeTypedef nested_name_specifier2 . type_name [ Twchar_t Tvolatile Tvoid Tvirtual Tunsigned Tunion Ttypeof Ttypename Ttypedef Tthread_local Tstruct Tstatic Tsigned Tshort Trestrict Tregister Toperator Tmutable Tlong Tint Tinline Tfriend Tfloat Textern Tenum Tdouble Tdecltype Tconstexpr Tconst Tclass Tchar Tbool Tauto Tasm TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtrOpStar TPtrOp TPtVirg TPlus TOrLog TOr TOPar_CplusplusInit TOPar TOCro TOBrace TNotEq TMul TMod TMinus TInfEq TInf TInc TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TIdent TEqEq TEq TEllipsis TDotStar TDot TDiv TDec TCommentNewline_DefineEndOfMacro TComma TColCol_BeforeTypedef TColCol TCol TCPar_EOL TCPar TCCro TCBrace TAssign TAndLog TAnd RDots EOF ]
## Transitions:
-- On TIdent_Typedef shift to state 20
-- On TIdent_Templatename shift to state 108
-- On type_name shift to state 122
-- On template_id shift to state 120
-- On enum_name_or_typedef_name_or_simple_class_name shift to state 123
## Reductions:

State 122:
## Known stack suffix:
## TColCol_BeforeTypedef nested_name_specifier2 type_name
## LR(1) items:
type_cplusplus_id -> TColCol_BeforeTypedef nested_name_specifier2 type_name . [ Twchar_t Tvolatile Tvoid Tvirtual Tunsigned Tunion Ttypeof Ttypename Ttypedef Tthread_local Tstruct Tstatic Tsigned Tshort Trestrict Tregister Toperator Tmutable Tlong Tint Tinline Tfriend Tfloat Textern Tenum Tdouble Tdecltype Tconstexpr Tconst Tclass Tchar Tbool Tauto Tasm TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtrOpStar TPtrOp TPtVirg TPlus TOrLog TOr TOPar_CplusplusInit TOPar TOCro TOBrace TNotEq TMul TMod TMinus TInfEq TInf TInc TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TIdent TEqEq TEq TEllipsis TDotStar TDot TDiv TDec TCommentNewline_DefineEndOfMacro TComma TColCol_BeforeTypedef TColCol TCol TCPar_EOL TCPar TCCro TCBrace TAssign TAndLog TAnd RDots EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production type_cplusplus_id -> TColCol_BeforeTypedef nested_name_specifier2 type_name

State 123:
## Known stack suffix:
## enum_name_or_typedef_name_or_simple_class_name
## LR(1) items:
type_name -> enum_name_or_typedef_name_or_simple_class_name . [ Twchar_t Tvolatile Tvoid Tvirtual Tunsigned Tunion Ttypeof Ttypename Ttypedef Tthread_local Tstruct Tstatic Tsigned Tshort Trestrict Tregister Toperator Tmutable Tlong Tint Tinline Tfriend Tfloat Textern Tenum Tdouble Tdecltype Tconstexpr Tconst Tclass Tchar Tbool Tauto Tasm TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtrOpStar TPtrOp TPtVirg TPlus TOrLog TOr TOPar_CplusplusInit TOPar TOCro TOBrace TNotEq TMul TMod TMinus TInfEq TInf TInc TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TIdent TEqEq TEq TEllipsis TDotStar TDot TDiv TDec TCommentNewline_DefineEndOfMacro TComma TColCol_BeforeTypedef TColCol TCol TCPar_EOL TCPar TCCro TCBrace TAssign TAndLog TAnd RDots EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production type_name -> enum_name_or_typedef_name_or_simple_class_name

State 124:
## Known stack suffix:
## class_or_namespace_name_for_qualifier2
## LR(1) items:
nested_name_specifier2 -> class_or_namespace_name_for_qualifier2 . TColCol_BeforeTypedef optl(nested_name_specifier2) [ TIdent_Typedef TIdent_Templatename ]
## Transitions:
-- On TColCol_BeforeTypedef shift to state 125
## Reductions:

State 125:
## Known stack suffix:
## class_or_namespace_name_for_qualifier2 TColCol_BeforeTypedef
## LR(1) items:
nested_name_specifier2 -> class_or_namespace_name_for_qualifier2 TColCol_BeforeTypedef . optl(nested_name_specifier2) [ TIdent_Typedef TIdent_Templatename ]
## Transitions:
-- On TIdent_TemplatenameInQualifier_BeforeTypedef shift to state 21
-- On TIdent_ClassnameInQualifier_BeforeTypedef shift to state 111
-- On optl(nested_name_specifier2) shift to state 126
-- On nested_name_specifier2 shift to state 127
-- On class_or_namespace_name_for_qualifier2 shift to state 124
## Reductions:
-- On TIdent_Typedef TIdent_Templatename
--   reduce production optl(nested_name_specifier2) ->

State 126:
## Known stack suffix:
## class_or_namespace_name_for_qualifier2 TColCol_BeforeTypedef optl(nested_name_specifier2)
## LR(1) items:
nested_name_specifier2 -> class_or_namespace_name_for_qualifier2 TColCol_BeforeTypedef optl(nested_name_specifier2) . [ TIdent_Typedef TIdent_Templatename ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production nested_name_specifier2 -> class_or_namespace_name_for_qualifier2 TColCol_BeforeTypedef optl(nested_name_specifier2)

State 127:
## Known stack suffix:
## nested_name_specifier2
## LR(1) items:
optl(nested_name_specifier2) -> nested_name_specifier2 . [ TIdent_Typedef TIdent_Templatename ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production optl(nested_name_specifier2) -> nested_name_specifier2

State 128:
## Known stack suffix:
## TColCol
## LR(1) items:
option(TColCol) -> TColCol . [ Tnew Tdelete ]
primary_cplusplus_id -> TColCol . TIdent [ TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtrOpStar TPtrOp TPtVirg TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMod TMinus TInfEq TInf TInc TEqEq TEq TEllipsis TDotStar TDot TDiv TDec TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAssign TAndLog TAnd RDots EOF ]
primary_cplusplus_id -> TColCol . operator_function_id [ TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtrOpStar TPtrOp TPtVirg TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMod TMinus TInfEq TInf TInc TEqEq TEq TEllipsis TDotStar TDot TDiv TDec TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAssign TAndLog TAnd RDots EOF ]
primary_cplusplus_id -> TColCol . qualified_id [ TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtrOpStar TPtrOp TPtVirg TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMod TMinus TInfEq TInf TInc TEqEq TEq TEllipsis TDotStar TDot TDiv TDec TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAssign TAndLog TAnd RDots EOF ]
## Transitions:
-- On Toperator shift to state 129
-- On TIdent_TemplatenameInQualifier shift to state 12
-- On TIdent_ClassnameInQualifier shift to state 112
-- On TIdent shift to state 162
-- On qualified_id shift to state 163
-- On operator_function_id shift to state 164
-- On nested_name_specifier shift to state 165
-- On class_or_namespace_name_for_qualifier shift to state 170
## Reductions:
-- On Tnew Tdelete
--   reduce production option(TColCol) -> TColCol

State 129:
## Known stack suffix:
## Toperator
## LR(1) items:
operator_function_id -> Toperator . operator_kind [ TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtrOpStar TPtrOp TPtVirg TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMod TMinus TInfEq TInf TInc TEqEq TEq TEllipsis TDotStar TDot TDiv TDec TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAssign TAndLog TAnd RDots EOF ]
## Transitions:
-- On Tnew shift to state 35
-- On Tdelete shift to state 42
-- On TXor shift to state 130
-- On TTilde shift to state 131
-- On TSupEq shift to state 132
-- On TSup shift to state 133
-- On TShr shift to state 134
-- On TShl shift to state 135
-- On TPtrOpStar shift to state 136
-- On TPtrOp shift to state 137
-- On TPlus shift to state 138
-- On TOrLog shift to state 139
-- On TOr shift to state 140
-- On TOPar shift to state 141
-- On TOCro shift to state 143
-- On TNotEq shift to state 145
-- On TMul shift to state 146
-- On TMod shift to state 147
-- On TMinus shift to state 148
-- On TInfEq shift to state 149
-- On TInf shift to state 150
-- On TInc shift to state 151
-- On TEqEq shift to state 152
-- On TEq shift to state 153
-- On TDiv shift to state 154
-- On TDec shift to state 155
-- On TComma shift to state 156
-- On TBang shift to state 157
-- On TAssign shift to state 158
-- On TAndLog shift to state 159
-- On TAnd shift to state 160
-- On operator_kind shift to state 161
## Reductions:

State 130:
## Known stack suffix:
## TXor
## LR(1) items:
operator_kind -> TXor . [ Tasm TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtrOpStar TPtrOp TPtVirg TPlus TOrLog TOr TOPar_CplusplusInit TOPar TOCro TOBrace TNotEq TMul TMod TMinus TInfEq TInf TInc TEqEq TEq TEllipsis TDotStar TDot TDiv TDec TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAssign TAndLog TAnd RDots EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production operator_kind -> TXor

State 131:
## Known stack suffix:
## TTilde
## LR(1) items:
operator_kind -> TTilde . [ Tasm TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtrOpStar TPtrOp TPtVirg TPlus TOrLog TOr TOPar_CplusplusInit TOPar TOCro TOBrace TNotEq TMul TMod TMinus TInfEq TInf TInc TEqEq TEq TEllipsis TDotStar TDot TDiv TDec TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAssign TAndLog TAnd RDots EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production operator_kind -> TTilde

State 132:
## Known stack suffix:
## TSupEq
## LR(1) items:
operator_kind -> TSupEq . [ Tasm TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtrOpStar TPtrOp TPtVirg TPlus TOrLog TOr TOPar_CplusplusInit TOPar TOCro TOBrace TNotEq TMul TMod TMinus TInfEq TInf TInc TEqEq TEq TEllipsis TDotStar TDot TDiv TDec TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAssign TAndLog TAnd RDots EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production operator_kind -> TSupEq

State 133:
## Known stack suffix:
## TSup
## LR(1) items:
operator_kind -> TSup . [ Tasm TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtrOpStar TPtrOp TPtVirg TPlus TOrLog TOr TOPar_CplusplusInit TOPar TOCro TOBrace TNotEq TMul TMod TMinus TInfEq TInf TInc TEqEq TEq TEllipsis TDotStar TDot TDiv TDec TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAssign TAndLog TAnd RDots EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production operator_kind -> TSup

State 134:
## Known stack suffix:
## TShr
## LR(1) items:
operator_kind -> TShr . [ Tasm TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtrOpStar TPtrOp TPtVirg TPlus TOrLog TOr TOPar_CplusplusInit TOPar TOCro TOBrace TNotEq TMul TMod TMinus TInfEq TInf TInc TEqEq TEq TEllipsis TDotStar TDot TDiv TDec TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAssign TAndLog TAnd RDots EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production operator_kind -> TShr

State 135:
## Known stack suffix:
## TShl
## LR(1) items:
operator_kind -> TShl . [ Tasm TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtrOpStar TPtrOp TPtVirg TPlus TOrLog TOr TOPar_CplusplusInit TOPar TOCro TOBrace TNotEq TMul TMod TMinus TInfEq TInf TInc TEqEq TEq TEllipsis TDotStar TDot TDiv TDec TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAssign TAndLog TAnd RDots EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production operator_kind -> TShl

State 136:
## Known stack suffix:
## TPtrOpStar
## LR(1) items:
operator_kind -> TPtrOpStar . [ Tasm TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtrOpStar TPtrOp TPtVirg TPlus TOrLog TOr TOPar_CplusplusInit TOPar TOCro TOBrace TNotEq TMul TMod TMinus TInfEq TInf TInc TEqEq TEq TEllipsis TDotStar TDot TDiv TDec TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAssign TAndLog TAnd RDots EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production operator_kind -> TPtrOpStar

State 137:
## Known stack suffix:
## TPtrOp
## LR(1) items:
operator_kind -> TPtrOp . [ Tasm TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtrOpStar TPtrOp TPtVirg TPlus TOrLog TOr TOPar_CplusplusInit TOPar TOCro TOBrace TNotEq TMul TMod TMinus TInfEq TInf TInc TEqEq TEq TEllipsis TDotStar TDot TDiv TDec TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAssign TAndLog TAnd RDots EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production operator_kind -> TPtrOp

State 138:
## Known stack suffix:
## TPlus
## LR(1) items:
operator_kind -> TPlus . [ Tasm TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtrOpStar TPtrOp TPtVirg TPlus TOrLog TOr TOPar_CplusplusInit TOPar TOCro TOBrace TNotEq TMul TMod TMinus TInfEq TInf TInc TEqEq TEq TEllipsis TDotStar TDot TDiv TDec TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAssign TAndLog TAnd RDots EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production operator_kind -> TPlus

State 139:
## Known stack suffix:
## TOrLog
## LR(1) items:
operator_kind -> TOrLog . [ Tasm TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtrOpStar TPtrOp TPtVirg TPlus TOrLog TOr TOPar_CplusplusInit TOPar TOCro TOBrace TNotEq TMul TMod TMinus TInfEq TInf TInc TEqEq TEq TEllipsis TDotStar TDot TDiv TDec TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAssign TAndLog TAnd RDots EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production operator_kind -> TOrLog

State 140:
## Known stack suffix:
## TOr
## LR(1) items:
operator_kind -> TOr . [ Tasm TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtrOpStar TPtrOp TPtVirg TPlus TOrLog TOr TOPar_CplusplusInit TOPar TOCro TOBrace TNotEq TMul TMod TMinus TInfEq TInf TInc TEqEq TEq TEllipsis TDotStar TDot TDiv TDec TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAssign TAndLog TAnd RDots EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production operator_kind -> TOr

State 141:
## Known stack suffix:
## TOPar
## LR(1) items:
operator_kind -> TOPar . TCPar [ Tasm TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtrOpStar TPtrOp TPtVirg TPlus TOrLog TOr TOPar_CplusplusInit TOPar TOCro TOBrace TNotEq TMul TMod TMinus TInfEq TInf TInc TEqEq TEq TEllipsis TDotStar TDot TDiv TDec TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAssign TAndLog TAnd RDots EOF ]
## Transitions:
-- On TCPar shift to state 142
## Reductions:

State 142:
## Known stack suffix:
## TOPar TCPar
## LR(1) items:
operator_kind -> TOPar TCPar . [ Tasm TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtrOpStar TPtrOp TPtVirg TPlus TOrLog TOr TOPar_CplusplusInit TOPar TOCro TOBrace TNotEq TMul TMod TMinus TInfEq TInf TInc TEqEq TEq TEllipsis TDotStar TDot TDiv TDec TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAssign TAndLog TAnd RDots EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production operator_kind -> TOPar TCPar

State 143:
## Known stack suffix:
## TOCro
## LR(1) items:
operator_kind -> TOCro . TCCro [ Tasm TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtrOpStar TPtrOp TPtVirg TPlus TOrLog TOr TOPar_CplusplusInit TOPar TOCro TOBrace TNotEq TMul TMod TMinus TInfEq TInf TInc TEqEq TEq TEllipsis TDotStar TDot TDiv TDec TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAssign TAndLog TAnd RDots EOF ]
## Transitions:
-- On TCCro shift to state 144
## Reductions:

State 144:
## Known stack suffix:
## TOCro TCCro
## LR(1) items:
operator_kind -> TOCro TCCro . [ Tasm TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtrOpStar TPtrOp TPtVirg TPlus TOrLog TOr TOPar_CplusplusInit TOPar TOCro TOBrace TNotEq TMul TMod TMinus TInfEq TInf TInc TEqEq TEq TEllipsis TDotStar TDot TDiv TDec TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAssign TAndLog TAnd RDots EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production operator_kind -> TOCro TCCro

State 145:
## Known stack suffix:
## TNotEq
## LR(1) items:
operator_kind -> TNotEq . [ Tasm TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtrOpStar TPtrOp TPtVirg TPlus TOrLog TOr TOPar_CplusplusInit TOPar TOCro TOBrace TNotEq TMul TMod TMinus TInfEq TInf TInc TEqEq TEq TEllipsis TDotStar TDot TDiv TDec TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAssign TAndLog TAnd RDots EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production operator_kind -> TNotEq

State 146:
## Known stack suffix:
## TMul
## LR(1) items:
operator_kind -> TMul . [ Tasm TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtrOpStar TPtrOp TPtVirg TPlus TOrLog TOr TOPar_CplusplusInit TOPar TOCro TOBrace TNotEq TMul TMod TMinus TInfEq TInf TInc TEqEq TEq TEllipsis TDotStar TDot TDiv TDec TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAssign TAndLog TAnd RDots EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production operator_kind -> TMul

State 147:
## Known stack suffix:
## TMod
## LR(1) items:
operator_kind -> TMod . [ Tasm TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtrOpStar TPtrOp TPtVirg TPlus TOrLog TOr TOPar_CplusplusInit TOPar TOCro TOBrace TNotEq TMul TMod TMinus TInfEq TInf TInc TEqEq TEq TEllipsis TDotStar TDot TDiv TDec TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAssign TAndLog TAnd RDots EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production operator_kind -> TMod

State 148:
## Known stack suffix:
## TMinus
## LR(1) items:
operator_kind -> TMinus . [ Tasm TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtrOpStar TPtrOp TPtVirg TPlus TOrLog TOr TOPar_CplusplusInit TOPar TOCro TOBrace TNotEq TMul TMod TMinus TInfEq TInf TInc TEqEq TEq TEllipsis TDotStar TDot TDiv TDec TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAssign TAndLog TAnd RDots EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production operator_kind -> TMinus

State 149:
## Known stack suffix:
## TInfEq
## LR(1) items:
operator_kind -> TInfEq . [ Tasm TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtrOpStar TPtrOp TPtVirg TPlus TOrLog TOr TOPar_CplusplusInit TOPar TOCro TOBrace TNotEq TMul TMod TMinus TInfEq TInf TInc TEqEq TEq TEllipsis TDotStar TDot TDiv TDec TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAssign TAndLog TAnd RDots EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production operator_kind -> TInfEq

State 150:
## Known stack suffix:
## TInf
## LR(1) items:
operator_kind -> TInf . [ Tasm TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtrOpStar TPtrOp TPtVirg TPlus TOrLog TOr TOPar_CplusplusInit TOPar TOCro TOBrace TNotEq TMul TMod TMinus TInfEq TInf TInc TEqEq TEq TEllipsis TDotStar TDot TDiv TDec TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAssign TAndLog TAnd RDots EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production operator_kind -> TInf

State 151:
## Known stack suffix:
## TInc
## LR(1) items:
operator_kind -> TInc . [ Tasm TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtrOpStar TPtrOp TPtVirg TPlus TOrLog TOr TOPar_CplusplusInit TOPar TOCro TOBrace TNotEq TMul TMod TMinus TInfEq TInf TInc TEqEq TEq TEllipsis TDotStar TDot TDiv TDec TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAssign TAndLog TAnd RDots EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production operator_kind -> TInc

State 152:
## Known stack suffix:
## TEqEq
## LR(1) items:
operator_kind -> TEqEq . [ Tasm TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtrOpStar TPtrOp TPtVirg TPlus TOrLog TOr TOPar_CplusplusInit TOPar TOCro TOBrace TNotEq TMul TMod TMinus TInfEq TInf TInc TEqEq TEq TEllipsis TDotStar TDot TDiv TDec TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAssign TAndLog TAnd RDots EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production operator_kind -> TEqEq

State 153:
## Known stack suffix:
## TEq
## LR(1) items:
operator_kind -> TEq . [ Tasm TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtrOpStar TPtrOp TPtVirg TPlus TOrLog TOr TOPar_CplusplusInit TOPar TOCro TOBrace TNotEq TMul TMod TMinus TInfEq TInf TInc TEqEq TEq TEllipsis TDotStar TDot TDiv TDec TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAssign TAndLog TAnd RDots EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production operator_kind -> TEq

State 154:
## Known stack suffix:
## TDiv
## LR(1) items:
operator_kind -> TDiv . [ Tasm TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtrOpStar TPtrOp TPtVirg TPlus TOrLog TOr TOPar_CplusplusInit TOPar TOCro TOBrace TNotEq TMul TMod TMinus TInfEq TInf TInc TEqEq TEq TEllipsis TDotStar TDot TDiv TDec TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAssign TAndLog TAnd RDots EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production operator_kind -> TDiv

State 155:
## Known stack suffix:
## TDec
## LR(1) items:
operator_kind -> TDec . [ Tasm TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtrOpStar TPtrOp TPtVirg TPlus TOrLog TOr TOPar_CplusplusInit TOPar TOCro TOBrace TNotEq TMul TMod TMinus TInfEq TInf TInc TEqEq TEq TEllipsis TDotStar TDot TDiv TDec TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAssign TAndLog TAnd RDots EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production operator_kind -> TDec

State 156:
## Known stack suffix:
## TComma
## LR(1) items:
operator_kind -> TComma . [ Tasm TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtrOpStar TPtrOp TPtVirg TPlus TOrLog TOr TOPar_CplusplusInit TOPar TOCro TOBrace TNotEq TMul TMod TMinus TInfEq TInf TInc TEqEq TEq TEllipsis TDotStar TDot TDiv TDec TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAssign TAndLog TAnd RDots EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production operator_kind -> TComma

State 157:
## Known stack suffix:
## TBang
## LR(1) items:
operator_kind -> TBang . [ Tasm TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtrOpStar TPtrOp TPtVirg TPlus TOrLog TOr TOPar_CplusplusInit TOPar TOCro TOBrace TNotEq TMul TMod TMinus TInfEq TInf TInc TEqEq TEq TEllipsis TDotStar TDot TDiv TDec TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAssign TAndLog TAnd RDots EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production operator_kind -> TBang

State 158:
## Known stack suffix:
## TAssign
## LR(1) items:
operator_kind -> TAssign . [ Tasm TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtrOpStar TPtrOp TPtVirg TPlus TOrLog TOr TOPar_CplusplusInit TOPar TOCro TOBrace TNotEq TMul TMod TMinus TInfEq TInf TInc TEqEq TEq TEllipsis TDotStar TDot TDiv TDec TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAssign TAndLog TAnd RDots EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production operator_kind -> TAssign

State 159:
## Known stack suffix:
## TAndLog
## LR(1) items:
operator_kind -> TAndLog . [ Tasm TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtrOpStar TPtrOp TPtVirg TPlus TOrLog TOr TOPar_CplusplusInit TOPar TOCro TOBrace TNotEq TMul TMod TMinus TInfEq TInf TInc TEqEq TEq TEllipsis TDotStar TDot TDiv TDec TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAssign TAndLog TAnd RDots EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production operator_kind -> TAndLog

State 160:
## Known stack suffix:
## TAnd
## LR(1) items:
operator_kind -> TAnd . [ Tasm TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtrOpStar TPtrOp TPtVirg TPlus TOrLog TOr TOPar_CplusplusInit TOPar TOCro TOBrace TNotEq TMul TMod TMinus TInfEq TInf TInc TEqEq TEq TEllipsis TDotStar TDot TDiv TDec TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAssign TAndLog TAnd RDots EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production operator_kind -> TAnd

State 161:
## Known stack suffix:
## Toperator operator_kind
## LR(1) items:
operator_function_id -> Toperator operator_kind . [ Tasm TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtrOpStar TPtrOp TPtVirg TPlus TOrLog TOr TOPar_CplusplusInit TOPar TOCro TOBrace TNotEq TMul TMod TMinus TInfEq TInf TInc TEqEq TEq TEllipsis TDotStar TDot TDiv TDec TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAssign TAndLog TAnd RDots EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production operator_function_id -> Toperator operator_kind

State 162:
## Known stack suffix:
## TColCol TIdent
## LR(1) items:
primary_cplusplus_id -> TColCol TIdent . [ TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtrOpStar TPtrOp TPtVirg TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMod TMinus TInfEq TInf TInc TEqEq TEq TEllipsis TDotStar TDot TDiv TDec TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAssign TAndLog TAnd RDots EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production primary_cplusplus_id -> TColCol TIdent

State 163:
## Known stack suffix:
## TColCol qualified_id
## LR(1) items:
primary_cplusplus_id -> TColCol qualified_id . [ TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtrOpStar TPtrOp TPtVirg TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMod TMinus TInfEq TInf TInc TEqEq TEq TEllipsis TDotStar TDot TDiv TDec TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAssign TAndLog TAnd RDots EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production primary_cplusplus_id -> TColCol qualified_id

State 164:
## Known stack suffix:
## TColCol operator_function_id
## LR(1) items:
primary_cplusplus_id -> TColCol operator_function_id . [ TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtrOpStar TPtrOp TPtVirg TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMod TMinus TInfEq TInf TInc TEqEq TEq TEllipsis TDotStar TDot TDiv TDec TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAssign TAndLog TAnd RDots EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production primary_cplusplus_id -> TColCol operator_function_id

State 165:
## Known stack suffix:
## nested_name_specifier
## LR(1) items:
qualified_id -> nested_name_specifier . unqualified_id [ Tasm TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtrOpStar TPtrOp TPtVirg TPlus TOrLog TOr TOPar_CplusplusInit TOPar TOCro TOBrace TNotEq TMul TMod TMinus TInfEq TInf TInc TEqEq TEq TEllipsis TDotStar TDot TDiv TDec TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAssign TAndLog TAnd RDots EOF ]
## Transitions:
-- On Toperator shift to state 34
-- On TIdent shift to state 166
-- On unqualified_id shift to state 167
-- On operator_function_id shift to state 168
-- On conversion_function_id shift to state 169
## Reductions:

State 166:
## Known stack suffix:
## TIdent
## LR(1) items:
unqualified_id -> TIdent . [ Tasm TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtrOpStar TPtrOp TPtVirg TPlus TOrLog TOr TOPar_CplusplusInit TOPar TOCro TOBrace TNotEq TMul TMod TMinus TInfEq TInf TInc TEqEq TEq TEllipsis TDotStar TDot TDiv TDec TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAssign TAndLog TAnd RDots EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production unqualified_id -> TIdent

State 167:
## Known stack suffix:
## nested_name_specifier unqualified_id
## LR(1) items:
qualified_id -> nested_name_specifier unqualified_id . [ Tasm TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtrOpStar TPtrOp TPtVirg TPlus TOrLog TOr TOPar_CplusplusInit TOPar TOCro TOBrace TNotEq TMul TMod TMinus TInfEq TInf TInc TEqEq TEq TEllipsis TDotStar TDot TDiv TDec TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAssign TAndLog TAnd RDots EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production qualified_id -> nested_name_specifier unqualified_id

State 168:
## Known stack suffix:
## operator_function_id
## LR(1) items:
unqualified_id -> operator_function_id . [ Tasm TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtrOpStar TPtrOp TPtVirg TPlus TOrLog TOr TOPar_CplusplusInit TOPar TOCro TOBrace TNotEq TMul TMod TMinus TInfEq TInf TInc TEqEq TEq TEllipsis TDotStar TDot TDiv TDec TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAssign TAndLog TAnd RDots EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production unqualified_id -> operator_function_id

State 169:
## Known stack suffix:
## conversion_function_id
## LR(1) items:
unqualified_id -> conversion_function_id . [ Tasm TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtrOpStar TPtrOp TPtVirg TPlus TOrLog TOr TOPar_CplusplusInit TOPar TOCro TOBrace TNotEq TMul TMod TMinus TInfEq TInf TInc TEqEq TEq TEllipsis TDotStar TDot TDiv TDec TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAssign TAndLog TAnd RDots EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production unqualified_id -> conversion_function_id

State 170:
## Known stack suffix:
## class_or_namespace_name_for_qualifier
## LR(1) items:
nested_name_specifier -> class_or_namespace_name_for_qualifier . TColCol optl(nested_name_specifier) [ Toperator TTilde TIdent_Typedef TIdent_Constructor TIdent ]
## Transitions:
-- On TColCol shift to state 171
## Reductions:

State 171:
## Known stack suffix:
## class_or_namespace_name_for_qualifier TColCol
## LR(1) items:
nested_name_specifier -> class_or_namespace_name_for_qualifier TColCol . optl(nested_name_specifier) [ Toperator TTilde TIdent_Typedef TIdent_Constructor TIdent ]
## Transitions:
-- On TIdent_TemplatenameInQualifier shift to state 12
-- On TIdent_ClassnameInQualifier shift to state 112
-- On optl(nested_name_specifier) shift to state 172
-- On nested_name_specifier shift to state 173
-- On class_or_namespace_name_for_qualifier shift to state 170
## Reductions:
-- On Toperator TTilde TIdent_Typedef TIdent_Constructor TIdent
--   reduce production optl(nested_name_specifier) ->

State 172:
## Known stack suffix:
## class_or_namespace_name_for_qualifier TColCol optl(nested_name_specifier)
## LR(1) items:
nested_name_specifier -> class_or_namespace_name_for_qualifier TColCol optl(nested_name_specifier) . [ Toperator TTilde TIdent_Typedef TIdent_Constructor TIdent ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production nested_name_specifier -> class_or_namespace_name_for_qualifier TColCol optl(nested_name_specifier)

State 173:
## Known stack suffix:
## nested_name_specifier
## LR(1) items:
optl(nested_name_specifier) -> nested_name_specifier . [ Toperator TTilde TIdent_Typedef TIdent_Constructor TIdent ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production optl(nested_name_specifier) -> nested_name_specifier

State 174:
## Known stack suffix:
## TChar
## LR(1) items:
literal -> TChar . [ TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtrOpStar TPtrOp TPtVirg TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMod TMinus TInfEq TInf TInc TEqEq TEq TEllipsis TDotStar TDot TDiv TDec TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAssign TAndLog TAnd RDots EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production literal -> TChar

State 175:
## Known stack suffix:
## TBang
## LR(1) items:
unary_op -> TBang . [ Twchar_t_Constr Twchar_t Tvoid Tunsigned Ttypeof Ttypeid Ttrue Tthis Tstatic_cast Tsizeof Tsigned Tshort_Constr Tshort Treinterpret_cast Toperator Tnullptr Tnull Tnew Tlong_Constr Tlong Tint_Constr Tint Tfloat_Constr Tfloat Tfalse Tdynamic_cast Tdouble_Constr Tdouble Tdelete Tdecltype Tconst_cast Tchar_Constr Tchar Tbool_Constr Tbool TTilde TString TPlus TOPar TOCro_Lambda TMul TMinus TInt TInc TIdent_TypedefConstr TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_MacroString TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TIdent TFloat TDec TColCol_BeforeTypedef TColCol TChar TBang TAndLog TAnd LDots ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production unary_op -> TBang

State 176:
## Known stack suffix:
## TAndLog
## LR(1) items:
unary_op -> TAndLog . [ Twchar_t_Constr Twchar_t Tvoid Tunsigned Ttypeof Ttypeid Ttrue Tthis Tstatic_cast Tsizeof Tsigned Tshort_Constr Tshort Treinterpret_cast Toperator Tnullptr Tnull Tnew Tlong_Constr Tlong Tint_Constr Tint Tfloat_Constr Tfloat Tfalse Tdynamic_cast Tdouble_Constr Tdouble Tdelete Tdecltype Tconst_cast Tchar_Constr Tchar Tbool_Constr Tbool TTilde TString TPlus TOPar TOCro_Lambda TMul TMinus TInt TInc TIdent_TypedefConstr TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_MacroString TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TIdent TFloat TDec TColCol_BeforeTypedef TColCol TChar TBang TAndLog TAnd LDots ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production unary_op -> TAndLog

State 177:
## Known stack suffix:
## TAnd
## LR(1) items:
unary_op -> TAnd . [ Twchar_t_Constr Twchar_t Tvoid Tunsigned Ttypeof Ttypeid Ttrue Tthis Tstatic_cast Tsizeof Tsigned Tshort_Constr Tshort Treinterpret_cast Toperator Tnullptr Tnull Tnew Tlong_Constr Tlong Tint_Constr Tint Tfloat_Constr Tfloat Tfalse Tdynamic_cast Tdouble_Constr Tdouble Tdelete Tdecltype Tconst_cast Tchar_Constr Tchar Tbool_Constr Tbool TTilde TString TPlus TOPar TOCro_Lambda TMul TMinus TInt TInc TIdent_TypedefConstr TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_MacroString TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TIdent TFloat TDec TColCol_BeforeTypedef TColCol TChar TBang TAndLog TAnd LDots ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production unary_op -> TAnd

State 178:
## Known stack suffix:
## LDots
## LR(1) items:
primary_expr -> LDots . expr RDots [ TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtrOpStar TPtrOp TPtVirg TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMod TMinus TInfEq TInf TInc TEqEq TEq TEllipsis TDotStar TDot TDiv TDec TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAssign TAndLog TAnd RDots EOF ]
## Transitions:
-- On Twchar_t_Constr shift to state 14
-- On Twchar_t shift to state 1
-- On Tvoid shift to state 3
-- On Tunsigned shift to state 15
-- On Ttypeof shift to state 17
-- On Ttypeid shift to state 23
-- On Ttrue shift to state 25
-- On Tthrow shift to state 47
-- On Tthis shift to state 26
-- On Tstatic_cast shift to state 28
-- On Tsizeof shift to state 29
-- On Tsigned shift to state 30
-- On Tshort_Constr shift to state 31
-- On Tshort shift to state 32
-- On Treinterpret_cast shift to state 33
-- On Toperator shift to state 34
-- On Tnullptr shift to state 48
-- On Tnull shift to state 49
-- On Tlong_Constr shift to state 50
-- On Tlong shift to state 38
-- On Tint_Constr shift to state 51
-- On Tint shift to state 39
-- On Tfloat_Constr shift to state 52
-- On Tfloat shift to state 40
-- On Tfalse shift to state 53
-- On Tdynamic_cast shift to state 54
-- On Tdouble_Constr shift to state 55
-- On Tdouble shift to state 41
-- On Tdecltype shift to state 45
-- On Tconst_cast shift to state 56
-- On Tchar_Constr shift to state 57
-- On Tchar shift to state 58
-- On Tbool_Constr shift to state 59
-- On Tbool shift to state 60
-- On TTilde shift to state 61
-- On TString shift to state 62
-- On TPlus shift to state 63
-- On TOPar shift to state 64
-- On TOCro_Lambda shift to state 78
-- On TMul shift to state 88
-- On TMinus shift to state 89
-- On TInt shift to state 90
-- On TInc shift to state 91
-- On TIdent_TypedefConstr shift to state 106
-- On TIdent_Typedef shift to state 20
-- On TIdent_TemplatenameInQualifier_BeforeTypedef shift to state 21
-- On TIdent_TemplatenameInQualifier shift to state 12
-- On TIdent_Templatename shift to state 108
-- On TIdent_MacroString shift to state 110
-- On TIdent_ClassnameInQualifier_BeforeTypedef shift to state 111
-- On TIdent_ClassnameInQualifier shift to state 112
-- On TIdent shift to state 113
-- On TFloat shift to state 116
-- On TDec shift to state 117
-- On TColCol_BeforeTypedef shift to state 118
-- On TColCol shift to state 128
-- On TChar shift to state 174
-- On TBang shift to state 175
-- On TAndLog shift to state 176
-- On TAnd shift to state 177
-- On LDots shift to state 178
-- On unqualified_id shift to state 179
-- On unary_op shift to state 180
-- On unary_expr shift to state 181
-- On type_name shift to state 182
-- On type_cplusplus_id shift to state 183
-- On template_id shift to state 120
-- On string_elem shift to state 184
-- On simple_type_specifier shift to state 189
-- On shift_expr shift to state 217
-- On relational_expr shift to state 229
-- On qualified_id shift to state 191
-- On primary_expr shift to state 192
-- On primary_cplusplus_id shift to state 193
-- On postfix_expr shift to state 194
-- On pm_expr shift to state 219
-- On option(TColCol) shift to state 221
-- On operator_function_id shift to state 168
-- On new_expr shift to state 233
-- On nested_name_specifier2 shift to state 207
-- On nested_name_specifier shift to state 165
-- On multiplicative_expr shift to state 234
-- On logical_or_expr shift to state 246
-- On logical_and_expr shift to state 250
-- On literal shift to state 238
-- On lambda_introducer shift to state 239
-- On inclusive_or_expr shift to state 272
-- On id_expression shift to state 241
-- On expr shift to state 879
-- On exclusive_or_expr shift to state 273
-- On equality_expr shift to state 256
-- On enum_name_or_typedef_name_or_simple_class_name shift to state 123
-- On delete_expr shift to state 242
-- On decltype_specifier shift to state 243
-- On cpp_cast_operator shift to state 244
-- On conversion_function_id shift to state 169
-- On cond_expr shift to state 330
-- On class_or_namespace_name_for_qualifier2 shift to state 124
-- On class_or_namespace_name_for_qualifier shift to state 170
-- On cast_operator_expr shift to state 261
-- On cast_expr shift to state 331
-- On cast_constructor_expr shift to state 263
-- On basic_type_2 shift to state 264
-- On assign_expr shift to state 539
-- On and_expr shift to state 334
-- On additive_expr shift to state 341
## Reductions:
-- On Tnew Tdelete
--   reduce production option(TColCol) ->

State 179:
## Known stack suffix:
## unqualified_id
## LR(1) items:
id_expression -> unqualified_id . [ Tasm TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtrOpStar TPtrOp TPtVirg TPlus TOrLog TOr TOPar_CplusplusInit TOPar TOCro TOBrace TNotEq TMul TMod TMinus TInfEq TInf TInc TEqEq TEq TEllipsis TDotStar TDot TDiv TDec TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAssign TAndLog TAnd RDots EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production id_expression -> unqualified_id

State 180:
## Known stack suffix:
## unary_op
## LR(1) items:
unary_expr -> unary_op . cast_expr [ TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtrOpStar TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TEq TEllipsis TDotStar TDiv TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAssign TAndLog TAnd RDots EOF ]
## Transitions:
-- On Twchar_t_Constr shift to state 14
-- On Twchar_t shift to state 1
-- On Tvoid shift to state 3
-- On Tunsigned shift to state 15
-- On Ttypeof shift to state 17
-- On Ttypeid shift to state 23
-- On Ttrue shift to state 25
-- On Tthis shift to state 26
-- On Tstatic_cast shift to state 28
-- On Tsizeof shift to state 29
-- On Tsigned shift to state 30
-- On Tshort_Constr shift to state 31
-- On Tshort shift to state 32
-- On Treinterpret_cast shift to state 33
-- On Toperator shift to state 34
-- On Tnullptr shift to state 48
-- On Tnull shift to state 49
-- On Tlong_Constr shift to state 50
-- On Tlong shift to state 38
-- On Tint_Constr shift to state 51
-- On Tint shift to state 39
-- On Tfloat_Constr shift to state 52
-- On Tfloat shift to state 40
-- On Tfalse shift to state 53
-- On Tdynamic_cast shift to state 54
-- On Tdouble_Constr shift to state 55
-- On Tdouble shift to state 41
-- On Tdecltype shift to state 45
-- On Tconst_cast shift to state 56
-- On Tchar_Constr shift to state 57
-- On Tchar shift to state 58
-- On Tbool_Constr shift to state 59
-- On Tbool shift to state 60
-- On TTilde shift to state 61
-- On TString shift to state 62
-- On TPlus shift to state 63
-- On TOPar shift to state 64
-- On TOCro_Lambda shift to state 78
-- On TMul shift to state 88
-- On TMinus shift to state 89
-- On TInt shift to state 90
-- On TInc shift to state 91
-- On TIdent_TypedefConstr shift to state 106
-- On TIdent_Typedef shift to state 20
-- On TIdent_TemplatenameInQualifier_BeforeTypedef shift to state 21
-- On TIdent_TemplatenameInQualifier shift to state 12
-- On TIdent_Templatename shift to state 108
-- On TIdent_MacroString shift to state 110
-- On TIdent_ClassnameInQualifier_BeforeTypedef shift to state 111
-- On TIdent_ClassnameInQualifier shift to state 112
-- On TIdent shift to state 113
-- On TFloat shift to state 116
-- On TDec shift to state 117
-- On TColCol_BeforeTypedef shift to state 118
-- On TColCol shift to state 128
-- On TChar shift to state 174
-- On TBang shift to state 175
-- On TAndLog shift to state 176
-- On TAnd shift to state 177
-- On LDots shift to state 178
-- On unqualified_id shift to state 179
-- On unary_op shift to state 180
-- On unary_expr shift to state 181
-- On type_name shift to state 182
-- On type_cplusplus_id shift to state 183
-- On template_id shift to state 120
-- On string_elem shift to state 184
-- On simple_type_specifier shift to state 189
-- On qualified_id shift to state 191
-- On primary_expr shift to state 192
-- On primary_cplusplus_id shift to state 193
-- On postfix_expr shift to state 194
-- On option(TColCol) shift to state 221
-- On operator_function_id shift to state 168
-- On new_expr shift to state 233
-- On nested_name_specifier2 shift to state 207
-- On nested_name_specifier shift to state 165
-- On literal shift to state 238
-- On lambda_introducer shift to state 239
-- On id_expression shift to state 241
-- On enum_name_or_typedef_name_or_simple_class_name shift to state 123
-- On delete_expr shift to state 242
-- On decltype_specifier shift to state 243
-- On cpp_cast_operator shift to state 244
-- On conversion_function_id shift to state 169
-- On class_or_namespace_name_for_qualifier2 shift to state 124
-- On class_or_namespace_name_for_qualifier shift to state 170
-- On cast_operator_expr shift to state 261
-- On cast_expr shift to state 878
-- On cast_constructor_expr shift to state 263
-- On basic_type_2 shift to state 264
## Reductions:
-- On Tnew Tdelete
--   reduce production option(TColCol) ->

State 181:
## Known stack suffix:
## unary_expr
## LR(1) items:
cast_expr -> unary_expr . [ TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtrOpStar TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TEq TEllipsis TDotStar TDiv TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAssign TAndLog TAnd RDots EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production cast_expr -> unary_expr

State 182:
## Known stack suffix:
## type_name
## LR(1) items:
type_cplusplus_id -> type_name . [ Twchar_t Tvolatile Tvoid Tvirtual Tunsigned Tunion Ttypeof Ttypename Ttypedef Tthread_local Tstruct Tstatic Tsigned Tshort Trestrict Tregister Toperator Tmutable Tlong Tint Tinline Tfriend Tfloat Textern Tenum Tdouble Tdecltype Tconstexpr Tconst Tclass Tchar Tbool Tauto Tasm TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtrOpStar TPtrOp TPtVirg TPlus TOrLog TOr TOPar_CplusplusInit TOPar TOCro TOBrace TNotEq TMul TMod TMinus TInfEq TInf TInc TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TIdent TEqEq TEq TEllipsis TDotStar TDot TDiv TDec TCommentNewline_DefineEndOfMacro TComma TColCol_BeforeTypedef TColCol TCol TCPar_EOL TCPar TCCro TCBrace TAssign TAndLog TAnd RDots EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production type_cplusplus_id -> type_name

State 183:
## Known stack suffix:
## type_cplusplus_id
## LR(1) items:
simple_type_specifier -> type_cplusplus_id . [ Twchar_t Tvolatile Tvoid Tvirtual Tunsigned Tunion Ttypeof Ttypename Ttypedef Tthread_local Tstruct Tstatic Tsigned Tshort Trestrict Tregister Toperator Tmutable Tlong Tint Tinline Tfriend Tfloat Textern Tenum Tdouble Tdecltype Tconstexpr Tconst Tclass Tchar Tbool Tauto Tasm TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtrOpStar TPtrOp TPtVirg TPlus TOrLog TOr TOPar_CplusplusInit TOPar TOCro TOBrace TNotEq TMul TMod TMinus TInfEq TInf TInc TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TIdent TEqEq TEq TEllipsis TDotStar TDot TDiv TDec TCommentNewline_DefineEndOfMacro TComma TColCol_BeforeTypedef TColCol TCol TCPar_EOL TCPar TCCro TCBrace TAssign TAndLog TAnd RDots EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production simple_type_specifier -> type_cplusplus_id

State 184:
## Known stack suffix:
## string_elem
## LR(1) items:
literal -> string_elem . nonempty_list(string_elem) [ TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtrOpStar TPtrOp TPtVirg TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMod TMinus TInfEq TInf TInc TEqEq TEq TEllipsis TDotStar TDot TDiv TDec TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAssign TAndLog TAnd RDots EOF ]
## Transitions:
-- On TString shift to state 185
-- On TIdent_MacroString shift to state 110
-- On string_elem shift to state 186
-- On nonempty_list(string_elem) shift to state 188
## Reductions:

State 185:
## Known stack suffix:
## TString
## LR(1) items:
string_elem -> TString . [ TXor TWhy TSup_Template TSupEq TSup TString TShr TShl TPtrOpStar TPtrOp TPtVirg TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMod TMinus TInfEq TInf TInc TIdent_MacroString TEqEq TEq TEllipsis TDotStar TDot TDiv TDec TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAssign TAndLog TAnd RDots EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production string_elem -> TString

State 186:
## Known stack suffix:
## string_elem
## LR(1) items:
nonempty_list(string_elem) -> string_elem . [ TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtrOpStar TPtrOp TPtVirg TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMod TMinus TInfEq TInf TInc TEqEq TEq TEllipsis TDotStar TDot TDiv TDec TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAssign TAndLog TAnd RDots EOF ]
nonempty_list(string_elem) -> string_elem . nonempty_list(string_elem) [ TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtrOpStar TPtrOp TPtVirg TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMod TMinus TInfEq TInf TInc TEqEq TEq TEllipsis TDotStar TDot TDiv TDec TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAssign TAndLog TAnd RDots EOF ]
## Transitions:
-- On TString shift to state 185
-- On TIdent_MacroString shift to state 110
-- On string_elem shift to state 186
-- On nonempty_list(string_elem) shift to state 187
## Reductions:
-- On TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtrOpStar TPtrOp TPtVirg TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMod TMinus TInfEq TInf TInc TEqEq TEq TEllipsis TDotStar TDot TDiv TDec TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAssign TAndLog TAnd RDots EOF
--   reduce production nonempty_list(string_elem) -> string_elem

State 187:
## Known stack suffix:
## string_elem nonempty_list(string_elem)
## LR(1) items:
nonempty_list(string_elem) -> string_elem nonempty_list(string_elem) . [ TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtrOpStar TPtrOp TPtVirg TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMod TMinus TInfEq TInf TInc TEqEq TEq TEllipsis TDotStar TDot TDiv TDec TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAssign TAndLog TAnd RDots EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production nonempty_list(string_elem) -> string_elem nonempty_list(string_elem)

State 188:
## Known stack suffix:
## string_elem nonempty_list(string_elem)
## LR(1) items:
literal -> string_elem nonempty_list(string_elem) . [ TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtrOpStar TPtrOp TPtVirg TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMod TMinus TInfEq TInf TInc TEqEq TEq TEllipsis TDotStar TDot TDiv TDec TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAssign TAndLog TAnd RDots EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production literal -> string_elem nonempty_list(string_elem)

State 189:
## Known stack suffix:
## simple_type_specifier
## LR(1) items:
postfix_expr -> simple_type_specifier . braced_init_list [ TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtrOpStar TPtrOp TPtVirg TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMod TMinus TInfEq TInf TInc TEqEq TEq TEllipsis TDotStar TDot TDiv TDec TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAssign TAndLog TAnd RDots EOF ]
## Transitions:
-- On TOBrace shift to state 114
-- On braced_init_list shift to state 190
## Reductions:

State 190:
## Known stack suffix:
## simple_type_specifier braced_init_list
## LR(1) items:
postfix_expr -> simple_type_specifier braced_init_list . [ TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtrOpStar TPtrOp TPtVirg TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMod TMinus TInfEq TInf TInc TEqEq TEq TEllipsis TDotStar TDot TDiv TDec TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAssign TAndLog TAnd RDots EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production postfix_expr -> simple_type_specifier braced_init_list

State 191:
## Known stack suffix:
## qualified_id
## LR(1) items:
id_expression -> qualified_id . [ Tasm TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtrOpStar TPtrOp TPtVirg TPlus TOrLog TOr TOPar_CplusplusInit TOPar TOCro TOBrace TNotEq TMul TMod TMinus TInfEq TInf TInc TEqEq TEq TEllipsis TDotStar TDot TDiv TDec TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAssign TAndLog TAnd RDots EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production id_expression -> qualified_id

State 192:
## Known stack suffix:
## primary_expr
## LR(1) items:
postfix_expr -> primary_expr . [ TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtrOpStar TPtrOp TPtVirg TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMod TMinus TInfEq TInf TInc TEqEq TEq TEllipsis TDotStar TDot TDiv TDec TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAssign TAndLog TAnd RDots EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production postfix_expr -> primary_expr

State 193:
## Known stack suffix:
## primary_cplusplus_id
## LR(1) items:
primary_expr -> primary_cplusplus_id . [ TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtrOpStar TPtrOp TPtVirg TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMod TMinus TInfEq TInf TInc TEqEq TEq TEllipsis TDotStar TDot TDiv TDec TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAssign TAndLog TAnd RDots EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production primary_expr -> primary_cplusplus_id

State 194:
## Known stack suffix:
## postfix_expr
## LR(1) items:
postfix_expr -> postfix_expr . TOCro expr TCCro [ TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtrOpStar TPtrOp TPtVirg TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMod TMinus TInfEq TInf TInc TEqEq TEq TEllipsis TDotStar TDot TDiv TDec TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAssign TAndLog TAnd RDots EOF ]
postfix_expr -> postfix_expr . TOPar optl(listc(argument)) TCPar [ TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtrOpStar TPtrOp TPtVirg TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMod TMinus TInfEq TInf TInc TEqEq TEq TEllipsis TDotStar TDot TDiv TDec TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAssign TAndLog TAnd RDots EOF ]
postfix_expr -> postfix_expr . TDot option(Ttemplate) option(TColCol) id_expression [ TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtrOpStar TPtrOp TPtVirg TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMod TMinus TInfEq TInf TInc TEqEq TEq TEllipsis TDotStar TDot TDiv TDec TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAssign TAndLog TAnd RDots EOF ]
postfix_expr -> postfix_expr . TPtrOp option(Ttemplate) option(TColCol) id_expression [ TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtrOpStar TPtrOp TPtVirg TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMod TMinus TInfEq TInf TInc TEqEq TEq TEllipsis TDotStar TDot TDiv TDec TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAssign TAndLog TAnd RDots EOF ]
postfix_expr -> postfix_expr . TInc [ TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtrOpStar TPtrOp TPtVirg TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMod TMinus TInfEq TInf TInc TEqEq TEq TEllipsis TDotStar TDot TDiv TDec TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAssign TAndLog TAnd RDots EOF ]
postfix_expr -> postfix_expr . TDec [ TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtrOpStar TPtrOp TPtVirg TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMod TMinus TInfEq TInf TInc TEqEq TEq TEllipsis TDotStar TDot TDiv TDec TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAssign TAndLog TAnd RDots EOF ]
unary_expr -> postfix_expr . [ TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtrOpStar TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TEq TEllipsis TDotStar TDiv TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAssign TAndLog TAnd RDots EOF ]
## Transitions:
-- On TPtrOp shift to state 195
-- On TOPar shift to state 200
-- On TOCro shift to state 869
-- On TInc shift to state 872
-- On TDot shift to state 873
-- On TDec shift to state 877
## Reductions:
-- On TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtrOpStar TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TEq TEllipsis TDotStar TDiv TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAssign TAndLog TAnd RDots EOF
--   reduce production unary_expr -> postfix_expr

State 195:
## Known stack suffix:
## postfix_expr TPtrOp
## LR(1) items:
postfix_expr -> postfix_expr TPtrOp . option(Ttemplate) option(TColCol) id_expression [ TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtrOpStar TPtrOp TPtVirg TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMod TMinus TInfEq TInf TInc TEqEq TEq TEllipsis TDotStar TDot TDiv TDec TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAssign TAndLog TAnd RDots EOF ]
## Transitions:
-- On Ttemplate shift to state 196
-- On option(Ttemplate) shift to state 197
## Reductions:
-- On Toperator TIdent_TemplatenameInQualifier TIdent_ClassnameInQualifier TIdent TColCol
--   reduce production option(Ttemplate) ->

State 196:
## Known stack suffix:
## Ttemplate
## LR(1) items:
option(Ttemplate) -> Ttemplate . [ Toperator TIdent_TemplatenameInQualifier TIdent_ClassnameInQualifier TIdent TColCol ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production option(Ttemplate) -> Ttemplate

State 197:
## Known stack suffix:
## postfix_expr TPtrOp option(Ttemplate)
## LR(1) items:
postfix_expr -> postfix_expr TPtrOp option(Ttemplate) . option(TColCol) id_expression [ TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtrOpStar TPtrOp TPtVirg TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMod TMinus TInfEq TInf TInc TEqEq TEq TEllipsis TDotStar TDot TDiv TDec TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAssign TAndLog TAnd RDots EOF ]
## Transitions:
-- On TColCol shift to state 8
-- On option(TColCol) shift to state 198
## Reductions:
-- On Toperator TIdent_TemplatenameInQualifier TIdent_ClassnameInQualifier TIdent
--   reduce production option(TColCol) ->

State 198:
## Known stack suffix:
## postfix_expr TPtrOp option(Ttemplate) option(TColCol)
## LR(1) items:
postfix_expr -> postfix_expr TPtrOp option(Ttemplate) option(TColCol) . id_expression [ TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtrOpStar TPtrOp TPtVirg TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMod TMinus TInfEq TInf TInc TEqEq TEq TEllipsis TDotStar TDot TDiv TDec TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAssign TAndLog TAnd RDots EOF ]
## Transitions:
-- On Toperator shift to state 34
-- On TIdent_TemplatenameInQualifier shift to state 12
-- On TIdent_ClassnameInQualifier shift to state 112
-- On TIdent shift to state 166
-- On unqualified_id shift to state 179
-- On qualified_id shift to state 191
-- On operator_function_id shift to state 168
-- On nested_name_specifier shift to state 165
-- On id_expression shift to state 199
-- On conversion_function_id shift to state 169
-- On class_or_namespace_name_for_qualifier shift to state 170
## Reductions:

State 199:
## Known stack suffix:
## postfix_expr TPtrOp option(Ttemplate) option(TColCol) id_expression
## LR(1) items:
postfix_expr -> postfix_expr TPtrOp option(Ttemplate) option(TColCol) id_expression . [ TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtrOpStar TPtrOp TPtVirg TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMod TMinus TInfEq TInf TInc TEqEq TEq TEllipsis TDotStar TDot TDiv TDec TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAssign TAndLog TAnd RDots EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production postfix_expr -> postfix_expr TPtrOp option(Ttemplate) option(TColCol) id_expression

State 200:
## Known stack suffix:
## postfix_expr TOPar
## LR(1) items:
postfix_expr -> postfix_expr TOPar . optl(listc(argument)) TCPar [ TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtrOpStar TPtrOp TPtVirg TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMod TMinus TInfEq TInf TInc TEqEq TEq TEllipsis TDotStar TDot TDiv TDec TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAssign TAndLog TAnd RDots EOF ]
## Transitions:
-- On Twchar_t_Constr shift to state 14
-- On Twchar_t shift to state 1
-- On Tvolatile shift to state 2
-- On Tvoid shift to state 3
-- On Tunsigned shift to state 15
-- On Tunion shift to state 16
-- On Ttypeof shift to state 17
-- On Ttypename shift to state 19
-- On Ttypeid shift to state 23
-- On Ttrue shift to state 25
-- On Tthrow shift to state 47
-- On Tthis shift to state 26
-- On Tstruct shift to state 27
-- On Tstatic_cast shift to state 28
-- On Tsizeof shift to state 29
-- On Tsigned shift to state 30
-- On Tshort_Constr shift to state 31
-- On Tshort shift to state 32
-- On Trestrict shift to state 65
-- On Treinterpret_cast shift to state 33
-- On Toperator shift to state 34
-- On Tnullptr shift to state 48
-- On Tnull shift to state 49
-- On Tlong_Constr shift to state 50
-- On Tlong shift to state 38
-- On Tint_Constr shift to state 51
-- On Tint shift to state 39
-- On Tfloat_Constr shift to state 52
-- On Tfloat shift to state 40
-- On Tfalse shift to state 53
-- On Tenum shift to state 66
-- On Tdynamic_cast shift to state 54
-- On Tdouble_Constr shift to state 55
-- On Tdouble shift to state 41
-- On Tdecltype shift to state 45
-- On Tconst_cast shift to state 56
-- On Tconst shift to state 76
-- On Tclass shift to state 77
-- On Tchar_Constr shift to state 57
-- On Tchar shift to state 58
-- On Tbool_Constr shift to state 59
-- On Tbool shift to state 60
-- On TTilde shift to state 61
-- On TString shift to state 62
-- On TPlus shift to state 63
-- On TOPar shift to state 64
-- On TOCro_Lambda shift to state 78
-- On TMul shift to state 88
-- On TMinus shift to state 89
-- On TInt shift to state 90
-- On TInc shift to state 91
-- On TIdent_TypedefConstr shift to state 106
-- On TIdent_Typedef shift to state 20
-- On TIdent_TemplatenameInQualifier_BeforeTypedef shift to state 21
-- On TIdent_TemplatenameInQualifier shift to state 12
-- On TIdent_Templatename shift to state 108
-- On TIdent_MacroString shift to state 110
-- On TIdent_ClassnameInQualifier_BeforeTypedef shift to state 111
-- On TIdent_ClassnameInQualifier shift to state 112
-- On TIdent shift to state 113
-- On TFloat shift to state 116
-- On TEllipsis shift to state 201
-- On TDec shift to state 117
-- On TColCol_BeforeTypedef shift to state 118
-- On TColCol shift to state 128
-- On TChar shift to state 174
-- On TBang shift to state 175
-- On TAny_Action shift to state 202
-- On TAndLog shift to state 176
-- On TAnd shift to state 177
-- On LDots shift to state 178
-- On unqualified_id shift to state 179
-- On unary_op shift to state 180
-- On unary_expr shift to state 181
-- On type_spec shift to state 204
-- On type_name shift to state 182
-- On type_id shift to state 224
-- On type_cplusplus_id shift to state 183
-- On template_id shift to state 120
-- On string_elem shift to state 184
-- On spec_qualif_list shift to state 225
-- On simple_type_specifier shift to state 266
-- On shift_expr shift to state 217
-- On relational_expr shift to state 229
-- On qualified_id shift to state 191
-- On primary_expr shift to state 192
-- On primary_cplusplus_id shift to state 193
-- On postfix_expr shift to state 194
-- On pm_expr shift to state 219
-- On optl(listc(argument)) shift to state 867
-- On option(TColCol) shift to state 221
-- On operator_function_id shift to state 168
-- On nonempty_list(TAny_Action) shift to state 269
-- On new_expr shift to state 233
-- On nested_name_specifier2 shift to state 207
-- On nested_name_specifier shift to state 165
-- On multiplicative_expr shift to state 234
-- On logical_or_expr shift to state 246
-- On logical_and_expr shift to state 250
-- On literal shift to state 238
-- On listc(argument) shift to state 270
-- On lambda_introducer shift to state 239
-- On inclusive_or_expr shift to state 272
-- On id_expression shift to state 241
-- On exclusive_or_expr shift to state 273
-- On equality_expr shift to state 256
-- On enum_specifier shift to state 209
-- On enum_name_or_typedef_name_or_simple_class_name shift to state 123
-- On enum_head shift to state 210
-- On elaborated_type_specifier shift to state 274
-- On delete_expr shift to state 242
-- On decltype_specifier shift to state 243
-- On cv_qualif shift to state 275
-- On cpp_cast_operator shift to state 244
-- On conversion_function_id shift to state 169
-- On cond_expr shift to state 330
-- On class_specifier shift to state 277
-- On class_or_namespace_name_for_qualifier2 shift to state 124
-- On class_or_namespace_name_for_qualifier shift to state 170
-- On class_key shift to state 278
-- On class_head shift to state 301
-- On cast_operator_expr shift to state 261
-- On cast_expr shift to state 331
-- On cast_constructor_expr shift to state 263
-- On basic_type_2 shift to state 264
-- On assign_expr shift to state 354
-- On argument shift to state 355
-- On and_expr shift to state 334
-- On additive_expr shift to state 341
## Reductions:
-- On Tnew Tdelete
--   reduce production option(TColCol) ->
-- On TCPar
--   reduce production optl(listc(argument)) ->

State 201:
## Known stack suffix:
## TEllipsis
## LR(1) items:
argument -> TEllipsis . [ TComma TCPar_EOL TCPar ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production argument -> TEllipsis

State 202:
## Known stack suffix:
## TAny_Action
## LR(1) items:
nonempty_list(TAny_Action) -> TAny_Action . [ TComma TCPar_EOL TCPar ]
nonempty_list(TAny_Action) -> TAny_Action . nonempty_list(TAny_Action) [ TComma TCPar_EOL TCPar ]
## Transitions:
-- On TAny_Action shift to state 202
-- On nonempty_list(TAny_Action) shift to state 203
## Reductions:
-- On TComma TCPar_EOL TCPar
--   reduce production nonempty_list(TAny_Action) -> TAny_Action

State 203:
## Known stack suffix:
## TAny_Action nonempty_list(TAny_Action)
## LR(1) items:
nonempty_list(TAny_Action) -> TAny_Action nonempty_list(TAny_Action) . [ TComma TCPar_EOL TCPar ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production nonempty_list(TAny_Action) -> TAny_Action nonempty_list(TAny_Action)

State 204:
## Known stack suffix:
## type_spec
## LR(1) items:
spec_qualif_list -> type_spec . [ TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtrOpStar TPtVirg TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMod TMinus TInfEq TInf TIdent TEqEq TEq TEllipsis TDotStar TDiv TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAssign TAndLog TAnd RDots EOF ]
spec_qualif_list -> type_spec . spec_qualif_list [ TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtrOpStar TPtVirg TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMod TMinus TInfEq TInf TIdent TEqEq TEq TEllipsis TDotStar TDiv TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAssign TAndLog TAnd RDots EOF ]
## Transitions:
-- On Twchar_t shift to state 1
-- On Tvolatile shift to state 2
-- On Tvoid shift to state 3
-- On Tunsigned shift to state 15
-- On Tunion shift to state 16
-- On Ttypeof shift to state 17
-- On Ttypename shift to state 19
-- On Tstruct shift to state 27
-- On Tsigned shift to state 30
-- On Tshort shift to state 32
-- On Trestrict shift to state 65
-- On Tlong shift to state 38
-- On Tint shift to state 39
-- On Tfloat shift to state 40
-- On Tenum shift to state 66
-- On Tdouble shift to state 41
-- On Tdecltype shift to state 45
-- On Tconst shift to state 76
-- On Tclass shift to state 77
-- On Tchar shift to state 58
-- On Tbool shift to state 60
-- On TIdent_Typedef shift to state 20
-- On TIdent_TemplatenameInQualifier_BeforeTypedef shift to state 21
-- On TIdent_Templatename shift to state 108
-- On TIdent_ClassnameInQualifier_BeforeTypedef shift to state 111
-- On TColCol_BeforeTypedef shift to state 118
-- On type_spec shift to state 204
-- On type_name shift to state 182
-- On type_cplusplus_id shift to state 183
-- On template_id shift to state 120
-- On spec_qualif_list shift to state 205
-- On simple_type_specifier shift to state 206
-- On nested_name_specifier2 shift to state 207
-- On enum_specifier shift to state 209
-- On enum_name_or_typedef_name_or_simple_class_name shift to state 123
-- On enum_head shift to state 210
-- On elaborated_type_specifier shift to state 274
-- On decltype_specifier shift to state 243
-- On cv_qualif shift to state 275
-- On class_specifier shift to state 277
-- On class_or_namespace_name_for_qualifier2 shift to state 124
-- On class_key shift to state 278
-- On class_head shift to state 301
## Reductions:
-- On TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtrOpStar TPtVirg TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMod TMinus TInfEq TInf TIdent TEqEq TEq TEllipsis TDotStar TDiv TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAssign TAndLog TAnd RDots EOF
--   reduce production spec_qualif_list -> type_spec

State 205:
## Known stack suffix:
## type_spec spec_qualif_list
## LR(1) items:
spec_qualif_list -> type_spec spec_qualif_list . [ TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtrOpStar TPtVirg TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMod TMinus TInfEq TInf TIdent TEqEq TEq TEllipsis TDotStar TDiv TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAssign TAndLog TAnd RDots EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production spec_qualif_list -> type_spec spec_qualif_list

State 206:
## Known stack suffix:
## simple_type_specifier
## LR(1) items:
type_spec -> simple_type_specifier . [ Twchar_t Tvolatile Tvoid Tvirtual Tunsigned Tunion Ttypeof Ttypename Ttypedef Tthread_local Tstruct Tstatic Tsigned Tshort Trestrict Tregister Toperator Tmutable Tlong Tint Tinline Tfriend Tfloat Textern Tenum Tdouble Tdecltype Tconstexpr Tconst Tclass Tchar Tbool Tauto TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtrOpStar TPtVirg TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMod TMinus TInfEq TInf TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TIdent TEqEq TEq TEllipsis TDotStar TDiv TCommentNewline_DefineEndOfMacro TComma TColCol_BeforeTypedef TColCol TCol TCPar_EOL TCPar TCCro TCBrace TAssign TAndLog TAnd RDots EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production type_spec -> simple_type_specifier

State 207:
## Known stack suffix:
## nested_name_specifier2
## LR(1) items:
type_cplusplus_id -> nested_name_specifier2 . type_name [ Twchar_t Tvolatile Tvoid Tvirtual Tunsigned Tunion Ttypeof Ttypename Ttypedef Tthread_local Tstruct Tstatic Tsigned Tshort Trestrict Tregister Toperator Tmutable Tlong Tint Tinline Tfriend Tfloat Textern Tenum Tdouble Tdecltype Tconstexpr Tconst Tclass Tchar Tbool Tauto Tasm TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtrOpStar TPtrOp TPtVirg TPlus TOrLog TOr TOPar_CplusplusInit TOPar TOCro TOBrace TNotEq TMul TMod TMinus TInfEq TInf TInc TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TIdent TEqEq TEq TEllipsis TDotStar TDot TDiv TDec TCommentNewline_DefineEndOfMacro TComma TColCol_BeforeTypedef TColCol TCol TCPar_EOL TCPar TCCro TCBrace TAssign TAndLog TAnd RDots EOF ]
## Transitions:
-- On TIdent_Typedef shift to state 20
-- On TIdent_Templatename shift to state 108
-- On type_name shift to state 208
-- On template_id shift to state 120
-- On enum_name_or_typedef_name_or_simple_class_name shift to state 123
## Reductions:

State 208:
## Known stack suffix:
## nested_name_specifier2 type_name
## LR(1) items:
type_cplusplus_id -> nested_name_specifier2 type_name . [ Twchar_t Tvolatile Tvoid Tvirtual Tunsigned Tunion Ttypeof Ttypename Ttypedef Tthread_local Tstruct Tstatic Tsigned Tshort Trestrict Tregister Toperator Tmutable Tlong Tint Tinline Tfriend Tfloat Textern Tenum Tdouble Tdecltype Tconstexpr Tconst Tclass Tchar Tbool Tauto Tasm TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtrOpStar TPtrOp TPtVirg TPlus TOrLog TOr TOPar_CplusplusInit TOPar TOCro TOBrace TNotEq TMul TMod TMinus TInfEq TInf TInc TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TIdent TEqEq TEq TEllipsis TDotStar TDot TDiv TDec TCommentNewline_DefineEndOfMacro TComma TColCol_BeforeTypedef TColCol TCol TCPar_EOL TCPar TCCro TCBrace TAssign TAndLog TAnd RDots EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production type_cplusplus_id -> nested_name_specifier2 type_name

State 209:
## Known stack suffix:
## enum_specifier
## LR(1) items:
type_spec -> enum_specifier . [ Twchar_t Tvolatile Tvoid Tvirtual Tunsigned Tunion Ttypeof Ttypename Ttypedef Tthread_local Tstruct Tstatic Tsigned Tshort Trestrict Tregister Toperator Tmutable Tlong Tint Tinline Tfriend Tfloat Textern Tenum Tdouble Tdecltype Tconstexpr Tconst Tclass Tchar Tbool Tauto TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtrOpStar TPtVirg TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMod TMinus TInfEq TInf TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TIdent TEqEq TEq TEllipsis TDotStar TDiv TCommentNewline_DefineEndOfMacro TComma TColCol_BeforeTypedef TColCol TCol TCPar_EOL TCPar TCCro TCBrace TAssign TAndLog TAnd RDots EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production type_spec -> enum_specifier

State 210:
## Known stack suffix:
## enum_head
## LR(1) items:
enum_specifier -> enum_head . TOBrace listc(enumerator) option(TComma) TCBrace [ Twchar_t Tvolatile Tvoid Tvirtual Tunsigned Tunion Ttypeof Ttypename Ttypedef Tthread_local Tstruct Tstatic Tsigned Tshort Trestrict Tregister Toperator Tmutable Tlong Tint Tinline Tfriend Tfloat Textern Tenum Tdouble Tdecltype Tconstexpr Tconst Tclass Tchar Tbool Tauto TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtrOpStar TPtVirg TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMod TMinus TInfEq TInf TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TIdent TEqEq TEq TEllipsis TDotStar TDiv TCommentNewline_DefineEndOfMacro TComma TColCol_BeforeTypedef TColCol TCol TCPar_EOL TCPar TCCro TCBrace TAssign TAndLog TAnd RDots EOF ]
enum_specifier -> enum_head . TOBrace TCBrace [ Twchar_t Tvolatile Tvoid Tvirtual Tunsigned Tunion Ttypeof Ttypename Ttypedef Tthread_local Tstruct Tstatic Tsigned Tshort Trestrict Tregister Toperator Tmutable Tlong Tint Tinline Tfriend Tfloat Textern Tenum Tdouble Tdecltype Tconstexpr Tconst Tclass Tchar Tbool Tauto TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtrOpStar TPtVirg TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMod TMinus TInfEq TInf TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TIdent TEqEq TEq TEllipsis TDotStar TDiv TCommentNewline_DefineEndOfMacro TComma TColCol_BeforeTypedef TColCol TCol TCPar_EOL TCPar TCCro TCBrace TAssign TAndLog TAnd RDots EOF ]
## Transitions:
-- On TOBrace shift to state 211
## Reductions:

State 211:
## Known stack suffix:
## enum_head TOBrace
## LR(1) items:
enum_specifier -> enum_head TOBrace . listc(enumerator) option(TComma) TCBrace [ Twchar_t Tvolatile Tvoid Tvirtual Tunsigned Tunion Ttypeof Ttypename Ttypedef Tthread_local Tstruct Tstatic Tsigned Tshort Trestrict Tregister Toperator Tmutable Tlong Tint Tinline Tfriend Tfloat Textern Tenum Tdouble Tdecltype Tconstexpr Tconst Tclass Tchar Tbool Tauto TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtrOpStar TPtVirg TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMod TMinus TInfEq TInf TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TIdent TEqEq TEq TEllipsis TDotStar TDiv TCommentNewline_DefineEndOfMacro TComma TColCol_BeforeTypedef TColCol TCol TCPar_EOL TCPar TCCro TCBrace TAssign TAndLog TAnd RDots EOF ]
enum_specifier -> enum_head TOBrace . TCBrace [ Twchar_t Tvolatile Tvoid Tvirtual Tunsigned Tunion Ttypeof Ttypename Ttypedef Tthread_local Tstruct Tstatic Tsigned Tshort Trestrict Tregister Toperator Tmutable Tlong Tint Tinline Tfriend Tfloat Textern Tenum Tdouble Tdecltype Tconstexpr Tconst Tclass Tchar Tbool Tauto TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtrOpStar TPtVirg TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMod TMinus TInfEq TInf TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TIdent TEqEq TEq TEllipsis TDotStar TDiv TCommentNewline_DefineEndOfMacro TComma TColCol_BeforeTypedef TColCol TCol TCPar_EOL TCPar TCCro TCBrace TAssign TAndLog TAnd RDots EOF ]
## Transitions:
-- On TIdent_Typedef shift to state 68
-- On TIdent shift to state 69
-- On TCBrace shift to state 212
-- On listc(enumerator) shift to state 213
-- On ident shift to state 215
-- On enumerator shift to state 866
## Reductions:

State 212:
## Known stack suffix:
## enum_head TOBrace TCBrace
## LR(1) items:
enum_specifier -> enum_head TOBrace TCBrace . [ Twchar_t Tvolatile Tvoid Tvirtual Tunsigned Tunion Ttypeof Ttypename Ttypedef Tthread_local Tstruct Tstatic Tsigned Tshort Trestrict Tregister Toperator Tmutable Tlong Tint Tinline Tfriend Tfloat Textern Tenum Tdouble Tdecltype Tconstexpr Tconst Tclass Tchar Tbool Tauto TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtrOpStar TPtVirg TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMod TMinus TInfEq TInf TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TIdent TEqEq TEq TEllipsis TDotStar TDiv TCommentNewline_DefineEndOfMacro TComma TColCol_BeforeTypedef TColCol TCol TCPar_EOL TCPar TCCro TCBrace TAssign TAndLog TAnd RDots EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production enum_specifier -> enum_head TOBrace TCBrace

State 213:
## Known stack suffix:
## enum_head TOBrace listc(enumerator)
## LR(1) items:
enum_specifier -> enum_head TOBrace listc(enumerator) . option(TComma) TCBrace [ Twchar_t Tvolatile Tvoid Tvirtual Tunsigned Tunion Ttypeof Ttypename Ttypedef Tthread_local Tstruct Tstatic Tsigned Tshort Trestrict Tregister Toperator Tmutable Tlong Tint Tinline Tfriend Tfloat Textern Tenum Tdouble Tdecltype Tconstexpr Tconst Tclass Tchar Tbool Tauto TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtrOpStar TPtVirg TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMod TMinus TInfEq TInf TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TIdent TEqEq TEq TEllipsis TDotStar TDiv TCommentNewline_DefineEndOfMacro TComma TColCol_BeforeTypedef TColCol TCol TCPar_EOL TCPar TCCro TCBrace TAssign TAndLog TAnd RDots EOF ]
listc(enumerator) -> listc(enumerator) . TComma enumerator [ TComma TCBrace ]
## Transitions:
-- On TComma shift to state 214
-- On option(TComma) shift to state 864
## Reductions:
-- On TCBrace
--   reduce production option(TComma) ->

State 214:
## Known stack suffix:
## listc(enumerator) TComma
## LR(1) items:
listc(enumerator) -> listc(enumerator) TComma . enumerator [ TComma TCBrace ]
option(TComma) -> TComma . [ TCBrace ]
## Transitions:
-- On TIdent_Typedef shift to state 68
-- On TIdent shift to state 69
-- On ident shift to state 215
-- On enumerator shift to state 863
## Reductions:
-- On TCBrace
--   reduce production option(TComma) -> TComma

State 215:
## Known stack suffix:
## ident
## LR(1) items:
enumerator -> ident . [ TComma TCBrace ]
enumerator -> ident . TEq const_expr [ TComma TCBrace ]
## Transitions:
-- On TEq shift to state 216
## Reductions:
-- On TComma TCBrace
--   reduce production enumerator -> ident

State 216:
## Known stack suffix:
## ident TEq
## LR(1) items:
enumerator -> ident TEq . const_expr [ TComma TCBrace ]
## Transitions:
-- On Twchar_t_Constr shift to state 14
-- On Twchar_t shift to state 1
-- On Tvoid shift to state 3
-- On Tunsigned shift to state 15
-- On Ttypeof shift to state 17
-- On Ttypeid shift to state 23
-- On Ttrue shift to state 25
-- On Tthis shift to state 26
-- On Tstatic_cast shift to state 28
-- On Tsizeof shift to state 29
-- On Tsigned shift to state 30
-- On Tshort_Constr shift to state 31
-- On Tshort shift to state 32
-- On Treinterpret_cast shift to state 33
-- On Toperator shift to state 34
-- On Tnullptr shift to state 48
-- On Tnull shift to state 49
-- On Tlong_Constr shift to state 50
-- On Tlong shift to state 38
-- On Tint_Constr shift to state 51
-- On Tint shift to state 39
-- On Tfloat_Constr shift to state 52
-- On Tfloat shift to state 40
-- On Tfalse shift to state 53
-- On Tdynamic_cast shift to state 54
-- On Tdouble_Constr shift to state 55
-- On Tdouble shift to state 41
-- On Tdecltype shift to state 45
-- On Tconst_cast shift to state 56
-- On Tchar_Constr shift to state 57
-- On Tchar shift to state 58
-- On Tbool_Constr shift to state 59
-- On Tbool shift to state 60
-- On TTilde shift to state 61
-- On TString shift to state 62
-- On TPlus shift to state 63
-- On TOPar shift to state 64
-- On TOCro_Lambda shift to state 78
-- On TMul shift to state 88
-- On TMinus shift to state 89
-- On TInt shift to state 90
-- On TInc shift to state 91
-- On TIdent_TypedefConstr shift to state 106
-- On TIdent_Typedef shift to state 20
-- On TIdent_TemplatenameInQualifier_BeforeTypedef shift to state 21
-- On TIdent_TemplatenameInQualifier shift to state 12
-- On TIdent_Templatename shift to state 108
-- On TIdent_MacroString shift to state 110
-- On TIdent_ClassnameInQualifier_BeforeTypedef shift to state 111
-- On TIdent_ClassnameInQualifier shift to state 112
-- On TIdent shift to state 113
-- On TFloat shift to state 116
-- On TDec shift to state 117
-- On TColCol_BeforeTypedef shift to state 118
-- On TColCol shift to state 128
-- On TChar shift to state 174
-- On TBang shift to state 175
-- On TAndLog shift to state 176
-- On TAnd shift to state 177
-- On LDots shift to state 178
-- On unqualified_id shift to state 179
-- On unary_op shift to state 180
-- On unary_expr shift to state 181
-- On type_name shift to state 182
-- On type_cplusplus_id shift to state 183
-- On template_id shift to state 120
-- On string_elem shift to state 184
-- On simple_type_specifier shift to state 189
-- On shift_expr shift to state 217
-- On relational_expr shift to state 229
-- On qualified_id shift to state 191
-- On primary_expr shift to state 192
-- On primary_cplusplus_id shift to state 193
-- On postfix_expr shift to state 194
-- On pm_expr shift to state 219
-- On option(TColCol) shift to state 221
-- On operator_function_id shift to state 168
-- On new_expr shift to state 233
-- On nested_name_specifier2 shift to state 207
-- On nested_name_specifier shift to state 165
-- On multiplicative_expr shift to state 234
-- On logical_or_expr shift to state 246
-- On logical_and_expr shift to state 250
-- On literal shift to state 238
-- On lambda_introducer shift to state 239
-- On inclusive_or_expr shift to state 272
-- On id_expression shift to state 241
-- On exclusive_or_expr shift to state 273
-- On equality_expr shift to state 256
-- On enum_name_or_typedef_name_or_simple_class_name shift to state 123
-- On delete_expr shift to state 242
-- On decltype_specifier shift to state 243
-- On cpp_cast_operator shift to state 244
-- On conversion_function_id shift to state 169
-- On const_expr shift to state 862
-- On cond_expr shift to state 481
-- On class_or_namespace_name_for_qualifier2 shift to state 124
-- On class_or_namespace_name_for_qualifier shift to state 170
-- On cast_operator_expr shift to state 261
-- On cast_expr shift to state 262
-- On cast_constructor_expr shift to state 263
-- On basic_type_2 shift to state 264
-- On and_expr shift to state 334
-- On additive_expr shift to state 341
## Reductions:
-- On Tnew Tdelete
--   reduce production option(TColCol) ->

State 217:
## Known stack suffix:
## shift_expr
## LR(1) items:
relational_expr -> shift_expr . [ TXor TWhy TSup_Template TSupEq TSup TPtVirg TOrLog TOr TNotEq TInfEq TInf TEqEq TEllipsis TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAndLog TAnd RDots EOF ]
shift_expr -> shift_expr . TShl additive_expr [ TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtVirg TOrLog TOr TNotEq TInfEq TInf TEqEq TEllipsis TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAndLog TAnd RDots EOF ]
shift_expr -> shift_expr . TShr additive_expr [ TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtVirg TOrLog TOr TNotEq TInfEq TInf TEqEq TEllipsis TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAndLog TAnd RDots EOF ]
## Transitions:
-- On TShr shift to state 218
-- On TShl shift to state 232
## Reductions:
-- On TXor TWhy TSup_Template TSupEq TSup TPtVirg TOrLog TOr TNotEq TInfEq TInf TEqEq TEllipsis TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAndLog TAnd RDots EOF
--   reduce production relational_expr -> shift_expr

State 218:
## Known stack suffix:
## shift_expr TShr
## LR(1) items:
shift_expr -> shift_expr TShr . additive_expr [ TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtVirg TOrLog TOr TNotEq TInfEq TInf TEqEq TEllipsis TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAndLog TAnd RDots EOF ]
## Transitions:
-- On Twchar_t_Constr shift to state 14
-- On Twchar_t shift to state 1
-- On Tvoid shift to state 3
-- On Tunsigned shift to state 15
-- On Ttypeof shift to state 17
-- On Ttypeid shift to state 23
-- On Ttrue shift to state 25
-- On Tthis shift to state 26
-- On Tstatic_cast shift to state 28
-- On Tsizeof shift to state 29
-- On Tsigned shift to state 30
-- On Tshort_Constr shift to state 31
-- On Tshort shift to state 32
-- On Treinterpret_cast shift to state 33
-- On Toperator shift to state 34
-- On Tnullptr shift to state 48
-- On Tnull shift to state 49
-- On Tlong_Constr shift to state 50
-- On Tlong shift to state 38
-- On Tint_Constr shift to state 51
-- On Tint shift to state 39
-- On Tfloat_Constr shift to state 52
-- On Tfloat shift to state 40
-- On Tfalse shift to state 53
-- On Tdynamic_cast shift to state 54
-- On Tdouble_Constr shift to state 55
-- On Tdouble shift to state 41
-- On Tdecltype shift to state 45
-- On Tconst_cast shift to state 56
-- On Tchar_Constr shift to state 57
-- On Tchar shift to state 58
-- On Tbool_Constr shift to state 59
-- On Tbool shift to state 60
-- On TTilde shift to state 61
-- On TString shift to state 62
-- On TPlus shift to state 63
-- On TOPar shift to state 64
-- On TOCro_Lambda shift to state 78
-- On TMul shift to state 88
-- On TMinus shift to state 89
-- On TInt shift to state 90
-- On TInc shift to state 91
-- On TIdent_TypedefConstr shift to state 106
-- On TIdent_Typedef shift to state 20
-- On TIdent_TemplatenameInQualifier_BeforeTypedef shift to state 21
-- On TIdent_TemplatenameInQualifier shift to state 12
-- On TIdent_Templatename shift to state 108
-- On TIdent_MacroString shift to state 110
-- On TIdent_ClassnameInQualifier_BeforeTypedef shift to state 111
-- On TIdent_ClassnameInQualifier shift to state 112
-- On TIdent shift to state 113
-- On TFloat shift to state 116
-- On TDec shift to state 117
-- On TColCol_BeforeTypedef shift to state 118
-- On TColCol shift to state 128
-- On TChar shift to state 174
-- On TBang shift to state 175
-- On TAndLog shift to state 176
-- On TAnd shift to state 177
-- On LDots shift to state 178
-- On unqualified_id shift to state 179
-- On unary_op shift to state 180
-- On unary_expr shift to state 181
-- On type_name shift to state 182
-- On type_cplusplus_id shift to state 183
-- On template_id shift to state 120
-- On string_elem shift to state 184
-- On simple_type_specifier shift to state 189
-- On qualified_id shift to state 191
-- On primary_expr shift to state 192
-- On primary_cplusplus_id shift to state 193
-- On postfix_expr shift to state 194
-- On pm_expr shift to state 219
-- On option(TColCol) shift to state 221
-- On operator_function_id shift to state 168
-- On new_expr shift to state 233
-- On nested_name_specifier2 shift to state 207
-- On nested_name_specifier shift to state 165
-- On multiplicative_expr shift to state 234
-- On literal shift to state 238
-- On lambda_introducer shift to state 239
-- On id_expression shift to state 241
-- On enum_name_or_typedef_name_or_simple_class_name shift to state 123
-- On delete_expr shift to state 242
-- On decltype_specifier shift to state 243
-- On cpp_cast_operator shift to state 244
-- On conversion_function_id shift to state 169
-- On class_or_namespace_name_for_qualifier2 shift to state 124
-- On class_or_namespace_name_for_qualifier shift to state 170
-- On cast_operator_expr shift to state 261
-- On cast_expr shift to state 262
-- On cast_constructor_expr shift to state 263
-- On basic_type_2 shift to state 264
-- On additive_expr shift to state 861
## Reductions:
-- On Tnew Tdelete
--   reduce production option(TColCol) ->

State 219:
## Known stack suffix:
## pm_expr
## LR(1) items:
multiplicative_expr -> pm_expr . [ TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TEllipsis TDiv TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAndLog TAnd RDots EOF ]
pm_expr -> pm_expr . TDotStar cast_expr [ TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtrOpStar TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TEllipsis TDotStar TDiv TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAndLog TAnd RDots EOF ]
pm_expr -> pm_expr . TPtrOpStar cast_expr [ TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtrOpStar TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TEllipsis TDotStar TDiv TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAndLog TAnd RDots EOF ]
## Transitions:
-- On TPtrOpStar shift to state 220
-- On TDotStar shift to state 237
## Reductions:
-- On TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TEllipsis TDiv TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAndLog TAnd RDots EOF
--   reduce production multiplicative_expr -> pm_expr

State 220:
## Known stack suffix:
## pm_expr TPtrOpStar
## LR(1) items:
pm_expr -> pm_expr TPtrOpStar . cast_expr [ TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtrOpStar TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TEllipsis TDotStar TDiv TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAndLog TAnd RDots EOF ]
## Transitions:
-- On Twchar_t_Constr shift to state 14
-- On Twchar_t shift to state 1
-- On Tvoid shift to state 3
-- On Tunsigned shift to state 15
-- On Ttypeof shift to state 17
-- On Ttypeid shift to state 23
-- On Ttrue shift to state 25
-- On Tthis shift to state 26
-- On Tstatic_cast shift to state 28
-- On Tsizeof shift to state 29
-- On Tsigned shift to state 30
-- On Tshort_Constr shift to state 31
-- On Tshort shift to state 32
-- On Treinterpret_cast shift to state 33
-- On Toperator shift to state 34
-- On Tnullptr shift to state 48
-- On Tnull shift to state 49
-- On Tlong_Constr shift to state 50
-- On Tlong shift to state 38
-- On Tint_Constr shift to state 51
-- On Tint shift to state 39
-- On Tfloat_Constr shift to state 52
-- On Tfloat shift to state 40
-- On Tfalse shift to state 53
-- On Tdynamic_cast shift to state 54
-- On Tdouble_Constr shift to state 55
-- On Tdouble shift to state 41
-- On Tdecltype shift to state 45
-- On Tconst_cast shift to state 56
-- On Tchar_Constr shift to state 57
-- On Tchar shift to state 58
-- On Tbool_Constr shift to state 59
-- On Tbool shift to state 60
-- On TTilde shift to state 61
-- On TString shift to state 62
-- On TPlus shift to state 63
-- On TOPar shift to state 64
-- On TOCro_Lambda shift to state 78
-- On TMul shift to state 88
-- On TMinus shift to state 89
-- On TInt shift to state 90
-- On TInc shift to state 91
-- On TIdent_TypedefConstr shift to state 106
-- On TIdent_Typedef shift to state 20
-- On TIdent_TemplatenameInQualifier_BeforeTypedef shift to state 21
-- On TIdent_TemplatenameInQualifier shift to state 12
-- On TIdent_Templatename shift to state 108
-- On TIdent_MacroString shift to state 110
-- On TIdent_ClassnameInQualifier_BeforeTypedef shift to state 111
-- On TIdent_ClassnameInQualifier shift to state 112
-- On TIdent shift to state 113
-- On TFloat shift to state 116
-- On TDec shift to state 117
-- On TColCol_BeforeTypedef shift to state 118
-- On TColCol shift to state 128
-- On TChar shift to state 174
-- On TBang shift to state 175
-- On TAndLog shift to state 176
-- On TAnd shift to state 177
-- On LDots shift to state 178
-- On unqualified_id shift to state 179
-- On unary_op shift to state 180
-- On unary_expr shift to state 181
-- On type_name shift to state 182
-- On type_cplusplus_id shift to state 183
-- On template_id shift to state 120
-- On string_elem shift to state 184
-- On simple_type_specifier shift to state 189
-- On qualified_id shift to state 191
-- On primary_expr shift to state 192
-- On primary_cplusplus_id shift to state 193
-- On postfix_expr shift to state 194
-- On option(TColCol) shift to state 221
-- On operator_function_id shift to state 168
-- On new_expr shift to state 233
-- On nested_name_specifier2 shift to state 207
-- On nested_name_specifier shift to state 165
-- On literal shift to state 238
-- On lambda_introducer shift to state 239
-- On id_expression shift to state 241
-- On enum_name_or_typedef_name_or_simple_class_name shift to state 123
-- On delete_expr shift to state 242
-- On decltype_specifier shift to state 243
-- On cpp_cast_operator shift to state 244
-- On conversion_function_id shift to state 169
-- On class_or_namespace_name_for_qualifier2 shift to state 124
-- On class_or_namespace_name_for_qualifier shift to state 170
-- On cast_operator_expr shift to state 261
-- On cast_expr shift to state 860
-- On cast_constructor_expr shift to state 263
-- On basic_type_2 shift to state 264
## Reductions:
-- On Tnew Tdelete
--   reduce production option(TColCol) ->

State 221:
## Known stack suffix:
## option(TColCol)
## LR(1) items:
delete_expr -> option(TColCol) . Tdelete cast_expr [ TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtrOpStar TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TEq TEllipsis TDotStar TDiv TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAssign TAndLog TAnd RDots EOF ]
delete_expr -> option(TColCol) . Tdelete TOCro_new TCCro_new cast_expr [ TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtrOpStar TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TEq TEllipsis TDotStar TDiv TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAssign TAndLog TAnd RDots EOF ]
new_expr -> option(TColCol) . Tnew option(new_placement) new_type_id option(new_initializer) [ TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtrOpStar TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TEq TEllipsis TDotStar TDiv TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAssign TAndLog TAnd RDots EOF ]
## Transitions:
-- On Tnew shift to state 222
-- On Tdelete shift to state 855
## Reductions:

State 222:
## Known stack suffix:
## option(TColCol) Tnew
## LR(1) items:
new_expr -> option(TColCol) Tnew . option(new_placement) new_type_id option(new_initializer) [ TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtrOpStar TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TEq TEllipsis TDotStar TDiv TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAssign TAndLog TAnd RDots EOF ]
## Transitions:
-- On TOPar shift to state 223
-- On option(new_placement) shift to state 833
-- On new_placement shift to state 854
## Reductions:
-- On Twchar_t Tvolatile Tvoid Tunsigned Tunion Ttypeof Ttypename Tstruct Tsigned Tshort Trestrict Tlong Tint Tfloat Tenum Tdouble Tdecltype Tconst Tclass Tchar Tbool TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_Templatename TIdent_ClassnameInQualifier_BeforeTypedef TColCol_BeforeTypedef
--   reduce production option(new_placement) ->

State 223:
## Known stack suffix:
## TOPar
## LR(1) items:
new_placement -> TOPar . listc(argument) TCPar [ Twchar_t Tvolatile Tvoid Tunsigned Tunion Ttypeof Ttypename Tstruct Tsigned Tshort Trestrict Tlong Tint Tfloat Tenum Tdouble Tdecltype Tconst Tclass Tchar Tbool TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_Templatename TIdent_ClassnameInQualifier_BeforeTypedef TColCol_BeforeTypedef ]
## Transitions:
-- On Twchar_t_Constr shift to state 14
-- On Twchar_t shift to state 1
-- On Tvolatile shift to state 2
-- On Tvoid shift to state 3
-- On Tunsigned shift to state 15
-- On Tunion shift to state 16
-- On Ttypeof shift to state 17
-- On Ttypename shift to state 19
-- On Ttypeid shift to state 23
-- On Ttrue shift to state 25
-- On Tthrow shift to state 47
-- On Tthis shift to state 26
-- On Tstruct shift to state 27
-- On Tstatic_cast shift to state 28
-- On Tsizeof shift to state 29
-- On Tsigned shift to state 30
-- On Tshort_Constr shift to state 31
-- On Tshort shift to state 32
-- On Trestrict shift to state 65
-- On Treinterpret_cast shift to state 33
-- On Toperator shift to state 34
-- On Tnullptr shift to state 48
-- On Tnull shift to state 49
-- On Tlong_Constr shift to state 50
-- On Tlong shift to state 38
-- On Tint_Constr shift to state 51
-- On Tint shift to state 39
-- On Tfloat_Constr shift to state 52
-- On Tfloat shift to state 40
-- On Tfalse shift to state 53
-- On Tenum shift to state 66
-- On Tdynamic_cast shift to state 54
-- On Tdouble_Constr shift to state 55
-- On Tdouble shift to state 41
-- On Tdecltype shift to state 45
-- On Tconst_cast shift to state 56
-- On Tconst shift to state 76
-- On Tclass shift to state 77
-- On Tchar_Constr shift to state 57
-- On Tchar shift to state 58
-- On Tbool_Constr shift to state 59
-- On Tbool shift to state 60
-- On TTilde shift to state 61
-- On TString shift to state 62
-- On TPlus shift to state 63
-- On TOPar shift to state 64
-- On TOCro_Lambda shift to state 78
-- On TMul shift to state 88
-- On TMinus shift to state 89
-- On TInt shift to state 90
-- On TInc shift to state 91
-- On TIdent_TypedefConstr shift to state 106
-- On TIdent_Typedef shift to state 20
-- On TIdent_TemplatenameInQualifier_BeforeTypedef shift to state 21
-- On TIdent_TemplatenameInQualifier shift to state 12
-- On TIdent_Templatename shift to state 108
-- On TIdent_MacroString shift to state 110
-- On TIdent_ClassnameInQualifier_BeforeTypedef shift to state 111
-- On TIdent_ClassnameInQualifier shift to state 112
-- On TIdent shift to state 113
-- On TFloat shift to state 116
-- On TEllipsis shift to state 201
-- On TDec shift to state 117
-- On TColCol_BeforeTypedef shift to state 118
-- On TColCol shift to state 128
-- On TChar shift to state 174
-- On TBang shift to state 175
-- On TAny_Action shift to state 202
-- On TAndLog shift to state 176
-- On TAnd shift to state 177
-- On LDots shift to state 178
-- On unqualified_id shift to state 179
-- On unary_op shift to state 180
-- On unary_expr shift to state 181
-- On type_spec shift to state 204
-- On type_name shift to state 182
-- On type_id shift to state 224
-- On type_cplusplus_id shift to state 183
-- On template_id shift to state 120
-- On string_elem shift to state 184
-- On spec_qualif_list shift to state 225
-- On simple_type_specifier shift to state 266
-- On shift_expr shift to state 217
-- On relational_expr shift to state 229
-- On qualified_id shift to state 191
-- On primary_expr shift to state 192
-- On primary_cplusplus_id shift to state 193
-- On postfix_expr shift to state 194
-- On pm_expr shift to state 219
-- On option(TColCol) shift to state 221
-- On operator_function_id shift to state 168
-- On nonempty_list(TAny_Action) shift to state 269
-- On new_expr shift to state 233
-- On nested_name_specifier2 shift to state 207
-- On nested_name_specifier shift to state 165
-- On multiplicative_expr shift to state 234
-- On logical_or_expr shift to state 246
-- On logical_and_expr shift to state 250
-- On literal shift to state 238
-- On listc(argument) shift to state 831
-- On lambda_introducer shift to state 239
-- On inclusive_or_expr shift to state 272
-- On id_expression shift to state 241
-- On exclusive_or_expr shift to state 273
-- On equality_expr shift to state 256
-- On enum_specifier shift to state 209
-- On enum_name_or_typedef_name_or_simple_class_name shift to state 123
-- On enum_head shift to state 210
-- On elaborated_type_specifier shift to state 274
-- On delete_expr shift to state 242
-- On decltype_specifier shift to state 243
-- On cv_qualif shift to state 275
-- On cpp_cast_operator shift to state 244
-- On conversion_function_id shift to state 169
-- On cond_expr shift to state 330
-- On class_specifier shift to state 277
-- On class_or_namespace_name_for_qualifier2 shift to state 124
-- On class_or_namespace_name_for_qualifier shift to state 170
-- On class_key shift to state 278
-- On class_head shift to state 301
-- On cast_operator_expr shift to state 261
-- On cast_expr shift to state 331
-- On cast_constructor_expr shift to state 263
-- On basic_type_2 shift to state 264
-- On assign_expr shift to state 354
-- On argument shift to state 355
-- On and_expr shift to state 334
-- On additive_expr shift to state 341
## Reductions:
-- On Tnew Tdelete
--   reduce production option(TColCol) ->

State 224:
## Known stack suffix:
## type_id
## LR(1) items:
argument -> type_id . [ TComma TCPar_EOL TCPar ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production argument -> type_id

State 225:
## Known stack suffix:
## spec_qualif_list
## LR(1) items:
type_id -> spec_qualif_list . [ TSup_Template TIdent TComma TCPar_EOL TCPar ]
type_id -> spec_qualif_list . abstract_declarator [ TSup_Template TIdent TComma TCPar_EOL TCPar ]
## Transitions:
-- On TOPar shift to state 226
-- On TOCro shift to state 227
-- On TMul shift to state 443
-- On TAndLog shift to state 444
-- On TAnd shift to state 445
-- On pointer shift to state 829
-- On direct_abstract_declarator shift to state 499
-- On abstract_declarator shift to state 830
## Reductions:
-- On TSup_Template TIdent TComma TCPar_EOL TCPar
--   reduce production type_id -> spec_qualif_list

State 226:
## Known stack suffix:
## TOPar
## LR(1) items:
direct_abstract_declarator -> TOPar . abstract_declarator TCPar [ TSup_Template TOPar TOCro TIdent TComma TCPar_EOL TCPar ]
direct_abstract_declarator -> TOPar . TCPar [ TSup_Template TOPar TOCro TIdent TComma TCPar_EOL TCPar ]
direct_abstract_declarator -> TOPar . parameter_type_list TCPar [ TSup_Template TOPar TOCro TIdent TComma TCPar_EOL TCPar ]
## Transitions:
-- On Twchar_t shift to state 1
-- On Tvolatile shift to state 2
-- On Tvoid shift to state 3
-- On Tvirtual shift to state 4
-- On Tunsigned shift to state 15
-- On Tunion shift to state 16
-- On Ttypeof shift to state 17
-- On Ttypename shift to state 19
-- On Ttypedef shift to state 96
-- On Tthread_local shift to state 97
-- On Tstruct shift to state 27
-- On Tstatic shift to state 98
-- On Tsigned shift to state 30
-- On Tshort shift to state 32
-- On Trestrict shift to state 65
-- On Tregister shift to state 99
-- On Tmutable shift to state 100
-- On Tlong shift to state 38
-- On Tint shift to state 39
-- On Tinline shift to state 101
-- On Tfriend shift to state 102
-- On Tfloat shift to state 40
-- On Textern shift to state 103
-- On Tenum shift to state 66
-- On Tdouble shift to state 41
-- On Tdecltype shift to state 45
-- On Tconstexpr shift to state 104
-- On Tconst shift to state 76
-- On Tclass shift to state 77
-- On Tchar shift to state 58
-- On Tbool shift to state 60
-- On Tauto shift to state 105
-- On TOPar shift to state 226
-- On TOCro shift to state 227
-- On TMul shift to state 443
-- On TIdent_Typedef shift to state 20
-- On TIdent_TemplatenameInQualifier_BeforeTypedef shift to state 21
-- On TIdent_Templatename shift to state 108
-- On TIdent_ClassnameInQualifier_BeforeTypedef shift to state 111
-- On TIdent shift to state 453
-- On TColCol_BeforeTypedef shift to state 118
-- On TCPar shift to state 454
-- On TAndLog shift to state 444
-- On TAnd shift to state 445
-- On type_spec shift to state 314
-- On type_name shift to state 182
-- On type_cplusplus_id shift to state 183
-- On template_id shift to state 120
-- On storage_class_spec shift to state 316
-- On simple_type_specifier shift to state 206
-- On pointer shift to state 829
-- On parameter_type_list shift to state 496
-- On parameter_list shift to state 468
-- On parameter_decl2 shift to state 476
-- On parameter_decl shift to state 472
-- On nested_name_specifier2 shift to state 207
-- On function_spec shift to state 437
-- On enum_specifier shift to state 209
-- On enum_name_or_typedef_name_or_simple_class_name shift to state 123
-- On enum_head shift to state 210
-- On elaborated_type_specifier shift to state 274
-- On direct_abstract_declarator shift to state 499
-- On decltype_specifier shift to state 243
-- On decl_spec_seq shift to state 441
-- On decl_spec shift to state 473
-- On cv_qualif shift to state 475
-- On class_specifier shift to state 277
-- On class_or_namespace_name_for_qualifier2 shift to state 124
-- On class_key shift to state 278
-- On class_head shift to state 301
-- On abstract_declarator shift to state 502
## Reductions:

State 227:
## Known stack suffix:
## TOCro
## LR(1) items:
direct_abstract_declarator -> TOCro . TCCro [ TSup_Template TOPar TOCro TIdent TEq TComma TCPar_EOL TCPar ]
direct_abstract_declarator -> TOCro . const_expr TCCro [ TSup_Template TOPar TOCro TIdent TEq TComma TCPar_EOL TCPar ]
## Transitions:
-- On Twchar_t_Constr shift to state 14
-- On Twchar_t shift to state 1
-- On Tvoid shift to state 3
-- On Tunsigned shift to state 15
-- On Ttypeof shift to state 17
-- On Ttypeid shift to state 23
-- On Ttrue shift to state 25
-- On Tthis shift to state 26
-- On Tstatic_cast shift to state 28
-- On Tsizeof shift to state 29
-- On Tsigned shift to state 30
-- On Tshort_Constr shift to state 31
-- On Tshort shift to state 32
-- On Treinterpret_cast shift to state 33
-- On Toperator shift to state 34
-- On Tnullptr shift to state 48
-- On Tnull shift to state 49
-- On Tlong_Constr shift to state 50
-- On Tlong shift to state 38
-- On Tint_Constr shift to state 51
-- On Tint shift to state 39
-- On Tfloat_Constr shift to state 52
-- On Tfloat shift to state 40
-- On Tfalse shift to state 53
-- On Tdynamic_cast shift to state 54
-- On Tdouble_Constr shift to state 55
-- On Tdouble shift to state 41
-- On Tdecltype shift to state 45
-- On Tconst_cast shift to state 56
-- On Tchar_Constr shift to state 57
-- On Tchar shift to state 58
-- On Tbool_Constr shift to state 59
-- On Tbool shift to state 60
-- On TTilde shift to state 61
-- On TString shift to state 62
-- On TPlus shift to state 63
-- On TOPar shift to state 64
-- On TOCro_Lambda shift to state 78
-- On TMul shift to state 88
-- On TMinus shift to state 89
-- On TInt shift to state 90
-- On TInc shift to state 91
-- On TIdent_TypedefConstr shift to state 106
-- On TIdent_Typedef shift to state 20
-- On TIdent_TemplatenameInQualifier_BeforeTypedef shift to state 21
-- On TIdent_TemplatenameInQualifier shift to state 12
-- On TIdent_Templatename shift to state 108
-- On TIdent_MacroString shift to state 110
-- On TIdent_ClassnameInQualifier_BeforeTypedef shift to state 111
-- On TIdent_ClassnameInQualifier shift to state 112
-- On TIdent shift to state 113
-- On TFloat shift to state 116
-- On TDec shift to state 117
-- On TColCol_BeforeTypedef shift to state 118
-- On TColCol shift to state 128
-- On TChar shift to state 174
-- On TCCro shift to state 228
-- On TBang shift to state 175
-- On TAndLog shift to state 176
-- On TAnd shift to state 177
-- On LDots shift to state 178
-- On unqualified_id shift to state 179
-- On unary_op shift to state 180
-- On unary_expr shift to state 181
-- On type_name shift to state 182
-- On type_cplusplus_id shift to state 183
-- On template_id shift to state 120
-- On string_elem shift to state 184
-- On simple_type_specifier shift to state 189
-- On shift_expr shift to state 217
-- On relational_expr shift to state 229
-- On qualified_id shift to state 191
-- On primary_expr shift to state 192
-- On primary_cplusplus_id shift to state 193
-- On postfix_expr shift to state 194
-- On pm_expr shift to state 219
-- On option(TColCol) shift to state 221
-- On operator_function_id shift to state 168
-- On new_expr shift to state 233
-- On nested_name_specifier2 shift to state 207
-- On nested_name_specifier shift to state 165
-- On multiplicative_expr shift to state 234
-- On logical_or_expr shift to state 246
-- On logical_and_expr shift to state 250
-- On literal shift to state 238
-- On lambda_introducer shift to state 239
-- On inclusive_or_expr shift to state 272
-- On id_expression shift to state 241
-- On exclusive_or_expr shift to state 273
-- On equality_expr shift to state 256
-- On enum_name_or_typedef_name_or_simple_class_name shift to state 123
-- On delete_expr shift to state 242
-- On decltype_specifier shift to state 243
-- On cpp_cast_operator shift to state 244
-- On conversion_function_id shift to state 169
-- On const_expr shift to state 827
-- On cond_expr shift to state 481
-- On class_or_namespace_name_for_qualifier2 shift to state 124
-- On class_or_namespace_name_for_qualifier shift to state 170
-- On cast_operator_expr shift to state 261
-- On cast_expr shift to state 262
-- On cast_constructor_expr shift to state 263
-- On basic_type_2 shift to state 264
-- On and_expr shift to state 334
-- On additive_expr shift to state 341
## Reductions:
-- On Tnew Tdelete
--   reduce production option(TColCol) ->

State 228:
## Known stack suffix:
## TOCro TCCro
## LR(1) items:
direct_abstract_declarator -> TOCro TCCro . [ TSup_Template TOPar TOCro TIdent TEq TComma TCPar_EOL TCPar ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production direct_abstract_declarator -> TOCro TCCro

State 229:
## Known stack suffix:
## relational_expr
## LR(1) items:
equality_expr -> relational_expr . [ TXor TWhy TSup_Template TPtVirg TOrLog TOr TNotEq TEqEq TEllipsis TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAndLog TAnd RDots EOF ]
relational_expr -> relational_expr . TInf shift_expr [ TXor TWhy TSup_Template TSupEq TSup TPtVirg TOrLog TOr TNotEq TInfEq TInf TEqEq TEllipsis TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAndLog TAnd RDots EOF ]
relational_expr -> relational_expr . TSup shift_expr [ TXor TWhy TSup_Template TSupEq TSup TPtVirg TOrLog TOr TNotEq TInfEq TInf TEqEq TEllipsis TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAndLog TAnd RDots EOF ]
relational_expr -> relational_expr . TInfEq shift_expr [ TXor TWhy TSup_Template TSupEq TSup TPtVirg TOrLog TOr TNotEq TInfEq TInf TEqEq TEllipsis TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAndLog TAnd RDots EOF ]
relational_expr -> relational_expr . TSupEq shift_expr [ TXor TWhy TSup_Template TSupEq TSup TPtVirg TOrLog TOr TNotEq TInfEq TInf TEqEq TEllipsis TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAndLog TAnd RDots EOF ]
## Transitions:
-- On TSupEq shift to state 230
-- On TSup shift to state 259
-- On TInfEq shift to state 339
-- On TInf shift to state 350
## Reductions:
-- On TXor TWhy TSup_Template TPtVirg TOrLog TOr TNotEq TEqEq TEllipsis TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAndLog TAnd RDots EOF
--   reduce production equality_expr -> relational_expr

State 230:
## Known stack suffix:
## relational_expr TSupEq
## LR(1) items:
relational_expr -> relational_expr TSupEq . shift_expr [ TXor TWhy TSup_Template TSupEq TSup TPtVirg TOrLog TOr TNotEq TInfEq TInf TEqEq TEllipsis TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAndLog TAnd RDots EOF ]
## Transitions:
-- On Twchar_t_Constr shift to state 14
-- On Twchar_t shift to state 1
-- On Tvoid shift to state 3
-- On Tunsigned shift to state 15
-- On Ttypeof shift to state 17
-- On Ttypeid shift to state 23
-- On Ttrue shift to state 25
-- On Tthis shift to state 26
-- On Tstatic_cast shift to state 28
-- On Tsizeof shift to state 29
-- On Tsigned shift to state 30
-- On Tshort_Constr shift to state 31
-- On Tshort shift to state 32
-- On Treinterpret_cast shift to state 33
-- On Toperator shift to state 34
-- On Tnullptr shift to state 48
-- On Tnull shift to state 49
-- On Tlong_Constr shift to state 50
-- On Tlong shift to state 38
-- On Tint_Constr shift to state 51
-- On Tint shift to state 39
-- On Tfloat_Constr shift to state 52
-- On Tfloat shift to state 40
-- On Tfalse shift to state 53
-- On Tdynamic_cast shift to state 54
-- On Tdouble_Constr shift to state 55
-- On Tdouble shift to state 41
-- On Tdecltype shift to state 45
-- On Tconst_cast shift to state 56
-- On Tchar_Constr shift to state 57
-- On Tchar shift to state 58
-- On Tbool_Constr shift to state 59
-- On Tbool shift to state 60
-- On TTilde shift to state 61
-- On TString shift to state 62
-- On TPlus shift to state 63
-- On TOPar shift to state 64
-- On TOCro_Lambda shift to state 78
-- On TMul shift to state 88
-- On TMinus shift to state 89
-- On TInt shift to state 90
-- On TInc shift to state 91
-- On TIdent_TypedefConstr shift to state 106
-- On TIdent_Typedef shift to state 20
-- On TIdent_TemplatenameInQualifier_BeforeTypedef shift to state 21
-- On TIdent_TemplatenameInQualifier shift to state 12
-- On TIdent_Templatename shift to state 108
-- On TIdent_MacroString shift to state 110
-- On TIdent_ClassnameInQualifier_BeforeTypedef shift to state 111
-- On TIdent_ClassnameInQualifier shift to state 112
-- On TIdent shift to state 113
-- On TFloat shift to state 116
-- On TDec shift to state 117
-- On TColCol_BeforeTypedef shift to state 118
-- On TColCol shift to state 128
-- On TChar shift to state 174
-- On TBang shift to state 175
-- On TAndLog shift to state 176
-- On TAnd shift to state 177
-- On LDots shift to state 178
-- On unqualified_id shift to state 179
-- On unary_op shift to state 180
-- On unary_expr shift to state 181
-- On type_name shift to state 182
-- On type_cplusplus_id shift to state 183
-- On template_id shift to state 120
-- On string_elem shift to state 184
-- On simple_type_specifier shift to state 189
-- On shift_expr shift to state 231
-- On qualified_id shift to state 191
-- On primary_expr shift to state 192
-- On primary_cplusplus_id shift to state 193
-- On postfix_expr shift to state 194
-- On pm_expr shift to state 219
-- On option(TColCol) shift to state 221
-- On operator_function_id shift to state 168
-- On new_expr shift to state 233
-- On nested_name_specifier2 shift to state 207
-- On nested_name_specifier shift to state 165
-- On multiplicative_expr shift to state 234
-- On literal shift to state 238
-- On lambda_introducer shift to state 239
-- On id_expression shift to state 241
-- On enum_name_or_typedef_name_or_simple_class_name shift to state 123
-- On delete_expr shift to state 242
-- On decltype_specifier shift to state 243
-- On cpp_cast_operator shift to state 244
-- On conversion_function_id shift to state 169
-- On class_or_namespace_name_for_qualifier2 shift to state 124
-- On class_or_namespace_name_for_qualifier shift to state 170
-- On cast_operator_expr shift to state 261
-- On cast_expr shift to state 262
-- On cast_constructor_expr shift to state 263
-- On basic_type_2 shift to state 264
-- On additive_expr shift to state 341
## Reductions:
-- On Tnew Tdelete
--   reduce production option(TColCol) ->

State 231:
## Known stack suffix:
## relational_expr TSupEq shift_expr
## LR(1) items:
relational_expr -> relational_expr TSupEq shift_expr . [ TXor TWhy TSup_Template TSupEq TSup TPtVirg TOrLog TOr TNotEq TInfEq TInf TEqEq TEllipsis TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAndLog TAnd RDots EOF ]
shift_expr -> shift_expr . TShl additive_expr [ TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtVirg TOrLog TOr TNotEq TInfEq TInf TEqEq TEllipsis TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAndLog TAnd RDots EOF ]
shift_expr -> shift_expr . TShr additive_expr [ TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtVirg TOrLog TOr TNotEq TInfEq TInf TEqEq TEllipsis TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAndLog TAnd RDots EOF ]
## Transitions:
-- On TShr shift to state 218
-- On TShl shift to state 232
## Reductions:
-- On TXor TWhy TSup_Template TSupEq TSup TPtVirg TOrLog TOr TNotEq TInfEq TInf TEqEq TEllipsis TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAndLog TAnd RDots EOF
--   reduce production relational_expr -> relational_expr TSupEq shift_expr

State 232:
## Known stack suffix:
## shift_expr TShl
## LR(1) items:
shift_expr -> shift_expr TShl . additive_expr [ TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtVirg TOrLog TOr TNotEq TInfEq TInf TEqEq TEllipsis TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAndLog TAnd RDots EOF ]
## Transitions:
-- On Twchar_t_Constr shift to state 14
-- On Twchar_t shift to state 1
-- On Tvoid shift to state 3
-- On Tunsigned shift to state 15
-- On Ttypeof shift to state 17
-- On Ttypeid shift to state 23
-- On Ttrue shift to state 25
-- On Tthis shift to state 26
-- On Tstatic_cast shift to state 28
-- On Tsizeof shift to state 29
-- On Tsigned shift to state 30
-- On Tshort_Constr shift to state 31
-- On Tshort shift to state 32
-- On Treinterpret_cast shift to state 33
-- On Toperator shift to state 34
-- On Tnullptr shift to state 48
-- On Tnull shift to state 49
-- On Tlong_Constr shift to state 50
-- On Tlong shift to state 38
-- On Tint_Constr shift to state 51
-- On Tint shift to state 39
-- On Tfloat_Constr shift to state 52
-- On Tfloat shift to state 40
-- On Tfalse shift to state 53
-- On Tdynamic_cast shift to state 54
-- On Tdouble_Constr shift to state 55
-- On Tdouble shift to state 41
-- On Tdecltype shift to state 45
-- On Tconst_cast shift to state 56
-- On Tchar_Constr shift to state 57
-- On Tchar shift to state 58
-- On Tbool_Constr shift to state 59
-- On Tbool shift to state 60
-- On TTilde shift to state 61
-- On TString shift to state 62
-- On TPlus shift to state 63
-- On TOPar shift to state 64
-- On TOCro_Lambda shift to state 78
-- On TMul shift to state 88
-- On TMinus shift to state 89
-- On TInt shift to state 90
-- On TInc shift to state 91
-- On TIdent_TypedefConstr shift to state 106
-- On TIdent_Typedef shift to state 20
-- On TIdent_TemplatenameInQualifier_BeforeTypedef shift to state 21
-- On TIdent_TemplatenameInQualifier shift to state 12
-- On TIdent_Templatename shift to state 108
-- On TIdent_MacroString shift to state 110
-- On TIdent_ClassnameInQualifier_BeforeTypedef shift to state 111
-- On TIdent_ClassnameInQualifier shift to state 112
-- On TIdent shift to state 113
-- On TFloat shift to state 116
-- On TDec shift to state 117
-- On TColCol_BeforeTypedef shift to state 118
-- On TColCol shift to state 128
-- On TChar shift to state 174
-- On TBang shift to state 175
-- On TAndLog shift to state 176
-- On TAnd shift to state 177
-- On LDots shift to state 178
-- On unqualified_id shift to state 179
-- On unary_op shift to state 180
-- On unary_expr shift to state 181
-- On type_name shift to state 182
-- On type_cplusplus_id shift to state 183
-- On template_id shift to state 120
-- On string_elem shift to state 184
-- On simple_type_specifier shift to state 189
-- On qualified_id shift to state 191
-- On primary_expr shift to state 192
-- On primary_cplusplus_id shift to state 193
-- On postfix_expr shift to state 194
-- On pm_expr shift to state 219
-- On option(TColCol) shift to state 221
-- On operator_function_id shift to state 168
-- On new_expr shift to state 233
-- On nested_name_specifier2 shift to state 207
-- On nested_name_specifier shift to state 165
-- On multiplicative_expr shift to state 234
-- On literal shift to state 238
-- On lambda_introducer shift to state 239
-- On id_expression shift to state 241
-- On enum_name_or_typedef_name_or_simple_class_name shift to state 123
-- On delete_expr shift to state 242
-- On decltype_specifier shift to state 243
-- On cpp_cast_operator shift to state 244
-- On conversion_function_id shift to state 169
-- On class_or_namespace_name_for_qualifier2 shift to state 124
-- On class_or_namespace_name_for_qualifier shift to state 170
-- On cast_operator_expr shift to state 261
-- On cast_expr shift to state 262
-- On cast_constructor_expr shift to state 263
-- On basic_type_2 shift to state 264
-- On additive_expr shift to state 826
## Reductions:
-- On Tnew Tdelete
--   reduce production option(TColCol) ->

State 233:
## Known stack suffix:
## new_expr
## LR(1) items:
unary_expr -> new_expr . [ TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtrOpStar TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TEq TEllipsis TDotStar TDiv TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAssign TAndLog TAnd RDots EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production unary_expr -> new_expr

State 234:
## Known stack suffix:
## multiplicative_expr
## LR(1) items:
additive_expr -> multiplicative_expr . [ TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMinus TInfEq TInf TEqEq TEllipsis TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAndLog TAnd RDots EOF ]
multiplicative_expr -> multiplicative_expr . TMul pm_expr [ TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TEllipsis TDiv TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAndLog TAnd RDots EOF ]
multiplicative_expr -> multiplicative_expr . TDiv pm_expr [ TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TEllipsis TDiv TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAndLog TAnd RDots EOF ]
multiplicative_expr -> multiplicative_expr . TMod pm_expr [ TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TEllipsis TDiv TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAndLog TAnd RDots EOF ]
## Transitions:
-- On TMul shift to state 235
-- On TMod shift to state 344
-- On TDiv shift to state 346
## Reductions:
-- On TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMinus TInfEq TInf TEqEq TEllipsis TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAndLog TAnd RDots EOF
--   reduce production additive_expr -> multiplicative_expr

State 235:
## Known stack suffix:
## multiplicative_expr TMul
## LR(1) items:
multiplicative_expr -> multiplicative_expr TMul . pm_expr [ TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TEllipsis TDiv TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAndLog TAnd RDots EOF ]
## Transitions:
-- On Twchar_t_Constr shift to state 14
-- On Twchar_t shift to state 1
-- On Tvoid shift to state 3
-- On Tunsigned shift to state 15
-- On Ttypeof shift to state 17
-- On Ttypeid shift to state 23
-- On Ttrue shift to state 25
-- On Tthis shift to state 26
-- On Tstatic_cast shift to state 28
-- On Tsizeof shift to state 29
-- On Tsigned shift to state 30
-- On Tshort_Constr shift to state 31
-- On Tshort shift to state 32
-- On Treinterpret_cast shift to state 33
-- On Toperator shift to state 34
-- On Tnullptr shift to state 48
-- On Tnull shift to state 49
-- On Tlong_Constr shift to state 50
-- On Tlong shift to state 38
-- On Tint_Constr shift to state 51
-- On Tint shift to state 39
-- On Tfloat_Constr shift to state 52
-- On Tfloat shift to state 40
-- On Tfalse shift to state 53
-- On Tdynamic_cast shift to state 54
-- On Tdouble_Constr shift to state 55
-- On Tdouble shift to state 41
-- On Tdecltype shift to state 45
-- On Tconst_cast shift to state 56
-- On Tchar_Constr shift to state 57
-- On Tchar shift to state 58
-- On Tbool_Constr shift to state 59
-- On Tbool shift to state 60
-- On TTilde shift to state 61
-- On TString shift to state 62
-- On TPlus shift to state 63
-- On TOPar shift to state 64
-- On TOCro_Lambda shift to state 78
-- On TMul shift to state 88
-- On TMinus shift to state 89
-- On TInt shift to state 90
-- On TInc shift to state 91
-- On TIdent_TypedefConstr shift to state 106
-- On TIdent_Typedef shift to state 20
-- On TIdent_TemplatenameInQualifier_BeforeTypedef shift to state 21
-- On TIdent_TemplatenameInQualifier shift to state 12
-- On TIdent_Templatename shift to state 108
-- On TIdent_MacroString shift to state 110
-- On TIdent_ClassnameInQualifier_BeforeTypedef shift to state 111
-- On TIdent_ClassnameInQualifier shift to state 112
-- On TIdent shift to state 113
-- On TFloat shift to state 116
-- On TDec shift to state 117
-- On TColCol_BeforeTypedef shift to state 118
-- On TColCol shift to state 128
-- On TChar shift to state 174
-- On TBang shift to state 175
-- On TAndLog shift to state 176
-- On TAnd shift to state 177
-- On LDots shift to state 178
-- On unqualified_id shift to state 179
-- On unary_op shift to state 180
-- On unary_expr shift to state 181
-- On type_name shift to state 182
-- On type_cplusplus_id shift to state 183
-- On template_id shift to state 120
-- On string_elem shift to state 184
-- On simple_type_specifier shift to state 189
-- On qualified_id shift to state 191
-- On primary_expr shift to state 192
-- On primary_cplusplus_id shift to state 193
-- On postfix_expr shift to state 194
-- On pm_expr shift to state 236
-- On option(TColCol) shift to state 221
-- On operator_function_id shift to state 168
-- On new_expr shift to state 233
-- On nested_name_specifier2 shift to state 207
-- On nested_name_specifier shift to state 165
-- On literal shift to state 238
-- On lambda_introducer shift to state 239
-- On id_expression shift to state 241
-- On enum_name_or_typedef_name_or_simple_class_name shift to state 123
-- On delete_expr shift to state 242
-- On decltype_specifier shift to state 243
-- On cpp_cast_operator shift to state 244
-- On conversion_function_id shift to state 169
-- On class_or_namespace_name_for_qualifier2 shift to state 124
-- On class_or_namespace_name_for_qualifier shift to state 170
-- On cast_operator_expr shift to state 261
-- On cast_expr shift to state 262
-- On cast_constructor_expr shift to state 263
-- On basic_type_2 shift to state 264
## Reductions:
-- On Tnew Tdelete
--   reduce production option(TColCol) ->

State 236:
## Known stack suffix:
## multiplicative_expr TMul pm_expr
## LR(1) items:
multiplicative_expr -> multiplicative_expr TMul pm_expr . [ TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TEllipsis TDiv TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAndLog TAnd RDots EOF ]
pm_expr -> pm_expr . TDotStar cast_expr [ TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtrOpStar TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TEllipsis TDotStar TDiv TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAndLog TAnd RDots EOF ]
pm_expr -> pm_expr . TPtrOpStar cast_expr [ TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtrOpStar TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TEllipsis TDotStar TDiv TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAndLog TAnd RDots EOF ]
## Transitions:
-- On TPtrOpStar shift to state 220
-- On TDotStar shift to state 237
## Reductions:
-- On TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TEllipsis TDiv TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAndLog TAnd RDots EOF
--   reduce production multiplicative_expr -> multiplicative_expr TMul pm_expr

State 237:
## Known stack suffix:
## pm_expr TDotStar
## LR(1) items:
pm_expr -> pm_expr TDotStar . cast_expr [ TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtrOpStar TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TEllipsis TDotStar TDiv TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAndLog TAnd RDots EOF ]
## Transitions:
-- On Twchar_t_Constr shift to state 14
-- On Twchar_t shift to state 1
-- On Tvoid shift to state 3
-- On Tunsigned shift to state 15
-- On Ttypeof shift to state 17
-- On Ttypeid shift to state 23
-- On Ttrue shift to state 25
-- On Tthis shift to state 26
-- On Tstatic_cast shift to state 28
-- On Tsizeof shift to state 29
-- On Tsigned shift to state 30
-- On Tshort_Constr shift to state 31
-- On Tshort shift to state 32
-- On Treinterpret_cast shift to state 33
-- On Toperator shift to state 34
-- On Tnullptr shift to state 48
-- On Tnull shift to state 49
-- On Tlong_Constr shift to state 50
-- On Tlong shift to state 38
-- On Tint_Constr shift to state 51
-- On Tint shift to state 39
-- On Tfloat_Constr shift to state 52
-- On Tfloat shift to state 40
-- On Tfalse shift to state 53
-- On Tdynamic_cast shift to state 54
-- On Tdouble_Constr shift to state 55
-- On Tdouble shift to state 41
-- On Tdecltype shift to state 45
-- On Tconst_cast shift to state 56
-- On Tchar_Constr shift to state 57
-- On Tchar shift to state 58
-- On Tbool_Constr shift to state 59
-- On Tbool shift to state 60
-- On TTilde shift to state 61
-- On TString shift to state 62
-- On TPlus shift to state 63
-- On TOPar shift to state 64
-- On TOCro_Lambda shift to state 78
-- On TMul shift to state 88
-- On TMinus shift to state 89
-- On TInt shift to state 90
-- On TInc shift to state 91
-- On TIdent_TypedefConstr shift to state 106
-- On TIdent_Typedef shift to state 20
-- On TIdent_TemplatenameInQualifier_BeforeTypedef shift to state 21
-- On TIdent_TemplatenameInQualifier shift to state 12
-- On TIdent_Templatename shift to state 108
-- On TIdent_MacroString shift to state 110
-- On TIdent_ClassnameInQualifier_BeforeTypedef shift to state 111
-- On TIdent_ClassnameInQualifier shift to state 112
-- On TIdent shift to state 113
-- On TFloat shift to state 116
-- On TDec shift to state 117
-- On TColCol_BeforeTypedef shift to state 118
-- On TColCol shift to state 128
-- On TChar shift to state 174
-- On TBang shift to state 175
-- On TAndLog shift to state 176
-- On TAnd shift to state 177
-- On LDots shift to state 178
-- On unqualified_id shift to state 179
-- On unary_op shift to state 180
-- On unary_expr shift to state 181
-- On type_name shift to state 182
-- On type_cplusplus_id shift to state 183
-- On template_id shift to state 120
-- On string_elem shift to state 184
-- On simple_type_specifier shift to state 189
-- On qualified_id shift to state 191
-- On primary_expr shift to state 192
-- On primary_cplusplus_id shift to state 193
-- On postfix_expr shift to state 194
-- On option(TColCol) shift to state 221
-- On operator_function_id shift to state 168
-- On new_expr shift to state 233
-- On nested_name_specifier2 shift to state 207
-- On nested_name_specifier shift to state 165
-- On literal shift to state 238
-- On lambda_introducer shift to state 239
-- On id_expression shift to state 241
-- On enum_name_or_typedef_name_or_simple_class_name shift to state 123
-- On delete_expr shift to state 242
-- On decltype_specifier shift to state 243
-- On cpp_cast_operator shift to state 244
-- On conversion_function_id shift to state 169
-- On class_or_namespace_name_for_qualifier2 shift to state 124
-- On class_or_namespace_name_for_qualifier shift to state 170
-- On cast_operator_expr shift to state 261
-- On cast_expr shift to state 825
-- On cast_constructor_expr shift to state 263
-- On basic_type_2 shift to state 264
## Reductions:
-- On Tnew Tdelete
--   reduce production option(TColCol) ->

State 238:
## Known stack suffix:
## literal
## LR(1) items:
primary_expr -> literal . [ TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtrOpStar TPtrOp TPtVirg TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMod TMinus TInfEq TInf TInc TEqEq TEq TEllipsis TDotStar TDot TDiv TDec TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAssign TAndLog TAnd RDots EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production primary_expr -> literal

State 239:
## Known stack suffix:
## lambda_introducer
## LR(1) items:
primary_expr -> lambda_introducer . compound [ TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtrOpStar TPtrOp TPtVirg TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMod TMinus TInfEq TInf TInc TEqEq TEq TEllipsis TDotStar TDot TDiv TDec TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAssign TAndLog TAnd RDots EOF ]
## Transitions:
-- On TOBrace shift to state 93
-- On compound shift to state 240
## Reductions:

State 240:
## Known stack suffix:
## lambda_introducer compound
## LR(1) items:
primary_expr -> lambda_introducer compound . [ TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtrOpStar TPtrOp TPtVirg TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMod TMinus TInfEq TInf TInc TEqEq TEq TEllipsis TDotStar TDot TDiv TDec TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAssign TAndLog TAnd RDots EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production primary_expr -> lambda_introducer compound

State 241:
## Known stack suffix:
## id_expression
## LR(1) items:
primary_cplusplus_id -> id_expression . [ TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtrOpStar TPtrOp TPtVirg TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMod TMinus TInfEq TInf TInc TEqEq TEq TEllipsis TDotStar TDot TDiv TDec TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAssign TAndLog TAnd RDots EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production primary_cplusplus_id -> id_expression

State 242:
## Known stack suffix:
## delete_expr
## LR(1) items:
unary_expr -> delete_expr . [ TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtrOpStar TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TEq TEllipsis TDotStar TDiv TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAssign TAndLog TAnd RDots EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production unary_expr -> delete_expr

State 243:
## Known stack suffix:
## decltype_specifier
## LR(1) items:
simple_type_specifier -> decltype_specifier . [ Twchar_t Tvolatile Tvoid Tvirtual Tunsigned Tunion Ttypeof Ttypename Ttypedef Tthread_local Tstruct Tstatic Tsigned Tshort Trestrict Tregister Toperator Tmutable Tlong Tint Tinline Tfriend Tfloat Textern Tenum Tdouble Tdecltype Tconstexpr Tconst Tclass Tchar Tbool Tauto Tasm TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtrOpStar TPtrOp TPtVirg TPlus TOrLog TOr TOPar_CplusplusInit TOPar TOCro TOBrace TNotEq TMul TMod TMinus TInfEq TInf TInc TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TIdent TEqEq TEq TEllipsis TDotStar TDot TDiv TDec TCommentNewline_DefineEndOfMacro TComma TColCol_BeforeTypedef TColCol TCol TCPar_EOL TCPar TCCro TCBrace TAssign TAndLog TAnd RDots EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production simple_type_specifier -> decltype_specifier

State 244:
## Known stack suffix:
## cpp_cast_operator
## LR(1) items:
cast_operator_expr -> cpp_cast_operator . TInf_Template type_id TSup_Template TOPar expr TCPar [ TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtrOpStar TPtrOp TPtVirg TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMod TMinus TInfEq TInf TInc TEqEq TEq TEllipsis TDotStar TDot TDiv TDec TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAssign TAndLog TAnd RDots EOF ]
cast_operator_expr -> cpp_cast_operator . TOPar expr TCPar [ TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtrOpStar TPtrOp TPtVirg TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMod TMinus TInfEq TInf TInc TEqEq TEq TEllipsis TDotStar TDot TDiv TDec TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAssign TAndLog TAnd RDots EOF ]
## Transitions:
-- On TOPar shift to state 245
-- On TInf_Template shift to state 819
## Reductions:

State 245:
## Known stack suffix:
## cpp_cast_operator TOPar
## LR(1) items:
cast_operator_expr -> cpp_cast_operator TOPar . expr TCPar [ TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtrOpStar TPtrOp TPtVirg TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMod TMinus TInfEq TInf TInc TEqEq TEq TEllipsis TDotStar TDot TDiv TDec TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAssign TAndLog TAnd RDots EOF ]
## Transitions:
-- On Twchar_t_Constr shift to state 14
-- On Twchar_t shift to state 1
-- On Tvoid shift to state 3
-- On Tunsigned shift to state 15
-- On Ttypeof shift to state 17
-- On Ttypeid shift to state 23
-- On Ttrue shift to state 25
-- On Tthrow shift to state 47
-- On Tthis shift to state 26
-- On Tstatic_cast shift to state 28
-- On Tsizeof shift to state 29
-- On Tsigned shift to state 30
-- On Tshort_Constr shift to state 31
-- On Tshort shift to state 32
-- On Treinterpret_cast shift to state 33
-- On Toperator shift to state 34
-- On Tnullptr shift to state 48
-- On Tnull shift to state 49
-- On Tlong_Constr shift to state 50
-- On Tlong shift to state 38
-- On Tint_Constr shift to state 51
-- On Tint shift to state 39
-- On Tfloat_Constr shift to state 52
-- On Tfloat shift to state 40
-- On Tfalse shift to state 53
-- On Tdynamic_cast shift to state 54
-- On Tdouble_Constr shift to state 55
-- On Tdouble shift to state 41
-- On Tdecltype shift to state 45
-- On Tconst_cast shift to state 56
-- On Tchar_Constr shift to state 57
-- On Tchar shift to state 58
-- On Tbool_Constr shift to state 59
-- On Tbool shift to state 60
-- On TTilde shift to state 61
-- On TString shift to state 62
-- On TPlus shift to state 63
-- On TOPar shift to state 64
-- On TOCro_Lambda shift to state 78
-- On TMul shift to state 88
-- On TMinus shift to state 89
-- On TInt shift to state 90
-- On TInc shift to state 91
-- On TIdent_TypedefConstr shift to state 106
-- On TIdent_Typedef shift to state 20
-- On TIdent_TemplatenameInQualifier_BeforeTypedef shift to state 21
-- On TIdent_TemplatenameInQualifier shift to state 12
-- On TIdent_Templatename shift to state 108
-- On TIdent_MacroString shift to state 110
-- On TIdent_ClassnameInQualifier_BeforeTypedef shift to state 111
-- On TIdent_ClassnameInQualifier shift to state 112
-- On TIdent shift to state 113
-- On TFloat shift to state 116
-- On TDec shift to state 117
-- On TColCol_BeforeTypedef shift to state 118
-- On TColCol shift to state 128
-- On TChar shift to state 174
-- On TBang shift to state 175
-- On TAndLog shift to state 176
-- On TAnd shift to state 177
-- On LDots shift to state 178
-- On unqualified_id shift to state 179
-- On unary_op shift to state 180
-- On unary_expr shift to state 181
-- On type_name shift to state 182
-- On type_cplusplus_id shift to state 183
-- On template_id shift to state 120
-- On string_elem shift to state 184
-- On simple_type_specifier shift to state 189
-- On shift_expr shift to state 217
-- On relational_expr shift to state 229
-- On qualified_id shift to state 191
-- On primary_expr shift to state 192
-- On primary_cplusplus_id shift to state 193
-- On postfix_expr shift to state 194
-- On pm_expr shift to state 219
-- On option(TColCol) shift to state 221
-- On operator_function_id shift to state 168
-- On new_expr shift to state 233
-- On nested_name_specifier2 shift to state 207
-- On nested_name_specifier shift to state 165
-- On multiplicative_expr shift to state 234
-- On logical_or_expr shift to state 246
-- On logical_and_expr shift to state 250
-- On literal shift to state 238
-- On lambda_introducer shift to state 239
-- On inclusive_or_expr shift to state 272
-- On id_expression shift to state 241
-- On expr shift to state 817
-- On exclusive_or_expr shift to state 273
-- On equality_expr shift to state 256
-- On enum_name_or_typedef_name_or_simple_class_name shift to state 123
-- On delete_expr shift to state 242
-- On decltype_specifier shift to state 243
-- On cpp_cast_operator shift to state 244
-- On conversion_function_id shift to state 169
-- On cond_expr shift to state 330
-- On class_or_namespace_name_for_qualifier2 shift to state 124
-- On class_or_namespace_name_for_qualifier shift to state 170
-- On cast_operator_expr shift to state 261
-- On cast_expr shift to state 331
-- On cast_constructor_expr shift to state 263
-- On basic_type_2 shift to state 264
-- On assign_expr shift to state 539
-- On and_expr shift to state 334
-- On additive_expr shift to state 341
## Reductions:
-- On Tnew Tdelete
--   reduce production option(TColCol) ->

State 246:
## Known stack suffix:
## logical_or_expr
## LR(1) items:
cond_expr -> logical_or_expr . [ TSup_Template TPtVirg TEllipsis TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace RDots EOF ]
cond_expr -> logical_or_expr . TWhy option(expr) TCol assign_expr [ TSup_Template TPtVirg TEllipsis TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace RDots EOF ]
logical_or_expr -> logical_or_expr . TOrLog logical_and_expr [ TWhy TSup_Template TPtVirg TOrLog TEllipsis TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace RDots EOF ]
## Transitions:
-- On TWhy shift to state 247
-- On TOrLog shift to state 815
## Reductions:
-- On TSup_Template TPtVirg TEllipsis TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace RDots EOF
--   reduce production cond_expr -> logical_or_expr

State 247:
## Known stack suffix:
## logical_or_expr TWhy
## LR(1) items:
cond_expr -> logical_or_expr TWhy . option(expr) TCol assign_expr [ TSup_Template TPtVirg TEllipsis TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace RDots EOF ]
## Transitions:
-- On Twchar_t_Constr shift to state 14
-- On Twchar_t shift to state 1
-- On Tvoid shift to state 3
-- On Tunsigned shift to state 15
-- On Ttypeof shift to state 17
-- On Ttypeid shift to state 23
-- On Ttrue shift to state 25
-- On Tthrow shift to state 47
-- On Tthis shift to state 26
-- On Tstatic_cast shift to state 28
-- On Tsizeof shift to state 29
-- On Tsigned shift to state 30
-- On Tshort_Constr shift to state 31
-- On Tshort shift to state 32
-- On Treinterpret_cast shift to state 33
-- On Toperator shift to state 34
-- On Tnullptr shift to state 48
-- On Tnull shift to state 49
-- On Tlong_Constr shift to state 50
-- On Tlong shift to state 38
-- On Tint_Constr shift to state 51
-- On Tint shift to state 39
-- On Tfloat_Constr shift to state 52
-- On Tfloat shift to state 40
-- On Tfalse shift to state 53
-- On Tdynamic_cast shift to state 54
-- On Tdouble_Constr shift to state 55
-- On Tdouble shift to state 41
-- On Tdecltype shift to state 45
-- On Tconst_cast shift to state 56
-- On Tchar_Constr shift to state 57
-- On Tchar shift to state 58
-- On Tbool_Constr shift to state 59
-- On Tbool shift to state 60
-- On TTilde shift to state 61
-- On TString shift to state 62
-- On TPlus shift to state 63
-- On TOPar shift to state 64
-- On TOCro_Lambda shift to state 78
-- On TMul shift to state 88
-- On TMinus shift to state 89
-- On TInt shift to state 90
-- On TInc shift to state 91
-- On TIdent_TypedefConstr shift to state 106
-- On TIdent_Typedef shift to state 20
-- On TIdent_TemplatenameInQualifier_BeforeTypedef shift to state 21
-- On TIdent_TemplatenameInQualifier shift to state 12
-- On TIdent_Templatename shift to state 108
-- On TIdent_MacroString shift to state 110
-- On TIdent_ClassnameInQualifier_BeforeTypedef shift to state 111
-- On TIdent_ClassnameInQualifier shift to state 112
-- On TIdent shift to state 113
-- On TFloat shift to state 116
-- On TDec shift to state 117
-- On TColCol_BeforeTypedef shift to state 118
-- On TColCol shift to state 128
-- On TChar shift to state 174
-- On TBang shift to state 175
-- On TAndLog shift to state 176
-- On TAnd shift to state 177
-- On LDots shift to state 178
-- On unqualified_id shift to state 179
-- On unary_op shift to state 180
-- On unary_expr shift to state 181
-- On type_name shift to state 182
-- On type_cplusplus_id shift to state 183
-- On template_id shift to state 120
-- On string_elem shift to state 184
-- On simple_type_specifier shift to state 189
-- On shift_expr shift to state 217
-- On relational_expr shift to state 229
-- On qualified_id shift to state 191
-- On primary_expr shift to state 192
-- On primary_cplusplus_id shift to state 193
-- On postfix_expr shift to state 194
-- On pm_expr shift to state 219
-- On option(expr) shift to state 248
-- On option(TColCol) shift to state 221
-- On operator_function_id shift to state 168
-- On new_expr shift to state 233
-- On nested_name_specifier2 shift to state 207
-- On nested_name_specifier shift to state 165
-- On multiplicative_expr shift to state 234
-- On logical_or_expr shift to state 246
-- On logical_and_expr shift to state 250
-- On literal shift to state 238
-- On lambda_introducer shift to state 239
-- On inclusive_or_expr shift to state 272
-- On id_expression shift to state 241
-- On expr shift to state 597
-- On exclusive_or_expr shift to state 273
-- On equality_expr shift to state 256
-- On enum_name_or_typedef_name_or_simple_class_name shift to state 123
-- On delete_expr shift to state 242
-- On decltype_specifier shift to state 243
-- On cpp_cast_operator shift to state 244
-- On conversion_function_id shift to state 169
-- On cond_expr shift to state 330
-- On class_or_namespace_name_for_qualifier2 shift to state 124
-- On class_or_namespace_name_for_qualifier shift to state 170
-- On cast_operator_expr shift to state 261
-- On cast_expr shift to state 331
-- On cast_constructor_expr shift to state 263
-- On basic_type_2 shift to state 264
-- On assign_expr shift to state 539
-- On and_expr shift to state 334
-- On additive_expr shift to state 341
## Reductions:
-- On Tnew Tdelete
--   reduce production option(TColCol) ->
-- On TCol
--   reduce production option(expr) ->

State 248:
## Known stack suffix:
## logical_or_expr TWhy option(expr)
## LR(1) items:
cond_expr -> logical_or_expr TWhy option(expr) . TCol assign_expr [ TSup_Template TPtVirg TEllipsis TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace RDots EOF ]
## Transitions:
-- On TCol shift to state 249
## Reductions:

State 249:
## Known stack suffix:
## logical_or_expr TWhy option(expr) TCol
## LR(1) items:
cond_expr -> logical_or_expr TWhy option(expr) TCol . assign_expr [ TSup_Template TPtVirg TEllipsis TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace RDots EOF ]
## Transitions:
-- On Twchar_t_Constr shift to state 14
-- On Twchar_t shift to state 1
-- On Tvoid shift to state 3
-- On Tunsigned shift to state 15
-- On Ttypeof shift to state 17
-- On Ttypeid shift to state 23
-- On Ttrue shift to state 25
-- On Tthrow shift to state 47
-- On Tthis shift to state 26
-- On Tstatic_cast shift to state 28
-- On Tsizeof shift to state 29
-- On Tsigned shift to state 30
-- On Tshort_Constr shift to state 31
-- On Tshort shift to state 32
-- On Treinterpret_cast shift to state 33
-- On Toperator shift to state 34
-- On Tnullptr shift to state 48
-- On Tnull shift to state 49
-- On Tlong_Constr shift to state 50
-- On Tlong shift to state 38
-- On Tint_Constr shift to state 51
-- On Tint shift to state 39
-- On Tfloat_Constr shift to state 52
-- On Tfloat shift to state 40
-- On Tfalse shift to state 53
-- On Tdynamic_cast shift to state 54
-- On Tdouble_Constr shift to state 55
-- On Tdouble shift to state 41
-- On Tdecltype shift to state 45
-- On Tconst_cast shift to state 56
-- On Tchar_Constr shift to state 57
-- On Tchar shift to state 58
-- On Tbool_Constr shift to state 59
-- On Tbool shift to state 60
-- On TTilde shift to state 61
-- On TString shift to state 62
-- On TPlus shift to state 63
-- On TOPar shift to state 64
-- On TOCro_Lambda shift to state 78
-- On TMul shift to state 88
-- On TMinus shift to state 89
-- On TInt shift to state 90
-- On TInc shift to state 91
-- On TIdent_TypedefConstr shift to state 106
-- On TIdent_Typedef shift to state 20
-- On TIdent_TemplatenameInQualifier_BeforeTypedef shift to state 21
-- On TIdent_TemplatenameInQualifier shift to state 12
-- On TIdent_Templatename shift to state 108
-- On TIdent_MacroString shift to state 110
-- On TIdent_ClassnameInQualifier_BeforeTypedef shift to state 111
-- On TIdent_ClassnameInQualifier shift to state 112
-- On TIdent shift to state 113
-- On TFloat shift to state 116
-- On TDec shift to state 117
-- On TColCol_BeforeTypedef shift to state 118
-- On TColCol shift to state 128
-- On TChar shift to state 174
-- On TBang shift to state 175
-- On TAndLog shift to state 176
-- On TAnd shift to state 177
-- On LDots shift to state 178
-- On unqualified_id shift to state 179
-- On unary_op shift to state 180
-- On unary_expr shift to state 181
-- On type_name shift to state 182
-- On type_cplusplus_id shift to state 183
-- On template_id shift to state 120
-- On string_elem shift to state 184
-- On simple_type_specifier shift to state 189
-- On shift_expr shift to state 217
-- On relational_expr shift to state 229
-- On qualified_id shift to state 191
-- On primary_expr shift to state 192
-- On primary_cplusplus_id shift to state 193
-- On postfix_expr shift to state 194
-- On pm_expr shift to state 219
-- On option(TColCol) shift to state 221
-- On operator_function_id shift to state 168
-- On new_expr shift to state 233
-- On nested_name_specifier2 shift to state 207
-- On nested_name_specifier shift to state 165
-- On multiplicative_expr shift to state 234
-- On logical_or_expr shift to state 246
-- On logical_and_expr shift to state 250
-- On literal shift to state 238
-- On lambda_introducer shift to state 239
-- On inclusive_or_expr shift to state 272
-- On id_expression shift to state 241
-- On exclusive_or_expr shift to state 273
-- On equality_expr shift to state 256
-- On enum_name_or_typedef_name_or_simple_class_name shift to state 123
-- On delete_expr shift to state 242
-- On decltype_specifier shift to state 243
-- On cpp_cast_operator shift to state 244
-- On conversion_function_id shift to state 169
-- On cond_expr shift to state 330
-- On class_or_namespace_name_for_qualifier2 shift to state 124
-- On class_or_namespace_name_for_qualifier shift to state 170
-- On cast_operator_expr shift to state 261
-- On cast_expr shift to state 331
-- On cast_constructor_expr shift to state 263
-- On basic_type_2 shift to state 264
-- On assign_expr shift to state 814
-- On and_expr shift to state 334
-- On additive_expr shift to state 341
## Reductions:
-- On Tnew Tdelete
--   reduce production option(TColCol) ->

State 250:
## Known stack suffix:
## logical_and_expr
## LR(1) items:
logical_and_expr -> logical_and_expr . TAndLog inclusive_or_expr [ TWhy TSup_Template TPtVirg TOrLog TEllipsis TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAndLog RDots EOF ]
logical_or_expr -> logical_and_expr . [ TWhy TSup_Template TPtVirg TOrLog TEllipsis TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace RDots EOF ]
## Transitions:
-- On TAndLog shift to state 251
## Reductions:
-- On TWhy TSup_Template TPtVirg TOrLog TEllipsis TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace RDots EOF
--   reduce production logical_or_expr -> logical_and_expr

State 251:
## Known stack suffix:
## logical_and_expr TAndLog
## LR(1) items:
logical_and_expr -> logical_and_expr TAndLog . inclusive_or_expr [ TWhy TSup_Template TPtVirg TOrLog TEllipsis TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAndLog RDots EOF ]
## Transitions:
-- On Twchar_t_Constr shift to state 14
-- On Twchar_t shift to state 1
-- On Tvoid shift to state 3
-- On Tunsigned shift to state 15
-- On Ttypeof shift to state 17
-- On Ttypeid shift to state 23
-- On Ttrue shift to state 25
-- On Tthis shift to state 26
-- On Tstatic_cast shift to state 28
-- On Tsizeof shift to state 29
-- On Tsigned shift to state 30
-- On Tshort_Constr shift to state 31
-- On Tshort shift to state 32
-- On Treinterpret_cast shift to state 33
-- On Toperator shift to state 34
-- On Tnullptr shift to state 48
-- On Tnull shift to state 49
-- On Tlong_Constr shift to state 50
-- On Tlong shift to state 38
-- On Tint_Constr shift to state 51
-- On Tint shift to state 39
-- On Tfloat_Constr shift to state 52
-- On Tfloat shift to state 40
-- On Tfalse shift to state 53
-- On Tdynamic_cast shift to state 54
-- On Tdouble_Constr shift to state 55
-- On Tdouble shift to state 41
-- On Tdecltype shift to state 45
-- On Tconst_cast shift to state 56
-- On Tchar_Constr shift to state 57
-- On Tchar shift to state 58
-- On Tbool_Constr shift to state 59
-- On Tbool shift to state 60
-- On TTilde shift to state 61
-- On TString shift to state 62
-- On TPlus shift to state 63
-- On TOPar shift to state 64
-- On TOCro_Lambda shift to state 78
-- On TMul shift to state 88
-- On TMinus shift to state 89
-- On TInt shift to state 90
-- On TInc shift to state 91
-- On TIdent_TypedefConstr shift to state 106
-- On TIdent_Typedef shift to state 20
-- On TIdent_TemplatenameInQualifier_BeforeTypedef shift to state 21
-- On TIdent_TemplatenameInQualifier shift to state 12
-- On TIdent_Templatename shift to state 108
-- On TIdent_MacroString shift to state 110
-- On TIdent_ClassnameInQualifier_BeforeTypedef shift to state 111
-- On TIdent_ClassnameInQualifier shift to state 112
-- On TIdent shift to state 113
-- On TFloat shift to state 116
-- On TDec shift to state 117
-- On TColCol_BeforeTypedef shift to state 118
-- On TColCol shift to state 128
-- On TChar shift to state 174
-- On TBang shift to state 175
-- On TAndLog shift to state 176
-- On TAnd shift to state 177
-- On LDots shift to state 178
-- On unqualified_id shift to state 179
-- On unary_op shift to state 180
-- On unary_expr shift to state 181
-- On type_name shift to state 182
-- On type_cplusplus_id shift to state 183
-- On template_id shift to state 120
-- On string_elem shift to state 184
-- On simple_type_specifier shift to state 189
-- On shift_expr shift to state 217
-- On relational_expr shift to state 229
-- On qualified_id shift to state 191
-- On primary_expr shift to state 192
-- On primary_cplusplus_id shift to state 193
-- On postfix_expr shift to state 194
-- On pm_expr shift to state 219
-- On option(TColCol) shift to state 221
-- On operator_function_id shift to state 168
-- On new_expr shift to state 233
-- On nested_name_specifier2 shift to state 207
-- On nested_name_specifier shift to state 165
-- On multiplicative_expr shift to state 234
-- On literal shift to state 238
-- On lambda_introducer shift to state 239
-- On inclusive_or_expr shift to state 252
-- On id_expression shift to state 241
-- On exclusive_or_expr shift to state 273
-- On equality_expr shift to state 256
-- On enum_name_or_typedef_name_or_simple_class_name shift to state 123
-- On delete_expr shift to state 242
-- On decltype_specifier shift to state 243
-- On cpp_cast_operator shift to state 244
-- On conversion_function_id shift to state 169
-- On class_or_namespace_name_for_qualifier2 shift to state 124
-- On class_or_namespace_name_for_qualifier shift to state 170
-- On cast_operator_expr shift to state 261
-- On cast_expr shift to state 262
-- On cast_constructor_expr shift to state 263
-- On basic_type_2 shift to state 264
-- On and_expr shift to state 334
-- On additive_expr shift to state 341
## Reductions:
-- On Tnew Tdelete
--   reduce production option(TColCol) ->

State 252:
## Known stack suffix:
## logical_and_expr TAndLog inclusive_or_expr
## LR(1) items:
inclusive_or_expr -> inclusive_or_expr . TOr exclusive_or_expr [ TWhy TSup_Template TPtVirg TOrLog TOr TEllipsis TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAndLog RDots EOF ]
logical_and_expr -> logical_and_expr TAndLog inclusive_or_expr . [ TWhy TSup_Template TPtVirg TOrLog TEllipsis TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAndLog RDots EOF ]
## Transitions:
-- On TOr shift to state 253
## Reductions:
-- On TWhy TSup_Template TPtVirg TOrLog TEllipsis TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAndLog RDots EOF
--   reduce production logical_and_expr -> logical_and_expr TAndLog inclusive_or_expr

State 253:
## Known stack suffix:
## inclusive_or_expr TOr
## LR(1) items:
inclusive_or_expr -> inclusive_or_expr TOr . exclusive_or_expr [ TWhy TSup_Template TPtVirg TOrLog TOr TEllipsis TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAndLog RDots EOF ]
## Transitions:
-- On Twchar_t_Constr shift to state 14
-- On Twchar_t shift to state 1
-- On Tvoid shift to state 3
-- On Tunsigned shift to state 15
-- On Ttypeof shift to state 17
-- On Ttypeid shift to state 23
-- On Ttrue shift to state 25
-- On Tthis shift to state 26
-- On Tstatic_cast shift to state 28
-- On Tsizeof shift to state 29
-- On Tsigned shift to state 30
-- On Tshort_Constr shift to state 31
-- On Tshort shift to state 32
-- On Treinterpret_cast shift to state 33
-- On Toperator shift to state 34
-- On Tnullptr shift to state 48
-- On Tnull shift to state 49
-- On Tlong_Constr shift to state 50
-- On Tlong shift to state 38
-- On Tint_Constr shift to state 51
-- On Tint shift to state 39
-- On Tfloat_Constr shift to state 52
-- On Tfloat shift to state 40
-- On Tfalse shift to state 53
-- On Tdynamic_cast shift to state 54
-- On Tdouble_Constr shift to state 55
-- On Tdouble shift to state 41
-- On Tdecltype shift to state 45
-- On Tconst_cast shift to state 56
-- On Tchar_Constr shift to state 57
-- On Tchar shift to state 58
-- On Tbool_Constr shift to state 59
-- On Tbool shift to state 60
-- On TTilde shift to state 61
-- On TString shift to state 62
-- On TPlus shift to state 63
-- On TOPar shift to state 64
-- On TOCro_Lambda shift to state 78
-- On TMul shift to state 88
-- On TMinus shift to state 89
-- On TInt shift to state 90
-- On TInc shift to state 91
-- On TIdent_TypedefConstr shift to state 106
-- On TIdent_Typedef shift to state 20
-- On TIdent_TemplatenameInQualifier_BeforeTypedef shift to state 21
-- On TIdent_TemplatenameInQualifier shift to state 12
-- On TIdent_Templatename shift to state 108
-- On TIdent_MacroString shift to state 110
-- On TIdent_ClassnameInQualifier_BeforeTypedef shift to state 111
-- On TIdent_ClassnameInQualifier shift to state 112
-- On TIdent shift to state 113
-- On TFloat shift to state 116
-- On TDec shift to state 117
-- On TColCol_BeforeTypedef shift to state 118
-- On TColCol shift to state 128
-- On TChar shift to state 174
-- On TBang shift to state 175
-- On TAndLog shift to state 176
-- On TAnd shift to state 177
-- On LDots shift to state 178
-- On unqualified_id shift to state 179
-- On unary_op shift to state 180
-- On unary_expr shift to state 181
-- On type_name shift to state 182
-- On type_cplusplus_id shift to state 183
-- On template_id shift to state 120
-- On string_elem shift to state 184
-- On simple_type_specifier shift to state 189
-- On shift_expr shift to state 217
-- On relational_expr shift to state 229
-- On qualified_id shift to state 191
-- On primary_expr shift to state 192
-- On primary_cplusplus_id shift to state 193
-- On postfix_expr shift to state 194
-- On pm_expr shift to state 219
-- On option(TColCol) shift to state 221
-- On operator_function_id shift to state 168
-- On new_expr shift to state 233
-- On nested_name_specifier2 shift to state 207
-- On nested_name_specifier shift to state 165
-- On multiplicative_expr shift to state 234
-- On literal shift to state 238
-- On lambda_introducer shift to state 239
-- On id_expression shift to state 241
-- On exclusive_or_expr shift to state 254
-- On equality_expr shift to state 256
-- On enum_name_or_typedef_name_or_simple_class_name shift to state 123
-- On delete_expr shift to state 242
-- On decltype_specifier shift to state 243
-- On cpp_cast_operator shift to state 244
-- On conversion_function_id shift to state 169
-- On class_or_namespace_name_for_qualifier2 shift to state 124
-- On class_or_namespace_name_for_qualifier shift to state 170
-- On cast_operator_expr shift to state 261
-- On cast_expr shift to state 262
-- On cast_constructor_expr shift to state 263
-- On basic_type_2 shift to state 264
-- On and_expr shift to state 334
-- On additive_expr shift to state 341
## Reductions:
-- On Tnew Tdelete
--   reduce production option(TColCol) ->

State 254:
## Known stack suffix:
## inclusive_or_expr TOr exclusive_or_expr
## LR(1) items:
exclusive_or_expr -> exclusive_or_expr . TXor and_expr [ TXor TWhy TSup_Template TPtVirg TOrLog TOr TEllipsis TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAndLog RDots EOF ]
inclusive_or_expr -> inclusive_or_expr TOr exclusive_or_expr . [ TWhy TSup_Template TPtVirg TOrLog TOr TEllipsis TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAndLog RDots EOF ]
## Transitions:
-- On TXor shift to state 255
## Reductions:
-- On TWhy TSup_Template TPtVirg TOrLog TOr TEllipsis TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAndLog RDots EOF
--   reduce production inclusive_or_expr -> inclusive_or_expr TOr exclusive_or_expr

State 255:
## Known stack suffix:
## exclusive_or_expr TXor
## LR(1) items:
exclusive_or_expr -> exclusive_or_expr TXor . and_expr [ TXor TWhy TSup_Template TPtVirg TOrLog TOr TEllipsis TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAndLog RDots EOF ]
## Transitions:
-- On Twchar_t_Constr shift to state 14
-- On Twchar_t shift to state 1
-- On Tvoid shift to state 3
-- On Tunsigned shift to state 15
-- On Ttypeof shift to state 17
-- On Ttypeid shift to state 23
-- On Ttrue shift to state 25
-- On Tthis shift to state 26
-- On Tstatic_cast shift to state 28
-- On Tsizeof shift to state 29
-- On Tsigned shift to state 30
-- On Tshort_Constr shift to state 31
-- On Tshort shift to state 32
-- On Treinterpret_cast shift to state 33
-- On Toperator shift to state 34
-- On Tnullptr shift to state 48
-- On Tnull shift to state 49
-- On Tlong_Constr shift to state 50
-- On Tlong shift to state 38
-- On Tint_Constr shift to state 51
-- On Tint shift to state 39
-- On Tfloat_Constr shift to state 52
-- On Tfloat shift to state 40
-- On Tfalse shift to state 53
-- On Tdynamic_cast shift to state 54
-- On Tdouble_Constr shift to state 55
-- On Tdouble shift to state 41
-- On Tdecltype shift to state 45
-- On Tconst_cast shift to state 56
-- On Tchar_Constr shift to state 57
-- On Tchar shift to state 58
-- On Tbool_Constr shift to state 59
-- On Tbool shift to state 60
-- On TTilde shift to state 61
-- On TString shift to state 62
-- On TPlus shift to state 63
-- On TOPar shift to state 64
-- On TOCro_Lambda shift to state 78
-- On TMul shift to state 88
-- On TMinus shift to state 89
-- On TInt shift to state 90
-- On TInc shift to state 91
-- On TIdent_TypedefConstr shift to state 106
-- On TIdent_Typedef shift to state 20
-- On TIdent_TemplatenameInQualifier_BeforeTypedef shift to state 21
-- On TIdent_TemplatenameInQualifier shift to state 12
-- On TIdent_Templatename shift to state 108
-- On TIdent_MacroString shift to state 110
-- On TIdent_ClassnameInQualifier_BeforeTypedef shift to state 111
-- On TIdent_ClassnameInQualifier shift to state 112
-- On TIdent shift to state 113
-- On TFloat shift to state 116
-- On TDec shift to state 117
-- On TColCol_BeforeTypedef shift to state 118
-- On TColCol shift to state 128
-- On TChar shift to state 174
-- On TBang shift to state 175
-- On TAndLog shift to state 176
-- On TAnd shift to state 177
-- On LDots shift to state 178
-- On unqualified_id shift to state 179
-- On unary_op shift to state 180
-- On unary_expr shift to state 181
-- On type_name shift to state 182
-- On type_cplusplus_id shift to state 183
-- On template_id shift to state 120
-- On string_elem shift to state 184
-- On simple_type_specifier shift to state 189
-- On shift_expr shift to state 217
-- On relational_expr shift to state 229
-- On qualified_id shift to state 191
-- On primary_expr shift to state 192
-- On primary_cplusplus_id shift to state 193
-- On postfix_expr shift to state 194
-- On pm_expr shift to state 219
-- On option(TColCol) shift to state 221
-- On operator_function_id shift to state 168
-- On new_expr shift to state 233
-- On nested_name_specifier2 shift to state 207
-- On nested_name_specifier shift to state 165
-- On multiplicative_expr shift to state 234
-- On literal shift to state 238
-- On lambda_introducer shift to state 239
-- On id_expression shift to state 241
-- On equality_expr shift to state 256
-- On enum_name_or_typedef_name_or_simple_class_name shift to state 123
-- On delete_expr shift to state 242
-- On decltype_specifier shift to state 243
-- On cpp_cast_operator shift to state 244
-- On conversion_function_id shift to state 169
-- On class_or_namespace_name_for_qualifier2 shift to state 124
-- On class_or_namespace_name_for_qualifier shift to state 170
-- On cast_operator_expr shift to state 261
-- On cast_expr shift to state 262
-- On cast_constructor_expr shift to state 263
-- On basic_type_2 shift to state 264
-- On and_expr shift to state 813
-- On additive_expr shift to state 341
## Reductions:
-- On Tnew Tdelete
--   reduce production option(TColCol) ->

State 256:
## Known stack suffix:
## equality_expr
## LR(1) items:
and_expr -> equality_expr . [ TXor TWhy TSup_Template TPtVirg TOrLog TOr TEllipsis TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAndLog TAnd RDots EOF ]
equality_expr -> equality_expr . TEqEq relational_expr [ TXor TWhy TSup_Template TPtVirg TOrLog TOr TNotEq TEqEq TEllipsis TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAndLog TAnd RDots EOF ]
equality_expr -> equality_expr . TNotEq relational_expr [ TXor TWhy TSup_Template TPtVirg TOrLog TOr TNotEq TEqEq TEllipsis TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAndLog TAnd RDots EOF ]
## Transitions:
-- On TNotEq shift to state 257
-- On TEqEq shift to state 337
## Reductions:
-- On TXor TWhy TSup_Template TPtVirg TOrLog TOr TEllipsis TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAndLog TAnd RDots EOF
--   reduce production and_expr -> equality_expr

State 257:
## Known stack suffix:
## equality_expr TNotEq
## LR(1) items:
equality_expr -> equality_expr TNotEq . relational_expr [ TXor TWhy TSup_Template TPtVirg TOrLog TOr TNotEq TEqEq TEllipsis TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAndLog TAnd RDots EOF ]
## Transitions:
-- On Twchar_t_Constr shift to state 14
-- On Twchar_t shift to state 1
-- On Tvoid shift to state 3
-- On Tunsigned shift to state 15
-- On Ttypeof shift to state 17
-- On Ttypeid shift to state 23
-- On Ttrue shift to state 25
-- On Tthis shift to state 26
-- On Tstatic_cast shift to state 28
-- On Tsizeof shift to state 29
-- On Tsigned shift to state 30
-- On Tshort_Constr shift to state 31
-- On Tshort shift to state 32
-- On Treinterpret_cast shift to state 33
-- On Toperator shift to state 34
-- On Tnullptr shift to state 48
-- On Tnull shift to state 49
-- On Tlong_Constr shift to state 50
-- On Tlong shift to state 38
-- On Tint_Constr shift to state 51
-- On Tint shift to state 39
-- On Tfloat_Constr shift to state 52
-- On Tfloat shift to state 40
-- On Tfalse shift to state 53
-- On Tdynamic_cast shift to state 54
-- On Tdouble_Constr shift to state 55
-- On Tdouble shift to state 41
-- On Tdecltype shift to state 45
-- On Tconst_cast shift to state 56
-- On Tchar_Constr shift to state 57
-- On Tchar shift to state 58
-- On Tbool_Constr shift to state 59
-- On Tbool shift to state 60
-- On TTilde shift to state 61
-- On TString shift to state 62
-- On TPlus shift to state 63
-- On TOPar shift to state 64
-- On TOCro_Lambda shift to state 78
-- On TMul shift to state 88
-- On TMinus shift to state 89
-- On TInt shift to state 90
-- On TInc shift to state 91
-- On TIdent_TypedefConstr shift to state 106
-- On TIdent_Typedef shift to state 20
-- On TIdent_TemplatenameInQualifier_BeforeTypedef shift to state 21
-- On TIdent_TemplatenameInQualifier shift to state 12
-- On TIdent_Templatename shift to state 108
-- On TIdent_MacroString shift to state 110
-- On TIdent_ClassnameInQualifier_BeforeTypedef shift to state 111
-- On TIdent_ClassnameInQualifier shift to state 112
-- On TIdent shift to state 113
-- On TFloat shift to state 116
-- On TDec shift to state 117
-- On TColCol_BeforeTypedef shift to state 118
-- On TColCol shift to state 128
-- On TChar shift to state 174
-- On TBang shift to state 175
-- On TAndLog shift to state 176
-- On TAnd shift to state 177
-- On LDots shift to state 178
-- On unqualified_id shift to state 179
-- On unary_op shift to state 180
-- On unary_expr shift to state 181
-- On type_name shift to state 182
-- On type_cplusplus_id shift to state 183
-- On template_id shift to state 120
-- On string_elem shift to state 184
-- On simple_type_specifier shift to state 189
-- On shift_expr shift to state 217
-- On relational_expr shift to state 258
-- On qualified_id shift to state 191
-- On primary_expr shift to state 192
-- On primary_cplusplus_id shift to state 193
-- On postfix_expr shift to state 194
-- On pm_expr shift to state 219
-- On option(TColCol) shift to state 221
-- On operator_function_id shift to state 168
-- On new_expr shift to state 233
-- On nested_name_specifier2 shift to state 207
-- On nested_name_specifier shift to state 165
-- On multiplicative_expr shift to state 234
-- On literal shift to state 238
-- On lambda_introducer shift to state 239
-- On id_expression shift to state 241
-- On enum_name_or_typedef_name_or_simple_class_name shift to state 123
-- On delete_expr shift to state 242
-- On decltype_specifier shift to state 243
-- On cpp_cast_operator shift to state 244
-- On conversion_function_id shift to state 169
-- On class_or_namespace_name_for_qualifier2 shift to state 124
-- On class_or_namespace_name_for_qualifier shift to state 170
-- On cast_operator_expr shift to state 261
-- On cast_expr shift to state 262
-- On cast_constructor_expr shift to state 263
-- On basic_type_2 shift to state 264
-- On additive_expr shift to state 341
## Reductions:
-- On Tnew Tdelete
--   reduce production option(TColCol) ->

State 258:
## Known stack suffix:
## equality_expr TNotEq relational_expr
## LR(1) items:
equality_expr -> equality_expr TNotEq relational_expr . [ TXor TWhy TSup_Template TPtVirg TOrLog TOr TNotEq TEqEq TEllipsis TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAndLog TAnd RDots EOF ]
relational_expr -> relational_expr . TInf shift_expr [ TXor TWhy TSup_Template TSupEq TSup TPtVirg TOrLog TOr TNotEq TInfEq TInf TEqEq TEllipsis TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAndLog TAnd RDots EOF ]
relational_expr -> relational_expr . TSup shift_expr [ TXor TWhy TSup_Template TSupEq TSup TPtVirg TOrLog TOr TNotEq TInfEq TInf TEqEq TEllipsis TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAndLog TAnd RDots EOF ]
relational_expr -> relational_expr . TInfEq shift_expr [ TXor TWhy TSup_Template TSupEq TSup TPtVirg TOrLog TOr TNotEq TInfEq TInf TEqEq TEllipsis TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAndLog TAnd RDots EOF ]
relational_expr -> relational_expr . TSupEq shift_expr [ TXor TWhy TSup_Template TSupEq TSup TPtVirg TOrLog TOr TNotEq TInfEq TInf TEqEq TEllipsis TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAndLog TAnd RDots EOF ]
## Transitions:
-- On TSupEq shift to state 230
-- On TSup shift to state 259
-- On TInfEq shift to state 339
-- On TInf shift to state 350
## Reductions:
-- On TXor TWhy TSup_Template TPtVirg TOrLog TOr TNotEq TEqEq TEllipsis TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAndLog TAnd RDots EOF
--   reduce production equality_expr -> equality_expr TNotEq relational_expr

State 259:
## Known stack suffix:
## relational_expr TSup
## LR(1) items:
relational_expr -> relational_expr TSup . shift_expr [ TXor TWhy TSup_Template TSupEq TSup TPtVirg TOrLog TOr TNotEq TInfEq TInf TEqEq TEllipsis TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAndLog TAnd RDots EOF ]
## Transitions:
-- On Twchar_t_Constr shift to state 14
-- On Twchar_t shift to state 1
-- On Tvoid shift to state 3
-- On Tunsigned shift to state 15
-- On Ttypeof shift to state 17
-- On Ttypeid shift to state 23
-- On Ttrue shift to state 25
-- On Tthis shift to state 26
-- On Tstatic_cast shift to state 28
-- On Tsizeof shift to state 29
-- On Tsigned shift to state 30
-- On Tshort_Constr shift to state 31
-- On Tshort shift to state 32
-- On Treinterpret_cast shift to state 33
-- On Toperator shift to state 34
-- On Tnullptr shift to state 48
-- On Tnull shift to state 49
-- On Tlong_Constr shift to state 50
-- On Tlong shift to state 38
-- On Tint_Constr shift to state 51
-- On Tint shift to state 39
-- On Tfloat_Constr shift to state 52
-- On Tfloat shift to state 40
-- On Tfalse shift to state 53
-- On Tdynamic_cast shift to state 54
-- On Tdouble_Constr shift to state 55
-- On Tdouble shift to state 41
-- On Tdecltype shift to state 45
-- On Tconst_cast shift to state 56
-- On Tchar_Constr shift to state 57
-- On Tchar shift to state 58
-- On Tbool_Constr shift to state 59
-- On Tbool shift to state 60
-- On TTilde shift to state 61
-- On TString shift to state 62
-- On TPlus shift to state 63
-- On TOPar shift to state 64
-- On TOCro_Lambda shift to state 78
-- On TMul shift to state 88
-- On TMinus shift to state 89
-- On TInt shift to state 90
-- On TInc shift to state 91
-- On TIdent_TypedefConstr shift to state 106
-- On TIdent_Typedef shift to state 20
-- On TIdent_TemplatenameInQualifier_BeforeTypedef shift to state 21
-- On TIdent_TemplatenameInQualifier shift to state 12
-- On TIdent_Templatename shift to state 108
-- On TIdent_MacroString shift to state 110
-- On TIdent_ClassnameInQualifier_BeforeTypedef shift to state 111
-- On TIdent_ClassnameInQualifier shift to state 112
-- On TIdent shift to state 113
-- On TFloat shift to state 116
-- On TDec shift to state 117
-- On TColCol_BeforeTypedef shift to state 118
-- On TColCol shift to state 128
-- On TChar shift to state 174
-- On TBang shift to state 175
-- On TAndLog shift to state 176
-- On TAnd shift to state 177
-- On LDots shift to state 178
-- On unqualified_id shift to state 179
-- On unary_op shift to state 180
-- On unary_expr shift to state 181
-- On type_name shift to state 182
-- On type_cplusplus_id shift to state 183
-- On template_id shift to state 120
-- On string_elem shift to state 184
-- On simple_type_specifier shift to state 189
-- On shift_expr shift to state 260
-- On qualified_id shift to state 191
-- On primary_expr shift to state 192
-- On primary_cplusplus_id shift to state 193
-- On postfix_expr shift to state 194
-- On pm_expr shift to state 219
-- On option(TColCol) shift to state 221
-- On operator_function_id shift to state 168
-- On new_expr shift to state 233
-- On nested_name_specifier2 shift to state 207
-- On nested_name_specifier shift to state 165
-- On multiplicative_expr shift to state 234
-- On literal shift to state 238
-- On lambda_introducer shift to state 239
-- On id_expression shift to state 241
-- On enum_name_or_typedef_name_or_simple_class_name shift to state 123
-- On delete_expr shift to state 242
-- On decltype_specifier shift to state 243
-- On cpp_cast_operator shift to state 244
-- On conversion_function_id shift to state 169
-- On class_or_namespace_name_for_qualifier2 shift to state 124
-- On class_or_namespace_name_for_qualifier shift to state 170
-- On cast_operator_expr shift to state 261
-- On cast_expr shift to state 262
-- On cast_constructor_expr shift to state 263
-- On basic_type_2 shift to state 264
-- On additive_expr shift to state 341
## Reductions:
-- On Tnew Tdelete
--   reduce production option(TColCol) ->

State 260:
## Known stack suffix:
## relational_expr TSup shift_expr
## LR(1) items:
relational_expr -> relational_expr TSup shift_expr . [ TXor TWhy TSup_Template TSupEq TSup TPtVirg TOrLog TOr TNotEq TInfEq TInf TEqEq TEllipsis TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAndLog TAnd RDots EOF ]
shift_expr -> shift_expr . TShl additive_expr [ TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtVirg TOrLog TOr TNotEq TInfEq TInf TEqEq TEllipsis TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAndLog TAnd RDots EOF ]
shift_expr -> shift_expr . TShr additive_expr [ TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtVirg TOrLog TOr TNotEq TInfEq TInf TEqEq TEllipsis TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAndLog TAnd RDots EOF ]
## Transitions:
-- On TShr shift to state 218
-- On TShl shift to state 232
## Reductions:
-- On TXor TWhy TSup_Template TSupEq TSup TPtVirg TOrLog TOr TNotEq TInfEq TInf TEqEq TEllipsis TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAndLog TAnd RDots EOF
--   reduce production relational_expr -> relational_expr TSup shift_expr

State 261:
## Known stack suffix:
## cast_operator_expr
## LR(1) items:
postfix_expr -> cast_operator_expr . [ TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtrOpStar TPtrOp TPtVirg TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMod TMinus TInfEq TInf TInc TEqEq TEq TEllipsis TDotStar TDot TDiv TDec TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAssign TAndLog TAnd RDots EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production postfix_expr -> cast_operator_expr

State 262:
## Known stack suffix:
## cast_expr
## LR(1) items:
pm_expr -> cast_expr . [ TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtrOpStar TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TEllipsis TDotStar TDiv TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAndLog TAnd RDots EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production pm_expr -> cast_expr

State 263:
## Known stack suffix:
## cast_constructor_expr
## LR(1) items:
postfix_expr -> cast_constructor_expr . [ TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtrOpStar TPtrOp TPtVirg TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMod TMinus TInfEq TInf TInc TEqEq TEq TEllipsis TDotStar TDot TDiv TDec TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAssign TAndLog TAnd RDots EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production postfix_expr -> cast_constructor_expr

State 264:
## Known stack suffix:
## basic_type_2
## LR(1) items:
cast_constructor_expr -> basic_type_2 . TOPar optl(listc(argument)) TCPar [ TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtrOpStar TPtrOp TPtVirg TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMod TMinus TInfEq TInf TInc TEqEq TEq TEllipsis TDotStar TDot TDiv TDec TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAssign TAndLog TAnd RDots EOF ]
## Transitions:
-- On TOPar shift to state 265
## Reductions:

State 265:
## Known stack suffix:
## basic_type_2 TOPar
## LR(1) items:
cast_constructor_expr -> basic_type_2 TOPar . optl(listc(argument)) TCPar [ TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtrOpStar TPtrOp TPtVirg TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMod TMinus TInfEq TInf TInc TEqEq TEq TEllipsis TDotStar TDot TDiv TDec TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAssign TAndLog TAnd RDots EOF ]
## Transitions:
-- On Twchar_t_Constr shift to state 14
-- On Twchar_t shift to state 1
-- On Tvolatile shift to state 2
-- On Tvoid shift to state 3
-- On Tunsigned shift to state 15
-- On Tunion shift to state 16
-- On Ttypeof shift to state 17
-- On Ttypename shift to state 19
-- On Ttypeid shift to state 23
-- On Ttrue shift to state 25
-- On Tthrow shift to state 47
-- On Tthis shift to state 26
-- On Tstruct shift to state 27
-- On Tstatic_cast shift to state 28
-- On Tsizeof shift to state 29
-- On Tsigned shift to state 30
-- On Tshort_Constr shift to state 31
-- On Tshort shift to state 32
-- On Trestrict shift to state 65
-- On Treinterpret_cast shift to state 33
-- On Toperator shift to state 34
-- On Tnullptr shift to state 48
-- On Tnull shift to state 49
-- On Tlong_Constr shift to state 50
-- On Tlong shift to state 38
-- On Tint_Constr shift to state 51
-- On Tint shift to state 39
-- On Tfloat_Constr shift to state 52
-- On Tfloat shift to state 40
-- On Tfalse shift to state 53
-- On Tenum shift to state 66
-- On Tdynamic_cast shift to state 54
-- On Tdouble_Constr shift to state 55
-- On Tdouble shift to state 41
-- On Tdecltype shift to state 45
-- On Tconst_cast shift to state 56
-- On Tconst shift to state 76
-- On Tclass shift to state 77
-- On Tchar_Constr shift to state 57
-- On Tchar shift to state 58
-- On Tbool_Constr shift to state 59
-- On Tbool shift to state 60
-- On TTilde shift to state 61
-- On TString shift to state 62
-- On TPlus shift to state 63
-- On TOPar shift to state 64
-- On TOCro_Lambda shift to state 78
-- On TMul shift to state 88
-- On TMinus shift to state 89
-- On TInt shift to state 90
-- On TInc shift to state 91
-- On TIdent_TypedefConstr shift to state 106
-- On TIdent_Typedef shift to state 20
-- On TIdent_TemplatenameInQualifier_BeforeTypedef shift to state 21
-- On TIdent_TemplatenameInQualifier shift to state 12
-- On TIdent_Templatename shift to state 108
-- On TIdent_MacroString shift to state 110
-- On TIdent_ClassnameInQualifier_BeforeTypedef shift to state 111
-- On TIdent_ClassnameInQualifier shift to state 112
-- On TIdent shift to state 113
-- On TFloat shift to state 116
-- On TEllipsis shift to state 201
-- On TDec shift to state 117
-- On TColCol_BeforeTypedef shift to state 118
-- On TColCol shift to state 128
-- On TChar shift to state 174
-- On TBang shift to state 175
-- On TAny_Action shift to state 202
-- On TAndLog shift to state 176
-- On TAnd shift to state 177
-- On LDots shift to state 178
-- On unqualified_id shift to state 179
-- On unary_op shift to state 180
-- On unary_expr shift to state 181
-- On type_spec shift to state 204
-- On type_name shift to state 182
-- On type_id shift to state 224
-- On type_cplusplus_id shift to state 183
-- On template_id shift to state 120
-- On string_elem shift to state 184
-- On spec_qualif_list shift to state 225
-- On simple_type_specifier shift to state 266
-- On shift_expr shift to state 217
-- On relational_expr shift to state 229
-- On qualified_id shift to state 191
-- On primary_expr shift to state 192
-- On primary_cplusplus_id shift to state 193
-- On postfix_expr shift to state 194
-- On pm_expr shift to state 219
-- On optl(listc(argument)) shift to state 267
-- On option(TColCol) shift to state 221
-- On operator_function_id shift to state 168
-- On nonempty_list(TAny_Action) shift to state 269
-- On new_expr shift to state 233
-- On nested_name_specifier2 shift to state 207
-- On nested_name_specifier shift to state 165
-- On multiplicative_expr shift to state 234
-- On logical_or_expr shift to state 246
-- On logical_and_expr shift to state 250
-- On literal shift to state 238
-- On listc(argument) shift to state 270
-- On lambda_introducer shift to state 239
-- On inclusive_or_expr shift to state 272
-- On id_expression shift to state 241
-- On exclusive_or_expr shift to state 273
-- On equality_expr shift to state 256
-- On enum_specifier shift to state 209
-- On enum_name_or_typedef_name_or_simple_class_name shift to state 123
-- On enum_head shift to state 210
-- On elaborated_type_specifier shift to state 274
-- On delete_expr shift to state 242
-- On decltype_specifier shift to state 243
-- On cv_qualif shift to state 275
-- On cpp_cast_operator shift to state 244
-- On conversion_function_id shift to state 169
-- On cond_expr shift to state 330
-- On class_specifier shift to state 277
-- On class_or_namespace_name_for_qualifier2 shift to state 124
-- On class_or_namespace_name_for_qualifier shift to state 170
-- On class_key shift to state 278
-- On class_head shift to state 301
-- On cast_operator_expr shift to state 261
-- On cast_expr shift to state 331
-- On cast_constructor_expr shift to state 263
-- On basic_type_2 shift to state 264
-- On assign_expr shift to state 354
-- On argument shift to state 355
-- On and_expr shift to state 334
-- On additive_expr shift to state 341
## Reductions:
-- On Tnew Tdelete
--   reduce production option(TColCol) ->
-- On TCPar
--   reduce production optl(listc(argument)) ->

State 266:
## Known stack suffix:
## simple_type_specifier
## LR(1) items:
postfix_expr -> simple_type_specifier . braced_init_list [ TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtrOpStar TPtrOp TPtVirg TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMod TMinus TInfEq TInf TInc TEqEq TEq TDotStar TDot TDiv TDec TCommentNewline_DefineEndOfMacro TComma TCPar_EOL TCPar TAssign TAndLog TAnd EOF ]
type_spec -> simple_type_specifier . [ Twchar_t Tvolatile Tvoid Tvirtual Tunsigned Tunion Ttypeof Ttypename Ttypedef Tthread_local Tstruct Tstatic Tsigned Tshort Trestrict Tregister Toperator Tmutable Tlong Tint Tinline Tfriend Tfloat Textern Tenum Tdouble Tdecltype Tconstexpr Tconst Tclass Tchar Tbool Tauto TSup_Template TPtVirg TOPar TOCro TMul TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TIdent TComma TColCol_BeforeTypedef TColCol TCPar_EOL TCPar TAndLog TAnd ]
## Transitions:
-- On TOBrace shift to state 114
-- On braced_init_list shift to state 190
## Reductions:
-- On Twchar_t Tvolatile Tvoid Tvirtual Tunsigned Tunion Ttypeof Ttypename Ttypedef Tthread_local Tstruct Tstatic Tsigned Tshort Trestrict Tregister Toperator Tmutable Tlong Tint Tinline Tfriend Tfloat Textern Tenum Tdouble Tdecltype Tconstexpr Tconst Tclass Tchar Tbool Tauto TSup_Template TPtVirg TOPar TOCro TMul TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TIdent TComma TColCol_BeforeTypedef TColCol TCPar_EOL TCPar TAndLog TAnd
--   reduce production type_spec -> simple_type_specifier

State 267:
## Known stack suffix:
## basic_type_2 TOPar optl(listc(argument))
## LR(1) items:
cast_constructor_expr -> basic_type_2 TOPar optl(listc(argument)) . TCPar [ TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtrOpStar TPtrOp TPtVirg TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMod TMinus TInfEq TInf TInc TEqEq TEq TEllipsis TDotStar TDot TDiv TDec TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAssign TAndLog TAnd RDots EOF ]
## Transitions:
-- On TCPar shift to state 268
## Reductions:

State 268:
## Known stack suffix:
## basic_type_2 TOPar optl(listc(argument)) TCPar
## LR(1) items:
cast_constructor_expr -> basic_type_2 TOPar optl(listc(argument)) TCPar . [ TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtrOpStar TPtrOp TPtVirg TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMod TMinus TInfEq TInf TInc TEqEq TEq TEllipsis TDotStar TDot TDiv TDec TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAssign TAndLog TAnd RDots EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production cast_constructor_expr -> basic_type_2 TOPar optl(listc(argument)) TCPar

State 269:
## Known stack suffix:
## nonempty_list(TAny_Action)
## LR(1) items:
argument -> nonempty_list(TAny_Action) . [ TComma TCPar_EOL TCPar ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production argument -> nonempty_list(TAny_Action)

State 270:
## Known stack suffix:
## listc(argument)
## LR(1) items:
listc(argument) -> listc(argument) . TComma argument [ TComma TCPar ]
optl(listc(argument)) -> listc(argument) . [ TCPar ]
## Transitions:
-- On TComma shift to state 271
## Reductions:
-- On TCPar
--   reduce production optl(listc(argument)) -> listc(argument)

State 271:
## Known stack suffix:
## listc(argument) TComma
## LR(1) items:
listc(argument) -> listc(argument) TComma . argument [ TComma TCPar_EOL TCPar ]
## Transitions:
-- On Twchar_t_Constr shift to state 14
-- On Twchar_t shift to state 1
-- On Tvolatile shift to state 2
-- On Tvoid shift to state 3
-- On Tunsigned shift to state 15
-- On Tunion shift to state 16
-- On Ttypeof shift to state 17
-- On Ttypename shift to state 19
-- On Ttypeid shift to state 23
-- On Ttrue shift to state 25
-- On Tthrow shift to state 47
-- On Tthis shift to state 26
-- On Tstruct shift to state 27
-- On Tstatic_cast shift to state 28
-- On Tsizeof shift to state 29
-- On Tsigned shift to state 30
-- On Tshort_Constr shift to state 31
-- On Tshort shift to state 32
-- On Trestrict shift to state 65
-- On Treinterpret_cast shift to state 33
-- On Toperator shift to state 34
-- On Tnullptr shift to state 48
-- On Tnull shift to state 49
-- On Tlong_Constr shift to state 50
-- On Tlong shift to state 38
-- On Tint_Constr shift to state 51
-- On Tint shift to state 39
-- On Tfloat_Constr shift to state 52
-- On Tfloat shift to state 40
-- On Tfalse shift to state 53
-- On Tenum shift to state 66
-- On Tdynamic_cast shift to state 54
-- On Tdouble_Constr shift to state 55
-- On Tdouble shift to state 41
-- On Tdecltype shift to state 45
-- On Tconst_cast shift to state 56
-- On Tconst shift to state 76
-- On Tclass shift to state 77
-- On Tchar_Constr shift to state 57
-- On Tchar shift to state 58
-- On Tbool_Constr shift to state 59
-- On Tbool shift to state 60
-- On TTilde shift to state 61
-- On TString shift to state 62
-- On TPlus shift to state 63
-- On TOPar shift to state 64
-- On TOCro_Lambda shift to state 78
-- On TMul shift to state 88
-- On TMinus shift to state 89
-- On TInt shift to state 90
-- On TInc shift to state 91
-- On TIdent_TypedefConstr shift to state 106
-- On TIdent_Typedef shift to state 20
-- On TIdent_TemplatenameInQualifier_BeforeTypedef shift to state 21
-- On TIdent_TemplatenameInQualifier shift to state 12
-- On TIdent_Templatename shift to state 108
-- On TIdent_MacroString shift to state 110
-- On TIdent_ClassnameInQualifier_BeforeTypedef shift to state 111
-- On TIdent_ClassnameInQualifier shift to state 112
-- On TIdent shift to state 113
-- On TFloat shift to state 116
-- On TEllipsis shift to state 201
-- On TDec shift to state 117
-- On TColCol_BeforeTypedef shift to state 118
-- On TColCol shift to state 128
-- On TChar shift to state 174
-- On TBang shift to state 175
-- On TAny_Action shift to state 202
-- On TAndLog shift to state 176
-- On TAnd shift to state 177
-- On LDots shift to state 178
-- On unqualified_id shift to state 179
-- On unary_op shift to state 180
-- On unary_expr shift to state 181
-- On type_spec shift to state 204
-- On type_name shift to state 182
-- On type_id shift to state 224
-- On type_cplusplus_id shift to state 183
-- On template_id shift to state 120
-- On string_elem shift to state 184
-- On spec_qualif_list shift to state 225
-- On simple_type_specifier shift to state 266
-- On shift_expr shift to state 217
-- On relational_expr shift to state 229
-- On qualified_id shift to state 191
-- On primary_expr shift to state 192
-- On primary_cplusplus_id shift to state 193
-- On postfix_expr shift to state 194
-- On pm_expr shift to state 219
-- On option(TColCol) shift to state 221
-- On operator_function_id shift to state 168
-- On nonempty_list(TAny_Action) shift to state 269
-- On new_expr shift to state 233
-- On nested_name_specifier2 shift to state 207
-- On nested_name_specifier shift to state 165
-- On multiplicative_expr shift to state 234
-- On logical_or_expr shift to state 246
-- On logical_and_expr shift to state 250
-- On literal shift to state 238
-- On lambda_introducer shift to state 239
-- On inclusive_or_expr shift to state 272
-- On id_expression shift to state 241
-- On exclusive_or_expr shift to state 273
-- On equality_expr shift to state 256
-- On enum_specifier shift to state 209
-- On enum_name_or_typedef_name_or_simple_class_name shift to state 123
-- On enum_head shift to state 210
-- On elaborated_type_specifier shift to state 274
-- On delete_expr shift to state 242
-- On decltype_specifier shift to state 243
-- On cv_qualif shift to state 275
-- On cpp_cast_operator shift to state 244
-- On conversion_function_id shift to state 169
-- On cond_expr shift to state 330
-- On class_specifier shift to state 277
-- On class_or_namespace_name_for_qualifier2 shift to state 124
-- On class_or_namespace_name_for_qualifier shift to state 170
-- On class_key shift to state 278
-- On class_head shift to state 301
-- On cast_operator_expr shift to state 261
-- On cast_expr shift to state 331
-- On cast_constructor_expr shift to state 263
-- On basic_type_2 shift to state 264
-- On assign_expr shift to state 354
-- On argument shift to state 812
-- On and_expr shift to state 334
-- On additive_expr shift to state 341
## Reductions:
-- On Tnew Tdelete
--   reduce production option(TColCol) ->

State 272:
## Known stack suffix:
## inclusive_or_expr
## LR(1) items:
inclusive_or_expr -> inclusive_or_expr . TOr exclusive_or_expr [ TWhy TSup_Template TPtVirg TOrLog TOr TEllipsis TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAndLog RDots EOF ]
logical_and_expr -> inclusive_or_expr . [ TWhy TSup_Template TPtVirg TOrLog TEllipsis TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAndLog RDots EOF ]
## Transitions:
-- On TOr shift to state 253
## Reductions:
-- On TWhy TSup_Template TPtVirg TOrLog TEllipsis TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAndLog RDots EOF
--   reduce production logical_and_expr -> inclusive_or_expr

State 273:
## Known stack suffix:
## exclusive_or_expr
## LR(1) items:
exclusive_or_expr -> exclusive_or_expr . TXor and_expr [ TXor TWhy TSup_Template TPtVirg TOrLog TOr TEllipsis TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAndLog RDots EOF ]
inclusive_or_expr -> exclusive_or_expr . [ TWhy TSup_Template TPtVirg TOrLog TOr TEllipsis TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAndLog RDots EOF ]
## Transitions:
-- On TXor shift to state 255
## Reductions:
-- On TWhy TSup_Template TPtVirg TOrLog TOr TEllipsis TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAndLog RDots EOF
--   reduce production inclusive_or_expr -> exclusive_or_expr

State 274:
## Known stack suffix:
## elaborated_type_specifier
## LR(1) items:
type_spec -> elaborated_type_specifier . [ Twchar_t Tvolatile Tvoid Tvirtual Tunsigned Tunion Ttypeof Ttypename Ttypedef Tthread_local Tstruct Tstatic Tsigned Tshort Trestrict Tregister Toperator Tmutable Tlong Tint Tinline Tfriend Tfloat Textern Tenum Tdouble Tdecltype Tconstexpr Tconst Tclass Tchar Tbool Tauto TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtrOpStar TPtVirg TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMod TMinus TInfEq TInf TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TIdent TEqEq TEq TEllipsis TDotStar TDiv TCommentNewline_DefineEndOfMacro TComma TColCol_BeforeTypedef TColCol TCol TCPar_EOL TCPar TCCro TCBrace TAssign TAndLog TAnd RDots EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production type_spec -> elaborated_type_specifier

State 275:
## Known stack suffix:
## cv_qualif
## LR(1) items:
spec_qualif_list -> cv_qualif . [ TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtrOpStar TPtVirg TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMod TMinus TInfEq TInf TIdent TEqEq TEq TEllipsis TDotStar TDiv TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAssign TAndLog TAnd RDots EOF ]
spec_qualif_list -> cv_qualif . spec_qualif_list [ TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtrOpStar TPtVirg TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMod TMinus TInfEq TInf TIdent TEqEq TEq TEllipsis TDotStar TDiv TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAssign TAndLog TAnd RDots EOF ]
## Transitions:
-- On Twchar_t shift to state 1
-- On Tvolatile shift to state 2
-- On Tvoid shift to state 3
-- On Tunsigned shift to state 15
-- On Tunion shift to state 16
-- On Ttypeof shift to state 17
-- On Ttypename shift to state 19
-- On Tstruct shift to state 27
-- On Tsigned shift to state 30
-- On Tshort shift to state 32
-- On Trestrict shift to state 65
-- On Tlong shift to state 38
-- On Tint shift to state 39
-- On Tfloat shift to state 40
-- On Tenum shift to state 66
-- On Tdouble shift to state 41
-- On Tdecltype shift to state 45
-- On Tconst shift to state 76
-- On Tclass shift to state 77
-- On Tchar shift to state 58
-- On Tbool shift to state 60
-- On TIdent_Typedef shift to state 20
-- On TIdent_TemplatenameInQualifier_BeforeTypedef shift to state 21
-- On TIdent_Templatename shift to state 108
-- On TIdent_ClassnameInQualifier_BeforeTypedef shift to state 111
-- On TColCol_BeforeTypedef shift to state 118
-- On type_spec shift to state 204
-- On type_name shift to state 182
-- On type_cplusplus_id shift to state 183
-- On template_id shift to state 120
-- On spec_qualif_list shift to state 276
-- On simple_type_specifier shift to state 206
-- On nested_name_specifier2 shift to state 207
-- On enum_specifier shift to state 209
-- On enum_name_or_typedef_name_or_simple_class_name shift to state 123
-- On enum_head shift to state 210
-- On elaborated_type_specifier shift to state 274
-- On decltype_specifier shift to state 243
-- On cv_qualif shift to state 275
-- On class_specifier shift to state 277
-- On class_or_namespace_name_for_qualifier2 shift to state 124
-- On class_key shift to state 278
-- On class_head shift to state 301
## Reductions:
-- On TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtrOpStar TPtVirg TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMod TMinus TInfEq TInf TIdent TEqEq TEq TEllipsis TDotStar TDiv TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAssign TAndLog TAnd RDots EOF
--   reduce production spec_qualif_list -> cv_qualif

State 276:
## Known stack suffix:
## cv_qualif spec_qualif_list
## LR(1) items:
spec_qualif_list -> cv_qualif spec_qualif_list . [ TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtrOpStar TPtVirg TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMod TMinus TInfEq TInf TIdent TEqEq TEq TEllipsis TDotStar TDiv TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAssign TAndLog TAnd RDots EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production spec_qualif_list -> cv_qualif spec_qualif_list

State 277:
## Known stack suffix:
## class_specifier
## LR(1) items:
type_spec -> class_specifier . [ Twchar_t Tvolatile Tvoid Tvirtual Tunsigned Tunion Ttypeof Ttypename Ttypedef Tthread_local Tstruct Tstatic Tsigned Tshort Trestrict Tregister Toperator Tmutable Tlong Tint Tinline Tfriend Tfloat Textern Tenum Tdouble Tdecltype Tconstexpr Tconst Tclass Tchar Tbool Tauto TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtrOpStar TPtVirg TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMod TMinus TInfEq TInf TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TIdent TEqEq TEq TEllipsis TDotStar TDiv TCommentNewline_DefineEndOfMacro TComma TColCol_BeforeTypedef TColCol TCol TCPar_EOL TCPar TCCro TCBrace TAssign TAndLog TAnd RDots EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production type_spec -> class_specifier

State 278:
## Known stack suffix:
## class_key
## LR(1) items:
class_head -> class_key . [ TOBrace ]
class_head -> class_key . ident option(base_clause) [ TOBrace ]
class_head -> class_key . nested_name_specifier ident option(base_clause) [ TOBrace ]
elaborated_type_specifier -> class_key . ident [ Twchar_t Tvolatile Tvoid Tvirtual Tunsigned Tunion Ttypeof Ttypename Ttypedef Tthread_local Tstruct Tstatic Tsigned Tshort Trestrict Tregister Toperator Tmutable Tlong Tint Tinline Tfriend Tfloat Textern Tenum Tdouble Tdecltype Tconstexpr Tconst Tclass Tchar Tbool Tauto TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtrOpStar TPtVirg TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMod TMinus TInfEq TInf TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TIdent TEqEq TEq TEllipsis TDotStar TDiv TCommentNewline_DefineEndOfMacro TComma TColCol_BeforeTypedef TColCol TCol TCPar_EOL TCPar TCCro TCBrace TAssign TAndLog TAnd RDots EOF ]
## Transitions:
-- On TIdent_Typedef shift to state 68
-- On TIdent_TemplatenameInQualifier shift to state 12
-- On TIdent_ClassnameInQualifier shift to state 112
-- On TIdent shift to state 69
-- On nested_name_specifier shift to state 279
-- On ident shift to state 299
-- On class_or_namespace_name_for_qualifier shift to state 170
## Reductions:
-- On TOBrace
--   reduce production class_head -> class_key

State 279:
## Known stack suffix:
## class_key nested_name_specifier
## LR(1) items:
class_head -> class_key nested_name_specifier . ident option(base_clause) [ TOBrace ]
## Transitions:
-- On TIdent_Typedef shift to state 68
-- On TIdent shift to state 69
-- On ident shift to state 280
## Reductions:

State 280:
## Known stack suffix:
## class_key nested_name_specifier ident
## LR(1) items:
class_head -> class_key nested_name_specifier ident . option(base_clause) [ TOBrace ]
## Transitions:
-- On TCol shift to state 281
-- On option(base_clause) shift to state 297
-- On base_clause shift to state 298
## Reductions:
-- On TOBrace
--   reduce production option(base_clause) ->

State 281:
## Known stack suffix:
## TCol
## LR(1) items:
base_clause -> TCol . listc(base_specifier) [ TOBrace ]
## Transitions:
-- On Tvirtual shift to state 282
-- On Tpublic shift to state 283
-- On Tprotected shift to state 284
-- On Tprivate shift to state 285
-- On TIdent_Typedef shift to state 20
-- On TIdent_TemplatenameInQualifier_BeforeTypedef shift to state 21
-- On TIdent_Templatename shift to state 108
-- On TIdent_ClassnameInQualifier_BeforeTypedef shift to state 111
-- On TIdent shift to state 287
-- On TColCol_BeforeTypedef shift to state 118
-- On type_name shift to state 182
-- On type_cplusplus_id shift to state 288
-- On template_id shift to state 120
-- On nested_name_specifier2 shift to state 207
-- On listc(base_specifier) shift to state 290
-- On enum_name_or_typedef_name_or_simple_class_name shift to state 123
-- On class_or_namespace_name_for_qualifier2 shift to state 124
-- On class_name shift to state 292
-- On base_specifier shift to state 296
-- On access_specifier shift to state 294
## Reductions:

State 282:
## Known stack suffix:
## Tvirtual
## LR(1) items:
base_specifier -> Tvirtual . access_specifier class_name [ TOBrace TComma ]
## Transitions:
-- On Tpublic shift to state 283
-- On Tprotected shift to state 284
-- On Tprivate shift to state 285
-- On access_specifier shift to state 286
## Reductions:

State 283:
## Known stack suffix:
## Tpublic
## LR(1) items:
access_specifier -> Tpublic . [ TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_Templatename TIdent_ClassnameInQualifier_BeforeTypedef TIdent TColCol_BeforeTypedef TCol ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production access_specifier -> Tpublic

State 284:
## Known stack suffix:
## Tprotected
## LR(1) items:
access_specifier -> Tprotected . [ TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_Templatename TIdent_ClassnameInQualifier_BeforeTypedef TIdent TColCol_BeforeTypedef TCol ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production access_specifier -> Tprotected

State 285:
## Known stack suffix:
## Tprivate
## LR(1) items:
access_specifier -> Tprivate . [ TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_Templatename TIdent_ClassnameInQualifier_BeforeTypedef TIdent TColCol_BeforeTypedef TCol ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production access_specifier -> Tprivate

State 286:
## Known stack suffix:
## Tvirtual access_specifier
## LR(1) items:
base_specifier -> Tvirtual access_specifier . class_name [ TOBrace TComma ]
## Transitions:
-- On TIdent_Typedef shift to state 20
-- On TIdent_TemplatenameInQualifier_BeforeTypedef shift to state 21
-- On TIdent_Templatename shift to state 108
-- On TIdent_ClassnameInQualifier_BeforeTypedef shift to state 111
-- On TIdent shift to state 287
-- On TColCol_BeforeTypedef shift to state 118
-- On type_name shift to state 182
-- On type_cplusplus_id shift to state 288
-- On template_id shift to state 120
-- On nested_name_specifier2 shift to state 207
-- On enum_name_or_typedef_name_or_simple_class_name shift to state 123
-- On class_or_namespace_name_for_qualifier2 shift to state 124
-- On class_name shift to state 289
## Reductions:

State 287:
## Known stack suffix:
## TIdent
## LR(1) items:
class_name -> TIdent . [ TOBrace TComma ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production class_name -> TIdent

State 288:
## Known stack suffix:
## type_cplusplus_id
## LR(1) items:
class_name -> type_cplusplus_id . [ TOBrace TComma ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production class_name -> type_cplusplus_id

State 289:
## Known stack suffix:
## Tvirtual access_specifier class_name
## LR(1) items:
base_specifier -> Tvirtual access_specifier class_name . [ TOBrace TComma ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production base_specifier -> Tvirtual access_specifier class_name

State 290:
## Known stack suffix:
## TCol listc(base_specifier)
## LR(1) items:
base_clause -> TCol listc(base_specifier) . [ TOBrace ]
listc(base_specifier) -> listc(base_specifier) . TComma base_specifier [ TOBrace TComma ]
## Transitions:
-- On TComma shift to state 291
## Reductions:
-- On TOBrace
--   reduce production base_clause -> TCol listc(base_specifier)

State 291:
## Known stack suffix:
## listc(base_specifier) TComma
## LR(1) items:
listc(base_specifier) -> listc(base_specifier) TComma . base_specifier [ TOBrace TComma ]
## Transitions:
-- On Tvirtual shift to state 282
-- On Tpublic shift to state 283
-- On Tprotected shift to state 284
-- On Tprivate shift to state 285
-- On TIdent_Typedef shift to state 20
-- On TIdent_TemplatenameInQualifier_BeforeTypedef shift to state 21
-- On TIdent_Templatename shift to state 108
-- On TIdent_ClassnameInQualifier_BeforeTypedef shift to state 111
-- On TIdent shift to state 287
-- On TColCol_BeforeTypedef shift to state 118
-- On type_name shift to state 182
-- On type_cplusplus_id shift to state 288
-- On template_id shift to state 120
-- On nested_name_specifier2 shift to state 207
-- On enum_name_or_typedef_name_or_simple_class_name shift to state 123
-- On class_or_namespace_name_for_qualifier2 shift to state 124
-- On class_name shift to state 292
-- On base_specifier shift to state 293
-- On access_specifier shift to state 294
## Reductions:

State 292:
## Known stack suffix:
## class_name
## LR(1) items:
base_specifier -> class_name . [ TOBrace TComma ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production base_specifier -> class_name

State 293:
## Known stack suffix:
## listc(base_specifier) TComma base_specifier
## LR(1) items:
listc(base_specifier) -> listc(base_specifier) TComma base_specifier . [ TOBrace TComma ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production listc(base_specifier) -> listc(base_specifier) TComma base_specifier

State 294:
## Known stack suffix:
## access_specifier
## LR(1) items:
base_specifier -> access_specifier . class_name [ TOBrace TComma ]
## Transitions:
-- On TIdent_Typedef shift to state 20
-- On TIdent_TemplatenameInQualifier_BeforeTypedef shift to state 21
-- On TIdent_Templatename shift to state 108
-- On TIdent_ClassnameInQualifier_BeforeTypedef shift to state 111
-- On TIdent shift to state 287
-- On TColCol_BeforeTypedef shift to state 118
-- On type_name shift to state 182
-- On type_cplusplus_id shift to state 288
-- On template_id shift to state 120
-- On nested_name_specifier2 shift to state 207
-- On enum_name_or_typedef_name_or_simple_class_name shift to state 123
-- On class_or_namespace_name_for_qualifier2 shift to state 124
-- On class_name shift to state 295
## Reductions:

State 295:
## Known stack suffix:
## access_specifier class_name
## LR(1) items:
base_specifier -> access_specifier class_name . [ TOBrace TComma ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production base_specifier -> access_specifier class_name

State 296:
## Known stack suffix:
## base_specifier
## LR(1) items:
listc(base_specifier) -> base_specifier . [ TOBrace TComma ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production listc(base_specifier) -> base_specifier

State 297:
## Known stack suffix:
## class_key nested_name_specifier ident option(base_clause)
## LR(1) items:
class_head -> class_key nested_name_specifier ident option(base_clause) . [ TOBrace ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production class_head -> class_key nested_name_specifier ident option(base_clause)

State 298:
## Known stack suffix:
## base_clause
## LR(1) items:
option(base_clause) -> base_clause . [ TOBrace ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production option(base_clause) -> base_clause

State 299:
## Known stack suffix:
## class_key ident
## LR(1) items:
class_head -> class_key ident . option(base_clause) [ TOBrace ]
elaborated_type_specifier -> class_key ident . [ Twchar_t Tvolatile Tvoid Tvirtual Tunsigned Tunion Ttypeof Ttypename Ttypedef Tthread_local Tstruct Tstatic Tsigned Tshort Trestrict Tregister Toperator Tmutable Tlong Tint Tinline Tfriend Tfloat Textern Tenum Tdouble Tdecltype Tconstexpr Tconst Tclass Tchar Tbool Tauto TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtrOpStar TPtVirg TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMod TMinus TInfEq TInf TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TIdent TEqEq TEq TEllipsis TDotStar TDiv TCommentNewline_DefineEndOfMacro TComma TColCol_BeforeTypedef TColCol TCol TCPar_EOL TCPar TCCro TCBrace TAssign TAndLog TAnd RDots EOF ]
## Transitions:
-- On TCol shift to state 281
-- On option(base_clause) shift to state 300
-- On base_clause shift to state 298
## Reductions:
-- On Twchar_t Tvolatile Tvoid Tvirtual Tunsigned Tunion Ttypeof Ttypename Ttypedef Tthread_local Tstruct Tstatic Tsigned Tshort Trestrict Tregister Toperator Tmutable Tlong Tint Tinline Tfriend Tfloat Textern Tenum Tdouble Tdecltype Tconstexpr Tconst Tclass Tchar Tbool Tauto TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtrOpStar TPtVirg TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMod TMinus TInfEq TInf TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TIdent TEqEq TEq TEllipsis TDotStar TDiv TCommentNewline_DefineEndOfMacro TComma TColCol_BeforeTypedef TColCol TCPar_EOL TCPar TCCro TCBrace TAssign TAndLog TAnd RDots EOF
--   reduce production elaborated_type_specifier -> class_key ident
-- On TOBrace
--   reduce production option(base_clause) ->

State 300:
## Known stack suffix:
## class_key ident option(base_clause)
## LR(1) items:
class_head -> class_key ident option(base_clause) . [ TOBrace ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production class_head -> class_key ident option(base_clause)

State 301:
## Known stack suffix:
## class_head
## LR(1) items:
class_specifier -> class_head . TOBrace optl(member_specification) TCBrace [ Twchar_t Tvolatile Tvoid Tvirtual Tunsigned Tunion Ttypeof Ttypename Ttypedef Tthread_local Tstruct Tstatic Tsigned Tshort Trestrict Tregister Toperator Tmutable Tlong Tint Tinline Tfriend Tfloat Textern Tenum Tdouble Tdecltype Tconstexpr Tconst Tclass Tchar Tbool Tauto TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtrOpStar TPtVirg TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMod TMinus TInfEq TInf TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TIdent TEqEq TEq TEllipsis TDotStar TDiv TCommentNewline_DefineEndOfMacro TComma TColCol_BeforeTypedef TColCol TCol TCPar_EOL TCPar TCCro TCBrace TAssign TAndLog TAnd RDots EOF ]
## Transitions:
-- On TOBrace shift to state 302
## Reductions:

State 302:
## Known stack suffix:
## class_head TOBrace
## LR(1) items:
class_specifier -> class_head TOBrace . optl(member_specification) TCBrace [ Twchar_t Tvolatile Tvoid Tvirtual Tunsigned Tunion Ttypeof Ttypename Ttypedef Tthread_local Tstruct Tstatic Tsigned Tshort Trestrict Tregister Toperator Tmutable Tlong Tint Tinline Tfriend Tfloat Textern Tenum Tdouble Tdecltype Tconstexpr Tconst Tclass Tchar Tbool Tauto TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtrOpStar TPtVirg TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMod TMinus TInfEq TInf TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TIdent TEqEq TEq TEllipsis TDotStar TDiv TCommentNewline_DefineEndOfMacro TComma TColCol_BeforeTypedef TColCol TCol TCPar_EOL TCPar TCCro TCBrace TAssign TAndLog TAnd RDots EOF ]
## Transitions:
-- On Twchar_t shift to state 1
-- On Tvolatile shift to state 2
-- On Tvoid shift to state 3
-- On Tvirtual shift to state 303
-- On Tusing shift to state 304
-- On Tunsigned shift to state 15
-- On Tunion shift to state 16
-- On Ttypeof shift to state 17
-- On Ttypename shift to state 19
-- On Ttypedef shift to state 96
-- On Tthread_local shift to state 97
-- On Ttemplate shift to state 312
-- On Tstruct shift to state 27
-- On Tstatic shift to state 98
-- On Tsigned shift to state 30
-- On Tshort shift to state 32
-- On Trestrict shift to state 65
-- On Tregister shift to state 99
-- On Tpublic shift to state 283
-- On Tprotected shift to state 284
-- On Tprivate shift to state 285
-- On Tmutable shift to state 100
-- On Tlong shift to state 38
-- On Tint shift to state 39
-- On Tinline shift to state 752
-- On Tfriend shift to state 102
-- On Tfloat shift to state 40
-- On Textern shift to state 103
-- On Texplicit shift to state 753
-- On Tenum shift to state 66
-- On Tdouble shift to state 41
-- On Tdecltype shift to state 45
-- On Tconstexpr shift to state 104
-- On Tconst shift to state 76
-- On Tclass shift to state 77
-- On Tchar shift to state 58
-- On Tbool shift to state 60
-- On Tauto shift to state 105
-- On TPtVirg shift to state 754
-- On TIdent_Typedef shift to state 20
-- On TIdent_TemplatenameInQualifier_BeforeTypedef shift to state 21
-- On TIdent_TemplatenameInQualifier shift to state 12
-- On TIdent_Templatename shift to state 108
-- On TIdent_ClassnameInQualifier_BeforeTypedef shift to state 111
-- On TIdent_ClassnameInQualifier shift to state 112
-- On TColCol_BeforeTypedef shift to state 118
-- On using_declaration shift to state 755
-- On type_spec shift to state 314
-- On type_name shift to state 182
-- On type_cplusplus_id shift to state 183
-- On template_id shift to state 120
-- On template_declaration shift to state 756
-- On storage_class_spec shift to state 316
-- On simple_type_specifier shift to state 206
-- On qualified_id shift to state 757
-- On optl(member_specification) shift to state 759
-- On nested_name_specifier2 shift to state 207
-- On nested_name_specifier shift to state 165
-- On member_specification shift to state 761
-- On member_declaration shift to state 762
-- On function_spec shift to state 437
-- On function_definition shift to state 764
-- On field_declaration shift to state 765
-- On enum_specifier shift to state 209
-- On enum_name_or_typedef_name_or_simple_class_name shift to state 123
-- On enum_head shift to state 210
-- On elaborated_type_specifier shift to state 274
-- On dtor_spec shift to state 766
-- On decltype_specifier shift to state 243
-- On decl_spec_seq shift to state 780
-- On decl_spec shift to state 473
-- On cv_qualif shift to state 475
-- On ctor_spec shift to state 795
-- On ctor_dtor_member shift to state 808
-- On class_specifier shift to state 277
-- On class_or_namespace_name_for_qualifier2 shift to state 124
-- On class_or_namespace_name_for_qualifier shift to state 170
-- On class_key shift to state 278
-- On class_head shift to state 301
-- On access_specifier shift to state 809
## Reductions:
-- On TIdent_Constructor
--   reduce production ctor_spec ->
-- On TTilde
--   reduce production dtor_spec ->
-- On TCBrace
--   reduce production optl(member_specification) ->

State 303:
## Known stack suffix:
## Tvirtual
## LR(1) items:
dtor_spec -> Tvirtual . [ TTilde ]
function_spec -> Tvirtual . [ Twchar_t Tvolatile Tvoid Tvirtual Tunsigned Tunion Ttypeof Ttypename Ttypedef Tthread_local Tstruct Tstatic Tsigned Tshort Trestrict Tregister Toperator Tmutable Tlong Tint Tinline Tfriend Tfloat Textern Tenum Tdouble Tdecltype Tconstexpr Tconst Tclass Tchar Tbool Tauto TPtVirg TOPar TMul TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TIdent TColCol_BeforeTypedef TColCol TCol TAndLog TAnd ]
## Transitions:
## Reductions:
-- On TTilde
--   reduce production dtor_spec -> Tvirtual
-- On Twchar_t Tvolatile Tvoid Tvirtual Tunsigned Tunion Ttypeof Ttypename Ttypedef Tthread_local Tstruct Tstatic Tsigned Tshort Trestrict Tregister Toperator Tmutable Tlong Tint Tinline Tfriend Tfloat Textern Tenum Tdouble Tdecltype Tconstexpr Tconst Tclass Tchar Tbool Tauto TPtVirg TOPar TMul TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TIdent TColCol_BeforeTypedef TColCol TCol TAndLog TAnd
--   reduce production function_spec -> Tvirtual

State 304:
## Known stack suffix:
## Tusing
## LR(1) items:
using_declaration -> Tusing . option(Ttypename) option(TColCol) nested_name_specifier unqualified_id TPtVirg [ Twchar_t Tvolatile Tvoid Tvirtual Tusing Tunsigned Tunion Ttypeof Ttypename Ttypedef Tthread_local Ttemplate Tstruct Tstatic Tsigned Tshort Trestrict Tregister Tpublic Tprotected Tprivate Tmutable Tlong Tint Tinline Tfriend Tfloat Textern Texplicit Tenum Tdouble Tdecltype Tconstexpr Tconst Tclass Tchar Tbool Tauto TTilde TPtVirg TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_Constructor TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TColCol_BeforeTypedef TCBrace ]
using_declaration -> Tusing . option(Ttypename) option(TColCol) unqualified_id TPtVirg [ Twchar_t Tvolatile Tvoid Tvirtual Tusing Tunsigned Tunion Ttypeof Ttypename Ttypedef Tthread_local Ttemplate Tstruct Tstatic Tsigned Tshort Trestrict Tregister Tpublic Tprotected Tprivate Tmutable Tlong Tint Tinline Tfriend Tfloat Textern Texplicit Tenum Tdouble Tdecltype Tconstexpr Tconst Tclass Tchar Tbool Tauto TTilde TPtVirg TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_Constructor TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TColCol_BeforeTypedef TCBrace ]
## Transitions:
-- On Ttypename shift to state 6
-- On option(Ttypename) shift to state 305
## Reductions:
-- On Toperator TIdent_TemplatenameInQualifier TIdent_ClassnameInQualifier TIdent TColCol
--   reduce production option(Ttypename) ->

State 305:
## Known stack suffix:
## Tusing option(Ttypename)
## LR(1) items:
using_declaration -> Tusing option(Ttypename) . option(TColCol) nested_name_specifier unqualified_id TPtVirg [ Twhile Twchar_t_Constr Twchar_t Tvolatile Tvoid Tvirtual Tusing Tunsigned Tunion Ttypeof Ttypename Ttypeid Ttypedef Ttry Ttrue Tthrow Tthread_local Tthis Ttemplate Tswitch Tstruct Tstatic_cast Tstatic Tsizeof Tsigned Tshort_Constr Tshort Treturn Trestrict Treinterpret_cast Tregister Tpublic Tprotected Tprivate Toperator Tnullptr Tnull Tnew Tnamespace Tmutable Tlong_Constr Tlong Tint_Constr Tint Tinline Tif Tgoto Tfriend Tfor Tfloat_Constr Tfloat Tfalse Textern Texplicit Tenum Telse Tdynamic_cast Tdouble_Constr Tdouble Tdo Tdelete Tdefault Tdecltype Tcontinue Tconstexpr Tconst_cast Tconst Tclass Tchar_Constr Tchar Tcase Tbreak Tbool_Constr Tbool Tauto Tasm TUndef TTilde TString TPtVirg TPlus TOPar TOCro_Lambda TOBrace TMul TMinus TInt TInclude TInc TIfdefelse TIfdefelif TIfdefVersion TIfdefMisc TIfdefBool TIfdef TIdent_TypedefConstr TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_MacroString TIdent_MacroStmt TIdent_MacroIterator TIdent_MacroDecl TIdent_Constructor TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TIdent TFloat TEndif TEllipsis TDefine TDec TCppDirectiveOther TCommentNewline_DefineEndOfMacro TColCol_BeforeTypedef TColCol TChar TCBrace TBang TAndLog TAnd LDots EOF ]
using_declaration -> Tusing option(Ttypename) . option(TColCol) unqualified_id TPtVirg [ Twhile Twchar_t_Constr Twchar_t Tvolatile Tvoid Tvirtual Tusing Tunsigned Tunion Ttypeof Ttypename Ttypeid Ttypedef Ttry Ttrue Tthrow Tthread_local Tthis Ttemplate Tswitch Tstruct Tstatic_cast Tstatic Tsizeof Tsigned Tshort_Constr Tshort Treturn Trestrict Treinterpret_cast Tregister Tpublic Tprotected Tprivate Toperator Tnullptr Tnull Tnew Tnamespace Tmutable Tlong_Constr Tlong Tint_Constr Tint Tinline Tif Tgoto Tfriend Tfor Tfloat_Constr Tfloat Tfalse Textern Texplicit Tenum Telse Tdynamic_cast Tdouble_Constr Tdouble Tdo Tdelete Tdefault Tdecltype Tcontinue Tconstexpr Tconst_cast Tconst Tclass Tchar_Constr Tchar Tcase Tbreak Tbool_Constr Tbool Tauto Tasm TUndef TTilde TString TPtVirg TPlus TOPar TOCro_Lambda TOBrace TMul TMinus TInt TInclude TInc TIfdefelse TIfdefelif TIfdefVersion TIfdefMisc TIfdefBool TIfdef TIdent_TypedefConstr TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_MacroString TIdent_MacroStmt TIdent_MacroIterator TIdent_MacroDecl TIdent_Constructor TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TIdent TFloat TEndif TEllipsis TDefine TDec TCppDirectiveOther TCommentNewline_DefineEndOfMacro TColCol_BeforeTypedef TColCol TChar TCBrace TBang TAndLog TAnd LDots EOF ]
## Transitions:
-- On TColCol shift to state 8
-- On option(TColCol) shift to state 306
## Reductions:
-- On Toperator TIdent_TemplatenameInQualifier TIdent_ClassnameInQualifier TIdent
--   reduce production option(TColCol) ->

State 306:
## Known stack suffix:
## Tusing option(Ttypename) option(TColCol)
## LR(1) items:
using_declaration -> Tusing option(Ttypename) option(TColCol) . nested_name_specifier unqualified_id TPtVirg [ Twhile Twchar_t_Constr Twchar_t Tvolatile Tvoid Tvirtual Tusing Tunsigned Tunion Ttypeof Ttypename Ttypeid Ttypedef Ttry Ttrue Tthrow Tthread_local Tthis Ttemplate Tswitch Tstruct Tstatic_cast Tstatic Tsizeof Tsigned Tshort_Constr Tshort Treturn Trestrict Treinterpret_cast Tregister Tpublic Tprotected Tprivate Toperator Tnullptr Tnull Tnew Tnamespace Tmutable Tlong_Constr Tlong Tint_Constr Tint Tinline Tif Tgoto Tfriend Tfor Tfloat_Constr Tfloat Tfalse Textern Texplicit Tenum Telse Tdynamic_cast Tdouble_Constr Tdouble Tdo Tdelete Tdefault Tdecltype Tcontinue Tconstexpr Tconst_cast Tconst Tclass Tchar_Constr Tchar Tcase Tbreak Tbool_Constr Tbool Tauto Tasm TUndef TTilde TString TPtVirg TPlus TOPar TOCro_Lambda TOBrace TMul TMinus TInt TInclude TInc TIfdefelse TIfdefelif TIfdefVersion TIfdefMisc TIfdefBool TIfdef TIdent_TypedefConstr TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_MacroString TIdent_MacroStmt TIdent_MacroIterator TIdent_MacroDecl TIdent_Constructor TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TIdent TFloat TEndif TEllipsis TDefine TDec TCppDirectiveOther TCommentNewline_DefineEndOfMacro TColCol_BeforeTypedef TColCol TChar TCBrace TBang TAndLog TAnd LDots EOF ]
using_declaration -> Tusing option(Ttypename) option(TColCol) . unqualified_id TPtVirg [ Twhile Twchar_t_Constr Twchar_t Tvolatile Tvoid Tvirtual Tusing Tunsigned Tunion Ttypeof Ttypename Ttypeid Ttypedef Ttry Ttrue Tthrow Tthread_local Tthis Ttemplate Tswitch Tstruct Tstatic_cast Tstatic Tsizeof Tsigned Tshort_Constr Tshort Treturn Trestrict Treinterpret_cast Tregister Tpublic Tprotected Tprivate Toperator Tnullptr Tnull Tnew Tnamespace Tmutable Tlong_Constr Tlong Tint_Constr Tint Tinline Tif Tgoto Tfriend Tfor Tfloat_Constr Tfloat Tfalse Textern Texplicit Tenum Telse Tdynamic_cast Tdouble_Constr Tdouble Tdo Tdelete Tdefault Tdecltype Tcontinue Tconstexpr Tconst_cast Tconst Tclass Tchar_Constr Tchar Tcase Tbreak Tbool_Constr Tbool Tauto Tasm TUndef TTilde TString TPtVirg TPlus TOPar TOCro_Lambda TOBrace TMul TMinus TInt TInclude TInc TIfdefelse TIfdefelif TIfdefVersion TIfdefMisc TIfdefBool TIfdef TIdent_TypedefConstr TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_MacroString TIdent_MacroStmt TIdent_MacroIterator TIdent_MacroDecl TIdent_Constructor TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TIdent TFloat TEndif TEllipsis TDefine TDec TCppDirectiveOther TCommentNewline_DefineEndOfMacro TColCol_BeforeTypedef TColCol TChar TCBrace TBang TAndLog TAnd LDots EOF ]
## Transitions:
-- On Toperator shift to state 34
-- On TIdent_TemplatenameInQualifier shift to state 12
-- On TIdent_ClassnameInQualifier shift to state 112
-- On TIdent shift to state 166
-- On unqualified_id shift to state 307
-- On operator_function_id shift to state 168
-- On nested_name_specifier shift to state 309
-- On conversion_function_id shift to state 169
-- On class_or_namespace_name_for_qualifier shift to state 170
## Reductions:

State 307:
## Known stack suffix:
## Tusing option(Ttypename) option(TColCol) unqualified_id
## LR(1) items:
using_declaration -> Tusing option(Ttypename) option(TColCol) unqualified_id . TPtVirg [ Twhile Twchar_t_Constr Twchar_t Tvolatile Tvoid Tvirtual Tusing Tunsigned Tunion Ttypeof Ttypename Ttypeid Ttypedef Ttry Ttrue Tthrow Tthread_local Tthis Ttemplate Tswitch Tstruct Tstatic_cast Tstatic Tsizeof Tsigned Tshort_Constr Tshort Treturn Trestrict Treinterpret_cast Tregister Tpublic Tprotected Tprivate Toperator Tnullptr Tnull Tnew Tnamespace Tmutable Tlong_Constr Tlong Tint_Constr Tint Tinline Tif Tgoto Tfriend Tfor Tfloat_Constr Tfloat Tfalse Textern Texplicit Tenum Telse Tdynamic_cast Tdouble_Constr Tdouble Tdo Tdelete Tdefault Tdecltype Tcontinue Tconstexpr Tconst_cast Tconst Tclass Tchar_Constr Tchar Tcase Tbreak Tbool_Constr Tbool Tauto Tasm TUndef TTilde TString TPtVirg TPlus TOPar TOCro_Lambda TOBrace TMul TMinus TInt TInclude TInc TIfdefelse TIfdefelif TIfdefVersion TIfdefMisc TIfdefBool TIfdef TIdent_TypedefConstr TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_MacroString TIdent_MacroStmt TIdent_MacroIterator TIdent_MacroDecl TIdent_Constructor TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TIdent TFloat TEndif TEllipsis TDefine TDec TCppDirectiveOther TCommentNewline_DefineEndOfMacro TColCol_BeforeTypedef TColCol TChar TCBrace TBang TAndLog TAnd LDots EOF ]
## Transitions:
-- On TPtVirg shift to state 308
## Reductions:

State 308:
## Known stack suffix:
## Tusing option(Ttypename) option(TColCol) unqualified_id TPtVirg
## LR(1) items:
using_declaration -> Tusing option(Ttypename) option(TColCol) unqualified_id TPtVirg . [ Twhile Twchar_t_Constr Twchar_t Tvolatile Tvoid Tvirtual Tusing Tunsigned Tunion Ttypeof Ttypename Ttypeid Ttypedef Ttry Ttrue Tthrow Tthread_local Tthis Ttemplate Tswitch Tstruct Tstatic_cast Tstatic Tsizeof Tsigned Tshort_Constr Tshort Treturn Trestrict Treinterpret_cast Tregister Tpublic Tprotected Tprivate Toperator Tnullptr Tnull Tnew Tnamespace Tmutable Tlong_Constr Tlong Tint_Constr Tint Tinline Tif Tgoto Tfriend Tfor Tfloat_Constr Tfloat Tfalse Textern Texplicit Tenum Telse Tdynamic_cast Tdouble_Constr Tdouble Tdo Tdelete Tdefault Tdecltype Tcontinue Tconstexpr Tconst_cast Tconst Tclass Tchar_Constr Tchar Tcase Tbreak Tbool_Constr Tbool Tauto Tasm TUndef TTilde TString TPtVirg TPlus TOPar TOCro_Lambda TOBrace TMul TMinus TInt TInclude TInc TIfdefelse TIfdefelif TIfdefVersion TIfdefMisc TIfdefBool TIfdef TIdent_TypedefConstr TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_MacroString TIdent_MacroStmt TIdent_MacroIterator TIdent_MacroDecl TIdent_Constructor TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TIdent TFloat TEndif TEllipsis TDefine TDec TCppDirectiveOther TCommentNewline_DefineEndOfMacro TColCol_BeforeTypedef TColCol TChar TCBrace TBang TAndLog TAnd LDots EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production using_declaration -> Tusing option(Ttypename) option(TColCol) unqualified_id TPtVirg

State 309:
## Known stack suffix:
## Tusing option(Ttypename) option(TColCol) nested_name_specifier
## LR(1) items:
using_declaration -> Tusing option(Ttypename) option(TColCol) nested_name_specifier . unqualified_id TPtVirg [ Twhile Twchar_t_Constr Twchar_t Tvolatile Tvoid Tvirtual Tusing Tunsigned Tunion Ttypeof Ttypename Ttypeid Ttypedef Ttry Ttrue Tthrow Tthread_local Tthis Ttemplate Tswitch Tstruct Tstatic_cast Tstatic Tsizeof Tsigned Tshort_Constr Tshort Treturn Trestrict Treinterpret_cast Tregister Tpublic Tprotected Tprivate Toperator Tnullptr Tnull Tnew Tnamespace Tmutable Tlong_Constr Tlong Tint_Constr Tint Tinline Tif Tgoto Tfriend Tfor Tfloat_Constr Tfloat Tfalse Textern Texplicit Tenum Telse Tdynamic_cast Tdouble_Constr Tdouble Tdo Tdelete Tdefault Tdecltype Tcontinue Tconstexpr Tconst_cast Tconst Tclass Tchar_Constr Tchar Tcase Tbreak Tbool_Constr Tbool Tauto Tasm TUndef TTilde TString TPtVirg TPlus TOPar TOCro_Lambda TOBrace TMul TMinus TInt TInclude TInc TIfdefelse TIfdefelif TIfdefVersion TIfdefMisc TIfdefBool TIfdef TIdent_TypedefConstr TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_MacroString TIdent_MacroStmt TIdent_MacroIterator TIdent_MacroDecl TIdent_Constructor TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TIdent TFloat TEndif TEllipsis TDefine TDec TCppDirectiveOther TCommentNewline_DefineEndOfMacro TColCol_BeforeTypedef TColCol TChar TCBrace TBang TAndLog TAnd LDots EOF ]
## Transitions:
-- On Toperator shift to state 34
-- On TIdent shift to state 166
-- On unqualified_id shift to state 310
-- On operator_function_id shift to state 168
-- On conversion_function_id shift to state 169
## Reductions:

State 310:
## Known stack suffix:
## Tusing option(Ttypename) option(TColCol) nested_name_specifier unqualified_id
## LR(1) items:
using_declaration -> Tusing option(Ttypename) option(TColCol) nested_name_specifier unqualified_id . TPtVirg [ Twhile Twchar_t_Constr Twchar_t Tvolatile Tvoid Tvirtual Tusing Tunsigned Tunion Ttypeof Ttypename Ttypeid Ttypedef Ttry Ttrue Tthrow Tthread_local Tthis Ttemplate Tswitch Tstruct Tstatic_cast Tstatic Tsizeof Tsigned Tshort_Constr Tshort Treturn Trestrict Treinterpret_cast Tregister Tpublic Tprotected Tprivate Toperator Tnullptr Tnull Tnew Tnamespace Tmutable Tlong_Constr Tlong Tint_Constr Tint Tinline Tif Tgoto Tfriend Tfor Tfloat_Constr Tfloat Tfalse Textern Texplicit Tenum Telse Tdynamic_cast Tdouble_Constr Tdouble Tdo Tdelete Tdefault Tdecltype Tcontinue Tconstexpr Tconst_cast Tconst Tclass Tchar_Constr Tchar Tcase Tbreak Tbool_Constr Tbool Tauto Tasm TUndef TTilde TString TPtVirg TPlus TOPar TOCro_Lambda TOBrace TMul TMinus TInt TInclude TInc TIfdefelse TIfdefelif TIfdefVersion TIfdefMisc TIfdefBool TIfdef TIdent_TypedefConstr TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_MacroString TIdent_MacroStmt TIdent_MacroIterator TIdent_MacroDecl TIdent_Constructor TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TIdent TFloat TEndif TEllipsis TDefine TDec TCppDirectiveOther TCommentNewline_DefineEndOfMacro TColCol_BeforeTypedef TColCol TChar TCBrace TBang TAndLog TAnd LDots EOF ]
## Transitions:
-- On TPtVirg shift to state 311
## Reductions:

State 311:
## Known stack suffix:
## Tusing option(Ttypename) option(TColCol) nested_name_specifier unqualified_id TPtVirg
## LR(1) items:
using_declaration -> Tusing option(Ttypename) option(TColCol) nested_name_specifier unqualified_id TPtVirg . [ Twhile Twchar_t_Constr Twchar_t Tvolatile Tvoid Tvirtual Tusing Tunsigned Tunion Ttypeof Ttypename Ttypeid Ttypedef Ttry Ttrue Tthrow Tthread_local Tthis Ttemplate Tswitch Tstruct Tstatic_cast Tstatic Tsizeof Tsigned Tshort_Constr Tshort Treturn Trestrict Treinterpret_cast Tregister Tpublic Tprotected Tprivate Toperator Tnullptr Tnull Tnew Tnamespace Tmutable Tlong_Constr Tlong Tint_Constr Tint Tinline Tif Tgoto Tfriend Tfor Tfloat_Constr Tfloat Tfalse Textern Texplicit Tenum Telse Tdynamic_cast Tdouble_Constr Tdouble Tdo Tdelete Tdefault Tdecltype Tcontinue Tconstexpr Tconst_cast Tconst Tclass Tchar_Constr Tchar Tcase Tbreak Tbool_Constr Tbool Tauto Tasm TUndef TTilde TString TPtVirg TPlus TOPar TOCro_Lambda TOBrace TMul TMinus TInt TInclude TInc TIfdefelse TIfdefelif TIfdefVersion TIfdefMisc TIfdefBool TIfdef TIdent_TypedefConstr TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_MacroString TIdent_MacroStmt TIdent_MacroIterator TIdent_MacroDecl TIdent_Constructor TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TIdent TFloat TEndif TEllipsis TDefine TDec TCppDirectiveOther TCommentNewline_DefineEndOfMacro TColCol_BeforeTypedef TColCol TChar TCBrace TBang TAndLog TAnd LDots EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production using_declaration -> Tusing option(Ttypename) option(TColCol) nested_name_specifier unqualified_id TPtVirg

State 312:
## Known stack suffix:
## Ttemplate
## LR(1) items:
template_declaration -> Ttemplate . TInf_Template listc(template_parameter) TSup_Template declaration [ Twchar_t Tvolatile Tvoid Tvirtual Tusing Tunsigned Tunion Ttypeof Ttypename Ttypedef Tthread_local Ttemplate Tstruct Tstatic Tsigned Tshort Trestrict Tregister Tpublic Tprotected Tprivate Tmutable Tlong Tint Tinline Tfriend Tfloat Textern Texplicit Tenum Tdouble Tdecltype Tconstexpr Tconst Tclass Tchar Tbool Tauto TTilde TPtVirg TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_Constructor TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TColCol_BeforeTypedef TCBrace ]
## Transitions:
-- On TInf_Template shift to state 313
## Reductions:

State 313:
## Known stack suffix:
## Ttemplate TInf_Template
## LR(1) items:
template_declaration -> Ttemplate TInf_Template . listc(template_parameter) TSup_Template declaration [ Twchar_t Tvolatile Tvoid Tvirtual Tusing Tunsigned Tunion Ttypeof Ttypename Ttypedef Tthread_local Ttemplate Tstruct Tstatic Tsigned Tshort Trestrict Tregister Tpublic Tprotected Tprivate Tmutable Tlong Tint Tinline Tfriend Tfloat Textern Texplicit Tenum Tdouble Tdecltype Tconstexpr Tconst Tclass Tchar Tbool Tauto TTilde TPtVirg TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_Constructor TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TColCol_BeforeTypedef TCBrace ]
## Transitions:
-- On Twchar_t shift to state 1
-- On Tvolatile shift to state 2
-- On Tvoid shift to state 3
-- On Tvirtual shift to state 4
-- On Tunsigned shift to state 15
-- On Tunion shift to state 16
-- On Ttypeof shift to state 17
-- On Ttypename shift to state 19
-- On Ttypedef shift to state 96
-- On Tthread_local shift to state 97
-- On Tstruct shift to state 27
-- On Tstatic shift to state 98
-- On Tsigned shift to state 30
-- On Tshort shift to state 32
-- On Trestrict shift to state 65
-- On Tregister shift to state 99
-- On Tmutable shift to state 100
-- On Tlong shift to state 38
-- On Tint shift to state 39
-- On Tinline shift to state 101
-- On Tfriend shift to state 102
-- On Tfloat shift to state 40
-- On Textern shift to state 103
-- On Tenum shift to state 66
-- On Tdouble shift to state 41
-- On Tdecltype shift to state 45
-- On Tconstexpr shift to state 104
-- On Tconst shift to state 76
-- On Tclass shift to state 77
-- On Tchar shift to state 58
-- On Tbool shift to state 60
-- On Tauto shift to state 105
-- On TIdent_Typedef shift to state 20
-- On TIdent_TemplatenameInQualifier_BeforeTypedef shift to state 21
-- On TIdent_Templatename shift to state 108
-- On TIdent_ClassnameInQualifier_BeforeTypedef shift to state 111
-- On TColCol_BeforeTypedef shift to state 118
-- On type_spec shift to state 314
-- On type_name shift to state 182
-- On type_cplusplus_id shift to state 183
-- On template_parameter shift to state 315
-- On template_id shift to state 120
-- On storage_class_spec shift to state 316
-- On simple_type_specifier shift to state 206
-- On parameter_decl shift to state 317
-- On nested_name_specifier2 shift to state 207
-- On listc(template_parameter) shift to state 318
-- On function_spec shift to state 437
-- On enum_specifier shift to state 209
-- On enum_name_or_typedef_name_or_simple_class_name shift to state 123
-- On enum_head shift to state 210
-- On elaborated_type_specifier shift to state 274
-- On decltype_specifier shift to state 243
-- On decl_spec_seq shift to state 441
-- On decl_spec shift to state 473
-- On cv_qualif shift to state 475
-- On class_specifier shift to state 277
-- On class_or_namespace_name_for_qualifier2 shift to state 124
-- On class_key shift to state 278
-- On class_head shift to state 301
## Reductions:

State 314:
## Known stack suffix:
## type_spec
## LR(1) items:
decl_spec -> type_spec . [ Twchar_t Tvolatile Tvoid Tvirtual Tunsigned Tunion Ttypeof Ttypename Ttypedef Tthread_local Tstruct Tstatic Tsigned Tshort Trestrict Tregister Toperator Tmutable Tlong Tint Tinline Tfriend Tfloat Textern Tenum Tdouble Tdecltype Tconstexpr Tconst Tclass Tchar Tbool Tauto TSup_Template TPtVirg TOPar TOCro TMul TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TIdent TEq TComma TColCol_BeforeTypedef TColCol TCol TCPar TAndLog TAnd ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production decl_spec -> type_spec

State 315:
## Known stack suffix:
## template_parameter
## LR(1) items:
listc(template_parameter) -> template_parameter . [ TSup_Template TComma ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production listc(template_parameter) -> template_parameter

State 316:
## Known stack suffix:
## storage_class_spec
## LR(1) items:
decl_spec -> storage_class_spec . [ Twchar_t Tvolatile Tvoid Tvirtual Tunsigned Tunion Ttypeof Ttypename Ttypedef Tthread_local Tstruct Tstatic Tsigned Tshort Trestrict Tregister Toperator Tmutable Tlong Tint Tinline Tfriend Tfloat Textern Tenum Tdouble Tdecltype Tconstexpr Tconst Tclass Tchar Tbool Tauto TSup_Template TPtVirg TOPar TOCro TMul TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TIdent TEq TComma TColCol_BeforeTypedef TColCol TCol TCPar TAndLog TAnd ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production decl_spec -> storage_class_spec

State 317:
## Known stack suffix:
## parameter_decl
## LR(1) items:
template_parameter -> parameter_decl . [ TSup_Template TComma ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production template_parameter -> parameter_decl

State 318:
## Known stack suffix:
## Ttemplate TInf_Template listc(template_parameter)
## LR(1) items:
listc(template_parameter) -> listc(template_parameter) . TComma template_parameter [ TSup_Template TComma ]
template_declaration -> Ttemplate TInf_Template listc(template_parameter) . TSup_Template declaration [ Twchar_t Tvolatile Tvoid Tvirtual Tusing Tunsigned Tunion Ttypeof Ttypename Ttypedef Tthread_local Ttemplate Tstruct Tstatic Tsigned Tshort Trestrict Tregister Tpublic Tprotected Tprivate Tnamespace Tmutable Tlong Tint Tinline Tfriend Tfloat Textern Texplicit Tenum Tdouble Tdecltype Tconstexpr Tconst Tclass Tchar Tbool Tauto Tasm TUndef TTilde TPtVirg TInclude TIfdefelse TIfdefelif TIfdefVersion TIfdefMisc TIfdefBool TIfdef TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_MacroDecl TIdent_Constructor TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TEndif TDefine TCppDirectiveOther TColCol_BeforeTypedef TCBrace ]
## Transitions:
-- On TSup_Template shift to state 319
-- On TComma shift to state 750
## Reductions:

State 319:
## Known stack suffix:
## Ttemplate TInf_Template listc(template_parameter) TSup_Template
## LR(1) items:
template_declaration -> Ttemplate TInf_Template listc(template_parameter) TSup_Template . declaration [ Twchar_t Tvolatile Tvoid Tvirtual Tusing Tunsigned Tunion Ttypeof Ttypename Ttypedef Tthread_local Ttemplate Tstruct Tstatic Tsigned Tshort Trestrict Tregister Tpublic Tprotected Tprivate Tnamespace Tmutable Tlong Tint Tinline Tfriend Tfloat Textern Texplicit Tenum Tdouble Tdecltype Tconstexpr Tconst Tclass Tchar Tbool Tauto Tasm TUndef TTilde TPtVirg TInclude TIfdefelse TIfdefelif TIfdefVersion TIfdefMisc TIfdefBool TIfdef TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_MacroDecl TIdent_Constructor TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TEndif TDefine TCppDirectiveOther TColCol_BeforeTypedef TCBrace ]
## Transitions:
-- On Twchar_t shift to state 1
-- On Tvolatile shift to state 2
-- On Tvoid shift to state 3
-- On Tvirtual shift to state 4
-- On Tusing shift to state 5
-- On Tunsigned shift to state 15
-- On Tunion shift to state 16
-- On Ttypeof shift to state 17
-- On Ttypename shift to state 19
-- On Ttypedef shift to state 96
-- On Tthread_local shift to state 97
-- On Ttemplate shift to state 320
-- On Tstruct shift to state 27
-- On Tstatic shift to state 323
-- On Tsigned shift to state 30
-- On Tshort shift to state 32
-- On Trestrict shift to state 65
-- On Tregister shift to state 99
-- On Tnamespace shift to state 361
-- On Tmutable shift to state 100
-- On Tlong shift to state 38
-- On Tint shift to state 39
-- On Tinline shift to state 363
-- On Tfriend shift to state 102
-- On Tfloat shift to state 40
-- On Textern shift to state 364
-- On Tenum shift to state 66
-- On Tdouble shift to state 41
-- On Tdecltype shift to state 45
-- On Tconstexpr shift to state 104
-- On Tconst shift to state 76
-- On Tclass shift to state 77
-- On Tchar shift to state 58
-- On Tbool shift to state 60
-- On Tauto shift to state 105
-- On Tasm shift to state 366
-- On TTilde shift to state 395
-- On TPtVirg shift to state 413
-- On TIdent_Typedef shift to state 20
-- On TIdent_TemplatenameInQualifier_BeforeTypedef shift to state 21
-- On TIdent_TemplatenameInQualifier shift to state 12
-- On TIdent_Templatename shift to state 108
-- On TIdent_MacroDecl shift to state 423
-- On TIdent_ClassnameInQualifier_BeforeTypedef shift to state 111
-- On TIdent_ClassnameInQualifier shift to state 112
-- On TColCol_BeforeTypedef shift to state 118
-- On using_directive shift to state 581
-- On using_declaration shift to state 582
-- On unnamed_namespace_definition shift to state 692
-- On type_spec shift to state 314
-- On type_name shift to state 182
-- On type_cplusplus_id shift to state 183
-- On template_id shift to state 120
-- On template_declaration shift to state 693
-- On storage_class_spec shift to state 316
-- On simple_type_specifier shift to state 206
-- On simple_declaration shift to state 585
-- On option(Tinline) shift to state 696
-- On nested_name_specifier2 shift to state 207
-- On nested_name_specifier shift to state 716
-- On namespace_definition shift to state 729
-- On namespace_alias_definition shift to state 587
-- On named_namespace_definition shift to state 730
-- On linkage_specification shift to state 731
-- On function_spec shift to state 437
-- On function_definition shift to state 732
-- On explicit_specialization shift to state 733
-- On enum_specifier shift to state 209
-- On enum_name_or_typedef_name_or_simple_class_name shift to state 123
-- On enum_head shift to state 210
-- On elaborated_type_specifier shift to state 274
-- On decltype_specifier shift to state 243
-- On declaration shift to state 749
-- On decl_spec_seq shift to state 599
-- On decl_spec shift to state 473
-- On cv_qualif shift to state 475
-- On ctor_dtor shift to state 737
-- On class_specifier shift to state 277
-- On class_or_namespace_name_for_qualifier2 shift to state 124
-- On class_or_namespace_name_for_qualifier shift to state 170
-- On class_key shift to state 278
-- On class_head shift to state 301
-- On block_declaration shift to state 740
-- On asm_definition shift to state 617
## Reductions:
-- On TIdent_Constructor
--   reduce production option(Tinline) ->

State 320:
## Known stack suffix:
## Ttemplate
## LR(1) items:
explicit_specialization -> Ttemplate . TInf_Template TSup_Template declaration [ Twchar_t Tvolatile Tvoid Tvirtual Tusing Tunsigned Tunion Ttypeof Ttypename Ttypedef Tthread_local Ttemplate Tstruct Tstatic Tsigned Tshort Trestrict Tregister Tpublic Tprotected Tprivate Tnamespace Tmutable Tlong Tint Tinline Tfriend Tfloat Textern Texplicit Tenum Tdouble Tdecltype Tconstexpr Tconst Tclass Tchar Tbool Tauto Tasm TUndef TTilde TPtVirg TInclude TIfdefelse TIfdefelif TIfdefVersion TIfdefMisc TIfdefBool TIfdef TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_MacroDecl TIdent_Constructor TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TEndif TDefine TCppDirectiveOther TColCol_BeforeTypedef TCBrace ]
template_declaration -> Ttemplate . TInf_Template listc(template_parameter) TSup_Template declaration [ Twchar_t Tvolatile Tvoid Tvirtual Tusing Tunsigned Tunion Ttypeof Ttypename Ttypedef Tthread_local Ttemplate Tstruct Tstatic Tsigned Tshort Trestrict Tregister Tpublic Tprotected Tprivate Tnamespace Tmutable Tlong Tint Tinline Tfriend Tfloat Textern Texplicit Tenum Tdouble Tdecltype Tconstexpr Tconst Tclass Tchar Tbool Tauto Tasm TUndef TTilde TPtVirg TInclude TIfdefelse TIfdefelif TIfdefVersion TIfdefMisc TIfdefBool TIfdef TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_MacroDecl TIdent_Constructor TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TEndif TDefine TCppDirectiveOther TColCol_BeforeTypedef TCBrace ]
## Transitions:
-- On TInf_Template shift to state 321
## Reductions:

State 321:
## Known stack suffix:
## Ttemplate TInf_Template
## LR(1) items:
explicit_specialization -> Ttemplate TInf_Template . TSup_Template declaration [ Twchar_t Tvolatile Tvoid Tvirtual Tusing Tunsigned Tunion Ttypeof Ttypename Ttypedef Tthread_local Ttemplate Tstruct Tstatic Tsigned Tshort Trestrict Tregister Tpublic Tprotected Tprivate Tnamespace Tmutable Tlong Tint Tinline Tfriend Tfloat Textern Texplicit Tenum Tdouble Tdecltype Tconstexpr Tconst Tclass Tchar Tbool Tauto Tasm TUndef TTilde TPtVirg TInclude TIfdefelse TIfdefelif TIfdefVersion TIfdefMisc TIfdefBool TIfdef TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_MacroDecl TIdent_Constructor TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TEndif TDefine TCppDirectiveOther TColCol_BeforeTypedef TCBrace ]
template_declaration -> Ttemplate TInf_Template . listc(template_parameter) TSup_Template declaration [ Twchar_t Tvolatile Tvoid Tvirtual Tusing Tunsigned Tunion Ttypeof Ttypename Ttypedef Tthread_local Ttemplate Tstruct Tstatic Tsigned Tshort Trestrict Tregister Tpublic Tprotected Tprivate Tnamespace Tmutable Tlong Tint Tinline Tfriend Tfloat Textern Texplicit Tenum Tdouble Tdecltype Tconstexpr Tconst Tclass Tchar Tbool Tauto Tasm TUndef TTilde TPtVirg TInclude TIfdefelse TIfdefelif TIfdefVersion TIfdefMisc TIfdefBool TIfdef TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_MacroDecl TIdent_Constructor TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TEndif TDefine TCppDirectiveOther TColCol_BeforeTypedef TCBrace ]
## Transitions:
-- On Twchar_t shift to state 1
-- On Tvolatile shift to state 2
-- On Tvoid shift to state 3
-- On Tvirtual shift to state 4
-- On Tunsigned shift to state 15
-- On Tunion shift to state 16
-- On Ttypeof shift to state 17
-- On Ttypename shift to state 19
-- On Ttypedef shift to state 96
-- On Tthread_local shift to state 97
-- On Tstruct shift to state 27
-- On Tstatic shift to state 98
-- On Tsigned shift to state 30
-- On Tshort shift to state 32
-- On Trestrict shift to state 65
-- On Tregister shift to state 99
-- On Tmutable shift to state 100
-- On Tlong shift to state 38
-- On Tint shift to state 39
-- On Tinline shift to state 101
-- On Tfriend shift to state 102
-- On Tfloat shift to state 40
-- On Textern shift to state 103
-- On Tenum shift to state 66
-- On Tdouble shift to state 41
-- On Tdecltype shift to state 45
-- On Tconstexpr shift to state 104
-- On Tconst shift to state 76
-- On Tclass shift to state 77
-- On Tchar shift to state 58
-- On Tbool shift to state 60
-- On Tauto shift to state 105
-- On TSup_Template shift to state 322
-- On TIdent_Typedef shift to state 20
-- On TIdent_TemplatenameInQualifier_BeforeTypedef shift to state 21
-- On TIdent_Templatename shift to state 108
-- On TIdent_ClassnameInQualifier_BeforeTypedef shift to state 111
-- On TColCol_BeforeTypedef shift to state 118
-- On type_spec shift to state 314
-- On type_name shift to state 182
-- On type_cplusplus_id shift to state 183
-- On template_parameter shift to state 315
-- On template_id shift to state 120
-- On storage_class_spec shift to state 316
-- On simple_type_specifier shift to state 206
-- On parameter_decl shift to state 317
-- On nested_name_specifier2 shift to state 207
-- On listc(template_parameter) shift to state 318
-- On function_spec shift to state 437
-- On enum_specifier shift to state 209
-- On enum_name_or_typedef_name_or_simple_class_name shift to state 123
-- On enum_head shift to state 210
-- On elaborated_type_specifier shift to state 274
-- On decltype_specifier shift to state 243
-- On decl_spec_seq shift to state 441
-- On decl_spec shift to state 473
-- On cv_qualif shift to state 475
-- On class_specifier shift to state 277
-- On class_or_namespace_name_for_qualifier2 shift to state 124
-- On class_key shift to state 278
-- On class_head shift to state 301
## Reductions:

State 322:
## Known stack suffix:
## Ttemplate TInf_Template TSup_Template
## LR(1) items:
explicit_specialization -> Ttemplate TInf_Template TSup_Template . declaration [ Twchar_t Tvolatile Tvoid Tvirtual Tusing Tunsigned Tunion Ttypeof Ttypename Ttypedef Tthread_local Ttemplate Tstruct Tstatic Tsigned Tshort Trestrict Tregister Tpublic Tprotected Tprivate Tnamespace Tmutable Tlong Tint Tinline Tfriend Tfloat Textern Texplicit Tenum Tdouble Tdecltype Tconstexpr Tconst Tclass Tchar Tbool Tauto Tasm TUndef TTilde TPtVirg TInclude TIfdefelse TIfdefelif TIfdefVersion TIfdefMisc TIfdefBool TIfdef TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_MacroDecl TIdent_Constructor TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TEndif TDefine TCppDirectiveOther TColCol_BeforeTypedef TCBrace ]
## Transitions:
-- On Twchar_t shift to state 1
-- On Tvolatile shift to state 2
-- On Tvoid shift to state 3
-- On Tvirtual shift to state 4
-- On Tusing shift to state 5
-- On Tunsigned shift to state 15
-- On Tunion shift to state 16
-- On Ttypeof shift to state 17
-- On Ttypename shift to state 19
-- On Ttypedef shift to state 96
-- On Tthread_local shift to state 97
-- On Ttemplate shift to state 320
-- On Tstruct shift to state 27
-- On Tstatic shift to state 323
-- On Tsigned shift to state 30
-- On Tshort shift to state 32
-- On Trestrict shift to state 65
-- On Tregister shift to state 99
-- On Tnamespace shift to state 361
-- On Tmutable shift to state 100
-- On Tlong shift to state 38
-- On Tint shift to state 39
-- On Tinline shift to state 363
-- On Tfriend shift to state 102
-- On Tfloat shift to state 40
-- On Textern shift to state 364
-- On Tenum shift to state 66
-- On Tdouble shift to state 41
-- On Tdecltype shift to state 45
-- On Tconstexpr shift to state 104
-- On Tconst shift to state 76
-- On Tclass shift to state 77
-- On Tchar shift to state 58
-- On Tbool shift to state 60
-- On Tauto shift to state 105
-- On Tasm shift to state 366
-- On TTilde shift to state 395
-- On TPtVirg shift to state 413
-- On TIdent_Typedef shift to state 20
-- On TIdent_TemplatenameInQualifier_BeforeTypedef shift to state 21
-- On TIdent_TemplatenameInQualifier shift to state 12
-- On TIdent_Templatename shift to state 108
-- On TIdent_MacroDecl shift to state 423
-- On TIdent_ClassnameInQualifier_BeforeTypedef shift to state 111
-- On TIdent_ClassnameInQualifier shift to state 112
-- On TColCol_BeforeTypedef shift to state 118
-- On using_directive shift to state 581
-- On using_declaration shift to state 582
-- On unnamed_namespace_definition shift to state 692
-- On type_spec shift to state 314
-- On type_name shift to state 182
-- On type_cplusplus_id shift to state 183
-- On template_id shift to state 120
-- On template_declaration shift to state 693
-- On storage_class_spec shift to state 316
-- On simple_type_specifier shift to state 206
-- On simple_declaration shift to state 585
-- On option(Tinline) shift to state 696
-- On nested_name_specifier2 shift to state 207
-- On nested_name_specifier shift to state 716
-- On namespace_definition shift to state 729
-- On namespace_alias_definition shift to state 587
-- On named_namespace_definition shift to state 730
-- On linkage_specification shift to state 731
-- On function_spec shift to state 437
-- On function_definition shift to state 732
-- On explicit_specialization shift to state 733
-- On enum_specifier shift to state 209
-- On enum_name_or_typedef_name_or_simple_class_name shift to state 123
-- On enum_head shift to state 210
-- On elaborated_type_specifier shift to state 274
-- On decltype_specifier shift to state 243
-- On declaration shift to state 748
-- On decl_spec_seq shift to state 599
-- On decl_spec shift to state 473
-- On cv_qualif shift to state 475
-- On ctor_dtor shift to state 737
-- On class_specifier shift to state 277
-- On class_or_namespace_name_for_qualifier2 shift to state 124
-- On class_or_namespace_name_for_qualifier shift to state 170
-- On class_key shift to state 278
-- On class_head shift to state 301
-- On block_declaration shift to state 740
-- On asm_definition shift to state 617
## Reductions:
-- On TIdent_Constructor
--   reduce production option(Tinline) ->

State 323:
## Known stack suffix:
## Tstatic
## LR(1) items:
simple_declaration -> Tstatic . TIdent_MacroDecl TOPar listc(argument) TCPar TPtVirg [ Twhile Twchar_t_Constr Twchar_t Tvolatile Tvoid Tvirtual Tusing Tunsigned Tunion Ttypeof Ttypename Ttypeid Ttypedef Ttry Ttrue Tthrow Tthread_local Tthis Ttemplate Tswitch Tstruct Tstatic_cast Tstatic Tsizeof Tsigned Tshort_Constr Tshort Treturn Trestrict Treinterpret_cast Tregister Tpublic Tprotected Tprivate Toperator Tnullptr Tnull Tnew Tnamespace Tmutable Tlong_Constr Tlong Tint_Constr Tint Tinline Tif Tgoto Tfriend Tfor Tfloat_Constr Tfloat Tfalse Textern Texplicit Tenum Telse Tdynamic_cast Tdouble_Constr Tdouble Tdo Tdelete Tdefault Tdecltype Tcontinue Tconstexpr Tconst_cast Tconst Tclass Tchar_Constr Tchar Tcase Tbreak Tbool_Constr Tbool Tauto Tasm TUndef TTilde TString TPtVirg TPlus TOPar TOCro_Lambda TOBrace TMul TMinus TInt TInclude TInc TIfdefelse TIfdefelif TIfdefVersion TIfdefMisc TIfdefBool TIfdef TIdent_TypedefConstr TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_MacroString TIdent_MacroStmt TIdent_MacroIterator TIdent_MacroDecl TIdent_Constructor TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TIdent TFloat TEndif TEllipsis TDefine TDec TCppDirectiveOther TCommentNewline_DefineEndOfMacro TColCol_BeforeTypedef TColCol TChar TCBrace TBang TAndLog TAnd LDots EOF ]
simple_declaration -> Tstatic . Tconst_MacroDeclConst TIdent_MacroDecl TOPar listc(argument) TCPar TPtVirg [ Twhile Twchar_t_Constr Twchar_t Tvolatile Tvoid Tvirtual Tusing Tunsigned Tunion Ttypeof Ttypename Ttypeid Ttypedef Ttry Ttrue Tthrow Tthread_local Tthis Ttemplate Tswitch Tstruct Tstatic_cast Tstatic Tsizeof Tsigned Tshort_Constr Tshort Treturn Trestrict Treinterpret_cast Tregister Tpublic Tprotected Tprivate Toperator Tnullptr Tnull Tnew Tnamespace Tmutable Tlong_Constr Tlong Tint_Constr Tint Tinline Tif Tgoto Tfriend Tfor Tfloat_Constr Tfloat Tfalse Textern Texplicit Tenum Telse Tdynamic_cast Tdouble_Constr Tdouble Tdo Tdelete Tdefault Tdecltype Tcontinue Tconstexpr Tconst_cast Tconst Tclass Tchar_Constr Tchar Tcase Tbreak Tbool_Constr Tbool Tauto Tasm TUndef TTilde TString TPtVirg TPlus TOPar TOCro_Lambda TOBrace TMul TMinus TInt TInclude TInc TIfdefelse TIfdefelif TIfdefVersion TIfdefMisc TIfdefBool TIfdef TIdent_TypedefConstr TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_MacroString TIdent_MacroStmt TIdent_MacroIterator TIdent_MacroDecl TIdent_Constructor TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TIdent TFloat TEndif TEllipsis TDefine TDec TCppDirectiveOther TCommentNewline_DefineEndOfMacro TColCol_BeforeTypedef TColCol TChar TCBrace TBang TAndLog TAnd LDots EOF ]
storage_class_spec -> Tstatic . [ Twchar_t Tvolatile Tvoid Tvirtual Tunsigned Tunion Ttypeof Ttypename Ttypedef Tthread_local Tstruct Tstatic Tsigned Tshort Trestrict Tregister Toperator Tmutable Tlong Tint Tinline Tfriend Tfloat Textern Tenum Tdouble Tdecltype Tconstexpr Tconst Tclass Tchar Tbool Tauto TPtVirg TOPar TMul TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TIdent TColCol_BeforeTypedef TColCol TAndLog TAnd ]
## Transitions:
-- On Tconst_MacroDeclConst shift to state 324
-- On TIdent_MacroDecl shift to state 356
## Reductions:
-- On Twchar_t Tvolatile Tvoid Tvirtual Tunsigned Tunion Ttypeof Ttypename Ttypedef Tthread_local Tstruct Tstatic Tsigned Tshort Trestrict Tregister Toperator Tmutable Tlong Tint Tinline Tfriend Tfloat Textern Tenum Tdouble Tdecltype Tconstexpr Tconst Tclass Tchar Tbool Tauto TPtVirg TOPar TMul TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TIdent TColCol_BeforeTypedef TColCol TAndLog TAnd
--   reduce production storage_class_spec -> Tstatic

State 324:
## Known stack suffix:
## Tstatic Tconst_MacroDeclConst
## LR(1) items:
simple_declaration -> Tstatic Tconst_MacroDeclConst . TIdent_MacroDecl TOPar listc(argument) TCPar TPtVirg [ Twhile Twchar_t_Constr Twchar_t Tvolatile Tvoid Tvirtual Tusing Tunsigned Tunion Ttypeof Ttypename Ttypeid Ttypedef Ttry Ttrue Tthrow Tthread_local Tthis Ttemplate Tswitch Tstruct Tstatic_cast Tstatic Tsizeof Tsigned Tshort_Constr Tshort Treturn Trestrict Treinterpret_cast Tregister Tpublic Tprotected Tprivate Toperator Tnullptr Tnull Tnew Tnamespace Tmutable Tlong_Constr Tlong Tint_Constr Tint Tinline Tif Tgoto Tfriend Tfor Tfloat_Constr Tfloat Tfalse Textern Texplicit Tenum Telse Tdynamic_cast Tdouble_Constr Tdouble Tdo Tdelete Tdefault Tdecltype Tcontinue Tconstexpr Tconst_cast Tconst Tclass Tchar_Constr Tchar Tcase Tbreak Tbool_Constr Tbool Tauto Tasm TUndef TTilde TString TPtVirg TPlus TOPar TOCro_Lambda TOBrace TMul TMinus TInt TInclude TInc TIfdefelse TIfdefelif TIfdefVersion TIfdefMisc TIfdefBool TIfdef TIdent_TypedefConstr TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_MacroString TIdent_MacroStmt TIdent_MacroIterator TIdent_MacroDecl TIdent_Constructor TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TIdent TFloat TEndif TEllipsis TDefine TDec TCppDirectiveOther TCommentNewline_DefineEndOfMacro TColCol_BeforeTypedef TColCol TChar TCBrace TBang TAndLog TAnd LDots EOF ]
## Transitions:
-- On TIdent_MacroDecl shift to state 325
## Reductions:

State 325:
## Known stack suffix:
## Tstatic Tconst_MacroDeclConst TIdent_MacroDecl
## LR(1) items:
simple_declaration -> Tstatic Tconst_MacroDeclConst TIdent_MacroDecl . TOPar listc(argument) TCPar TPtVirg [ Twhile Twchar_t_Constr Twchar_t Tvolatile Tvoid Tvirtual Tusing Tunsigned Tunion Ttypeof Ttypename Ttypeid Ttypedef Ttry Ttrue Tthrow Tthread_local Tthis Ttemplate Tswitch Tstruct Tstatic_cast Tstatic Tsizeof Tsigned Tshort_Constr Tshort Treturn Trestrict Treinterpret_cast Tregister Tpublic Tprotected Tprivate Toperator Tnullptr Tnull Tnew Tnamespace Tmutable Tlong_Constr Tlong Tint_Constr Tint Tinline Tif Tgoto Tfriend Tfor Tfloat_Constr Tfloat Tfalse Textern Texplicit Tenum Telse Tdynamic_cast Tdouble_Constr Tdouble Tdo Tdelete Tdefault Tdecltype Tcontinue Tconstexpr Tconst_cast Tconst Tclass Tchar_Constr Tchar Tcase Tbreak Tbool_Constr Tbool Tauto Tasm TUndef TTilde TString TPtVirg TPlus TOPar TOCro_Lambda TOBrace TMul TMinus TInt TInclude TInc TIfdefelse TIfdefelif TIfdefVersion TIfdefMisc TIfdefBool TIfdef TIdent_TypedefConstr TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_MacroString TIdent_MacroStmt TIdent_MacroIterator TIdent_MacroDecl TIdent_Constructor TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TIdent TFloat TEndif TEllipsis TDefine TDec TCppDirectiveOther TCommentNewline_DefineEndOfMacro TColCol_BeforeTypedef TColCol TChar TCBrace TBang TAndLog TAnd LDots EOF ]
## Transitions:
-- On TOPar shift to state 326
## Reductions:

State 326:
## Known stack suffix:
## Tstatic Tconst_MacroDeclConst TIdent_MacroDecl TOPar
## LR(1) items:
simple_declaration -> Tstatic Tconst_MacroDeclConst TIdent_MacroDecl TOPar . listc(argument) TCPar TPtVirg [ Twhile Twchar_t_Constr Twchar_t Tvolatile Tvoid Tvirtual Tusing Tunsigned Tunion Ttypeof Ttypename Ttypeid Ttypedef Ttry Ttrue Tthrow Tthread_local Tthis Ttemplate Tswitch Tstruct Tstatic_cast Tstatic Tsizeof Tsigned Tshort_Constr Tshort Treturn Trestrict Treinterpret_cast Tregister Tpublic Tprotected Tprivate Toperator Tnullptr Tnull Tnew Tnamespace Tmutable Tlong_Constr Tlong Tint_Constr Tint Tinline Tif Tgoto Tfriend Tfor Tfloat_Constr Tfloat Tfalse Textern Texplicit Tenum Telse Tdynamic_cast Tdouble_Constr Tdouble Tdo Tdelete Tdefault Tdecltype Tcontinue Tconstexpr Tconst_cast Tconst Tclass Tchar_Constr Tchar Tcase Tbreak Tbool_Constr Tbool Tauto Tasm TUndef TTilde TString TPtVirg TPlus TOPar TOCro_Lambda TOBrace TMul TMinus TInt TInclude TInc TIfdefelse TIfdefelif TIfdefVersion TIfdefMisc TIfdefBool TIfdef TIdent_TypedefConstr TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_MacroString TIdent_MacroStmt TIdent_MacroIterator TIdent_MacroDecl TIdent_Constructor TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TIdent TFloat TEndif TEllipsis TDefine TDec TCppDirectiveOther TCommentNewline_DefineEndOfMacro TColCol_BeforeTypedef TColCol TChar TCBrace TBang TAndLog TAnd LDots EOF ]
## Transitions:
-- On Twchar_t_Constr shift to state 14
-- On Twchar_t shift to state 1
-- On Tvolatile shift to state 2
-- On Tvoid shift to state 3
-- On Tunsigned shift to state 15
-- On Tunion shift to state 16
-- On Ttypeof shift to state 17
-- On Ttypename shift to state 19
-- On Ttypeid shift to state 23
-- On Ttrue shift to state 25
-- On Tthrow shift to state 47
-- On Tthis shift to state 26
-- On Tstruct shift to state 27
-- On Tstatic_cast shift to state 28
-- On Tsizeof shift to state 29
-- On Tsigned shift to state 30
-- On Tshort_Constr shift to state 31
-- On Tshort shift to state 32
-- On Trestrict shift to state 65
-- On Treinterpret_cast shift to state 33
-- On Toperator shift to state 34
-- On Tnullptr shift to state 48
-- On Tnull shift to state 49
-- On Tlong_Constr shift to state 50
-- On Tlong shift to state 38
-- On Tint_Constr shift to state 51
-- On Tint shift to state 39
-- On Tfloat_Constr shift to state 52
-- On Tfloat shift to state 40
-- On Tfalse shift to state 53
-- On Tenum shift to state 66
-- On Tdynamic_cast shift to state 54
-- On Tdouble_Constr shift to state 55
-- On Tdouble shift to state 41
-- On Tdecltype shift to state 45
-- On Tconst_cast shift to state 56
-- On Tconst shift to state 76
-- On Tclass shift to state 77
-- On Tchar_Constr shift to state 57
-- On Tchar shift to state 58
-- On Tbool_Constr shift to state 59
-- On Tbool shift to state 60
-- On TTilde shift to state 61
-- On TString shift to state 62
-- On TPlus shift to state 63
-- On TOPar shift to state 64
-- On TOCro_Lambda shift to state 78
-- On TMul shift to state 88
-- On TMinus shift to state 89
-- On TInt shift to state 90
-- On TInc shift to state 91
-- On TIdent_TypedefConstr shift to state 106
-- On TIdent_Typedef shift to state 20
-- On TIdent_TemplatenameInQualifier_BeforeTypedef shift to state 21
-- On TIdent_TemplatenameInQualifier shift to state 12
-- On TIdent_Templatename shift to state 108
-- On TIdent_MacroString shift to state 110
-- On TIdent_ClassnameInQualifier_BeforeTypedef shift to state 111
-- On TIdent_ClassnameInQualifier shift to state 112
-- On TIdent shift to state 113
-- On TFloat shift to state 116
-- On TEllipsis shift to state 201
-- On TDec shift to state 117
-- On TColCol_BeforeTypedef shift to state 118
-- On TColCol shift to state 128
-- On TChar shift to state 174
-- On TBang shift to state 175
-- On TAny_Action shift to state 202
-- On TAndLog shift to state 176
-- On TAnd shift to state 177
-- On LDots shift to state 178
-- On unqualified_id shift to state 179
-- On unary_op shift to state 180
-- On unary_expr shift to state 181
-- On type_spec shift to state 204
-- On type_name shift to state 182
-- On type_id shift to state 224
-- On type_cplusplus_id shift to state 183
-- On template_id shift to state 120
-- On string_elem shift to state 184
-- On spec_qualif_list shift to state 225
-- On simple_type_specifier shift to state 266
-- On shift_expr shift to state 217
-- On relational_expr shift to state 229
-- On qualified_id shift to state 191
-- On primary_expr shift to state 192
-- On primary_cplusplus_id shift to state 193
-- On postfix_expr shift to state 194
-- On pm_expr shift to state 219
-- On option(TColCol) shift to state 221
-- On operator_function_id shift to state 168
-- On nonempty_list(TAny_Action) shift to state 269
-- On new_expr shift to state 233
-- On nested_name_specifier2 shift to state 207
-- On nested_name_specifier shift to state 165
-- On multiplicative_expr shift to state 234
-- On logical_or_expr shift to state 246
-- On logical_and_expr shift to state 250
-- On literal shift to state 238
-- On listc(argument) shift to state 327
-- On lambda_introducer shift to state 239
-- On inclusive_or_expr shift to state 272
-- On id_expression shift to state 241
-- On exclusive_or_expr shift to state 273
-- On equality_expr shift to state 256
-- On enum_specifier shift to state 209
-- On enum_name_or_typedef_name_or_simple_class_name shift to state 123
-- On enum_head shift to state 210
-- On elaborated_type_specifier shift to state 274
-- On delete_expr shift to state 242
-- On decltype_specifier shift to state 243
-- On cv_qualif shift to state 275
-- On cpp_cast_operator shift to state 244
-- On conversion_function_id shift to state 169
-- On cond_expr shift to state 330
-- On class_specifier shift to state 277
-- On class_or_namespace_name_for_qualifier2 shift to state 124
-- On class_or_namespace_name_for_qualifier shift to state 170
-- On class_key shift to state 278
-- On class_head shift to state 301
-- On cast_operator_expr shift to state 261
-- On cast_expr shift to state 331
-- On cast_constructor_expr shift to state 263
-- On basic_type_2 shift to state 264
-- On assign_expr shift to state 354
-- On argument shift to state 355
-- On and_expr shift to state 334
-- On additive_expr shift to state 341
## Reductions:
-- On Tnew Tdelete
--   reduce production option(TColCol) ->

State 327:
## Known stack suffix:
## Tstatic Tconst_MacroDeclConst TIdent_MacroDecl TOPar listc(argument)
## LR(1) items:
listc(argument) -> listc(argument) . TComma argument [ TComma TCPar ]
simple_declaration -> Tstatic Tconst_MacroDeclConst TIdent_MacroDecl TOPar listc(argument) . TCPar TPtVirg [ Twhile Twchar_t_Constr Twchar_t Tvolatile Tvoid Tvirtual Tusing Tunsigned Tunion Ttypeof Ttypename Ttypeid Ttypedef Ttry Ttrue Tthrow Tthread_local Tthis Ttemplate Tswitch Tstruct Tstatic_cast Tstatic Tsizeof Tsigned Tshort_Constr Tshort Treturn Trestrict Treinterpret_cast Tregister Tpublic Tprotected Tprivate Toperator Tnullptr Tnull Tnew Tnamespace Tmutable Tlong_Constr Tlong Tint_Constr Tint Tinline Tif Tgoto Tfriend Tfor Tfloat_Constr Tfloat Tfalse Textern Texplicit Tenum Telse Tdynamic_cast Tdouble_Constr Tdouble Tdo Tdelete Tdefault Tdecltype Tcontinue Tconstexpr Tconst_cast Tconst Tclass Tchar_Constr Tchar Tcase Tbreak Tbool_Constr Tbool Tauto Tasm TUndef TTilde TString TPtVirg TPlus TOPar TOCro_Lambda TOBrace TMul TMinus TInt TInclude TInc TIfdefelse TIfdefelif TIfdefVersion TIfdefMisc TIfdefBool TIfdef TIdent_TypedefConstr TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_MacroString TIdent_MacroStmt TIdent_MacroIterator TIdent_MacroDecl TIdent_Constructor TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TIdent TFloat TEndif TEllipsis TDefine TDec TCppDirectiveOther TCommentNewline_DefineEndOfMacro TColCol_BeforeTypedef TColCol TChar TCBrace TBang TAndLog TAnd LDots EOF ]
## Transitions:
-- On TComma shift to state 271
-- On TCPar shift to state 328
## Reductions:

State 328:
## Known stack suffix:
## Tstatic Tconst_MacroDeclConst TIdent_MacroDecl TOPar listc(argument) TCPar
## LR(1) items:
simple_declaration -> Tstatic Tconst_MacroDeclConst TIdent_MacroDecl TOPar listc(argument) TCPar . TPtVirg [ Twhile Twchar_t_Constr Twchar_t Tvolatile Tvoid Tvirtual Tusing Tunsigned Tunion Ttypeof Ttypename Ttypeid Ttypedef Ttry Ttrue Tthrow Tthread_local Tthis Ttemplate Tswitch Tstruct Tstatic_cast Tstatic Tsizeof Tsigned Tshort_Constr Tshort Treturn Trestrict Treinterpret_cast Tregister Tpublic Tprotected Tprivate Toperator Tnullptr Tnull Tnew Tnamespace Tmutable Tlong_Constr Tlong Tint_Constr Tint Tinline Tif Tgoto Tfriend Tfor Tfloat_Constr Tfloat Tfalse Textern Texplicit Tenum Telse Tdynamic_cast Tdouble_Constr Tdouble Tdo Tdelete Tdefault Tdecltype Tcontinue Tconstexpr Tconst_cast Tconst Tclass Tchar_Constr Tchar Tcase Tbreak Tbool_Constr Tbool Tauto Tasm TUndef TTilde TString TPtVirg TPlus TOPar TOCro_Lambda TOBrace TMul TMinus TInt TInclude TInc TIfdefelse TIfdefelif TIfdefVersion TIfdefMisc TIfdefBool TIfdef TIdent_TypedefConstr TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_MacroString TIdent_MacroStmt TIdent_MacroIterator TIdent_MacroDecl TIdent_Constructor TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TIdent TFloat TEndif TEllipsis TDefine TDec TCppDirectiveOther TCommentNewline_DefineEndOfMacro TColCol_BeforeTypedef TColCol TChar TCBrace TBang TAndLog TAnd LDots EOF ]
## Transitions:
-- On TPtVirg shift to state 329
## Reductions:

State 329:
## Known stack suffix:
## Tstatic Tconst_MacroDeclConst TIdent_MacroDecl TOPar listc(argument) TCPar TPtVirg
## LR(1) items:
simple_declaration -> Tstatic Tconst_MacroDeclConst TIdent_MacroDecl TOPar listc(argument) TCPar TPtVirg . [ Twhile Twchar_t_Constr Twchar_t Tvolatile Tvoid Tvirtual Tusing Tunsigned Tunion Ttypeof Ttypename Ttypeid Ttypedef Ttry Ttrue Tthrow Tthread_local Tthis Ttemplate Tswitch Tstruct Tstatic_cast Tstatic Tsizeof Tsigned Tshort_Constr Tshort Treturn Trestrict Treinterpret_cast Tregister Tpublic Tprotected Tprivate Toperator Tnullptr Tnull Tnew Tnamespace Tmutable Tlong_Constr Tlong Tint_Constr Tint Tinline Tif Tgoto Tfriend Tfor Tfloat_Constr Tfloat Tfalse Textern Texplicit Tenum Telse Tdynamic_cast Tdouble_Constr Tdouble Tdo Tdelete Tdefault Tdecltype Tcontinue Tconstexpr Tconst_cast Tconst Tclass Tchar_Constr Tchar Tcase Tbreak Tbool_Constr Tbool Tauto Tasm TUndef TTilde TString TPtVirg TPlus TOPar TOCro_Lambda TOBrace TMul TMinus TInt TInclude TInc TIfdefelse TIfdefelif TIfdefVersion TIfdefMisc TIfdefBool TIfdef TIdent_TypedefConstr TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_MacroString TIdent_MacroStmt TIdent_MacroIterator TIdent_MacroDecl TIdent_Constructor TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TIdent TFloat TEndif TEllipsis TDefine TDec TCppDirectiveOther TCommentNewline_DefineEndOfMacro TColCol_BeforeTypedef TColCol TChar TCBrace TBang TAndLog TAnd LDots EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production simple_declaration -> Tstatic Tconst_MacroDeclConst TIdent_MacroDecl TOPar listc(argument) TCPar TPtVirg

State 330:
## Known stack suffix:
## cond_expr
## LR(1) items:
assign_expr -> cond_expr . [ TSup_Template TPtVirg TEllipsis TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace RDots EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production assign_expr -> cond_expr

State 331:
## Known stack suffix:
## cast_expr
## LR(1) items:
assign_expr -> cast_expr . TAssign assign_expr [ TSup_Template TPtVirg TEllipsis TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace RDots EOF ]
assign_expr -> cast_expr . TEq assign_expr [ TSup_Template TPtVirg TEllipsis TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace RDots EOF ]
pm_expr -> cast_expr . [ TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtrOpStar TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TEllipsis TDotStar TDiv TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAndLog TAnd RDots EOF ]
## Transitions:
-- On TEq shift to state 332
-- On TAssign shift to state 352
## Reductions:
-- On TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtrOpStar TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TEllipsis TDotStar TDiv TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAndLog TAnd RDots EOF
--   reduce production pm_expr -> cast_expr

State 332:
## Known stack suffix:
## cast_expr TEq
## LR(1) items:
assign_expr -> cast_expr TEq . assign_expr [ TSup_Template TPtVirg TEllipsis TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace RDots EOF ]
## Transitions:
-- On Twchar_t_Constr shift to state 14
-- On Twchar_t shift to state 1
-- On Tvoid shift to state 3
-- On Tunsigned shift to state 15
-- On Ttypeof shift to state 17
-- On Ttypeid shift to state 23
-- On Ttrue shift to state 25
-- On Tthrow shift to state 47
-- On Tthis shift to state 26
-- On Tstatic_cast shift to state 28
-- On Tsizeof shift to state 29
-- On Tsigned shift to state 30
-- On Tshort_Constr shift to state 31
-- On Tshort shift to state 32
-- On Treinterpret_cast shift to state 33
-- On Toperator shift to state 34
-- On Tnullptr shift to state 48
-- On Tnull shift to state 49
-- On Tlong_Constr shift to state 50
-- On Tlong shift to state 38
-- On Tint_Constr shift to state 51
-- On Tint shift to state 39
-- On Tfloat_Constr shift to state 52
-- On Tfloat shift to state 40
-- On Tfalse shift to state 53
-- On Tdynamic_cast shift to state 54
-- On Tdouble_Constr shift to state 55
-- On Tdouble shift to state 41
-- On Tdecltype shift to state 45
-- On Tconst_cast shift to state 56
-- On Tchar_Constr shift to state 57
-- On Tchar shift to state 58
-- On Tbool_Constr shift to state 59
-- On Tbool shift to state 60
-- On TTilde shift to state 61
-- On TString shift to state 62
-- On TPlus shift to state 63
-- On TOPar shift to state 64
-- On TOCro_Lambda shift to state 78
-- On TMul shift to state 88
-- On TMinus shift to state 89
-- On TInt shift to state 90
-- On TInc shift to state 91
-- On TIdent_TypedefConstr shift to state 106
-- On TIdent_Typedef shift to state 20
-- On TIdent_TemplatenameInQualifier_BeforeTypedef shift to state 21
-- On TIdent_TemplatenameInQualifier shift to state 12
-- On TIdent_Templatename shift to state 108
-- On TIdent_MacroString shift to state 110
-- On TIdent_ClassnameInQualifier_BeforeTypedef shift to state 111
-- On TIdent_ClassnameInQualifier shift to state 112
-- On TIdent shift to state 113
-- On TFloat shift to state 116
-- On TDec shift to state 117
-- On TColCol_BeforeTypedef shift to state 118
-- On TColCol shift to state 128
-- On TChar shift to state 174
-- On TBang shift to state 175
-- On TAndLog shift to state 176
-- On TAnd shift to state 177
-- On LDots shift to state 178
-- On unqualified_id shift to state 179
-- On unary_op shift to state 180
-- On unary_expr shift to state 181
-- On type_name shift to state 182
-- On type_cplusplus_id shift to state 183
-- On template_id shift to state 120
-- On string_elem shift to state 184
-- On simple_type_specifier shift to state 189
-- On shift_expr shift to state 217
-- On relational_expr shift to state 229
-- On qualified_id shift to state 191
-- On primary_expr shift to state 192
-- On primary_cplusplus_id shift to state 193
-- On postfix_expr shift to state 194
-- On pm_expr shift to state 219
-- On option(TColCol) shift to state 221
-- On operator_function_id shift to state 168
-- On new_expr shift to state 233
-- On nested_name_specifier2 shift to state 207
-- On nested_name_specifier shift to state 165
-- On multiplicative_expr shift to state 234
-- On logical_or_expr shift to state 246
-- On logical_and_expr shift to state 250
-- On literal shift to state 238
-- On lambda_introducer shift to state 239
-- On inclusive_or_expr shift to state 272
-- On id_expression shift to state 241
-- On exclusive_or_expr shift to state 273
-- On equality_expr shift to state 256
-- On enum_name_or_typedef_name_or_simple_class_name shift to state 123
-- On delete_expr shift to state 242
-- On decltype_specifier shift to state 243
-- On cpp_cast_operator shift to state 244
-- On conversion_function_id shift to state 169
-- On cond_expr shift to state 330
-- On class_or_namespace_name_for_qualifier2 shift to state 124
-- On class_or_namespace_name_for_qualifier shift to state 170
-- On cast_operator_expr shift to state 261
-- On cast_expr shift to state 331
-- On cast_constructor_expr shift to state 263
-- On basic_type_2 shift to state 264
-- On assign_expr shift to state 333
-- On and_expr shift to state 334
-- On additive_expr shift to state 341
## Reductions:
-- On Tnew Tdelete
--   reduce production option(TColCol) ->

State 333:
## Known stack suffix:
## cast_expr TEq assign_expr
## LR(1) items:
assign_expr -> cast_expr TEq assign_expr . [ TSup_Template TPtVirg TEllipsis TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace RDots EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production assign_expr -> cast_expr TEq assign_expr

State 334:
## Known stack suffix:
## and_expr
## LR(1) items:
and_expr -> and_expr . TAnd equality_expr [ TXor TWhy TSup_Template TPtVirg TOrLog TOr TEllipsis TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAndLog TAnd RDots EOF ]
exclusive_or_expr -> and_expr . [ TXor TWhy TSup_Template TPtVirg TOrLog TOr TEllipsis TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAndLog RDots EOF ]
## Transitions:
-- On TAnd shift to state 335
## Reductions:
-- On TXor TWhy TSup_Template TPtVirg TOrLog TOr TEllipsis TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAndLog RDots EOF
--   reduce production exclusive_or_expr -> and_expr

State 335:
## Known stack suffix:
## and_expr TAnd
## LR(1) items:
and_expr -> and_expr TAnd . equality_expr [ TXor TWhy TSup_Template TPtVirg TOrLog TOr TEllipsis TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAndLog TAnd RDots EOF ]
## Transitions:
-- On Twchar_t_Constr shift to state 14
-- On Twchar_t shift to state 1
-- On Tvoid shift to state 3
-- On Tunsigned shift to state 15
-- On Ttypeof shift to state 17
-- On Ttypeid shift to state 23
-- On Ttrue shift to state 25
-- On Tthis shift to state 26
-- On Tstatic_cast shift to state 28
-- On Tsizeof shift to state 29
-- On Tsigned shift to state 30
-- On Tshort_Constr shift to state 31
-- On Tshort shift to state 32
-- On Treinterpret_cast shift to state 33
-- On Toperator shift to state 34
-- On Tnullptr shift to state 48
-- On Tnull shift to state 49
-- On Tlong_Constr shift to state 50
-- On Tlong shift to state 38
-- On Tint_Constr shift to state 51
-- On Tint shift to state 39
-- On Tfloat_Constr shift to state 52
-- On Tfloat shift to state 40
-- On Tfalse shift to state 53
-- On Tdynamic_cast shift to state 54
-- On Tdouble_Constr shift to state 55
-- On Tdouble shift to state 41
-- On Tdecltype shift to state 45
-- On Tconst_cast shift to state 56
-- On Tchar_Constr shift to state 57
-- On Tchar shift to state 58
-- On Tbool_Constr shift to state 59
-- On Tbool shift to state 60
-- On TTilde shift to state 61
-- On TString shift to state 62
-- On TPlus shift to state 63
-- On TOPar shift to state 64
-- On TOCro_Lambda shift to state 78
-- On TMul shift to state 88
-- On TMinus shift to state 89
-- On TInt shift to state 90
-- On TInc shift to state 91
-- On TIdent_TypedefConstr shift to state 106
-- On TIdent_Typedef shift to state 20
-- On TIdent_TemplatenameInQualifier_BeforeTypedef shift to state 21
-- On TIdent_TemplatenameInQualifier shift to state 12
-- On TIdent_Templatename shift to state 108
-- On TIdent_MacroString shift to state 110
-- On TIdent_ClassnameInQualifier_BeforeTypedef shift to state 111
-- On TIdent_ClassnameInQualifier shift to state 112
-- On TIdent shift to state 113
-- On TFloat shift to state 116
-- On TDec shift to state 117
-- On TColCol_BeforeTypedef shift to state 118
-- On TColCol shift to state 128
-- On TChar shift to state 174
-- On TBang shift to state 175
-- On TAndLog shift to state 176
-- On TAnd shift to state 177
-- On LDots shift to state 178
-- On unqualified_id shift to state 179
-- On unary_op shift to state 180
-- On unary_expr shift to state 181
-- On type_name shift to state 182
-- On type_cplusplus_id shift to state 183
-- On template_id shift to state 120
-- On string_elem shift to state 184
-- On simple_type_specifier shift to state 189
-- On shift_expr shift to state 217
-- On relational_expr shift to state 229
-- On qualified_id shift to state 191
-- On primary_expr shift to state 192
-- On primary_cplusplus_id shift to state 193
-- On postfix_expr shift to state 194
-- On pm_expr shift to state 219
-- On option(TColCol) shift to state 221
-- On operator_function_id shift to state 168
-- On new_expr shift to state 233
-- On nested_name_specifier2 shift to state 207
-- On nested_name_specifier shift to state 165
-- On multiplicative_expr shift to state 234
-- On literal shift to state 238
-- On lambda_introducer shift to state 239
-- On id_expression shift to state 241
-- On equality_expr shift to state 336
-- On enum_name_or_typedef_name_or_simple_class_name shift to state 123
-- On delete_expr shift to state 242
-- On decltype_specifier shift to state 243
-- On cpp_cast_operator shift to state 244
-- On conversion_function_id shift to state 169
-- On class_or_namespace_name_for_qualifier2 shift to state 124
-- On class_or_namespace_name_for_qualifier shift to state 170
-- On cast_operator_expr shift to state 261
-- On cast_expr shift to state 262
-- On cast_constructor_expr shift to state 263
-- On basic_type_2 shift to state 264
-- On additive_expr shift to state 341
## Reductions:
-- On Tnew Tdelete
--   reduce production option(TColCol) ->

State 336:
## Known stack suffix:
## and_expr TAnd equality_expr
## LR(1) items:
and_expr -> and_expr TAnd equality_expr . [ TXor TWhy TSup_Template TPtVirg TOrLog TOr TEllipsis TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAndLog TAnd RDots EOF ]
equality_expr -> equality_expr . TEqEq relational_expr [ TXor TWhy TSup_Template TPtVirg TOrLog TOr TNotEq TEqEq TEllipsis TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAndLog TAnd RDots EOF ]
equality_expr -> equality_expr . TNotEq relational_expr [ TXor TWhy TSup_Template TPtVirg TOrLog TOr TNotEq TEqEq TEllipsis TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAndLog TAnd RDots EOF ]
## Transitions:
-- On TNotEq shift to state 257
-- On TEqEq shift to state 337
## Reductions:
-- On TXor TWhy TSup_Template TPtVirg TOrLog TOr TEllipsis TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAndLog TAnd RDots EOF
--   reduce production and_expr -> and_expr TAnd equality_expr

State 337:
## Known stack suffix:
## equality_expr TEqEq
## LR(1) items:
equality_expr -> equality_expr TEqEq . relational_expr [ TXor TWhy TSup_Template TPtVirg TOrLog TOr TNotEq TEqEq TEllipsis TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAndLog TAnd RDots EOF ]
## Transitions:
-- On Twchar_t_Constr shift to state 14
-- On Twchar_t shift to state 1
-- On Tvoid shift to state 3
-- On Tunsigned shift to state 15
-- On Ttypeof shift to state 17
-- On Ttypeid shift to state 23
-- On Ttrue shift to state 25
-- On Tthis shift to state 26
-- On Tstatic_cast shift to state 28
-- On Tsizeof shift to state 29
-- On Tsigned shift to state 30
-- On Tshort_Constr shift to state 31
-- On Tshort shift to state 32
-- On Treinterpret_cast shift to state 33
-- On Toperator shift to state 34
-- On Tnullptr shift to state 48
-- On Tnull shift to state 49
-- On Tlong_Constr shift to state 50
-- On Tlong shift to state 38
-- On Tint_Constr shift to state 51
-- On Tint shift to state 39
-- On Tfloat_Constr shift to state 52
-- On Tfloat shift to state 40
-- On Tfalse shift to state 53
-- On Tdynamic_cast shift to state 54
-- On Tdouble_Constr shift to state 55
-- On Tdouble shift to state 41
-- On Tdecltype shift to state 45
-- On Tconst_cast shift to state 56
-- On Tchar_Constr shift to state 57
-- On Tchar shift to state 58
-- On Tbool_Constr shift to state 59
-- On Tbool shift to state 60
-- On TTilde shift to state 61
-- On TString shift to state 62
-- On TPlus shift to state 63
-- On TOPar shift to state 64
-- On TOCro_Lambda shift to state 78
-- On TMul shift to state 88
-- On TMinus shift to state 89
-- On TInt shift to state 90
-- On TInc shift to state 91
-- On TIdent_TypedefConstr shift to state 106
-- On TIdent_Typedef shift to state 20
-- On TIdent_TemplatenameInQualifier_BeforeTypedef shift to state 21
-- On TIdent_TemplatenameInQualifier shift to state 12
-- On TIdent_Templatename shift to state 108
-- On TIdent_MacroString shift to state 110
-- On TIdent_ClassnameInQualifier_BeforeTypedef shift to state 111
-- On TIdent_ClassnameInQualifier shift to state 112
-- On TIdent shift to state 113
-- On TFloat shift to state 116
-- On TDec shift to state 117
-- On TColCol_BeforeTypedef shift to state 118
-- On TColCol shift to state 128
-- On TChar shift to state 174
-- On TBang shift to state 175
-- On TAndLog shift to state 176
-- On TAnd shift to state 177
-- On LDots shift to state 178
-- On unqualified_id shift to state 179
-- On unary_op shift to state 180
-- On unary_expr shift to state 181
-- On type_name shift to state 182
-- On type_cplusplus_id shift to state 183
-- On template_id shift to state 120
-- On string_elem shift to state 184
-- On simple_type_specifier shift to state 189
-- On shift_expr shift to state 217
-- On relational_expr shift to state 338
-- On qualified_id shift to state 191
-- On primary_expr shift to state 192
-- On primary_cplusplus_id shift to state 193
-- On postfix_expr shift to state 194
-- On pm_expr shift to state 219
-- On option(TColCol) shift to state 221
-- On operator_function_id shift to state 168
-- On new_expr shift to state 233
-- On nested_name_specifier2 shift to state 207
-- On nested_name_specifier shift to state 165
-- On multiplicative_expr shift to state 234
-- On literal shift to state 238
-- On lambda_introducer shift to state 239
-- On id_expression shift to state 241
-- On enum_name_or_typedef_name_or_simple_class_name shift to state 123
-- On delete_expr shift to state 242
-- On decltype_specifier shift to state 243
-- On cpp_cast_operator shift to state 244
-- On conversion_function_id shift to state 169
-- On class_or_namespace_name_for_qualifier2 shift to state 124
-- On class_or_namespace_name_for_qualifier shift to state 170
-- On cast_operator_expr shift to state 261
-- On cast_expr shift to state 262
-- On cast_constructor_expr shift to state 263
-- On basic_type_2 shift to state 264
-- On additive_expr shift to state 341
## Reductions:
-- On Tnew Tdelete
--   reduce production option(TColCol) ->

State 338:
## Known stack suffix:
## equality_expr TEqEq relational_expr
## LR(1) items:
equality_expr -> equality_expr TEqEq relational_expr . [ TXor TWhy TSup_Template TPtVirg TOrLog TOr TNotEq TEqEq TEllipsis TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAndLog TAnd RDots EOF ]
relational_expr -> relational_expr . TInf shift_expr [ TXor TWhy TSup_Template TSupEq TSup TPtVirg TOrLog TOr TNotEq TInfEq TInf TEqEq TEllipsis TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAndLog TAnd RDots EOF ]
relational_expr -> relational_expr . TSup shift_expr [ TXor TWhy TSup_Template TSupEq TSup TPtVirg TOrLog TOr TNotEq TInfEq TInf TEqEq TEllipsis TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAndLog TAnd RDots EOF ]
relational_expr -> relational_expr . TInfEq shift_expr [ TXor TWhy TSup_Template TSupEq TSup TPtVirg TOrLog TOr TNotEq TInfEq TInf TEqEq TEllipsis TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAndLog TAnd RDots EOF ]
relational_expr -> relational_expr . TSupEq shift_expr [ TXor TWhy TSup_Template TSupEq TSup TPtVirg TOrLog TOr TNotEq TInfEq TInf TEqEq TEllipsis TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAndLog TAnd RDots EOF ]
## Transitions:
-- On TSupEq shift to state 230
-- On TSup shift to state 259
-- On TInfEq shift to state 339
-- On TInf shift to state 350
## Reductions:
-- On TXor TWhy TSup_Template TPtVirg TOrLog TOr TNotEq TEqEq TEllipsis TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAndLog TAnd RDots EOF
--   reduce production equality_expr -> equality_expr TEqEq relational_expr

State 339:
## Known stack suffix:
## relational_expr TInfEq
## LR(1) items:
relational_expr -> relational_expr TInfEq . shift_expr [ TXor TWhy TSup_Template TSupEq TSup TPtVirg TOrLog TOr TNotEq TInfEq TInf TEqEq TEllipsis TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAndLog TAnd RDots EOF ]
## Transitions:
-- On Twchar_t_Constr shift to state 14
-- On Twchar_t shift to state 1
-- On Tvoid shift to state 3
-- On Tunsigned shift to state 15
-- On Ttypeof shift to state 17
-- On Ttypeid shift to state 23
-- On Ttrue shift to state 25
-- On Tthis shift to state 26
-- On Tstatic_cast shift to state 28
-- On Tsizeof shift to state 29
-- On Tsigned shift to state 30
-- On Tshort_Constr shift to state 31
-- On Tshort shift to state 32
-- On Treinterpret_cast shift to state 33
-- On Toperator shift to state 34
-- On Tnullptr shift to state 48
-- On Tnull shift to state 49
-- On Tlong_Constr shift to state 50
-- On Tlong shift to state 38
-- On Tint_Constr shift to state 51
-- On Tint shift to state 39
-- On Tfloat_Constr shift to state 52
-- On Tfloat shift to state 40
-- On Tfalse shift to state 53
-- On Tdynamic_cast shift to state 54
-- On Tdouble_Constr shift to state 55
-- On Tdouble shift to state 41
-- On Tdecltype shift to state 45
-- On Tconst_cast shift to state 56
-- On Tchar_Constr shift to state 57
-- On Tchar shift to state 58
-- On Tbool_Constr shift to state 59
-- On Tbool shift to state 60
-- On TTilde shift to state 61
-- On TString shift to state 62
-- On TPlus shift to state 63
-- On TOPar shift to state 64
-- On TOCro_Lambda shift to state 78
-- On TMul shift to state 88
-- On TMinus shift to state 89
-- On TInt shift to state 90
-- On TInc shift to state 91
-- On TIdent_TypedefConstr shift to state 106
-- On TIdent_Typedef shift to state 20
-- On TIdent_TemplatenameInQualifier_BeforeTypedef shift to state 21
-- On TIdent_TemplatenameInQualifier shift to state 12
-- On TIdent_Templatename shift to state 108
-- On TIdent_MacroString shift to state 110
-- On TIdent_ClassnameInQualifier_BeforeTypedef shift to state 111
-- On TIdent_ClassnameInQualifier shift to state 112
-- On TIdent shift to state 113
-- On TFloat shift to state 116
-- On TDec shift to state 117
-- On TColCol_BeforeTypedef shift to state 118
-- On TColCol shift to state 128
-- On TChar shift to state 174
-- On TBang shift to state 175
-- On TAndLog shift to state 176
-- On TAnd shift to state 177
-- On LDots shift to state 178
-- On unqualified_id shift to state 179
-- On unary_op shift to state 180
-- On unary_expr shift to state 181
-- On type_name shift to state 182
-- On type_cplusplus_id shift to state 183
-- On template_id shift to state 120
-- On string_elem shift to state 184
-- On simple_type_specifier shift to state 189
-- On shift_expr shift to state 340
-- On qualified_id shift to state 191
-- On primary_expr shift to state 192
-- On primary_cplusplus_id shift to state 193
-- On postfix_expr shift to state 194
-- On pm_expr shift to state 219
-- On option(TColCol) shift to state 221
-- On operator_function_id shift to state 168
-- On new_expr shift to state 233
-- On nested_name_specifier2 shift to state 207
-- On nested_name_specifier shift to state 165
-- On multiplicative_expr shift to state 234
-- On literal shift to state 238
-- On lambda_introducer shift to state 239
-- On id_expression shift to state 241
-- On enum_name_or_typedef_name_or_simple_class_name shift to state 123
-- On delete_expr shift to state 242
-- On decltype_specifier shift to state 243
-- On cpp_cast_operator shift to state 244
-- On conversion_function_id shift to state 169
-- On class_or_namespace_name_for_qualifier2 shift to state 124
-- On class_or_namespace_name_for_qualifier shift to state 170
-- On cast_operator_expr shift to state 261
-- On cast_expr shift to state 262
-- On cast_constructor_expr shift to state 263
-- On basic_type_2 shift to state 264
-- On additive_expr shift to state 341
## Reductions:
-- On Tnew Tdelete
--   reduce production option(TColCol) ->

State 340:
## Known stack suffix:
## relational_expr TInfEq shift_expr
## LR(1) items:
relational_expr -> relational_expr TInfEq shift_expr . [ TXor TWhy TSup_Template TSupEq TSup TPtVirg TOrLog TOr TNotEq TInfEq TInf TEqEq TEllipsis TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAndLog TAnd RDots EOF ]
shift_expr -> shift_expr . TShl additive_expr [ TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtVirg TOrLog TOr TNotEq TInfEq TInf TEqEq TEllipsis TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAndLog TAnd RDots EOF ]
shift_expr -> shift_expr . TShr additive_expr [ TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtVirg TOrLog TOr TNotEq TInfEq TInf TEqEq TEllipsis TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAndLog TAnd RDots EOF ]
## Transitions:
-- On TShr shift to state 218
-- On TShl shift to state 232
## Reductions:
-- On TXor TWhy TSup_Template TSupEq TSup TPtVirg TOrLog TOr TNotEq TInfEq TInf TEqEq TEllipsis TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAndLog TAnd RDots EOF
--   reduce production relational_expr -> relational_expr TInfEq shift_expr

State 341:
## Known stack suffix:
## additive_expr
## LR(1) items:
additive_expr -> additive_expr . TPlus multiplicative_expr [ TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMinus TInfEq TInf TEqEq TEllipsis TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAndLog TAnd RDots EOF ]
additive_expr -> additive_expr . TMinus multiplicative_expr [ TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMinus TInfEq TInf TEqEq TEllipsis TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAndLog TAnd RDots EOF ]
shift_expr -> additive_expr . [ TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtVirg TOrLog TOr TNotEq TInfEq TInf TEqEq TEllipsis TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAndLog TAnd RDots EOF ]
## Transitions:
-- On TPlus shift to state 342
-- On TMinus shift to state 348
## Reductions:
-- On TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtVirg TOrLog TOr TNotEq TInfEq TInf TEqEq TEllipsis TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAndLog TAnd RDots EOF
--   reduce production shift_expr -> additive_expr

State 342:
## Known stack suffix:
## additive_expr TPlus
## LR(1) items:
additive_expr -> additive_expr TPlus . multiplicative_expr [ TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMinus TInfEq TInf TEqEq TEllipsis TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAndLog TAnd RDots EOF ]
## Transitions:
-- On Twchar_t_Constr shift to state 14
-- On Twchar_t shift to state 1
-- On Tvoid shift to state 3
-- On Tunsigned shift to state 15
-- On Ttypeof shift to state 17
-- On Ttypeid shift to state 23
-- On Ttrue shift to state 25
-- On Tthis shift to state 26
-- On Tstatic_cast shift to state 28
-- On Tsizeof shift to state 29
-- On Tsigned shift to state 30
-- On Tshort_Constr shift to state 31
-- On Tshort shift to state 32
-- On Treinterpret_cast shift to state 33
-- On Toperator shift to state 34
-- On Tnullptr shift to state 48
-- On Tnull shift to state 49
-- On Tlong_Constr shift to state 50
-- On Tlong shift to state 38
-- On Tint_Constr shift to state 51
-- On Tint shift to state 39
-- On Tfloat_Constr shift to state 52
-- On Tfloat shift to state 40
-- On Tfalse shift to state 53
-- On Tdynamic_cast shift to state 54
-- On Tdouble_Constr shift to state 55
-- On Tdouble shift to state 41
-- On Tdecltype shift to state 45
-- On Tconst_cast shift to state 56
-- On Tchar_Constr shift to state 57
-- On Tchar shift to state 58
-- On Tbool_Constr shift to state 59
-- On Tbool shift to state 60
-- On TTilde shift to state 61
-- On TString shift to state 62
-- On TPlus shift to state 63
-- On TOPar shift to state 64
-- On TOCro_Lambda shift to state 78
-- On TMul shift to state 88
-- On TMinus shift to state 89
-- On TInt shift to state 90
-- On TInc shift to state 91
-- On TIdent_TypedefConstr shift to state 106
-- On TIdent_Typedef shift to state 20
-- On TIdent_TemplatenameInQualifier_BeforeTypedef shift to state 21
-- On TIdent_TemplatenameInQualifier shift to state 12
-- On TIdent_Templatename shift to state 108
-- On TIdent_MacroString shift to state 110
-- On TIdent_ClassnameInQualifier_BeforeTypedef shift to state 111
-- On TIdent_ClassnameInQualifier shift to state 112
-- On TIdent shift to state 113
-- On TFloat shift to state 116
-- On TDec shift to state 117
-- On TColCol_BeforeTypedef shift to state 118
-- On TColCol shift to state 128
-- On TChar shift to state 174
-- On TBang shift to state 175
-- On TAndLog shift to state 176
-- On TAnd shift to state 177
-- On LDots shift to state 178
-- On unqualified_id shift to state 179
-- On unary_op shift to state 180
-- On unary_expr shift to state 181
-- On type_name shift to state 182
-- On type_cplusplus_id shift to state 183
-- On template_id shift to state 120
-- On string_elem shift to state 184
-- On simple_type_specifier shift to state 189
-- On qualified_id shift to state 191
-- On primary_expr shift to state 192
-- On primary_cplusplus_id shift to state 193
-- On postfix_expr shift to state 194
-- On pm_expr shift to state 219
-- On option(TColCol) shift to state 221
-- On operator_function_id shift to state 168
-- On new_expr shift to state 233
-- On nested_name_specifier2 shift to state 207
-- On nested_name_specifier shift to state 165
-- On multiplicative_expr shift to state 343
-- On literal shift to state 238
-- On lambda_introducer shift to state 239
-- On id_expression shift to state 241
-- On enum_name_or_typedef_name_or_simple_class_name shift to state 123
-- On delete_expr shift to state 242
-- On decltype_specifier shift to state 243
-- On cpp_cast_operator shift to state 244
-- On conversion_function_id shift to state 169
-- On class_or_namespace_name_for_qualifier2 shift to state 124
-- On class_or_namespace_name_for_qualifier shift to state 170
-- On cast_operator_expr shift to state 261
-- On cast_expr shift to state 262
-- On cast_constructor_expr shift to state 263
-- On basic_type_2 shift to state 264
## Reductions:
-- On Tnew Tdelete
--   reduce production option(TColCol) ->

State 343:
## Known stack suffix:
## additive_expr TPlus multiplicative_expr
## LR(1) items:
additive_expr -> additive_expr TPlus multiplicative_expr . [ TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMinus TInfEq TInf TEqEq TEllipsis TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAndLog TAnd RDots EOF ]
multiplicative_expr -> multiplicative_expr . TMul pm_expr [ TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TEllipsis TDiv TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAndLog TAnd RDots EOF ]
multiplicative_expr -> multiplicative_expr . TDiv pm_expr [ TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TEllipsis TDiv TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAndLog TAnd RDots EOF ]
multiplicative_expr -> multiplicative_expr . TMod pm_expr [ TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TEllipsis TDiv TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAndLog TAnd RDots EOF ]
## Transitions:
-- On TMul shift to state 235
-- On TMod shift to state 344
-- On TDiv shift to state 346
## Reductions:
-- On TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMinus TInfEq TInf TEqEq TEllipsis TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAndLog TAnd RDots EOF
--   reduce production additive_expr -> additive_expr TPlus multiplicative_expr

State 344:
## Known stack suffix:
## multiplicative_expr TMod
## LR(1) items:
multiplicative_expr -> multiplicative_expr TMod . pm_expr [ TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TEllipsis TDiv TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAndLog TAnd RDots EOF ]
## Transitions:
-- On Twchar_t_Constr shift to state 14
-- On Twchar_t shift to state 1
-- On Tvoid shift to state 3
-- On Tunsigned shift to state 15
-- On Ttypeof shift to state 17
-- On Ttypeid shift to state 23
-- On Ttrue shift to state 25
-- On Tthis shift to state 26
-- On Tstatic_cast shift to state 28
-- On Tsizeof shift to state 29
-- On Tsigned shift to state 30
-- On Tshort_Constr shift to state 31
-- On Tshort shift to state 32
-- On Treinterpret_cast shift to state 33
-- On Toperator shift to state 34
-- On Tnullptr shift to state 48
-- On Tnull shift to state 49
-- On Tlong_Constr shift to state 50
-- On Tlong shift to state 38
-- On Tint_Constr shift to state 51
-- On Tint shift to state 39
-- On Tfloat_Constr shift to state 52
-- On Tfloat shift to state 40
-- On Tfalse shift to state 53
-- On Tdynamic_cast shift to state 54
-- On Tdouble_Constr shift to state 55
-- On Tdouble shift to state 41
-- On Tdecltype shift to state 45
-- On Tconst_cast shift to state 56
-- On Tchar_Constr shift to state 57
-- On Tchar shift to state 58
-- On Tbool_Constr shift to state 59
-- On Tbool shift to state 60
-- On TTilde shift to state 61
-- On TString shift to state 62
-- On TPlus shift to state 63
-- On TOPar shift to state 64
-- On TOCro_Lambda shift to state 78
-- On TMul shift to state 88
-- On TMinus shift to state 89
-- On TInt shift to state 90
-- On TInc shift to state 91
-- On TIdent_TypedefConstr shift to state 106
-- On TIdent_Typedef shift to state 20
-- On TIdent_TemplatenameInQualifier_BeforeTypedef shift to state 21
-- On TIdent_TemplatenameInQualifier shift to state 12
-- On TIdent_Templatename shift to state 108
-- On TIdent_MacroString shift to state 110
-- On TIdent_ClassnameInQualifier_BeforeTypedef shift to state 111
-- On TIdent_ClassnameInQualifier shift to state 112
-- On TIdent shift to state 113
-- On TFloat shift to state 116
-- On TDec shift to state 117
-- On TColCol_BeforeTypedef shift to state 118
-- On TColCol shift to state 128
-- On TChar shift to state 174
-- On TBang shift to state 175
-- On TAndLog shift to state 176
-- On TAnd shift to state 177
-- On LDots shift to state 178
-- On unqualified_id shift to state 179
-- On unary_op shift to state 180
-- On unary_expr shift to state 181
-- On type_name shift to state 182
-- On type_cplusplus_id shift to state 183
-- On template_id shift to state 120
-- On string_elem shift to state 184
-- On simple_type_specifier shift to state 189
-- On qualified_id shift to state 191
-- On primary_expr shift to state 192
-- On primary_cplusplus_id shift to state 193
-- On postfix_expr shift to state 194
-- On pm_expr shift to state 345
-- On option(TColCol) shift to state 221
-- On operator_function_id shift to state 168
-- On new_expr shift to state 233
-- On nested_name_specifier2 shift to state 207
-- On nested_name_specifier shift to state 165
-- On literal shift to state 238
-- On lambda_introducer shift to state 239
-- On id_expression shift to state 241
-- On enum_name_or_typedef_name_or_simple_class_name shift to state 123
-- On delete_expr shift to state 242
-- On decltype_specifier shift to state 243
-- On cpp_cast_operator shift to state 244
-- On conversion_function_id shift to state 169
-- On class_or_namespace_name_for_qualifier2 shift to state 124
-- On class_or_namespace_name_for_qualifier shift to state 170
-- On cast_operator_expr shift to state 261
-- On cast_expr shift to state 262
-- On cast_constructor_expr shift to state 263
-- On basic_type_2 shift to state 264
## Reductions:
-- On Tnew Tdelete
--   reduce production option(TColCol) ->

State 345:
## Known stack suffix:
## multiplicative_expr TMod pm_expr
## LR(1) items:
multiplicative_expr -> multiplicative_expr TMod pm_expr . [ TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TEllipsis TDiv TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAndLog TAnd RDots EOF ]
pm_expr -> pm_expr . TDotStar cast_expr [ TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtrOpStar TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TEllipsis TDotStar TDiv TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAndLog TAnd RDots EOF ]
pm_expr -> pm_expr . TPtrOpStar cast_expr [ TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtrOpStar TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TEllipsis TDotStar TDiv TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAndLog TAnd RDots EOF ]
## Transitions:
-- On TPtrOpStar shift to state 220
-- On TDotStar shift to state 237
## Reductions:
-- On TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TEllipsis TDiv TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAndLog TAnd RDots EOF
--   reduce production multiplicative_expr -> multiplicative_expr TMod pm_expr

State 346:
## Known stack suffix:
## multiplicative_expr TDiv
## LR(1) items:
multiplicative_expr -> multiplicative_expr TDiv . pm_expr [ TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TEllipsis TDiv TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAndLog TAnd RDots EOF ]
## Transitions:
-- On Twchar_t_Constr shift to state 14
-- On Twchar_t shift to state 1
-- On Tvoid shift to state 3
-- On Tunsigned shift to state 15
-- On Ttypeof shift to state 17
-- On Ttypeid shift to state 23
-- On Ttrue shift to state 25
-- On Tthis shift to state 26
-- On Tstatic_cast shift to state 28
-- On Tsizeof shift to state 29
-- On Tsigned shift to state 30
-- On Tshort_Constr shift to state 31
-- On Tshort shift to state 32
-- On Treinterpret_cast shift to state 33
-- On Toperator shift to state 34
-- On Tnullptr shift to state 48
-- On Tnull shift to state 49
-- On Tlong_Constr shift to state 50
-- On Tlong shift to state 38
-- On Tint_Constr shift to state 51
-- On Tint shift to state 39
-- On Tfloat_Constr shift to state 52
-- On Tfloat shift to state 40
-- On Tfalse shift to state 53
-- On Tdynamic_cast shift to state 54
-- On Tdouble_Constr shift to state 55
-- On Tdouble shift to state 41
-- On Tdecltype shift to state 45
-- On Tconst_cast shift to state 56
-- On Tchar_Constr shift to state 57
-- On Tchar shift to state 58
-- On Tbool_Constr shift to state 59
-- On Tbool shift to state 60
-- On TTilde shift to state 61
-- On TString shift to state 62
-- On TPlus shift to state 63
-- On TOPar shift to state 64
-- On TOCro_Lambda shift to state 78
-- On TMul shift to state 88
-- On TMinus shift to state 89
-- On TInt shift to state 90
-- On TInc shift to state 91
-- On TIdent_TypedefConstr shift to state 106
-- On TIdent_Typedef shift to state 20
-- On TIdent_TemplatenameInQualifier_BeforeTypedef shift to state 21
-- On TIdent_TemplatenameInQualifier shift to state 12
-- On TIdent_Templatename shift to state 108
-- On TIdent_MacroString shift to state 110
-- On TIdent_ClassnameInQualifier_BeforeTypedef shift to state 111
-- On TIdent_ClassnameInQualifier shift to state 112
-- On TIdent shift to state 113
-- On TFloat shift to state 116
-- On TDec shift to state 117
-- On TColCol_BeforeTypedef shift to state 118
-- On TColCol shift to state 128
-- On TChar shift to state 174
-- On TBang shift to state 175
-- On TAndLog shift to state 176
-- On TAnd shift to state 177
-- On LDots shift to state 178
-- On unqualified_id shift to state 179
-- On unary_op shift to state 180
-- On unary_expr shift to state 181
-- On type_name shift to state 182
-- On type_cplusplus_id shift to state 183
-- On template_id shift to state 120
-- On string_elem shift to state 184
-- On simple_type_specifier shift to state 189
-- On qualified_id shift to state 191
-- On primary_expr shift to state 192
-- On primary_cplusplus_id shift to state 193
-- On postfix_expr shift to state 194
-- On pm_expr shift to state 347
-- On option(TColCol) shift to state 221
-- On operator_function_id shift to state 168
-- On new_expr shift to state 233
-- On nested_name_specifier2 shift to state 207
-- On nested_name_specifier shift to state 165
-- On literal shift to state 238
-- On lambda_introducer shift to state 239
-- On id_expression shift to state 241
-- On enum_name_or_typedef_name_or_simple_class_name shift to state 123
-- On delete_expr shift to state 242
-- On decltype_specifier shift to state 243
-- On cpp_cast_operator shift to state 244
-- On conversion_function_id shift to state 169
-- On class_or_namespace_name_for_qualifier2 shift to state 124
-- On class_or_namespace_name_for_qualifier shift to state 170
-- On cast_operator_expr shift to state 261
-- On cast_expr shift to state 262
-- On cast_constructor_expr shift to state 263
-- On basic_type_2 shift to state 264
## Reductions:
-- On Tnew Tdelete
--   reduce production option(TColCol) ->

State 347:
## Known stack suffix:
## multiplicative_expr TDiv pm_expr
## LR(1) items:
multiplicative_expr -> multiplicative_expr TDiv pm_expr . [ TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TEllipsis TDiv TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAndLog TAnd RDots EOF ]
pm_expr -> pm_expr . TDotStar cast_expr [ TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtrOpStar TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TEllipsis TDotStar TDiv TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAndLog TAnd RDots EOF ]
pm_expr -> pm_expr . TPtrOpStar cast_expr [ TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtrOpStar TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TEllipsis TDotStar TDiv TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAndLog TAnd RDots EOF ]
## Transitions:
-- On TPtrOpStar shift to state 220
-- On TDotStar shift to state 237
## Reductions:
-- On TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TEllipsis TDiv TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAndLog TAnd RDots EOF
--   reduce production multiplicative_expr -> multiplicative_expr TDiv pm_expr

State 348:
## Known stack suffix:
## additive_expr TMinus
## LR(1) items:
additive_expr -> additive_expr TMinus . multiplicative_expr [ TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMinus TInfEq TInf TEqEq TEllipsis TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAndLog TAnd RDots EOF ]
## Transitions:
-- On Twchar_t_Constr shift to state 14
-- On Twchar_t shift to state 1
-- On Tvoid shift to state 3
-- On Tunsigned shift to state 15
-- On Ttypeof shift to state 17
-- On Ttypeid shift to state 23
-- On Ttrue shift to state 25
-- On Tthis shift to state 26
-- On Tstatic_cast shift to state 28
-- On Tsizeof shift to state 29
-- On Tsigned shift to state 30
-- On Tshort_Constr shift to state 31
-- On Tshort shift to state 32
-- On Treinterpret_cast shift to state 33
-- On Toperator shift to state 34
-- On Tnullptr shift to state 48
-- On Tnull shift to state 49
-- On Tlong_Constr shift to state 50
-- On Tlong shift to state 38
-- On Tint_Constr shift to state 51
-- On Tint shift to state 39
-- On Tfloat_Constr shift to state 52
-- On Tfloat shift to state 40
-- On Tfalse shift to state 53
-- On Tdynamic_cast shift to state 54
-- On Tdouble_Constr shift to state 55
-- On Tdouble shift to state 41
-- On Tdecltype shift to state 45
-- On Tconst_cast shift to state 56
-- On Tchar_Constr shift to state 57
-- On Tchar shift to state 58
-- On Tbool_Constr shift to state 59
-- On Tbool shift to state 60
-- On TTilde shift to state 61
-- On TString shift to state 62
-- On TPlus shift to state 63
-- On TOPar shift to state 64
-- On TOCro_Lambda shift to state 78
-- On TMul shift to state 88
-- On TMinus shift to state 89
-- On TInt shift to state 90
-- On TInc shift to state 91
-- On TIdent_TypedefConstr shift to state 106
-- On TIdent_Typedef shift to state 20
-- On TIdent_TemplatenameInQualifier_BeforeTypedef shift to state 21
-- On TIdent_TemplatenameInQualifier shift to state 12
-- On TIdent_Templatename shift to state 108
-- On TIdent_MacroString shift to state 110
-- On TIdent_ClassnameInQualifier_BeforeTypedef shift to state 111
-- On TIdent_ClassnameInQualifier shift to state 112
-- On TIdent shift to state 113
-- On TFloat shift to state 116
-- On TDec shift to state 117
-- On TColCol_BeforeTypedef shift to state 118
-- On TColCol shift to state 128
-- On TChar shift to state 174
-- On TBang shift to state 175
-- On TAndLog shift to state 176
-- On TAnd shift to state 177
-- On LDots shift to state 178
-- On unqualified_id shift to state 179
-- On unary_op shift to state 180
-- On unary_expr shift to state 181
-- On type_name shift to state 182
-- On type_cplusplus_id shift to state 183
-- On template_id shift to state 120
-- On string_elem shift to state 184
-- On simple_type_specifier shift to state 189
-- On qualified_id shift to state 191
-- On primary_expr shift to state 192
-- On primary_cplusplus_id shift to state 193
-- On postfix_expr shift to state 194
-- On pm_expr shift to state 219
-- On option(TColCol) shift to state 221
-- On operator_function_id shift to state 168
-- On new_expr shift to state 233
-- On nested_name_specifier2 shift to state 207
-- On nested_name_specifier shift to state 165
-- On multiplicative_expr shift to state 349
-- On literal shift to state 238
-- On lambda_introducer shift to state 239
-- On id_expression shift to state 241
-- On enum_name_or_typedef_name_or_simple_class_name shift to state 123
-- On delete_expr shift to state 242
-- On decltype_specifier shift to state 243
-- On cpp_cast_operator shift to state 244
-- On conversion_function_id shift to state 169
-- On class_or_namespace_name_for_qualifier2 shift to state 124
-- On class_or_namespace_name_for_qualifier shift to state 170
-- On cast_operator_expr shift to state 261
-- On cast_expr shift to state 262
-- On cast_constructor_expr shift to state 263
-- On basic_type_2 shift to state 264
## Reductions:
-- On Tnew Tdelete
--   reduce production option(TColCol) ->

State 349:
## Known stack suffix:
## additive_expr TMinus multiplicative_expr
## LR(1) items:
additive_expr -> additive_expr TMinus multiplicative_expr . [ TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMinus TInfEq TInf TEqEq TEllipsis TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAndLog TAnd RDots EOF ]
multiplicative_expr -> multiplicative_expr . TMul pm_expr [ TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TEllipsis TDiv TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAndLog TAnd RDots EOF ]
multiplicative_expr -> multiplicative_expr . TDiv pm_expr [ TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TEllipsis TDiv TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAndLog TAnd RDots EOF ]
multiplicative_expr -> multiplicative_expr . TMod pm_expr [ TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TEllipsis TDiv TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAndLog TAnd RDots EOF ]
## Transitions:
-- On TMul shift to state 235
-- On TMod shift to state 344
-- On TDiv shift to state 346
## Reductions:
-- On TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMinus TInfEq TInf TEqEq TEllipsis TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAndLog TAnd RDots EOF
--   reduce production additive_expr -> additive_expr TMinus multiplicative_expr

State 350:
## Known stack suffix:
## relational_expr TInf
## LR(1) items:
relational_expr -> relational_expr TInf . shift_expr [ TXor TWhy TSup_Template TSupEq TSup TPtVirg TOrLog TOr TNotEq TInfEq TInf TEqEq TEllipsis TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAndLog TAnd RDots EOF ]
## Transitions:
-- On Twchar_t_Constr shift to state 14
-- On Twchar_t shift to state 1
-- On Tvoid shift to state 3
-- On Tunsigned shift to state 15
-- On Ttypeof shift to state 17
-- On Ttypeid shift to state 23
-- On Ttrue shift to state 25
-- On Tthis shift to state 26
-- On Tstatic_cast shift to state 28
-- On Tsizeof shift to state 29
-- On Tsigned shift to state 30
-- On Tshort_Constr shift to state 31
-- On Tshort shift to state 32
-- On Treinterpret_cast shift to state 33
-- On Toperator shift to state 34
-- On Tnullptr shift to state 48
-- On Tnull shift to state 49
-- On Tlong_Constr shift to state 50
-- On Tlong shift to state 38
-- On Tint_Constr shift to state 51
-- On Tint shift to state 39
-- On Tfloat_Constr shift to state 52
-- On Tfloat shift to state 40
-- On Tfalse shift to state 53
-- On Tdynamic_cast shift to state 54
-- On Tdouble_Constr shift to state 55
-- On Tdouble shift to state 41
-- On Tdecltype shift to state 45
-- On Tconst_cast shift to state 56
-- On Tchar_Constr shift to state 57
-- On Tchar shift to state 58
-- On Tbool_Constr shift to state 59
-- On Tbool shift to state 60
-- On TTilde shift to state 61
-- On TString shift to state 62
-- On TPlus shift to state 63
-- On TOPar shift to state 64
-- On TOCro_Lambda shift to state 78
-- On TMul shift to state 88
-- On TMinus shift to state 89
-- On TInt shift to state 90
-- On TInc shift to state 91
-- On TIdent_TypedefConstr shift to state 106
-- On TIdent_Typedef shift to state 20
-- On TIdent_TemplatenameInQualifier_BeforeTypedef shift to state 21
-- On TIdent_TemplatenameInQualifier shift to state 12
-- On TIdent_Templatename shift to state 108
-- On TIdent_MacroString shift to state 110
-- On TIdent_ClassnameInQualifier_BeforeTypedef shift to state 111
-- On TIdent_ClassnameInQualifier shift to state 112
-- On TIdent shift to state 113
-- On TFloat shift to state 116
-- On TDec shift to state 117
-- On TColCol_BeforeTypedef shift to state 118
-- On TColCol shift to state 128
-- On TChar shift to state 174
-- On TBang shift to state 175
-- On TAndLog shift to state 176
-- On TAnd shift to state 177
-- On LDots shift to state 178
-- On unqualified_id shift to state 179
-- On unary_op shift to state 180
-- On unary_expr shift to state 181
-- On type_name shift to state 182
-- On type_cplusplus_id shift to state 183
-- On template_id shift to state 120
-- On string_elem shift to state 184
-- On simple_type_specifier shift to state 189
-- On shift_expr shift to state 351
-- On qualified_id shift to state 191
-- On primary_expr shift to state 192
-- On primary_cplusplus_id shift to state 193
-- On postfix_expr shift to state 194
-- On pm_expr shift to state 219
-- On option(TColCol) shift to state 221
-- On operator_function_id shift to state 168
-- On new_expr shift to state 233
-- On nested_name_specifier2 shift to state 207
-- On nested_name_specifier shift to state 165
-- On multiplicative_expr shift to state 234
-- On literal shift to state 238
-- On lambda_introducer shift to state 239
-- On id_expression shift to state 241
-- On enum_name_or_typedef_name_or_simple_class_name shift to state 123
-- On delete_expr shift to state 242
-- On decltype_specifier shift to state 243
-- On cpp_cast_operator shift to state 244
-- On conversion_function_id shift to state 169
-- On class_or_namespace_name_for_qualifier2 shift to state 124
-- On class_or_namespace_name_for_qualifier shift to state 170
-- On cast_operator_expr shift to state 261
-- On cast_expr shift to state 262
-- On cast_constructor_expr shift to state 263
-- On basic_type_2 shift to state 264
-- On additive_expr shift to state 341
## Reductions:
-- On Tnew Tdelete
--   reduce production option(TColCol) ->

State 351:
## Known stack suffix:
## relational_expr TInf shift_expr
## LR(1) items:
relational_expr -> relational_expr TInf shift_expr . [ TXor TWhy TSup_Template TSupEq TSup TPtVirg TOrLog TOr TNotEq TInfEq TInf TEqEq TEllipsis TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAndLog TAnd RDots EOF ]
shift_expr -> shift_expr . TShl additive_expr [ TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtVirg TOrLog TOr TNotEq TInfEq TInf TEqEq TEllipsis TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAndLog TAnd RDots EOF ]
shift_expr -> shift_expr . TShr additive_expr [ TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtVirg TOrLog TOr TNotEq TInfEq TInf TEqEq TEllipsis TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAndLog TAnd RDots EOF ]
## Transitions:
-- On TShr shift to state 218
-- On TShl shift to state 232
## Reductions:
-- On TXor TWhy TSup_Template TSupEq TSup TPtVirg TOrLog TOr TNotEq TInfEq TInf TEqEq TEllipsis TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAndLog TAnd RDots EOF
--   reduce production relational_expr -> relational_expr TInf shift_expr

State 352:
## Known stack suffix:
## cast_expr TAssign
## LR(1) items:
assign_expr -> cast_expr TAssign . assign_expr [ TSup_Template TPtVirg TEllipsis TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace RDots EOF ]
## Transitions:
-- On Twchar_t_Constr shift to state 14
-- On Twchar_t shift to state 1
-- On Tvoid shift to state 3
-- On Tunsigned shift to state 15
-- On Ttypeof shift to state 17
-- On Ttypeid shift to state 23
-- On Ttrue shift to state 25
-- On Tthrow shift to state 47
-- On Tthis shift to state 26
-- On Tstatic_cast shift to state 28
-- On Tsizeof shift to state 29
-- On Tsigned shift to state 30
-- On Tshort_Constr shift to state 31
-- On Tshort shift to state 32
-- On Treinterpret_cast shift to state 33
-- On Toperator shift to state 34
-- On Tnullptr shift to state 48
-- On Tnull shift to state 49
-- On Tlong_Constr shift to state 50
-- On Tlong shift to state 38
-- On Tint_Constr shift to state 51
-- On Tint shift to state 39
-- On Tfloat_Constr shift to state 52
-- On Tfloat shift to state 40
-- On Tfalse shift to state 53
-- On Tdynamic_cast shift to state 54
-- On Tdouble_Constr shift to state 55
-- On Tdouble shift to state 41
-- On Tdecltype shift to state 45
-- On Tconst_cast shift to state 56
-- On Tchar_Constr shift to state 57
-- On Tchar shift to state 58
-- On Tbool_Constr shift to state 59
-- On Tbool shift to state 60
-- On TTilde shift to state 61
-- On TString shift to state 62
-- On TPlus shift to state 63
-- On TOPar shift to state 64
-- On TOCro_Lambda shift to state 78
-- On TMul shift to state 88
-- On TMinus shift to state 89
-- On TInt shift to state 90
-- On TInc shift to state 91
-- On TIdent_TypedefConstr shift to state 106
-- On TIdent_Typedef shift to state 20
-- On TIdent_TemplatenameInQualifier_BeforeTypedef shift to state 21
-- On TIdent_TemplatenameInQualifier shift to state 12
-- On TIdent_Templatename shift to state 108
-- On TIdent_MacroString shift to state 110
-- On TIdent_ClassnameInQualifier_BeforeTypedef shift to state 111
-- On TIdent_ClassnameInQualifier shift to state 112
-- On TIdent shift to state 113
-- On TFloat shift to state 116
-- On TDec shift to state 117
-- On TColCol_BeforeTypedef shift to state 118
-- On TColCol shift to state 128
-- On TChar shift to state 174
-- On TBang shift to state 175
-- On TAndLog shift to state 176
-- On TAnd shift to state 177
-- On LDots shift to state 178
-- On unqualified_id shift to state 179
-- On unary_op shift to state 180
-- On unary_expr shift to state 181
-- On type_name shift to state 182
-- On type_cplusplus_id shift to state 183
-- On template_id shift to state 120
-- On string_elem shift to state 184
-- On simple_type_specifier shift to state 189
-- On shift_expr shift to state 217
-- On relational_expr shift to state 229
-- On qualified_id shift to state 191
-- On primary_expr shift to state 192
-- On primary_cplusplus_id shift to state 193
-- On postfix_expr shift to state 194
-- On pm_expr shift to state 219
-- On option(TColCol) shift to state 221
-- On operator_function_id shift to state 168
-- On new_expr shift to state 233
-- On nested_name_specifier2 shift to state 207
-- On nested_name_specifier shift to state 165
-- On multiplicative_expr shift to state 234
-- On logical_or_expr shift to state 246
-- On logical_and_expr shift to state 250
-- On literal shift to state 238
-- On lambda_introducer shift to state 239
-- On inclusive_or_expr shift to state 272
-- On id_expression shift to state 241
-- On exclusive_or_expr shift to state 273
-- On equality_expr shift to state 256
-- On enum_name_or_typedef_name_or_simple_class_name shift to state 123
-- On delete_expr shift to state 242
-- On decltype_specifier shift to state 243
-- On cpp_cast_operator shift to state 244
-- On conversion_function_id shift to state 169
-- On cond_expr shift to state 330
-- On class_or_namespace_name_for_qualifier2 shift to state 124
-- On class_or_namespace_name_for_qualifier shift to state 170
-- On cast_operator_expr shift to state 261
-- On cast_expr shift to state 331
-- On cast_constructor_expr shift to state 263
-- On basic_type_2 shift to state 264
-- On assign_expr shift to state 353
-- On and_expr shift to state 334
-- On additive_expr shift to state 341
## Reductions:
-- On Tnew Tdelete
--   reduce production option(TColCol) ->

State 353:
## Known stack suffix:
## cast_expr TAssign assign_expr
## LR(1) items:
assign_expr -> cast_expr TAssign assign_expr . [ TSup_Template TPtVirg TEllipsis TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace RDots EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production assign_expr -> cast_expr TAssign assign_expr

State 354:
## Known stack suffix:
## assign_expr
## LR(1) items:
argument -> assign_expr . [ TComma TCPar_EOL TCPar ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production argument -> assign_expr

State 355:
## Known stack suffix:
## argument
## LR(1) items:
listc(argument) -> argument . [ TComma TCPar_EOL TCPar ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production listc(argument) -> argument

State 356:
## Known stack suffix:
## Tstatic TIdent_MacroDecl
## LR(1) items:
simple_declaration -> Tstatic TIdent_MacroDecl . TOPar listc(argument) TCPar TPtVirg [ Twhile Twchar_t_Constr Twchar_t Tvolatile Tvoid Tvirtual Tusing Tunsigned Tunion Ttypeof Ttypename Ttypeid Ttypedef Ttry Ttrue Tthrow Tthread_local Tthis Ttemplate Tswitch Tstruct Tstatic_cast Tstatic Tsizeof Tsigned Tshort_Constr Tshort Treturn Trestrict Treinterpret_cast Tregister Tpublic Tprotected Tprivate Toperator Tnullptr Tnull Tnew Tnamespace Tmutable Tlong_Constr Tlong Tint_Constr Tint Tinline Tif Tgoto Tfriend Tfor Tfloat_Constr Tfloat Tfalse Textern Texplicit Tenum Telse Tdynamic_cast Tdouble_Constr Tdouble Tdo Tdelete Tdefault Tdecltype Tcontinue Tconstexpr Tconst_cast Tconst Tclass Tchar_Constr Tchar Tcase Tbreak Tbool_Constr Tbool Tauto Tasm TUndef TTilde TString TPtVirg TPlus TOPar TOCro_Lambda TOBrace TMul TMinus TInt TInclude TInc TIfdefelse TIfdefelif TIfdefVersion TIfdefMisc TIfdefBool TIfdef TIdent_TypedefConstr TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_MacroString TIdent_MacroStmt TIdent_MacroIterator TIdent_MacroDecl TIdent_Constructor TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TIdent TFloat TEndif TEllipsis TDefine TDec TCppDirectiveOther TCommentNewline_DefineEndOfMacro TColCol_BeforeTypedef TColCol TChar TCBrace TBang TAndLog TAnd LDots EOF ]
## Transitions:
-- On TOPar shift to state 357
## Reductions:

State 357:
## Known stack suffix:
## Tstatic TIdent_MacroDecl TOPar
## LR(1) items:
simple_declaration -> Tstatic TIdent_MacroDecl TOPar . listc(argument) TCPar TPtVirg [ Twhile Twchar_t_Constr Twchar_t Tvolatile Tvoid Tvirtual Tusing Tunsigned Tunion Ttypeof Ttypename Ttypeid Ttypedef Ttry Ttrue Tthrow Tthread_local Tthis Ttemplate Tswitch Tstruct Tstatic_cast Tstatic Tsizeof Tsigned Tshort_Constr Tshort Treturn Trestrict Treinterpret_cast Tregister Tpublic Tprotected Tprivate Toperator Tnullptr Tnull Tnew Tnamespace Tmutable Tlong_Constr Tlong Tint_Constr Tint Tinline Tif Tgoto Tfriend Tfor Tfloat_Constr Tfloat Tfalse Textern Texplicit Tenum Telse Tdynamic_cast Tdouble_Constr Tdouble Tdo Tdelete Tdefault Tdecltype Tcontinue Tconstexpr Tconst_cast Tconst Tclass Tchar_Constr Tchar Tcase Tbreak Tbool_Constr Tbool Tauto Tasm TUndef TTilde TString TPtVirg TPlus TOPar TOCro_Lambda TOBrace TMul TMinus TInt TInclude TInc TIfdefelse TIfdefelif TIfdefVersion TIfdefMisc TIfdefBool TIfdef TIdent_TypedefConstr TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_MacroString TIdent_MacroStmt TIdent_MacroIterator TIdent_MacroDecl TIdent_Constructor TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TIdent TFloat TEndif TEllipsis TDefine TDec TCppDirectiveOther TCommentNewline_DefineEndOfMacro TColCol_BeforeTypedef TColCol TChar TCBrace TBang TAndLog TAnd LDots EOF ]
## Transitions:
-- On Twchar_t_Constr shift to state 14
-- On Twchar_t shift to state 1
-- On Tvolatile shift to state 2
-- On Tvoid shift to state 3
-- On Tunsigned shift to state 15
-- On Tunion shift to state 16
-- On Ttypeof shift to state 17
-- On Ttypename shift to state 19
-- On Ttypeid shift to state 23
-- On Ttrue shift to state 25
-- On Tthrow shift to state 47
-- On Tthis shift to state 26
-- On Tstruct shift to state 27
-- On Tstatic_cast shift to state 28
-- On Tsizeof shift to state 29
-- On Tsigned shift to state 30
-- On Tshort_Constr shift to state 31
-- On Tshort shift to state 32
-- On Trestrict shift to state 65
-- On Treinterpret_cast shift to state 33
-- On Toperator shift to state 34
-- On Tnullptr shift to state 48
-- On Tnull shift to state 49
-- On Tlong_Constr shift to state 50
-- On Tlong shift to state 38
-- On Tint_Constr shift to state 51
-- On Tint shift to state 39
-- On Tfloat_Constr shift to state 52
-- On Tfloat shift to state 40
-- On Tfalse shift to state 53
-- On Tenum shift to state 66
-- On Tdynamic_cast shift to state 54
-- On Tdouble_Constr shift to state 55
-- On Tdouble shift to state 41
-- On Tdecltype shift to state 45
-- On Tconst_cast shift to state 56
-- On Tconst shift to state 76
-- On Tclass shift to state 77
-- On Tchar_Constr shift to state 57
-- On Tchar shift to state 58
-- On Tbool_Constr shift to state 59
-- On Tbool shift to state 60
-- On TTilde shift to state 61
-- On TString shift to state 62
-- On TPlus shift to state 63
-- On TOPar shift to state 64
-- On TOCro_Lambda shift to state 78
-- On TMul shift to state 88
-- On TMinus shift to state 89
-- On TInt shift to state 90
-- On TInc shift to state 91
-- On TIdent_TypedefConstr shift to state 106
-- On TIdent_Typedef shift to state 20
-- On TIdent_TemplatenameInQualifier_BeforeTypedef shift to state 21
-- On TIdent_TemplatenameInQualifier shift to state 12
-- On TIdent_Templatename shift to state 108
-- On TIdent_MacroString shift to state 110
-- On TIdent_ClassnameInQualifier_BeforeTypedef shift to state 111
-- On TIdent_ClassnameInQualifier shift to state 112
-- On TIdent shift to state 113
-- On TFloat shift to state 116
-- On TEllipsis shift to state 201
-- On TDec shift to state 117
-- On TColCol_BeforeTypedef shift to state 118
-- On TColCol shift to state 128
-- On TChar shift to state 174
-- On TBang shift to state 175
-- On TAny_Action shift to state 202
-- On TAndLog shift to state 176
-- On TAnd shift to state 177
-- On LDots shift to state 178
-- On unqualified_id shift to state 179
-- On unary_op shift to state 180
-- On unary_expr shift to state 181
-- On type_spec shift to state 204
-- On type_name shift to state 182
-- On type_id shift to state 224
-- On type_cplusplus_id shift to state 183
-- On template_id shift to state 120
-- On string_elem shift to state 184
-- On spec_qualif_list shift to state 225
-- On simple_type_specifier shift to state 266
-- On shift_expr shift to state 217
-- On relational_expr shift to state 229
-- On qualified_id shift to state 191
-- On primary_expr shift to state 192
-- On primary_cplusplus_id shift to state 193
-- On postfix_expr shift to state 194
-- On pm_expr shift to state 219
-- On option(TColCol) shift to state 221
-- On operator_function_id shift to state 168
-- On nonempty_list(TAny_Action) shift to state 269
-- On new_expr shift to state 233
-- On nested_name_specifier2 shift to state 207
-- On nested_name_specifier shift to state 165
-- On multiplicative_expr shift to state 234
-- On logical_or_expr shift to state 246
-- On logical_and_expr shift to state 250
-- On literal shift to state 238
-- On listc(argument) shift to state 358
-- On lambda_introducer shift to state 239
-- On inclusive_or_expr shift to state 272
-- On id_expression shift to state 241
-- On exclusive_or_expr shift to state 273
-- On equality_expr shift to state 256
-- On enum_specifier shift to state 209
-- On enum_name_or_typedef_name_or_simple_class_name shift to state 123
-- On enum_head shift to state 210
-- On elaborated_type_specifier shift to state 274
-- On delete_expr shift to state 242
-- On decltype_specifier shift to state 243
-- On cv_qualif shift to state 275
-- On cpp_cast_operator shift to state 244
-- On conversion_function_id shift to state 169
-- On cond_expr shift to state 330
-- On class_specifier shift to state 277
-- On class_or_namespace_name_for_qualifier2 shift to state 124
-- On class_or_namespace_name_for_qualifier shift to state 170
-- On class_key shift to state 278
-- On class_head shift to state 301
-- On cast_operator_expr shift to state 261
-- On cast_expr shift to state 331
-- On cast_constructor_expr shift to state 263
-- On basic_type_2 shift to state 264
-- On assign_expr shift to state 354
-- On argument shift to state 355
-- On and_expr shift to state 334
-- On additive_expr shift to state 341
## Reductions:
-- On Tnew Tdelete
--   reduce production option(TColCol) ->

State 358:
## Known stack suffix:
## Tstatic TIdent_MacroDecl TOPar listc(argument)
## LR(1) items:
listc(argument) -> listc(argument) . TComma argument [ TComma TCPar ]
simple_declaration -> Tstatic TIdent_MacroDecl TOPar listc(argument) . TCPar TPtVirg [ Twhile Twchar_t_Constr Twchar_t Tvolatile Tvoid Tvirtual Tusing Tunsigned Tunion Ttypeof Ttypename Ttypeid Ttypedef Ttry Ttrue Tthrow Tthread_local Tthis Ttemplate Tswitch Tstruct Tstatic_cast Tstatic Tsizeof Tsigned Tshort_Constr Tshort Treturn Trestrict Treinterpret_cast Tregister Tpublic Tprotected Tprivate Toperator Tnullptr Tnull Tnew Tnamespace Tmutable Tlong_Constr Tlong Tint_Constr Tint Tinline Tif Tgoto Tfriend Tfor Tfloat_Constr Tfloat Tfalse Textern Texplicit Tenum Telse Tdynamic_cast Tdouble_Constr Tdouble Tdo Tdelete Tdefault Tdecltype Tcontinue Tconstexpr Tconst_cast Tconst Tclass Tchar_Constr Tchar Tcase Tbreak Tbool_Constr Tbool Tauto Tasm TUndef TTilde TString TPtVirg TPlus TOPar TOCro_Lambda TOBrace TMul TMinus TInt TInclude TInc TIfdefelse TIfdefelif TIfdefVersion TIfdefMisc TIfdefBool TIfdef TIdent_TypedefConstr TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_MacroString TIdent_MacroStmt TIdent_MacroIterator TIdent_MacroDecl TIdent_Constructor TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TIdent TFloat TEndif TEllipsis TDefine TDec TCppDirectiveOther TCommentNewline_DefineEndOfMacro TColCol_BeforeTypedef TColCol TChar TCBrace TBang TAndLog TAnd LDots EOF ]
## Transitions:
-- On TComma shift to state 271
-- On TCPar shift to state 359
## Reductions:

State 359:
## Known stack suffix:
## Tstatic TIdent_MacroDecl TOPar listc(argument) TCPar
## LR(1) items:
simple_declaration -> Tstatic TIdent_MacroDecl TOPar listc(argument) TCPar . TPtVirg [ Twhile Twchar_t_Constr Twchar_t Tvolatile Tvoid Tvirtual Tusing Tunsigned Tunion Ttypeof Ttypename Ttypeid Ttypedef Ttry Ttrue Tthrow Tthread_local Tthis Ttemplate Tswitch Tstruct Tstatic_cast Tstatic Tsizeof Tsigned Tshort_Constr Tshort Treturn Trestrict Treinterpret_cast Tregister Tpublic Tprotected Tprivate Toperator Tnullptr Tnull Tnew Tnamespace Tmutable Tlong_Constr Tlong Tint_Constr Tint Tinline Tif Tgoto Tfriend Tfor Tfloat_Constr Tfloat Tfalse Textern Texplicit Tenum Telse Tdynamic_cast Tdouble_Constr Tdouble Tdo Tdelete Tdefault Tdecltype Tcontinue Tconstexpr Tconst_cast Tconst Tclass Tchar_Constr Tchar Tcase Tbreak Tbool_Constr Tbool Tauto Tasm TUndef TTilde TString TPtVirg TPlus TOPar TOCro_Lambda TOBrace TMul TMinus TInt TInclude TInc TIfdefelse TIfdefelif TIfdefVersion TIfdefMisc TIfdefBool TIfdef TIdent_TypedefConstr TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_MacroString TIdent_MacroStmt TIdent_MacroIterator TIdent_MacroDecl TIdent_Constructor TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TIdent TFloat TEndif TEllipsis TDefine TDec TCppDirectiveOther TCommentNewline_DefineEndOfMacro TColCol_BeforeTypedef TColCol TChar TCBrace TBang TAndLog TAnd LDots EOF ]
## Transitions:
-- On TPtVirg shift to state 360
## Reductions:

State 360:
## Known stack suffix:
## Tstatic TIdent_MacroDecl TOPar listc(argument) TCPar TPtVirg
## LR(1) items:
simple_declaration -> Tstatic TIdent_MacroDecl TOPar listc(argument) TCPar TPtVirg . [ Twhile Twchar_t_Constr Twchar_t Tvolatile Tvoid Tvirtual Tusing Tunsigned Tunion Ttypeof Ttypename Ttypeid Ttypedef Ttry Ttrue Tthrow Tthread_local Tthis Ttemplate Tswitch Tstruct Tstatic_cast Tstatic Tsizeof Tsigned Tshort_Constr Tshort Treturn Trestrict Treinterpret_cast Tregister Tpublic Tprotected Tprivate Toperator Tnullptr Tnull Tnew Tnamespace Tmutable Tlong_Constr Tlong Tint_Constr Tint Tinline Tif Tgoto Tfriend Tfor Tfloat_Constr Tfloat Tfalse Textern Texplicit Tenum Telse Tdynamic_cast Tdouble_Constr Tdouble Tdo Tdelete Tdefault Tdecltype Tcontinue Tconstexpr Tconst_cast Tconst Tclass Tchar_Constr Tchar Tcase Tbreak Tbool_Constr Tbool Tauto Tasm TUndef TTilde TString TPtVirg TPlus TOPar TOCro_Lambda TOBrace TMul TMinus TInt TInclude TInc TIfdefelse TIfdefelif TIfdefVersion TIfdefMisc TIfdefBool TIfdef TIdent_TypedefConstr TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_MacroString TIdent_MacroStmt TIdent_MacroIterator TIdent_MacroDecl TIdent_Constructor TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TIdent TFloat TEndif TEllipsis TDefine TDec TCppDirectiveOther TCommentNewline_DefineEndOfMacro TColCol_BeforeTypedef TColCol TChar TCBrace TBang TAndLog TAnd LDots EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production simple_declaration -> Tstatic TIdent_MacroDecl TOPar listc(argument) TCPar TPtVirg

State 361:
## Known stack suffix:
## Tnamespace
## LR(1) items:
named_namespace_definition -> Tnamespace . TIdent TOBrace optl(nonempty_list(declaration_cpp)) TCBrace [ Twchar_t Tvolatile Tvoid Tvirtual Tusing Tunsigned Tunion Ttypeof Ttypename Ttypedef Tthread_local Ttemplate Tstruct Tstatic Tsigned Tshort Trestrict Tregister Tpublic Tprotected Tprivate Tnamespace Tmutable Tlong Tint Tinline Tfriend Tfloat Textern Texplicit Tenum Tdouble Tdecltype Tconstexpr Tconst Tclass Tchar Tbool Tauto Tasm TUndef TTilde TPtVirg TInclude TIfdefelse TIfdefelif TIfdefVersion TIfdefMisc TIfdefBool TIfdef TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_MacroDecl TIdent_Constructor TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TEndif TDefine TCppDirectiveOther TColCol_BeforeTypedef TCBrace ]
namespace_alias_definition -> Tnamespace . TIdent TEq qualified_namespace_spec TPtVirg [ Twchar_t Tvolatile Tvoid Tvirtual Tusing Tunsigned Tunion Ttypeof Ttypename Ttypedef Tthread_local Ttemplate Tstruct Tstatic Tsigned Tshort Trestrict Tregister Tpublic Tprotected Tprivate Tnamespace Tmutable Tlong Tint Tinline Tfriend Tfloat Textern Texplicit Tenum Tdouble Tdecltype Tconstexpr Tconst Tclass Tchar Tbool Tauto Tasm TUndef TTilde TPtVirg TInclude TIfdefelse TIfdefelif TIfdefVersion TIfdefMisc TIfdefBool TIfdef TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_MacroDecl TIdent_Constructor TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TEndif TDefine TCppDirectiveOther TColCol_BeforeTypedef TCBrace ]
unnamed_namespace_definition -> Tnamespace . TOBrace optl(nonempty_list(declaration_cpp)) TCBrace [ Twchar_t Tvolatile Tvoid Tvirtual Tusing Tunsigned Tunion Ttypeof Ttypename Ttypedef Tthread_local Ttemplate Tstruct Tstatic Tsigned Tshort Trestrict Tregister Tpublic Tprotected Tprivate Tnamespace Tmutable Tlong Tint Tinline Tfriend Tfloat Textern Texplicit Tenum Tdouble Tdecltype Tconstexpr Tconst Tclass Tchar Tbool Tauto Tasm TUndef TTilde TPtVirg TInclude TIfdefelse TIfdefelif TIfdefVersion TIfdefMisc TIfdefBool TIfdef TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_MacroDecl TIdent_Constructor TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TEndif TDefine TCppDirectiveOther TColCol_BeforeTypedef TCBrace ]
## Transitions:
-- On TOBrace shift to state 362
-- On TIdent shift to state 744
## Reductions:

State 362:
## Known stack suffix:
## Tnamespace TOBrace
## LR(1) items:
unnamed_namespace_definition -> Tnamespace TOBrace . optl(nonempty_list(declaration_cpp)) TCBrace [ Twchar_t Tvolatile Tvoid Tvirtual Tusing Tunsigned Tunion Ttypeof Ttypename Ttypedef Tthread_local Ttemplate Tstruct Tstatic Tsigned Tshort Trestrict Tregister Tpublic Tprotected Tprivate Tnamespace Tmutable Tlong Tint Tinline Tfriend Tfloat Textern Texplicit Tenum Tdouble Tdecltype Tconstexpr Tconst Tclass Tchar Tbool Tauto Tasm TUndef TTilde TPtVirg TInclude TIfdefelse TIfdefelif TIfdefVersion TIfdefMisc TIfdefBool TIfdef TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_MacroDecl TIdent_Constructor TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TEndif TDefine TCppDirectiveOther TColCol_BeforeTypedef TCBrace ]
## Transitions:
-- On Twchar_t shift to state 1
-- On Tvolatile shift to state 2
-- On Tvoid shift to state 3
-- On Tvirtual shift to state 4
-- On Tusing shift to state 5
-- On Tunsigned shift to state 15
-- On Tunion shift to state 16
-- On Ttypeof shift to state 17
-- On Ttypename shift to state 19
-- On Ttypedef shift to state 96
-- On Tthread_local shift to state 97
-- On Ttemplate shift to state 320
-- On Tstruct shift to state 27
-- On Tstatic shift to state 323
-- On Tsigned shift to state 30
-- On Tshort shift to state 32
-- On Trestrict shift to state 65
-- On Tregister shift to state 99
-- On Tnamespace shift to state 361
-- On Tmutable shift to state 100
-- On Tlong shift to state 38
-- On Tint shift to state 39
-- On Tinline shift to state 363
-- On Tfriend shift to state 102
-- On Tfloat shift to state 40
-- On Textern shift to state 364
-- On Tenum shift to state 66
-- On Tdouble shift to state 41
-- On Tdecltype shift to state 45
-- On Tconstexpr shift to state 104
-- On Tconst shift to state 76
-- On Tclass shift to state 77
-- On Tchar shift to state 58
-- On Tbool shift to state 60
-- On Tauto shift to state 105
-- On Tasm shift to state 366
-- On TUndef shift to state 415
-- On TTilde shift to state 395
-- On TPtVirg shift to state 413
-- On TInclude shift to state 416
-- On TIfdefelse shift to state 417
-- On TIfdefelif shift to state 418
-- On TIfdefVersion shift to state 419
-- On TIfdefMisc shift to state 420
-- On TIfdefBool shift to state 421
-- On TIfdef shift to state 422
-- On TIdent_Typedef shift to state 20
-- On TIdent_TemplatenameInQualifier_BeforeTypedef shift to state 21
-- On TIdent_TemplatenameInQualifier shift to state 12
-- On TIdent_Templatename shift to state 108
-- On TIdent_MacroDecl shift to state 423
-- On TIdent_ClassnameInQualifier_BeforeTypedef shift to state 111
-- On TIdent_ClassnameInQualifier shift to state 112
-- On TEndif shift to state 428
-- On TDefine shift to state 429
-- On TCppDirectiveOther shift to state 691
-- On TColCol_BeforeTypedef shift to state 118
-- On using_directive shift to state 581
-- On using_declaration shift to state 582
-- On unnamed_namespace_definition shift to state 692
-- On type_spec shift to state 314
-- On type_name shift to state 182
-- On type_cplusplus_id shift to state 183
-- On template_id shift to state 120
-- On template_declaration shift to state 693
-- On storage_class_spec shift to state 316
-- On simple_type_specifier shift to state 206
-- On simple_declaration shift to state 585
-- On optl(nonempty_list(declaration_cpp)) shift to state 742
-- On option(Tinline) shift to state 696
-- On nonempty_list(declaration_cpp) shift to state 715
-- On nested_name_specifier2 shift to state 207
-- On nested_name_specifier shift to state 716
-- On namespace_definition shift to state 729
-- On namespace_alias_definition shift to state 587
-- On named_namespace_definition shift to state 730
-- On linkage_specification shift to state 731
-- On function_spec shift to state 437
-- On function_definition shift to state 732
-- On explicit_specialization shift to state 733
-- On enum_specifier shift to state 209
-- On enum_name_or_typedef_name_or_simple_class_name shift to state 123
-- On enum_head shift to state 210
-- On elaborated_type_specifier shift to state 274
-- On decltype_specifier shift to state 243
-- On declaration_cpp shift to state 734
-- On declaration shift to state 736
-- On decl_spec_seq shift to state 599
-- On decl_spec shift to state 473
-- On cv_qualif shift to state 475
-- On ctor_dtor shift to state 737
-- On cpp_ifdef_directive shift to state 738
-- On cpp_directive shift to state 739
-- On class_specifier shift to state 277
-- On class_or_namespace_name_for_qualifier2 shift to state 124
-- On class_or_namespace_name_for_qualifier shift to state 170
-- On class_key shift to state 278
-- On class_head shift to state 301
-- On block_declaration shift to state 740
-- On asm_definition shift to state 617
## Reductions:
-- On TIdent_Constructor
--   reduce production option(Tinline) ->
-- On TCBrace
--   reduce production optl(nonempty_list(declaration_cpp)) ->

State 363:
## Known stack suffix:
## Tinline
## LR(1) items:
function_spec -> Tinline . [ Twchar_t Tvolatile Tvoid Tvirtual Tunsigned Tunion Ttypeof Ttypename Ttypedef Tthread_local Tstruct Tstatic Tsigned Tshort Trestrict Tregister Toperator Tmutable Tlong Tint Tinline Tfriend Tfloat Textern Tenum Tdouble Tdecltype Tconstexpr Tconst Tclass Tchar Tbool Tauto TPtVirg TOPar TMul TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TIdent TColCol_BeforeTypedef TColCol TAndLog TAnd ]
option(Tinline) -> Tinline . [ TIdent_Constructor ]
## Transitions:
## Reductions:
-- On Twchar_t Tvolatile Tvoid Tvirtual Tunsigned Tunion Ttypeof Ttypename Ttypedef Tthread_local Tstruct Tstatic Tsigned Tshort Trestrict Tregister Toperator Tmutable Tlong Tint Tinline Tfriend Tfloat Textern Tenum Tdouble Tdecltype Tconstexpr Tconst Tclass Tchar Tbool Tauto TPtVirg TOPar TMul TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TIdent TColCol_BeforeTypedef TColCol TAndLog TAnd
--   reduce production function_spec -> Tinline
-- On TIdent_Constructor
--   reduce production option(Tinline) -> Tinline

State 364:
## Known stack suffix:
## Textern
## LR(1) items:
linkage_specification -> Textern . TString declaration [ Twchar_t Tvolatile Tvoid Tvirtual Tusing Tunsigned Tunion Ttypeof Ttypename Ttypedef Tthread_local Ttemplate Tstruct Tstatic Tsigned Tshort Trestrict Tregister Tpublic Tprotected Tprivate Tnamespace Tmutable Tlong Tint Tinline Tfriend Tfloat Textern Texplicit Tenum Tdouble Tdecltype Tconstexpr Tconst Tclass Tchar Tbool Tauto Tasm TUndef TTilde TPtVirg TInclude TIfdefelse TIfdefelif TIfdefVersion TIfdefMisc TIfdefBool TIfdef TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_MacroDecl TIdent_Constructor TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TEndif TDefine TCppDirectiveOther TColCol_BeforeTypedef TCBrace ]
linkage_specification -> Textern . TString TOBrace optl(nonempty_list(declaration_cpp)) TCBrace [ Twchar_t Tvolatile Tvoid Tvirtual Tusing Tunsigned Tunion Ttypeof Ttypename Ttypedef Tthread_local Ttemplate Tstruct Tstatic Tsigned Tshort Trestrict Tregister Tpublic Tprotected Tprivate Tnamespace Tmutable Tlong Tint Tinline Tfriend Tfloat Textern Texplicit Tenum Tdouble Tdecltype Tconstexpr Tconst Tclass Tchar Tbool Tauto Tasm TUndef TTilde TPtVirg TInclude TIfdefelse TIfdefelif TIfdefVersion TIfdefMisc TIfdefBool TIfdef TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_MacroDecl TIdent_Constructor TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TEndif TDefine TCppDirectiveOther TColCol_BeforeTypedef TCBrace ]
storage_class_spec -> Textern . [ Twchar_t Tvolatile Tvoid Tvirtual Tunsigned Tunion Ttypeof Ttypename Ttypedef Tthread_local Tstruct Tstatic Tsigned Tshort Trestrict Tregister Toperator Tmutable Tlong Tint Tinline Tfriend Tfloat Textern Tenum Tdouble Tdecltype Tconstexpr Tconst Tclass Tchar Tbool Tauto TPtVirg TOPar TMul TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TIdent TColCol_BeforeTypedef TColCol TAndLog TAnd ]
## Transitions:
-- On TString shift to state 365
## Reductions:
-- On Twchar_t Tvolatile Tvoid Tvirtual Tunsigned Tunion Ttypeof Ttypename Ttypedef Tthread_local Tstruct Tstatic Tsigned Tshort Trestrict Tregister Toperator Tmutable Tlong Tint Tinline Tfriend Tfloat Textern Tenum Tdouble Tdecltype Tconstexpr Tconst Tclass Tchar Tbool Tauto TPtVirg TOPar TMul TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TIdent TColCol_BeforeTypedef TColCol TAndLog TAnd
--   reduce production storage_class_spec -> Textern

State 365:
## Known stack suffix:
## Textern TString
## LR(1) items:
linkage_specification -> Textern TString . declaration [ Twchar_t Tvolatile Tvoid Tvirtual Tusing Tunsigned Tunion Ttypeof Ttypename Ttypedef Tthread_local Ttemplate Tstruct Tstatic Tsigned Tshort Trestrict Tregister Tpublic Tprotected Tprivate Tnamespace Tmutable Tlong Tint Tinline Tfriend Tfloat Textern Texplicit Tenum Tdouble Tdecltype Tconstexpr Tconst Tclass Tchar Tbool Tauto Tasm TUndef TTilde TPtVirg TInclude TIfdefelse TIfdefelif TIfdefVersion TIfdefMisc TIfdefBool TIfdef TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_MacroDecl TIdent_Constructor TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TEndif TDefine TCppDirectiveOther TColCol_BeforeTypedef TCBrace ]
linkage_specification -> Textern TString . TOBrace optl(nonempty_list(declaration_cpp)) TCBrace [ Twchar_t Tvolatile Tvoid Tvirtual Tusing Tunsigned Tunion Ttypeof Ttypename Ttypedef Tthread_local Ttemplate Tstruct Tstatic Tsigned Tshort Trestrict Tregister Tpublic Tprotected Tprivate Tnamespace Tmutable Tlong Tint Tinline Tfriend Tfloat Textern Texplicit Tenum Tdouble Tdecltype Tconstexpr Tconst Tclass Tchar Tbool Tauto Tasm TUndef TTilde TPtVirg TInclude TIfdefelse TIfdefelif TIfdefVersion TIfdefMisc TIfdefBool TIfdef TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_MacroDecl TIdent_Constructor TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TEndif TDefine TCppDirectiveOther TColCol_BeforeTypedef TCBrace ]
## Transitions:
-- On Twchar_t shift to state 1
-- On Tvolatile shift to state 2
-- On Tvoid shift to state 3
-- On Tvirtual shift to state 4
-- On Tusing shift to state 5
-- On Tunsigned shift to state 15
-- On Tunion shift to state 16
-- On Ttypeof shift to state 17
-- On Ttypename shift to state 19
-- On Ttypedef shift to state 96
-- On Tthread_local shift to state 97
-- On Ttemplate shift to state 320
-- On Tstruct shift to state 27
-- On Tstatic shift to state 323
-- On Tsigned shift to state 30
-- On Tshort shift to state 32
-- On Trestrict shift to state 65
-- On Tregister shift to state 99
-- On Tnamespace shift to state 361
-- On Tmutable shift to state 100
-- On Tlong shift to state 38
-- On Tint shift to state 39
-- On Tinline shift to state 363
-- On Tfriend shift to state 102
-- On Tfloat shift to state 40
-- On Textern shift to state 364
-- On Tenum shift to state 66
-- On Tdouble shift to state 41
-- On Tdecltype shift to state 45
-- On Tconstexpr shift to state 104
-- On Tconst shift to state 76
-- On Tclass shift to state 77
-- On Tchar shift to state 58
-- On Tbool shift to state 60
-- On Tauto shift to state 105
-- On Tasm shift to state 366
-- On TTilde shift to state 395
-- On TPtVirg shift to state 413
-- On TOBrace shift to state 414
-- On TIdent_Typedef shift to state 20
-- On TIdent_TemplatenameInQualifier_BeforeTypedef shift to state 21
-- On TIdent_TemplatenameInQualifier shift to state 12
-- On TIdent_Templatename shift to state 108
-- On TIdent_MacroDecl shift to state 423
-- On TIdent_ClassnameInQualifier_BeforeTypedef shift to state 111
-- On TIdent_ClassnameInQualifier shift to state 112
-- On TColCol_BeforeTypedef shift to state 118
-- On using_directive shift to state 581
-- On using_declaration shift to state 582
-- On unnamed_namespace_definition shift to state 692
-- On type_spec shift to state 314
-- On type_name shift to state 182
-- On type_cplusplus_id shift to state 183
-- On template_id shift to state 120
-- On template_declaration shift to state 693
-- On storage_class_spec shift to state 316
-- On simple_type_specifier shift to state 206
-- On simple_declaration shift to state 585
-- On option(Tinline) shift to state 696
-- On nested_name_specifier2 shift to state 207
-- On nested_name_specifier shift to state 716
-- On namespace_definition shift to state 729
-- On namespace_alias_definition shift to state 587
-- On named_namespace_definition shift to state 730
-- On linkage_specification shift to state 731
-- On function_spec shift to state 437
-- On function_definition shift to state 732
-- On explicit_specialization shift to state 733
-- On enum_specifier shift to state 209
-- On enum_name_or_typedef_name_or_simple_class_name shift to state 123
-- On enum_head shift to state 210
-- On elaborated_type_specifier shift to state 274
-- On decltype_specifier shift to state 243
-- On declaration shift to state 741
-- On decl_spec_seq shift to state 599
-- On decl_spec shift to state 473
-- On cv_qualif shift to state 475
-- On ctor_dtor shift to state 737
-- On class_specifier shift to state 277
-- On class_or_namespace_name_for_qualifier2 shift to state 124
-- On class_or_namespace_name_for_qualifier shift to state 170
-- On class_key shift to state 278
-- On class_head shift to state 301
-- On block_declaration shift to state 740
-- On asm_definition shift to state 617
## Reductions:
-- On TIdent_Constructor
--   reduce production option(Tinline) ->

State 366:
## Known stack suffix:
## Tasm
## LR(1) items:
asm_definition -> Tasm . option(Tvolatile) TOPar asmbody TCPar TPtVirg [ Twhile Twchar_t_Constr Twchar_t Tvolatile Tvoid Tvirtual Tusing Tunsigned Tunion Ttypeof Ttypename Ttypeid Ttypedef Ttry Ttrue Tthrow Tthread_local Tthis Ttemplate Tswitch Tstruct Tstatic_cast Tstatic Tsizeof Tsigned Tshort_Constr Tshort Treturn Trestrict Treinterpret_cast Tregister Tpublic Tprotected Tprivate Toperator Tnullptr Tnull Tnew Tnamespace Tmutable Tlong_Constr Tlong Tint_Constr Tint Tinline Tif Tgoto Tfriend Tfor Tfloat_Constr Tfloat Tfalse Textern Texplicit Tenum Telse Tdynamic_cast Tdouble_Constr Tdouble Tdo Tdelete Tdefault Tdecltype Tcontinue Tconstexpr Tconst_cast Tconst Tclass Tchar_Constr Tchar Tcase Tbreak Tbool_Constr Tbool Tauto Tasm TUndef TTilde TString TPtVirg TPlus TOPar TOCro_Lambda TOBrace TMul TMinus TInt TInclude TInc TIfdefelse TIfdefelif TIfdefVersion TIfdefMisc TIfdefBool TIfdef TIdent_TypedefConstr TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_MacroString TIdent_MacroStmt TIdent_MacroIterator TIdent_MacroDecl TIdent_Constructor TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TIdent TFloat TEndif TEllipsis TDefine TDec TCppDirectiveOther TCommentNewline_DefineEndOfMacro TColCol_BeforeTypedef TColCol TChar TCBrace TBang TAndLog TAnd LDots EOF ]
## Transitions:
-- On Tvolatile shift to state 367
-- On option(Tvolatile) shift to state 368
## Reductions:
-- On TOPar
--   reduce production option(Tvolatile) ->

State 367:
## Known stack suffix:
## Tvolatile
## LR(1) items:
option(Tvolatile) -> Tvolatile . [ TOPar ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production option(Tvolatile) -> Tvolatile

State 368:
## Known stack suffix:
## Tasm option(Tvolatile)
## LR(1) items:
asm_definition -> Tasm option(Tvolatile) . TOPar asmbody TCPar TPtVirg [ Twhile Twchar_t_Constr Twchar_t Tvolatile Tvoid Tvirtual Tusing Tunsigned Tunion Ttypeof Ttypename Ttypeid Ttypedef Ttry Ttrue Tthrow Tthread_local Tthis Ttemplate Tswitch Tstruct Tstatic_cast Tstatic Tsizeof Tsigned Tshort_Constr Tshort Treturn Trestrict Treinterpret_cast Tregister Tpublic Tprotected Tprivate Toperator Tnullptr Tnull Tnew Tnamespace Tmutable Tlong_Constr Tlong Tint_Constr Tint Tinline Tif Tgoto Tfriend Tfor Tfloat_Constr Tfloat Tfalse Textern Texplicit Tenum Telse Tdynamic_cast Tdouble_Constr Tdouble Tdo Tdelete Tdefault Tdecltype Tcontinue Tconstexpr Tconst_cast Tconst Tclass Tchar_Constr Tchar Tcase Tbreak Tbool_Constr Tbool Tauto Tasm TUndef TTilde TString TPtVirg TPlus TOPar TOCro_Lambda TOBrace TMul TMinus TInt TInclude TInc TIfdefelse TIfdefelif TIfdefVersion TIfdefMisc TIfdefBool TIfdef TIdent_TypedefConstr TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_MacroString TIdent_MacroStmt TIdent_MacroIterator TIdent_MacroDecl TIdent_Constructor TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TIdent TFloat TEndif TEllipsis TDefine TDec TCppDirectiveOther TCommentNewline_DefineEndOfMacro TColCol_BeforeTypedef TColCol TChar TCBrace TBang TAndLog TAnd LDots EOF ]
## Transitions:
-- On TOPar shift to state 369
## Reductions:

State 369:
## Known stack suffix:
## Tasm option(Tvolatile) TOPar
## LR(1) items:
asm_definition -> Tasm option(Tvolatile) TOPar . asmbody TCPar TPtVirg [ Twhile Twchar_t_Constr Twchar_t Tvolatile Tvoid Tvirtual Tusing Tunsigned Tunion Ttypeof Ttypename Ttypeid Ttypedef Ttry Ttrue Tthrow Tthread_local Tthis Ttemplate Tswitch Tstruct Tstatic_cast Tstatic Tsizeof Tsigned Tshort_Constr Tshort Treturn Trestrict Treinterpret_cast Tregister Tpublic Tprotected Tprivate Toperator Tnullptr Tnull Tnew Tnamespace Tmutable Tlong_Constr Tlong Tint_Constr Tint Tinline Tif Tgoto Tfriend Tfor Tfloat_Constr Tfloat Tfalse Textern Texplicit Tenum Telse Tdynamic_cast Tdouble_Constr Tdouble Tdo Tdelete Tdefault Tdecltype Tcontinue Tconstexpr Tconst_cast Tconst Tclass Tchar_Constr Tchar Tcase Tbreak Tbool_Constr Tbool Tauto Tasm TUndef TTilde TString TPtVirg TPlus TOPar TOCro_Lambda TOBrace TMul TMinus TInt TInclude TInc TIfdefelse TIfdefelif TIfdefVersion TIfdefMisc TIfdefBool TIfdef TIdent_TypedefConstr TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_MacroString TIdent_MacroStmt TIdent_MacroIterator TIdent_MacroDecl TIdent_Constructor TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TIdent TFloat TEndif TEllipsis TDefine TDec TCppDirectiveOther TCommentNewline_DefineEndOfMacro TColCol_BeforeTypedef TColCol TChar TCBrace TBang TAndLog TAnd LDots EOF ]
## Transitions:
-- On TString shift to state 185
-- On TIdent_MacroString shift to state 110
-- On string_elem shift to state 186
-- On nonempty_list(string_elem) shift to state 370
-- On asmbody shift to state 392
## Reductions:

State 370:
## Known stack suffix:
## nonempty_list(string_elem)
## LR(1) items:
asmbody -> nonempty_list(string_elem) . nonempty_list(colon_asm) [ TCPar ]
asmbody -> nonempty_list(string_elem) . [ TCPar ]
## Transitions:
-- On TCol shift to state 371
-- On nonempty_list(colon_asm) shift to state 389
-- On colon_asm shift to state 390
## Reductions:
-- On TCPar
--   reduce production asmbody -> nonempty_list(string_elem)

State 371:
## Known stack suffix:
## TCol
## LR(1) items:
colon_asm -> TCol . listc(colon_option) [ TCol TCPar ]
## Transitions:
-- On TString shift to state 372
-- On TOCro shift to state 377
-- On TIdent shift to state 384
-- On listc(colon_option) shift to state 385
-- On colon_option shift to state 388
## Reductions:
-- On TComma TCol TCPar
--   reduce production colon_option ->

State 372:
## Known stack suffix:
## TString
## LR(1) items:
colon_option -> TString . [ TComma TCol TCPar ]
colon_option -> TString . TOPar asm_expr TCPar [ TComma TCol TCPar ]
## Transitions:
-- On TOPar shift to state 373
## Reductions:
-- On TComma TCol TCPar
--   reduce production colon_option -> TString

State 373:
## Known stack suffix:
## TString TOPar
## LR(1) items:
colon_option -> TString TOPar . asm_expr TCPar [ TComma TCol TCPar ]
## Transitions:
-- On Twchar_t_Constr shift to state 14
-- On Twchar_t shift to state 1
-- On Tvoid shift to state 3
-- On Tunsigned shift to state 15
-- On Ttypeof shift to state 17
-- On Ttypeid shift to state 23
-- On Ttrue shift to state 25
-- On Tthrow shift to state 47
-- On Tthis shift to state 26
-- On Tstatic_cast shift to state 28
-- On Tsizeof shift to state 29
-- On Tsigned shift to state 30
-- On Tshort_Constr shift to state 31
-- On Tshort shift to state 32
-- On Treinterpret_cast shift to state 33
-- On Toperator shift to state 34
-- On Tnullptr shift to state 48
-- On Tnull shift to state 49
-- On Tlong_Constr shift to state 50
-- On Tlong shift to state 38
-- On Tint_Constr shift to state 51
-- On Tint shift to state 39
-- On Tfloat_Constr shift to state 52
-- On Tfloat shift to state 40
-- On Tfalse shift to state 53
-- On Tdynamic_cast shift to state 54
-- On Tdouble_Constr shift to state 55
-- On Tdouble shift to state 41
-- On Tdecltype shift to state 45
-- On Tconst_cast shift to state 56
-- On Tchar_Constr shift to state 57
-- On Tchar shift to state 58
-- On Tbool_Constr shift to state 59
-- On Tbool shift to state 60
-- On TTilde shift to state 61
-- On TString shift to state 62
-- On TPlus shift to state 63
-- On TOPar shift to state 64
-- On TOCro_Lambda shift to state 78
-- On TMul shift to state 88
-- On TMinus shift to state 89
-- On TInt shift to state 90
-- On TInc shift to state 91
-- On TIdent_TypedefConstr shift to state 106
-- On TIdent_Typedef shift to state 20
-- On TIdent_TemplatenameInQualifier_BeforeTypedef shift to state 21
-- On TIdent_TemplatenameInQualifier shift to state 12
-- On TIdent_Templatename shift to state 108
-- On TIdent_MacroString shift to state 110
-- On TIdent_ClassnameInQualifier_BeforeTypedef shift to state 111
-- On TIdent_ClassnameInQualifier shift to state 112
-- On TIdent shift to state 113
-- On TFloat shift to state 116
-- On TDec shift to state 117
-- On TColCol_BeforeTypedef shift to state 118
-- On TColCol shift to state 128
-- On TChar shift to state 174
-- On TBang shift to state 175
-- On TAndLog shift to state 176
-- On TAnd shift to state 177
-- On LDots shift to state 178
-- On unqualified_id shift to state 179
-- On unary_op shift to state 180
-- On unary_expr shift to state 181
-- On type_name shift to state 182
-- On type_cplusplus_id shift to state 183
-- On template_id shift to state 120
-- On string_elem shift to state 184
-- On simple_type_specifier shift to state 189
-- On shift_expr shift to state 217
-- On relational_expr shift to state 229
-- On qualified_id shift to state 191
-- On primary_expr shift to state 192
-- On primary_cplusplus_id shift to state 193
-- On postfix_expr shift to state 194
-- On pm_expr shift to state 219
-- On option(TColCol) shift to state 221
-- On operator_function_id shift to state 168
-- On new_expr shift to state 233
-- On nested_name_specifier2 shift to state 207
-- On nested_name_specifier shift to state 165
-- On multiplicative_expr shift to state 234
-- On logical_or_expr shift to state 246
-- On logical_and_expr shift to state 250
-- On literal shift to state 238
-- On lambda_introducer shift to state 239
-- On inclusive_or_expr shift to state 272
-- On id_expression shift to state 241
-- On exclusive_or_expr shift to state 273
-- On equality_expr shift to state 256
-- On enum_name_or_typedef_name_or_simple_class_name shift to state 123
-- On delete_expr shift to state 242
-- On decltype_specifier shift to state 243
-- On cpp_cast_operator shift to state 244
-- On conversion_function_id shift to state 169
-- On cond_expr shift to state 330
-- On class_or_namespace_name_for_qualifier2 shift to state 124
-- On class_or_namespace_name_for_qualifier shift to state 170
-- On cast_operator_expr shift to state 261
-- On cast_expr shift to state 331
-- On cast_constructor_expr shift to state 263
-- On basic_type_2 shift to state 264
-- On assign_expr shift to state 374
-- On asm_expr shift to state 375
-- On and_expr shift to state 334
-- On additive_expr shift to state 341
## Reductions:
-- On Tnew Tdelete
--   reduce production option(TColCol) ->

State 374:
## Known stack suffix:
## assign_expr
## LR(1) items:
asm_expr -> assign_expr . [ TCPar ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production asm_expr -> assign_expr

State 375:
## Known stack suffix:
## TString TOPar asm_expr
## LR(1) items:
colon_option -> TString TOPar asm_expr . TCPar [ TComma TCol TCPar ]
## Transitions:
-- On TCPar shift to state 376
## Reductions:

State 376:
## Known stack suffix:
## TString TOPar asm_expr TCPar
## LR(1) items:
colon_option -> TString TOPar asm_expr TCPar . [ TComma TCol TCPar ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production colon_option -> TString TOPar asm_expr TCPar

State 377:
## Known stack suffix:
## TOCro
## LR(1) items:
colon_option -> TOCro . TIdent TCCro TString TOPar asm_expr TCPar [ TComma TCol TCPar ]
## Transitions:
-- On TIdent shift to state 378
## Reductions:

State 378:
## Known stack suffix:
## TOCro TIdent
## LR(1) items:
colon_option -> TOCro TIdent . TCCro TString TOPar asm_expr TCPar [ TComma TCol TCPar ]
## Transitions:
-- On TCCro shift to state 379
## Reductions:

State 379:
## Known stack suffix:
## TOCro TIdent TCCro
## LR(1) items:
colon_option -> TOCro TIdent TCCro . TString TOPar asm_expr TCPar [ TComma TCol TCPar ]
## Transitions:
-- On TString shift to state 380
## Reductions:

State 380:
## Known stack suffix:
## TOCro TIdent TCCro TString
## LR(1) items:
colon_option -> TOCro TIdent TCCro TString . TOPar asm_expr TCPar [ TComma TCol TCPar ]
## Transitions:
-- On TOPar shift to state 381
## Reductions:

State 381:
## Known stack suffix:
## TOCro TIdent TCCro TString TOPar
## LR(1) items:
colon_option -> TOCro TIdent TCCro TString TOPar . asm_expr TCPar [ TComma TCol TCPar ]
## Transitions:
-- On Twchar_t_Constr shift to state 14
-- On Twchar_t shift to state 1
-- On Tvoid shift to state 3
-- On Tunsigned shift to state 15
-- On Ttypeof shift to state 17
-- On Ttypeid shift to state 23
-- On Ttrue shift to state 25
-- On Tthrow shift to state 47
-- On Tthis shift to state 26
-- On Tstatic_cast shift to state 28
-- On Tsizeof shift to state 29
-- On Tsigned shift to state 30
-- On Tshort_Constr shift to state 31
-- On Tshort shift to state 32
-- On Treinterpret_cast shift to state 33
-- On Toperator shift to state 34
-- On Tnullptr shift to state 48
-- On Tnull shift to state 49
-- On Tlong_Constr shift to state 50
-- On Tlong shift to state 38
-- On Tint_Constr shift to state 51
-- On Tint shift to state 39
-- On Tfloat_Constr shift to state 52
-- On Tfloat shift to state 40
-- On Tfalse shift to state 53
-- On Tdynamic_cast shift to state 54
-- On Tdouble_Constr shift to state 55
-- On Tdouble shift to state 41
-- On Tdecltype shift to state 45
-- On Tconst_cast shift to state 56
-- On Tchar_Constr shift to state 57
-- On Tchar shift to state 58
-- On Tbool_Constr shift to state 59
-- On Tbool shift to state 60
-- On TTilde shift to state 61
-- On TString shift to state 62
-- On TPlus shift to state 63
-- On TOPar shift to state 64
-- On TOCro_Lambda shift to state 78
-- On TMul shift to state 88
-- On TMinus shift to state 89
-- On TInt shift to state 90
-- On TInc shift to state 91
-- On TIdent_TypedefConstr shift to state 106
-- On TIdent_Typedef shift to state 20
-- On TIdent_TemplatenameInQualifier_BeforeTypedef shift to state 21
-- On TIdent_TemplatenameInQualifier shift to state 12
-- On TIdent_Templatename shift to state 108
-- On TIdent_MacroString shift to state 110
-- On TIdent_ClassnameInQualifier_BeforeTypedef shift to state 111
-- On TIdent_ClassnameInQualifier shift to state 112
-- On TIdent shift to state 113
-- On TFloat shift to state 116
-- On TDec shift to state 117
-- On TColCol_BeforeTypedef shift to state 118
-- On TColCol shift to state 128
-- On TChar shift to state 174
-- On TBang shift to state 175
-- On TAndLog shift to state 176
-- On TAnd shift to state 177
-- On LDots shift to state 178
-- On unqualified_id shift to state 179
-- On unary_op shift to state 180
-- On unary_expr shift to state 181
-- On type_name shift to state 182
-- On type_cplusplus_id shift to state 183
-- On template_id shift to state 120
-- On string_elem shift to state 184
-- On simple_type_specifier shift to state 189
-- On shift_expr shift to state 217
-- On relational_expr shift to state 229
-- On qualified_id shift to state 191
-- On primary_expr shift to state 192
-- On primary_cplusplus_id shift to state 193
-- On postfix_expr shift to state 194
-- On pm_expr shift to state 219
-- On option(TColCol) shift to state 221
-- On operator_function_id shift to state 168
-- On new_expr shift to state 233
-- On nested_name_specifier2 shift to state 207
-- On nested_name_specifier shift to state 165
-- On multiplicative_expr shift to state 234
-- On logical_or_expr shift to state 246
-- On logical_and_expr shift to state 250
-- On literal shift to state 238
-- On lambda_introducer shift to state 239
-- On inclusive_or_expr shift to state 272
-- On id_expression shift to state 241
-- On exclusive_or_expr shift to state 273
-- On equality_expr shift to state 256
-- On enum_name_or_typedef_name_or_simple_class_name shift to state 123
-- On delete_expr shift to state 242
-- On decltype_specifier shift to state 243
-- On cpp_cast_operator shift to state 244
-- On conversion_function_id shift to state 169
-- On cond_expr shift to state 330
-- On class_or_namespace_name_for_qualifier2 shift to state 124
-- On class_or_namespace_name_for_qualifier shift to state 170
-- On cast_operator_expr shift to state 261
-- On cast_expr shift to state 331
-- On cast_constructor_expr shift to state 263
-- On basic_type_2 shift to state 264
-- On assign_expr shift to state 374
-- On asm_expr shift to state 382
-- On and_expr shift to state 334
-- On additive_expr shift to state 341
## Reductions:
-- On Tnew Tdelete
--   reduce production option(TColCol) ->

State 382:
## Known stack suffix:
## TOCro TIdent TCCro TString TOPar asm_expr
## LR(1) items:
colon_option -> TOCro TIdent TCCro TString TOPar asm_expr . TCPar [ TComma TCol TCPar ]
## Transitions:
-- On TCPar shift to state 383
## Reductions:

State 383:
## Known stack suffix:
## TOCro TIdent TCCro TString TOPar asm_expr TCPar
## LR(1) items:
colon_option -> TOCro TIdent TCCro TString TOPar asm_expr TCPar . [ TComma TCol TCPar ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production colon_option -> TOCro TIdent TCCro TString TOPar asm_expr TCPar

State 384:
## Known stack suffix:
## TIdent
## LR(1) items:
colon_option -> TIdent . [ TComma TCol TCPar ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production colon_option -> TIdent

State 385:
## Known stack suffix:
## TCol listc(colon_option)
## LR(1) items:
colon_asm -> TCol listc(colon_option) . [ TCol TCPar ]
listc(colon_option) -> listc(colon_option) . TComma colon_option [ TComma TCol TCPar ]
## Transitions:
-- On TComma shift to state 386
## Reductions:
-- On TCol TCPar
--   reduce production colon_asm -> TCol listc(colon_option)

State 386:
## Known stack suffix:
## listc(colon_option) TComma
## LR(1) items:
listc(colon_option) -> listc(colon_option) TComma . colon_option [ TComma TCol TCPar ]
## Transitions:
-- On TString shift to state 372
-- On TOCro shift to state 377
-- On TIdent shift to state 384
-- On colon_option shift to state 387
## Reductions:
-- On TComma TCol TCPar
--   reduce production colon_option ->

State 387:
## Known stack suffix:
## listc(colon_option) TComma colon_option
## LR(1) items:
listc(colon_option) -> listc(colon_option) TComma colon_option . [ TComma TCol TCPar ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production listc(colon_option) -> listc(colon_option) TComma colon_option

State 388:
## Known stack suffix:
## colon_option
## LR(1) items:
listc(colon_option) -> colon_option . [ TComma TCol TCPar ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production listc(colon_option) -> colon_option

State 389:
## Known stack suffix:
## nonempty_list(string_elem) nonempty_list(colon_asm)
## LR(1) items:
asmbody -> nonempty_list(string_elem) nonempty_list(colon_asm) . [ TCPar ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production asmbody -> nonempty_list(string_elem) nonempty_list(colon_asm)

State 390:
## Known stack suffix:
## colon_asm
## LR(1) items:
nonempty_list(colon_asm) -> colon_asm . [ TCPar ]
nonempty_list(colon_asm) -> colon_asm . nonempty_list(colon_asm) [ TCPar ]
## Transitions:
-- On TCol shift to state 371
-- On nonempty_list(colon_asm) shift to state 391
-- On colon_asm shift to state 390
## Reductions:
-- On TCPar
--   reduce production nonempty_list(colon_asm) -> colon_asm

State 391:
## Known stack suffix:
## colon_asm nonempty_list(colon_asm)
## LR(1) items:
nonempty_list(colon_asm) -> colon_asm nonempty_list(colon_asm) . [ TCPar ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production nonempty_list(colon_asm) -> colon_asm nonempty_list(colon_asm)

State 392:
## Known stack suffix:
## Tasm option(Tvolatile) TOPar asmbody
## LR(1) items:
asm_definition -> Tasm option(Tvolatile) TOPar asmbody . TCPar TPtVirg [ Twhile Twchar_t_Constr Twchar_t Tvolatile Tvoid Tvirtual Tusing Tunsigned Tunion Ttypeof Ttypename Ttypeid Ttypedef Ttry Ttrue Tthrow Tthread_local Tthis Ttemplate Tswitch Tstruct Tstatic_cast Tstatic Tsizeof Tsigned Tshort_Constr Tshort Treturn Trestrict Treinterpret_cast Tregister Tpublic Tprotected Tprivate Toperator Tnullptr Tnull Tnew Tnamespace Tmutable Tlong_Constr Tlong Tint_Constr Tint Tinline Tif Tgoto Tfriend Tfor Tfloat_Constr Tfloat Tfalse Textern Texplicit Tenum Telse Tdynamic_cast Tdouble_Constr Tdouble Tdo Tdelete Tdefault Tdecltype Tcontinue Tconstexpr Tconst_cast Tconst Tclass Tchar_Constr Tchar Tcase Tbreak Tbool_Constr Tbool Tauto Tasm TUndef TTilde TString TPtVirg TPlus TOPar TOCro_Lambda TOBrace TMul TMinus TInt TInclude TInc TIfdefelse TIfdefelif TIfdefVersion TIfdefMisc TIfdefBool TIfdef TIdent_TypedefConstr TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_MacroString TIdent_MacroStmt TIdent_MacroIterator TIdent_MacroDecl TIdent_Constructor TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TIdent TFloat TEndif TEllipsis TDefine TDec TCppDirectiveOther TCommentNewline_DefineEndOfMacro TColCol_BeforeTypedef TColCol TChar TCBrace TBang TAndLog TAnd LDots EOF ]
## Transitions:
-- On TCPar shift to state 393
## Reductions:

State 393:
## Known stack suffix:
## Tasm option(Tvolatile) TOPar asmbody TCPar
## LR(1) items:
asm_definition -> Tasm option(Tvolatile) TOPar asmbody TCPar . TPtVirg [ Twhile Twchar_t_Constr Twchar_t Tvolatile Tvoid Tvirtual Tusing Tunsigned Tunion Ttypeof Ttypename Ttypeid Ttypedef Ttry Ttrue Tthrow Tthread_local Tthis Ttemplate Tswitch Tstruct Tstatic_cast Tstatic Tsizeof Tsigned Tshort_Constr Tshort Treturn Trestrict Treinterpret_cast Tregister Tpublic Tprotected Tprivate Toperator Tnullptr Tnull Tnew Tnamespace Tmutable Tlong_Constr Tlong Tint_Constr Tint Tinline Tif Tgoto Tfriend Tfor Tfloat_Constr Tfloat Tfalse Textern Texplicit Tenum Telse Tdynamic_cast Tdouble_Constr Tdouble Tdo Tdelete Tdefault Tdecltype Tcontinue Tconstexpr Tconst_cast Tconst Tclass Tchar_Constr Tchar Tcase Tbreak Tbool_Constr Tbool Tauto Tasm TUndef TTilde TString TPtVirg TPlus TOPar TOCro_Lambda TOBrace TMul TMinus TInt TInclude TInc TIfdefelse TIfdefelif TIfdefVersion TIfdefMisc TIfdefBool TIfdef TIdent_TypedefConstr TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_MacroString TIdent_MacroStmt TIdent_MacroIterator TIdent_MacroDecl TIdent_Constructor TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TIdent TFloat TEndif TEllipsis TDefine TDec TCppDirectiveOther TCommentNewline_DefineEndOfMacro TColCol_BeforeTypedef TColCol TChar TCBrace TBang TAndLog TAnd LDots EOF ]
## Transitions:
-- On TPtVirg shift to state 394
## Reductions:

State 394:
## Known stack suffix:
## Tasm option(Tvolatile) TOPar asmbody TCPar TPtVirg
## LR(1) items:
asm_definition -> Tasm option(Tvolatile) TOPar asmbody TCPar TPtVirg . [ Twhile Twchar_t_Constr Twchar_t Tvolatile Tvoid Tvirtual Tusing Tunsigned Tunion Ttypeof Ttypename Ttypeid Ttypedef Ttry Ttrue Tthrow Tthread_local Tthis Ttemplate Tswitch Tstruct Tstatic_cast Tstatic Tsizeof Tsigned Tshort_Constr Tshort Treturn Trestrict Treinterpret_cast Tregister Tpublic Tprotected Tprivate Toperator Tnullptr Tnull Tnew Tnamespace Tmutable Tlong_Constr Tlong Tint_Constr Tint Tinline Tif Tgoto Tfriend Tfor Tfloat_Constr Tfloat Tfalse Textern Texplicit Tenum Telse Tdynamic_cast Tdouble_Constr Tdouble Tdo Tdelete Tdefault Tdecltype Tcontinue Tconstexpr Tconst_cast Tconst Tclass Tchar_Constr Tchar Tcase Tbreak Tbool_Constr Tbool Tauto Tasm TUndef TTilde TString TPtVirg TPlus TOPar TOCro_Lambda TOBrace TMul TMinus TInt TInclude TInc TIfdefelse TIfdefelif TIfdefVersion TIfdefMisc TIfdefBool TIfdef TIdent_TypedefConstr TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_MacroString TIdent_MacroStmt TIdent_MacroIterator TIdent_MacroDecl TIdent_Constructor TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TIdent TFloat TEndif TEllipsis TDefine TDec TCppDirectiveOther TCommentNewline_DefineEndOfMacro TColCol_BeforeTypedef TColCol TChar TCBrace TBang TAndLog TAnd LDots EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production asm_definition -> Tasm option(Tvolatile) TOPar asmbody TCPar TPtVirg

State 395:
## Known stack suffix:
## TTilde
## LR(1) items:
ctor_dtor -> TTilde . ident TOPar option(Tvoid) TCPar option(exn_spec) compound [ Twchar_t Tvolatile Tvoid Tvirtual Tusing Tunsigned Tunion Ttypeof Ttypename Ttypedef Tthread_local Ttemplate Tstruct Tstatic Tsigned Tshort Trestrict Tregister Tpublic Tprotected Tprivate Tnamespace Tmutable Tlong Tint Tinline Tfriend Tfloat Textern Texplicit Tenum Tdouble Tdecltype Tconstexpr Tconst Tclass Tchar Tbool Tauto Tasm TUndef TTilde TPtVirg TInclude TIfdefelse TIfdefelif TIfdefVersion TIfdefMisc TIfdefBool TIfdef TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_MacroDecl TIdent_Constructor TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TEndif TDefine TCppDirectiveOther TColCol_BeforeTypedef TCBrace ]
## Transitions:
-- On TIdent_Typedef shift to state 68
-- On TIdent shift to state 69
-- On ident shift to state 396
## Reductions:

State 396:
## Known stack suffix:
## TTilde ident
## LR(1) items:
ctor_dtor -> TTilde ident . TOPar option(Tvoid) TCPar option(exn_spec) compound [ Twchar_t Tvolatile Tvoid Tvirtual Tusing Tunsigned Tunion Ttypeof Ttypename Ttypedef Tthread_local Ttemplate Tstruct Tstatic Tsigned Tshort Trestrict Tregister Tpublic Tprotected Tprivate Tnamespace Tmutable Tlong Tint Tinline Tfriend Tfloat Textern Texplicit Tenum Tdouble Tdecltype Tconstexpr Tconst Tclass Tchar Tbool Tauto Tasm TUndef TTilde TPtVirg TInclude TIfdefelse TIfdefelif TIfdefVersion TIfdefMisc TIfdefBool TIfdef TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_MacroDecl TIdent_Constructor TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TEndif TDefine TCppDirectiveOther TColCol_BeforeTypedef TCBrace ]
## Transitions:
-- On TOPar shift to state 397
## Reductions:

State 397:
## Known stack suffix:
## TTilde ident TOPar
## LR(1) items:
ctor_dtor -> TTilde ident TOPar . option(Tvoid) TCPar option(exn_spec) compound [ Twchar_t Tvolatile Tvoid Tvirtual Tusing Tunsigned Tunion Ttypeof Ttypename Ttypedef Tthread_local Ttemplate Tstruct Tstatic Tsigned Tshort Trestrict Tregister Tpublic Tprotected Tprivate Tnamespace Tmutable Tlong Tint Tinline Tfriend Tfloat Textern Texplicit Tenum Tdouble Tdecltype Tconstexpr Tconst Tclass Tchar Tbool Tauto Tasm TUndef TTilde TPtVirg TInclude TIfdefelse TIfdefelif TIfdefVersion TIfdefMisc TIfdefBool TIfdef TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_MacroDecl TIdent_Constructor TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TEndif TDefine TCppDirectiveOther TColCol_BeforeTypedef TCBrace ]
## Transitions:
-- On Tvoid shift to state 398
-- On option(Tvoid) shift to state 399
## Reductions:
-- On TCPar
--   reduce production option(Tvoid) ->

State 398:
## Known stack suffix:
## Tvoid
## LR(1) items:
option(Tvoid) -> Tvoid . [ TCPar ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production option(Tvoid) -> Tvoid

State 399:
## Known stack suffix:
## TTilde ident TOPar option(Tvoid)
## LR(1) items:
ctor_dtor -> TTilde ident TOPar option(Tvoid) . TCPar option(exn_spec) compound [ Twchar_t Tvolatile Tvoid Tvirtual Tusing Tunsigned Tunion Ttypeof Ttypename Ttypedef Tthread_local Ttemplate Tstruct Tstatic Tsigned Tshort Trestrict Tregister Tpublic Tprotected Tprivate Tnamespace Tmutable Tlong Tint Tinline Tfriend Tfloat Textern Texplicit Tenum Tdouble Tdecltype Tconstexpr Tconst Tclass Tchar Tbool Tauto Tasm TUndef TTilde TPtVirg TInclude TIfdefelse TIfdefelif TIfdefVersion TIfdefMisc TIfdefBool TIfdef TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_MacroDecl TIdent_Constructor TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TEndif TDefine TCppDirectiveOther TColCol_BeforeTypedef TCBrace ]
## Transitions:
-- On TCPar shift to state 400
## Reductions:

State 400:
## Known stack suffix:
## TTilde ident TOPar option(Tvoid) TCPar
## LR(1) items:
ctor_dtor -> TTilde ident TOPar option(Tvoid) TCPar . option(exn_spec) compound [ Twchar_t Tvolatile Tvoid Tvirtual Tusing Tunsigned Tunion Ttypeof Ttypename Ttypedef Tthread_local Ttemplate Tstruct Tstatic Tsigned Tshort Trestrict Tregister Tpublic Tprotected Tprivate Tnamespace Tmutable Tlong Tint Tinline Tfriend Tfloat Textern Texplicit Tenum Tdouble Tdecltype Tconstexpr Tconst Tclass Tchar Tbool Tauto Tasm TUndef TTilde TPtVirg TInclude TIfdefelse TIfdefelif TIfdefVersion TIfdefMisc TIfdefBool TIfdef TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_MacroDecl TIdent_Constructor TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TEndif TDefine TCppDirectiveOther TColCol_BeforeTypedef TCBrace ]
## Transitions:
-- On Tthrow shift to state 401
-- On option(exn_spec) shift to state 410
-- On exn_spec shift to state 412
## Reductions:
-- On TOBrace
--   reduce production option(exn_spec) ->

State 401:
## Known stack suffix:
## Tthrow
## LR(1) items:
exn_spec -> Tthrow . TOPar TCPar [ Tasm TSup_Template TPtVirg TOPar_CplusplusInit TOPar TOCro TOBrace TIdent TEq TComma TCol TCPar_EOL TCPar ]
exn_spec -> Tthrow . TOPar exn_name TCPar [ Tasm TSup_Template TPtVirg TOPar_CplusplusInit TOPar TOCro TOBrace TIdent TEq TComma TCol TCPar_EOL TCPar ]
exn_spec -> Tthrow . TOPar exn_name TComma exn_name TCPar [ Tasm TSup_Template TPtVirg TOPar_CplusplusInit TOPar TOCro TOBrace TIdent TEq TComma TCol TCPar_EOL TCPar ]
## Transitions:
-- On TOPar shift to state 402
## Reductions:

State 402:
## Known stack suffix:
## Tthrow TOPar
## LR(1) items:
exn_spec -> Tthrow TOPar . TCPar [ Tasm TSup_Template TPtVirg TOPar_CplusplusInit TOPar TOCro TOBrace TIdent TEq TComma TCol TCPar_EOL TCPar ]
exn_spec -> Tthrow TOPar . exn_name TCPar [ Tasm TSup_Template TPtVirg TOPar_CplusplusInit TOPar TOCro TOBrace TIdent TEq TComma TCol TCPar_EOL TCPar ]
exn_spec -> Tthrow TOPar . exn_name TComma exn_name TCPar [ Tasm TSup_Template TPtVirg TOPar_CplusplusInit TOPar TOCro TOBrace TIdent TEq TComma TCol TCPar_EOL TCPar ]
## Transitions:
-- On TIdent_Typedef shift to state 68
-- On TIdent shift to state 69
-- On TCPar shift to state 403
-- On ident shift to state 404
-- On exn_name shift to state 405
## Reductions:

State 403:
## Known stack suffix:
## Tthrow TOPar TCPar
## LR(1) items:
exn_spec -> Tthrow TOPar TCPar . [ Tasm TSup_Template TPtVirg TOPar_CplusplusInit TOPar TOCro TOBrace TIdent TEq TComma TCol TCPar_EOL TCPar ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production exn_spec -> Tthrow TOPar TCPar

State 404:
## Known stack suffix:
## ident
## LR(1) items:
exn_name -> ident . [ TComma TCPar ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production exn_name -> ident

State 405:
## Known stack suffix:
## Tthrow TOPar exn_name
## LR(1) items:
exn_spec -> Tthrow TOPar exn_name . TCPar [ Tasm TSup_Template TPtVirg TOPar_CplusplusInit TOPar TOCro TOBrace TIdent TEq TComma TCol TCPar_EOL TCPar ]
exn_spec -> Tthrow TOPar exn_name . TComma exn_name TCPar [ Tasm TSup_Template TPtVirg TOPar_CplusplusInit TOPar TOCro TOBrace TIdent TEq TComma TCol TCPar_EOL TCPar ]
## Transitions:
-- On TComma shift to state 406
-- On TCPar shift to state 409
## Reductions:

State 406:
## Known stack suffix:
## Tthrow TOPar exn_name TComma
## LR(1) items:
exn_spec -> Tthrow TOPar exn_name TComma . exn_name TCPar [ Tasm TSup_Template TPtVirg TOPar_CplusplusInit TOPar TOCro TOBrace TIdent TEq TComma TCol TCPar_EOL TCPar ]
## Transitions:
-- On TIdent_Typedef shift to state 68
-- On TIdent shift to state 69
-- On ident shift to state 404
-- On exn_name shift to state 407
## Reductions:

State 407:
## Known stack suffix:
## Tthrow TOPar exn_name TComma exn_name
## LR(1) items:
exn_spec -> Tthrow TOPar exn_name TComma exn_name . TCPar [ Tasm TSup_Template TPtVirg TOPar_CplusplusInit TOPar TOCro TOBrace TIdent TEq TComma TCol TCPar_EOL TCPar ]
## Transitions:
-- On TCPar shift to state 408
## Reductions:

State 408:
## Known stack suffix:
## Tthrow TOPar exn_name TComma exn_name TCPar
## LR(1) items:
exn_spec -> Tthrow TOPar exn_name TComma exn_name TCPar . [ Tasm TSup_Template TPtVirg TOPar_CplusplusInit TOPar TOCro TOBrace TIdent TEq TComma TCol TCPar_EOL TCPar ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production exn_spec -> Tthrow TOPar exn_name TComma exn_name TCPar

State 409:
## Known stack suffix:
## Tthrow TOPar exn_name TCPar
## LR(1) items:
exn_spec -> Tthrow TOPar exn_name TCPar . [ Tasm TSup_Template TPtVirg TOPar_CplusplusInit TOPar TOCro TOBrace TIdent TEq TComma TCol TCPar_EOL TCPar ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production exn_spec -> Tthrow TOPar exn_name TCPar

State 410:
## Known stack suffix:
## TTilde ident TOPar option(Tvoid) TCPar option(exn_spec)
## LR(1) items:
ctor_dtor -> TTilde ident TOPar option(Tvoid) TCPar option(exn_spec) . compound [ Twchar_t Tvolatile Tvoid Tvirtual Tusing Tunsigned Tunion Ttypeof Ttypename Ttypedef Tthread_local Ttemplate Tstruct Tstatic Tsigned Tshort Trestrict Tregister Tpublic Tprotected Tprivate Tnamespace Tmutable Tlong Tint Tinline Tfriend Tfloat Textern Texplicit Tenum Tdouble Tdecltype Tconstexpr Tconst Tclass Tchar Tbool Tauto Tasm TUndef TTilde TPtVirg TInclude TIfdefelse TIfdefelif TIfdefVersion TIfdefMisc TIfdefBool TIfdef TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_MacroDecl TIdent_Constructor TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TEndif TDefine TCppDirectiveOther TColCol_BeforeTypedef TCBrace ]
## Transitions:
-- On TOBrace shift to state 93
-- On compound shift to state 411
## Reductions:

State 411:
## Known stack suffix:
## TTilde ident TOPar option(Tvoid) TCPar option(exn_spec) compound
## LR(1) items:
ctor_dtor -> TTilde ident TOPar option(Tvoid) TCPar option(exn_spec) compound . [ Twchar_t Tvolatile Tvoid Tvirtual Tusing Tunsigned Tunion Ttypeof Ttypename Ttypedef Tthread_local Ttemplate Tstruct Tstatic Tsigned Tshort Trestrict Tregister Tpublic Tprotected Tprivate Tnamespace Tmutable Tlong Tint Tinline Tfriend Tfloat Textern Texplicit Tenum Tdouble Tdecltype Tconstexpr Tconst Tclass Tchar Tbool Tauto Tasm TUndef TTilde TPtVirg TInclude TIfdefelse TIfdefelif TIfdefVersion TIfdefMisc TIfdefBool TIfdef TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_MacroDecl TIdent_Constructor TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TEndif TDefine TCppDirectiveOther TColCol_BeforeTypedef TCBrace ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production ctor_dtor -> TTilde ident TOPar option(Tvoid) TCPar option(exn_spec) compound

State 412:
## Known stack suffix:
## exn_spec
## LR(1) items:
option(exn_spec) -> exn_spec . [ Tasm TSup_Template TPtVirg TOPar_CplusplusInit TOPar TOCro TOBrace TIdent TEq TComma TCol TCPar_EOL TCPar ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production option(exn_spec) -> exn_spec

State 413:
## Known stack suffix:
## TPtVirg
## LR(1) items:
declaration -> TPtVirg . [ Twchar_t Tvolatile Tvoid Tvirtual Tusing Tunsigned Tunion Ttypeof Ttypename Ttypedef Tthread_local Ttemplate Tstruct Tstatic Tsigned Tshort Trestrict Tregister Tpublic Tprotected Tprivate Tnamespace Tmutable Tlong Tint Tinline Tfriend Tfloat Textern Texplicit Tenum Tdouble Tdecltype Tconstexpr Tconst Tclass Tchar Tbool Tauto Tasm TUndef TTilde TPtVirg TInclude TIfdefelse TIfdefelif TIfdefVersion TIfdefMisc TIfdefBool TIfdef TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_MacroDecl TIdent_Constructor TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TEndif TDefine TCppDirectiveOther TColCol_BeforeTypedef TCBrace ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production declaration -> TPtVirg

State 414:
## Known stack suffix:
## Textern TString TOBrace
## LR(1) items:
linkage_specification -> Textern TString TOBrace . optl(nonempty_list(declaration_cpp)) TCBrace [ Twchar_t Tvolatile Tvoid Tvirtual Tusing Tunsigned Tunion Ttypeof Ttypename Ttypedef Tthread_local Ttemplate Tstruct Tstatic Tsigned Tshort Trestrict Tregister Tpublic Tprotected Tprivate Tnamespace Tmutable Tlong Tint Tinline Tfriend Tfloat Textern Texplicit Tenum Tdouble Tdecltype Tconstexpr Tconst Tclass Tchar Tbool Tauto Tasm TUndef TTilde TPtVirg TInclude TIfdefelse TIfdefelif TIfdefVersion TIfdefMisc TIfdefBool TIfdef TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_MacroDecl TIdent_Constructor TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TEndif TDefine TCppDirectiveOther TColCol_BeforeTypedef TCBrace ]
## Transitions:
-- On Twchar_t shift to state 1
-- On Tvolatile shift to state 2
-- On Tvoid shift to state 3
-- On Tvirtual shift to state 4
-- On Tusing shift to state 5
-- On Tunsigned shift to state 15
-- On Tunion shift to state 16
-- On Ttypeof shift to state 17
-- On Ttypename shift to state 19
-- On Ttypedef shift to state 96
-- On Tthread_local shift to state 97
-- On Ttemplate shift to state 320
-- On Tstruct shift to state 27
-- On Tstatic shift to state 323
-- On Tsigned shift to state 30
-- On Tshort shift to state 32
-- On Trestrict shift to state 65
-- On Tregister shift to state 99
-- On Tnamespace shift to state 361
-- On Tmutable shift to state 100
-- On Tlong shift to state 38
-- On Tint shift to state 39
-- On Tinline shift to state 363
-- On Tfriend shift to state 102
-- On Tfloat shift to state 40
-- On Textern shift to state 364
-- On Tenum shift to state 66
-- On Tdouble shift to state 41
-- On Tdecltype shift to state 45
-- On Tconstexpr shift to state 104
-- On Tconst shift to state 76
-- On Tclass shift to state 77
-- On Tchar shift to state 58
-- On Tbool shift to state 60
-- On Tauto shift to state 105
-- On Tasm shift to state 366
-- On TUndef shift to state 415
-- On TTilde shift to state 395
-- On TPtVirg shift to state 413
-- On TInclude shift to state 416
-- On TIfdefelse shift to state 417
-- On TIfdefelif shift to state 418
-- On TIfdefVersion shift to state 419
-- On TIfdefMisc shift to state 420
-- On TIfdefBool shift to state 421
-- On TIfdef shift to state 422
-- On TIdent_Typedef shift to state 20
-- On TIdent_TemplatenameInQualifier_BeforeTypedef shift to state 21
-- On TIdent_TemplatenameInQualifier shift to state 12
-- On TIdent_Templatename shift to state 108
-- On TIdent_MacroDecl shift to state 423
-- On TIdent_ClassnameInQualifier_BeforeTypedef shift to state 111
-- On TIdent_ClassnameInQualifier shift to state 112
-- On TEndif shift to state 428
-- On TDefine shift to state 429
-- On TCppDirectiveOther shift to state 691
-- On TColCol_BeforeTypedef shift to state 118
-- On using_directive shift to state 581
-- On using_declaration shift to state 582
-- On unnamed_namespace_definition shift to state 692
-- On type_spec shift to state 314
-- On type_name shift to state 182
-- On type_cplusplus_id shift to state 183
-- On template_id shift to state 120
-- On template_declaration shift to state 693
-- On storage_class_spec shift to state 316
-- On simple_type_specifier shift to state 206
-- On simple_declaration shift to state 585
-- On optl(nonempty_list(declaration_cpp)) shift to state 694
-- On option(Tinline) shift to state 696
-- On nonempty_list(declaration_cpp) shift to state 715
-- On nested_name_specifier2 shift to state 207
-- On nested_name_specifier shift to state 716
-- On namespace_definition shift to state 729
-- On namespace_alias_definition shift to state 587
-- On named_namespace_definition shift to state 730
-- On linkage_specification shift to state 731
-- On function_spec shift to state 437
-- On function_definition shift to state 732
-- On explicit_specialization shift to state 733
-- On enum_specifier shift to state 209
-- On enum_name_or_typedef_name_or_simple_class_name shift to state 123
-- On enum_head shift to state 210
-- On elaborated_type_specifier shift to state 274
-- On decltype_specifier shift to state 243
-- On declaration_cpp shift to state 734
-- On declaration shift to state 736
-- On decl_spec_seq shift to state 599
-- On decl_spec shift to state 473
-- On cv_qualif shift to state 475
-- On ctor_dtor shift to state 737
-- On cpp_ifdef_directive shift to state 738
-- On cpp_directive shift to state 739
-- On class_specifier shift to state 277
-- On class_or_namespace_name_for_qualifier2 shift to state 124
-- On class_or_namespace_name_for_qualifier shift to state 170
-- On class_key shift to state 278
-- On class_head shift to state 301
-- On block_declaration shift to state 740
-- On asm_definition shift to state 617
## Reductions:
-- On TIdent_Constructor
--   reduce production option(Tinline) ->
-- On TCBrace
--   reduce production optl(nonempty_list(declaration_cpp)) ->

State 415:
## Known stack suffix:
## TUndef
## LR(1) items:
cpp_directive -> TUndef . [ Twhile Twchar_t_Constr Twchar_t Tvolatile Tvoid Tvirtual Tusing Tunsigned Tunion Ttypeof Ttypename Ttypeid Ttypedef Ttry Ttrue Tthrow Tthread_local Tthis Ttemplate Tswitch Tstruct Tstatic_cast Tstatic Tsizeof Tsigned Tshort_Constr Tshort Treturn Trestrict Treinterpret_cast Tregister Toperator Tnullptr Tnull Tnew Tnamespace Tmutable Tlong_Constr Tlong Tint_Constr Tint Tinline Tif Tgoto Tfriend Tfor Tfloat_Constr Tfloat Tfalse Textern Tenum Tdynamic_cast Tdouble_Constr Tdouble Tdo Tdelete Tdefault Tdecltype Tcontinue Tconstexpr Tconst_cast Tconst Tclass Tchar_Constr Tchar Tcase Tbreak Tbool_Constr Tbool Tauto Tasm TUndef TTilde TString TPtVirg TPlus TOPar TOCro_Lambda TOBrace TMul TMinus TInt TInclude TInc TIfdefelse TIfdefelif TIfdefVersion TIfdefMisc TIfdefBool TIfdef TIdent_TypedefConstr TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_MacroString TIdent_MacroStmt TIdent_MacroIterator TIdent_MacroDecl TIdent_Constructor TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TIdent TFloat TEndif TEllipsis TDefine TDec TCppDirectiveOther TColCol_BeforeTypedef TColCol TChar TCBrace TBang TAndLog TAnd LDots EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production cpp_directive -> TUndef

State 416:
## Known stack suffix:
## TInclude
## LR(1) items:
cpp_directive -> TInclude . [ Twhile Twchar_t_Constr Twchar_t Tvolatile Tvoid Tvirtual Tusing Tunsigned Tunion Ttypeof Ttypename Ttypeid Ttypedef Ttry Ttrue Tthrow Tthread_local Tthis Ttemplate Tswitch Tstruct Tstatic_cast Tstatic Tsizeof Tsigned Tshort_Constr Tshort Treturn Trestrict Treinterpret_cast Tregister Toperator Tnullptr Tnull Tnew Tnamespace Tmutable Tlong_Constr Tlong Tint_Constr Tint Tinline Tif Tgoto Tfriend Tfor Tfloat_Constr Tfloat Tfalse Textern Tenum Tdynamic_cast Tdouble_Constr Tdouble Tdo Tdelete Tdefault Tdecltype Tcontinue Tconstexpr Tconst_cast Tconst Tclass Tchar_Constr Tchar Tcase Tbreak Tbool_Constr Tbool Tauto Tasm TUndef TTilde TString TPtVirg TPlus TOPar TOCro_Lambda TOBrace TMul TMinus TInt TInclude TInc TIfdefelse TIfdefelif TIfdefVersion TIfdefMisc TIfdefBool TIfdef TIdent_TypedefConstr TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_MacroString TIdent_MacroStmt TIdent_MacroIterator TIdent_MacroDecl TIdent_Constructor TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TIdent TFloat TEndif TEllipsis TDefine TDec TCppDirectiveOther TColCol_BeforeTypedef TColCol TChar TCBrace TBang TAndLog TAnd LDots EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production cpp_directive -> TInclude

State 417:
## Known stack suffix:
## TIfdefelse
## LR(1) items:
cpp_ifdef_directive -> TIfdefelse . [ Twhile Twchar_t_Constr Twchar_t Tvolatile Tvoid Tvirtual Tusing Tunsigned Tunion Ttypeof Ttypename Ttypeid Ttypedef Ttry Ttrue Tthrow Tthread_local Tthis Ttemplate Tswitch Tstruct Tstatic_cast Tstatic Tsizeof Tsigned Tshort_Constr Tshort Treturn Trestrict Treinterpret_cast Tregister Toperator Tnullptr Tnull Tnew Tnamespace Tmutable Tlong_Constr Tlong Tint_Constr Tint Tinline Tif Tgoto Tfriend Tfor Tfloat_Constr Tfloat Tfalse Textern Tenum Tdynamic_cast Tdouble_Constr Tdouble Tdo Tdelete Tdefault Tdecltype Tcontinue Tconstexpr Tconst_cast Tconst Tclass Tchar_Constr Tchar Tcase Tbreak Tbool_Constr Tbool Tauto Tasm TUndef TTilde TString TPtVirg TPlus TOPar TOCro_Lambda TOBrace TMul TMinus TInt TInclude TInc TIfdefelse TIfdefelif TIfdefVersion TIfdefMisc TIfdefBool TIfdef TIdent_TypedefConstr TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_MacroString TIdent_MacroStmt TIdent_MacroIterator TIdent_MacroDecl TIdent_Constructor TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TIdent TFloat TEndif TEllipsis TDefine TDec TCppDirectiveOther TColCol_BeforeTypedef TColCol TChar TCBrace TBang TAndLog TAnd LDots ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production cpp_ifdef_directive -> TIfdefelse

State 418:
## Known stack suffix:
## TIfdefelif
## LR(1) items:
cpp_ifdef_directive -> TIfdefelif . [ Twhile Twchar_t_Constr Twchar_t Tvolatile Tvoid Tvirtual Tusing Tunsigned Tunion Ttypeof Ttypename Ttypeid Ttypedef Ttry Ttrue Tthrow Tthread_local Tthis Ttemplate Tswitch Tstruct Tstatic_cast Tstatic Tsizeof Tsigned Tshort_Constr Tshort Treturn Trestrict Treinterpret_cast Tregister Toperator Tnullptr Tnull Tnew Tnamespace Tmutable Tlong_Constr Tlong Tint_Constr Tint Tinline Tif Tgoto Tfriend Tfor Tfloat_Constr Tfloat Tfalse Textern Tenum Tdynamic_cast Tdouble_Constr Tdouble Tdo Tdelete Tdefault Tdecltype Tcontinue Tconstexpr Tconst_cast Tconst Tclass Tchar_Constr Tchar Tcase Tbreak Tbool_Constr Tbool Tauto Tasm TUndef TTilde TString TPtVirg TPlus TOPar TOCro_Lambda TOBrace TMul TMinus TInt TInclude TInc TIfdefelse TIfdefelif TIfdefVersion TIfdefMisc TIfdefBool TIfdef TIdent_TypedefConstr TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_MacroString TIdent_MacroStmt TIdent_MacroIterator TIdent_MacroDecl TIdent_Constructor TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TIdent TFloat TEndif TEllipsis TDefine TDec TCppDirectiveOther TColCol_BeforeTypedef TColCol TChar TCBrace TBang TAndLog TAnd LDots ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production cpp_ifdef_directive -> TIfdefelif

State 419:
## Known stack suffix:
## TIfdefVersion
## LR(1) items:
cpp_ifdef_directive -> TIfdefVersion . [ Twhile Twchar_t_Constr Twchar_t Tvolatile Tvoid Tvirtual Tusing Tunsigned Tunion Ttypeof Ttypename Ttypeid Ttypedef Ttry Ttrue Tthrow Tthread_local Tthis Ttemplate Tswitch Tstruct Tstatic_cast Tstatic Tsizeof Tsigned Tshort_Constr Tshort Treturn Trestrict Treinterpret_cast Tregister Toperator Tnullptr Tnull Tnew Tnamespace Tmutable Tlong_Constr Tlong Tint_Constr Tint Tinline Tif Tgoto Tfriend Tfor Tfloat_Constr Tfloat Tfalse Textern Tenum Tdynamic_cast Tdouble_Constr Tdouble Tdo Tdelete Tdefault Tdecltype Tcontinue Tconstexpr Tconst_cast Tconst Tclass Tchar_Constr Tchar Tcase Tbreak Tbool_Constr Tbool Tauto Tasm TUndef TTilde TString TPtVirg TPlus TOPar TOCro_Lambda TOBrace TMul TMinus TInt TInclude TInc TIfdefelse TIfdefelif TIfdefVersion TIfdefMisc TIfdefBool TIfdef TIdent_TypedefConstr TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_MacroString TIdent_MacroStmt TIdent_MacroIterator TIdent_MacroDecl TIdent_Constructor TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TIdent TFloat TEndif TEllipsis TDefine TDec TCppDirectiveOther TColCol_BeforeTypedef TColCol TChar TCBrace TBang TAndLog TAnd LDots ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production cpp_ifdef_directive -> TIfdefVersion

State 420:
## Known stack suffix:
## TIfdefMisc
## LR(1) items:
cpp_ifdef_directive -> TIfdefMisc . [ Twhile Twchar_t_Constr Twchar_t Tvolatile Tvoid Tvirtual Tusing Tunsigned Tunion Ttypeof Ttypename Ttypeid Ttypedef Ttry Ttrue Tthrow Tthread_local Tthis Ttemplate Tswitch Tstruct Tstatic_cast Tstatic Tsizeof Tsigned Tshort_Constr Tshort Treturn Trestrict Treinterpret_cast Tregister Toperator Tnullptr Tnull Tnew Tnamespace Tmutable Tlong_Constr Tlong Tint_Constr Tint Tinline Tif Tgoto Tfriend Tfor Tfloat_Constr Tfloat Tfalse Textern Tenum Tdynamic_cast Tdouble_Constr Tdouble Tdo Tdelete Tdefault Tdecltype Tcontinue Tconstexpr Tconst_cast Tconst Tclass Tchar_Constr Tchar Tcase Tbreak Tbool_Constr Tbool Tauto Tasm TUndef TTilde TString TPtVirg TPlus TOPar TOCro_Lambda TOBrace TMul TMinus TInt TInclude TInc TIfdefelse TIfdefelif TIfdefVersion TIfdefMisc TIfdefBool TIfdef TIdent_TypedefConstr TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_MacroString TIdent_MacroStmt TIdent_MacroIterator TIdent_MacroDecl TIdent_Constructor TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TIdent TFloat TEndif TEllipsis TDefine TDec TCppDirectiveOther TColCol_BeforeTypedef TColCol TChar TCBrace TBang TAndLog TAnd LDots ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production cpp_ifdef_directive -> TIfdefMisc

State 421:
## Known stack suffix:
## TIfdefBool
## LR(1) items:
cpp_ifdef_directive -> TIfdefBool . [ Twhile Twchar_t_Constr Twchar_t Tvolatile Tvoid Tvirtual Tusing Tunsigned Tunion Ttypeof Ttypename Ttypeid Ttypedef Ttry Ttrue Tthrow Tthread_local Tthis Ttemplate Tswitch Tstruct Tstatic_cast Tstatic Tsizeof Tsigned Tshort_Constr Tshort Treturn Trestrict Treinterpret_cast Tregister Toperator Tnullptr Tnull Tnew Tnamespace Tmutable Tlong_Constr Tlong Tint_Constr Tint Tinline Tif Tgoto Tfriend Tfor Tfloat_Constr Tfloat Tfalse Textern Tenum Tdynamic_cast Tdouble_Constr Tdouble Tdo Tdelete Tdefault Tdecltype Tcontinue Tconstexpr Tconst_cast Tconst Tclass Tchar_Constr Tchar Tcase Tbreak Tbool_Constr Tbool Tauto Tasm TUndef TTilde TString TPtVirg TPlus TOPar TOCro_Lambda TOBrace TMul TMinus TInt TInclude TInc TIfdefelse TIfdefelif TIfdefVersion TIfdefMisc TIfdefBool TIfdef TIdent_TypedefConstr TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_MacroString TIdent_MacroStmt TIdent_MacroIterator TIdent_MacroDecl TIdent_Constructor TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TIdent TFloat TEndif TEllipsis TDefine TDec TCppDirectiveOther TColCol_BeforeTypedef TColCol TChar TCBrace TBang TAndLog TAnd LDots ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production cpp_ifdef_directive -> TIfdefBool

State 422:
## Known stack suffix:
## TIfdef
## LR(1) items:
cpp_ifdef_directive -> TIfdef . [ Twhile Twchar_t_Constr Twchar_t Tvolatile Tvoid Tvirtual Tusing Tunsigned Tunion Ttypeof Ttypename Ttypeid Ttypedef Ttry Ttrue Tthrow Tthread_local Tthis Ttemplate Tswitch Tstruct Tstatic_cast Tstatic Tsizeof Tsigned Tshort_Constr Tshort Treturn Trestrict Treinterpret_cast Tregister Toperator Tnullptr Tnull Tnew Tnamespace Tmutable Tlong_Constr Tlong Tint_Constr Tint Tinline Tif Tgoto Tfriend Tfor Tfloat_Constr Tfloat Tfalse Textern Tenum Tdynamic_cast Tdouble_Constr Tdouble Tdo Tdelete Tdefault Tdecltype Tcontinue Tconstexpr Tconst_cast Tconst Tclass Tchar_Constr Tchar Tcase Tbreak Tbool_Constr Tbool Tauto Tasm TUndef TTilde TString TPtVirg TPlus TOPar TOCro_Lambda TOBrace TMul TMinus TInt TInclude TInc TIfdefelse TIfdefelif TIfdefVersion TIfdefMisc TIfdefBool TIfdef TIdent_TypedefConstr TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_MacroString TIdent_MacroStmt TIdent_MacroIterator TIdent_MacroDecl TIdent_Constructor TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TIdent TFloat TEndif TEllipsis TDefine TDec TCppDirectiveOther TColCol_BeforeTypedef TColCol TChar TCBrace TBang TAndLog TAnd LDots ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production cpp_ifdef_directive -> TIfdef

State 423:
## Known stack suffix:
## TIdent_MacroDecl
## LR(1) items:
simple_declaration -> TIdent_MacroDecl . TOPar listc(argument) TCPar TPtVirg [ Twhile Twchar_t_Constr Twchar_t Tvolatile Tvoid Tvirtual Tusing Tunsigned Tunion Ttypeof Ttypename Ttypeid Ttypedef Ttry Ttrue Tthrow Tthread_local Tthis Ttemplate Tswitch Tstruct Tstatic_cast Tstatic Tsizeof Tsigned Tshort_Constr Tshort Treturn Trestrict Treinterpret_cast Tregister Tpublic Tprotected Tprivate Toperator Tnullptr Tnull Tnew Tnamespace Tmutable Tlong_Constr Tlong Tint_Constr Tint Tinline Tif Tgoto Tfriend Tfor Tfloat_Constr Tfloat Tfalse Textern Texplicit Tenum Telse Tdynamic_cast Tdouble_Constr Tdouble Tdo Tdelete Tdefault Tdecltype Tcontinue Tconstexpr Tconst_cast Tconst Tclass Tchar_Constr Tchar Tcase Tbreak Tbool_Constr Tbool Tauto Tasm TUndef TTilde TString TPtVirg TPlus TOPar TOCro_Lambda TOBrace TMul TMinus TInt TInclude TInc TIfdefelse TIfdefelif TIfdefVersion TIfdefMisc TIfdefBool TIfdef TIdent_TypedefConstr TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_MacroString TIdent_MacroStmt TIdent_MacroIterator TIdent_MacroDecl TIdent_Constructor TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TIdent TFloat TEndif TEllipsis TDefine TDec TCppDirectiveOther TCommentNewline_DefineEndOfMacro TColCol_BeforeTypedef TColCol TChar TCBrace TBang TAndLog TAnd LDots EOF ]
## Transitions:
-- On TOPar shift to state 424
## Reductions:

State 424:
## Known stack suffix:
## TIdent_MacroDecl TOPar
## LR(1) items:
simple_declaration -> TIdent_MacroDecl TOPar . listc(argument) TCPar TPtVirg [ Twhile Twchar_t_Constr Twchar_t Tvolatile Tvoid Tvirtual Tusing Tunsigned Tunion Ttypeof Ttypename Ttypeid Ttypedef Ttry Ttrue Tthrow Tthread_local Tthis Ttemplate Tswitch Tstruct Tstatic_cast Tstatic Tsizeof Tsigned Tshort_Constr Tshort Treturn Trestrict Treinterpret_cast Tregister Tpublic Tprotected Tprivate Toperator Tnullptr Tnull Tnew Tnamespace Tmutable Tlong_Constr Tlong Tint_Constr Tint Tinline Tif Tgoto Tfriend Tfor Tfloat_Constr Tfloat Tfalse Textern Texplicit Tenum Telse Tdynamic_cast Tdouble_Constr Tdouble Tdo Tdelete Tdefault Tdecltype Tcontinue Tconstexpr Tconst_cast Tconst Tclass Tchar_Constr Tchar Tcase Tbreak Tbool_Constr Tbool Tauto Tasm TUndef TTilde TString TPtVirg TPlus TOPar TOCro_Lambda TOBrace TMul TMinus TInt TInclude TInc TIfdefelse TIfdefelif TIfdefVersion TIfdefMisc TIfdefBool TIfdef TIdent_TypedefConstr TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_MacroString TIdent_MacroStmt TIdent_MacroIterator TIdent_MacroDecl TIdent_Constructor TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TIdent TFloat TEndif TEllipsis TDefine TDec TCppDirectiveOther TCommentNewline_DefineEndOfMacro TColCol_BeforeTypedef TColCol TChar TCBrace TBang TAndLog TAnd LDots EOF ]
## Transitions:
-- On Twchar_t_Constr shift to state 14
-- On Twchar_t shift to state 1
-- On Tvolatile shift to state 2
-- On Tvoid shift to state 3
-- On Tunsigned shift to state 15
-- On Tunion shift to state 16
-- On Ttypeof shift to state 17
-- On Ttypename shift to state 19
-- On Ttypeid shift to state 23
-- On Ttrue shift to state 25
-- On Tthrow shift to state 47
-- On Tthis shift to state 26
-- On Tstruct shift to state 27
-- On Tstatic_cast shift to state 28
-- On Tsizeof shift to state 29
-- On Tsigned shift to state 30
-- On Tshort_Constr shift to state 31
-- On Tshort shift to state 32
-- On Trestrict shift to state 65
-- On Treinterpret_cast shift to state 33
-- On Toperator shift to state 34
-- On Tnullptr shift to state 48
-- On Tnull shift to state 49
-- On Tlong_Constr shift to state 50
-- On Tlong shift to state 38
-- On Tint_Constr shift to state 51
-- On Tint shift to state 39
-- On Tfloat_Constr shift to state 52
-- On Tfloat shift to state 40
-- On Tfalse shift to state 53
-- On Tenum shift to state 66
-- On Tdynamic_cast shift to state 54
-- On Tdouble_Constr shift to state 55
-- On Tdouble shift to state 41
-- On Tdecltype shift to state 45
-- On Tconst_cast shift to state 56
-- On Tconst shift to state 76
-- On Tclass shift to state 77
-- On Tchar_Constr shift to state 57
-- On Tchar shift to state 58
-- On Tbool_Constr shift to state 59
-- On Tbool shift to state 60
-- On TTilde shift to state 61
-- On TString shift to state 62
-- On TPlus shift to state 63
-- On TOPar shift to state 64
-- On TOCro_Lambda shift to state 78
-- On TMul shift to state 88
-- On TMinus shift to state 89
-- On TInt shift to state 90
-- On TInc shift to state 91
-- On TIdent_TypedefConstr shift to state 106
-- On TIdent_Typedef shift to state 20
-- On TIdent_TemplatenameInQualifier_BeforeTypedef shift to state 21
-- On TIdent_TemplatenameInQualifier shift to state 12
-- On TIdent_Templatename shift to state 108
-- On TIdent_MacroString shift to state 110
-- On TIdent_ClassnameInQualifier_BeforeTypedef shift to state 111
-- On TIdent_ClassnameInQualifier shift to state 112
-- On TIdent shift to state 113
-- On TFloat shift to state 116
-- On TEllipsis shift to state 201
-- On TDec shift to state 117
-- On TColCol_BeforeTypedef shift to state 118
-- On TColCol shift to state 128
-- On TChar shift to state 174
-- On TBang shift to state 175
-- On TAny_Action shift to state 202
-- On TAndLog shift to state 176
-- On TAnd shift to state 177
-- On LDots shift to state 178
-- On unqualified_id shift to state 179
-- On unary_op shift to state 180
-- On unary_expr shift to state 181
-- On type_spec shift to state 204
-- On type_name shift to state 182
-- On type_id shift to state 224
-- On type_cplusplus_id shift to state 183
-- On template_id shift to state 120
-- On string_elem shift to state 184
-- On spec_qualif_list shift to state 225
-- On simple_type_specifier shift to state 266
-- On shift_expr shift to state 217
-- On relational_expr shift to state 229
-- On qualified_id shift to state 191
-- On primary_expr shift to state 192
-- On primary_cplusplus_id shift to state 193
-- On postfix_expr shift to state 194
-- On pm_expr shift to state 219
-- On option(TColCol) shift to state 221
-- On operator_function_id shift to state 168
-- On nonempty_list(TAny_Action) shift to state 269
-- On new_expr shift to state 233
-- On nested_name_specifier2 shift to state 207
-- On nested_name_specifier shift to state 165
-- On multiplicative_expr shift to state 234
-- On logical_or_expr shift to state 246
-- On logical_and_expr shift to state 250
-- On literal shift to state 238
-- On listc(argument) shift to state 425
-- On lambda_introducer shift to state 239
-- On inclusive_or_expr shift to state 272
-- On id_expression shift to state 241
-- On exclusive_or_expr shift to state 273
-- On equality_expr shift to state 256
-- On enum_specifier shift to state 209
-- On enum_name_or_typedef_name_or_simple_class_name shift to state 123
-- On enum_head shift to state 210
-- On elaborated_type_specifier shift to state 274
-- On delete_expr shift to state 242
-- On decltype_specifier shift to state 243
-- On cv_qualif shift to state 275
-- On cpp_cast_operator shift to state 244
-- On conversion_function_id shift to state 169
-- On cond_expr shift to state 330
-- On class_specifier shift to state 277
-- On class_or_namespace_name_for_qualifier2 shift to state 124
-- On class_or_namespace_name_for_qualifier shift to state 170
-- On class_key shift to state 278
-- On class_head shift to state 301
-- On cast_operator_expr shift to state 261
-- On cast_expr shift to state 331
-- On cast_constructor_expr shift to state 263
-- On basic_type_2 shift to state 264
-- On assign_expr shift to state 354
-- On argument shift to state 355
-- On and_expr shift to state 334
-- On additive_expr shift to state 341
## Reductions:
-- On Tnew Tdelete
--   reduce production option(TColCol) ->

State 425:
## Known stack suffix:
## TIdent_MacroDecl TOPar listc(argument)
## LR(1) items:
listc(argument) -> listc(argument) . TComma argument [ TComma TCPar ]
simple_declaration -> TIdent_MacroDecl TOPar listc(argument) . TCPar TPtVirg [ Twhile Twchar_t_Constr Twchar_t Tvolatile Tvoid Tvirtual Tusing Tunsigned Tunion Ttypeof Ttypename Ttypeid Ttypedef Ttry Ttrue Tthrow Tthread_local Tthis Ttemplate Tswitch Tstruct Tstatic_cast Tstatic Tsizeof Tsigned Tshort_Constr Tshort Treturn Trestrict Treinterpret_cast Tregister Tpublic Tprotected Tprivate Toperator Tnullptr Tnull Tnew Tnamespace Tmutable Tlong_Constr Tlong Tint_Constr Tint Tinline Tif Tgoto Tfriend Tfor Tfloat_Constr Tfloat Tfalse Textern Texplicit Tenum Telse Tdynamic_cast Tdouble_Constr Tdouble Tdo Tdelete Tdefault Tdecltype Tcontinue Tconstexpr Tconst_cast Tconst Tclass Tchar_Constr Tchar Tcase Tbreak Tbool_Constr Tbool Tauto Tasm TUndef TTilde TString TPtVirg TPlus TOPar TOCro_Lambda TOBrace TMul TMinus TInt TInclude TInc TIfdefelse TIfdefelif TIfdefVersion TIfdefMisc TIfdefBool TIfdef TIdent_TypedefConstr TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_MacroString TIdent_MacroStmt TIdent_MacroIterator TIdent_MacroDecl TIdent_Constructor TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TIdent TFloat TEndif TEllipsis TDefine TDec TCppDirectiveOther TCommentNewline_DefineEndOfMacro TColCol_BeforeTypedef TColCol TChar TCBrace TBang TAndLog TAnd LDots EOF ]
## Transitions:
-- On TComma shift to state 271
-- On TCPar shift to state 426
## Reductions:

State 426:
## Known stack suffix:
## TIdent_MacroDecl TOPar listc(argument) TCPar
## LR(1) items:
simple_declaration -> TIdent_MacroDecl TOPar listc(argument) TCPar . TPtVirg [ Twhile Twchar_t_Constr Twchar_t Tvolatile Tvoid Tvirtual Tusing Tunsigned Tunion Ttypeof Ttypename Ttypeid Ttypedef Ttry Ttrue Tthrow Tthread_local Tthis Ttemplate Tswitch Tstruct Tstatic_cast Tstatic Tsizeof Tsigned Tshort_Constr Tshort Treturn Trestrict Treinterpret_cast Tregister Tpublic Tprotected Tprivate Toperator Tnullptr Tnull Tnew Tnamespace Tmutable Tlong_Constr Tlong Tint_Constr Tint Tinline Tif Tgoto Tfriend Tfor Tfloat_Constr Tfloat Tfalse Textern Texplicit Tenum Telse Tdynamic_cast Tdouble_Constr Tdouble Tdo Tdelete Tdefault Tdecltype Tcontinue Tconstexpr Tconst_cast Tconst Tclass Tchar_Constr Tchar Tcase Tbreak Tbool_Constr Tbool Tauto Tasm TUndef TTilde TString TPtVirg TPlus TOPar TOCro_Lambda TOBrace TMul TMinus TInt TInclude TInc TIfdefelse TIfdefelif TIfdefVersion TIfdefMisc TIfdefBool TIfdef TIdent_TypedefConstr TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_MacroString TIdent_MacroStmt TIdent_MacroIterator TIdent_MacroDecl TIdent_Constructor TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TIdent TFloat TEndif TEllipsis TDefine TDec TCppDirectiveOther TCommentNewline_DefineEndOfMacro TColCol_BeforeTypedef TColCol TChar TCBrace TBang TAndLog TAnd LDots EOF ]
## Transitions:
-- On TPtVirg shift to state 427
## Reductions:

State 427:
## Known stack suffix:
## TIdent_MacroDecl TOPar listc(argument) TCPar TPtVirg
## LR(1) items:
simple_declaration -> TIdent_MacroDecl TOPar listc(argument) TCPar TPtVirg . [ Twhile Twchar_t_Constr Twchar_t Tvolatile Tvoid Tvirtual Tusing Tunsigned Tunion Ttypeof Ttypename Ttypeid Ttypedef Ttry Ttrue Tthrow Tthread_local Tthis Ttemplate Tswitch Tstruct Tstatic_cast Tstatic Tsizeof Tsigned Tshort_Constr Tshort Treturn Trestrict Treinterpret_cast Tregister Tpublic Tprotected Tprivate Toperator Tnullptr Tnull Tnew Tnamespace Tmutable Tlong_Constr Tlong Tint_Constr Tint Tinline Tif Tgoto Tfriend Tfor Tfloat_Constr Tfloat Tfalse Textern Texplicit Tenum Telse Tdynamic_cast Tdouble_Constr Tdouble Tdo Tdelete Tdefault Tdecltype Tcontinue Tconstexpr Tconst_cast Tconst Tclass Tchar_Constr Tchar Tcase Tbreak Tbool_Constr Tbool Tauto Tasm TUndef TTilde TString TPtVirg TPlus TOPar TOCro_Lambda TOBrace TMul TMinus TInt TInclude TInc TIfdefelse TIfdefelif TIfdefVersion TIfdefMisc TIfdefBool TIfdef TIdent_TypedefConstr TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_MacroString TIdent_MacroStmt TIdent_MacroIterator TIdent_MacroDecl TIdent_Constructor TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TIdent TFloat TEndif TEllipsis TDefine TDec TCppDirectiveOther TCommentNewline_DefineEndOfMacro TColCol_BeforeTypedef TColCol TChar TCBrace TBang TAndLog TAnd LDots EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production simple_declaration -> TIdent_MacroDecl TOPar listc(argument) TCPar TPtVirg

State 428:
## Known stack suffix:
## TEndif
## LR(1) items:
cpp_ifdef_directive -> TEndif . [ Twhile Twchar_t_Constr Twchar_t Tvolatile Tvoid Tvirtual Tusing Tunsigned Tunion Ttypeof Ttypename Ttypeid Ttypedef Ttry Ttrue Tthrow Tthread_local Tthis Ttemplate Tswitch Tstruct Tstatic_cast Tstatic Tsizeof Tsigned Tshort_Constr Tshort Treturn Trestrict Treinterpret_cast Tregister Toperator Tnullptr Tnull Tnew Tnamespace Tmutable Tlong_Constr Tlong Tint_Constr Tint Tinline Tif Tgoto Tfriend Tfor Tfloat_Constr Tfloat Tfalse Textern Tenum Tdynamic_cast Tdouble_Constr Tdouble Tdo Tdelete Tdefault Tdecltype Tcontinue Tconstexpr Tconst_cast Tconst Tclass Tchar_Constr Tchar Tcase Tbreak Tbool_Constr Tbool Tauto Tasm TUndef TTilde TString TPtVirg TPlus TOPar TOCro_Lambda TOBrace TMul TMinus TInt TInclude TInc TIfdefelse TIfdefelif TIfdefVersion TIfdefMisc TIfdefBool TIfdef TIdent_TypedefConstr TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_MacroString TIdent_MacroStmt TIdent_MacroIterator TIdent_MacroDecl TIdent_Constructor TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TIdent TFloat TEndif TEllipsis TDefine TDec TCppDirectiveOther TColCol_BeforeTypedef TColCol TChar TCBrace TBang TAndLog TAnd LDots ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production cpp_ifdef_directive -> TEndif

State 429:
## Known stack suffix:
## TDefine
## LR(1) items:
cpp_directive -> TDefine . TIdent_Define define_val TCommentNewline_DefineEndOfMacro [ Twhile Twchar_t_Constr Twchar_t Tvolatile Tvoid Tvirtual Tusing Tunsigned Tunion Ttypeof Ttypename Ttypeid Ttypedef Ttry Ttrue Tthrow Tthread_local Tthis Ttemplate Tswitch Tstruct Tstatic_cast Tstatic Tsizeof Tsigned Tshort_Constr Tshort Treturn Trestrict Treinterpret_cast Tregister Toperator Tnullptr Tnull Tnew Tnamespace Tmutable Tlong_Constr Tlong Tint_Constr Tint Tinline Tif Tgoto Tfriend Tfor Tfloat_Constr Tfloat Tfalse Textern Tenum Tdynamic_cast Tdouble_Constr Tdouble Tdo Tdelete Tdefault Tdecltype Tcontinue Tconstexpr Tconst_cast Tconst Tclass Tchar_Constr Tchar Tcase Tbreak Tbool_Constr Tbool Tauto Tasm TUndef TTilde TString TPtVirg TPlus TOPar TOCro_Lambda TOBrace TMul TMinus TInt TInclude TInc TIfdefelse TIfdefelif TIfdefVersion TIfdefMisc TIfdefBool TIfdef TIdent_TypedefConstr TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_MacroString TIdent_MacroStmt TIdent_MacroIterator TIdent_MacroDecl TIdent_Constructor TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TIdent TFloat TEndif TEllipsis TDefine TDec TCppDirectiveOther TColCol_BeforeTypedef TColCol TChar TCBrace TBang TAndLog TAnd LDots EOF ]
cpp_directive -> TDefine . TIdent_Define TOPar_Define optl(listc(param_define)) TCPar define_val TCommentNewline_DefineEndOfMacro [ Twhile Twchar_t_Constr Twchar_t Tvolatile Tvoid Tvirtual Tusing Tunsigned Tunion Ttypeof Ttypename Ttypeid Ttypedef Ttry Ttrue Tthrow Tthread_local Tthis Ttemplate Tswitch Tstruct Tstatic_cast Tstatic Tsizeof Tsigned Tshort_Constr Tshort Treturn Trestrict Treinterpret_cast Tregister Toperator Tnullptr Tnull Tnew Tnamespace Tmutable Tlong_Constr Tlong Tint_Constr Tint Tinline Tif Tgoto Tfriend Tfor Tfloat_Constr Tfloat Tfalse Textern Tenum Tdynamic_cast Tdouble_Constr Tdouble Tdo Tdelete Tdefault Tdecltype Tcontinue Tconstexpr Tconst_cast Tconst Tclass Tchar_Constr Tchar Tcase Tbreak Tbool_Constr Tbool Tauto Tasm TUndef TTilde TString TPtVirg TPlus TOPar TOCro_Lambda TOBrace TMul TMinus TInt TInclude TInc TIfdefelse TIfdefelif TIfdefVersion TIfdefMisc TIfdefBool TIfdef TIdent_TypedefConstr TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_MacroString TIdent_MacroStmt TIdent_MacroIterator TIdent_MacroDecl TIdent_Constructor TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TIdent TFloat TEndif TEllipsis TDefine TDec TCppDirectiveOther TColCol_BeforeTypedef TColCol TChar TCBrace TBang TAndLog TAnd LDots EOF ]
## Transitions:
-- On TIdent_Define shift to state 430
## Reductions:

State 430:
## Known stack suffix:
## TDefine TIdent_Define
## LR(1) items:
cpp_directive -> TDefine TIdent_Define . define_val TCommentNewline_DefineEndOfMacro [ Twhile Twchar_t_Constr Twchar_t Tvolatile Tvoid Tvirtual Tusing Tunsigned Tunion Ttypeof Ttypename Ttypeid Ttypedef Ttry Ttrue Tthrow Tthread_local Tthis Ttemplate Tswitch Tstruct Tstatic_cast Tstatic Tsizeof Tsigned Tshort_Constr Tshort Treturn Trestrict Treinterpret_cast Tregister Toperator Tnullptr Tnull Tnew Tnamespace Tmutable Tlong_Constr Tlong Tint_Constr Tint Tinline Tif Tgoto Tfriend Tfor Tfloat_Constr Tfloat Tfalse Textern Tenum Tdynamic_cast Tdouble_Constr Tdouble Tdo Tdelete Tdefault Tdecltype Tcontinue Tconstexpr Tconst_cast Tconst Tclass Tchar_Constr Tchar Tcase Tbreak Tbool_Constr Tbool Tauto Tasm TUndef TTilde TString TPtVirg TPlus TOPar TOCro_Lambda TOBrace TMul TMinus TInt TInclude TInc TIfdefelse TIfdefelif TIfdefVersion TIfdefMisc TIfdefBool TIfdef TIdent_TypedefConstr TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_MacroString TIdent_MacroStmt TIdent_MacroIterator TIdent_MacroDecl TIdent_Constructor TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TIdent TFloat TEndif TEllipsis TDefine TDec TCppDirectiveOther TColCol_BeforeTypedef TColCol TChar TCBrace TBang TAndLog TAnd LDots EOF ]
cpp_directive -> TDefine TIdent_Define . TOPar_Define optl(listc(param_define)) TCPar define_val TCommentNewline_DefineEndOfMacro [ Twhile Twchar_t_Constr Twchar_t Tvolatile Tvoid Tvirtual Tusing Tunsigned Tunion Ttypeof Ttypename Ttypeid Ttypedef Ttry Ttrue Tthrow Tthread_local Tthis Ttemplate Tswitch Tstruct Tstatic_cast Tstatic Tsizeof Tsigned Tshort_Constr Tshort Treturn Trestrict Treinterpret_cast Tregister Toperator Tnullptr Tnull Tnew Tnamespace Tmutable Tlong_Constr Tlong Tint_Constr Tint Tinline Tif Tgoto Tfriend Tfor Tfloat_Constr Tfloat Tfalse Textern Tenum Tdynamic_cast Tdouble_Constr Tdouble Tdo Tdelete Tdefault Tdecltype Tcontinue Tconstexpr Tconst_cast Tconst Tclass Tchar_Constr Tchar Tcase Tbreak Tbool_Constr Tbool Tauto Tasm TUndef TTilde TString TPtVirg TPlus TOPar TOCro_Lambda TOBrace TMul TMinus TInt TInclude TInc TIfdefelse TIfdefelif TIfdefVersion TIfdefMisc TIfdefBool TIfdef TIdent_TypedefConstr TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_MacroString TIdent_MacroStmt TIdent_MacroIterator TIdent_MacroDecl TIdent_Constructor TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TIdent TFloat TEndif TEllipsis TDefine TDec TCppDirectiveOther TColCol_BeforeTypedef TColCol TChar TCBrace TBang TAndLog TAnd LDots EOF ]
## Transitions:
-- On Twhile shift to state 94
-- On Twchar_t_Constr shift to state 14
-- On Twchar_t shift to state 1
-- On Tvolatile shift to state 2
-- On Tvoid shift to state 3
-- On Tvirtual shift to state 4
-- On Tusing shift to state 5
-- On Tunsigned shift to state 15
-- On Tunion shift to state 16
-- On Ttypeof shift to state 17
-- On Ttypename shift to state 19
-- On Ttypeid shift to state 23
-- On Ttypedef shift to state 96
-- On Ttry shift to state 431
-- On Ttrue shift to state 25
-- On Tthrow shift to state 47
-- On Tthread_local shift to state 97
-- On Tthis shift to state 26
-- On Tswitch shift to state 515
-- On Tstruct shift to state 27
-- On Tstatic_cast shift to state 28
-- On Tstatic shift to state 323
-- On Tsizeof shift to state 29
-- On Tsigned shift to state 30
-- On Tshort_Constr shift to state 31
-- On Tshort shift to state 32
-- On Treturn shift to state 537
-- On Trestrict shift to state 65
-- On Treinterpret_cast shift to state 33
-- On Tregister shift to state 99
-- On Toperator shift to state 34
-- On Tnullptr shift to state 48
-- On Tnull shift to state 49
-- On Tnamespace shift to state 540
-- On Tmutable shift to state 100
-- On Tlong_Constr shift to state 50
-- On Tlong shift to state 38
-- On Tint_Constr shift to state 51
-- On Tint shift to state 39
-- On Tinline shift to state 101
-- On Tif shift to state 642
-- On Tgoto shift to state 549
-- On Tfriend shift to state 102
-- On Tfor shift to state 553
-- On Tfloat_Constr shift to state 52
-- On Tfloat shift to state 40
-- On Tfalse shift to state 53
-- On Textern shift to state 103
-- On Tenum shift to state 66
-- On Tdynamic_cast shift to state 54
-- On Tdouble_Constr shift to state 55
-- On Tdouble shift to state 41
-- On Tdo shift to state 647
-- On Tdefault shift to state 563
-- On Tdecltype shift to state 45
-- On Tcontinue shift to state 565
-- On Tconstexpr shift to state 104
-- On Tconst_cast shift to state 56
-- On Tconst shift to state 76
-- On Tclass shift to state 77
-- On Tchar_Constr shift to state 57
-- On Tchar shift to state 58
-- On Tcase shift to state 566
-- On Tbreak shift to state 571
-- On Tbool_Constr shift to state 59
-- On Tbool shift to state 60
-- On Tauto shift to state 105
-- On Tasm shift to state 366
-- On TTilde shift to state 61
-- On TString shift to state 62
-- On TPlus shift to state 63
-- On TOPar_Define shift to state 653
-- On TOPar shift to state 64
-- On TOCro_Lambda shift to state 78
-- On TOBrace_DefineInit shift to state 661
-- On TOBrace shift to state 93
-- On TMul shift to state 88
-- On TMinus shift to state 89
-- On TInt shift to state 90
-- On TInc shift to state 91
-- On TIdent_TypedefConstr shift to state 106
-- On TIdent_Typedef shift to state 572
-- On TIdent_TemplatenameInQualifier_BeforeTypedef shift to state 21
-- On TIdent_TemplatenameInQualifier shift to state 12
-- On TIdent_Templatename shift to state 108
-- On TIdent_MacroString shift to state 110
-- On TIdent_MacroStmt shift to state 573
-- On TIdent_MacroIterator shift to state 574
-- On TIdent_MacroDecl shift to state 423
-- On TIdent_ClassnameInQualifier_BeforeTypedef shift to state 111
-- On TIdent_ClassnameInQualifier shift to state 112
-- On TIdent shift to state 578
-- On TFloat shift to state 116
-- On TEllipsis shift to state 580
-- On TDec shift to state 117
-- On TColCol_BeforeTypedef shift to state 118
-- On TColCol shift to state 128
-- On TChar shift to state 174
-- On TBang shift to state 175
-- On TAndLog shift to state 176
-- On TAnd shift to state 177
-- On LDots shift to state 178
-- On using_directive shift to state 581
-- On using_declaration shift to state 582
-- On unqualified_id shift to state 179
-- On unary_op shift to state 180
-- On unary_expr shift to state 181
-- On type_spec shift to state 314
-- On type_name shift to state 182
-- On type_cplusplus_id shift to state 183
-- On try_block shift to state 583
-- On template_id shift to state 120
-- On string_elem shift to state 184
-- On storage_class_spec shift to state 316
-- On statement shift to state 681
-- On simple_type_specifier shift to state 266
-- On simple_declaration shift to state 585
-- On shift_expr shift to state 217
-- On selection shift to state 586
-- On relational_expr shift to state 229
-- On qualified_id shift to state 191
-- On primary_expr shift to state 192
-- On primary_cplusplus_id shift to state 193
-- On postfix_expr shift to state 194
-- On pm_expr shift to state 219
-- On option(expr) shift to state 556
-- On option(TColCol) shift to state 221
-- On operator_function_id shift to state 168
-- On new_expr shift to state 233
-- On nested_name_specifier2 shift to state 207
-- On nested_name_specifier shift to state 165
-- On namespace_alias_definition shift to state 587
-- On multiplicative_expr shift to state 234
-- On logical_or_expr shift to state 246
-- On logical_and_expr shift to state 250
-- On literal shift to state 238
-- On lambda_introducer shift to state 239
-- On labeled shift to state 588
-- On jump shift to state 589
-- On iteration shift to state 591
-- On inclusive_or_expr shift to state 272
-- On ident shift to state 592
-- On id_expression shift to state 241
-- On function_spec shift to state 437
-- On function_definition shift to state 595
-- On expr_statement shift to state 596
-- On expr shift to state 682
-- On exclusive_or_expr shift to state 273
-- On equality_expr shift to state 256
-- On enum_specifier shift to state 209
-- On enum_name_or_typedef_name_or_simple_class_name shift to state 123
-- On enum_head shift to state 210
-- On elaborated_type_specifier shift to state 274
-- On delete_expr shift to state 242
-- On define_val shift to state 689
-- On decltype_specifier shift to state 243
-- On declaration_statement shift to state 598
-- On decl_spec_seq shift to state 599
-- On decl_spec shift to state 473
-- On cv_qualif shift to state 475
-- On cpp_cast_operator shift to state 244
-- On conversion_function_id shift to state 169
-- On cond_expr shift to state 330
-- On compound shift to state 615
-- On class_specifier shift to state 277
-- On class_or_namespace_name_for_qualifier2 shift to state 124
-- On class_or_namespace_name_for_qualifier shift to state 170
-- On class_key shift to state 278
-- On class_head shift to state 301
-- On cast_operator_expr shift to state 261
-- On cast_expr shift to state 331
-- On cast_constructor_expr shift to state 263
-- On block_declaration shift to state 616
-- On basic_type_2 shift to state 264
-- On assign_expr shift to state 539
-- On asm_definition shift to state 617
-- On and_expr shift to state 334
-- On additive_expr shift to state 341
## Reductions:
-- On TCommentNewline_DefineEndOfMacro
--   reduce production define_val ->
-- On Tnew Tdelete
--   reduce production option(TColCol) ->
-- On TPtVirg
--   reduce production option(expr) ->

State 431:
## Known stack suffix:
## Ttry
## LR(1) items:
try_block -> Ttry . compound nonempty_list(handler) [ Twhile Twchar_t_Constr Twchar_t Tvolatile Tvoid Tvirtual Tusing Tunsigned Tunion Ttypeof Ttypename Ttypeid Ttypedef Ttry Ttrue Tthrow Tthread_local Tthis Tswitch Tstruct Tstatic_cast Tstatic Tsizeof Tsigned Tshort_Constr Tshort Treturn Trestrict Treinterpret_cast Tregister Toperator Tnullptr Tnull Tnew Tnamespace Tmutable Tlong_Constr Tlong Tint_Constr Tint Tinline Tif Tgoto Tfriend Tfor Tfloat_Constr Tfloat Tfalse Textern Tenum Telse Tdynamic_cast Tdouble_Constr Tdouble Tdo Tdelete Tdefault Tdecltype Tcontinue Tconstexpr Tconst_cast Tconst Tclass Tchar_Constr Tchar Tcase Tbreak Tbool_Constr Tbool Tauto Tasm TUndef TTilde TString TPtVirg TPlus TOPar TOCro_Lambda TOBrace TMul TMinus TInt TInclude TInc TIfdefelse TIfdefelif TIfdefVersion TIfdefMisc TIfdefBool TIfdef TIdent_TypedefConstr TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_MacroString TIdent_MacroStmt TIdent_MacroIterator TIdent_MacroDecl TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TIdent TFloat TEndif TEllipsis TDefine TDec TCppDirectiveOther TCommentNewline_DefineEndOfMacro TColCol_BeforeTypedef TColCol TChar TCBrace TBang TAndLog TAnd LDots EOF ]
## Transitions:
-- On TOBrace shift to state 93
-- On compound shift to state 432
## Reductions:

State 432:
## Known stack suffix:
## Ttry compound
## LR(1) items:
try_block -> Ttry compound . nonempty_list(handler) [ Twhile Twchar_t_Constr Twchar_t Tvolatile Tvoid Tvirtual Tusing Tunsigned Tunion Ttypeof Ttypename Ttypeid Ttypedef Ttry Ttrue Tthrow Tthread_local Tthis Tswitch Tstruct Tstatic_cast Tstatic Tsizeof Tsigned Tshort_Constr Tshort Treturn Trestrict Treinterpret_cast Tregister Toperator Tnullptr Tnull Tnew Tnamespace Tmutable Tlong_Constr Tlong Tint_Constr Tint Tinline Tif Tgoto Tfriend Tfor Tfloat_Constr Tfloat Tfalse Textern Tenum Telse Tdynamic_cast Tdouble_Constr Tdouble Tdo Tdelete Tdefault Tdecltype Tcontinue Tconstexpr Tconst_cast Tconst Tclass Tchar_Constr Tchar Tcase Tbreak Tbool_Constr Tbool Tauto Tasm TUndef TTilde TString TPtVirg TPlus TOPar TOCro_Lambda TOBrace TMul TMinus TInt TInclude TInc TIfdefelse TIfdefelif TIfdefVersion TIfdefMisc TIfdefBool TIfdef TIdent_TypedefConstr TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_MacroString TIdent_MacroStmt TIdent_MacroIterator TIdent_MacroDecl TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TIdent TFloat TEndif TEllipsis TDefine TDec TCppDirectiveOther TCommentNewline_DefineEndOfMacro TColCol_BeforeTypedef TColCol TChar TCBrace TBang TAndLog TAnd LDots EOF ]
## Transitions:
-- On Tcatch shift to state 433
-- On nonempty_list(handler) shift to state 512
-- On handler shift to state 513
## Reductions:

State 433:
## Known stack suffix:
## Tcatch
## LR(1) items:
handler -> Tcatch . TOPar exception_decl TCPar compound [ Twhile Twchar_t_Constr Twchar_t Tvolatile Tvoid Tvirtual Tusing Tunsigned Tunion Ttypeof Ttypename Ttypeid Ttypedef Ttry Ttrue Tthrow Tthread_local Tthis Tswitch Tstruct Tstatic_cast Tstatic Tsizeof Tsigned Tshort_Constr Tshort Treturn Trestrict Treinterpret_cast Tregister Toperator Tnullptr Tnull Tnew Tnamespace Tmutable Tlong_Constr Tlong Tint_Constr Tint Tinline Tif Tgoto Tfriend Tfor Tfloat_Constr Tfloat Tfalse Textern Tenum Telse Tdynamic_cast Tdouble_Constr Tdouble Tdo Tdelete Tdefault Tdecltype Tcontinue Tconstexpr Tconst_cast Tconst Tclass Tchar_Constr Tchar Tcatch Tcase Tbreak Tbool_Constr Tbool Tauto Tasm TUndef TTilde TString TPtVirg TPlus TOPar TOCro_Lambda TOBrace TMul TMinus TInt TInclude TInc TIfdefelse TIfdefelif TIfdefVersion TIfdefMisc TIfdefBool TIfdef TIdent_TypedefConstr TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_MacroString TIdent_MacroStmt TIdent_MacroIterator TIdent_MacroDecl TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TIdent TFloat TEndif TEllipsis TDefine TDec TCppDirectiveOther TCommentNewline_DefineEndOfMacro TColCol_BeforeTypedef TColCol TChar TCBrace TBang TAndLog TAnd LDots EOF ]
## Transitions:
-- On TOPar shift to state 434
## Reductions:

State 434:
## Known stack suffix:
## Tcatch TOPar
## LR(1) items:
handler -> Tcatch TOPar . exception_decl TCPar compound [ Twhile Twchar_t_Constr Twchar_t Tvolatile Tvoid Tvirtual Tusing Tunsigned Tunion Ttypeof Ttypename Ttypeid Ttypedef Ttry Ttrue Tthrow Tthread_local Tthis Tswitch Tstruct Tstatic_cast Tstatic Tsizeof Tsigned Tshort_Constr Tshort Treturn Trestrict Treinterpret_cast Tregister Toperator Tnullptr Tnull Tnew Tnamespace Tmutable Tlong_Constr Tlong Tint_Constr Tint Tinline Tif Tgoto Tfriend Tfor Tfloat_Constr Tfloat Tfalse Textern Tenum Telse Tdynamic_cast Tdouble_Constr Tdouble Tdo Tdelete Tdefault Tdecltype Tcontinue Tconstexpr Tconst_cast Tconst Tclass Tchar_Constr Tchar Tcatch Tcase Tbreak Tbool_Constr Tbool Tauto Tasm TUndef TTilde TString TPtVirg TPlus TOPar TOCro_Lambda TOBrace TMul TMinus TInt TInclude TInc TIfdefelse TIfdefelif TIfdefVersion TIfdefMisc TIfdefBool TIfdef TIdent_TypedefConstr TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_MacroString TIdent_MacroStmt TIdent_MacroIterator TIdent_MacroDecl TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TIdent TFloat TEndif TEllipsis TDefine TDec TCppDirectiveOther TCommentNewline_DefineEndOfMacro TColCol_BeforeTypedef TColCol TChar TCBrace TBang TAndLog TAnd LDots EOF ]
## Transitions:
-- On Twchar_t shift to state 1
-- On Tvolatile shift to state 2
-- On Tvoid shift to state 3
-- On Tvirtual shift to state 4
-- On Tunsigned shift to state 15
-- On Tunion shift to state 16
-- On Ttypeof shift to state 17
-- On Ttypename shift to state 19
-- On Ttypedef shift to state 96
-- On Tthread_local shift to state 97
-- On Tstruct shift to state 27
-- On Tstatic shift to state 98
-- On Tsigned shift to state 30
-- On Tshort shift to state 32
-- On Trestrict shift to state 65
-- On Tregister shift to state 99
-- On Tmutable shift to state 100
-- On Tlong shift to state 38
-- On Tint shift to state 39
-- On Tinline shift to state 101
-- On Tfriend shift to state 102
-- On Tfloat shift to state 40
-- On Textern shift to state 103
-- On Tenum shift to state 66
-- On Tdouble shift to state 41
-- On Tdecltype shift to state 45
-- On Tconstexpr shift to state 104
-- On Tconst shift to state 76
-- On Tclass shift to state 77
-- On Tchar shift to state 58
-- On Tbool shift to state 60
-- On Tauto shift to state 105
-- On TIdent_Typedef shift to state 20
-- On TIdent_TemplatenameInQualifier_BeforeTypedef shift to state 21
-- On TIdent_Templatename shift to state 108
-- On TIdent_ClassnameInQualifier_BeforeTypedef shift to state 111
-- On TEllipsis shift to state 435
-- On TColCol_BeforeTypedef shift to state 118
-- On type_spec shift to state 314
-- On type_name shift to state 182
-- On type_cplusplus_id shift to state 183
-- On template_id shift to state 120
-- On storage_class_spec shift to state 316
-- On simple_type_specifier shift to state 206
-- On parameter_decl shift to state 436
-- On nested_name_specifier2 shift to state 207
-- On function_spec shift to state 437
-- On exception_decl shift to state 438
-- On enum_specifier shift to state 209
-- On enum_name_or_typedef_name_or_simple_class_name shift to state 123
-- On enum_head shift to state 210
-- On elaborated_type_specifier shift to state 274
-- On decltype_specifier shift to state 243
-- On decl_spec_seq shift to state 441
-- On decl_spec shift to state 473
-- On cv_qualif shift to state 475
-- On class_specifier shift to state 277
-- On class_or_namespace_name_for_qualifier2 shift to state 124
-- On class_key shift to state 278
-- On class_head shift to state 301
## Reductions:

State 435:
## Known stack suffix:
## TEllipsis
## LR(1) items:
exception_decl -> TEllipsis . [ TCPar ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production exception_decl -> TEllipsis

State 436:
## Known stack suffix:
## parameter_decl
## LR(1) items:
exception_decl -> parameter_decl . [ TCPar ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production exception_decl -> parameter_decl

State 437:
## Known stack suffix:
## function_spec
## LR(1) items:
decl_spec -> function_spec . [ Twchar_t Tvolatile Tvoid Tvirtual Tunsigned Tunion Ttypeof Ttypename Ttypedef Tthread_local Tstruct Tstatic Tsigned Tshort Trestrict Tregister Toperator Tmutable Tlong Tint Tinline Tfriend Tfloat Textern Tenum Tdouble Tdecltype Tconstexpr Tconst Tclass Tchar Tbool Tauto TSup_Template TPtVirg TOPar TOCro TMul TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TIdent TEq TComma TColCol_BeforeTypedef TColCol TCol TCPar TAndLog TAnd ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production decl_spec -> function_spec

State 438:
## Known stack suffix:
## Tcatch TOPar exception_decl
## LR(1) items:
handler -> Tcatch TOPar exception_decl . TCPar compound [ Twhile Twchar_t_Constr Twchar_t Tvolatile Tvoid Tvirtual Tusing Tunsigned Tunion Ttypeof Ttypename Ttypeid Ttypedef Ttry Ttrue Tthrow Tthread_local Tthis Tswitch Tstruct Tstatic_cast Tstatic Tsizeof Tsigned Tshort_Constr Tshort Treturn Trestrict Treinterpret_cast Tregister Toperator Tnullptr Tnull Tnew Tnamespace Tmutable Tlong_Constr Tlong Tint_Constr Tint Tinline Tif Tgoto Tfriend Tfor Tfloat_Constr Tfloat Tfalse Textern Tenum Telse Tdynamic_cast Tdouble_Constr Tdouble Tdo Tdelete Tdefault Tdecltype Tcontinue Tconstexpr Tconst_cast Tconst Tclass Tchar_Constr Tchar Tcatch Tcase Tbreak Tbool_Constr Tbool Tauto Tasm TUndef TTilde TString TPtVirg TPlus TOPar TOCro_Lambda TOBrace TMul TMinus TInt TInclude TInc TIfdefelse TIfdefelif TIfdefVersion TIfdefMisc TIfdefBool TIfdef TIdent_TypedefConstr TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_MacroString TIdent_MacroStmt TIdent_MacroIterator TIdent_MacroDecl TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TIdent TFloat TEndif TEllipsis TDefine TDec TCppDirectiveOther TCommentNewline_DefineEndOfMacro TColCol_BeforeTypedef TColCol TChar TCBrace TBang TAndLog TAnd LDots EOF ]
## Transitions:
-- On TCPar shift to state 439
## Reductions:

State 439:
## Known stack suffix:
## Tcatch TOPar exception_decl TCPar
## LR(1) items:
handler -> Tcatch TOPar exception_decl TCPar . compound [ Twhile Twchar_t_Constr Twchar_t Tvolatile Tvoid Tvirtual Tusing Tunsigned Tunion Ttypeof Ttypename Ttypeid Ttypedef Ttry Ttrue Tthrow Tthread_local Tthis Tswitch Tstruct Tstatic_cast Tstatic Tsizeof Tsigned Tshort_Constr Tshort Treturn Trestrict Treinterpret_cast Tregister Toperator Tnullptr Tnull Tnew Tnamespace Tmutable Tlong_Constr Tlong Tint_Constr Tint Tinline Tif Tgoto Tfriend Tfor Tfloat_Constr Tfloat Tfalse Textern Tenum Telse Tdynamic_cast Tdouble_Constr Tdouble Tdo Tdelete Tdefault Tdecltype Tcontinue Tconstexpr Tconst_cast Tconst Tclass Tchar_Constr Tchar Tcatch Tcase Tbreak Tbool_Constr Tbool Tauto Tasm TUndef TTilde TString TPtVirg TPlus TOPar TOCro_Lambda TOBrace TMul TMinus TInt TInclude TInc TIfdefelse TIfdefelif TIfdefVersion TIfdefMisc TIfdefBool TIfdef TIdent_TypedefConstr TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_MacroString TIdent_MacroStmt TIdent_MacroIterator TIdent_MacroDecl TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TIdent TFloat TEndif TEllipsis TDefine TDec TCppDirectiveOther TCommentNewline_DefineEndOfMacro TColCol_BeforeTypedef TColCol TChar TCBrace TBang TAndLog TAnd LDots EOF ]
## Transitions:
-- On TOBrace shift to state 93
-- On compound shift to state 440
## Reductions:

State 440:
## Known stack suffix:
## Tcatch TOPar exception_decl TCPar compound
## LR(1) items:
handler -> Tcatch TOPar exception_decl TCPar compound . [ Twhile Twchar_t_Constr Twchar_t Tvolatile Tvoid Tvirtual Tusing Tunsigned Tunion Ttypeof Ttypename Ttypeid Ttypedef Ttry Ttrue Tthrow Tthread_local Tthis Tswitch Tstruct Tstatic_cast Tstatic Tsizeof Tsigned Tshort_Constr Tshort Treturn Trestrict Treinterpret_cast Tregister Toperator Tnullptr Tnull Tnew Tnamespace Tmutable Tlong_Constr Tlong Tint_Constr Tint Tinline Tif Tgoto Tfriend Tfor Tfloat_Constr Tfloat Tfalse Textern Tenum Telse Tdynamic_cast Tdouble_Constr Tdouble Tdo Tdelete Tdefault Tdecltype Tcontinue Tconstexpr Tconst_cast Tconst Tclass Tchar_Constr Tchar Tcatch Tcase Tbreak Tbool_Constr Tbool Tauto Tasm TUndef TTilde TString TPtVirg TPlus TOPar TOCro_Lambda TOBrace TMul TMinus TInt TInclude TInc TIfdefelse TIfdefelif TIfdefVersion TIfdefMisc TIfdefBool TIfdef TIdent_TypedefConstr TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_MacroString TIdent_MacroStmt TIdent_MacroIterator TIdent_MacroDecl TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TIdent TFloat TEndif TEllipsis TDefine TDec TCppDirectiveOther TCommentNewline_DefineEndOfMacro TColCol_BeforeTypedef TColCol TChar TCBrace TBang TAndLog TAnd LDots EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production handler -> Tcatch TOPar exception_decl TCPar compound

State 441:
## Known stack suffix:
## decl_spec_seq
## LR(1) items:
parameter_decl -> decl_spec_seq . declarator [ TSup_Template TComma TCPar ]
parameter_decl -> decl_spec_seq . abstract_declarator [ TSup_Template TComma TCPar ]
parameter_decl -> decl_spec_seq . [ TSup_Template TComma TCPar ]
parameter_decl -> decl_spec_seq . declarator TEq assign_expr [ TSup_Template TComma TCPar ]
parameter_decl -> decl_spec_seq . abstract_declarator TEq assign_expr [ TSup_Template TComma TCPar ]
parameter_decl -> decl_spec_seq . TEq assign_expr [ TSup_Template TComma TCPar ]
## Transitions:
-- On TOPar shift to state 442
-- On TOCro shift to state 227
-- On TMul shift to state 443
-- On TEq shift to state 504
-- On TColCol shift to state 8
-- On TAndLog shift to state 444
-- On TAnd shift to state 445
-- On pointer shift to state 455
-- On option(TColCol) shift to state 456
-- On direct_d shift to state 498
-- On direct_abstract_declarator shift to state 499
-- On declarator_id shift to state 495
-- On declarator shift to state 506
-- On abstract_declarator shift to state 509
## Reductions:
-- On Toperator TIdent_TemplatenameInQualifier TIdent_ClassnameInQualifier TIdent
--   reduce production option(TColCol) ->
-- On TSup_Template TComma TCPar
--   reduce production parameter_decl -> decl_spec_seq

State 442:
## Known stack suffix:
## TOPar
## LR(1) items:
direct_abstract_declarator -> TOPar . abstract_declarator TCPar [ TSup_Template TOPar TOCro TEq TComma TCPar ]
direct_abstract_declarator -> TOPar . TCPar [ TSup_Template TOPar TOCro TEq TComma TCPar ]
direct_abstract_declarator -> TOPar . parameter_type_list TCPar [ TSup_Template TOPar TOCro TEq TComma TCPar ]
direct_d -> TOPar . declarator TCPar [ TSup_Template TOPar TOCro TEq TComma TCPar ]
## Transitions:
-- On Twchar_t shift to state 1
-- On Tvolatile shift to state 2
-- On Tvoid shift to state 3
-- On Tvirtual shift to state 4
-- On Tunsigned shift to state 15
-- On Tunion shift to state 16
-- On Ttypeof shift to state 17
-- On Ttypename shift to state 19
-- On Ttypedef shift to state 96
-- On Tthread_local shift to state 97
-- On Tstruct shift to state 27
-- On Tstatic shift to state 98
-- On Tsigned shift to state 30
-- On Tshort shift to state 32
-- On Trestrict shift to state 65
-- On Tregister shift to state 99
-- On Tmutable shift to state 100
-- On Tlong shift to state 38
-- On Tint shift to state 39
-- On Tinline shift to state 101
-- On Tfriend shift to state 102
-- On Tfloat shift to state 40
-- On Textern shift to state 103
-- On Tenum shift to state 66
-- On Tdouble shift to state 41
-- On Tdecltype shift to state 45
-- On Tconstexpr shift to state 104
-- On Tconst shift to state 76
-- On Tclass shift to state 77
-- On Tchar shift to state 58
-- On Tbool shift to state 60
-- On Tauto shift to state 105
-- On TOPar shift to state 442
-- On TOCro shift to state 227
-- On TMul shift to state 443
-- On TIdent_Typedef shift to state 20
-- On TIdent_TemplatenameInQualifier_BeforeTypedef shift to state 21
-- On TIdent_Templatename shift to state 108
-- On TIdent_ClassnameInQualifier_BeforeTypedef shift to state 111
-- On TIdent shift to state 453
-- On TColCol_BeforeTypedef shift to state 118
-- On TColCol shift to state 8
-- On TCPar shift to state 454
-- On TAndLog shift to state 444
-- On TAnd shift to state 445
-- On type_spec shift to state 314
-- On type_name shift to state 182
-- On type_cplusplus_id shift to state 183
-- On template_id shift to state 120
-- On storage_class_spec shift to state 316
-- On simple_type_specifier shift to state 206
-- On pointer shift to state 455
-- On parameter_type_list shift to state 496
-- On parameter_list shift to state 468
-- On parameter_decl2 shift to state 476
-- On parameter_decl shift to state 472
-- On option(TColCol) shift to state 456
-- On nested_name_specifier2 shift to state 207
-- On function_spec shift to state 437
-- On enum_specifier shift to state 209
-- On enum_name_or_typedef_name_or_simple_class_name shift to state 123
-- On enum_head shift to state 210
-- On elaborated_type_specifier shift to state 274
-- On direct_d shift to state 498
-- On direct_abstract_declarator shift to state 499
-- On decltype_specifier shift to state 243
-- On declarator_id shift to state 495
-- On declarator shift to state 500
-- On decl_spec_seq shift to state 441
-- On decl_spec shift to state 473
-- On cv_qualif shift to state 475
-- On class_specifier shift to state 277
-- On class_or_namespace_name_for_qualifier2 shift to state 124
-- On class_key shift to state 278
-- On class_head shift to state 301
-- On abstract_declarator shift to state 502
## Reductions:
-- On Toperator TIdent_TemplatenameInQualifier TIdent_ClassnameInQualifier
--   reduce production option(TColCol) ->

State 443:
## Known stack suffix:
## TMul
## LR(1) items:
pointer -> TMul . [ Toperator TSup_Template TOPar TOCro TIdent_TemplatenameInQualifier TIdent_ClassnameInQualifier TIdent TEq TComma TColCol TCPar_EOL TCPar ]
pointer -> TMul . cv_qualif_list [ Toperator TSup_Template TOPar TOCro TIdent_TemplatenameInQualifier TIdent_ClassnameInQualifier TIdent TEq TComma TColCol TCPar_EOL TCPar ]
pointer -> TMul . pointer [ Toperator TSup_Template TOPar TOCro TIdent_TemplatenameInQualifier TIdent_ClassnameInQualifier TIdent TEq TComma TColCol TCPar_EOL TCPar ]
pointer -> TMul . cv_qualif_list pointer [ Toperator TSup_Template TOPar TOCro TIdent_TemplatenameInQualifier TIdent_ClassnameInQualifier TIdent TEq TComma TColCol TCPar_EOL TCPar ]
## Transitions:
-- On Tvolatile shift to state 2
-- On Trestrict shift to state 65
-- On Tconst shift to state 76
-- On TMul shift to state 443
-- On TAndLog shift to state 444
-- On TAnd shift to state 445
-- On pointer shift to state 448
-- On cv_qualif_list shift to state 449
-- On cv_qualif shift to state 452
## Reductions:
-- On Toperator TSup_Template TOPar TOCro TIdent_TemplatenameInQualifier TIdent_ClassnameInQualifier TIdent TEq TComma TColCol TCPar_EOL TCPar
--   reduce production pointer -> TMul

State 444:
## Known stack suffix:
## TAndLog
## LR(1) items:
pointer -> TAndLog . [ Toperator TSup_Template TOPar TOCro TIdent_TemplatenameInQualifier TIdent_ClassnameInQualifier TIdent TEq TComma TColCol TCPar_EOL TCPar ]
pointer -> TAndLog . pointer [ Toperator TSup_Template TOPar TOCro TIdent_TemplatenameInQualifier TIdent_ClassnameInQualifier TIdent TEq TComma TColCol TCPar_EOL TCPar ]
## Transitions:
-- On TMul shift to state 443
-- On TAndLog shift to state 444
-- On TAnd shift to state 445
-- On pointer shift to state 447
## Reductions:
-- On Toperator TSup_Template TOPar TOCro TIdent_TemplatenameInQualifier TIdent_ClassnameInQualifier TIdent TEq TComma TColCol TCPar_EOL TCPar
--   reduce production pointer -> TAndLog

State 445:
## Known stack suffix:
## TAnd
## LR(1) items:
pointer -> TAnd . [ Toperator TSup_Template TOPar TOCro TIdent_TemplatenameInQualifier TIdent_ClassnameInQualifier TIdent TEq TComma TColCol TCPar_EOL TCPar ]
pointer -> TAnd . pointer [ Toperator TSup_Template TOPar TOCro TIdent_TemplatenameInQualifier TIdent_ClassnameInQualifier TIdent TEq TComma TColCol TCPar_EOL TCPar ]
## Transitions:
-- On TMul shift to state 443
-- On TAndLog shift to state 444
-- On TAnd shift to state 445
-- On pointer shift to state 446
## Reductions:
-- On Toperator TSup_Template TOPar TOCro TIdent_TemplatenameInQualifier TIdent_ClassnameInQualifier TIdent TEq TComma TColCol TCPar_EOL TCPar
--   reduce production pointer -> TAnd

State 446:
## Known stack suffix:
## TAnd pointer
## LR(1) items:
pointer -> TAnd pointer . [ Toperator TSup_Template TOPar TOCro TIdent_TemplatenameInQualifier TIdent_ClassnameInQualifier TIdent TEq TComma TColCol TCPar_EOL TCPar ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production pointer -> TAnd pointer

State 447:
## Known stack suffix:
## TAndLog pointer
## LR(1) items:
pointer -> TAndLog pointer . [ Toperator TSup_Template TOPar TOCro TIdent_TemplatenameInQualifier TIdent_ClassnameInQualifier TIdent TEq TComma TColCol TCPar_EOL TCPar ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production pointer -> TAndLog pointer

State 448:
## Known stack suffix:
## TMul pointer
## LR(1) items:
pointer -> TMul pointer . [ Toperator TSup_Template TOPar TOCro TIdent_TemplatenameInQualifier TIdent_ClassnameInQualifier TIdent TEq TComma TColCol TCPar_EOL TCPar ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production pointer -> TMul pointer

State 449:
## Known stack suffix:
## TMul cv_qualif_list
## LR(1) items:
cv_qualif_list -> cv_qualif_list . cv_qualif [ Tvolatile Trestrict Toperator Tconst TSup_Template TOPar TOCro TMul TIdent_TemplatenameInQualifier TIdent_ClassnameInQualifier TIdent TEq TComma TColCol TCPar_EOL TCPar TAndLog TAnd ]
pointer -> TMul cv_qualif_list . [ Toperator TSup_Template TOPar TOCro TIdent_TemplatenameInQualifier TIdent_ClassnameInQualifier TIdent TEq TComma TColCol TCPar_EOL TCPar ]
pointer -> TMul cv_qualif_list . pointer [ Toperator TSup_Template TOPar TOCro TIdent_TemplatenameInQualifier TIdent_ClassnameInQualifier TIdent TEq TComma TColCol TCPar_EOL TCPar ]
## Transitions:
-- On Tvolatile shift to state 2
-- On Trestrict shift to state 65
-- On Tconst shift to state 76
-- On TMul shift to state 443
-- On TAndLog shift to state 444
-- On TAnd shift to state 445
-- On pointer shift to state 450
-- On cv_qualif shift to state 451
## Reductions:
-- On Toperator TSup_Template TOPar TOCro TIdent_TemplatenameInQualifier TIdent_ClassnameInQualifier TIdent TEq TComma TColCol TCPar_EOL TCPar
--   reduce production pointer -> TMul cv_qualif_list

State 450:
## Known stack suffix:
## TMul cv_qualif_list pointer
## LR(1) items:
pointer -> TMul cv_qualif_list pointer . [ Toperator TSup_Template TOPar TOCro TIdent_TemplatenameInQualifier TIdent_ClassnameInQualifier TIdent TEq TComma TColCol TCPar_EOL TCPar ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production pointer -> TMul cv_qualif_list pointer

State 451:
## Known stack suffix:
## cv_qualif_list cv_qualif
## LR(1) items:
cv_qualif_list -> cv_qualif_list cv_qualif . [ Tvolatile Trestrict Toperator Tconst TSup_Template TOPar TOCro TMul TIdent_TemplatenameInQualifier TIdent_ClassnameInQualifier TIdent TEq TComma TColCol TCPar_EOL TCPar TAndLog TAnd ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production cv_qualif_list -> cv_qualif_list cv_qualif

State 452:
## Known stack suffix:
## cv_qualif
## LR(1) items:
cv_qualif_list -> cv_qualif . [ Tvolatile Trestrict Toperator Tconst TSup_Template TOPar TOCro TMul TIdent_TemplatenameInQualifier TIdent_ClassnameInQualifier TIdent TEq TComma TColCol TCPar_EOL TCPar TAndLog TAnd ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production cv_qualif_list -> cv_qualif

State 453:
## Known stack suffix:
## TIdent
## LR(1) items:
parameter_decl2 -> TIdent . [ TComma TCPar ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production parameter_decl2 -> TIdent

State 454:
## Known stack suffix:
## TOPar TCPar
## LR(1) items:
direct_abstract_declarator -> TOPar TCPar . [ TSup_Template TOPar TOCro TIdent TEq TComma TCPar_EOL TCPar ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production direct_abstract_declarator -> TOPar TCPar

State 455:
## Known stack suffix:
## pointer
## LR(1) items:
abstract_declarator -> pointer . [ TSup_Template TEq TComma TCPar ]
abstract_declarator -> pointer . direct_abstract_declarator [ TSup_Template TEq TComma TCPar ]
declarator -> pointer . direct_d [ TSup_Template TEq TComma TCPar ]
## Transitions:
-- On TOPar shift to state 442
-- On TOCro shift to state 227
-- On TColCol shift to state 8
-- On option(TColCol) shift to state 456
-- On direct_d shift to state 458
-- On direct_abstract_declarator shift to state 482
-- On declarator_id shift to state 495
## Reductions:
-- On TSup_Template TEq TComma TCPar
--   reduce production abstract_declarator -> pointer
-- On Toperator TIdent_TemplatenameInQualifier TIdent_ClassnameInQualifier TIdent
--   reduce production option(TColCol) ->

State 456:
## Known stack suffix:
## option(TColCol)
## LR(1) items:
declarator_id -> option(TColCol) . id_expression [ Tasm TSup_Template TPtVirg TOPar_CplusplusInit TOPar TOCro TOBrace TEq TComma TCol TCPar ]
## Transitions:
-- On Toperator shift to state 34
-- On TIdent_TemplatenameInQualifier shift to state 12
-- On TIdent_ClassnameInQualifier shift to state 112
-- On TIdent shift to state 166
-- On unqualified_id shift to state 179
-- On qualified_id shift to state 191
-- On operator_function_id shift to state 168
-- On nested_name_specifier shift to state 165
-- On id_expression shift to state 457
-- On conversion_function_id shift to state 169
-- On class_or_namespace_name_for_qualifier shift to state 170
## Reductions:

State 457:
## Known stack suffix:
## option(TColCol) id_expression
## LR(1) items:
declarator_id -> option(TColCol) id_expression . [ Tasm TSup_Template TPtVirg TOPar_CplusplusInit TOPar TOCro TOBrace TEq TComma TCol TCPar ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production declarator_id -> option(TColCol) id_expression

State 458:
## Known stack suffix:
## pointer direct_d
## LR(1) items:
declarator -> pointer direct_d . [ Tasm TSup_Template TPtVirg TOPar_CplusplusInit TOBrace TEq TComma TCol TCPar ]
direct_d -> direct_d . TOCro TCCro [ Tasm TSup_Template TPtVirg TOPar_CplusplusInit TOPar TOCro TOBrace TEq TComma TCol TCPar ]
direct_d -> direct_d . TOCro const_expr TCCro [ Tasm TSup_Template TPtVirg TOPar_CplusplusInit TOPar TOCro TOBrace TEq TComma TCol TCPar ]
direct_d -> direct_d . TOPar TCPar const_opt option(exn_spec) [ Tasm TSup_Template TPtVirg TOPar_CplusplusInit TOPar TOCro TOBrace TEq TComma TCol TCPar ]
direct_d -> direct_d . TOPar parameter_type_list TCPar const_opt option(exn_spec) [ Tasm TSup_Template TPtVirg TOPar_CplusplusInit TOPar TOCro TOBrace TEq TComma TCol TCPar ]
## Transitions:
-- On TOPar shift to state 459
-- On TOCro shift to state 477
## Reductions:
-- On Tasm TSup_Template TPtVirg TOPar_CplusplusInit TOBrace TEq TComma TCol TCPar
--   reduce production declarator -> pointer direct_d

State 459:
## Known stack suffix:
## direct_d TOPar
## LR(1) items:
direct_d -> direct_d TOPar . TCPar const_opt option(exn_spec) [ Tasm TSup_Template TPtVirg TOPar_CplusplusInit TOPar TOCro TOBrace TEq TComma TCol TCPar ]
direct_d -> direct_d TOPar . parameter_type_list TCPar const_opt option(exn_spec) [ Tasm TSup_Template TPtVirg TOPar_CplusplusInit TOPar TOCro TOBrace TEq TComma TCol TCPar ]
## Transitions:
-- On Twchar_t shift to state 1
-- On Tvolatile shift to state 2
-- On Tvoid shift to state 3
-- On Tvirtual shift to state 4
-- On Tunsigned shift to state 15
-- On Tunion shift to state 16
-- On Ttypeof shift to state 17
-- On Ttypename shift to state 19
-- On Ttypedef shift to state 96
-- On Tthread_local shift to state 97
-- On Tstruct shift to state 27
-- On Tstatic shift to state 98
-- On Tsigned shift to state 30
-- On Tshort shift to state 32
-- On Trestrict shift to state 65
-- On Tregister shift to state 99
-- On Tmutable shift to state 100
-- On Tlong shift to state 38
-- On Tint shift to state 39
-- On Tinline shift to state 101
-- On Tfriend shift to state 102
-- On Tfloat shift to state 40
-- On Textern shift to state 103
-- On Tenum shift to state 66
-- On Tdouble shift to state 41
-- On Tdecltype shift to state 45
-- On Tconstexpr shift to state 104
-- On Tconst shift to state 76
-- On Tclass shift to state 77
-- On Tchar shift to state 58
-- On Tbool shift to state 60
-- On Tauto shift to state 105
-- On TIdent_Typedef shift to state 20
-- On TIdent_TemplatenameInQualifier_BeforeTypedef shift to state 21
-- On TIdent_Templatename shift to state 108
-- On TIdent_ClassnameInQualifier_BeforeTypedef shift to state 111
-- On TIdent shift to state 453
-- On TColCol_BeforeTypedef shift to state 118
-- On TCPar shift to state 460
-- On type_spec shift to state 314
-- On type_name shift to state 182
-- On type_cplusplus_id shift to state 183
-- On template_id shift to state 120
-- On storage_class_spec shift to state 316
-- On simple_type_specifier shift to state 206
-- On parameter_type_list shift to state 464
-- On parameter_list shift to state 468
-- On parameter_decl2 shift to state 476
-- On parameter_decl shift to state 472
-- On nested_name_specifier2 shift to state 207
-- On function_spec shift to state 437
-- On enum_specifier shift to state 209
-- On enum_name_or_typedef_name_or_simple_class_name shift to state 123
-- On enum_head shift to state 210
-- On elaborated_type_specifier shift to state 274
-- On decltype_specifier shift to state 243
-- On decl_spec_seq shift to state 441
-- On decl_spec shift to state 473
-- On cv_qualif shift to state 475
-- On class_specifier shift to state 277
-- On class_or_namespace_name_for_qualifier2 shift to state 124
-- On class_key shift to state 278
-- On class_head shift to state 301
## Reductions:

State 460:
## Known stack suffix:
## direct_d TOPar TCPar
## LR(1) items:
direct_d -> direct_d TOPar TCPar . const_opt option(exn_spec) [ Tasm TSup_Template TPtVirg TOPar_CplusplusInit TOPar TOCro TOBrace TEq TComma TCol TCPar ]
## Transitions:
-- On Tconst shift to state 461
-- On const_opt shift to state 462
## Reductions:
-- On Tthrow Tasm TSup_Template TPtVirg TOPar_CplusplusInit TOPar TOCro TOBrace TEq TComma TCol TCPar
--   reduce production const_opt ->

State 461:
## Known stack suffix:
## Tconst
## LR(1) items:
const_opt -> Tconst . [ Tthrow Tasm TSup_Template TPtVirg TOPar_CplusplusInit TOPar TOCro TOBrace TIdent TEq TComma TCol TCPar_EOL TCPar ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production const_opt -> Tconst

State 462:
## Known stack suffix:
## direct_d TOPar TCPar const_opt
## LR(1) items:
direct_d -> direct_d TOPar TCPar const_opt . option(exn_spec) [ Tasm TSup_Template TPtVirg TOPar_CplusplusInit TOPar TOCro TOBrace TEq TComma TCol TCPar ]
## Transitions:
-- On Tthrow shift to state 401
-- On option(exn_spec) shift to state 463
-- On exn_spec shift to state 412
## Reductions:
-- On Tasm TSup_Template TPtVirg TOPar_CplusplusInit TOPar TOCro TOBrace TEq TComma TCol TCPar
--   reduce production option(exn_spec) ->

State 463:
## Known stack suffix:
## direct_d TOPar TCPar const_opt option(exn_spec)
## LR(1) items:
direct_d -> direct_d TOPar TCPar const_opt option(exn_spec) . [ Tasm TSup_Template TPtVirg TOPar_CplusplusInit TOPar TOCro TOBrace TEq TComma TCol TCPar ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production direct_d -> direct_d TOPar TCPar const_opt option(exn_spec)

State 464:
## Known stack suffix:
## direct_d TOPar parameter_type_list
## LR(1) items:
direct_d -> direct_d TOPar parameter_type_list . TCPar const_opt option(exn_spec) [ Tasm TSup_Template TPtVirg TOPar_CplusplusInit TOPar TOCro TOBrace TEq TComma TCol TCPar ]
## Transitions:
-- On TCPar shift to state 465
## Reductions:

State 465:
## Known stack suffix:
## direct_d TOPar parameter_type_list TCPar
## LR(1) items:
direct_d -> direct_d TOPar parameter_type_list TCPar . const_opt option(exn_spec) [ Tasm TSup_Template TPtVirg TOPar_CplusplusInit TOPar TOCro TOBrace TEq TComma TCol TCPar ]
## Transitions:
-- On Tconst shift to state 461
-- On const_opt shift to state 466
## Reductions:
-- On Tthrow Tasm TSup_Template TPtVirg TOPar_CplusplusInit TOPar TOCro TOBrace TEq TComma TCol TCPar
--   reduce production const_opt ->

State 466:
## Known stack suffix:
## direct_d TOPar parameter_type_list TCPar const_opt
## LR(1) items:
direct_d -> direct_d TOPar parameter_type_list TCPar const_opt . option(exn_spec) [ Tasm TSup_Template TPtVirg TOPar_CplusplusInit TOPar TOCro TOBrace TEq TComma TCol TCPar ]
## Transitions:
-- On Tthrow shift to state 401
-- On option(exn_spec) shift to state 467
-- On exn_spec shift to state 412
## Reductions:
-- On Tasm TSup_Template TPtVirg TOPar_CplusplusInit TOPar TOCro TOBrace TEq TComma TCol TCPar
--   reduce production option(exn_spec) ->

State 467:
## Known stack suffix:
## direct_d TOPar parameter_type_list TCPar const_opt option(exn_spec)
## LR(1) items:
direct_d -> direct_d TOPar parameter_type_list TCPar const_opt option(exn_spec) . [ Tasm TSup_Template TPtVirg TOPar_CplusplusInit TOPar TOCro TOBrace TEq TComma TCol TCPar ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production direct_d -> direct_d TOPar parameter_type_list TCPar const_opt option(exn_spec)

State 468:
## Known stack suffix:
## parameter_list
## LR(1) items:
parameter_list -> parameter_list . TComma parameter_decl2 [ TComma TCPar ]
parameter_type_list -> parameter_list . [ TCPar ]
parameter_type_list -> parameter_list . TComma TEllipsis [ TCPar ]
## Transitions:
-- On TComma shift to state 469
## Reductions:
-- On TCPar
--   reduce production parameter_type_list -> parameter_list

State 469:
## Known stack suffix:
## parameter_list TComma
## LR(1) items:
parameter_list -> parameter_list TComma . parameter_decl2 [ TComma TCPar ]
parameter_type_list -> parameter_list TComma . TEllipsis [ TCPar ]
## Transitions:
-- On Twchar_t shift to state 1
-- On Tvolatile shift to state 2
-- On Tvoid shift to state 3
-- On Tvirtual shift to state 4
-- On Tunsigned shift to state 15
-- On Tunion shift to state 16
-- On Ttypeof shift to state 17
-- On Ttypename shift to state 19
-- On Ttypedef shift to state 96
-- On Tthread_local shift to state 97
-- On Tstruct shift to state 27
-- On Tstatic shift to state 98
-- On Tsigned shift to state 30
-- On Tshort shift to state 32
-- On Trestrict shift to state 65
-- On Tregister shift to state 99
-- On Tmutable shift to state 100
-- On Tlong shift to state 38
-- On Tint shift to state 39
-- On Tinline shift to state 101
-- On Tfriend shift to state 102
-- On Tfloat shift to state 40
-- On Textern shift to state 103
-- On Tenum shift to state 66
-- On Tdouble shift to state 41
-- On Tdecltype shift to state 45
-- On Tconstexpr shift to state 104
-- On Tconst shift to state 76
-- On Tclass shift to state 77
-- On Tchar shift to state 58
-- On Tbool shift to state 60
-- On Tauto shift to state 105
-- On TIdent_Typedef shift to state 20
-- On TIdent_TemplatenameInQualifier_BeforeTypedef shift to state 21
-- On TIdent_Templatename shift to state 108
-- On TIdent_ClassnameInQualifier_BeforeTypedef shift to state 111
-- On TIdent shift to state 453
-- On TEllipsis shift to state 470
-- On TColCol_BeforeTypedef shift to state 118
-- On type_spec shift to state 314
-- On type_name shift to state 182
-- On type_cplusplus_id shift to state 183
-- On template_id shift to state 120
-- On storage_class_spec shift to state 316
-- On simple_type_specifier shift to state 206
-- On parameter_decl2 shift to state 471
-- On parameter_decl shift to state 472
-- On nested_name_specifier2 shift to state 207
-- On function_spec shift to state 437
-- On enum_specifier shift to state 209
-- On enum_name_or_typedef_name_or_simple_class_name shift to state 123
-- On enum_head shift to state 210
-- On elaborated_type_specifier shift to state 274
-- On decltype_specifier shift to state 243
-- On decl_spec_seq shift to state 441
-- On decl_spec shift to state 473
-- On cv_qualif shift to state 475
-- On class_specifier shift to state 277
-- On class_or_namespace_name_for_qualifier2 shift to state 124
-- On class_key shift to state 278
-- On class_head shift to state 301
## Reductions:

State 470:
## Known stack suffix:
## parameter_list TComma TEllipsis
## LR(1) items:
parameter_type_list -> parameter_list TComma TEllipsis . [ TCPar ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production parameter_type_list -> parameter_list TComma TEllipsis

State 471:
## Known stack suffix:
## parameter_list TComma parameter_decl2
## LR(1) items:
parameter_list -> parameter_list TComma parameter_decl2 . [ TComma TCPar ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production parameter_list -> parameter_list TComma parameter_decl2

State 472:
## Known stack suffix:
## parameter_decl
## LR(1) items:
parameter_decl2 -> parameter_decl . [ TComma TCPar ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production parameter_decl2 -> parameter_decl

State 473:
## Known stack suffix:
## decl_spec
## LR(1) items:
decl_spec_seq -> decl_spec . [ Toperator TSup_Template TPtVirg TOPar TOCro TMul TIdent_TemplatenameInQualifier TIdent_ClassnameInQualifier TIdent TEq TComma TColCol TCol TCPar TAndLog TAnd ]
decl_spec_seq -> decl_spec . decl_spec_seq [ Toperator TSup_Template TPtVirg TOPar TOCro TMul TIdent_TemplatenameInQualifier TIdent_ClassnameInQualifier TIdent TEq TComma TColCol TCol TCPar TAndLog TAnd ]
## Transitions:
-- On Twchar_t shift to state 1
-- On Tvolatile shift to state 2
-- On Tvoid shift to state 3
-- On Tvirtual shift to state 4
-- On Tunsigned shift to state 15
-- On Tunion shift to state 16
-- On Ttypeof shift to state 17
-- On Ttypename shift to state 19
-- On Ttypedef shift to state 96
-- On Tthread_local shift to state 97
-- On Tstruct shift to state 27
-- On Tstatic shift to state 98
-- On Tsigned shift to state 30
-- On Tshort shift to state 32
-- On Trestrict shift to state 65
-- On Tregister shift to state 99
-- On Tmutable shift to state 100
-- On Tlong shift to state 38
-- On Tint shift to state 39
-- On Tinline shift to state 101
-- On Tfriend shift to state 102
-- On Tfloat shift to state 40
-- On Textern shift to state 103
-- On Tenum shift to state 66
-- On Tdouble shift to state 41
-- On Tdecltype shift to state 45
-- On Tconstexpr shift to state 104
-- On Tconst shift to state 76
-- On Tclass shift to state 77
-- On Tchar shift to state 58
-- On Tbool shift to state 60
-- On Tauto shift to state 105
-- On TIdent_Typedef shift to state 20
-- On TIdent_TemplatenameInQualifier_BeforeTypedef shift to state 21
-- On TIdent_Templatename shift to state 108
-- On TIdent_ClassnameInQualifier_BeforeTypedef shift to state 111
-- On TColCol_BeforeTypedef shift to state 118
-- On type_spec shift to state 314
-- On type_name shift to state 182
-- On type_cplusplus_id shift to state 183
-- On template_id shift to state 120
-- On storage_class_spec shift to state 316
-- On simple_type_specifier shift to state 206
-- On nested_name_specifier2 shift to state 207
-- On function_spec shift to state 437
-- On enum_specifier shift to state 209
-- On enum_name_or_typedef_name_or_simple_class_name shift to state 123
-- On enum_head shift to state 210
-- On elaborated_type_specifier shift to state 274
-- On decltype_specifier shift to state 243
-- On decl_spec_seq shift to state 474
-- On decl_spec shift to state 473
-- On cv_qualif shift to state 475
-- On class_specifier shift to state 277
-- On class_or_namespace_name_for_qualifier2 shift to state 124
-- On class_key shift to state 278
-- On class_head shift to state 301
## Reductions:
-- On Toperator TSup_Template TPtVirg TOPar TOCro TMul TIdent_TemplatenameInQualifier TIdent_ClassnameInQualifier TIdent TEq TComma TColCol TCol TCPar TAndLog TAnd
--   reduce production decl_spec_seq -> decl_spec

State 474:
## Known stack suffix:
## decl_spec decl_spec_seq
## LR(1) items:
decl_spec_seq -> decl_spec decl_spec_seq . [ Toperator TSup_Template TPtVirg TOPar TOCro TMul TIdent_TemplatenameInQualifier TIdent_ClassnameInQualifier TIdent TEq TComma TColCol TCol TCPar TAndLog TAnd ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production decl_spec_seq -> decl_spec decl_spec_seq

State 475:
## Known stack suffix:
## cv_qualif
## LR(1) items:
decl_spec -> cv_qualif . [ Twchar_t Tvolatile Tvoid Tvirtual Tunsigned Tunion Ttypeof Ttypename Ttypedef Tthread_local Tstruct Tstatic Tsigned Tshort Trestrict Tregister Toperator Tmutable Tlong Tint Tinline Tfriend Tfloat Textern Tenum Tdouble Tdecltype Tconstexpr Tconst Tclass Tchar Tbool Tauto TSup_Template TPtVirg TOPar TOCro TMul TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TIdent TEq TComma TColCol_BeforeTypedef TColCol TCol TCPar TAndLog TAnd ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production decl_spec -> cv_qualif

State 476:
## Known stack suffix:
## parameter_decl2
## LR(1) items:
parameter_list -> parameter_decl2 . [ TComma TCPar ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production parameter_list -> parameter_decl2

State 477:
## Known stack suffix:
## direct_d TOCro
## LR(1) items:
direct_d -> direct_d TOCro . TCCro [ Tasm TSup_Template TPtVirg TOPar_CplusplusInit TOPar TOCro TOBrace TEq TComma TCol TCPar ]
direct_d -> direct_d TOCro . const_expr TCCro [ Tasm TSup_Template TPtVirg TOPar_CplusplusInit TOPar TOCro TOBrace TEq TComma TCol TCPar ]
## Transitions:
-- On Twchar_t_Constr shift to state 14
-- On Twchar_t shift to state 1
-- On Tvoid shift to state 3
-- On Tunsigned shift to state 15
-- On Ttypeof shift to state 17
-- On Ttypeid shift to state 23
-- On Ttrue shift to state 25
-- On Tthis shift to state 26
-- On Tstatic_cast shift to state 28
-- On Tsizeof shift to state 29
-- On Tsigned shift to state 30
-- On Tshort_Constr shift to state 31
-- On Tshort shift to state 32
-- On Treinterpret_cast shift to state 33
-- On Toperator shift to state 34
-- On Tnullptr shift to state 48
-- On Tnull shift to state 49
-- On Tlong_Constr shift to state 50
-- On Tlong shift to state 38
-- On Tint_Constr shift to state 51
-- On Tint shift to state 39
-- On Tfloat_Constr shift to state 52
-- On Tfloat shift to state 40
-- On Tfalse shift to state 53
-- On Tdynamic_cast shift to state 54
-- On Tdouble_Constr shift to state 55
-- On Tdouble shift to state 41
-- On Tdecltype shift to state 45
-- On Tconst_cast shift to state 56
-- On Tchar_Constr shift to state 57
-- On Tchar shift to state 58
-- On Tbool_Constr shift to state 59
-- On Tbool shift to state 60
-- On TTilde shift to state 61
-- On TString shift to state 62
-- On TPlus shift to state 63
-- On TOPar shift to state 64
-- On TOCro_Lambda shift to state 78
-- On TMul shift to state 88
-- On TMinus shift to state 89
-- On TInt shift to state 90
-- On TInc shift to state 91
-- On TIdent_TypedefConstr shift to state 106
-- On TIdent_Typedef shift to state 20
-- On TIdent_TemplatenameInQualifier_BeforeTypedef shift to state 21
-- On TIdent_TemplatenameInQualifier shift to state 12
-- On TIdent_Templatename shift to state 108
-- On TIdent_MacroString shift to state 110
-- On TIdent_ClassnameInQualifier_BeforeTypedef shift to state 111
-- On TIdent_ClassnameInQualifier shift to state 112
-- On TIdent shift to state 113
-- On TFloat shift to state 116
-- On TDec shift to state 117
-- On TColCol_BeforeTypedef shift to state 118
-- On TColCol shift to state 128
-- On TChar shift to state 174
-- On TCCro shift to state 478
-- On TBang shift to state 175
-- On TAndLog shift to state 176
-- On TAnd shift to state 177
-- On LDots shift to state 178
-- On unqualified_id shift to state 179
-- On unary_op shift to state 180
-- On unary_expr shift to state 181
-- On type_name shift to state 182
-- On type_cplusplus_id shift to state 183
-- On template_id shift to state 120
-- On string_elem shift to state 184
-- On simple_type_specifier shift to state 189
-- On shift_expr shift to state 217
-- On relational_expr shift to state 229
-- On qualified_id shift to state 191
-- On primary_expr shift to state 192
-- On primary_cplusplus_id shift to state 193
-- On postfix_expr shift to state 194
-- On pm_expr shift to state 219
-- On option(TColCol) shift to state 221
-- On operator_function_id shift to state 168
-- On new_expr shift to state 233
-- On nested_name_specifier2 shift to state 207
-- On nested_name_specifier shift to state 165
-- On multiplicative_expr shift to state 234
-- On logical_or_expr shift to state 246
-- On logical_and_expr shift to state 250
-- On literal shift to state 238
-- On lambda_introducer shift to state 239
-- On inclusive_or_expr shift to state 272
-- On id_expression shift to state 241
-- On exclusive_or_expr shift to state 273
-- On equality_expr shift to state 256
-- On enum_name_or_typedef_name_or_simple_class_name shift to state 123
-- On delete_expr shift to state 242
-- On decltype_specifier shift to state 243
-- On cpp_cast_operator shift to state 244
-- On conversion_function_id shift to state 169
-- On const_expr shift to state 479
-- On cond_expr shift to state 481
-- On class_or_namespace_name_for_qualifier2 shift to state 124
-- On class_or_namespace_name_for_qualifier shift to state 170
-- On cast_operator_expr shift to state 261
-- On cast_expr shift to state 262
-- On cast_constructor_expr shift to state 263
-- On basic_type_2 shift to state 264
-- On and_expr shift to state 334
-- On additive_expr shift to state 341
## Reductions:
-- On Tnew Tdelete
--   reduce production option(TColCol) ->

State 478:
## Known stack suffix:
## direct_d TOCro TCCro
## LR(1) items:
direct_d -> direct_d TOCro TCCro . [ Tasm TSup_Template TPtVirg TOPar_CplusplusInit TOPar TOCro TOBrace TEq TComma TCol TCPar ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production direct_d -> direct_d TOCro TCCro

State 479:
## Known stack suffix:
## direct_d TOCro const_expr
## LR(1) items:
direct_d -> direct_d TOCro const_expr . TCCro [ Tasm TSup_Template TPtVirg TOPar_CplusplusInit TOPar TOCro TOBrace TEq TComma TCol TCPar ]
## Transitions:
-- On TCCro shift to state 480
## Reductions:

State 480:
## Known stack suffix:
## direct_d TOCro const_expr TCCro
## LR(1) items:
direct_d -> direct_d TOCro const_expr TCCro . [ Tasm TSup_Template TPtVirg TOPar_CplusplusInit TOPar TOCro TOBrace TEq TComma TCol TCPar ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production direct_d -> direct_d TOCro const_expr TCCro

State 481:
## Known stack suffix:
## cond_expr
## LR(1) items:
const_expr -> cond_expr . [ TPtVirg TEllipsis TComma TCol TCCro TCBrace ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production const_expr -> cond_expr

State 482:
## Known stack suffix:
## pointer direct_abstract_declarator
## LR(1) items:
abstract_declarator -> pointer direct_abstract_declarator . [ TSup_Template TIdent TEq TComma TCPar_EOL TCPar ]
direct_abstract_declarator -> direct_abstract_declarator . TOCro TCCro [ TSup_Template TOPar TOCro TIdent TEq TComma TCPar_EOL TCPar ]
direct_abstract_declarator -> direct_abstract_declarator . TOCro const_expr TCCro [ TSup_Template TOPar TOCro TIdent TEq TComma TCPar_EOL TCPar ]
direct_abstract_declarator -> direct_abstract_declarator . TOPar TCPar const_opt option(exn_spec) [ TSup_Template TOPar TOCro TIdent TEq TComma TCPar_EOL TCPar ]
direct_abstract_declarator -> direct_abstract_declarator . TOPar parameter_type_list TCPar const_opt option(exn_spec) [ TSup_Template TOPar TOCro TIdent TEq TComma TCPar_EOL TCPar ]
## Transitions:
-- On TOPar shift to state 483
-- On TOCro shift to state 491
## Reductions:
-- On TSup_Template TIdent TEq TComma TCPar_EOL TCPar
--   reduce production abstract_declarator -> pointer direct_abstract_declarator

State 483:
## Known stack suffix:
## direct_abstract_declarator TOPar
## LR(1) items:
direct_abstract_declarator -> direct_abstract_declarator TOPar . TCPar const_opt option(exn_spec) [ TSup_Template TOPar TOCro TIdent TEq TComma TCPar_EOL TCPar ]
direct_abstract_declarator -> direct_abstract_declarator TOPar . parameter_type_list TCPar const_opt option(exn_spec) [ TSup_Template TOPar TOCro TIdent TEq TComma TCPar_EOL TCPar ]
## Transitions:
-- On Twchar_t shift to state 1
-- On Tvolatile shift to state 2
-- On Tvoid shift to state 3
-- On Tvirtual shift to state 4
-- On Tunsigned shift to state 15
-- On Tunion shift to state 16
-- On Ttypeof shift to state 17
-- On Ttypename shift to state 19
-- On Ttypedef shift to state 96
-- On Tthread_local shift to state 97
-- On Tstruct shift to state 27
-- On Tstatic shift to state 98
-- On Tsigned shift to state 30
-- On Tshort shift to state 32
-- On Trestrict shift to state 65
-- On Tregister shift to state 99
-- On Tmutable shift to state 100
-- On Tlong shift to state 38
-- On Tint shift to state 39
-- On Tinline shift to state 101
-- On Tfriend shift to state 102
-- On Tfloat shift to state 40
-- On Textern shift to state 103
-- On Tenum shift to state 66
-- On Tdouble shift to state 41
-- On Tdecltype shift to state 45
-- On Tconstexpr shift to state 104
-- On Tconst shift to state 76
-- On Tclass shift to state 77
-- On Tchar shift to state 58
-- On Tbool shift to state 60
-- On Tauto shift to state 105
-- On TIdent_Typedef shift to state 20
-- On TIdent_TemplatenameInQualifier_BeforeTypedef shift to state 21
-- On TIdent_Templatename shift to state 108
-- On TIdent_ClassnameInQualifier_BeforeTypedef shift to state 111
-- On TIdent shift to state 453
-- On TColCol_BeforeTypedef shift to state 118
-- On TCPar shift to state 484
-- On type_spec shift to state 314
-- On type_name shift to state 182
-- On type_cplusplus_id shift to state 183
-- On template_id shift to state 120
-- On storage_class_spec shift to state 316
-- On simple_type_specifier shift to state 206
-- On parameter_type_list shift to state 487
-- On parameter_list shift to state 468
-- On parameter_decl2 shift to state 476
-- On parameter_decl shift to state 472
-- On nested_name_specifier2 shift to state 207
-- On function_spec shift to state 437
-- On enum_specifier shift to state 209
-- On enum_name_or_typedef_name_or_simple_class_name shift to state 123
-- On enum_head shift to state 210
-- On elaborated_type_specifier shift to state 274
-- On decltype_specifier shift to state 243
-- On decl_spec_seq shift to state 441
-- On decl_spec shift to state 473
-- On cv_qualif shift to state 475
-- On class_specifier shift to state 277
-- On class_or_namespace_name_for_qualifier2 shift to state 124
-- On class_key shift to state 278
-- On class_head shift to state 301
## Reductions:

State 484:
## Known stack suffix:
## direct_abstract_declarator TOPar TCPar
## LR(1) items:
direct_abstract_declarator -> direct_abstract_declarator TOPar TCPar . const_opt option(exn_spec) [ TSup_Template TOPar TOCro TIdent TEq TComma TCPar_EOL TCPar ]
## Transitions:
-- On Tconst shift to state 461
-- On const_opt shift to state 485
## Reductions:
-- On Tthrow TSup_Template TOPar TOCro TIdent TEq TComma TCPar_EOL TCPar
--   reduce production const_opt ->

State 485:
## Known stack suffix:
## direct_abstract_declarator TOPar TCPar const_opt
## LR(1) items:
direct_abstract_declarator -> direct_abstract_declarator TOPar TCPar const_opt . option(exn_spec) [ TSup_Template TOPar TOCro TIdent TEq TComma TCPar_EOL TCPar ]
## Transitions:
-- On Tthrow shift to state 401
-- On option(exn_spec) shift to state 486
-- On exn_spec shift to state 412
## Reductions:
-- On TSup_Template TOPar TOCro TIdent TEq TComma TCPar_EOL TCPar
--   reduce production option(exn_spec) ->

State 486:
## Known stack suffix:
## direct_abstract_declarator TOPar TCPar const_opt option(exn_spec)
## LR(1) items:
direct_abstract_declarator -> direct_abstract_declarator TOPar TCPar const_opt option(exn_spec) . [ TSup_Template TOPar TOCro TIdent TEq TComma TCPar_EOL TCPar ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production direct_abstract_declarator -> direct_abstract_declarator TOPar TCPar const_opt option(exn_spec)

State 487:
## Known stack suffix:
## direct_abstract_declarator TOPar parameter_type_list
## LR(1) items:
direct_abstract_declarator -> direct_abstract_declarator TOPar parameter_type_list . TCPar const_opt option(exn_spec) [ TSup_Template TOPar TOCro TIdent TEq TComma TCPar_EOL TCPar ]
## Transitions:
-- On TCPar shift to state 488
## Reductions:

State 488:
## Known stack suffix:
## direct_abstract_declarator TOPar parameter_type_list TCPar
## LR(1) items:
direct_abstract_declarator -> direct_abstract_declarator TOPar parameter_type_list TCPar . const_opt option(exn_spec) [ TSup_Template TOPar TOCro TIdent TEq TComma TCPar_EOL TCPar ]
## Transitions:
-- On Tconst shift to state 461
-- On const_opt shift to state 489
## Reductions:
-- On Tthrow TSup_Template TOPar TOCro TIdent TEq TComma TCPar_EOL TCPar
--   reduce production const_opt ->

State 489:
## Known stack suffix:
## direct_abstract_declarator TOPar parameter_type_list TCPar const_opt
## LR(1) items:
direct_abstract_declarator -> direct_abstract_declarator TOPar parameter_type_list TCPar const_opt . option(exn_spec) [ TSup_Template TOPar TOCro TIdent TEq TComma TCPar_EOL TCPar ]
## Transitions:
-- On Tthrow shift to state 401
-- On option(exn_spec) shift to state 490
-- On exn_spec shift to state 412
## Reductions:
-- On TSup_Template TOPar TOCro TIdent TEq TComma TCPar_EOL TCPar
--   reduce production option(exn_spec) ->

State 490:
## Known stack suffix:
## direct_abstract_declarator TOPar parameter_type_list TCPar const_opt option(exn_spec)
## LR(1) items:
direct_abstract_declarator -> direct_abstract_declarator TOPar parameter_type_list TCPar const_opt option(exn_spec) . [ TSup_Template TOPar TOCro TIdent TEq TComma TCPar_EOL TCPar ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production direct_abstract_declarator -> direct_abstract_declarator TOPar parameter_type_list TCPar const_opt option(exn_spec)

State 491:
## Known stack suffix:
## direct_abstract_declarator TOCro
## LR(1) items:
direct_abstract_declarator -> direct_abstract_declarator TOCro . TCCro [ TSup_Template TOPar TOCro TIdent TEq TComma TCPar_EOL TCPar ]
direct_abstract_declarator -> direct_abstract_declarator TOCro . const_expr TCCro [ TSup_Template TOPar TOCro TIdent TEq TComma TCPar_EOL TCPar ]
## Transitions:
-- On Twchar_t_Constr shift to state 14
-- On Twchar_t shift to state 1
-- On Tvoid shift to state 3
-- On Tunsigned shift to state 15
-- On Ttypeof shift to state 17
-- On Ttypeid shift to state 23
-- On Ttrue shift to state 25
-- On Tthis shift to state 26
-- On Tstatic_cast shift to state 28
-- On Tsizeof shift to state 29
-- On Tsigned shift to state 30
-- On Tshort_Constr shift to state 31
-- On Tshort shift to state 32
-- On Treinterpret_cast shift to state 33
-- On Toperator shift to state 34
-- On Tnullptr shift to state 48
-- On Tnull shift to state 49
-- On Tlong_Constr shift to state 50
-- On Tlong shift to state 38
-- On Tint_Constr shift to state 51
-- On Tint shift to state 39
-- On Tfloat_Constr shift to state 52
-- On Tfloat shift to state 40
-- On Tfalse shift to state 53
-- On Tdynamic_cast shift to state 54
-- On Tdouble_Constr shift to state 55
-- On Tdouble shift to state 41
-- On Tdecltype shift to state 45
-- On Tconst_cast shift to state 56
-- On Tchar_Constr shift to state 57
-- On Tchar shift to state 58
-- On Tbool_Constr shift to state 59
-- On Tbool shift to state 60
-- On TTilde shift to state 61
-- On TString shift to state 62
-- On TPlus shift to state 63
-- On TOPar shift to state 64
-- On TOCro_Lambda shift to state 78
-- On TMul shift to state 88
-- On TMinus shift to state 89
-- On TInt shift to state 90
-- On TInc shift to state 91
-- On TIdent_TypedefConstr shift to state 106
-- On TIdent_Typedef shift to state 20
-- On TIdent_TemplatenameInQualifier_BeforeTypedef shift to state 21
-- On TIdent_TemplatenameInQualifier shift to state 12
-- On TIdent_Templatename shift to state 108
-- On TIdent_MacroString shift to state 110
-- On TIdent_ClassnameInQualifier_BeforeTypedef shift to state 111
-- On TIdent_ClassnameInQualifier shift to state 112
-- On TIdent shift to state 113
-- On TFloat shift to state 116
-- On TDec shift to state 117
-- On TColCol_BeforeTypedef shift to state 118
-- On TColCol shift to state 128
-- On TChar shift to state 174
-- On TCCro shift to state 492
-- On TBang shift to state 175
-- On TAndLog shift to state 176
-- On TAnd shift to state 177
-- On LDots shift to state 178
-- On unqualified_id shift to state 179
-- On unary_op shift to state 180
-- On unary_expr shift to state 181
-- On type_name shift to state 182
-- On type_cplusplus_id shift to state 183
-- On template_id shift to state 120
-- On string_elem shift to state 184
-- On simple_type_specifier shift to state 189
-- On shift_expr shift to state 217
-- On relational_expr shift to state 229
-- On qualified_id shift to state 191
-- On primary_expr shift to state 192
-- On primary_cplusplus_id shift to state 193
-- On postfix_expr shift to state 194
-- On pm_expr shift to state 219
-- On option(TColCol) shift to state 221
-- On operator_function_id shift to state 168
-- On new_expr shift to state 233
-- On nested_name_specifier2 shift to state 207
-- On nested_name_specifier shift to state 165
-- On multiplicative_expr shift to state 234
-- On logical_or_expr shift to state 246
-- On logical_and_expr shift to state 250
-- On literal shift to state 238
-- On lambda_introducer shift to state 239
-- On inclusive_or_expr shift to state 272
-- On id_expression shift to state 241
-- On exclusive_or_expr shift to state 273
-- On equality_expr shift to state 256
-- On enum_name_or_typedef_name_or_simple_class_name shift to state 123
-- On delete_expr shift to state 242
-- On decltype_specifier shift to state 243
-- On cpp_cast_operator shift to state 244
-- On conversion_function_id shift to state 169
-- On const_expr shift to state 493
-- On cond_expr shift to state 481
-- On class_or_namespace_name_for_qualifier2 shift to state 124
-- On class_or_namespace_name_for_qualifier shift to state 170
-- On cast_operator_expr shift to state 261
-- On cast_expr shift to state 262
-- On cast_constructor_expr shift to state 263
-- On basic_type_2 shift to state 264
-- On and_expr shift to state 334
-- On additive_expr shift to state 341
## Reductions:
-- On Tnew Tdelete
--   reduce production option(TColCol) ->

State 492:
## Known stack suffix:
## direct_abstract_declarator TOCro TCCro
## LR(1) items:
direct_abstract_declarator -> direct_abstract_declarator TOCro TCCro . [ TSup_Template TOPar TOCro TIdent TEq TComma TCPar_EOL TCPar ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production direct_abstract_declarator -> direct_abstract_declarator TOCro TCCro

State 493:
## Known stack suffix:
## direct_abstract_declarator TOCro const_expr
## LR(1) items:
direct_abstract_declarator -> direct_abstract_declarator TOCro const_expr . TCCro [ TSup_Template TOPar TOCro TIdent TEq TComma TCPar_EOL TCPar ]
## Transitions:
-- On TCCro shift to state 494
## Reductions:

State 494:
## Known stack suffix:
## direct_abstract_declarator TOCro const_expr TCCro
## LR(1) items:
direct_abstract_declarator -> direct_abstract_declarator TOCro const_expr TCCro . [ TSup_Template TOPar TOCro TIdent TEq TComma TCPar_EOL TCPar ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production direct_abstract_declarator -> direct_abstract_declarator TOCro const_expr TCCro

State 495:
## Known stack suffix:
## declarator_id
## LR(1) items:
direct_d -> declarator_id . [ Tasm TSup_Template TPtVirg TOPar_CplusplusInit TOPar TOCro TOBrace TEq TComma TCol TCPar ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production direct_d -> declarator_id

State 496:
## Known stack suffix:
## TOPar parameter_type_list
## LR(1) items:
direct_abstract_declarator -> TOPar parameter_type_list . TCPar [ TSup_Template TOPar TOCro TIdent TEq TComma TCPar_EOL TCPar ]
## Transitions:
-- On TCPar shift to state 497
## Reductions:

State 497:
## Known stack suffix:
## TOPar parameter_type_list TCPar
## LR(1) items:
direct_abstract_declarator -> TOPar parameter_type_list TCPar . [ TSup_Template TOPar TOCro TIdent TEq TComma TCPar_EOL TCPar ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production direct_abstract_declarator -> TOPar parameter_type_list TCPar

State 498:
## Known stack suffix:
## direct_d
## LR(1) items:
declarator -> direct_d . [ Tasm TSup_Template TPtVirg TOPar_CplusplusInit TOBrace TEq TComma TCol TCPar ]
direct_d -> direct_d . TOCro TCCro [ Tasm TSup_Template TPtVirg TOPar_CplusplusInit TOPar TOCro TOBrace TEq TComma TCol TCPar ]
direct_d -> direct_d . TOCro const_expr TCCro [ Tasm TSup_Template TPtVirg TOPar_CplusplusInit TOPar TOCro TOBrace TEq TComma TCol TCPar ]
direct_d -> direct_d . TOPar TCPar const_opt option(exn_spec) [ Tasm TSup_Template TPtVirg TOPar_CplusplusInit TOPar TOCro TOBrace TEq TComma TCol TCPar ]
direct_d -> direct_d . TOPar parameter_type_list TCPar const_opt option(exn_spec) [ Tasm TSup_Template TPtVirg TOPar_CplusplusInit TOPar TOCro TOBrace TEq TComma TCol TCPar ]
## Transitions:
-- On TOPar shift to state 459
-- On TOCro shift to state 477
## Reductions:
-- On Tasm TSup_Template TPtVirg TOPar_CplusplusInit TOBrace TEq TComma TCol TCPar
--   reduce production declarator -> direct_d

State 499:
## Known stack suffix:
## direct_abstract_declarator
## LR(1) items:
abstract_declarator -> direct_abstract_declarator . [ TSup_Template TIdent TEq TComma TCPar_EOL TCPar ]
direct_abstract_declarator -> direct_abstract_declarator . TOCro TCCro [ TSup_Template TOPar TOCro TIdent TEq TComma TCPar_EOL TCPar ]
direct_abstract_declarator -> direct_abstract_declarator . TOCro const_expr TCCro [ TSup_Template TOPar TOCro TIdent TEq TComma TCPar_EOL TCPar ]
direct_abstract_declarator -> direct_abstract_declarator . TOPar TCPar const_opt option(exn_spec) [ TSup_Template TOPar TOCro TIdent TEq TComma TCPar_EOL TCPar ]
direct_abstract_declarator -> direct_abstract_declarator . TOPar parameter_type_list TCPar const_opt option(exn_spec) [ TSup_Template TOPar TOCro TIdent TEq TComma TCPar_EOL TCPar ]
## Transitions:
-- On TOPar shift to state 483
-- On TOCro shift to state 491
## Reductions:
-- On TSup_Template TIdent TEq TComma TCPar_EOL TCPar
--   reduce production abstract_declarator -> direct_abstract_declarator

State 500:
## Known stack suffix:
## TOPar declarator
## LR(1) items:
direct_d -> TOPar declarator . TCPar [ Tasm TSup_Template TPtVirg TOPar_CplusplusInit TOPar TOCro TOBrace TEq TComma TCol TCPar ]
## Transitions:
-- On TCPar shift to state 501
## Reductions:

State 501:
## Known stack suffix:
## TOPar declarator TCPar
## LR(1) items:
direct_d -> TOPar declarator TCPar . [ Tasm TSup_Template TPtVirg TOPar_CplusplusInit TOPar TOCro TOBrace TEq TComma TCol TCPar ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production direct_d -> TOPar declarator TCPar

State 502:
## Known stack suffix:
## TOPar abstract_declarator
## LR(1) items:
direct_abstract_declarator -> TOPar abstract_declarator . TCPar [ TSup_Template TOPar TOCro TIdent TEq TComma TCPar_EOL TCPar ]
## Transitions:
-- On TCPar shift to state 503
## Reductions:

State 503:
## Known stack suffix:
## TOPar abstract_declarator TCPar
## LR(1) items:
direct_abstract_declarator -> TOPar abstract_declarator TCPar . [ TSup_Template TOPar TOCro TIdent TEq TComma TCPar_EOL TCPar ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production direct_abstract_declarator -> TOPar abstract_declarator TCPar

State 504:
## Known stack suffix:
## decl_spec_seq TEq
## LR(1) items:
parameter_decl -> decl_spec_seq TEq . assign_expr [ TSup_Template TComma TCPar ]
## Transitions:
-- On Twchar_t_Constr shift to state 14
-- On Twchar_t shift to state 1
-- On Tvoid shift to state 3
-- On Tunsigned shift to state 15
-- On Ttypeof shift to state 17
-- On Ttypeid shift to state 23
-- On Ttrue shift to state 25
-- On Tthrow shift to state 47
-- On Tthis shift to state 26
-- On Tstatic_cast shift to state 28
-- On Tsizeof shift to state 29
-- On Tsigned shift to state 30
-- On Tshort_Constr shift to state 31
-- On Tshort shift to state 32
-- On Treinterpret_cast shift to state 33
-- On Toperator shift to state 34
-- On Tnullptr shift to state 48
-- On Tnull shift to state 49
-- On Tlong_Constr shift to state 50
-- On Tlong shift to state 38
-- On Tint_Constr shift to state 51
-- On Tint shift to state 39
-- On Tfloat_Constr shift to state 52
-- On Tfloat shift to state 40
-- On Tfalse shift to state 53
-- On Tdynamic_cast shift to state 54
-- On Tdouble_Constr shift to state 55
-- On Tdouble shift to state 41
-- On Tdecltype shift to state 45
-- On Tconst_cast shift to state 56
-- On Tchar_Constr shift to state 57
-- On Tchar shift to state 58
-- On Tbool_Constr shift to state 59
-- On Tbool shift to state 60
-- On TTilde shift to state 61
-- On TString shift to state 62
-- On TPlus shift to state 63
-- On TOPar shift to state 64
-- On TOCro_Lambda shift to state 78
-- On TMul shift to state 88
-- On TMinus shift to state 89
-- On TInt shift to state 90
-- On TInc shift to state 91
-- On TIdent_TypedefConstr shift to state 106
-- On TIdent_Typedef shift to state 20
-- On TIdent_TemplatenameInQualifier_BeforeTypedef shift to state 21
-- On TIdent_TemplatenameInQualifier shift to state 12
-- On TIdent_Templatename shift to state 108
-- On TIdent_MacroString shift to state 110
-- On TIdent_ClassnameInQualifier_BeforeTypedef shift to state 111
-- On TIdent_ClassnameInQualifier shift to state 112
-- On TIdent shift to state 113
-- On TFloat shift to state 116
-- On TDec shift to state 117
-- On TColCol_BeforeTypedef shift to state 118
-- On TColCol shift to state 128
-- On TChar shift to state 174
-- On TBang shift to state 175
-- On TAndLog shift to state 176
-- On TAnd shift to state 177
-- On LDots shift to state 178
-- On unqualified_id shift to state 179
-- On unary_op shift to state 180
-- On unary_expr shift to state 181
-- On type_name shift to state 182
-- On type_cplusplus_id shift to state 183
-- On template_id shift to state 120
-- On string_elem shift to state 184
-- On simple_type_specifier shift to state 189
-- On shift_expr shift to state 217
-- On relational_expr shift to state 229
-- On qualified_id shift to state 191
-- On primary_expr shift to state 192
-- On primary_cplusplus_id shift to state 193
-- On postfix_expr shift to state 194
-- On pm_expr shift to state 219
-- On option(TColCol) shift to state 221
-- On operator_function_id shift to state 168
-- On new_expr shift to state 233
-- On nested_name_specifier2 shift to state 207
-- On nested_name_specifier shift to state 165
-- On multiplicative_expr shift to state 234
-- On logical_or_expr shift to state 246
-- On logical_and_expr shift to state 250
-- On literal shift to state 238
-- On lambda_introducer shift to state 239
-- On inclusive_or_expr shift to state 272
-- On id_expression shift to state 241
-- On exclusive_or_expr shift to state 273
-- On equality_expr shift to state 256
-- On enum_name_or_typedef_name_or_simple_class_name shift to state 123
-- On delete_expr shift to state 242
-- On decltype_specifier shift to state 243
-- On cpp_cast_operator shift to state 244
-- On conversion_function_id shift to state 169
-- On cond_expr shift to state 330
-- On class_or_namespace_name_for_qualifier2 shift to state 124
-- On class_or_namespace_name_for_qualifier shift to state 170
-- On cast_operator_expr shift to state 261
-- On cast_expr shift to state 331
-- On cast_constructor_expr shift to state 263
-- On basic_type_2 shift to state 264
-- On assign_expr shift to state 505
-- On and_expr shift to state 334
-- On additive_expr shift to state 341
## Reductions:
-- On Tnew Tdelete
--   reduce production option(TColCol) ->

State 505:
## Known stack suffix:
## decl_spec_seq TEq assign_expr
## LR(1) items:
parameter_decl -> decl_spec_seq TEq assign_expr . [ TSup_Template TComma TCPar ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production parameter_decl -> decl_spec_seq TEq assign_expr

State 506:
## Known stack suffix:
## decl_spec_seq declarator
## LR(1) items:
parameter_decl -> decl_spec_seq declarator . [ TSup_Template TComma TCPar ]
parameter_decl -> decl_spec_seq declarator . TEq assign_expr [ TSup_Template TComma TCPar ]
## Transitions:
-- On TEq shift to state 507
## Reductions:
-- On TSup_Template TComma TCPar
--   reduce production parameter_decl -> decl_spec_seq declarator

State 507:
## Known stack suffix:
## decl_spec_seq declarator TEq
## LR(1) items:
parameter_decl -> decl_spec_seq declarator TEq . assign_expr [ TSup_Template TComma TCPar ]
## Transitions:
-- On Twchar_t_Constr shift to state 14
-- On Twchar_t shift to state 1
-- On Tvoid shift to state 3
-- On Tunsigned shift to state 15
-- On Ttypeof shift to state 17
-- On Ttypeid shift to state 23
-- On Ttrue shift to state 25
-- On Tthrow shift to state 47
-- On Tthis shift to state 26
-- On Tstatic_cast shift to state 28
-- On Tsizeof shift to state 29
-- On Tsigned shift to state 30
-- On Tshort_Constr shift to state 31
-- On Tshort shift to state 32
-- On Treinterpret_cast shift to state 33
-- On Toperator shift to state 34
-- On Tnullptr shift to state 48
-- On Tnull shift to state 49
-- On Tlong_Constr shift to state 50
-- On Tlong shift to state 38
-- On Tint_Constr shift to state 51
-- On Tint shift to state 39
-- On Tfloat_Constr shift to state 52
-- On Tfloat shift to state 40
-- On Tfalse shift to state 53
-- On Tdynamic_cast shift to state 54
-- On Tdouble_Constr shift to state 55
-- On Tdouble shift to state 41
-- On Tdecltype shift to state 45
-- On Tconst_cast shift to state 56
-- On Tchar_Constr shift to state 57
-- On Tchar shift to state 58
-- On Tbool_Constr shift to state 59
-- On Tbool shift to state 60
-- On TTilde shift to state 61
-- On TString shift to state 62
-- On TPlus shift to state 63
-- On TOPar shift to state 64
-- On TOCro_Lambda shift to state 78
-- On TMul shift to state 88
-- On TMinus shift to state 89
-- On TInt shift to state 90
-- On TInc shift to state 91
-- On TIdent_TypedefConstr shift to state 106
-- On TIdent_Typedef shift to state 20
-- On TIdent_TemplatenameInQualifier_BeforeTypedef shift to state 21
-- On TIdent_TemplatenameInQualifier shift to state 12
-- On TIdent_Templatename shift to state 108
-- On TIdent_MacroString shift to state 110
-- On TIdent_ClassnameInQualifier_BeforeTypedef shift to state 111
-- On TIdent_ClassnameInQualifier shift to state 112
-- On TIdent shift to state 113
-- On TFloat shift to state 116
-- On TDec shift to state 117
-- On TColCol_BeforeTypedef shift to state 118
-- On TColCol shift to state 128
-- On TChar shift to state 174
-- On TBang shift to state 175
-- On TAndLog shift to state 176
-- On TAnd shift to state 177
-- On LDots shift to state 178
-- On unqualified_id shift to state 179
-- On unary_op shift to state 180
-- On unary_expr shift to state 181
-- On type_name shift to state 182
-- On type_cplusplus_id shift to state 183
-- On template_id shift to state 120
-- On string_elem shift to state 184
-- On simple_type_specifier shift to state 189
-- On shift_expr shift to state 217
-- On relational_expr shift to state 229
-- On qualified_id shift to state 191
-- On primary_expr shift to state 192
-- On primary_cplusplus_id shift to state 193
-- On postfix_expr shift to state 194
-- On pm_expr shift to state 219
-- On option(TColCol) shift to state 221
-- On operator_function_id shift to state 168
-- On new_expr shift to state 233
-- On nested_name_specifier2 shift to state 207
-- On nested_name_specifier shift to state 165
-- On multiplicative_expr shift to state 234
-- On logical_or_expr shift to state 246
-- On logical_and_expr shift to state 250
-- On literal shift to state 238
-- On lambda_introducer shift to state 239
-- On inclusive_or_expr shift to state 272
-- On id_expression shift to state 241
-- On exclusive_or_expr shift to state 273
-- On equality_expr shift to state 256
-- On enum_name_or_typedef_name_or_simple_class_name shift to state 123
-- On delete_expr shift to state 242
-- On decltype_specifier shift to state 243
-- On cpp_cast_operator shift to state 244
-- On conversion_function_id shift to state 169
-- On cond_expr shift to state 330
-- On class_or_namespace_name_for_qualifier2 shift to state 124
-- On class_or_namespace_name_for_qualifier shift to state 170
-- On cast_operator_expr shift to state 261
-- On cast_expr shift to state 331
-- On cast_constructor_expr shift to state 263
-- On basic_type_2 shift to state 264
-- On assign_expr shift to state 508
-- On and_expr shift to state 334
-- On additive_expr shift to state 341
## Reductions:
-- On Tnew Tdelete
--   reduce production option(TColCol) ->

State 508:
## Known stack suffix:
## decl_spec_seq declarator TEq assign_expr
## LR(1) items:
parameter_decl -> decl_spec_seq declarator TEq assign_expr . [ TSup_Template TComma TCPar ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production parameter_decl -> decl_spec_seq declarator TEq assign_expr

State 509:
## Known stack suffix:
## decl_spec_seq abstract_declarator
## LR(1) items:
parameter_decl -> decl_spec_seq abstract_declarator . [ TSup_Template TComma TCPar ]
parameter_decl -> decl_spec_seq abstract_declarator . TEq assign_expr [ TSup_Template TComma TCPar ]
## Transitions:
-- On TEq shift to state 510
## Reductions:
-- On TSup_Template TComma TCPar
--   reduce production parameter_decl -> decl_spec_seq abstract_declarator

State 510:
## Known stack suffix:
## decl_spec_seq abstract_declarator TEq
## LR(1) items:
parameter_decl -> decl_spec_seq abstract_declarator TEq . assign_expr [ TSup_Template TComma TCPar ]
## Transitions:
-- On Twchar_t_Constr shift to state 14
-- On Twchar_t shift to state 1
-- On Tvoid shift to state 3
-- On Tunsigned shift to state 15
-- On Ttypeof shift to state 17
-- On Ttypeid shift to state 23
-- On Ttrue shift to state 25
-- On Tthrow shift to state 47
-- On Tthis shift to state 26
-- On Tstatic_cast shift to state 28
-- On Tsizeof shift to state 29
-- On Tsigned shift to state 30
-- On Tshort_Constr shift to state 31
-- On Tshort shift to state 32
-- On Treinterpret_cast shift to state 33
-- On Toperator shift to state 34
-- On Tnullptr shift to state 48
-- On Tnull shift to state 49
-- On Tlong_Constr shift to state 50
-- On Tlong shift to state 38
-- On Tint_Constr shift to state 51
-- On Tint shift to state 39
-- On Tfloat_Constr shift to state 52
-- On Tfloat shift to state 40
-- On Tfalse shift to state 53
-- On Tdynamic_cast shift to state 54
-- On Tdouble_Constr shift to state 55
-- On Tdouble shift to state 41
-- On Tdecltype shift to state 45
-- On Tconst_cast shift to state 56
-- On Tchar_Constr shift to state 57
-- On Tchar shift to state 58
-- On Tbool_Constr shift to state 59
-- On Tbool shift to state 60
-- On TTilde shift to state 61
-- On TString shift to state 62
-- On TPlus shift to state 63
-- On TOPar shift to state 64
-- On TOCro_Lambda shift to state 78
-- On TMul shift to state 88
-- On TMinus shift to state 89
-- On TInt shift to state 90
-- On TInc shift to state 91
-- On TIdent_TypedefConstr shift to state 106
-- On TIdent_Typedef shift to state 20
-- On TIdent_TemplatenameInQualifier_BeforeTypedef shift to state 21
-- On TIdent_TemplatenameInQualifier shift to state 12
-- On TIdent_Templatename shift to state 108
-- On TIdent_MacroString shift to state 110
-- On TIdent_ClassnameInQualifier_BeforeTypedef shift to state 111
-- On TIdent_ClassnameInQualifier shift to state 112
-- On TIdent shift to state 113
-- On TFloat shift to state 116
-- On TDec shift to state 117
-- On TColCol_BeforeTypedef shift to state 118
-- On TColCol shift to state 128
-- On TChar shift to state 174
-- On TBang shift to state 175
-- On TAndLog shift to state 176
-- On TAnd shift to state 177
-- On LDots shift to state 178
-- On unqualified_id shift to state 179
-- On unary_op shift to state 180
-- On unary_expr shift to state 181
-- On type_name shift to state 182
-- On type_cplusplus_id shift to state 183
-- On template_id shift to state 120
-- On string_elem shift to state 184
-- On simple_type_specifier shift to state 189
-- On shift_expr shift to state 217
-- On relational_expr shift to state 229
-- On qualified_id shift to state 191
-- On primary_expr shift to state 192
-- On primary_cplusplus_id shift to state 193
-- On postfix_expr shift to state 194
-- On pm_expr shift to state 219
-- On option(TColCol) shift to state 221
-- On operator_function_id shift to state 168
-- On new_expr shift to state 233
-- On nested_name_specifier2 shift to state 207
-- On nested_name_specifier shift to state 165
-- On multiplicative_expr shift to state 234
-- On logical_or_expr shift to state 246
-- On logical_and_expr shift to state 250
-- On literal shift to state 238
-- On lambda_introducer shift to state 239
-- On inclusive_or_expr shift to state 272
-- On id_expression shift to state 241
-- On exclusive_or_expr shift to state 273
-- On equality_expr shift to state 256
-- On enum_name_or_typedef_name_or_simple_class_name shift to state 123
-- On delete_expr shift to state 242
-- On decltype_specifier shift to state 243
-- On cpp_cast_operator shift to state 244
-- On conversion_function_id shift to state 169
-- On cond_expr shift to state 330
-- On class_or_namespace_name_for_qualifier2 shift to state 124
-- On class_or_namespace_name_for_qualifier shift to state 170
-- On cast_operator_expr shift to state 261
-- On cast_expr shift to state 331
-- On cast_constructor_expr shift to state 263
-- On basic_type_2 shift to state 264
-- On assign_expr shift to state 511
-- On and_expr shift to state 334
-- On additive_expr shift to state 341
## Reductions:
-- On Tnew Tdelete
--   reduce production option(TColCol) ->

State 511:
## Known stack suffix:
## decl_spec_seq abstract_declarator TEq assign_expr
## LR(1) items:
parameter_decl -> decl_spec_seq abstract_declarator TEq assign_expr . [ TSup_Template TComma TCPar ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production parameter_decl -> decl_spec_seq abstract_declarator TEq assign_expr

State 512:
## Known stack suffix:
## Ttry compound nonempty_list(handler)
## LR(1) items:
try_block -> Ttry compound nonempty_list(handler) . [ Twhile Twchar_t_Constr Twchar_t Tvolatile Tvoid Tvirtual Tusing Tunsigned Tunion Ttypeof Ttypename Ttypeid Ttypedef Ttry Ttrue Tthrow Tthread_local Tthis Tswitch Tstruct Tstatic_cast Tstatic Tsizeof Tsigned Tshort_Constr Tshort Treturn Trestrict Treinterpret_cast Tregister Toperator Tnullptr Tnull Tnew Tnamespace Tmutable Tlong_Constr Tlong Tint_Constr Tint Tinline Tif Tgoto Tfriend Tfor Tfloat_Constr Tfloat Tfalse Textern Tenum Telse Tdynamic_cast Tdouble_Constr Tdouble Tdo Tdelete Tdefault Tdecltype Tcontinue Tconstexpr Tconst_cast Tconst Tclass Tchar_Constr Tchar Tcase Tbreak Tbool_Constr Tbool Tauto Tasm TUndef TTilde TString TPtVirg TPlus TOPar TOCro_Lambda TOBrace TMul TMinus TInt TInclude TInc TIfdefelse TIfdefelif TIfdefVersion TIfdefMisc TIfdefBool TIfdef TIdent_TypedefConstr TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_MacroString TIdent_MacroStmt TIdent_MacroIterator TIdent_MacroDecl TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TIdent TFloat TEndif TEllipsis TDefine TDec TCppDirectiveOther TCommentNewline_DefineEndOfMacro TColCol_BeforeTypedef TColCol TChar TCBrace TBang TAndLog TAnd LDots EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production try_block -> Ttry compound nonempty_list(handler)

State 513:
## Known stack suffix:
## handler
## LR(1) items:
nonempty_list(handler) -> handler . [ Twhile Twchar_t_Constr Twchar_t Tvolatile Tvoid Tvirtual Tusing Tunsigned Tunion Ttypeof Ttypename Ttypeid Ttypedef Ttry Ttrue Tthrow Tthread_local Tthis Tswitch Tstruct Tstatic_cast Tstatic Tsizeof Tsigned Tshort_Constr Tshort Treturn Trestrict Treinterpret_cast Tregister Toperator Tnullptr Tnull Tnew Tnamespace Tmutable Tlong_Constr Tlong Tint_Constr Tint Tinline Tif Tgoto Tfriend Tfor Tfloat_Constr Tfloat Tfalse Textern Tenum Telse Tdynamic_cast Tdouble_Constr Tdouble Tdo Tdelete Tdefault Tdecltype Tcontinue Tconstexpr Tconst_cast Tconst Tclass Tchar_Constr Tchar Tcase Tbreak Tbool_Constr Tbool Tauto Tasm TUndef TTilde TString TPtVirg TPlus TOPar TOCro_Lambda TOBrace TMul TMinus TInt TInclude TInc TIfdefelse TIfdefelif TIfdefVersion TIfdefMisc TIfdefBool TIfdef TIdent_TypedefConstr TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_MacroString TIdent_MacroStmt TIdent_MacroIterator TIdent_MacroDecl TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TIdent TFloat TEndif TEllipsis TDefine TDec TCppDirectiveOther TCommentNewline_DefineEndOfMacro TColCol_BeforeTypedef TColCol TChar TCBrace TBang TAndLog TAnd LDots EOF ]
nonempty_list(handler) -> handler . nonempty_list(handler) [ Twhile Twchar_t_Constr Twchar_t Tvolatile Tvoid Tvirtual Tusing Tunsigned Tunion Ttypeof Ttypename Ttypeid Ttypedef Ttry Ttrue Tthrow Tthread_local Tthis Tswitch Tstruct Tstatic_cast Tstatic Tsizeof Tsigned Tshort_Constr Tshort Treturn Trestrict Treinterpret_cast Tregister Toperator Tnullptr Tnull Tnew Tnamespace Tmutable Tlong_Constr Tlong Tint_Constr Tint Tinline Tif Tgoto Tfriend Tfor Tfloat_Constr Tfloat Tfalse Textern Tenum Telse Tdynamic_cast Tdouble_Constr Tdouble Tdo Tdelete Tdefault Tdecltype Tcontinue Tconstexpr Tconst_cast Tconst Tclass Tchar_Constr Tchar Tcase Tbreak Tbool_Constr Tbool Tauto Tasm TUndef TTilde TString TPtVirg TPlus TOPar TOCro_Lambda TOBrace TMul TMinus TInt TInclude TInc TIfdefelse TIfdefelif TIfdefVersion TIfdefMisc TIfdefBool TIfdef TIdent_TypedefConstr TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_MacroString TIdent_MacroStmt TIdent_MacroIterator TIdent_MacroDecl TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TIdent TFloat TEndif TEllipsis TDefine TDec TCppDirectiveOther TCommentNewline_DefineEndOfMacro TColCol_BeforeTypedef TColCol TChar TCBrace TBang TAndLog TAnd LDots EOF ]
## Transitions:
-- On Tcatch shift to state 433
-- On nonempty_list(handler) shift to state 514
-- On handler shift to state 513
## Reductions:
-- On Twhile Twchar_t_Constr Twchar_t Tvolatile Tvoid Tvirtual Tusing Tunsigned Tunion Ttypeof Ttypename Ttypeid Ttypedef Ttry Ttrue Tthrow Tthread_local Tthis Tswitch Tstruct Tstatic_cast Tstatic Tsizeof Tsigned Tshort_Constr Tshort Treturn Trestrict Treinterpret_cast Tregister Toperator Tnullptr Tnull Tnew Tnamespace Tmutable Tlong_Constr Tlong Tint_Constr Tint Tinline Tif Tgoto Tfriend Tfor Tfloat_Constr Tfloat Tfalse Textern Tenum Telse Tdynamic_cast Tdouble_Constr Tdouble Tdo Tdelete Tdefault Tdecltype Tcontinue Tconstexpr Tconst_cast Tconst Tclass Tchar_Constr Tchar Tcase Tbreak Tbool_Constr Tbool Tauto Tasm TUndef TTilde TString TPtVirg TPlus TOPar TOCro_Lambda TOBrace TMul TMinus TInt TInclude TInc TIfdefelse TIfdefelif TIfdefVersion TIfdefMisc TIfdefBool TIfdef TIdent_TypedefConstr TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_MacroString TIdent_MacroStmt TIdent_MacroIterator TIdent_MacroDecl TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TIdent TFloat TEndif TEllipsis TDefine TDec TCppDirectiveOther TCommentNewline_DefineEndOfMacro TColCol_BeforeTypedef TColCol TChar TCBrace TBang TAndLog TAnd LDots EOF
--   reduce production nonempty_list(handler) -> handler

State 514:
## Known stack suffix:
## handler nonempty_list(handler)
## LR(1) items:
nonempty_list(handler) -> handler nonempty_list(handler) . [ Twhile Twchar_t_Constr Twchar_t Tvolatile Tvoid Tvirtual Tusing Tunsigned Tunion Ttypeof Ttypename Ttypeid Ttypedef Ttry Ttrue Tthrow Tthread_local Tthis Tswitch Tstruct Tstatic_cast Tstatic Tsizeof Tsigned Tshort_Constr Tshort Treturn Trestrict Treinterpret_cast Tregister Toperator Tnullptr Tnull Tnew Tnamespace Tmutable Tlong_Constr Tlong Tint_Constr Tint Tinline Tif Tgoto Tfriend Tfor Tfloat_Constr Tfloat Tfalse Textern Tenum Telse Tdynamic_cast Tdouble_Constr Tdouble Tdo Tdelete Tdefault Tdecltype Tcontinue Tconstexpr Tconst_cast Tconst Tclass Tchar_Constr Tchar Tcase Tbreak Tbool_Constr Tbool Tauto Tasm TUndef TTilde TString TPtVirg TPlus TOPar TOCro_Lambda TOBrace TMul TMinus TInt TInclude TInc TIfdefelse TIfdefelif TIfdefVersion TIfdefMisc TIfdefBool TIfdef TIdent_TypedefConstr TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_MacroString TIdent_MacroStmt TIdent_MacroIterator TIdent_MacroDecl TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TIdent TFloat TEndif TEllipsis TDefine TDec TCppDirectiveOther TCommentNewline_DefineEndOfMacro TColCol_BeforeTypedef TColCol TChar TCBrace TBang TAndLog TAnd LDots EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production nonempty_list(handler) -> handler nonempty_list(handler)

State 515:
## Known stack suffix:
## Tswitch
## LR(1) items:
selection -> Tswitch . TOPar condition TCPar statement [ Twhile Twchar_t_Constr Twchar_t Tvolatile Tvoid Tvirtual Tusing Tunsigned Tunion Ttypeof Ttypename Ttypeid Ttypedef Ttry Ttrue Tthrow Tthread_local Tthis Tswitch Tstruct Tstatic_cast Tstatic Tsizeof Tsigned Tshort_Constr Tshort Treturn Trestrict Treinterpret_cast Tregister Toperator Tnullptr Tnull Tnew Tnamespace Tmutable Tlong_Constr Tlong Tint_Constr Tint Tinline Tif Tgoto Tfriend Tfor Tfloat_Constr Tfloat Tfalse Textern Tenum Telse Tdynamic_cast Tdouble_Constr Tdouble Tdo Tdelete Tdefault Tdecltype Tcontinue Tconstexpr Tconst_cast Tconst Tclass Tchar_Constr Tchar Tcase Tbreak Tbool_Constr Tbool Tauto Tasm TUndef TTilde TString TPtVirg TPlus TOPar TOCro_Lambda TOBrace TMul TMinus TInt TInclude TInc TIfdefelse TIfdefelif TIfdefVersion TIfdefMisc TIfdefBool TIfdef TIdent_TypedefConstr TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_MacroString TIdent_MacroStmt TIdent_MacroIterator TIdent_MacroDecl TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TIdent TFloat TEndif TEllipsis TDefine TDec TCppDirectiveOther TCommentNewline_DefineEndOfMacro TColCol_BeforeTypedef TColCol TChar TCBrace TBang TAndLog TAnd LDots EOF ]
## Transitions:
-- On TOPar shift to state 516
## Reductions:

State 516:
## Known stack suffix:
## Tswitch TOPar
## LR(1) items:
selection -> Tswitch TOPar . condition TCPar statement [ Twhile Twchar_t_Constr Twchar_t Tvolatile Tvoid Tvirtual Tusing Tunsigned Tunion Ttypeof Ttypename Ttypeid Ttypedef Ttry Ttrue Tthrow Tthread_local Tthis Tswitch Tstruct Tstatic_cast Tstatic Tsizeof Tsigned Tshort_Constr Tshort Treturn Trestrict Treinterpret_cast Tregister Toperator Tnullptr Tnull Tnew Tnamespace Tmutable Tlong_Constr Tlong Tint_Constr Tint Tinline Tif Tgoto Tfriend Tfor Tfloat_Constr Tfloat Tfalse Textern Tenum Telse Tdynamic_cast Tdouble_Constr Tdouble Tdo Tdelete Tdefault Tdecltype Tcontinue Tconstexpr Tconst_cast Tconst Tclass Tchar_Constr Tchar Tcase Tbreak Tbool_Constr Tbool Tauto Tasm TUndef TTilde TString TPtVirg TPlus TOPar TOCro_Lambda TOBrace TMul TMinus TInt TInclude TInc TIfdefelse TIfdefelif TIfdefVersion TIfdefMisc TIfdefBool TIfdef TIdent_TypedefConstr TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_MacroString TIdent_MacroStmt TIdent_MacroIterator TIdent_MacroDecl TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TIdent TFloat TEndif TEllipsis TDefine TDec TCppDirectiveOther TCommentNewline_DefineEndOfMacro TColCol_BeforeTypedef TColCol TChar TCBrace TBang TAndLog TAnd LDots EOF ]
## Transitions:
-- On Twchar_t_Constr shift to state 14
-- On Twchar_t shift to state 1
-- On Tvolatile shift to state 2
-- On Tvoid shift to state 3
-- On Tvirtual shift to state 4
-- On Tunsigned shift to state 15
-- On Tunion shift to state 16
-- On Ttypeof shift to state 17
-- On Ttypename shift to state 19
-- On Ttypeid shift to state 23
-- On Ttypedef shift to state 96
-- On Ttrue shift to state 25
-- On Tthrow shift to state 47
-- On Tthread_local shift to state 97
-- On Tthis shift to state 26
-- On Tstruct shift to state 27
-- On Tstatic_cast shift to state 28
-- On Tstatic shift to state 98
-- On Tsizeof shift to state 29
-- On Tsigned shift to state 30
-- On Tshort_Constr shift to state 31
-- On Tshort shift to state 32
-- On Trestrict shift to state 65
-- On Treinterpret_cast shift to state 33
-- On Tregister shift to state 99
-- On Toperator shift to state 34
-- On Tnullptr shift to state 48
-- On Tnull shift to state 49
-- On Tmutable shift to state 100
-- On Tlong_Constr shift to state 50
-- On Tlong shift to state 38
-- On Tint_Constr shift to state 51
-- On Tint shift to state 39
-- On Tinline shift to state 101
-- On Tfriend shift to state 102
-- On Tfloat_Constr shift to state 52
-- On Tfloat shift to state 40
-- On Tfalse shift to state 53
-- On Textern shift to state 103
-- On Tenum shift to state 66
-- On Tdynamic_cast shift to state 54
-- On Tdouble_Constr shift to state 55
-- On Tdouble shift to state 41
-- On Tdecltype shift to state 45
-- On Tconstexpr shift to state 104
-- On Tconst_cast shift to state 56
-- On Tconst shift to state 76
-- On Tclass shift to state 77
-- On Tchar_Constr shift to state 57
-- On Tchar shift to state 58
-- On Tbool_Constr shift to state 59
-- On Tbool shift to state 60
-- On Tauto shift to state 105
-- On TTilde shift to state 61
-- On TString shift to state 62
-- On TPlus shift to state 63
-- On TOPar shift to state 64
-- On TOCro_Lambda shift to state 78
-- On TMul shift to state 88
-- On TMinus shift to state 89
-- On TInt shift to state 90
-- On TInc shift to state 91
-- On TIdent_TypedefConstr shift to state 106
-- On TIdent_Typedef shift to state 20
-- On TIdent_TemplatenameInQualifier_BeforeTypedef shift to state 21
-- On TIdent_TemplatenameInQualifier shift to state 12
-- On TIdent_Templatename shift to state 108
-- On TIdent_MacroString shift to state 110
-- On TIdent_ClassnameInQualifier_BeforeTypedef shift to state 111
-- On TIdent_ClassnameInQualifier shift to state 112
-- On TIdent shift to state 113
-- On TFloat shift to state 116
-- On TDec shift to state 117
-- On TColCol_BeforeTypedef shift to state 118
-- On TColCol shift to state 128
-- On TChar shift to state 174
-- On TBang shift to state 175
-- On TAndLog shift to state 176
-- On TAnd shift to state 177
-- On LDots shift to state 178
-- On unqualified_id shift to state 179
-- On unary_op shift to state 180
-- On unary_expr shift to state 181
-- On type_spec shift to state 314
-- On type_name shift to state 182
-- On type_cplusplus_id shift to state 183
-- On template_id shift to state 120
-- On string_elem shift to state 184
-- On storage_class_spec shift to state 316
-- On simple_type_specifier shift to state 266
-- On shift_expr shift to state 217
-- On relational_expr shift to state 229
-- On qualified_id shift to state 191
-- On primary_expr shift to state 192
-- On primary_cplusplus_id shift to state 193
-- On postfix_expr shift to state 194
-- On pm_expr shift to state 219
-- On option(TColCol) shift to state 221
-- On operator_function_id shift to state 168
-- On new_expr shift to state 233
-- On nested_name_specifier2 shift to state 207
-- On nested_name_specifier shift to state 165
-- On multiplicative_expr shift to state 234
-- On logical_or_expr shift to state 246
-- On logical_and_expr shift to state 250
-- On literal shift to state 238
-- On lambda_introducer shift to state 239
-- On inclusive_or_expr shift to state 272
-- On id_expression shift to state 241
-- On function_spec shift to state 437
-- On expr shift to state 517
-- On exclusive_or_expr shift to state 273
-- On equality_expr shift to state 256
-- On enum_specifier shift to state 209
-- On enum_name_or_typedef_name_or_simple_class_name shift to state 123
-- On enum_head shift to state 210
-- On elaborated_type_specifier shift to state 274
-- On delete_expr shift to state 242
-- On decltype_specifier shift to state 243
-- On decl_spec_seq shift to state 520
-- On decl_spec shift to state 473
-- On cv_qualif shift to state 475
-- On cpp_cast_operator shift to state 244
-- On conversion_function_id shift to state 169
-- On condition shift to state 535
-- On cond_expr shift to state 330
-- On class_specifier shift to state 277
-- On class_or_namespace_name_for_qualifier2 shift to state 124
-- On class_or_namespace_name_for_qualifier shift to state 170
-- On class_key shift to state 278
-- On class_head shift to state 301
-- On cast_operator_expr shift to state 261
-- On cast_expr shift to state 331
-- On cast_constructor_expr shift to state 263
-- On basic_type_2 shift to state 264
-- On assign_expr shift to state 539
-- On and_expr shift to state 334
-- On additive_expr shift to state 341
## Reductions:
-- On Tnew Tdelete
--   reduce production option(TColCol) ->

State 517:
## Known stack suffix:
## expr
## LR(1) items:
condition -> expr . [ TCPar ]
expr -> expr . TComma assign_expr [ TComma TCPar ]
## Transitions:
-- On TComma shift to state 518
## Reductions:
-- On TCPar
--   reduce production condition -> expr

State 518:
## Known stack suffix:
## expr TComma
## LR(1) items:
expr -> expr TComma . assign_expr [ TPtVirg TCommentNewline_DefineEndOfMacro TComma TCol TCPar TCCro RDots EOF ]
## Transitions:
-- On Twchar_t_Constr shift to state 14
-- On Twchar_t shift to state 1
-- On Tvoid shift to state 3
-- On Tunsigned shift to state 15
-- On Ttypeof shift to state 17
-- On Ttypeid shift to state 23
-- On Ttrue shift to state 25
-- On Tthrow shift to state 47
-- On Tthis shift to state 26
-- On Tstatic_cast shift to state 28
-- On Tsizeof shift to state 29
-- On Tsigned shift to state 30
-- On Tshort_Constr shift to state 31
-- On Tshort shift to state 32
-- On Treinterpret_cast shift to state 33
-- On Toperator shift to state 34
-- On Tnullptr shift to state 48
-- On Tnull shift to state 49
-- On Tlong_Constr shift to state 50
-- On Tlong shift to state 38
-- On Tint_Constr shift to state 51
-- On Tint shift to state 39
-- On Tfloat_Constr shift to state 52
-- On Tfloat shift to state 40
-- On Tfalse shift to state 53
-- On Tdynamic_cast shift to state 54
-- On Tdouble_Constr shift to state 55
-- On Tdouble shift to state 41
-- On Tdecltype shift to state 45
-- On Tconst_cast shift to state 56
-- On Tchar_Constr shift to state 57
-- On Tchar shift to state 58
-- On Tbool_Constr shift to state 59
-- On Tbool shift to state 60
-- On TTilde shift to state 61
-- On TString shift to state 62
-- On TPlus shift to state 63
-- On TOPar shift to state 64
-- On TOCro_Lambda shift to state 78
-- On TMul shift to state 88
-- On TMinus shift to state 89
-- On TInt shift to state 90
-- On TInc shift to state 91
-- On TIdent_TypedefConstr shift to state 106
-- On TIdent_Typedef shift to state 20
-- On TIdent_TemplatenameInQualifier_BeforeTypedef shift to state 21
-- On TIdent_TemplatenameInQualifier shift to state 12
-- On TIdent_Templatename shift to state 108
-- On TIdent_MacroString shift to state 110
-- On TIdent_ClassnameInQualifier_BeforeTypedef shift to state 111
-- On TIdent_ClassnameInQualifier shift to state 112
-- On TIdent shift to state 113
-- On TFloat shift to state 116
-- On TDec shift to state 117
-- On TColCol_BeforeTypedef shift to state 118
-- On TColCol shift to state 128
-- On TChar shift to state 174
-- On TBang shift to state 175
-- On TAndLog shift to state 176
-- On TAnd shift to state 177
-- On LDots shift to state 178
-- On unqualified_id shift to state 179
-- On unary_op shift to state 180
-- On unary_expr shift to state 181
-- On type_name shift to state 182
-- On type_cplusplus_id shift to state 183
-- On template_id shift to state 120
-- On string_elem shift to state 184
-- On simple_type_specifier shift to state 189
-- On shift_expr shift to state 217
-- On relational_expr shift to state 229
-- On qualified_id shift to state 191
-- On primary_expr shift to state 192
-- On primary_cplusplus_id shift to state 193
-- On postfix_expr shift to state 194
-- On pm_expr shift to state 219
-- On option(TColCol) shift to state 221
-- On operator_function_id shift to state 168
-- On new_expr shift to state 233
-- On nested_name_specifier2 shift to state 207
-- On nested_name_specifier shift to state 165
-- On multiplicative_expr shift to state 234
-- On logical_or_expr shift to state 246
-- On logical_and_expr shift to state 250
-- On literal shift to state 238
-- On lambda_introducer shift to state 239
-- On inclusive_or_expr shift to state 272
-- On id_expression shift to state 241
-- On exclusive_or_expr shift to state 273
-- On equality_expr shift to state 256
-- On enum_name_or_typedef_name_or_simple_class_name shift to state 123
-- On delete_expr shift to state 242
-- On decltype_specifier shift to state 243
-- On cpp_cast_operator shift to state 244
-- On conversion_function_id shift to state 169
-- On cond_expr shift to state 330
-- On class_or_namespace_name_for_qualifier2 shift to state 124
-- On class_or_namespace_name_for_qualifier shift to state 170
-- On cast_operator_expr shift to state 261
-- On cast_expr shift to state 331
-- On cast_constructor_expr shift to state 263
-- On basic_type_2 shift to state 264
-- On assign_expr shift to state 519
-- On and_expr shift to state 334
-- On additive_expr shift to state 341
## Reductions:
-- On Tnew Tdelete
--   reduce production option(TColCol) ->

State 519:
## Known stack suffix:
## expr TComma assign_expr
## LR(1) items:
expr -> expr TComma assign_expr . [ TPtVirg TCommentNewline_DefineEndOfMacro TComma TCol TCPar TCCro RDots EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production expr -> expr TComma assign_expr

State 520:
## Known stack suffix:
## decl_spec_seq
## LR(1) items:
condition -> decl_spec_seq . declaratori TEq initializer_clause [ TCPar ]
## Transitions:
-- On TOPar shift to state 521
-- On TMul shift to state 443
-- On TColCol shift to state 8
-- On TAndLog shift to state 444
-- On TAnd shift to state 445
-- On pointer shift to state 522
-- On option(TColCol) shift to state 456
-- On direct_d shift to state 498
-- On declaratori shift to state 523
-- On declarator_id shift to state 495
-- On declarator shift to state 528
## Reductions:
-- On Toperator TIdent_TemplatenameInQualifier TIdent_ClassnameInQualifier TIdent
--   reduce production option(TColCol) ->

State 521:
## Known stack suffix:
## TOPar
## LR(1) items:
direct_d -> TOPar . declarator TCPar [ Tasm TPtVirg TOPar_CplusplusInit TOPar TOCro TOBrace TEq TComma TCol TCPar ]
## Transitions:
-- On TOPar shift to state 521
-- On TMul shift to state 443
-- On TColCol shift to state 8
-- On TAndLog shift to state 444
-- On TAnd shift to state 445
-- On pointer shift to state 522
-- On option(TColCol) shift to state 456
-- On direct_d shift to state 498
-- On declarator_id shift to state 495
-- On declarator shift to state 500
## Reductions:
-- On Toperator TIdent_TemplatenameInQualifier TIdent_ClassnameInQualifier TIdent
--   reduce production option(TColCol) ->

State 522:
## Known stack suffix:
## pointer
## LR(1) items:
declarator -> pointer . direct_d [ Tasm TPtVirg TOPar_CplusplusInit TOBrace TEq TComma TCol TCPar ]
## Transitions:
-- On TOPar shift to state 521
-- On TColCol shift to state 8
-- On option(TColCol) shift to state 456
-- On direct_d shift to state 458
-- On declarator_id shift to state 495
## Reductions:
-- On Toperator TIdent_TemplatenameInQualifier TIdent_ClassnameInQualifier TIdent
--   reduce production option(TColCol) ->

State 523:
## Known stack suffix:
## decl_spec_seq declaratori
## LR(1) items:
condition -> decl_spec_seq declaratori . TEq initializer_clause [ TCPar ]
## Transitions:
-- On TEq shift to state 524
## Reductions:

State 524:
## Known stack suffix:
## decl_spec_seq declaratori TEq
## LR(1) items:
condition -> decl_spec_seq declaratori TEq . initializer_clause [ TCPar ]
## Transitions:
-- On Twchar_t_Constr shift to state 14
-- On Twchar_t shift to state 1
-- On Tvoid shift to state 3
-- On Tunsigned shift to state 15
-- On Ttypeof shift to state 17
-- On Ttypeid shift to state 23
-- On Ttrue shift to state 25
-- On Tthrow shift to state 47
-- On Tthis shift to state 26
-- On Tstatic_cast shift to state 28
-- On Tsizeof shift to state 29
-- On Tsigned shift to state 30
-- On Tshort_Constr shift to state 31
-- On Tshort shift to state 32
-- On Treinterpret_cast shift to state 33
-- On Toperator shift to state 34
-- On Tnullptr shift to state 48
-- On Tnull shift to state 49
-- On Tlong_Constr shift to state 50
-- On Tlong shift to state 38
-- On Tint_Constr shift to state 51
-- On Tint shift to state 39
-- On Tfloat_Constr shift to state 52
-- On Tfloat shift to state 40
-- On Tfalse shift to state 53
-- On Tdynamic_cast shift to state 54
-- On Tdouble_Constr shift to state 55
-- On Tdouble shift to state 41
-- On Tdecltype shift to state 45
-- On Tconst_cast shift to state 56
-- On Tchar_Constr shift to state 57
-- On Tchar shift to state 58
-- On Tbool_Constr shift to state 59
-- On Tbool shift to state 60
-- On TTilde shift to state 61
-- On TString shift to state 62
-- On TPlus shift to state 63
-- On TOPar shift to state 64
-- On TOCro_Lambda shift to state 78
-- On TOBrace shift to state 114
-- On TMul shift to state 88
-- On TMinus shift to state 89
-- On TInt shift to state 90
-- On TInc shift to state 91
-- On TIdent_TypedefConstr shift to state 106
-- On TIdent_Typedef shift to state 20
-- On TIdent_TemplatenameInQualifier_BeforeTypedef shift to state 21
-- On TIdent_TemplatenameInQualifier shift to state 12
-- On TIdent_Templatename shift to state 108
-- On TIdent_MacroString shift to state 110
-- On TIdent_ClassnameInQualifier_BeforeTypedef shift to state 111
-- On TIdent_ClassnameInQualifier shift to state 112
-- On TIdent shift to state 113
-- On TFloat shift to state 116
-- On TDec shift to state 117
-- On TColCol_BeforeTypedef shift to state 118
-- On TColCol shift to state 128
-- On TChar shift to state 174
-- On TBang shift to state 175
-- On TAndLog shift to state 176
-- On TAnd shift to state 177
-- On LDots shift to state 178
-- On unqualified_id shift to state 179
-- On unary_op shift to state 180
-- On unary_expr shift to state 181
-- On type_name shift to state 182
-- On type_cplusplus_id shift to state 183
-- On template_id shift to state 120
-- On string_elem shift to state 184
-- On simple_type_specifier shift to state 189
-- On shift_expr shift to state 217
-- On relational_expr shift to state 229
-- On qualified_id shift to state 191
-- On primary_expr shift to state 192
-- On primary_cplusplus_id shift to state 193
-- On postfix_expr shift to state 194
-- On pm_expr shift to state 219
-- On option(TColCol) shift to state 221
-- On operator_function_id shift to state 168
-- On new_expr shift to state 233
-- On nested_name_specifier2 shift to state 207
-- On nested_name_specifier shift to state 165
-- On multiplicative_expr shift to state 234
-- On logical_or_expr shift to state 246
-- On logical_and_expr shift to state 250
-- On literal shift to state 238
-- On lambda_introducer shift to state 239
-- On initializer_clause shift to state 525
-- On inclusive_or_expr shift to state 272
-- On id_expression shift to state 241
-- On exclusive_or_expr shift to state 273
-- On equality_expr shift to state 256
-- On enum_name_or_typedef_name_or_simple_class_name shift to state 123
-- On delete_expr shift to state 242
-- On decltype_specifier shift to state 243
-- On cpp_cast_operator shift to state 244
-- On conversion_function_id shift to state 169
-- On cond_expr shift to state 330
-- On class_or_namespace_name_for_qualifier2 shift to state 124
-- On class_or_namespace_name_for_qualifier shift to state 170
-- On cast_operator_expr shift to state 261
-- On cast_expr shift to state 331
-- On cast_constructor_expr shift to state 263
-- On braced_init_list shift to state 526
-- On basic_type_2 shift to state 264
-- On assign_expr shift to state 527
-- On and_expr shift to state 334
-- On additive_expr shift to state 341
## Reductions:
-- On Tnew Tdelete
--   reduce production option(TColCol) ->

State 525:
## Known stack suffix:
## decl_spec_seq declaratori TEq initializer_clause
## LR(1) items:
condition -> decl_spec_seq declaratori TEq initializer_clause . [ TCPar ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production condition -> decl_spec_seq declaratori TEq initializer_clause

State 526:
## Known stack suffix:
## braced_init_list
## LR(1) items:
initializer_clause -> braced_init_list . [ TPtVirg TComma TCPar ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production initializer_clause -> braced_init_list

State 527:
## Known stack suffix:
## assign_expr
## LR(1) items:
initializer_clause -> assign_expr . [ TPtVirg TComma TCPar ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production initializer_clause -> assign_expr

State 528:
## Known stack suffix:
## declarator
## LR(1) items:
declaratori -> declarator . [ TPtVirg TOPar_CplusplusInit TEq TComma ]
declaratori -> declarator . gcc_asm_decl [ TPtVirg TOPar_CplusplusInit TEq TComma ]
## Transitions:
-- On Tasm shift to state 529
-- On gcc_asm_decl shift to state 534
## Reductions:
-- On TPtVirg TOPar_CplusplusInit TEq TComma
--   reduce production declaratori -> declarator

State 529:
## Known stack suffix:
## Tasm
## LR(1) items:
gcc_asm_decl -> Tasm . option(Tvolatile) TOPar asmbody TCPar [ TPtVirg TOPar_CplusplusInit TEq TComma ]
## Transitions:
-- On Tvolatile shift to state 367
-- On option(Tvolatile) shift to state 530
## Reductions:
-- On TOPar
--   reduce production option(Tvolatile) ->

State 530:
## Known stack suffix:
## Tasm option(Tvolatile)
## LR(1) items:
gcc_asm_decl -> Tasm option(Tvolatile) . TOPar asmbody TCPar [ TPtVirg TOPar_CplusplusInit TEq TComma ]
## Transitions:
-- On TOPar shift to state 531
## Reductions:

State 531:
## Known stack suffix:
## Tasm option(Tvolatile) TOPar
## LR(1) items:
gcc_asm_decl -> Tasm option(Tvolatile) TOPar . asmbody TCPar [ TPtVirg TOPar_CplusplusInit TEq TComma ]
## Transitions:
-- On TString shift to state 185
-- On TIdent_MacroString shift to state 110
-- On string_elem shift to state 186
-- On nonempty_list(string_elem) shift to state 370
-- On asmbody shift to state 532
## Reductions:

State 532:
## Known stack suffix:
## Tasm option(Tvolatile) TOPar asmbody
## LR(1) items:
gcc_asm_decl -> Tasm option(Tvolatile) TOPar asmbody . TCPar [ TPtVirg TOPar_CplusplusInit TEq TComma ]
## Transitions:
-- On TCPar shift to state 533
## Reductions:

State 533:
## Known stack suffix:
## Tasm option(Tvolatile) TOPar asmbody TCPar
## LR(1) items:
gcc_asm_decl -> Tasm option(Tvolatile) TOPar asmbody TCPar . [ TPtVirg TOPar_CplusplusInit TEq TComma ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production gcc_asm_decl -> Tasm option(Tvolatile) TOPar asmbody TCPar

State 534:
## Known stack suffix:
## declarator gcc_asm_decl
## LR(1) items:
declaratori -> declarator gcc_asm_decl . [ TPtVirg TOPar_CplusplusInit TEq TComma ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production declaratori -> declarator gcc_asm_decl

State 535:
## Known stack suffix:
## Tswitch TOPar condition
## LR(1) items:
selection -> Tswitch TOPar condition . TCPar statement [ Twhile Twchar_t_Constr Twchar_t Tvolatile Tvoid Tvirtual Tusing Tunsigned Tunion Ttypeof Ttypename Ttypeid Ttypedef Ttry Ttrue Tthrow Tthread_local Tthis Tswitch Tstruct Tstatic_cast Tstatic Tsizeof Tsigned Tshort_Constr Tshort Treturn Trestrict Treinterpret_cast Tregister Toperator Tnullptr Tnull Tnew Tnamespace Tmutable Tlong_Constr Tlong Tint_Constr Tint Tinline Tif Tgoto Tfriend Tfor Tfloat_Constr Tfloat Tfalse Textern Tenum Telse Tdynamic_cast Tdouble_Constr Tdouble Tdo Tdelete Tdefault Tdecltype Tcontinue Tconstexpr Tconst_cast Tconst Tclass Tchar_Constr Tchar Tcase Tbreak Tbool_Constr Tbool Tauto Tasm TUndef TTilde TString TPtVirg TPlus TOPar TOCro_Lambda TOBrace TMul TMinus TInt TInclude TInc TIfdefelse TIfdefelif TIfdefVersion TIfdefMisc TIfdefBool TIfdef TIdent_TypedefConstr TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_MacroString TIdent_MacroStmt TIdent_MacroIterator TIdent_MacroDecl TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TIdent TFloat TEndif TEllipsis TDefine TDec TCppDirectiveOther TCommentNewline_DefineEndOfMacro TColCol_BeforeTypedef TColCol TChar TCBrace TBang TAndLog TAnd LDots EOF ]
## Transitions:
-- On TCPar shift to state 536
## Reductions:

State 536:
## Known stack suffix:
## Tswitch TOPar condition TCPar
## LR(1) items:
selection -> Tswitch TOPar condition TCPar . statement [ Twhile Twchar_t_Constr Twchar_t Tvolatile Tvoid Tvirtual Tusing Tunsigned Tunion Ttypeof Ttypename Ttypeid Ttypedef Ttry Ttrue Tthrow Tthread_local Tthis Tswitch Tstruct Tstatic_cast Tstatic Tsizeof Tsigned Tshort_Constr Tshort Treturn Trestrict Treinterpret_cast Tregister Toperator Tnullptr Tnull Tnew Tnamespace Tmutable Tlong_Constr Tlong Tint_Constr Tint Tinline Tif Tgoto Tfriend Tfor Tfloat_Constr Tfloat Tfalse Textern Tenum Telse Tdynamic_cast Tdouble_Constr Tdouble Tdo Tdelete Tdefault Tdecltype Tcontinue Tconstexpr Tconst_cast Tconst Tclass Tchar_Constr Tchar Tcase Tbreak Tbool_Constr Tbool Tauto Tasm TUndef TTilde TString TPtVirg TPlus TOPar TOCro_Lambda TOBrace TMul TMinus TInt TInclude TInc TIfdefelse TIfdefelif TIfdefVersion TIfdefMisc TIfdefBool TIfdef TIdent_TypedefConstr TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_MacroString TIdent_MacroStmt TIdent_MacroIterator TIdent_MacroDecl TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TIdent TFloat TEndif TEllipsis TDefine TDec TCppDirectiveOther TCommentNewline_DefineEndOfMacro TColCol_BeforeTypedef TColCol TChar TCBrace TBang TAndLog TAnd LDots EOF ]
## Transitions:
-- On Twhile shift to state 94
-- On Twchar_t_Constr shift to state 14
-- On Twchar_t shift to state 1
-- On Tvolatile shift to state 2
-- On Tvoid shift to state 3
-- On Tvirtual shift to state 4
-- On Tusing shift to state 5
-- On Tunsigned shift to state 15
-- On Tunion shift to state 16
-- On Ttypeof shift to state 17
-- On Ttypename shift to state 19
-- On Ttypeid shift to state 23
-- On Ttypedef shift to state 96
-- On Ttry shift to state 431
-- On Ttrue shift to state 25
-- On Tthrow shift to state 47
-- On Tthread_local shift to state 97
-- On Tthis shift to state 26
-- On Tswitch shift to state 515
-- On Tstruct shift to state 27
-- On Tstatic_cast shift to state 28
-- On Tstatic shift to state 323
-- On Tsizeof shift to state 29
-- On Tsigned shift to state 30
-- On Tshort_Constr shift to state 31
-- On Tshort shift to state 32
-- On Treturn shift to state 537
-- On Trestrict shift to state 65
-- On Treinterpret_cast shift to state 33
-- On Tregister shift to state 99
-- On Toperator shift to state 34
-- On Tnullptr shift to state 48
-- On Tnull shift to state 49
-- On Tnamespace shift to state 540
-- On Tmutable shift to state 100
-- On Tlong_Constr shift to state 50
-- On Tlong shift to state 38
-- On Tint_Constr shift to state 51
-- On Tint shift to state 39
-- On Tinline shift to state 101
-- On Tif shift to state 545
-- On Tgoto shift to state 549
-- On Tfriend shift to state 102
-- On Tfor shift to state 553
-- On Tfloat_Constr shift to state 52
-- On Tfloat shift to state 40
-- On Tfalse shift to state 53
-- On Textern shift to state 103
-- On Tenum shift to state 66
-- On Tdynamic_cast shift to state 54
-- On Tdouble_Constr shift to state 55
-- On Tdouble shift to state 41
-- On Tdo shift to state 562
-- On Tdefault shift to state 563
-- On Tdecltype shift to state 45
-- On Tcontinue shift to state 565
-- On Tconstexpr shift to state 104
-- On Tconst_cast shift to state 56
-- On Tconst shift to state 76
-- On Tclass shift to state 77
-- On Tchar_Constr shift to state 57
-- On Tchar shift to state 58
-- On Tcase shift to state 566
-- On Tbreak shift to state 571
-- On Tbool_Constr shift to state 59
-- On Tbool shift to state 60
-- On Tauto shift to state 105
-- On Tasm shift to state 366
-- On TTilde shift to state 61
-- On TString shift to state 62
-- On TPlus shift to state 63
-- On TOPar shift to state 64
-- On TOCro_Lambda shift to state 78
-- On TOBrace shift to state 93
-- On TMul shift to state 88
-- On TMinus shift to state 89
-- On TInt shift to state 90
-- On TInc shift to state 91
-- On TIdent_TypedefConstr shift to state 106
-- On TIdent_Typedef shift to state 572
-- On TIdent_TemplatenameInQualifier_BeforeTypedef shift to state 21
-- On TIdent_TemplatenameInQualifier shift to state 12
-- On TIdent_Templatename shift to state 108
-- On TIdent_MacroString shift to state 110
-- On TIdent_MacroStmt shift to state 573
-- On TIdent_MacroIterator shift to state 574
-- On TIdent_MacroDecl shift to state 423
-- On TIdent_ClassnameInQualifier_BeforeTypedef shift to state 111
-- On TIdent_ClassnameInQualifier shift to state 112
-- On TIdent shift to state 578
-- On TFloat shift to state 116
-- On TEllipsis shift to state 580
-- On TDec shift to state 117
-- On TColCol_BeforeTypedef shift to state 118
-- On TColCol shift to state 128
-- On TChar shift to state 174
-- On TBang shift to state 175
-- On TAndLog shift to state 176
-- On TAnd shift to state 177
-- On LDots shift to state 178
-- On using_directive shift to state 581
-- On using_declaration shift to state 582
-- On unqualified_id shift to state 179
-- On unary_op shift to state 180
-- On unary_expr shift to state 181
-- On type_spec shift to state 314
-- On type_name shift to state 182
-- On type_cplusplus_id shift to state 183
-- On try_block shift to state 583
-- On template_id shift to state 120
-- On string_elem shift to state 184
-- On storage_class_spec shift to state 316
-- On statement shift to state 641
-- On simple_type_specifier shift to state 266
-- On simple_declaration shift to state 585
-- On shift_expr shift to state 217
-- On selection shift to state 586
-- On relational_expr shift to state 229
-- On qualified_id shift to state 191
-- On primary_expr shift to state 192
-- On primary_cplusplus_id shift to state 193
-- On postfix_expr shift to state 194
-- On pm_expr shift to state 219
-- On option(expr) shift to state 556
-- On option(TColCol) shift to state 221
-- On operator_function_id shift to state 168
-- On new_expr shift to state 233
-- On nested_name_specifier2 shift to state 207
-- On nested_name_specifier shift to state 165
-- On namespace_alias_definition shift to state 587
-- On multiplicative_expr shift to state 234
-- On logical_or_expr shift to state 246
-- On logical_and_expr shift to state 250
-- On literal shift to state 238
-- On lambda_introducer shift to state 239
-- On labeled shift to state 588
-- On jump shift to state 589
-- On iteration shift to state 591
-- On inclusive_or_expr shift to state 272
-- On ident shift to state 592
-- On id_expression shift to state 241
-- On function_spec shift to state 437
-- On function_definition shift to state 595
-- On expr_statement shift to state 596
-- On expr shift to state 597
-- On exclusive_or_expr shift to state 273
-- On equality_expr shift to state 256
-- On enum_specifier shift to state 209
-- On enum_name_or_typedef_name_or_simple_class_name shift to state 123
-- On enum_head shift to state 210
-- On elaborated_type_specifier shift to state 274
-- On delete_expr shift to state 242
-- On decltype_specifier shift to state 243
-- On declaration_statement shift to state 598
-- On decl_spec_seq shift to state 599
-- On decl_spec shift to state 473
-- On cv_qualif shift to state 475
-- On cpp_cast_operator shift to state 244
-- On conversion_function_id shift to state 169
-- On cond_expr shift to state 330
-- On compound shift to state 615
-- On class_specifier shift to state 277
-- On class_or_namespace_name_for_qualifier2 shift to state 124
-- On class_or_namespace_name_for_qualifier shift to state 170
-- On class_key shift to state 278
-- On class_head shift to state 301
-- On cast_operator_expr shift to state 261
-- On cast_expr shift to state 331
-- On cast_constructor_expr shift to state 263
-- On block_declaration shift to state 616
-- On basic_type_2 shift to state 264
-- On assign_expr shift to state 539
-- On asm_definition shift to state 617
-- On and_expr shift to state 334
-- On additive_expr shift to state 341
## Reductions:
-- On Tnew Tdelete
--   reduce production option(TColCol) ->
-- On TPtVirg
--   reduce production option(expr) ->

State 537:
## Known stack suffix:
## Treturn
## LR(1) items:
jump -> Treturn . [ TPtVirg ]
jump -> Treturn . expr [ TPtVirg ]
## Transitions:
-- On Twchar_t_Constr shift to state 14
-- On Twchar_t shift to state 1
-- On Tvoid shift to state 3
-- On Tunsigned shift to state 15
-- On Ttypeof shift to state 17
-- On Ttypeid shift to state 23
-- On Ttrue shift to state 25
-- On Tthrow shift to state 47
-- On Tthis shift to state 26
-- On Tstatic_cast shift to state 28
-- On Tsizeof shift to state 29
-- On Tsigned shift to state 30
-- On Tshort_Constr shift to state 31
-- On Tshort shift to state 32
-- On Treinterpret_cast shift to state 33
-- On Toperator shift to state 34
-- On Tnullptr shift to state 48
-- On Tnull shift to state 49
-- On Tlong_Constr shift to state 50
-- On Tlong shift to state 38
-- On Tint_Constr shift to state 51
-- On Tint shift to state 39
-- On Tfloat_Constr shift to state 52
-- On Tfloat shift to state 40
-- On Tfalse shift to state 53
-- On Tdynamic_cast shift to state 54
-- On Tdouble_Constr shift to state 55
-- On Tdouble shift to state 41
-- On Tdecltype shift to state 45
-- On Tconst_cast shift to state 56
-- On Tchar_Constr shift to state 57
-- On Tchar shift to state 58
-- On Tbool_Constr shift to state 59
-- On Tbool shift to state 60
-- On TTilde shift to state 61
-- On TString shift to state 62
-- On TPlus shift to state 63
-- On TOPar shift to state 64
-- On TOCro_Lambda shift to state 78
-- On TMul shift to state 88
-- On TMinus shift to state 89
-- On TInt shift to state 90
-- On TInc shift to state 91
-- On TIdent_TypedefConstr shift to state 106
-- On TIdent_Typedef shift to state 20
-- On TIdent_TemplatenameInQualifier_BeforeTypedef shift to state 21
-- On TIdent_TemplatenameInQualifier shift to state 12
-- On TIdent_Templatename shift to state 108
-- On TIdent_MacroString shift to state 110
-- On TIdent_ClassnameInQualifier_BeforeTypedef shift to state 111
-- On TIdent_ClassnameInQualifier shift to state 112
-- On TIdent shift to state 113
-- On TFloat shift to state 116
-- On TDec shift to state 117
-- On TColCol_BeforeTypedef shift to state 118
-- On TColCol shift to state 128
-- On TChar shift to state 174
-- On TBang shift to state 175
-- On TAndLog shift to state 176
-- On TAnd shift to state 177
-- On LDots shift to state 178
-- On unqualified_id shift to state 179
-- On unary_op shift to state 180
-- On unary_expr shift to state 181
-- On type_name shift to state 182
-- On type_cplusplus_id shift to state 183
-- On template_id shift to state 120
-- On string_elem shift to state 184
-- On simple_type_specifier shift to state 189
-- On shift_expr shift to state 217
-- On relational_expr shift to state 229
-- On qualified_id shift to state 191
-- On primary_expr shift to state 192
-- On primary_cplusplus_id shift to state 193
-- On postfix_expr shift to state 194
-- On pm_expr shift to state 219
-- On option(TColCol) shift to state 221
-- On operator_function_id shift to state 168
-- On new_expr shift to state 233
-- On nested_name_specifier2 shift to state 207
-- On nested_name_specifier shift to state 165
-- On multiplicative_expr shift to state 234
-- On logical_or_expr shift to state 246
-- On logical_and_expr shift to state 250
-- On literal shift to state 238
-- On lambda_introducer shift to state 239
-- On inclusive_or_expr shift to state 272
-- On id_expression shift to state 241
-- On expr shift to state 538
-- On exclusive_or_expr shift to state 273
-- On equality_expr shift to state 256
-- On enum_name_or_typedef_name_or_simple_class_name shift to state 123
-- On delete_expr shift to state 242
-- On decltype_specifier shift to state 243
-- On cpp_cast_operator shift to state 244
-- On conversion_function_id shift to state 169
-- On cond_expr shift to state 330
-- On class_or_namespace_name_for_qualifier2 shift to state 124
-- On class_or_namespace_name_for_qualifier shift to state 170
-- On cast_operator_expr shift to state 261
-- On cast_expr shift to state 331
-- On cast_constructor_expr shift to state 263
-- On basic_type_2 shift to state 264
-- On assign_expr shift to state 539
-- On and_expr shift to state 334
-- On additive_expr shift to state 341
## Reductions:
-- On TPtVirg
--   reduce production jump -> Treturn
-- On Tnew Tdelete
--   reduce production option(TColCol) ->

State 538:
## Known stack suffix:
## Treturn expr
## LR(1) items:
expr -> expr . TComma assign_expr [ TPtVirg TComma ]
jump -> Treturn expr . [ TPtVirg ]
## Transitions:
-- On TComma shift to state 518
## Reductions:
-- On TPtVirg
--   reduce production jump -> Treturn expr

State 539:
## Known stack suffix:
## assign_expr
## LR(1) items:
expr -> assign_expr . [ TPtVirg TCommentNewline_DefineEndOfMacro TComma TCol TCPar TCCro RDots EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production expr -> assign_expr

State 540:
## Known stack suffix:
## Tnamespace
## LR(1) items:
namespace_alias_definition -> Tnamespace . TIdent TEq qualified_namespace_spec TPtVirg [ Twhile Twchar_t_Constr Twchar_t Tvolatile Tvoid Tvirtual Tusing Tunsigned Tunion Ttypeof Ttypename Ttypeid Ttypedef Ttry Ttrue Tthrow Tthread_local Tthis Tswitch Tstruct Tstatic_cast Tstatic Tsizeof Tsigned Tshort_Constr Tshort Treturn Trestrict Treinterpret_cast Tregister Toperator Tnullptr Tnull Tnew Tnamespace Tmutable Tlong_Constr Tlong Tint_Constr Tint Tinline Tif Tgoto Tfriend Tfor Tfloat_Constr Tfloat Tfalse Textern Tenum Telse Tdynamic_cast Tdouble_Constr Tdouble Tdo Tdelete Tdefault Tdecltype Tcontinue Tconstexpr Tconst_cast Tconst Tclass Tchar_Constr Tchar Tcase Tbreak Tbool_Constr Tbool Tauto Tasm TUndef TTilde TString TPtVirg TPlus TOPar TOCro_Lambda TOBrace TMul TMinus TInt TInclude TInc TIfdefelse TIfdefelif TIfdefVersion TIfdefMisc TIfdefBool TIfdef TIdent_TypedefConstr TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_MacroString TIdent_MacroStmt TIdent_MacroIterator TIdent_MacroDecl TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TIdent TFloat TEndif TEllipsis TDefine TDec TCppDirectiveOther TCommentNewline_DefineEndOfMacro TColCol_BeforeTypedef TColCol TChar TCBrace TBang TAndLog TAnd LDots EOF ]
## Transitions:
-- On TIdent shift to state 541
## Reductions:

State 541:
## Known stack suffix:
## Tnamespace TIdent
## LR(1) items:
namespace_alias_definition -> Tnamespace TIdent . TEq qualified_namespace_spec TPtVirg [ Twhile Twchar_t_Constr Twchar_t Tvolatile Tvoid Tvirtual Tusing Tunsigned Tunion Ttypeof Ttypename Ttypeid Ttypedef Ttry Ttrue Tthrow Tthread_local Tthis Tswitch Tstruct Tstatic_cast Tstatic Tsizeof Tsigned Tshort_Constr Tshort Treturn Trestrict Treinterpret_cast Tregister Toperator Tnullptr Tnull Tnew Tnamespace Tmutable Tlong_Constr Tlong Tint_Constr Tint Tinline Tif Tgoto Tfriend Tfor Tfloat_Constr Tfloat Tfalse Textern Tenum Telse Tdynamic_cast Tdouble_Constr Tdouble Tdo Tdelete Tdefault Tdecltype Tcontinue Tconstexpr Tconst_cast Tconst Tclass Tchar_Constr Tchar Tcase Tbreak Tbool_Constr Tbool Tauto Tasm TUndef TTilde TString TPtVirg TPlus TOPar TOCro_Lambda TOBrace TMul TMinus TInt TInclude TInc TIfdefelse TIfdefelif TIfdefVersion TIfdefMisc TIfdefBool TIfdef TIdent_TypedefConstr TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_MacroString TIdent_MacroStmt TIdent_MacroIterator TIdent_MacroDecl TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TIdent TFloat TEndif TEllipsis TDefine TDec TCppDirectiveOther TCommentNewline_DefineEndOfMacro TColCol_BeforeTypedef TColCol TChar TCBrace TBang TAndLog TAnd LDots EOF ]
## Transitions:
-- On TEq shift to state 542
## Reductions:

State 542:
## Known stack suffix:
## Tnamespace TIdent TEq
## LR(1) items:
namespace_alias_definition -> Tnamespace TIdent TEq . qualified_namespace_spec TPtVirg [ Twhile Twchar_t_Constr Twchar_t Tvolatile Tvoid Tvirtual Tusing Tunsigned Tunion Ttypeof Ttypename Ttypeid Ttypedef Ttry Ttrue Tthrow Tthread_local Tthis Ttemplate Tswitch Tstruct Tstatic_cast Tstatic Tsizeof Tsigned Tshort_Constr Tshort Treturn Trestrict Treinterpret_cast Tregister Tpublic Tprotected Tprivate Toperator Tnullptr Tnull Tnew Tnamespace Tmutable Tlong_Constr Tlong Tint_Constr Tint Tinline Tif Tgoto Tfriend Tfor Tfloat_Constr Tfloat Tfalse Textern Texplicit Tenum Telse Tdynamic_cast Tdouble_Constr Tdouble Tdo Tdelete Tdefault Tdecltype Tcontinue Tconstexpr Tconst_cast Tconst Tclass Tchar_Constr Tchar Tcase Tbreak Tbool_Constr Tbool Tauto Tasm TUndef TTilde TString TPtVirg TPlus TOPar TOCro_Lambda TOBrace TMul TMinus TInt TInclude TInc TIfdefelse TIfdefelif TIfdefVersion TIfdefMisc TIfdefBool TIfdef TIdent_TypedefConstr TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_MacroString TIdent_MacroStmt TIdent_MacroIterator TIdent_MacroDecl TIdent_Constructor TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TIdent TFloat TEndif TEllipsis TDefine TDec TCppDirectiveOther TCommentNewline_DefineEndOfMacro TColCol_BeforeTypedef TColCol TChar TCBrace TBang TAndLog TAnd LDots EOF ]
## Transitions:
-- On TColCol shift to state 8
-- On qualified_namespace_spec shift to state 543
-- On option(TColCol) shift to state 11
## Reductions:
-- On TIdent_TemplatenameInQualifier TIdent_ClassnameInQualifier TIdent
--   reduce production option(TColCol) ->

State 543:
## Known stack suffix:
## Tnamespace TIdent TEq qualified_namespace_spec
## LR(1) items:
namespace_alias_definition -> Tnamespace TIdent TEq qualified_namespace_spec . TPtVirg [ Twhile Twchar_t_Constr Twchar_t Tvolatile Tvoid Tvirtual Tusing Tunsigned Tunion Ttypeof Ttypename Ttypeid Ttypedef Ttry Ttrue Tthrow Tthread_local Tthis Ttemplate Tswitch Tstruct Tstatic_cast Tstatic Tsizeof Tsigned Tshort_Constr Tshort Treturn Trestrict Treinterpret_cast Tregister Tpublic Tprotected Tprivate Toperator Tnullptr Tnull Tnew Tnamespace Tmutable Tlong_Constr Tlong Tint_Constr Tint Tinline Tif Tgoto Tfriend Tfor Tfloat_Constr Tfloat Tfalse Textern Texplicit Tenum Telse Tdynamic_cast Tdouble_Constr Tdouble Tdo Tdelete Tdefault Tdecltype Tcontinue Tconstexpr Tconst_cast Tconst Tclass Tchar_Constr Tchar Tcase Tbreak Tbool_Constr Tbool Tauto Tasm TUndef TTilde TString TPtVirg TPlus TOPar TOCro_Lambda TOBrace TMul TMinus TInt TInclude TInc TIfdefelse TIfdefelif TIfdefVersion TIfdefMisc TIfdefBool TIfdef TIdent_TypedefConstr TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_MacroString TIdent_MacroStmt TIdent_MacroIterator TIdent_MacroDecl TIdent_Constructor TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TIdent TFloat TEndif TEllipsis TDefine TDec TCppDirectiveOther TCommentNewline_DefineEndOfMacro TColCol_BeforeTypedef TColCol TChar TCBrace TBang TAndLog TAnd LDots EOF ]
## Transitions:
-- On TPtVirg shift to state 544
## Reductions:

State 544:
## Known stack suffix:
## Tnamespace TIdent TEq qualified_namespace_spec TPtVirg
## LR(1) items:
namespace_alias_definition -> Tnamespace TIdent TEq qualified_namespace_spec TPtVirg . [ Twhile Twchar_t_Constr Twchar_t Tvolatile Tvoid Tvirtual Tusing Tunsigned Tunion Ttypeof Ttypename Ttypeid Ttypedef Ttry Ttrue Tthrow Tthread_local Tthis Ttemplate Tswitch Tstruct Tstatic_cast Tstatic Tsizeof Tsigned Tshort_Constr Tshort Treturn Trestrict Treinterpret_cast Tregister Tpublic Tprotected Tprivate Toperator Tnullptr Tnull Tnew Tnamespace Tmutable Tlong_Constr Tlong Tint_Constr Tint Tinline Tif Tgoto Tfriend Tfor Tfloat_Constr Tfloat Tfalse Textern Texplicit Tenum Telse Tdynamic_cast Tdouble_Constr Tdouble Tdo Tdelete Tdefault Tdecltype Tcontinue Tconstexpr Tconst_cast Tconst Tclass Tchar_Constr Tchar Tcase Tbreak Tbool_Constr Tbool Tauto Tasm TUndef TTilde TString TPtVirg TPlus TOPar TOCro_Lambda TOBrace TMul TMinus TInt TInclude TInc TIfdefelse TIfdefelif TIfdefVersion TIfdefMisc TIfdefBool TIfdef TIdent_TypedefConstr TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_MacroString TIdent_MacroStmt TIdent_MacroIterator TIdent_MacroDecl TIdent_Constructor TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TIdent TFloat TEndif TEllipsis TDefine TDec TCppDirectiveOther TCommentNewline_DefineEndOfMacro TColCol_BeforeTypedef TColCol TChar TCBrace TBang TAndLog TAnd LDots EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production namespace_alias_definition -> Tnamespace TIdent TEq qualified_namespace_spec TPtVirg

State 545:
## Known stack suffix:
## Tif
## LR(1) items:
selection -> Tif . TOPar condition TCPar statement [ Twhile Twchar_t_Constr Twchar_t Tvolatile Tvoid Tvirtual Tusing Tunsigned Tunion Ttypeof Ttypename Ttypeid Ttypedef Ttry Ttrue Tthrow Tthread_local Tthis Tswitch Tstruct Tstatic_cast Tstatic Tsizeof Tsigned Tshort_Constr Tshort Treturn Trestrict Treinterpret_cast Tregister Toperator Tnullptr Tnull Tnew Tnamespace Tmutable Tlong_Constr Tlong Tint_Constr Tint Tinline Tif Tgoto Tfriend Tfor Tfloat_Constr Tfloat Tfalse Textern Tenum Telse Tdynamic_cast Tdouble_Constr Tdouble Tdo Tdelete Tdefault Tdecltype Tcontinue Tconstexpr Tconst_cast Tconst Tclass Tchar_Constr Tchar Tcase Tbreak Tbool_Constr Tbool Tauto Tasm TUndef TTilde TString TPtVirg TPlus TOPar TOCro_Lambda TOBrace TMul TMinus TInt TInclude TInc TIfdefelse TIfdefelif TIfdefVersion TIfdefMisc TIfdefBool TIfdef TIdent_TypedefConstr TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_MacroString TIdent_MacroStmt TIdent_MacroIterator TIdent_MacroDecl TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TIdent TFloat TEndif TEllipsis TDefine TDec TCppDirectiveOther TCommentNewline_DefineEndOfMacro TColCol_BeforeTypedef TColCol TChar TCBrace TBang TAndLog TAnd LDots EOF ]
selection -> Tif . TOPar condition TCPar statement Telse statement [ Twhile Twchar_t_Constr Twchar_t Tvolatile Tvoid Tvirtual Tusing Tunsigned Tunion Ttypeof Ttypename Ttypeid Ttypedef Ttry Ttrue Tthrow Tthread_local Tthis Tswitch Tstruct Tstatic_cast Tstatic Tsizeof Tsigned Tshort_Constr Tshort Treturn Trestrict Treinterpret_cast Tregister Toperator Tnullptr Tnull Tnew Tnamespace Tmutable Tlong_Constr Tlong Tint_Constr Tint Tinline Tif Tgoto Tfriend Tfor Tfloat_Constr Tfloat Tfalse Textern Tenum Telse Tdynamic_cast Tdouble_Constr Tdouble Tdo Tdelete Tdefault Tdecltype Tcontinue Tconstexpr Tconst_cast Tconst Tclass Tchar_Constr Tchar Tcase Tbreak Tbool_Constr Tbool Tauto Tasm TUndef TTilde TString TPtVirg TPlus TOPar TOCro_Lambda TOBrace TMul TMinus TInt TInclude TInc TIfdefelse TIfdefelif TIfdefVersion TIfdefMisc TIfdefBool TIfdef TIdent_TypedefConstr TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_MacroString TIdent_MacroStmt TIdent_MacroIterator TIdent_MacroDecl TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TIdent TFloat TEndif TEllipsis TDefine TDec TCppDirectiveOther TCommentNewline_DefineEndOfMacro TColCol_BeforeTypedef TColCol TChar TCBrace TBang TAndLog TAnd LDots EOF ]
## Transitions:
-- On TOPar shift to state 546
## Reductions:

State 546:
## Known stack suffix:
## Tif TOPar
## LR(1) items:
selection -> Tif TOPar . condition TCPar statement [ Twhile Twchar_t_Constr Twchar_t Tvolatile Tvoid Tvirtual Tusing Tunsigned Tunion Ttypeof Ttypename Ttypeid Ttypedef Ttry Ttrue Tthrow Tthread_local Tthis Tswitch Tstruct Tstatic_cast Tstatic Tsizeof Tsigned Tshort_Constr Tshort Treturn Trestrict Treinterpret_cast Tregister Toperator Tnullptr Tnull Tnew Tnamespace Tmutable Tlong_Constr Tlong Tint_Constr Tint Tinline Tif Tgoto Tfriend Tfor Tfloat_Constr Tfloat Tfalse Textern Tenum Telse Tdynamic_cast Tdouble_Constr Tdouble Tdo Tdelete Tdefault Tdecltype Tcontinue Tconstexpr Tconst_cast Tconst Tclass Tchar_Constr Tchar Tcase Tbreak Tbool_Constr Tbool Tauto Tasm TUndef TTilde TString TPtVirg TPlus TOPar TOCro_Lambda TOBrace TMul TMinus TInt TInclude TInc TIfdefelse TIfdefelif TIfdefVersion TIfdefMisc TIfdefBool TIfdef TIdent_TypedefConstr TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_MacroString TIdent_MacroStmt TIdent_MacroIterator TIdent_MacroDecl TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TIdent TFloat TEndif TEllipsis TDefine TDec TCppDirectiveOther TCommentNewline_DefineEndOfMacro TColCol_BeforeTypedef TColCol TChar TCBrace TBang TAndLog TAnd LDots EOF ]
selection -> Tif TOPar . condition TCPar statement Telse statement [ Twhile Twchar_t_Constr Twchar_t Tvolatile Tvoid Tvirtual Tusing Tunsigned Tunion Ttypeof Ttypename Ttypeid Ttypedef Ttry Ttrue Tthrow Tthread_local Tthis Tswitch Tstruct Tstatic_cast Tstatic Tsizeof Tsigned Tshort_Constr Tshort Treturn Trestrict Treinterpret_cast Tregister Toperator Tnullptr Tnull Tnew Tnamespace Tmutable Tlong_Constr Tlong Tint_Constr Tint Tinline Tif Tgoto Tfriend Tfor Tfloat_Constr Tfloat Tfalse Textern Tenum Telse Tdynamic_cast Tdouble_Constr Tdouble Tdo Tdelete Tdefault Tdecltype Tcontinue Tconstexpr Tconst_cast Tconst Tclass Tchar_Constr Tchar Tcase Tbreak Tbool_Constr Tbool Tauto Tasm TUndef TTilde TString TPtVirg TPlus TOPar TOCro_Lambda TOBrace TMul TMinus TInt TInclude TInc TIfdefelse TIfdefelif TIfdefVersion TIfdefMisc TIfdefBool TIfdef TIdent_TypedefConstr TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_MacroString TIdent_MacroStmt TIdent_MacroIterator TIdent_MacroDecl TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TIdent TFloat TEndif TEllipsis TDefine TDec TCppDirectiveOther TCommentNewline_DefineEndOfMacro TColCol_BeforeTypedef TColCol TChar TCBrace TBang TAndLog TAnd LDots EOF ]
## Transitions:
-- On Twchar_t_Constr shift to state 14
-- On Twchar_t shift to state 1
-- On Tvolatile shift to state 2
-- On Tvoid shift to state 3
-- On Tvirtual shift to state 4
-- On Tunsigned shift to state 15
-- On Tunion shift to state 16
-- On Ttypeof shift to state 17
-- On Ttypename shift to state 19
-- On Ttypeid shift to state 23
-- On Ttypedef shift to state 96
-- On Ttrue shift to state 25
-- On Tthrow shift to state 47
-- On Tthread_local shift to state 97
-- On Tthis shift to state 26
-- On Tstruct shift to state 27
-- On Tstatic_cast shift to state 28
-- On Tstatic shift to state 98
-- On Tsizeof shift to state 29
-- On Tsigned shift to state 30
-- On Tshort_Constr shift to state 31
-- On Tshort shift to state 32
-- On Trestrict shift to state 65
-- On Treinterpret_cast shift to state 33
-- On Tregister shift to state 99
-- On Toperator shift to state 34
-- On Tnullptr shift to state 48
-- On Tnull shift to state 49
-- On Tmutable shift to state 100
-- On Tlong_Constr shift to state 50
-- On Tlong shift to state 38
-- On Tint_Constr shift to state 51
-- On Tint shift to state 39
-- On Tinline shift to state 101
-- On Tfriend shift to state 102
-- On Tfloat_Constr shift to state 52
-- On Tfloat shift to state 40
-- On Tfalse shift to state 53
-- On Textern shift to state 103
-- On Tenum shift to state 66
-- On Tdynamic_cast shift to state 54
-- On Tdouble_Constr shift to state 55
-- On Tdouble shift to state 41
-- On Tdecltype shift to state 45
-- On Tconstexpr shift to state 104
-- On Tconst_cast shift to state 56
-- On Tconst shift to state 76
-- On Tclass shift to state 77
-- On Tchar_Constr shift to state 57
-- On Tchar shift to state 58
-- On Tbool_Constr shift to state 59
-- On Tbool shift to state 60
-- On Tauto shift to state 105
-- On TTilde shift to state 61
-- On TString shift to state 62
-- On TPlus shift to state 63
-- On TOPar shift to state 64
-- On TOCro_Lambda shift to state 78
-- On TMul shift to state 88
-- On TMinus shift to state 89
-- On TInt shift to state 90
-- On TInc shift to state 91
-- On TIdent_TypedefConstr shift to state 106
-- On TIdent_Typedef shift to state 20
-- On TIdent_TemplatenameInQualifier_BeforeTypedef shift to state 21
-- On TIdent_TemplatenameInQualifier shift to state 12
-- On TIdent_Templatename shift to state 108
-- On TIdent_MacroString shift to state 110
-- On TIdent_ClassnameInQualifier_BeforeTypedef shift to state 111
-- On TIdent_ClassnameInQualifier shift to state 112
-- On TIdent shift to state 113
-- On TFloat shift to state 116
-- On TDec shift to state 117
-- On TColCol_BeforeTypedef shift to state 118
-- On TColCol shift to state 128
-- On TChar shift to state 174
-- On TBang shift to state 175
-- On TAndLog shift to state 176
-- On TAnd shift to state 177
-- On LDots shift to state 178
-- On unqualified_id shift to state 179
-- On unary_op shift to state 180
-- On unary_expr shift to state 181
-- On type_spec shift to state 314
-- On type_name shift to state 182
-- On type_cplusplus_id shift to state 183
-- On template_id shift to state 120
-- On string_elem shift to state 184
-- On storage_class_spec shift to state 316
-- On simple_type_specifier shift to state 266
-- On shift_expr shift to state 217
-- On relational_expr shift to state 229
-- On qualified_id shift to state 191
-- On primary_expr shift to state 192
-- On primary_cplusplus_id shift to state 193
-- On postfix_expr shift to state 194
-- On pm_expr shift to state 219
-- On option(TColCol) shift to state 221
-- On operator_function_id shift to state 168
-- On new_expr shift to state 233
-- On nested_name_specifier2 shift to state 207
-- On nested_name_specifier shift to state 165
-- On multiplicative_expr shift to state 234
-- On logical_or_expr shift to state 246
-- On logical_and_expr shift to state 250
-- On literal shift to state 238
-- On lambda_introducer shift to state 239
-- On inclusive_or_expr shift to state 272
-- On id_expression shift to state 241
-- On function_spec shift to state 437
-- On expr shift to state 517
-- On exclusive_or_expr shift to state 273
-- On equality_expr shift to state 256
-- On enum_specifier shift to state 209
-- On enum_name_or_typedef_name_or_simple_class_name shift to state 123
-- On enum_head shift to state 210
-- On elaborated_type_specifier shift to state 274
-- On delete_expr shift to state 242
-- On decltype_specifier shift to state 243
-- On decl_spec_seq shift to state 520
-- On decl_spec shift to state 473
-- On cv_qualif shift to state 475
-- On cpp_cast_operator shift to state 244
-- On conversion_function_id shift to state 169
-- On condition shift to state 547
-- On cond_expr shift to state 330
-- On class_specifier shift to state 277
-- On class_or_namespace_name_for_qualifier2 shift to state 124
-- On class_or_namespace_name_for_qualifier shift to state 170
-- On class_key shift to state 278
-- On class_head shift to state 301
-- On cast_operator_expr shift to state 261
-- On cast_expr shift to state 331
-- On cast_constructor_expr shift to state 263
-- On basic_type_2 shift to state 264
-- On assign_expr shift to state 539
-- On and_expr shift to state 334
-- On additive_expr shift to state 341
## Reductions:
-- On Tnew Tdelete
--   reduce production option(TColCol) ->

State 547:
## Known stack suffix:
## Tif TOPar condition
## LR(1) items:
selection -> Tif TOPar condition . TCPar statement [ Twhile Twchar_t_Constr Twchar_t Tvolatile Tvoid Tvirtual Tusing Tunsigned Tunion Ttypeof Ttypename Ttypeid Ttypedef Ttry Ttrue Tthrow Tthread_local Tthis Tswitch Tstruct Tstatic_cast Tstatic Tsizeof Tsigned Tshort_Constr Tshort Treturn Trestrict Treinterpret_cast Tregister Toperator Tnullptr Tnull Tnew Tnamespace Tmutable Tlong_Constr Tlong Tint_Constr Tint Tinline Tif Tgoto Tfriend Tfor Tfloat_Constr Tfloat Tfalse Textern Tenum Telse Tdynamic_cast Tdouble_Constr Tdouble Tdo Tdelete Tdefault Tdecltype Tcontinue Tconstexpr Tconst_cast Tconst Tclass Tchar_Constr Tchar Tcase Tbreak Tbool_Constr Tbool Tauto Tasm TUndef TTilde TString TPtVirg TPlus TOPar TOCro_Lambda TOBrace TMul TMinus TInt TInclude TInc TIfdefelse TIfdefelif TIfdefVersion TIfdefMisc TIfdefBool TIfdef TIdent_TypedefConstr TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_MacroString TIdent_MacroStmt TIdent_MacroIterator TIdent_MacroDecl TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TIdent TFloat TEndif TEllipsis TDefine TDec TCppDirectiveOther TCommentNewline_DefineEndOfMacro TColCol_BeforeTypedef TColCol TChar TCBrace TBang TAndLog TAnd LDots EOF ]
selection -> Tif TOPar condition . TCPar statement Telse statement [ Twhile Twchar_t_Constr Twchar_t Tvolatile Tvoid Tvirtual Tusing Tunsigned Tunion Ttypeof Ttypename Ttypeid Ttypedef Ttry Ttrue Tthrow Tthread_local Tthis Tswitch Tstruct Tstatic_cast Tstatic Tsizeof Tsigned Tshort_Constr Tshort Treturn Trestrict Treinterpret_cast Tregister Toperator Tnullptr Tnull Tnew Tnamespace Tmutable Tlong_Constr Tlong Tint_Constr Tint Tinline Tif Tgoto Tfriend Tfor Tfloat_Constr Tfloat Tfalse Textern Tenum Telse Tdynamic_cast Tdouble_Constr Tdouble Tdo Tdelete Tdefault Tdecltype Tcontinue Tconstexpr Tconst_cast Tconst Tclass Tchar_Constr Tchar Tcase Tbreak Tbool_Constr Tbool Tauto Tasm TUndef TTilde TString TPtVirg TPlus TOPar TOCro_Lambda TOBrace TMul TMinus TInt TInclude TInc TIfdefelse TIfdefelif TIfdefVersion TIfdefMisc TIfdefBool TIfdef TIdent_TypedefConstr TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_MacroString TIdent_MacroStmt TIdent_MacroIterator TIdent_MacroDecl TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TIdent TFloat TEndif TEllipsis TDefine TDec TCppDirectiveOther TCommentNewline_DefineEndOfMacro TColCol_BeforeTypedef TColCol TChar TCBrace TBang TAndLog TAnd LDots EOF ]
## Transitions:
-- On TCPar shift to state 548
## Reductions:

State 548:
## Known stack suffix:
## Tif TOPar condition TCPar
## LR(1) items:
selection -> Tif TOPar condition TCPar . statement [ Twhile Twchar_t_Constr Twchar_t Tvolatile Tvoid Tvirtual Tusing Tunsigned Tunion Ttypeof Ttypename Ttypeid Ttypedef Ttry Ttrue Tthrow Tthread_local Tthis Tswitch Tstruct Tstatic_cast Tstatic Tsizeof Tsigned Tshort_Constr Tshort Treturn Trestrict Treinterpret_cast Tregister Toperator Tnullptr Tnull Tnew Tnamespace Tmutable Tlong_Constr Tlong Tint_Constr Tint Tinline Tif Tgoto Tfriend Tfor Tfloat_Constr Tfloat Tfalse Textern Tenum Telse Tdynamic_cast Tdouble_Constr Tdouble Tdo Tdelete Tdefault Tdecltype Tcontinue Tconstexpr Tconst_cast Tconst Tclass Tchar_Constr Tchar Tcase Tbreak Tbool_Constr Tbool Tauto Tasm TUndef TTilde TString TPtVirg TPlus TOPar TOCro_Lambda TOBrace TMul TMinus TInt TInclude TInc TIfdefelse TIfdefelif TIfdefVersion TIfdefMisc TIfdefBool TIfdef TIdent_TypedefConstr TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_MacroString TIdent_MacroStmt TIdent_MacroIterator TIdent_MacroDecl TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TIdent TFloat TEndif TEllipsis TDefine TDec TCppDirectiveOther TCommentNewline_DefineEndOfMacro TColCol_BeforeTypedef TColCol TChar TCBrace TBang TAndLog TAnd LDots EOF ]
selection -> Tif TOPar condition TCPar . statement Telse statement [ Twhile Twchar_t_Constr Twchar_t Tvolatile Tvoid Tvirtual Tusing Tunsigned Tunion Ttypeof Ttypename Ttypeid Ttypedef Ttry Ttrue Tthrow Tthread_local Tthis Tswitch Tstruct Tstatic_cast Tstatic Tsizeof Tsigned Tshort_Constr Tshort Treturn Trestrict Treinterpret_cast Tregister Toperator Tnullptr Tnull Tnew Tnamespace Tmutable Tlong_Constr Tlong Tint_Constr Tint Tinline Tif Tgoto Tfriend Tfor Tfloat_Constr Tfloat Tfalse Textern Tenum Telse Tdynamic_cast Tdouble_Constr Tdouble Tdo Tdelete Tdefault Tdecltype Tcontinue Tconstexpr Tconst_cast Tconst Tclass Tchar_Constr Tchar Tcase Tbreak Tbool_Constr Tbool Tauto Tasm TUndef TTilde TString TPtVirg TPlus TOPar TOCro_Lambda TOBrace TMul TMinus TInt TInclude TInc TIfdefelse TIfdefelif TIfdefVersion TIfdefMisc TIfdefBool TIfdef TIdent_TypedefConstr TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_MacroString TIdent_MacroStmt TIdent_MacroIterator TIdent_MacroDecl TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TIdent TFloat TEndif TEllipsis TDefine TDec TCppDirectiveOther TCommentNewline_DefineEndOfMacro TColCol_BeforeTypedef TColCol TChar TCBrace TBang TAndLog TAnd LDots EOF ]
## Transitions:
-- On Twhile shift to state 94
-- On Twchar_t_Constr shift to state 14
-- On Twchar_t shift to state 1
-- On Tvolatile shift to state 2
-- On Tvoid shift to state 3
-- On Tvirtual shift to state 4
-- On Tusing shift to state 5
-- On Tunsigned shift to state 15
-- On Tunion shift to state 16
-- On Ttypeof shift to state 17
-- On Ttypename shift to state 19
-- On Ttypeid shift to state 23
-- On Ttypedef shift to state 96
-- On Ttry shift to state 431
-- On Ttrue shift to state 25
-- On Tthrow shift to state 47
-- On Tthread_local shift to state 97
-- On Tthis shift to state 26
-- On Tswitch shift to state 515
-- On Tstruct shift to state 27
-- On Tstatic_cast shift to state 28
-- On Tstatic shift to state 323
-- On Tsizeof shift to state 29
-- On Tsigned shift to state 30
-- On Tshort_Constr shift to state 31
-- On Tshort shift to state 32
-- On Treturn shift to state 537
-- On Trestrict shift to state 65
-- On Treinterpret_cast shift to state 33
-- On Tregister shift to state 99
-- On Toperator shift to state 34
-- On Tnullptr shift to state 48
-- On Tnull shift to state 49
-- On Tnamespace shift to state 540
-- On Tmutable shift to state 100
-- On Tlong_Constr shift to state 50
-- On Tlong shift to state 38
-- On Tint_Constr shift to state 51
-- On Tint shift to state 39
-- On Tinline shift to state 101
-- On Tif shift to state 545
-- On Tgoto shift to state 549
-- On Tfriend shift to state 102
-- On Tfor shift to state 553
-- On Tfloat_Constr shift to state 52
-- On Tfloat shift to state 40
-- On Tfalse shift to state 53
-- On Textern shift to state 103
-- On Tenum shift to state 66
-- On Tdynamic_cast shift to state 54
-- On Tdouble_Constr shift to state 55
-- On Tdouble shift to state 41
-- On Tdo shift to state 562
-- On Tdefault shift to state 563
-- On Tdecltype shift to state 45
-- On Tcontinue shift to state 565
-- On Tconstexpr shift to state 104
-- On Tconst_cast shift to state 56
-- On Tconst shift to state 76
-- On Tclass shift to state 77
-- On Tchar_Constr shift to state 57
-- On Tchar shift to state 58
-- On Tcase shift to state 566
-- On Tbreak shift to state 571
-- On Tbool_Constr shift to state 59
-- On Tbool shift to state 60
-- On Tauto shift to state 105
-- On Tasm shift to state 366
-- On TTilde shift to state 61
-- On TString shift to state 62
-- On TPlus shift to state 63
-- On TOPar shift to state 64
-- On TOCro_Lambda shift to state 78
-- On TOBrace shift to state 93
-- On TMul shift to state 88
-- On TMinus shift to state 89
-- On TInt shift to state 90
-- On TInc shift to state 91
-- On TIdent_TypedefConstr shift to state 106
-- On TIdent_Typedef shift to state 572
-- On TIdent_TemplatenameInQualifier_BeforeTypedef shift to state 21
-- On TIdent_TemplatenameInQualifier shift to state 12
-- On TIdent_Templatename shift to state 108
-- On TIdent_MacroString shift to state 110
-- On TIdent_MacroStmt shift to state 573
-- On TIdent_MacroIterator shift to state 574
-- On TIdent_MacroDecl shift to state 423
-- On TIdent_ClassnameInQualifier_BeforeTypedef shift to state 111
-- On TIdent_ClassnameInQualifier shift to state 112
-- On TIdent shift to state 578
-- On TFloat shift to state 116
-- On TEllipsis shift to state 580
-- On TDec shift to state 117
-- On TColCol_BeforeTypedef shift to state 118
-- On TColCol shift to state 128
-- On TChar shift to state 174
-- On TBang shift to state 175
-- On TAndLog shift to state 176
-- On TAnd shift to state 177
-- On LDots shift to state 178
-- On using_directive shift to state 581
-- On using_declaration shift to state 582
-- On unqualified_id shift to state 179
-- On unary_op shift to state 180
-- On unary_expr shift to state 181
-- On type_spec shift to state 314
-- On type_name shift to state 182
-- On type_cplusplus_id shift to state 183
-- On try_block shift to state 583
-- On template_id shift to state 120
-- On string_elem shift to state 184
-- On storage_class_spec shift to state 316
-- On statement shift to state 638
-- On simple_type_specifier shift to state 266
-- On simple_declaration shift to state 585
-- On shift_expr shift to state 217
-- On selection shift to state 586
-- On relational_expr shift to state 229
-- On qualified_id shift to state 191
-- On primary_expr shift to state 192
-- On primary_cplusplus_id shift to state 193
-- On postfix_expr shift to state 194
-- On pm_expr shift to state 219
-- On option(expr) shift to state 556
-- On option(TColCol) shift to state 221
-- On operator_function_id shift to state 168
-- On new_expr shift to state 233
-- On nested_name_specifier2 shift to state 207
-- On nested_name_specifier shift to state 165
-- On namespace_alias_definition shift to state 587
-- On multiplicative_expr shift to state 234
-- On logical_or_expr shift to state 246
-- On logical_and_expr shift to state 250
-- On literal shift to state 238
-- On lambda_introducer shift to state 239
-- On labeled shift to state 588
-- On jump shift to state 589
-- On iteration shift to state 591
-- On inclusive_or_expr shift to state 272
-- On ident shift to state 592
-- On id_expression shift to state 241
-- On function_spec shift to state 437
-- On function_definition shift to state 595
-- On expr_statement shift to state 596
-- On expr shift to state 597
-- On exclusive_or_expr shift to state 273
-- On equality_expr shift to state 256
-- On enum_specifier shift to state 209
-- On enum_name_or_typedef_name_or_simple_class_name shift to state 123
-- On enum_head shift to state 210
-- On elaborated_type_specifier shift to state 274
-- On delete_expr shift to state 242
-- On decltype_specifier shift to state 243
-- On declaration_statement shift to state 598
-- On decl_spec_seq shift to state 599
-- On decl_spec shift to state 473
-- On cv_qualif shift to state 475
-- On cpp_cast_operator shift to state 244
-- On conversion_function_id shift to state 169
-- On cond_expr shift to state 330
-- On compound shift to state 615
-- On class_specifier shift to state 277
-- On class_or_namespace_name_for_qualifier2 shift to state 124
-- On class_or_namespace_name_for_qualifier shift to state 170
-- On class_key shift to state 278
-- On class_head shift to state 301
-- On cast_operator_expr shift to state 261
-- On cast_expr shift to state 331
-- On cast_constructor_expr shift to state 263
-- On block_declaration shift to state 616
-- On basic_type_2 shift to state 264
-- On assign_expr shift to state 539
-- On asm_definition shift to state 617
-- On and_expr shift to state 334
-- On additive_expr shift to state 341
## Reductions:
-- On Tnew Tdelete
--   reduce production option(TColCol) ->
-- On TPtVirg
--   reduce production option(expr) ->

State 549:
## Known stack suffix:
## Tgoto
## LR(1) items:
jump -> Tgoto . ident [ TPtVirg ]
jump -> Tgoto . TMul expr [ TPtVirg ]
## Transitions:
-- On TMul shift to state 550
-- On TIdent_Typedef shift to state 68
-- On TIdent shift to state 69
-- On ident shift to state 552
## Reductions:

State 550:
## Known stack suffix:
## Tgoto TMul
## LR(1) items:
jump -> Tgoto TMul . expr [ TPtVirg ]
## Transitions:
-- On Twchar_t_Constr shift to state 14
-- On Twchar_t shift to state 1
-- On Tvoid shift to state 3
-- On Tunsigned shift to state 15
-- On Ttypeof shift to state 17
-- On Ttypeid shift to state 23
-- On Ttrue shift to state 25
-- On Tthrow shift to state 47
-- On Tthis shift to state 26
-- On Tstatic_cast shift to state 28
-- On Tsizeof shift to state 29
-- On Tsigned shift to state 30
-- On Tshort_Constr shift to state 31
-- On Tshort shift to state 32
-- On Treinterpret_cast shift to state 33
-- On Toperator shift to state 34
-- On Tnullptr shift to state 48
-- On Tnull shift to state 49
-- On Tlong_Constr shift to state 50
-- On Tlong shift to state 38
-- On Tint_Constr shift to state 51
-- On Tint shift to state 39
-- On Tfloat_Constr shift to state 52
-- On Tfloat shift to state 40
-- On Tfalse shift to state 53
-- On Tdynamic_cast shift to state 54
-- On Tdouble_Constr shift to state 55
-- On Tdouble shift to state 41
-- On Tdecltype shift to state 45
-- On Tconst_cast shift to state 56
-- On Tchar_Constr shift to state 57
-- On Tchar shift to state 58
-- On Tbool_Constr shift to state 59
-- On Tbool shift to state 60
-- On TTilde shift to state 61
-- On TString shift to state 62
-- On TPlus shift to state 63
-- On TOPar shift to state 64
-- On TOCro_Lambda shift to state 78
-- On TMul shift to state 88
-- On TMinus shift to state 89
-- On TInt shift to state 90
-- On TInc shift to state 91
-- On TIdent_TypedefConstr shift to state 106
-- On TIdent_Typedef shift to state 20
-- On TIdent_TemplatenameInQualifier_BeforeTypedef shift to state 21
-- On TIdent_TemplatenameInQualifier shift to state 12
-- On TIdent_Templatename shift to state 108
-- On TIdent_MacroString shift to state 110
-- On TIdent_ClassnameInQualifier_BeforeTypedef shift to state 111
-- On TIdent_ClassnameInQualifier shift to state 112
-- On TIdent shift to state 113
-- On TFloat shift to state 116
-- On TDec shift to state 117
-- On TColCol_BeforeTypedef shift to state 118
-- On TColCol shift to state 128
-- On TChar shift to state 174
-- On TBang shift to state 175
-- On TAndLog shift to state 176
-- On TAnd shift to state 177
-- On LDots shift to state 178
-- On unqualified_id shift to state 179
-- On unary_op shift to state 180
-- On unary_expr shift to state 181
-- On type_name shift to state 182
-- On type_cplusplus_id shift to state 183
-- On template_id shift to state 120
-- On string_elem shift to state 184
-- On simple_type_specifier shift to state 189
-- On shift_expr shift to state 217
-- On relational_expr shift to state 229
-- On qualified_id shift to state 191
-- On primary_expr shift to state 192
-- On primary_cplusplus_id shift to state 193
-- On postfix_expr shift to state 194
-- On pm_expr shift to state 219
-- On option(TColCol) shift to state 221
-- On operator_function_id shift to state 168
-- On new_expr shift to state 233
-- On nested_name_specifier2 shift to state 207
-- On nested_name_specifier shift to state 165
-- On multiplicative_expr shift to state 234
-- On logical_or_expr shift to state 246
-- On logical_and_expr shift to state 250
-- On literal shift to state 238
-- On lambda_introducer shift to state 239
-- On inclusive_or_expr shift to state 272
-- On id_expression shift to state 241
-- On expr shift to state 551
-- On exclusive_or_expr shift to state 273
-- On equality_expr shift to state 256
-- On enum_name_or_typedef_name_or_simple_class_name shift to state 123
-- On delete_expr shift to state 242
-- On decltype_specifier shift to state 243
-- On cpp_cast_operator shift to state 244
-- On conversion_function_id shift to state 169
-- On cond_expr shift to state 330
-- On class_or_namespace_name_for_qualifier2 shift to state 124
-- On class_or_namespace_name_for_qualifier shift to state 170
-- On cast_operator_expr shift to state 261
-- On cast_expr shift to state 331
-- On cast_constructor_expr shift to state 263
-- On basic_type_2 shift to state 264
-- On assign_expr shift to state 539
-- On and_expr shift to state 334
-- On additive_expr shift to state 341
## Reductions:
-- On Tnew Tdelete
--   reduce production option(TColCol) ->

State 551:
## Known stack suffix:
## Tgoto TMul expr
## LR(1) items:
expr -> expr . TComma assign_expr [ TPtVirg TComma ]
jump -> Tgoto TMul expr . [ TPtVirg ]
## Transitions:
-- On TComma shift to state 518
## Reductions:
-- On TPtVirg
--   reduce production jump -> Tgoto TMul expr

State 552:
## Known stack suffix:
## Tgoto ident
## LR(1) items:
jump -> Tgoto ident . [ TPtVirg ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production jump -> Tgoto ident

State 553:
## Known stack suffix:
## Tfor
## LR(1) items:
iteration -> Tfor . TOPar for_init_stmt expr_statement option(expr) TCPar statement [ Twhile Twchar_t_Constr Twchar_t Tvolatile Tvoid Tvirtual Tusing Tunsigned Tunion Ttypeof Ttypename Ttypeid Ttypedef Ttry Ttrue Tthrow Tthread_local Tthis Tswitch Tstruct Tstatic_cast Tstatic Tsizeof Tsigned Tshort_Constr Tshort Treturn Trestrict Treinterpret_cast Tregister Toperator Tnullptr Tnull Tnew Tnamespace Tmutable Tlong_Constr Tlong Tint_Constr Tint Tinline Tif Tgoto Tfriend Tfor Tfloat_Constr Tfloat Tfalse Textern Tenum Telse Tdynamic_cast Tdouble_Constr Tdouble Tdo Tdelete Tdefault Tdecltype Tcontinue Tconstexpr Tconst_cast Tconst Tclass Tchar_Constr Tchar Tcase Tbreak Tbool_Constr Tbool Tauto Tasm TUndef TTilde TString TPtVirg TPlus TOPar TOCro_Lambda TOBrace TMul TMinus TInt TInclude TInc TIfdefelse TIfdefelif TIfdefVersion TIfdefMisc TIfdefBool TIfdef TIdent_TypedefConstr TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_MacroString TIdent_MacroStmt TIdent_MacroIterator TIdent_MacroDecl TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TIdent TFloat TEndif TEllipsis TDefine TDec TCppDirectiveOther TCommentNewline_DefineEndOfMacro TColCol_BeforeTypedef TColCol TChar TCBrace TBang TAndLog TAnd LDots EOF ]
iteration -> Tfor . TOPar for_range_decl TCol for_range_init TCPar statement [ Twhile Twchar_t_Constr Twchar_t Tvolatile Tvoid Tvirtual Tusing Tunsigned Tunion Ttypeof Ttypename Ttypeid Ttypedef Ttry Ttrue Tthrow Tthread_local Tthis Tswitch Tstruct Tstatic_cast Tstatic Tsizeof Tsigned Tshort_Constr Tshort Treturn Trestrict Treinterpret_cast Tregister Toperator Tnullptr Tnull Tnew Tnamespace Tmutable Tlong_Constr Tlong Tint_Constr Tint Tinline Tif Tgoto Tfriend Tfor Tfloat_Constr Tfloat Tfalse Textern Tenum Telse Tdynamic_cast Tdouble_Constr Tdouble Tdo Tdelete Tdefault Tdecltype Tcontinue Tconstexpr Tconst_cast Tconst Tclass Tchar_Constr Tchar Tcase Tbreak Tbool_Constr Tbool Tauto Tasm TUndef TTilde TString TPtVirg TPlus TOPar TOCro_Lambda TOBrace TMul TMinus TInt TInclude TInc TIfdefelse TIfdefelif TIfdefVersion TIfdefMisc TIfdefBool TIfdef TIdent_TypedefConstr TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_MacroString TIdent_MacroStmt TIdent_MacroIterator TIdent_MacroDecl TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TIdent TFloat TEndif TEllipsis TDefine TDec TCppDirectiveOther TCommentNewline_DefineEndOfMacro TColCol_BeforeTypedef TColCol TChar TCBrace TBang TAndLog TAnd LDots EOF ]
## Transitions:
-- On TOPar shift to state 554
## Reductions:

State 554:
## Known stack suffix:
## Tfor TOPar
## LR(1) items:
iteration -> Tfor TOPar . for_init_stmt expr_statement option(expr) TCPar statement [ Twhile Twchar_t_Constr Twchar_t Tvolatile Tvoid Tvirtual Tusing Tunsigned Tunion Ttypeof Ttypename Ttypeid Ttypedef Ttry Ttrue Tthrow Tthread_local Tthis Tswitch Tstruct Tstatic_cast Tstatic Tsizeof Tsigned Tshort_Constr Tshort Treturn Trestrict Treinterpret_cast Tregister Toperator Tnullptr Tnull Tnew Tnamespace Tmutable Tlong_Constr Tlong Tint_Constr Tint Tinline Tif Tgoto Tfriend Tfor Tfloat_Constr Tfloat Tfalse Textern Tenum Telse Tdynamic_cast Tdouble_Constr Tdouble Tdo Tdelete Tdefault Tdecltype Tcontinue Tconstexpr Tconst_cast Tconst Tclass Tchar_Constr Tchar Tcase Tbreak Tbool_Constr Tbool Tauto Tasm TUndef TTilde TString TPtVirg TPlus TOPar TOCro_Lambda TOBrace TMul TMinus TInt TInclude TInc TIfdefelse TIfdefelif TIfdefVersion TIfdefMisc TIfdefBool TIfdef TIdent_TypedefConstr TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_MacroString TIdent_MacroStmt TIdent_MacroIterator TIdent_MacroDecl TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TIdent TFloat TEndif TEllipsis TDefine TDec TCppDirectiveOther TCommentNewline_DefineEndOfMacro TColCol_BeforeTypedef TColCol TChar TCBrace TBang TAndLog TAnd LDots EOF ]
iteration -> Tfor TOPar . for_range_decl TCol for_range_init TCPar statement [ Twhile Twchar_t_Constr Twchar_t Tvolatile Tvoid Tvirtual Tusing Tunsigned Tunion Ttypeof Ttypename Ttypeid Ttypedef Ttry Ttrue Tthrow Tthread_local Tthis Tswitch Tstruct Tstatic_cast Tstatic Tsizeof Tsigned Tshort_Constr Tshort Treturn Trestrict Treinterpret_cast Tregister Toperator Tnullptr Tnull Tnew Tnamespace Tmutable Tlong_Constr Tlong Tint_Constr Tint Tinline Tif Tgoto Tfriend Tfor Tfloat_Constr Tfloat Tfalse Textern Tenum Telse Tdynamic_cast Tdouble_Constr Tdouble Tdo Tdelete Tdefault Tdecltype Tcontinue Tconstexpr Tconst_cast Tconst Tclass Tchar_Constr Tchar Tcase Tbreak Tbool_Constr Tbool Tauto Tasm TUndef TTilde TString TPtVirg TPlus TOPar TOCro_Lambda TOBrace TMul TMinus TInt TInclude TInc TIfdefelse TIfdefelif TIfdefVersion TIfdefMisc TIfdefBool TIfdef TIdent_TypedefConstr TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_MacroString TIdent_MacroStmt TIdent_MacroIterator TIdent_MacroDecl TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TIdent TFloat TEndif TEllipsis TDefine TDec TCppDirectiveOther TCommentNewline_DefineEndOfMacro TColCol_BeforeTypedef TColCol TChar TCBrace TBang TAndLog TAnd LDots EOF ]
## Transitions:
-- On Twchar_t_Constr shift to state 14
-- On Twchar_t shift to state 1
-- On Tvolatile shift to state 2
-- On Tvoid shift to state 3
-- On Tvirtual shift to state 4
-- On Tunsigned shift to state 15
-- On Tunion shift to state 16
-- On Ttypeof shift to state 17
-- On Ttypename shift to state 19
-- On Ttypeid shift to state 23
-- On Ttypedef shift to state 96
-- On Ttrue shift to state 25
-- On Tthrow shift to state 47
-- On Tthread_local shift to state 97
-- On Tthis shift to state 26
-- On Tstruct shift to state 27
-- On Tstatic_cast shift to state 28
-- On Tstatic shift to state 323
-- On Tsizeof shift to state 29
-- On Tsigned shift to state 30
-- On Tshort_Constr shift to state 31
-- On Tshort shift to state 32
-- On Trestrict shift to state 65
-- On Treinterpret_cast shift to state 33
-- On Tregister shift to state 99
-- On Toperator shift to state 34
-- On Tnullptr shift to state 48
-- On Tnull shift to state 49
-- On Tmutable shift to state 100
-- On Tlong_Constr shift to state 50
-- On Tlong shift to state 38
-- On Tint_Constr shift to state 51
-- On Tint shift to state 39
-- On Tinline shift to state 101
-- On Tfriend shift to state 102
-- On Tfloat_Constr shift to state 52
-- On Tfloat shift to state 40
-- On Tfalse shift to state 53
-- On Textern shift to state 103
-- On Tenum shift to state 66
-- On Tdynamic_cast shift to state 54
-- On Tdouble_Constr shift to state 55
-- On Tdouble shift to state 41
-- On Tdecltype shift to state 45
-- On Tconstexpr shift to state 104
-- On Tconst_cast shift to state 56
-- On Tconst shift to state 76
-- On Tclass shift to state 77
-- On Tchar_Constr shift to state 57
-- On Tchar shift to state 58
-- On Tbool_Constr shift to state 59
-- On Tbool shift to state 60
-- On Tauto shift to state 105
-- On TTilde shift to state 61
-- On TString shift to state 62
-- On TPlus shift to state 63
-- On TOPar shift to state 64
-- On TOCro_Lambda shift to state 78
-- On TMul shift to state 88
-- On TMinus shift to state 89
-- On TInt shift to state 90
-- On TInc shift to state 91
-- On TIdent_TypedefConstr shift to state 106
-- On TIdent_Typedef shift to state 20
-- On TIdent_TemplatenameInQualifier_BeforeTypedef shift to state 21
-- On TIdent_TemplatenameInQualifier shift to state 12
-- On TIdent_Templatename shift to state 108
-- On TIdent_MacroString shift to state 110
-- On TIdent_MacroDecl shift to state 423
-- On TIdent_ClassnameInQualifier_BeforeTypedef shift to state 111
-- On TIdent_ClassnameInQualifier shift to state 112
-- On TIdent shift to state 113
-- On TFloat shift to state 116
-- On TDec shift to state 117
-- On TColCol_BeforeTypedef shift to state 118
-- On TColCol shift to state 128
-- On TChar shift to state 174
-- On TBang shift to state 175
-- On TAndLog shift to state 176
-- On TAnd shift to state 177
-- On LDots shift to state 178
-- On unqualified_id shift to state 179
-- On unary_op shift to state 180
-- On unary_expr shift to state 181
-- On type_spec shift to state 314
-- On type_name shift to state 182
-- On type_cplusplus_id shift to state 183
-- On template_id shift to state 120
-- On string_elem shift to state 184
-- On storage_class_spec shift to state 316
-- On simple_type_specifier shift to state 266
-- On simple_declaration shift to state 555
-- On shift_expr shift to state 217
-- On relational_expr shift to state 229
-- On qualified_id shift to state 191
-- On primary_expr shift to state 192
-- On primary_cplusplus_id shift to state 193
-- On postfix_expr shift to state 194
-- On pm_expr shift to state 219
-- On option(expr) shift to state 556
-- On option(TColCol) shift to state 221
-- On operator_function_id shift to state 168
-- On new_expr shift to state 233
-- On nested_name_specifier2 shift to state 207
-- On nested_name_specifier shift to state 165
-- On multiplicative_expr shift to state 234
-- On logical_or_expr shift to state 246
-- On logical_and_expr shift to state 250
-- On literal shift to state 238
-- On lambda_introducer shift to state 239
-- On inclusive_or_expr shift to state 272
-- On id_expression shift to state 241
-- On function_spec shift to state 437
-- On for_range_decl shift to state 558
-- On for_init_stmt shift to state 630
-- On expr_statement shift to state 635
-- On expr shift to state 597
-- On exclusive_or_expr shift to state 273
-- On equality_expr shift to state 256
-- On enum_specifier shift to state 209
-- On enum_name_or_typedef_name_or_simple_class_name shift to state 123
-- On enum_head shift to state 210
-- On elaborated_type_specifier shift to state 274
-- On delete_expr shift to state 242
-- On decltype_specifier shift to state 243
-- On decl_spec_seq shift to state 636
-- On decl_spec shift to state 473
-- On cv_qualif shift to state 475
-- On cpp_cast_operator shift to state 244
-- On conversion_function_id shift to state 169
-- On cond_expr shift to state 330
-- On class_specifier shift to state 277
-- On class_or_namespace_name_for_qualifier2 shift to state 124
-- On class_or_namespace_name_for_qualifier shift to state 170
-- On class_key shift to state 278
-- On class_head shift to state 301
-- On cast_operator_expr shift to state 261
-- On cast_expr shift to state 331
-- On cast_constructor_expr shift to state 263
-- On basic_type_2 shift to state 264
-- On assign_expr shift to state 539
-- On and_expr shift to state 334
-- On additive_expr shift to state 341
## Reductions:
-- On Tnew Tdelete
--   reduce production option(TColCol) ->
-- On TPtVirg
--   reduce production option(expr) ->

State 555:
## Known stack suffix:
## simple_declaration
## LR(1) items:
for_init_stmt -> simple_declaration . [ Twchar_t_Constr Twchar_t Tvoid Tunsigned Ttypeof Ttypeid Ttrue Tthrow Tthis Tstatic_cast Tsizeof Tsigned Tshort_Constr Tshort Treinterpret_cast Toperator Tnullptr Tnull Tnew Tlong_Constr Tlong Tint_Constr Tint Tfloat_Constr Tfloat Tfalse Tdynamic_cast Tdouble_Constr Tdouble Tdelete Tdecltype Tconst_cast Tchar_Constr Tchar Tbool_Constr Tbool TTilde TString TPtVirg TPlus TOPar TOCro_Lambda TMul TMinus TInt TInc TIdent_TypedefConstr TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_MacroString TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TIdent TFloat TDec TColCol_BeforeTypedef TColCol TChar TBang TAndLog TAnd LDots ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production for_init_stmt -> simple_declaration

State 556:
## Known stack suffix:
## option(expr)
## LR(1) items:
expr_statement -> option(expr) . TPtVirg [ Twhile Twchar_t_Constr Twchar_t Tvolatile Tvoid Tvirtual Tusing Tunsigned Tunion Ttypeof Ttypename Ttypeid Ttypedef Ttry Ttrue Tthrow Tthread_local Tthis Tswitch Tstruct Tstatic_cast Tstatic Tsizeof Tsigned Tshort_Constr Tshort Treturn Trestrict Treinterpret_cast Tregister Toperator Tnullptr Tnull Tnew Tnamespace Tmutable Tlong_Constr Tlong Tint_Constr Tint Tinline Tif Tgoto Tfriend Tfor Tfloat_Constr Tfloat Tfalse Textern Tenum Telse Tdynamic_cast Tdouble_Constr Tdouble Tdo Tdelete Tdefault Tdecltype Tcontinue Tconstexpr Tconst_cast Tconst Tclass Tchar_Constr Tchar Tcase Tbreak Tbool_Constr Tbool Tauto Tasm TUndef TTilde TString TPtVirg TPlus TOPar TOCro_Lambda TOBrace TMul TMinus TInt TInclude TInc TIfdefelse TIfdefelif TIfdefVersion TIfdefMisc TIfdefBool TIfdef TIdent_TypedefConstr TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_MacroString TIdent_MacroStmt TIdent_MacroIterator TIdent_MacroDecl TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TIdent TFloat TEndif TEllipsis TDefine TDec TCppDirectiveOther TCommentNewline_DefineEndOfMacro TColCol_BeforeTypedef TColCol TChar TCPar TCBrace TBang TAndLog TAnd LDots EOF ]
## Transitions:
-- On TPtVirg shift to state 557
## Reductions:

State 557:
## Known stack suffix:
## option(expr) TPtVirg
## LR(1) items:
expr_statement -> option(expr) TPtVirg . [ Twhile Twchar_t_Constr Twchar_t Tvolatile Tvoid Tvirtual Tusing Tunsigned Tunion Ttypeof Ttypename Ttypeid Ttypedef Ttry Ttrue Tthrow Tthread_local Tthis Tswitch Tstruct Tstatic_cast Tstatic Tsizeof Tsigned Tshort_Constr Tshort Treturn Trestrict Treinterpret_cast Tregister Toperator Tnullptr Tnull Tnew Tnamespace Tmutable Tlong_Constr Tlong Tint_Constr Tint Tinline Tif Tgoto Tfriend Tfor Tfloat_Constr Tfloat Tfalse Textern Tenum Telse Tdynamic_cast Tdouble_Constr Tdouble Tdo Tdelete Tdefault Tdecltype Tcontinue Tconstexpr Tconst_cast Tconst Tclass Tchar_Constr Tchar Tcase Tbreak Tbool_Constr Tbool Tauto Tasm TUndef TTilde TString TPtVirg TPlus TOPar TOCro_Lambda TOBrace TMul TMinus TInt TInclude TInc TIfdefelse TIfdefelif TIfdefVersion TIfdefMisc TIfdefBool TIfdef TIdent_TypedefConstr TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_MacroString TIdent_MacroStmt TIdent_MacroIterator TIdent_MacroDecl TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TIdent TFloat TEndif TEllipsis TDefine TDec TCppDirectiveOther TCommentNewline_DefineEndOfMacro TColCol_BeforeTypedef TColCol TChar TCPar TCBrace TBang TAndLog TAnd LDots EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production expr_statement -> option(expr) TPtVirg

State 558:
## Known stack suffix:
## Tfor TOPar for_range_decl
## LR(1) items:
iteration -> Tfor TOPar for_range_decl . TCol for_range_init TCPar statement [ Twhile Twchar_t_Constr Twchar_t Tvolatile Tvoid Tvirtual Tusing Tunsigned Tunion Ttypeof Ttypename Ttypeid Ttypedef Ttry Ttrue Tthrow Tthread_local Tthis Tswitch Tstruct Tstatic_cast Tstatic Tsizeof Tsigned Tshort_Constr Tshort Treturn Trestrict Treinterpret_cast Tregister Toperator Tnullptr Tnull Tnew Tnamespace Tmutable Tlong_Constr Tlong Tint_Constr Tint Tinline Tif Tgoto Tfriend Tfor Tfloat_Constr Tfloat Tfalse Textern Tenum Telse Tdynamic_cast Tdouble_Constr Tdouble Tdo Tdelete Tdefault Tdecltype Tcontinue Tconstexpr Tconst_cast Tconst Tclass Tchar_Constr Tchar Tcase Tbreak Tbool_Constr Tbool Tauto Tasm TUndef TTilde TString TPtVirg TPlus TOPar TOCro_Lambda TOBrace TMul TMinus TInt TInclude TInc TIfdefelse TIfdefelif TIfdefVersion TIfdefMisc TIfdefBool TIfdef TIdent_TypedefConstr TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_MacroString TIdent_MacroStmt TIdent_MacroIterator TIdent_MacroDecl TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TIdent TFloat TEndif TEllipsis TDefine TDec TCppDirectiveOther TCommentNewline_DefineEndOfMacro TColCol_BeforeTypedef TColCol TChar TCBrace TBang TAndLog TAnd LDots EOF ]
## Transitions:
-- On TCol shift to state 559
## Reductions:

State 559:
## Known stack suffix:
## Tfor TOPar for_range_decl TCol
## LR(1) items:
iteration -> Tfor TOPar for_range_decl TCol . for_range_init TCPar statement [ Twhile Twchar_t_Constr Twchar_t Tvolatile Tvoid Tvirtual Tusing Tunsigned Tunion Ttypeof Ttypename Ttypeid Ttypedef Ttry Ttrue Tthrow Tthread_local Tthis Tswitch Tstruct Tstatic_cast Tstatic Tsizeof Tsigned Tshort_Constr Tshort Treturn Trestrict Treinterpret_cast Tregister Toperator Tnullptr Tnull Tnew Tnamespace Tmutable Tlong_Constr Tlong Tint_Constr Tint Tinline Tif Tgoto Tfriend Tfor Tfloat_Constr Tfloat Tfalse Textern Tenum Telse Tdynamic_cast Tdouble_Constr Tdouble Tdo Tdelete Tdefault Tdecltype Tcontinue Tconstexpr Tconst_cast Tconst Tclass Tchar_Constr Tchar Tcase Tbreak Tbool_Constr Tbool Tauto Tasm TUndef TTilde TString TPtVirg TPlus TOPar TOCro_Lambda TOBrace TMul TMinus TInt TInclude TInc TIfdefelse TIfdefelif TIfdefVersion TIfdefMisc TIfdefBool TIfdef TIdent_TypedefConstr TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_MacroString TIdent_MacroStmt TIdent_MacroIterator TIdent_MacroDecl TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TIdent TFloat TEndif TEllipsis TDefine TDec TCppDirectiveOther TCommentNewline_DefineEndOfMacro TColCol_BeforeTypedef TColCol TChar TCBrace TBang TAndLog TAnd LDots EOF ]
## Transitions:
-- On Twchar_t_Constr shift to state 14
-- On Twchar_t shift to state 1
-- On Tvoid shift to state 3
-- On Tunsigned shift to state 15
-- On Ttypeof shift to state 17
-- On Ttypeid shift to state 23
-- On Ttrue shift to state 25
-- On Tthrow shift to state 47
-- On Tthis shift to state 26
-- On Tstatic_cast shift to state 28
-- On Tsizeof shift to state 29
-- On Tsigned shift to state 30
-- On Tshort_Constr shift to state 31
-- On Tshort shift to state 32
-- On Treinterpret_cast shift to state 33
-- On Toperator shift to state 34
-- On Tnullptr shift to state 48
-- On Tnull shift to state 49
-- On Tlong_Constr shift to state 50
-- On Tlong shift to state 38
-- On Tint_Constr shift to state 51
-- On Tint shift to state 39
-- On Tfloat_Constr shift to state 52
-- On Tfloat shift to state 40
-- On Tfalse shift to state 53
-- On Tdynamic_cast shift to state 54
-- On Tdouble_Constr shift to state 55
-- On Tdouble shift to state 41
-- On Tdecltype shift to state 45
-- On Tconst_cast shift to state 56
-- On Tchar_Constr shift to state 57
-- On Tchar shift to state 58
-- On Tbool_Constr shift to state 59
-- On Tbool shift to state 60
-- On TTilde shift to state 61
-- On TString shift to state 62
-- On TPlus shift to state 63
-- On TOPar shift to state 64
-- On TOCro_Lambda shift to state 78
-- On TMul shift to state 88
-- On TMinus shift to state 89
-- On TInt shift to state 90
-- On TInc shift to state 91
-- On TIdent_TypedefConstr shift to state 106
-- On TIdent_Typedef shift to state 20
-- On TIdent_TemplatenameInQualifier_BeforeTypedef shift to state 21
-- On TIdent_TemplatenameInQualifier shift to state 12
-- On TIdent_Templatename shift to state 108
-- On TIdent_MacroString shift to state 110
-- On TIdent_ClassnameInQualifier_BeforeTypedef shift to state 111
-- On TIdent_ClassnameInQualifier shift to state 112
-- On TIdent shift to state 113
-- On TFloat shift to state 116
-- On TDec shift to state 117
-- On TColCol_BeforeTypedef shift to state 118
-- On TColCol shift to state 128
-- On TChar shift to state 174
-- On TBang shift to state 175
-- On TAndLog shift to state 176
-- On TAnd shift to state 177
-- On LDots shift to state 178
-- On unqualified_id shift to state 179
-- On unary_op shift to state 180
-- On unary_expr shift to state 181
-- On type_name shift to state 182
-- On type_cplusplus_id shift to state 183
-- On template_id shift to state 120
-- On string_elem shift to state 184
-- On simple_type_specifier shift to state 189
-- On shift_expr shift to state 217
-- On relational_expr shift to state 229
-- On qualified_id shift to state 191
-- On primary_expr shift to state 192
-- On primary_cplusplus_id shift to state 193
-- On postfix_expr shift to state 194
-- On pm_expr shift to state 219
-- On option(TColCol) shift to state 221
-- On operator_function_id shift to state 168
-- On new_expr shift to state 233
-- On nested_name_specifier2 shift to state 207
-- On nested_name_specifier shift to state 165
-- On multiplicative_expr shift to state 234
-- On logical_or_expr shift to state 246
-- On logical_and_expr shift to state 250
-- On literal shift to state 238
-- On lambda_introducer shift to state 239
-- On inclusive_or_expr shift to state 272
-- On id_expression shift to state 241
-- On for_range_init shift to state 560
-- On expr shift to state 629
-- On exclusive_or_expr shift to state 273
-- On equality_expr shift to state 256
-- On enum_name_or_typedef_name_or_simple_class_name shift to state 123
-- On delete_expr shift to state 242
-- On decltype_specifier shift to state 243
-- On cpp_cast_operator shift to state 244
-- On conversion_function_id shift to state 169
-- On cond_expr shift to state 330
-- On class_or_namespace_name_for_qualifier2 shift to state 124
-- On class_or_namespace_name_for_qualifier shift to state 170
-- On cast_operator_expr shift to state 261
-- On cast_expr shift to state 331
-- On cast_constructor_expr shift to state 263
-- On basic_type_2 shift to state 264
-- On assign_expr shift to state 539
-- On and_expr shift to state 334
-- On additive_expr shift to state 341
## Reductions:
-- On Tnew Tdelete
--   reduce production option(TColCol) ->

State 560:
## Known stack suffix:
## Tfor TOPar for_range_decl TCol for_range_init
## LR(1) items:
iteration -> Tfor TOPar for_range_decl TCol for_range_init . TCPar statement [ Twhile Twchar_t_Constr Twchar_t Tvolatile Tvoid Tvirtual Tusing Tunsigned Tunion Ttypeof Ttypename Ttypeid Ttypedef Ttry Ttrue Tthrow Tthread_local Tthis Tswitch Tstruct Tstatic_cast Tstatic Tsizeof Tsigned Tshort_Constr Tshort Treturn Trestrict Treinterpret_cast Tregister Toperator Tnullptr Tnull Tnew Tnamespace Tmutable Tlong_Constr Tlong Tint_Constr Tint Tinline Tif Tgoto Tfriend Tfor Tfloat_Constr Tfloat Tfalse Textern Tenum Telse Tdynamic_cast Tdouble_Constr Tdouble Tdo Tdelete Tdefault Tdecltype Tcontinue Tconstexpr Tconst_cast Tconst Tclass Tchar_Constr Tchar Tcase Tbreak Tbool_Constr Tbool Tauto Tasm TUndef TTilde TString TPtVirg TPlus TOPar TOCro_Lambda TOBrace TMul TMinus TInt TInclude TInc TIfdefelse TIfdefelif TIfdefVersion TIfdefMisc TIfdefBool TIfdef TIdent_TypedefConstr TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_MacroString TIdent_MacroStmt TIdent_MacroIterator TIdent_MacroDecl TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TIdent TFloat TEndif TEllipsis TDefine TDec TCppDirectiveOther TCommentNewline_DefineEndOfMacro TColCol_BeforeTypedef TColCol TChar TCBrace TBang TAndLog TAnd LDots EOF ]
## Transitions:
-- On TCPar shift to state 561
## Reductions:

State 561:
## Known stack suffix:
## Tfor TOPar for_range_decl TCol for_range_init TCPar
## LR(1) items:
iteration -> Tfor TOPar for_range_decl TCol for_range_init TCPar . statement [ Twhile Twchar_t_Constr Twchar_t Tvolatile Tvoid Tvirtual Tusing Tunsigned Tunion Ttypeof Ttypename Ttypeid Ttypedef Ttry Ttrue Tthrow Tthread_local Tthis Tswitch Tstruct Tstatic_cast Tstatic Tsizeof Tsigned Tshort_Constr Tshort Treturn Trestrict Treinterpret_cast Tregister Toperator Tnullptr Tnull Tnew Tnamespace Tmutable Tlong_Constr Tlong Tint_Constr Tint Tinline Tif Tgoto Tfriend Tfor Tfloat_Constr Tfloat Tfalse Textern Tenum Telse Tdynamic_cast Tdouble_Constr Tdouble Tdo Tdelete Tdefault Tdecltype Tcontinue Tconstexpr Tconst_cast Tconst Tclass Tchar_Constr Tchar Tcase Tbreak Tbool_Constr Tbool Tauto Tasm TUndef TTilde TString TPtVirg TPlus TOPar TOCro_Lambda TOBrace TMul TMinus TInt TInclude TInc TIfdefelse TIfdefelif TIfdefVersion TIfdefMisc TIfdefBool TIfdef TIdent_TypedefConstr TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_MacroString TIdent_MacroStmt TIdent_MacroIterator TIdent_MacroDecl TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TIdent TFloat TEndif TEllipsis TDefine TDec TCppDirectiveOther TCommentNewline_DefineEndOfMacro TColCol_BeforeTypedef TColCol TChar TCBrace TBang TAndLog TAnd LDots EOF ]
## Transitions:
-- On Twhile shift to state 94
-- On Twchar_t_Constr shift to state 14
-- On Twchar_t shift to state 1
-- On Tvolatile shift to state 2
-- On Tvoid shift to state 3
-- On Tvirtual shift to state 4
-- On Tusing shift to state 5
-- On Tunsigned shift to state 15
-- On Tunion shift to state 16
-- On Ttypeof shift to state 17
-- On Ttypename shift to state 19
-- On Ttypeid shift to state 23
-- On Ttypedef shift to state 96
-- On Ttry shift to state 431
-- On Ttrue shift to state 25
-- On Tthrow shift to state 47
-- On Tthread_local shift to state 97
-- On Tthis shift to state 26
-- On Tswitch shift to state 515
-- On Tstruct shift to state 27
-- On Tstatic_cast shift to state 28
-- On Tstatic shift to state 323
-- On Tsizeof shift to state 29
-- On Tsigned shift to state 30
-- On Tshort_Constr shift to state 31
-- On Tshort shift to state 32
-- On Treturn shift to state 537
-- On Trestrict shift to state 65
-- On Treinterpret_cast shift to state 33
-- On Tregister shift to state 99
-- On Toperator shift to state 34
-- On Tnullptr shift to state 48
-- On Tnull shift to state 49
-- On Tnamespace shift to state 540
-- On Tmutable shift to state 100
-- On Tlong_Constr shift to state 50
-- On Tlong shift to state 38
-- On Tint_Constr shift to state 51
-- On Tint shift to state 39
-- On Tinline shift to state 101
-- On Tif shift to state 545
-- On Tgoto shift to state 549
-- On Tfriend shift to state 102
-- On Tfor shift to state 553
-- On Tfloat_Constr shift to state 52
-- On Tfloat shift to state 40
-- On Tfalse shift to state 53
-- On Textern shift to state 103
-- On Tenum shift to state 66
-- On Tdynamic_cast shift to state 54
-- On Tdouble_Constr shift to state 55
-- On Tdouble shift to state 41
-- On Tdo shift to state 562
-- On Tdefault shift to state 563
-- On Tdecltype shift to state 45
-- On Tcontinue shift to state 565
-- On Tconstexpr shift to state 104
-- On Tconst_cast shift to state 56
-- On Tconst shift to state 76
-- On Tclass shift to state 77
-- On Tchar_Constr shift to state 57
-- On Tchar shift to state 58
-- On Tcase shift to state 566
-- On Tbreak shift to state 571
-- On Tbool_Constr shift to state 59
-- On Tbool shift to state 60
-- On Tauto shift to state 105
-- On Tasm shift to state 366
-- On TTilde shift to state 61
-- On TString shift to state 62
-- On TPlus shift to state 63
-- On TOPar shift to state 64
-- On TOCro_Lambda shift to state 78
-- On TOBrace shift to state 93
-- On TMul shift to state 88
-- On TMinus shift to state 89
-- On TInt shift to state 90
-- On TInc shift to state 91
-- On TIdent_TypedefConstr shift to state 106
-- On TIdent_Typedef shift to state 572
-- On TIdent_TemplatenameInQualifier_BeforeTypedef shift to state 21
-- On TIdent_TemplatenameInQualifier shift to state 12
-- On TIdent_Templatename shift to state 108
-- On TIdent_MacroString shift to state 110
-- On TIdent_MacroStmt shift to state 573
-- On TIdent_MacroIterator shift to state 574
-- On TIdent_MacroDecl shift to state 423
-- On TIdent_ClassnameInQualifier_BeforeTypedef shift to state 111
-- On TIdent_ClassnameInQualifier shift to state 112
-- On TIdent shift to state 578
-- On TFloat shift to state 116
-- On TEllipsis shift to state 580
-- On TDec shift to state 117
-- On TColCol_BeforeTypedef shift to state 118
-- On TColCol shift to state 128
-- On TChar shift to state 174
-- On TBang shift to state 175
-- On TAndLog shift to state 176
-- On TAnd shift to state 177
-- On LDots shift to state 178
-- On using_directive shift to state 581
-- On using_declaration shift to state 582
-- On unqualified_id shift to state 179
-- On unary_op shift to state 180
-- On unary_expr shift to state 181
-- On type_spec shift to state 314
-- On type_name shift to state 182
-- On type_cplusplus_id shift to state 183
-- On try_block shift to state 583
-- On template_id shift to state 120
-- On string_elem shift to state 184
-- On storage_class_spec shift to state 316
-- On statement shift to state 628
-- On simple_type_specifier shift to state 266
-- On simple_declaration shift to state 585
-- On shift_expr shift to state 217
-- On selection shift to state 586
-- On relational_expr shift to state 229
-- On qualified_id shift to state 191
-- On primary_expr shift to state 192
-- On primary_cplusplus_id shift to state 193
-- On postfix_expr shift to state 194
-- On pm_expr shift to state 219
-- On option(expr) shift to state 556
-- On option(TColCol) shift to state 221
-- On operator_function_id shift to state 168
-- On new_expr shift to state 233
-- On nested_name_specifier2 shift to state 207
-- On nested_name_specifier shift to state 165
-- On namespace_alias_definition shift to state 587
-- On multiplicative_expr shift to state 234
-- On logical_or_expr shift to state 246
-- On logical_and_expr shift to state 250
-- On literal shift to state 238
-- On lambda_introducer shift to state 239
-- On labeled shift to state 588
-- On jump shift to state 589
-- On iteration shift to state 591
-- On inclusive_or_expr shift to state 272
-- On ident shift to state 592
-- On id_expression shift to state 241
-- On function_spec shift to state 437
-- On function_definition shift to state 595
-- On expr_statement shift to state 596
-- On expr shift to state 597
-- On exclusive_or_expr shift to state 273
-- On equality_expr shift to state 256
-- On enum_specifier shift to state 209
-- On enum_name_or_typedef_name_or_simple_class_name shift to state 123
-- On enum_head shift to state 210
-- On elaborated_type_specifier shift to state 274
-- On delete_expr shift to state 242
-- On decltype_specifier shift to state 243
-- On declaration_statement shift to state 598
-- On decl_spec_seq shift to state 599
-- On decl_spec shift to state 473
-- On cv_qualif shift to state 475
-- On cpp_cast_operator shift to state 244
-- On conversion_function_id shift to state 169
-- On cond_expr shift to state 330
-- On compound shift to state 615
-- On class_specifier shift to state 277
-- On class_or_namespace_name_for_qualifier2 shift to state 124
-- On class_or_namespace_name_for_qualifier shift to state 170
-- On class_key shift to state 278
-- On class_head shift to state 301
-- On cast_operator_expr shift to state 261
-- On cast_expr shift to state 331
-- On cast_constructor_expr shift to state 263
-- On block_declaration shift to state 616
-- On basic_type_2 shift to state 264
-- On assign_expr shift to state 539
-- On asm_definition shift to state 617
-- On and_expr shift to state 334
-- On additive_expr shift to state 341
## Reductions:
-- On Tnew Tdelete
--   reduce production option(TColCol) ->
-- On TPtVirg
--   reduce production option(expr) ->

State 562:
## Known stack suffix:
## Tdo
## LR(1) items:
iteration -> Tdo . statement Twhile TOPar expr TCPar TPtVirg [ Twhile Twchar_t_Constr Twchar_t Tvolatile Tvoid Tvirtual Tusing Tunsigned Tunion Ttypeof Ttypename Ttypeid Ttypedef Ttry Ttrue Tthrow Tthread_local Tthis Tswitch Tstruct Tstatic_cast Tstatic Tsizeof Tsigned Tshort_Constr Tshort Treturn Trestrict Treinterpret_cast Tregister Toperator Tnullptr Tnull Tnew Tnamespace Tmutable Tlong_Constr Tlong Tint_Constr Tint Tinline Tif Tgoto Tfriend Tfor Tfloat_Constr Tfloat Tfalse Textern Tenum Telse Tdynamic_cast Tdouble_Constr Tdouble Tdo Tdelete Tdefault Tdecltype Tcontinue Tconstexpr Tconst_cast Tconst Tclass Tchar_Constr Tchar Tcase Tbreak Tbool_Constr Tbool Tauto Tasm TUndef TTilde TString TPtVirg TPlus TOPar TOCro_Lambda TOBrace TMul TMinus TInt TInclude TInc TIfdefelse TIfdefelif TIfdefVersion TIfdefMisc TIfdefBool TIfdef TIdent_TypedefConstr TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_MacroString TIdent_MacroStmt TIdent_MacroIterator TIdent_MacroDecl TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TIdent TFloat TEndif TEllipsis TDefine TDec TCppDirectiveOther TCommentNewline_DefineEndOfMacro TColCol_BeforeTypedef TColCol TChar TCBrace TBang TAndLog TAnd LDots EOF ]
## Transitions:
-- On Twhile shift to state 94
-- On Twchar_t_Constr shift to state 14
-- On Twchar_t shift to state 1
-- On Tvolatile shift to state 2
-- On Tvoid shift to state 3
-- On Tvirtual shift to state 4
-- On Tusing shift to state 5
-- On Tunsigned shift to state 15
-- On Tunion shift to state 16
-- On Ttypeof shift to state 17
-- On Ttypename shift to state 19
-- On Ttypeid shift to state 23
-- On Ttypedef shift to state 96
-- On Ttry shift to state 431
-- On Ttrue shift to state 25
-- On Tthrow shift to state 47
-- On Tthread_local shift to state 97
-- On Tthis shift to state 26
-- On Tswitch shift to state 515
-- On Tstruct shift to state 27
-- On Tstatic_cast shift to state 28
-- On Tstatic shift to state 323
-- On Tsizeof shift to state 29
-- On Tsigned shift to state 30
-- On Tshort_Constr shift to state 31
-- On Tshort shift to state 32
-- On Treturn shift to state 537
-- On Trestrict shift to state 65
-- On Treinterpret_cast shift to state 33
-- On Tregister shift to state 99
-- On Toperator shift to state 34
-- On Tnullptr shift to state 48
-- On Tnull shift to state 49
-- On Tnamespace shift to state 540
-- On Tmutable shift to state 100
-- On Tlong_Constr shift to state 50
-- On Tlong shift to state 38
-- On Tint_Constr shift to state 51
-- On Tint shift to state 39
-- On Tinline shift to state 101
-- On Tif shift to state 545
-- On Tgoto shift to state 549
-- On Tfriend shift to state 102
-- On Tfor shift to state 553
-- On Tfloat_Constr shift to state 52
-- On Tfloat shift to state 40
-- On Tfalse shift to state 53
-- On Textern shift to state 103
-- On Tenum shift to state 66
-- On Tdynamic_cast shift to state 54
-- On Tdouble_Constr shift to state 55
-- On Tdouble shift to state 41
-- On Tdo shift to state 562
-- On Tdefault shift to state 563
-- On Tdecltype shift to state 45
-- On Tcontinue shift to state 565
-- On Tconstexpr shift to state 104
-- On Tconst_cast shift to state 56
-- On Tconst shift to state 76
-- On Tclass shift to state 77
-- On Tchar_Constr shift to state 57
-- On Tchar shift to state 58
-- On Tcase shift to state 566
-- On Tbreak shift to state 571
-- On Tbool_Constr shift to state 59
-- On Tbool shift to state 60
-- On Tauto shift to state 105
-- On Tasm shift to state 366
-- On TTilde shift to state 61
-- On TString shift to state 62
-- On TPlus shift to state 63
-- On TOPar shift to state 64
-- On TOCro_Lambda shift to state 78
-- On TOBrace shift to state 93
-- On TMul shift to state 88
-- On TMinus shift to state 89
-- On TInt shift to state 90
-- On TInc shift to state 91
-- On TIdent_TypedefConstr shift to state 106
-- On TIdent_Typedef shift to state 572
-- On TIdent_TemplatenameInQualifier_BeforeTypedef shift to state 21
-- On TIdent_TemplatenameInQualifier shift to state 12
-- On TIdent_Templatename shift to state 108
-- On TIdent_MacroString shift to state 110
-- On TIdent_MacroStmt shift to state 573
-- On TIdent_MacroIterator shift to state 574
-- On TIdent_MacroDecl shift to state 423
-- On TIdent_ClassnameInQualifier_BeforeTypedef shift to state 111
-- On TIdent_ClassnameInQualifier shift to state 112
-- On TIdent shift to state 578
-- On TFloat shift to state 116
-- On TEllipsis shift to state 580
-- On TDec shift to state 117
-- On TColCol_BeforeTypedef shift to state 118
-- On TColCol shift to state 128
-- On TChar shift to state 174
-- On TBang shift to state 175
-- On TAndLog shift to state 176
-- On TAnd shift to state 177
-- On LDots shift to state 178
-- On using_directive shift to state 581
-- On using_declaration shift to state 582
-- On unqualified_id shift to state 179
-- On unary_op shift to state 180
-- On unary_expr shift to state 181
-- On type_spec shift to state 314
-- On type_name shift to state 182
-- On type_cplusplus_id shift to state 183
-- On try_block shift to state 583
-- On template_id shift to state 120
-- On string_elem shift to state 184
-- On storage_class_spec shift to state 316
-- On statement shift to state 622
-- On simple_type_specifier shift to state 266
-- On simple_declaration shift to state 585
-- On shift_expr shift to state 217
-- On selection shift to state 586
-- On relational_expr shift to state 229
-- On qualified_id shift to state 191
-- On primary_expr shift to state 192
-- On primary_cplusplus_id shift to state 193
-- On postfix_expr shift to state 194
-- On pm_expr shift to state 219
-- On option(expr) shift to state 556
-- On option(TColCol) shift to state 221
-- On operator_function_id shift to state 168
-- On new_expr shift to state 233
-- On nested_name_specifier2 shift to state 207
-- On nested_name_specifier shift to state 165
-- On namespace_alias_definition shift to state 587
-- On multiplicative_expr shift to state 234
-- On logical_or_expr shift to state 246
-- On logical_and_expr shift to state 250
-- On literal shift to state 238
-- On lambda_introducer shift to state 239
-- On labeled shift to state 588
-- On jump shift to state 589
-- On iteration shift to state 591
-- On inclusive_or_expr shift to state 272
-- On ident shift to state 592
-- On id_expression shift to state 241
-- On function_spec shift to state 437
-- On function_definition shift to state 595
-- On expr_statement shift to state 596
-- On expr shift to state 597
-- On exclusive_or_expr shift to state 273
-- On equality_expr shift to state 256
-- On enum_specifier shift to state 209
-- On enum_name_or_typedef_name_or_simple_class_name shift to state 123
-- On enum_head shift to state 210
-- On elaborated_type_specifier shift to state 274
-- On delete_expr shift to state 242
-- On decltype_specifier shift to state 243
-- On declaration_statement shift to state 598
-- On decl_spec_seq shift to state 599
-- On decl_spec shift to state 473
-- On cv_qualif shift to state 475
-- On cpp_cast_operator shift to state 244
-- On conversion_function_id shift to state 169
-- On cond_expr shift to state 330
-- On compound shift to state 615
-- On class_specifier shift to state 277
-- On class_or_namespace_name_for_qualifier2 shift to state 124
-- On class_or_namespace_name_for_qualifier shift to state 170
-- On class_key shift to state 278
-- On class_head shift to state 301
-- On cast_operator_expr shift to state 261
-- On cast_expr shift to state 331
-- On cast_constructor_expr shift to state 263
-- On block_declaration shift to state 616
-- On basic_type_2 shift to state 264
-- On assign_expr shift to state 539
-- On asm_definition shift to state 617
-- On and_expr shift to state 334
-- On additive_expr shift to state 341
## Reductions:
-- On Tnew Tdelete
--   reduce production option(TColCol) ->
-- On TPtVirg
--   reduce production option(expr) ->

State 563:
## Known stack suffix:
## Tdefault
## LR(1) items:
labeled -> Tdefault . TCol statement [ Twhile Twchar_t_Constr Twchar_t Tvolatile Tvoid Tvirtual Tusing Tunsigned Tunion Ttypeof Ttypename Ttypeid Ttypedef Ttry Ttrue Tthrow Tthread_local Tthis Tswitch Tstruct Tstatic_cast Tstatic Tsizeof Tsigned Tshort_Constr Tshort Treturn Trestrict Treinterpret_cast Tregister Toperator Tnullptr Tnull Tnew Tnamespace Tmutable Tlong_Constr Tlong Tint_Constr Tint Tinline Tif Tgoto Tfriend Tfor Tfloat_Constr Tfloat Tfalse Textern Tenum Telse Tdynamic_cast Tdouble_Constr Tdouble Tdo Tdelete Tdefault Tdecltype Tcontinue Tconstexpr Tconst_cast Tconst Tclass Tchar_Constr Tchar Tcase Tbreak Tbool_Constr Tbool Tauto Tasm TUndef TTilde TString TPtVirg TPlus TOPar TOCro_Lambda TOBrace TMul TMinus TInt TInclude TInc TIfdefelse TIfdefelif TIfdefVersion TIfdefMisc TIfdefBool TIfdef TIdent_TypedefConstr TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_MacroString TIdent_MacroStmt TIdent_MacroIterator TIdent_MacroDecl TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TIdent TFloat TEndif TEllipsis TDefine TDec TCppDirectiveOther TCommentNewline_DefineEndOfMacro TColCol_BeforeTypedef TColCol TChar TCBrace TBang TAndLog TAnd LDots EOF ]
## Transitions:
-- On TCol shift to state 564
## Reductions:

State 564:
## Known stack suffix:
## Tdefault TCol
## LR(1) items:
labeled -> Tdefault TCol . statement [ Twhile Twchar_t_Constr Twchar_t Tvolatile Tvoid Tvirtual Tusing Tunsigned Tunion Ttypeof Ttypename Ttypeid Ttypedef Ttry Ttrue Tthrow Tthread_local Tthis Tswitch Tstruct Tstatic_cast Tstatic Tsizeof Tsigned Tshort_Constr Tshort Treturn Trestrict Treinterpret_cast Tregister Toperator Tnullptr Tnull Tnew Tnamespace Tmutable Tlong_Constr Tlong Tint_Constr Tint Tinline Tif Tgoto Tfriend Tfor Tfloat_Constr Tfloat Tfalse Textern Tenum Telse Tdynamic_cast Tdouble_Constr Tdouble Tdo Tdelete Tdefault Tdecltype Tcontinue Tconstexpr Tconst_cast Tconst Tclass Tchar_Constr Tchar Tcase Tbreak Tbool_Constr Tbool Tauto Tasm TUndef TTilde TString TPtVirg TPlus TOPar TOCro_Lambda TOBrace TMul TMinus TInt TInclude TInc TIfdefelse TIfdefelif TIfdefVersion TIfdefMisc TIfdefBool TIfdef TIdent_TypedefConstr TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_MacroString TIdent_MacroStmt TIdent_MacroIterator TIdent_MacroDecl TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TIdent TFloat TEndif TEllipsis TDefine TDec TCppDirectiveOther TCommentNewline_DefineEndOfMacro TColCol_BeforeTypedef TColCol TChar TCBrace TBang TAndLog TAnd LDots EOF ]
## Transitions:
-- On Twhile shift to state 94
-- On Twchar_t_Constr shift to state 14
-- On Twchar_t shift to state 1
-- On Tvolatile shift to state 2
-- On Tvoid shift to state 3
-- On Tvirtual shift to state 4
-- On Tusing shift to state 5
-- On Tunsigned shift to state 15
-- On Tunion shift to state 16
-- On Ttypeof shift to state 17
-- On Ttypename shift to state 19
-- On Ttypeid shift to state 23
-- On Ttypedef shift to state 96
-- On Ttry shift to state 431
-- On Ttrue shift to state 25
-- On Tthrow shift to state 47
-- On Tthread_local shift to state 97
-- On Tthis shift to state 26
-- On Tswitch shift to state 515
-- On Tstruct shift to state 27
-- On Tstatic_cast shift to state 28
-- On Tstatic shift to state 323
-- On Tsizeof shift to state 29
-- On Tsigned shift to state 30
-- On Tshort_Constr shift to state 31
-- On Tshort shift to state 32
-- On Treturn shift to state 537
-- On Trestrict shift to state 65
-- On Treinterpret_cast shift to state 33
-- On Tregister shift to state 99
-- On Toperator shift to state 34
-- On Tnullptr shift to state 48
-- On Tnull shift to state 49
-- On Tnamespace shift to state 540
-- On Tmutable shift to state 100
-- On Tlong_Constr shift to state 50
-- On Tlong shift to state 38
-- On Tint_Constr shift to state 51
-- On Tint shift to state 39
-- On Tinline shift to state 101
-- On Tif shift to state 545
-- On Tgoto shift to state 549
-- On Tfriend shift to state 102
-- On Tfor shift to state 553
-- On Tfloat_Constr shift to state 52
-- On Tfloat shift to state 40
-- On Tfalse shift to state 53
-- On Textern shift to state 103
-- On Tenum shift to state 66
-- On Tdynamic_cast shift to state 54
-- On Tdouble_Constr shift to state 55
-- On Tdouble shift to state 41
-- On Tdo shift to state 562
-- On Tdefault shift to state 563
-- On Tdecltype shift to state 45
-- On Tcontinue shift to state 565
-- On Tconstexpr shift to state 104
-- On Tconst_cast shift to state 56
-- On Tconst shift to state 76
-- On Tclass shift to state 77
-- On Tchar_Constr shift to state 57
-- On Tchar shift to state 58
-- On Tcase shift to state 566
-- On Tbreak shift to state 571
-- On Tbool_Constr shift to state 59
-- On Tbool shift to state 60
-- On Tauto shift to state 105
-- On Tasm shift to state 366
-- On TTilde shift to state 61
-- On TString shift to state 62
-- On TPlus shift to state 63
-- On TOPar shift to state 64
-- On TOCro_Lambda shift to state 78
-- On TOBrace shift to state 93
-- On TMul shift to state 88
-- On TMinus shift to state 89
-- On TInt shift to state 90
-- On TInc shift to state 91
-- On TIdent_TypedefConstr shift to state 106
-- On TIdent_Typedef shift to state 572
-- On TIdent_TemplatenameInQualifier_BeforeTypedef shift to state 21
-- On TIdent_TemplatenameInQualifier shift to state 12
-- On TIdent_Templatename shift to state 108
-- On TIdent_MacroString shift to state 110
-- On TIdent_MacroStmt shift to state 573
-- On TIdent_MacroIterator shift to state 574
-- On TIdent_MacroDecl shift to state 423
-- On TIdent_ClassnameInQualifier_BeforeTypedef shift to state 111
-- On TIdent_ClassnameInQualifier shift to state 112
-- On TIdent shift to state 578
-- On TFloat shift to state 116
-- On TEllipsis shift to state 580
-- On TDec shift to state 117
-- On TColCol_BeforeTypedef shift to state 118
-- On TColCol shift to state 128
-- On TChar shift to state 174
-- On TBang shift to state 175
-- On TAndLog shift to state 176
-- On TAnd shift to state 177
-- On LDots shift to state 178
-- On using_directive shift to state 581
-- On using_declaration shift to state 582
-- On unqualified_id shift to state 179
-- On unary_op shift to state 180
-- On unary_expr shift to state 181
-- On type_spec shift to state 314
-- On type_name shift to state 182
-- On type_cplusplus_id shift to state 183
-- On try_block shift to state 583
-- On template_id shift to state 120
-- On string_elem shift to state 184
-- On storage_class_spec shift to state 316
-- On statement shift to state 621
-- On simple_type_specifier shift to state 266
-- On simple_declaration shift to state 585
-- On shift_expr shift to state 217
-- On selection shift to state 586
-- On relational_expr shift to state 229
-- On qualified_id shift to state 191
-- On primary_expr shift to state 192
-- On primary_cplusplus_id shift to state 193
-- On postfix_expr shift to state 194
-- On pm_expr shift to state 219
-- On option(expr) shift to state 556
-- On option(TColCol) shift to state 221
-- On operator_function_id shift to state 168
-- On new_expr shift to state 233
-- On nested_name_specifier2 shift to state 207
-- On nested_name_specifier shift to state 165
-- On namespace_alias_definition shift to state 587
-- On multiplicative_expr shift to state 234
-- On logical_or_expr shift to state 246
-- On logical_and_expr shift to state 250
-- On literal shift to state 238
-- On lambda_introducer shift to state 239
-- On labeled shift to state 588
-- On jump shift to state 589
-- On iteration shift to state 591
-- On inclusive_or_expr shift to state 272
-- On ident shift to state 592
-- On id_expression shift to state 241
-- On function_spec shift to state 437
-- On function_definition shift to state 595
-- On expr_statement shift to state 596
-- On expr shift to state 597
-- On exclusive_or_expr shift to state 273
-- On equality_expr shift to state 256
-- On enum_specifier shift to state 209
-- On enum_name_or_typedef_name_or_simple_class_name shift to state 123
-- On enum_head shift to state 210
-- On elaborated_type_specifier shift to state 274
-- On delete_expr shift to state 242
-- On decltype_specifier shift to state 243
-- On declaration_statement shift to state 598
-- On decl_spec_seq shift to state 599
-- On decl_spec shift to state 473
-- On cv_qualif shift to state 475
-- On cpp_cast_operator shift to state 244
-- On conversion_function_id shift to state 169
-- On cond_expr shift to state 330
-- On compound shift to state 615
-- On class_specifier shift to state 277
-- On class_or_namespace_name_for_qualifier2 shift to state 124
-- On class_or_namespace_name_for_qualifier shift to state 170
-- On class_key shift to state 278
-- On class_head shift to state 301
-- On cast_operator_expr shift to state 261
-- On cast_expr shift to state 331
-- On cast_constructor_expr shift to state 263
-- On block_declaration shift to state 616
-- On basic_type_2 shift to state 264
-- On assign_expr shift to state 539
-- On asm_definition shift to state 617
-- On and_expr shift to state 334
-- On additive_expr shift to state 341
## Reductions:
-- On Tnew Tdelete
--   reduce production option(TColCol) ->
-- On TPtVirg
--   reduce production option(expr) ->

State 565:
## Known stack suffix:
## Tcontinue
## LR(1) items:
jump -> Tcontinue . [ TPtVirg ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production jump -> Tcontinue

State 566:
## Known stack suffix:
## Tcase
## LR(1) items:
labeled -> Tcase . const_expr TCol statement [ Twhile Twchar_t_Constr Twchar_t Tvolatile Tvoid Tvirtual Tusing Tunsigned Tunion Ttypeof Ttypename Ttypeid Ttypedef Ttry Ttrue Tthrow Tthread_local Tthis Tswitch Tstruct Tstatic_cast Tstatic Tsizeof Tsigned Tshort_Constr Tshort Treturn Trestrict Treinterpret_cast Tregister Toperator Tnullptr Tnull Tnew Tnamespace Tmutable Tlong_Constr Tlong Tint_Constr Tint Tinline Tif Tgoto Tfriend Tfor Tfloat_Constr Tfloat Tfalse Textern Tenum Telse Tdynamic_cast Tdouble_Constr Tdouble Tdo Tdelete Tdefault Tdecltype Tcontinue Tconstexpr Tconst_cast Tconst Tclass Tchar_Constr Tchar Tcase Tbreak Tbool_Constr Tbool Tauto Tasm TUndef TTilde TString TPtVirg TPlus TOPar TOCro_Lambda TOBrace TMul TMinus TInt TInclude TInc TIfdefelse TIfdefelif TIfdefVersion TIfdefMisc TIfdefBool TIfdef TIdent_TypedefConstr TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_MacroString TIdent_MacroStmt TIdent_MacroIterator TIdent_MacroDecl TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TIdent TFloat TEndif TEllipsis TDefine TDec TCppDirectiveOther TCommentNewline_DefineEndOfMacro TColCol_BeforeTypedef TColCol TChar TCBrace TBang TAndLog TAnd LDots EOF ]
labeled -> Tcase . const_expr TEllipsis const_expr TCol statement [ Twhile Twchar_t_Constr Twchar_t Tvolatile Tvoid Tvirtual Tusing Tunsigned Tunion Ttypeof Ttypename Ttypeid Ttypedef Ttry Ttrue Tthrow Tthread_local Tthis Tswitch Tstruct Tstatic_cast Tstatic Tsizeof Tsigned Tshort_Constr Tshort Treturn Trestrict Treinterpret_cast Tregister Toperator Tnullptr Tnull Tnew Tnamespace Tmutable Tlong_Constr Tlong Tint_Constr Tint Tinline Tif Tgoto Tfriend Tfor Tfloat_Constr Tfloat Tfalse Textern Tenum Telse Tdynamic_cast Tdouble_Constr Tdouble Tdo Tdelete Tdefault Tdecltype Tcontinue Tconstexpr Tconst_cast Tconst Tclass Tchar_Constr Tchar Tcase Tbreak Tbool_Constr Tbool Tauto Tasm TUndef TTilde TString TPtVirg TPlus TOPar TOCro_Lambda TOBrace TMul TMinus TInt TInclude TInc TIfdefelse TIfdefelif TIfdefVersion TIfdefMisc TIfdefBool TIfdef TIdent_TypedefConstr TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_MacroString TIdent_MacroStmt TIdent_MacroIterator TIdent_MacroDecl TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TIdent TFloat TEndif TEllipsis TDefine TDec TCppDirectiveOther TCommentNewline_DefineEndOfMacro TColCol_BeforeTypedef TColCol TChar TCBrace TBang TAndLog TAnd LDots EOF ]
## Transitions:
-- On Twchar_t_Constr shift to state 14
-- On Twchar_t shift to state 1
-- On Tvoid shift to state 3
-- On Tunsigned shift to state 15
-- On Ttypeof shift to state 17
-- On Ttypeid shift to state 23
-- On Ttrue shift to state 25
-- On Tthis shift to state 26
-- On Tstatic_cast shift to state 28
-- On Tsizeof shift to state 29
-- On Tsigned shift to state 30
-- On Tshort_Constr shift to state 31
-- On Tshort shift to state 32
-- On Treinterpret_cast shift to state 33
-- On Toperator shift to state 34
-- On Tnullptr shift to state 48
-- On Tnull shift to state 49
-- On Tlong_Constr shift to state 50
-- On Tlong shift to state 38
-- On Tint_Constr shift to state 51
-- On Tint shift to state 39
-- On Tfloat_Constr shift to state 52
-- On Tfloat shift to state 40
-- On Tfalse shift to state 53
-- On Tdynamic_cast shift to state 54
-- On Tdouble_Constr shift to state 55
-- On Tdouble shift to state 41
-- On Tdecltype shift to state 45
-- On Tconst_cast shift to state 56
-- On Tchar_Constr shift to state 57
-- On Tchar shift to state 58
-- On Tbool_Constr shift to state 59
-- On Tbool shift to state 60
-- On TTilde shift to state 61
-- On TString shift to state 62
-- On TPlus shift to state 63
-- On TOPar shift to state 64
-- On TOCro_Lambda shift to state 78
-- On TMul shift to state 88
-- On TMinus shift to state 89
-- On TInt shift to state 90
-- On TInc shift to state 91
-- On TIdent_TypedefConstr shift to state 106
-- On TIdent_Typedef shift to state 20
-- On TIdent_TemplatenameInQualifier_BeforeTypedef shift to state 21
-- On TIdent_TemplatenameInQualifier shift to state 12
-- On TIdent_Templatename shift to state 108
-- On TIdent_MacroString shift to state 110
-- On TIdent_ClassnameInQualifier_BeforeTypedef shift to state 111
-- On TIdent_ClassnameInQualifier shift to state 112
-- On TIdent shift to state 113
-- On TFloat shift to state 116
-- On TDec shift to state 117
-- On TColCol_BeforeTypedef shift to state 118
-- On TColCol shift to state 128
-- On TChar shift to state 174
-- On TBang shift to state 175
-- On TAndLog shift to state 176
-- On TAnd shift to state 177
-- On LDots shift to state 178
-- On unqualified_id shift to state 179
-- On unary_op shift to state 180
-- On unary_expr shift to state 181
-- On type_name shift to state 182
-- On type_cplusplus_id shift to state 183
-- On template_id shift to state 120
-- On string_elem shift to state 184
-- On simple_type_specifier shift to state 189
-- On shift_expr shift to state 217
-- On relational_expr shift to state 229
-- On qualified_id shift to state 191
-- On primary_expr shift to state 192
-- On primary_cplusplus_id shift to state 193
-- On postfix_expr shift to state 194
-- On pm_expr shift to state 219
-- On option(TColCol) shift to state 221
-- On operator_function_id shift to state 168
-- On new_expr shift to state 233
-- On nested_name_specifier2 shift to state 207
-- On nested_name_specifier shift to state 165
-- On multiplicative_expr shift to state 234
-- On logical_or_expr shift to state 246
-- On logical_and_expr shift to state 250
-- On literal shift to state 238
-- On lambda_introducer shift to state 239
-- On inclusive_or_expr shift to state 272
-- On id_expression shift to state 241
-- On exclusive_or_expr shift to state 273
-- On equality_expr shift to state 256
-- On enum_name_or_typedef_name_or_simple_class_name shift to state 123
-- On delete_expr shift to state 242
-- On decltype_specifier shift to state 243
-- On cpp_cast_operator shift to state 244
-- On conversion_function_id shift to state 169
-- On const_expr shift to state 567
-- On cond_expr shift to state 481
-- On class_or_namespace_name_for_qualifier2 shift to state 124
-- On class_or_namespace_name_for_qualifier shift to state 170
-- On cast_operator_expr shift to state 261
-- On cast_expr shift to state 262
-- On cast_constructor_expr shift to state 263
-- On basic_type_2 shift to state 264
-- On and_expr shift to state 334
-- On additive_expr shift to state 341
## Reductions:
-- On Tnew Tdelete
--   reduce production option(TColCol) ->

State 567:
## Known stack suffix:
## Tcase const_expr
## LR(1) items:
labeled -> Tcase const_expr . TCol statement [ Twhile Twchar_t_Constr Twchar_t Tvolatile Tvoid Tvirtual Tusing Tunsigned Tunion Ttypeof Ttypename Ttypeid Ttypedef Ttry Ttrue Tthrow Tthread_local Tthis Tswitch Tstruct Tstatic_cast Tstatic Tsizeof Tsigned Tshort_Constr Tshort Treturn Trestrict Treinterpret_cast Tregister Toperator Tnullptr Tnull Tnew Tnamespace Tmutable Tlong_Constr Tlong Tint_Constr Tint Tinline Tif Tgoto Tfriend Tfor Tfloat_Constr Tfloat Tfalse Textern Tenum Telse Tdynamic_cast Tdouble_Constr Tdouble Tdo Tdelete Tdefault Tdecltype Tcontinue Tconstexpr Tconst_cast Tconst Tclass Tchar_Constr Tchar Tcase Tbreak Tbool_Constr Tbool Tauto Tasm TUndef TTilde TString TPtVirg TPlus TOPar TOCro_Lambda TOBrace TMul TMinus TInt TInclude TInc TIfdefelse TIfdefelif TIfdefVersion TIfdefMisc TIfdefBool TIfdef TIdent_TypedefConstr TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_MacroString TIdent_MacroStmt TIdent_MacroIterator TIdent_MacroDecl TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TIdent TFloat TEndif TEllipsis TDefine TDec TCppDirectiveOther TCommentNewline_DefineEndOfMacro TColCol_BeforeTypedef TColCol TChar TCBrace TBang TAndLog TAnd LDots EOF ]
labeled -> Tcase const_expr . TEllipsis const_expr TCol statement [ Twhile Twchar_t_Constr Twchar_t Tvolatile Tvoid Tvirtual Tusing Tunsigned Tunion Ttypeof Ttypename Ttypeid Ttypedef Ttry Ttrue Tthrow Tthread_local Tthis Tswitch Tstruct Tstatic_cast Tstatic Tsizeof Tsigned Tshort_Constr Tshort Treturn Trestrict Treinterpret_cast Tregister Toperator Tnullptr Tnull Tnew Tnamespace Tmutable Tlong_Constr Tlong Tint_Constr Tint Tinline Tif Tgoto Tfriend Tfor Tfloat_Constr Tfloat Tfalse Textern Tenum Telse Tdynamic_cast Tdouble_Constr Tdouble Tdo Tdelete Tdefault Tdecltype Tcontinue Tconstexpr Tconst_cast Tconst Tclass Tchar_Constr Tchar Tcase Tbreak Tbool_Constr Tbool Tauto Tasm TUndef TTilde TString TPtVirg TPlus TOPar TOCro_Lambda TOBrace TMul TMinus TInt TInclude TInc TIfdefelse TIfdefelif TIfdefVersion TIfdefMisc TIfdefBool TIfdef TIdent_TypedefConstr TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_MacroString TIdent_MacroStmt TIdent_MacroIterator TIdent_MacroDecl TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TIdent TFloat TEndif TEllipsis TDefine TDec TCppDirectiveOther TCommentNewline_DefineEndOfMacro TColCol_BeforeTypedef TColCol TChar TCBrace TBang TAndLog TAnd LDots EOF ]
## Transitions:
-- On TEllipsis shift to state 568
-- On TCol shift to state 619
## Reductions:

State 568:
## Known stack suffix:
## Tcase const_expr TEllipsis
## LR(1) items:
labeled -> Tcase const_expr TEllipsis . const_expr TCol statement [ Twhile Twchar_t_Constr Twchar_t Tvolatile Tvoid Tvirtual Tusing Tunsigned Tunion Ttypeof Ttypename Ttypeid Ttypedef Ttry Ttrue Tthrow Tthread_local Tthis Tswitch Tstruct Tstatic_cast Tstatic Tsizeof Tsigned Tshort_Constr Tshort Treturn Trestrict Treinterpret_cast Tregister Toperator Tnullptr Tnull Tnew Tnamespace Tmutable Tlong_Constr Tlong Tint_Constr Tint Tinline Tif Tgoto Tfriend Tfor Tfloat_Constr Tfloat Tfalse Textern Tenum Telse Tdynamic_cast Tdouble_Constr Tdouble Tdo Tdelete Tdefault Tdecltype Tcontinue Tconstexpr Tconst_cast Tconst Tclass Tchar_Constr Tchar Tcase Tbreak Tbool_Constr Tbool Tauto Tasm TUndef TTilde TString TPtVirg TPlus TOPar TOCro_Lambda TOBrace TMul TMinus TInt TInclude TInc TIfdefelse TIfdefelif TIfdefVersion TIfdefMisc TIfdefBool TIfdef TIdent_TypedefConstr TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_MacroString TIdent_MacroStmt TIdent_MacroIterator TIdent_MacroDecl TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TIdent TFloat TEndif TEllipsis TDefine TDec TCppDirectiveOther TCommentNewline_DefineEndOfMacro TColCol_BeforeTypedef TColCol TChar TCBrace TBang TAndLog TAnd LDots EOF ]
## Transitions:
-- On Twchar_t_Constr shift to state 14
-- On Twchar_t shift to state 1
-- On Tvoid shift to state 3
-- On Tunsigned shift to state 15
-- On Ttypeof shift to state 17
-- On Ttypeid shift to state 23
-- On Ttrue shift to state 25
-- On Tthis shift to state 26
-- On Tstatic_cast shift to state 28
-- On Tsizeof shift to state 29
-- On Tsigned shift to state 30
-- On Tshort_Constr shift to state 31
-- On Tshort shift to state 32
-- On Treinterpret_cast shift to state 33
-- On Toperator shift to state 34
-- On Tnullptr shift to state 48
-- On Tnull shift to state 49
-- On Tlong_Constr shift to state 50
-- On Tlong shift to state 38
-- On Tint_Constr shift to state 51
-- On Tint shift to state 39
-- On Tfloat_Constr shift to state 52
-- On Tfloat shift to state 40
-- On Tfalse shift to state 53
-- On Tdynamic_cast shift to state 54
-- On Tdouble_Constr shift to state 55
-- On Tdouble shift to state 41
-- On Tdecltype shift to state 45
-- On Tconst_cast shift to state 56
-- On Tchar_Constr shift to state 57
-- On Tchar shift to state 58
-- On Tbool_Constr shift to state 59
-- On Tbool shift to state 60
-- On TTilde shift to state 61
-- On TString shift to state 62
-- On TPlus shift to state 63
-- On TOPar shift to state 64
-- On TOCro_Lambda shift to state 78
-- On TMul shift to state 88
-- On TMinus shift to state 89
-- On TInt shift to state 90
-- On TInc shift to state 91
-- On TIdent_TypedefConstr shift to state 106
-- On TIdent_Typedef shift to state 20
-- On TIdent_TemplatenameInQualifier_BeforeTypedef shift to state 21
-- On TIdent_TemplatenameInQualifier shift to state 12
-- On TIdent_Templatename shift to state 108
-- On TIdent_MacroString shift to state 110
-- On TIdent_ClassnameInQualifier_BeforeTypedef shift to state 111
-- On TIdent_ClassnameInQualifier shift to state 112
-- On TIdent shift to state 113
-- On TFloat shift to state 116
-- On TDec shift to state 117
-- On TColCol_BeforeTypedef shift to state 118
-- On TColCol shift to state 128
-- On TChar shift to state 174
-- On TBang shift to state 175
-- On TAndLog shift to state 176
-- On TAnd shift to state 177
-- On LDots shift to state 178
-- On unqualified_id shift to state 179
-- On unary_op shift to state 180
-- On unary_expr shift to state 181
-- On type_name shift to state 182
-- On type_cplusplus_id shift to state 183
-- On template_id shift to state 120
-- On string_elem shift to state 184
-- On simple_type_specifier shift to state 189
-- On shift_expr shift to state 217
-- On relational_expr shift to state 229
-- On qualified_id shift to state 191
-- On primary_expr shift to state 192
-- On primary_cplusplus_id shift to state 193
-- On postfix_expr shift to state 194
-- On pm_expr shift to state 219
-- On option(TColCol) shift to state 221
-- On operator_function_id shift to state 168
-- On new_expr shift to state 233
-- On nested_name_specifier2 shift to state 207
-- On nested_name_specifier shift to state 165
-- On multiplicative_expr shift to state 234
-- On logical_or_expr shift to state 246
-- On logical_and_expr shift to state 250
-- On literal shift to state 238
-- On lambda_introducer shift to state 239
-- On inclusive_or_expr shift to state 272
-- On id_expression shift to state 241
-- On exclusive_or_expr shift to state 273
-- On equality_expr shift to state 256
-- On enum_name_or_typedef_name_or_simple_class_name shift to state 123
-- On delete_expr shift to state 242
-- On decltype_specifier shift to state 243
-- On cpp_cast_operator shift to state 244
-- On conversion_function_id shift to state 169
-- On const_expr shift to state 569
-- On cond_expr shift to state 481
-- On class_or_namespace_name_for_qualifier2 shift to state 124
-- On class_or_namespace_name_for_qualifier shift to state 170
-- On cast_operator_expr shift to state 261
-- On cast_expr shift to state 262
-- On cast_constructor_expr shift to state 263
-- On basic_type_2 shift to state 264
-- On and_expr shift to state 334
-- On additive_expr shift to state 341
## Reductions:
-- On Tnew Tdelete
--   reduce production option(TColCol) ->

State 569:
## Known stack suffix:
## Tcase const_expr TEllipsis const_expr
## LR(1) items:
labeled -> Tcase const_expr TEllipsis const_expr . TCol statement [ Twhile Twchar_t_Constr Twchar_t Tvolatile Tvoid Tvirtual Tusing Tunsigned Tunion Ttypeof Ttypename Ttypeid Ttypedef Ttry Ttrue Tthrow Tthread_local Tthis Tswitch Tstruct Tstatic_cast Tstatic Tsizeof Tsigned Tshort_Constr Tshort Treturn Trestrict Treinterpret_cast Tregister Toperator Tnullptr Tnull Tnew Tnamespace Tmutable Tlong_Constr Tlong Tint_Constr Tint Tinline Tif Tgoto Tfriend Tfor Tfloat_Constr Tfloat Tfalse Textern Tenum Telse Tdynamic_cast Tdouble_Constr Tdouble Tdo Tdelete Tdefault Tdecltype Tcontinue Tconstexpr Tconst_cast Tconst Tclass Tchar_Constr Tchar Tcase Tbreak Tbool_Constr Tbool Tauto Tasm TUndef TTilde TString TPtVirg TPlus TOPar TOCro_Lambda TOBrace TMul TMinus TInt TInclude TInc TIfdefelse TIfdefelif TIfdefVersion TIfdefMisc TIfdefBool TIfdef TIdent_TypedefConstr TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_MacroString TIdent_MacroStmt TIdent_MacroIterator TIdent_MacroDecl TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TIdent TFloat TEndif TEllipsis TDefine TDec TCppDirectiveOther TCommentNewline_DefineEndOfMacro TColCol_BeforeTypedef TColCol TChar TCBrace TBang TAndLog TAnd LDots EOF ]
## Transitions:
-- On TCol shift to state 570
## Reductions:

State 570:
## Known stack suffix:
## Tcase const_expr TEllipsis const_expr TCol
## LR(1) items:
labeled -> Tcase const_expr TEllipsis const_expr TCol . statement [ Twhile Twchar_t_Constr Twchar_t Tvolatile Tvoid Tvirtual Tusing Tunsigned Tunion Ttypeof Ttypename Ttypeid Ttypedef Ttry Ttrue Tthrow Tthread_local Tthis Tswitch Tstruct Tstatic_cast Tstatic Tsizeof Tsigned Tshort_Constr Tshort Treturn Trestrict Treinterpret_cast Tregister Toperator Tnullptr Tnull Tnew Tnamespace Tmutable Tlong_Constr Tlong Tint_Constr Tint Tinline Tif Tgoto Tfriend Tfor Tfloat_Constr Tfloat Tfalse Textern Tenum Telse Tdynamic_cast Tdouble_Constr Tdouble Tdo Tdelete Tdefault Tdecltype Tcontinue Tconstexpr Tconst_cast Tconst Tclass Tchar_Constr Tchar Tcase Tbreak Tbool_Constr Tbool Tauto Tasm TUndef TTilde TString TPtVirg TPlus TOPar TOCro_Lambda TOBrace TMul TMinus TInt TInclude TInc TIfdefelse TIfdefelif TIfdefVersion TIfdefMisc TIfdefBool TIfdef TIdent_TypedefConstr TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_MacroString TIdent_MacroStmt TIdent_MacroIterator TIdent_MacroDecl TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TIdent TFloat TEndif TEllipsis TDefine TDec TCppDirectiveOther TCommentNewline_DefineEndOfMacro TColCol_BeforeTypedef TColCol TChar TCBrace TBang TAndLog TAnd LDots EOF ]
## Transitions:
-- On Twhile shift to state 94
-- On Twchar_t_Constr shift to state 14
-- On Twchar_t shift to state 1
-- On Tvolatile shift to state 2
-- On Tvoid shift to state 3
-- On Tvirtual shift to state 4
-- On Tusing shift to state 5
-- On Tunsigned shift to state 15
-- On Tunion shift to state 16
-- On Ttypeof shift to state 17
-- On Ttypename shift to state 19
-- On Ttypeid shift to state 23
-- On Ttypedef shift to state 96
-- On Ttry shift to state 431
-- On Ttrue shift to state 25
-- On Tthrow shift to state 47
-- On Tthread_local shift to state 97
-- On Tthis shift to state 26
-- On Tswitch shift to state 515
-- On Tstruct shift to state 27
-- On Tstatic_cast shift to state 28
-- On Tstatic shift to state 323
-- On Tsizeof shift to state 29
-- On Tsigned shift to state 30
-- On Tshort_Constr shift to state 31
-- On Tshort shift to state 32
-- On Treturn shift to state 537
-- On Trestrict shift to state 65
-- On Treinterpret_cast shift to state 33
-- On Tregister shift to state 99
-- On Toperator shift to state 34
-- On Tnullptr shift to state 48
-- On Tnull shift to state 49
-- On Tnamespace shift to state 540
-- On Tmutable shift to state 100
-- On Tlong_Constr shift to state 50
-- On Tlong shift to state 38
-- On Tint_Constr shift to state 51
-- On Tint shift to state 39
-- On Tinline shift to state 101
-- On Tif shift to state 545
-- On Tgoto shift to state 549
-- On Tfriend shift to state 102
-- On Tfor shift to state 553
-- On Tfloat_Constr shift to state 52
-- On Tfloat shift to state 40
-- On Tfalse shift to state 53
-- On Textern shift to state 103
-- On Tenum shift to state 66
-- On Tdynamic_cast shift to state 54
-- On Tdouble_Constr shift to state 55
-- On Tdouble shift to state 41
-- On Tdo shift to state 562
-- On Tdefault shift to state 563
-- On Tdecltype shift to state 45
-- On Tcontinue shift to state 565
-- On Tconstexpr shift to state 104
-- On Tconst_cast shift to state 56
-- On Tconst shift to state 76
-- On Tclass shift to state 77
-- On Tchar_Constr shift to state 57
-- On Tchar shift to state 58
-- On Tcase shift to state 566
-- On Tbreak shift to state 571
-- On Tbool_Constr shift to state 59
-- On Tbool shift to state 60
-- On Tauto shift to state 105
-- On Tasm shift to state 366
-- On TTilde shift to state 61
-- On TString shift to state 62
-- On TPlus shift to state 63
-- On TOPar shift to state 64
-- On TOCro_Lambda shift to state 78
-- On TOBrace shift to state 93
-- On TMul shift to state 88
-- On TMinus shift to state 89
-- On TInt shift to state 90
-- On TInc shift to state 91
-- On TIdent_TypedefConstr shift to state 106
-- On TIdent_Typedef shift to state 572
-- On TIdent_TemplatenameInQualifier_BeforeTypedef shift to state 21
-- On TIdent_TemplatenameInQualifier shift to state 12
-- On TIdent_Templatename shift to state 108
-- On TIdent_MacroString shift to state 110
-- On TIdent_MacroStmt shift to state 573
-- On TIdent_MacroIterator shift to state 574
-- On TIdent_MacroDecl shift to state 423
-- On TIdent_ClassnameInQualifier_BeforeTypedef shift to state 111
-- On TIdent_ClassnameInQualifier shift to state 112
-- On TIdent shift to state 578
-- On TFloat shift to state 116
-- On TEllipsis shift to state 580
-- On TDec shift to state 117
-- On TColCol_BeforeTypedef shift to state 118
-- On TColCol shift to state 128
-- On TChar shift to state 174
-- On TBang shift to state 175
-- On TAndLog shift to state 176
-- On TAnd shift to state 177
-- On LDots shift to state 178
-- On using_directive shift to state 581
-- On using_declaration shift to state 582
-- On unqualified_id shift to state 179
-- On unary_op shift to state 180
-- On unary_expr shift to state 181
-- On type_spec shift to state 314
-- On type_name shift to state 182
-- On type_cplusplus_id shift to state 183
-- On try_block shift to state 583
-- On template_id shift to state 120
-- On string_elem shift to state 184
-- On storage_class_spec shift to state 316
-- On statement shift to state 618
-- On simple_type_specifier shift to state 266
-- On simple_declaration shift to state 585
-- On shift_expr shift to state 217
-- On selection shift to state 586
-- On relational_expr shift to state 229
-- On qualified_id shift to state 191
-- On primary_expr shift to state 192
-- On primary_cplusplus_id shift to state 193
-- On postfix_expr shift to state 194
-- On pm_expr shift to state 219
-- On option(expr) shift to state 556
-- On option(TColCol) shift to state 221
-- On operator_function_id shift to state 168
-- On new_expr shift to state 233
-- On nested_name_specifier2 shift to state 207
-- On nested_name_specifier shift to state 165
-- On namespace_alias_definition shift to state 587
-- On multiplicative_expr shift to state 234
-- On logical_or_expr shift to state 246
-- On logical_and_expr shift to state 250
-- On literal shift to state 238
-- On lambda_introducer shift to state 239
-- On labeled shift to state 588
-- On jump shift to state 589
-- On iteration shift to state 591
-- On inclusive_or_expr shift to state 272
-- On ident shift to state 592
-- On id_expression shift to state 241
-- On function_spec shift to state 437
-- On function_definition shift to state 595
-- On expr_statement shift to state 596
-- On expr shift to state 597
-- On exclusive_or_expr shift to state 273
-- On equality_expr shift to state 256
-- On enum_specifier shift to state 209
-- On enum_name_or_typedef_name_or_simple_class_name shift to state 123
-- On enum_head shift to state 210
-- On elaborated_type_specifier shift to state 274
-- On delete_expr shift to state 242
-- On decltype_specifier shift to state 243
-- On declaration_statement shift to state 598
-- On decl_spec_seq shift to state 599
-- On decl_spec shift to state 473
-- On cv_qualif shift to state 475
-- On cpp_cast_operator shift to state 244
-- On conversion_function_id shift to state 169
-- On cond_expr shift to state 330
-- On compound shift to state 615
-- On class_specifier shift to state 277
-- On class_or_namespace_name_for_qualifier2 shift to state 124
-- On class_or_namespace_name_for_qualifier shift to state 170
-- On class_key shift to state 278
-- On class_head shift to state 301
-- On cast_operator_expr shift to state 261
-- On cast_expr shift to state 331
-- On cast_constructor_expr shift to state 263
-- On block_declaration shift to state 616
-- On basic_type_2 shift to state 264
-- On assign_expr shift to state 539
-- On asm_definition shift to state 617
-- On and_expr shift to state 334
-- On additive_expr shift to state 341
## Reductions:
-- On Tnew Tdelete
--   reduce production option(TColCol) ->
-- On TPtVirg
--   reduce production option(expr) ->

State 571:
## Known stack suffix:
## Tbreak
## LR(1) items:
jump -> Tbreak . [ TPtVirg ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production jump -> Tbreak

State 572:
## Known stack suffix:
## TIdent_Typedef
## LR(1) items:
enum_name_or_typedef_name_or_simple_class_name -> TIdent_Typedef . [ Twchar_t Tvolatile Tvoid Tvirtual Tunsigned Tunion Ttypeof Ttypename Ttypedef Tthread_local Tstruct Tstatic Tsigned Tshort Trestrict Tregister Toperator Tmutable Tlong Tint Tinline Tfriend Tfloat Textern Tenum Tdouble Tdecltype Tconstexpr Tconst Tclass Tchar Tbool Tauto TPtVirg TOPar TOBrace TMul TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TIdent TColCol_BeforeTypedef TColCol TAndLog TAnd ]
ident -> TIdent_Typedef . [ TCol ]
## Transitions:
## Reductions:
-- On Twchar_t Tvolatile Tvoid Tvirtual Tunsigned Tunion Ttypeof Ttypename Ttypedef Tthread_local Tstruct Tstatic Tsigned Tshort Trestrict Tregister Toperator Tmutable Tlong Tint Tinline Tfriend Tfloat Textern Tenum Tdouble Tdecltype Tconstexpr Tconst Tclass Tchar Tbool Tauto TPtVirg TOPar TOBrace TMul TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TIdent TColCol_BeforeTypedef TColCol TAndLog TAnd
--   reduce production enum_name_or_typedef_name_or_simple_class_name -> TIdent_Typedef
-- On TCol
--   reduce production ident -> TIdent_Typedef

State 573:
## Known stack suffix:
## TIdent_MacroStmt
## LR(1) items:
statement -> TIdent_MacroStmt . [ Twhile Twchar_t_Constr Twchar_t Tvolatile Tvoid Tvirtual Tusing Tunsigned Tunion Ttypeof Ttypename Ttypeid Ttypedef Ttry Ttrue Tthrow Tthread_local Tthis Tswitch Tstruct Tstatic_cast Tstatic Tsizeof Tsigned Tshort_Constr Tshort Treturn Trestrict Treinterpret_cast Tregister Toperator Tnullptr Tnull Tnew Tnamespace Tmutable Tlong_Constr Tlong Tint_Constr Tint Tinline Tif Tgoto Tfriend Tfor Tfloat_Constr Tfloat Tfalse Textern Tenum Telse Tdynamic_cast Tdouble_Constr Tdouble Tdo Tdelete Tdefault Tdecltype Tcontinue Tconstexpr Tconst_cast Tconst Tclass Tchar_Constr Tchar Tcase Tbreak Tbool_Constr Tbool Tauto Tasm TUndef TTilde TString TPtVirg TPlus TOPar TOCro_Lambda TOBrace TMul TMinus TInt TInclude TInc TIfdefelse TIfdefelif TIfdefVersion TIfdefMisc TIfdefBool TIfdef TIdent_TypedefConstr TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_MacroString TIdent_MacroStmt TIdent_MacroIterator TIdent_MacroDecl TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TIdent TFloat TEndif TEllipsis TDefine TDec TCppDirectiveOther TCommentNewline_DefineEndOfMacro TColCol_BeforeTypedef TColCol TChar TCBrace TBang TAndLog TAnd LDots EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production statement -> TIdent_MacroStmt

State 574:
## Known stack suffix:
## TIdent_MacroIterator
## LR(1) items:
iteration -> TIdent_MacroIterator . TOPar optl(listc(argument)) TCPar statement [ Twhile Twchar_t_Constr Twchar_t Tvolatile Tvoid Tvirtual Tusing Tunsigned Tunion Ttypeof Ttypename Ttypeid Ttypedef Ttry Ttrue Tthrow Tthread_local Tthis Tswitch Tstruct Tstatic_cast Tstatic Tsizeof Tsigned Tshort_Constr Tshort Treturn Trestrict Treinterpret_cast Tregister Toperator Tnullptr Tnull Tnew Tnamespace Tmutable Tlong_Constr Tlong Tint_Constr Tint Tinline Tif Tgoto Tfriend Tfor Tfloat_Constr Tfloat Tfalse Textern Tenum Telse Tdynamic_cast Tdouble_Constr Tdouble Tdo Tdelete Tdefault Tdecltype Tcontinue Tconstexpr Tconst_cast Tconst Tclass Tchar_Constr Tchar Tcase Tbreak Tbool_Constr Tbool Tauto Tasm TUndef TTilde TString TPtVirg TPlus TOPar TOCro_Lambda TOBrace TMul TMinus TInt TInclude TInc TIfdefelse TIfdefelif TIfdefVersion TIfdefMisc TIfdefBool TIfdef TIdent_TypedefConstr TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_MacroString TIdent_MacroStmt TIdent_MacroIterator TIdent_MacroDecl TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TIdent TFloat TEndif TEllipsis TDefine TDec TCppDirectiveOther TCommentNewline_DefineEndOfMacro TColCol_BeforeTypedef TColCol TChar TCBrace TBang TAndLog TAnd LDots EOF ]
## Transitions:
-- On TOPar shift to state 575
## Reductions:

State 575:
## Known stack suffix:
## TIdent_MacroIterator TOPar
## LR(1) items:
iteration -> TIdent_MacroIterator TOPar . optl(listc(argument)) TCPar statement [ Twhile Twchar_t_Constr Twchar_t Tvolatile Tvoid Tvirtual Tusing Tunsigned Tunion Ttypeof Ttypename Ttypeid Ttypedef Ttry Ttrue Tthrow Tthread_local Tthis Tswitch Tstruct Tstatic_cast Tstatic Tsizeof Tsigned Tshort_Constr Tshort Treturn Trestrict Treinterpret_cast Tregister Toperator Tnullptr Tnull Tnew Tnamespace Tmutable Tlong_Constr Tlong Tint_Constr Tint Tinline Tif Tgoto Tfriend Tfor Tfloat_Constr Tfloat Tfalse Textern Tenum Telse Tdynamic_cast Tdouble_Constr Tdouble Tdo Tdelete Tdefault Tdecltype Tcontinue Tconstexpr Tconst_cast Tconst Tclass Tchar_Constr Tchar Tcase Tbreak Tbool_Constr Tbool Tauto Tasm TUndef TTilde TString TPtVirg TPlus TOPar TOCro_Lambda TOBrace TMul TMinus TInt TInclude TInc TIfdefelse TIfdefelif TIfdefVersion TIfdefMisc TIfdefBool TIfdef TIdent_TypedefConstr TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_MacroString TIdent_MacroStmt TIdent_MacroIterator TIdent_MacroDecl TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TIdent TFloat TEndif TEllipsis TDefine TDec TCppDirectiveOther TCommentNewline_DefineEndOfMacro TColCol_BeforeTypedef TColCol TChar TCBrace TBang TAndLog TAnd LDots EOF ]
## Transitions:
-- On Twchar_t_Constr shift to state 14
-- On Twchar_t shift to state 1
-- On Tvolatile shift to state 2
-- On Tvoid shift to state 3
-- On Tunsigned shift to state 15
-- On Tunion shift to state 16
-- On Ttypeof shift to state 17
-- On Ttypename shift to state 19
-- On Ttypeid shift to state 23
-- On Ttrue shift to state 25
-- On Tthrow shift to state 47
-- On Tthis shift to state 26
-- On Tstruct shift to state 27
-- On Tstatic_cast shift to state 28
-- On Tsizeof shift to state 29
-- On Tsigned shift to state 30
-- On Tshort_Constr shift to state 31
-- On Tshort shift to state 32
-- On Trestrict shift to state 65
-- On Treinterpret_cast shift to state 33
-- On Toperator shift to state 34
-- On Tnullptr shift to state 48
-- On Tnull shift to state 49
-- On Tlong_Constr shift to state 50
-- On Tlong shift to state 38
-- On Tint_Constr shift to state 51
-- On Tint shift to state 39
-- On Tfloat_Constr shift to state 52
-- On Tfloat shift to state 40
-- On Tfalse shift to state 53
-- On Tenum shift to state 66
-- On Tdynamic_cast shift to state 54
-- On Tdouble_Constr shift to state 55
-- On Tdouble shift to state 41
-- On Tdecltype shift to state 45
-- On Tconst_cast shift to state 56
-- On Tconst shift to state 76
-- On Tclass shift to state 77
-- On Tchar_Constr shift to state 57
-- On Tchar shift to state 58
-- On Tbool_Constr shift to state 59
-- On Tbool shift to state 60
-- On TTilde shift to state 61
-- On TString shift to state 62
-- On TPlus shift to state 63
-- On TOPar shift to state 64
-- On TOCro_Lambda shift to state 78
-- On TMul shift to state 88
-- On TMinus shift to state 89
-- On TInt shift to state 90
-- On TInc shift to state 91
-- On TIdent_TypedefConstr shift to state 106
-- On TIdent_Typedef shift to state 20
-- On TIdent_TemplatenameInQualifier_BeforeTypedef shift to state 21
-- On TIdent_TemplatenameInQualifier shift to state 12
-- On TIdent_Templatename shift to state 108
-- On TIdent_MacroString shift to state 110
-- On TIdent_ClassnameInQualifier_BeforeTypedef shift to state 111
-- On TIdent_ClassnameInQualifier shift to state 112
-- On TIdent shift to state 113
-- On TFloat shift to state 116
-- On TEllipsis shift to state 201
-- On TDec shift to state 117
-- On TColCol_BeforeTypedef shift to state 118
-- On TColCol shift to state 128
-- On TChar shift to state 174
-- On TBang shift to state 175
-- On TAny_Action shift to state 202
-- On TAndLog shift to state 176
-- On TAnd shift to state 177
-- On LDots shift to state 178
-- On unqualified_id shift to state 179
-- On unary_op shift to state 180
-- On unary_expr shift to state 181
-- On type_spec shift to state 204
-- On type_name shift to state 182
-- On type_id shift to state 224
-- On type_cplusplus_id shift to state 183
-- On template_id shift to state 120
-- On string_elem shift to state 184
-- On spec_qualif_list shift to state 225
-- On simple_type_specifier shift to state 266
-- On shift_expr shift to state 217
-- On relational_expr shift to state 229
-- On qualified_id shift to state 191
-- On primary_expr shift to state 192
-- On primary_cplusplus_id shift to state 193
-- On postfix_expr shift to state 194
-- On pm_expr shift to state 219
-- On optl(listc(argument)) shift to state 576
-- On option(TColCol) shift to state 221
-- On operator_function_id shift to state 168
-- On nonempty_list(TAny_Action) shift to state 269
-- On new_expr shift to state 233
-- On nested_name_specifier2 shift to state 207
-- On nested_name_specifier shift to state 165
-- On multiplicative_expr shift to state 234
-- On logical_or_expr shift to state 246
-- On logical_and_expr shift to state 250
-- On literal shift to state 238
-- On listc(argument) shift to state 270
-- On lambda_introducer shift to state 239
-- On inclusive_or_expr shift to state 272
-- On id_expression shift to state 241
-- On exclusive_or_expr shift to state 273
-- On equality_expr shift to state 256
-- On enum_specifier shift to state 209
-- On enum_name_or_typedef_name_or_simple_class_name shift to state 123
-- On enum_head shift to state 210
-- On elaborated_type_specifier shift to state 274
-- On delete_expr shift to state 242
-- On decltype_specifier shift to state 243
-- On cv_qualif shift to state 275
-- On cpp_cast_operator shift to state 244
-- On conversion_function_id shift to state 169
-- On cond_expr shift to state 330
-- On class_specifier shift to state 277
-- On class_or_namespace_name_for_qualifier2 shift to state 124
-- On class_or_namespace_name_for_qualifier shift to state 170
-- On class_key shift to state 278
-- On class_head shift to state 301
-- On cast_operator_expr shift to state 261
-- On cast_expr shift to state 331
-- On cast_constructor_expr shift to state 263
-- On basic_type_2 shift to state 264
-- On assign_expr shift to state 354
-- On argument shift to state 355
-- On and_expr shift to state 334
-- On additive_expr shift to state 341
## Reductions:
-- On Tnew Tdelete
--   reduce production option(TColCol) ->
-- On TCPar
--   reduce production optl(listc(argument)) ->

State 576:
## Known stack suffix:
## TIdent_MacroIterator TOPar optl(listc(argument))
## LR(1) items:
iteration -> TIdent_MacroIterator TOPar optl(listc(argument)) . TCPar statement [ Twhile Twchar_t_Constr Twchar_t Tvolatile Tvoid Tvirtual Tusing Tunsigned Tunion Ttypeof Ttypename Ttypeid Ttypedef Ttry Ttrue Tthrow Tthread_local Tthis Tswitch Tstruct Tstatic_cast Tstatic Tsizeof Tsigned Tshort_Constr Tshort Treturn Trestrict Treinterpret_cast Tregister Toperator Tnullptr Tnull Tnew Tnamespace Tmutable Tlong_Constr Tlong Tint_Constr Tint Tinline Tif Tgoto Tfriend Tfor Tfloat_Constr Tfloat Tfalse Textern Tenum Telse Tdynamic_cast Tdouble_Constr Tdouble Tdo Tdelete Tdefault Tdecltype Tcontinue Tconstexpr Tconst_cast Tconst Tclass Tchar_Constr Tchar Tcase Tbreak Tbool_Constr Tbool Tauto Tasm TUndef TTilde TString TPtVirg TPlus TOPar TOCro_Lambda TOBrace TMul TMinus TInt TInclude TInc TIfdefelse TIfdefelif TIfdefVersion TIfdefMisc TIfdefBool TIfdef TIdent_TypedefConstr TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_MacroString TIdent_MacroStmt TIdent_MacroIterator TIdent_MacroDecl TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TIdent TFloat TEndif TEllipsis TDefine TDec TCppDirectiveOther TCommentNewline_DefineEndOfMacro TColCol_BeforeTypedef TColCol TChar TCBrace TBang TAndLog TAnd LDots EOF ]
## Transitions:
-- On TCPar shift to state 577
## Reductions:

State 577:
## Known stack suffix:
## TIdent_MacroIterator TOPar optl(listc(argument)) TCPar
## LR(1) items:
iteration -> TIdent_MacroIterator TOPar optl(listc(argument)) TCPar . statement [ Twhile Twchar_t_Constr Twchar_t Tvolatile Tvoid Tvirtual Tusing Tunsigned Tunion Ttypeof Ttypename Ttypeid Ttypedef Ttry Ttrue Tthrow Tthread_local Tthis Tswitch Tstruct Tstatic_cast Tstatic Tsizeof Tsigned Tshort_Constr Tshort Treturn Trestrict Treinterpret_cast Tregister Toperator Tnullptr Tnull Tnew Tnamespace Tmutable Tlong_Constr Tlong Tint_Constr Tint Tinline Tif Tgoto Tfriend Tfor Tfloat_Constr Tfloat Tfalse Textern Tenum Telse Tdynamic_cast Tdouble_Constr Tdouble Tdo Tdelete Tdefault Tdecltype Tcontinue Tconstexpr Tconst_cast Tconst Tclass Tchar_Constr Tchar Tcase Tbreak Tbool_Constr Tbool Tauto Tasm TUndef TTilde TString TPtVirg TPlus TOPar TOCro_Lambda TOBrace TMul TMinus TInt TInclude TInc TIfdefelse TIfdefelif TIfdefVersion TIfdefMisc TIfdefBool TIfdef TIdent_TypedefConstr TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_MacroString TIdent_MacroStmt TIdent_MacroIterator TIdent_MacroDecl TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TIdent TFloat TEndif TEllipsis TDefine TDec TCppDirectiveOther TCommentNewline_DefineEndOfMacro TColCol_BeforeTypedef TColCol TChar TCBrace TBang TAndLog TAnd LDots EOF ]
## Transitions:
-- On Twhile shift to state 94
-- On Twchar_t_Constr shift to state 14
-- On Twchar_t shift to state 1
-- On Tvolatile shift to state 2
-- On Tvoid shift to state 3
-- On Tvirtual shift to state 4
-- On Tusing shift to state 5
-- On Tunsigned shift to state 15
-- On Tunion shift to state 16
-- On Ttypeof shift to state 17
-- On Ttypename shift to state 19
-- On Ttypeid shift to state 23
-- On Ttypedef shift to state 96
-- On Ttry shift to state 431
-- On Ttrue shift to state 25
-- On Tthrow shift to state 47
-- On Tthread_local shift to state 97
-- On Tthis shift to state 26
-- On Tswitch shift to state 515
-- On Tstruct shift to state 27
-- On Tstatic_cast shift to state 28
-- On Tstatic shift to state 323
-- On Tsizeof shift to state 29
-- On Tsigned shift to state 30
-- On Tshort_Constr shift to state 31
-- On Tshort shift to state 32
-- On Treturn shift to state 537
-- On Trestrict shift to state 65
-- On Treinterpret_cast shift to state 33
-- On Tregister shift to state 99
-- On Toperator shift to state 34
-- On Tnullptr shift to state 48
-- On Tnull shift to state 49
-- On Tnamespace shift to state 540
-- On Tmutable shift to state 100
-- On Tlong_Constr shift to state 50
-- On Tlong shift to state 38
-- On Tint_Constr shift to state 51
-- On Tint shift to state 39
-- On Tinline shift to state 101
-- On Tif shift to state 545
-- On Tgoto shift to state 549
-- On Tfriend shift to state 102
-- On Tfor shift to state 553
-- On Tfloat_Constr shift to state 52
-- On Tfloat shift to state 40
-- On Tfalse shift to state 53
-- On Textern shift to state 103
-- On Tenum shift to state 66
-- On Tdynamic_cast shift to state 54
-- On Tdouble_Constr shift to state 55
-- On Tdouble shift to state 41
-- On Tdo shift to state 562
-- On Tdefault shift to state 563
-- On Tdecltype shift to state 45
-- On Tcontinue shift to state 565
-- On Tconstexpr shift to state 104
-- On Tconst_cast shift to state 56
-- On Tconst shift to state 76
-- On Tclass shift to state 77
-- On Tchar_Constr shift to state 57
-- On Tchar shift to state 58
-- On Tcase shift to state 566
-- On Tbreak shift to state 571
-- On Tbool_Constr shift to state 59
-- On Tbool shift to state 60
-- On Tauto shift to state 105
-- On Tasm shift to state 366
-- On TTilde shift to state 61
-- On TString shift to state 62
-- On TPlus shift to state 63
-- On TOPar shift to state 64
-- On TOCro_Lambda shift to state 78
-- On TOBrace shift to state 93
-- On TMul shift to state 88
-- On TMinus shift to state 89
-- On TInt shift to state 90
-- On TInc shift to state 91
-- On TIdent_TypedefConstr shift to state 106
-- On TIdent_Typedef shift to state 572
-- On TIdent_TemplatenameInQualifier_BeforeTypedef shift to state 21
-- On TIdent_TemplatenameInQualifier shift to state 12
-- On TIdent_Templatename shift to state 108
-- On TIdent_MacroString shift to state 110
-- On TIdent_MacroStmt shift to state 573
-- On TIdent_MacroIterator shift to state 574
-- On TIdent_MacroDecl shift to state 423
-- On TIdent_ClassnameInQualifier_BeforeTypedef shift to state 111
-- On TIdent_ClassnameInQualifier shift to state 112
-- On TIdent shift to state 578
-- On TFloat shift to state 116
-- On TEllipsis shift to state 580
-- On TDec shift to state 117
-- On TColCol_BeforeTypedef shift to state 118
-- On TColCol shift to state 128
-- On TChar shift to state 174
-- On TBang shift to state 175
-- On TAndLog shift to state 176
-- On TAnd shift to state 177
-- On LDots shift to state 178
-- On using_directive shift to state 581
-- On using_declaration shift to state 582
-- On unqualified_id shift to state 179
-- On unary_op shift to state 180
-- On unary_expr shift to state 181
-- On type_spec shift to state 314
-- On type_name shift to state 182
-- On type_cplusplus_id shift to state 183
-- On try_block shift to state 583
-- On template_id shift to state 120
-- On string_elem shift to state 184
-- On storage_class_spec shift to state 316
-- On statement shift to state 584
-- On simple_type_specifier shift to state 266
-- On simple_declaration shift to state 585
-- On shift_expr shift to state 217
-- On selection shift to state 586
-- On relational_expr shift to state 229
-- On qualified_id shift to state 191
-- On primary_expr shift to state 192
-- On primary_cplusplus_id shift to state 193
-- On postfix_expr shift to state 194
-- On pm_expr shift to state 219
-- On option(expr) shift to state 556
-- On option(TColCol) shift to state 221
-- On operator_function_id shift to state 168
-- On new_expr shift to state 233
-- On nested_name_specifier2 shift to state 207
-- On nested_name_specifier shift to state 165
-- On namespace_alias_definition shift to state 587
-- On multiplicative_expr shift to state 234
-- On logical_or_expr shift to state 246
-- On logical_and_expr shift to state 250
-- On literal shift to state 238
-- On lambda_introducer shift to state 239
-- On labeled shift to state 588
-- On jump shift to state 589
-- On iteration shift to state 591
-- On inclusive_or_expr shift to state 272
-- On ident shift to state 592
-- On id_expression shift to state 241
-- On function_spec shift to state 437
-- On function_definition shift to state 595
-- On expr_statement shift to state 596
-- On expr shift to state 597
-- On exclusive_or_expr shift to state 273
-- On equality_expr shift to state 256
-- On enum_specifier shift to state 209
-- On enum_name_or_typedef_name_or_simple_class_name shift to state 123
-- On enum_head shift to state 210
-- On elaborated_type_specifier shift to state 274
-- On delete_expr shift to state 242
-- On decltype_specifier shift to state 243
-- On declaration_statement shift to state 598
-- On decl_spec_seq shift to state 599
-- On decl_spec shift to state 473
-- On cv_qualif shift to state 475
-- On cpp_cast_operator shift to state 244
-- On conversion_function_id shift to state 169
-- On cond_expr shift to state 330
-- On compound shift to state 615
-- On class_specifier shift to state 277
-- On class_or_namespace_name_for_qualifier2 shift to state 124
-- On class_or_namespace_name_for_qualifier shift to state 170
-- On class_key shift to state 278
-- On class_head shift to state 301
-- On cast_operator_expr shift to state 261
-- On cast_expr shift to state 331
-- On cast_constructor_expr shift to state 263
-- On block_declaration shift to state 616
-- On basic_type_2 shift to state 264
-- On assign_expr shift to state 539
-- On asm_definition shift to state 617
-- On and_expr shift to state 334
-- On additive_expr shift to state 341
## Reductions:
-- On Tnew Tdelete
--   reduce production option(TColCol) ->
-- On TPtVirg
--   reduce production option(expr) ->

State 578:
## Known stack suffix:
## TIdent
## LR(1) items:
ident -> TIdent . [ TCol ]
postfix_expr -> TIdent . braced_init_list [ TXor TWhy TSupEq TSup TShr TShl TPtrOpStar TPtrOp TPtVirg TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMod TMinus TInfEq TInf TInc TEqEq TEq TDotStar TDot TDiv TDec TCommentNewline_DefineEndOfMacro TComma TCBrace TAssign TAndLog TAnd EOF ]
unqualified_id -> TIdent . [ TXor TWhy TSupEq TSup TShr TShl TPtrOpStar TPtrOp TPtVirg TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMod TMinus TInfEq TInf TInc TEqEq TEq TDotStar TDot TDiv TDec TCommentNewline_DefineEndOfMacro TComma TCBrace TAssign TAndLog TAnd EOF ]
## Transitions:
-- On TOBrace shift to state 114
-- On braced_init_list shift to state 579
## Reductions:
-- On TCol
--   reduce production ident -> TIdent
-- On TXor TWhy TSupEq TSup TShr TShl TPtrOpStar TPtrOp TPtVirg TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMod TMinus TInfEq TInf TInc TEqEq TEq TDotStar TDot TDiv TDec TCommentNewline_DefineEndOfMacro TComma TCBrace TAssign TAndLog TAnd EOF
--   reduce production unqualified_id -> TIdent

State 579:
## Known stack suffix:
## TIdent braced_init_list
## LR(1) items:
postfix_expr -> TIdent braced_init_list . [ TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtrOpStar TPtrOp TPtVirg TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMod TMinus TInfEq TInf TInc TEqEq TEq TEllipsis TDotStar TDot TDiv TDec TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAssign TAndLog TAnd RDots EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production postfix_expr -> TIdent braced_init_list

State 580:
## Known stack suffix:
## TEllipsis
## LR(1) items:
statement -> TEllipsis . [ Twhile Twchar_t_Constr Twchar_t Tvolatile Tvoid Tvirtual Tusing Tunsigned Tunion Ttypeof Ttypename Ttypeid Ttypedef Ttry Ttrue Tthrow Tthread_local Tthis Tswitch Tstruct Tstatic_cast Tstatic Tsizeof Tsigned Tshort_Constr Tshort Treturn Trestrict Treinterpret_cast Tregister Toperator Tnullptr Tnull Tnew Tnamespace Tmutable Tlong_Constr Tlong Tint_Constr Tint Tinline Tif Tgoto Tfriend Tfor Tfloat_Constr Tfloat Tfalse Textern Tenum Telse Tdynamic_cast Tdouble_Constr Tdouble Tdo Tdelete Tdefault Tdecltype Tcontinue Tconstexpr Tconst_cast Tconst Tclass Tchar_Constr Tchar Tcase Tbreak Tbool_Constr Tbool Tauto Tasm TUndef TTilde TString TPtVirg TPlus TOPar TOCro_Lambda TOBrace TMul TMinus TInt TInclude TInc TIfdefelse TIfdefelif TIfdefVersion TIfdefMisc TIfdefBool TIfdef TIdent_TypedefConstr TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_MacroString TIdent_MacroStmt TIdent_MacroIterator TIdent_MacroDecl TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TIdent TFloat TEndif TEllipsis TDefine TDec TCppDirectiveOther TCommentNewline_DefineEndOfMacro TColCol_BeforeTypedef TColCol TChar TCBrace TBang TAndLog TAnd LDots EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production statement -> TEllipsis

State 581:
## Known stack suffix:
## using_directive
## LR(1) items:
block_declaration -> using_directive . [ Twhile Twchar_t_Constr Twchar_t Tvolatile Tvoid Tvirtual Tusing Tunsigned Tunion Ttypeof Ttypename Ttypeid Ttypedef Ttry Ttrue Tthrow Tthread_local Tthis Ttemplate Tswitch Tstruct Tstatic_cast Tstatic Tsizeof Tsigned Tshort_Constr Tshort Treturn Trestrict Treinterpret_cast Tregister Tpublic Tprotected Tprivate Toperator Tnullptr Tnull Tnew Tnamespace Tmutable Tlong_Constr Tlong Tint_Constr Tint Tinline Tif Tgoto Tfriend Tfor Tfloat_Constr Tfloat Tfalse Textern Texplicit Tenum Telse Tdynamic_cast Tdouble_Constr Tdouble Tdo Tdelete Tdefault Tdecltype Tcontinue Tconstexpr Tconst_cast Tconst Tclass Tchar_Constr Tchar Tcase Tbreak Tbool_Constr Tbool Tauto Tasm TUndef TTilde TString TPtVirg TPlus TOPar TOCro_Lambda TOBrace TMul TMinus TInt TInclude TInc TIfdefelse TIfdefelif TIfdefVersion TIfdefMisc TIfdefBool TIfdef TIdent_TypedefConstr TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_MacroString TIdent_MacroStmt TIdent_MacroIterator TIdent_MacroDecl TIdent_Constructor TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TIdent TFloat TEndif TEllipsis TDefine TDec TCppDirectiveOther TCommentNewline_DefineEndOfMacro TColCol_BeforeTypedef TColCol TChar TCBrace TBang TAndLog TAnd LDots EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production block_declaration -> using_directive

State 582:
## Known stack suffix:
## using_declaration
## LR(1) items:
block_declaration -> using_declaration . [ Twhile Twchar_t_Constr Twchar_t Tvolatile Tvoid Tvirtual Tusing Tunsigned Tunion Ttypeof Ttypename Ttypeid Ttypedef Ttry Ttrue Tthrow Tthread_local Tthis Ttemplate Tswitch Tstruct Tstatic_cast Tstatic Tsizeof Tsigned Tshort_Constr Tshort Treturn Trestrict Treinterpret_cast Tregister Tpublic Tprotected Tprivate Toperator Tnullptr Tnull Tnew Tnamespace Tmutable Tlong_Constr Tlong Tint_Constr Tint Tinline Tif Tgoto Tfriend Tfor Tfloat_Constr Tfloat Tfalse Textern Texplicit Tenum Telse Tdynamic_cast Tdouble_Constr Tdouble Tdo Tdelete Tdefault Tdecltype Tcontinue Tconstexpr Tconst_cast Tconst Tclass Tchar_Constr Tchar Tcase Tbreak Tbool_Constr Tbool Tauto Tasm TUndef TTilde TString TPtVirg TPlus TOPar TOCro_Lambda TOBrace TMul TMinus TInt TInclude TInc TIfdefelse TIfdefelif TIfdefVersion TIfdefMisc TIfdefBool TIfdef TIdent_TypedefConstr TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_MacroString TIdent_MacroStmt TIdent_MacroIterator TIdent_MacroDecl TIdent_Constructor TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TIdent TFloat TEndif TEllipsis TDefine TDec TCppDirectiveOther TCommentNewline_DefineEndOfMacro TColCol_BeforeTypedef TColCol TChar TCBrace TBang TAndLog TAnd LDots EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production block_declaration -> using_declaration

State 583:
## Known stack suffix:
## try_block
## LR(1) items:
statement -> try_block . [ Twhile Twchar_t_Constr Twchar_t Tvolatile Tvoid Tvirtual Tusing Tunsigned Tunion Ttypeof Ttypename Ttypeid Ttypedef Ttry Ttrue Tthrow Tthread_local Tthis Tswitch Tstruct Tstatic_cast Tstatic Tsizeof Tsigned Tshort_Constr Tshort Treturn Trestrict Treinterpret_cast Tregister Toperator Tnullptr Tnull Tnew Tnamespace Tmutable Tlong_Constr Tlong Tint_Constr Tint Tinline Tif Tgoto Tfriend Tfor Tfloat_Constr Tfloat Tfalse Textern Tenum Telse Tdynamic_cast Tdouble_Constr Tdouble Tdo Tdelete Tdefault Tdecltype Tcontinue Tconstexpr Tconst_cast Tconst Tclass Tchar_Constr Tchar Tcase Tbreak Tbool_Constr Tbool Tauto Tasm TUndef TTilde TString TPtVirg TPlus TOPar TOCro_Lambda TOBrace TMul TMinus TInt TInclude TInc TIfdefelse TIfdefelif TIfdefVersion TIfdefMisc TIfdefBool TIfdef TIdent_TypedefConstr TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_MacroString TIdent_MacroStmt TIdent_MacroIterator TIdent_MacroDecl TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TIdent TFloat TEndif TEllipsis TDefine TDec TCppDirectiveOther TCommentNewline_DefineEndOfMacro TColCol_BeforeTypedef TColCol TChar TCBrace TBang TAndLog TAnd LDots EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production statement -> try_block

State 584:
## Known stack suffix:
## TIdent_MacroIterator TOPar optl(listc(argument)) TCPar statement
## LR(1) items:
iteration -> TIdent_MacroIterator TOPar optl(listc(argument)) TCPar statement . [ Twhile Twchar_t_Constr Twchar_t Tvolatile Tvoid Tvirtual Tusing Tunsigned Tunion Ttypeof Ttypename Ttypeid Ttypedef Ttry Ttrue Tthrow Tthread_local Tthis Tswitch Tstruct Tstatic_cast Tstatic Tsizeof Tsigned Tshort_Constr Tshort Treturn Trestrict Treinterpret_cast Tregister Toperator Tnullptr Tnull Tnew Tnamespace Tmutable Tlong_Constr Tlong Tint_Constr Tint Tinline Tif Tgoto Tfriend Tfor Tfloat_Constr Tfloat Tfalse Textern Tenum Telse Tdynamic_cast Tdouble_Constr Tdouble Tdo Tdelete Tdefault Tdecltype Tcontinue Tconstexpr Tconst_cast Tconst Tclass Tchar_Constr Tchar Tcase Tbreak Tbool_Constr Tbool Tauto Tasm TUndef TTilde TString TPtVirg TPlus TOPar TOCro_Lambda TOBrace TMul TMinus TInt TInclude TInc TIfdefelse TIfdefelif TIfdefVersion TIfdefMisc TIfdefBool TIfdef TIdent_TypedefConstr TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_MacroString TIdent_MacroStmt TIdent_MacroIterator TIdent_MacroDecl TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TIdent TFloat TEndif TEllipsis TDefine TDec TCppDirectiveOther TCommentNewline_DefineEndOfMacro TColCol_BeforeTypedef TColCol TChar TCBrace TBang TAndLog TAnd LDots EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production iteration -> TIdent_MacroIterator TOPar optl(listc(argument)) TCPar statement

State 585:
## Known stack suffix:
## simple_declaration
## LR(1) items:
block_declaration -> simple_declaration . [ Twhile Twchar_t_Constr Twchar_t Tvolatile Tvoid Tvirtual Tusing Tunsigned Tunion Ttypeof Ttypename Ttypeid Ttypedef Ttry Ttrue Tthrow Tthread_local Tthis Ttemplate Tswitch Tstruct Tstatic_cast Tstatic Tsizeof Tsigned Tshort_Constr Tshort Treturn Trestrict Treinterpret_cast Tregister Tpublic Tprotected Tprivate Toperator Tnullptr Tnull Tnew Tnamespace Tmutable Tlong_Constr Tlong Tint_Constr Tint Tinline Tif Tgoto Tfriend Tfor Tfloat_Constr Tfloat Tfalse Textern Texplicit Tenum Telse Tdynamic_cast Tdouble_Constr Tdouble Tdo Tdelete Tdefault Tdecltype Tcontinue Tconstexpr Tconst_cast Tconst Tclass Tchar_Constr Tchar Tcase Tbreak Tbool_Constr Tbool Tauto Tasm TUndef TTilde TString TPtVirg TPlus TOPar TOCro_Lambda TOBrace TMul TMinus TInt TInclude TInc TIfdefelse TIfdefelif TIfdefVersion TIfdefMisc TIfdefBool TIfdef TIdent_TypedefConstr TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_MacroString TIdent_MacroStmt TIdent_MacroIterator TIdent_MacroDecl TIdent_Constructor TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TIdent TFloat TEndif TEllipsis TDefine TDec TCppDirectiveOther TCommentNewline_DefineEndOfMacro TColCol_BeforeTypedef TColCol TChar TCBrace TBang TAndLog TAnd LDots EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production block_declaration -> simple_declaration

State 586:
## Known stack suffix:
## selection
## LR(1) items:
statement -> selection . [ Twhile Twchar_t_Constr Twchar_t Tvolatile Tvoid Tvirtual Tusing Tunsigned Tunion Ttypeof Ttypename Ttypeid Ttypedef Ttry Ttrue Tthrow Tthread_local Tthis Tswitch Tstruct Tstatic_cast Tstatic Tsizeof Tsigned Tshort_Constr Tshort Treturn Trestrict Treinterpret_cast Tregister Toperator Tnullptr Tnull Tnew Tnamespace Tmutable Tlong_Constr Tlong Tint_Constr Tint Tinline Tif Tgoto Tfriend Tfor Tfloat_Constr Tfloat Tfalse Textern Tenum Telse Tdynamic_cast Tdouble_Constr Tdouble Tdo Tdelete Tdefault Tdecltype Tcontinue Tconstexpr Tconst_cast Tconst Tclass Tchar_Constr Tchar Tcase Tbreak Tbool_Constr Tbool Tauto Tasm TUndef TTilde TString TPtVirg TPlus TOPar TOCro_Lambda TOBrace TMul TMinus TInt TInclude TInc TIfdefelse TIfdefelif TIfdefVersion TIfdefMisc TIfdefBool TIfdef TIdent_TypedefConstr TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_MacroString TIdent_MacroStmt TIdent_MacroIterator TIdent_MacroDecl TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TIdent TFloat TEndif TEllipsis TDefine TDec TCppDirectiveOther TCommentNewline_DefineEndOfMacro TColCol_BeforeTypedef TColCol TChar TCBrace TBang TAndLog TAnd LDots EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production statement -> selection

State 587:
## Known stack suffix:
## namespace_alias_definition
## LR(1) items:
block_declaration -> namespace_alias_definition . [ Twhile Twchar_t_Constr Twchar_t Tvolatile Tvoid Tvirtual Tusing Tunsigned Tunion Ttypeof Ttypename Ttypeid Ttypedef Ttry Ttrue Tthrow Tthread_local Tthis Ttemplate Tswitch Tstruct Tstatic_cast Tstatic Tsizeof Tsigned Tshort_Constr Tshort Treturn Trestrict Treinterpret_cast Tregister Tpublic Tprotected Tprivate Toperator Tnullptr Tnull Tnew Tnamespace Tmutable Tlong_Constr Tlong Tint_Constr Tint Tinline Tif Tgoto Tfriend Tfor Tfloat_Constr Tfloat Tfalse Textern Texplicit Tenum Telse Tdynamic_cast Tdouble_Constr Tdouble Tdo Tdelete Tdefault Tdecltype Tcontinue Tconstexpr Tconst_cast Tconst Tclass Tchar_Constr Tchar Tcase Tbreak Tbool_Constr Tbool Tauto Tasm TUndef TTilde TString TPtVirg TPlus TOPar TOCro_Lambda TOBrace TMul TMinus TInt TInclude TInc TIfdefelse TIfdefelif TIfdefVersion TIfdefMisc TIfdefBool TIfdef TIdent_TypedefConstr TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_MacroString TIdent_MacroStmt TIdent_MacroIterator TIdent_MacroDecl TIdent_Constructor TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TIdent TFloat TEndif TEllipsis TDefine TDec TCppDirectiveOther TCommentNewline_DefineEndOfMacro TColCol_BeforeTypedef TColCol TChar TCBrace TBang TAndLog TAnd LDots EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production block_declaration -> namespace_alias_definition

State 588:
## Known stack suffix:
## labeled
## LR(1) items:
statement -> labeled . [ Twhile Twchar_t_Constr Twchar_t Tvolatile Tvoid Tvirtual Tusing Tunsigned Tunion Ttypeof Ttypename Ttypeid Ttypedef Ttry Ttrue Tthrow Tthread_local Tthis Tswitch Tstruct Tstatic_cast Tstatic Tsizeof Tsigned Tshort_Constr Tshort Treturn Trestrict Treinterpret_cast Tregister Toperator Tnullptr Tnull Tnew Tnamespace Tmutable Tlong_Constr Tlong Tint_Constr Tint Tinline Tif Tgoto Tfriend Tfor Tfloat_Constr Tfloat Tfalse Textern Tenum Telse Tdynamic_cast Tdouble_Constr Tdouble Tdo Tdelete Tdefault Tdecltype Tcontinue Tconstexpr Tconst_cast Tconst Tclass Tchar_Constr Tchar Tcase Tbreak Tbool_Constr Tbool Tauto Tasm TUndef TTilde TString TPtVirg TPlus TOPar TOCro_Lambda TOBrace TMul TMinus TInt TInclude TInc TIfdefelse TIfdefelif TIfdefVersion TIfdefMisc TIfdefBool TIfdef TIdent_TypedefConstr TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_MacroString TIdent_MacroStmt TIdent_MacroIterator TIdent_MacroDecl TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TIdent TFloat TEndif TEllipsis TDefine TDec TCppDirectiveOther TCommentNewline_DefineEndOfMacro TColCol_BeforeTypedef TColCol TChar TCBrace TBang TAndLog TAnd LDots EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production statement -> labeled

State 589:
## Known stack suffix:
## jump
## LR(1) items:
statement -> jump . TPtVirg [ Twhile Twchar_t_Constr Twchar_t Tvolatile Tvoid Tvirtual Tusing Tunsigned Tunion Ttypeof Ttypename Ttypeid Ttypedef Ttry Ttrue Tthrow Tthread_local Tthis Tswitch Tstruct Tstatic_cast Tstatic Tsizeof Tsigned Tshort_Constr Tshort Treturn Trestrict Treinterpret_cast Tregister Toperator Tnullptr Tnull Tnew Tnamespace Tmutable Tlong_Constr Tlong Tint_Constr Tint Tinline Tif Tgoto Tfriend Tfor Tfloat_Constr Tfloat Tfalse Textern Tenum Telse Tdynamic_cast Tdouble_Constr Tdouble Tdo Tdelete Tdefault Tdecltype Tcontinue Tconstexpr Tconst_cast Tconst Tclass Tchar_Constr Tchar Tcase Tbreak Tbool_Constr Tbool Tauto Tasm TUndef TTilde TString TPtVirg TPlus TOPar TOCro_Lambda TOBrace TMul TMinus TInt TInclude TInc TIfdefelse TIfdefelif TIfdefVersion TIfdefMisc TIfdefBool TIfdef TIdent_TypedefConstr TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_MacroString TIdent_MacroStmt TIdent_MacroIterator TIdent_MacroDecl TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TIdent TFloat TEndif TEllipsis TDefine TDec TCppDirectiveOther TCommentNewline_DefineEndOfMacro TColCol_BeforeTypedef TColCol TChar TCBrace TBang TAndLog TAnd LDots EOF ]
## Transitions:
-- On TPtVirg shift to state 590
## Reductions:

State 590:
## Known stack suffix:
## jump TPtVirg
## LR(1) items:
statement -> jump TPtVirg . [ Twhile Twchar_t_Constr Twchar_t Tvolatile Tvoid Tvirtual Tusing Tunsigned Tunion Ttypeof Ttypename Ttypeid Ttypedef Ttry Ttrue Tthrow Tthread_local Tthis Tswitch Tstruct Tstatic_cast Tstatic Tsizeof Tsigned Tshort_Constr Tshort Treturn Trestrict Treinterpret_cast Tregister Toperator Tnullptr Tnull Tnew Tnamespace Tmutable Tlong_Constr Tlong Tint_Constr Tint Tinline Tif Tgoto Tfriend Tfor Tfloat_Constr Tfloat Tfalse Textern Tenum Telse Tdynamic_cast Tdouble_Constr Tdouble Tdo Tdelete Tdefault Tdecltype Tcontinue Tconstexpr Tconst_cast Tconst Tclass Tchar_Constr Tchar Tcase Tbreak Tbool_Constr Tbool Tauto Tasm TUndef TTilde TString TPtVirg TPlus TOPar TOCro_Lambda TOBrace TMul TMinus TInt TInclude TInc TIfdefelse TIfdefelif TIfdefVersion TIfdefMisc TIfdefBool TIfdef TIdent_TypedefConstr TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_MacroString TIdent_MacroStmt TIdent_MacroIterator TIdent_MacroDecl TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TIdent TFloat TEndif TEllipsis TDefine TDec TCppDirectiveOther TCommentNewline_DefineEndOfMacro TColCol_BeforeTypedef TColCol TChar TCBrace TBang TAndLog TAnd LDots EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production statement -> jump TPtVirg

State 591:
## Known stack suffix:
## iteration
## LR(1) items:
statement -> iteration . [ Twhile Twchar_t_Constr Twchar_t Tvolatile Tvoid Tvirtual Tusing Tunsigned Tunion Ttypeof Ttypename Ttypeid Ttypedef Ttry Ttrue Tthrow Tthread_local Tthis Tswitch Tstruct Tstatic_cast Tstatic Tsizeof Tsigned Tshort_Constr Tshort Treturn Trestrict Treinterpret_cast Tregister Toperator Tnullptr Tnull Tnew Tnamespace Tmutable Tlong_Constr Tlong Tint_Constr Tint Tinline Tif Tgoto Tfriend Tfor Tfloat_Constr Tfloat Tfalse Textern Tenum Telse Tdynamic_cast Tdouble_Constr Tdouble Tdo Tdelete Tdefault Tdecltype Tcontinue Tconstexpr Tconst_cast Tconst Tclass Tchar_Constr Tchar Tcase Tbreak Tbool_Constr Tbool Tauto Tasm TUndef TTilde TString TPtVirg TPlus TOPar TOCro_Lambda TOBrace TMul TMinus TInt TInclude TInc TIfdefelse TIfdefelif TIfdefVersion TIfdefMisc TIfdefBool TIfdef TIdent_TypedefConstr TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_MacroString TIdent_MacroStmt TIdent_MacroIterator TIdent_MacroDecl TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TIdent TFloat TEndif TEllipsis TDefine TDec TCppDirectiveOther TCommentNewline_DefineEndOfMacro TColCol_BeforeTypedef TColCol TChar TCBrace TBang TAndLog TAnd LDots EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production statement -> iteration

State 592:
## Known stack suffix:
## ident
## LR(1) items:
labeled -> ident . TCol statement [ Twhile Twchar_t_Constr Twchar_t Tvolatile Tvoid Tvirtual Tusing Tunsigned Tunion Ttypeof Ttypename Ttypeid Ttypedef Ttry Ttrue Tthrow Tthread_local Tthis Tswitch Tstruct Tstatic_cast Tstatic Tsizeof Tsigned Tshort_Constr Tshort Treturn Trestrict Treinterpret_cast Tregister Toperator Tnullptr Tnull Tnew Tnamespace Tmutable Tlong_Constr Tlong Tint_Constr Tint Tinline Tif Tgoto Tfriend Tfor Tfloat_Constr Tfloat Tfalse Textern Tenum Telse Tdynamic_cast Tdouble_Constr Tdouble Tdo Tdelete Tdefault Tdecltype Tcontinue Tconstexpr Tconst_cast Tconst Tclass Tchar_Constr Tchar Tcase Tbreak Tbool_Constr Tbool Tauto Tasm TUndef TTilde TString TPtVirg TPlus TOPar TOCro_Lambda TOBrace TMul TMinus TInt TInclude TInc TIfdefelse TIfdefelif TIfdefVersion TIfdefMisc TIfdefBool TIfdef TIdent_TypedefConstr TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_MacroString TIdent_MacroStmt TIdent_MacroIterator TIdent_MacroDecl TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TIdent TFloat TEndif TEllipsis TDefine TDec TCppDirectiveOther TCommentNewline_DefineEndOfMacro TColCol_BeforeTypedef TColCol TChar TCBrace TBang TAndLog TAnd LDots EOF ]
## Transitions:
-- On TCol shift to state 593
## Reductions:

State 593:
## Known stack suffix:
## ident TCol
## LR(1) items:
labeled -> ident TCol . statement [ Twhile Twchar_t_Constr Twchar_t Tvolatile Tvoid Tvirtual Tusing Tunsigned Tunion Ttypeof Ttypename Ttypeid Ttypedef Ttry Ttrue Tthrow Tthread_local Tthis Tswitch Tstruct Tstatic_cast Tstatic Tsizeof Tsigned Tshort_Constr Tshort Treturn Trestrict Treinterpret_cast Tregister Toperator Tnullptr Tnull Tnew Tnamespace Tmutable Tlong_Constr Tlong Tint_Constr Tint Tinline Tif Tgoto Tfriend Tfor Tfloat_Constr Tfloat Tfalse Textern Tenum Telse Tdynamic_cast Tdouble_Constr Tdouble Tdo Tdelete Tdefault Tdecltype Tcontinue Tconstexpr Tconst_cast Tconst Tclass Tchar_Constr Tchar Tcase Tbreak Tbool_Constr Tbool Tauto Tasm TUndef TTilde TString TPtVirg TPlus TOPar TOCro_Lambda TOBrace TMul TMinus TInt TInclude TInc TIfdefelse TIfdefelif TIfdefVersion TIfdefMisc TIfdefBool TIfdef TIdent_TypedefConstr TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_MacroString TIdent_MacroStmt TIdent_MacroIterator TIdent_MacroDecl TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TIdent TFloat TEndif TEllipsis TDefine TDec TCppDirectiveOther TCommentNewline_DefineEndOfMacro TColCol_BeforeTypedef TColCol TChar TCBrace TBang TAndLog TAnd LDots EOF ]
## Transitions:
-- On Twhile shift to state 94
-- On Twchar_t_Constr shift to state 14
-- On Twchar_t shift to state 1
-- On Tvolatile shift to state 2
-- On Tvoid shift to state 3
-- On Tvirtual shift to state 4
-- On Tusing shift to state 5
-- On Tunsigned shift to state 15
-- On Tunion shift to state 16
-- On Ttypeof shift to state 17
-- On Ttypename shift to state 19
-- On Ttypeid shift to state 23
-- On Ttypedef shift to state 96
-- On Ttry shift to state 431
-- On Ttrue shift to state 25
-- On Tthrow shift to state 47
-- On Tthread_local shift to state 97
-- On Tthis shift to state 26
-- On Tswitch shift to state 515
-- On Tstruct shift to state 27
-- On Tstatic_cast shift to state 28
-- On Tstatic shift to state 323
-- On Tsizeof shift to state 29
-- On Tsigned shift to state 30
-- On Tshort_Constr shift to state 31
-- On Tshort shift to state 32
-- On Treturn shift to state 537
-- On Trestrict shift to state 65
-- On Treinterpret_cast shift to state 33
-- On Tregister shift to state 99
-- On Toperator shift to state 34
-- On Tnullptr shift to state 48
-- On Tnull shift to state 49
-- On Tnamespace shift to state 540
-- On Tmutable shift to state 100
-- On Tlong_Constr shift to state 50
-- On Tlong shift to state 38
-- On Tint_Constr shift to state 51
-- On Tint shift to state 39
-- On Tinline shift to state 101
-- On Tif shift to state 545
-- On Tgoto shift to state 549
-- On Tfriend shift to state 102
-- On Tfor shift to state 553
-- On Tfloat_Constr shift to state 52
-- On Tfloat shift to state 40
-- On Tfalse shift to state 53
-- On Textern shift to state 103
-- On Tenum shift to state 66
-- On Tdynamic_cast shift to state 54
-- On Tdouble_Constr shift to state 55
-- On Tdouble shift to state 41
-- On Tdo shift to state 562
-- On Tdefault shift to state 563
-- On Tdecltype shift to state 45
-- On Tcontinue shift to state 565
-- On Tconstexpr shift to state 104
-- On Tconst_cast shift to state 56
-- On Tconst shift to state 76
-- On Tclass shift to state 77
-- On Tchar_Constr shift to state 57
-- On Tchar shift to state 58
-- On Tcase shift to state 566
-- On Tbreak shift to state 571
-- On Tbool_Constr shift to state 59
-- On Tbool shift to state 60
-- On Tauto shift to state 105
-- On Tasm shift to state 366
-- On TTilde shift to state 61
-- On TString shift to state 62
-- On TPlus shift to state 63
-- On TOPar shift to state 64
-- On TOCro_Lambda shift to state 78
-- On TOBrace shift to state 93
-- On TMul shift to state 88
-- On TMinus shift to state 89
-- On TInt shift to state 90
-- On TInc shift to state 91
-- On TIdent_TypedefConstr shift to state 106
-- On TIdent_Typedef shift to state 572
-- On TIdent_TemplatenameInQualifier_BeforeTypedef shift to state 21
-- On TIdent_TemplatenameInQualifier shift to state 12
-- On TIdent_Templatename shift to state 108
-- On TIdent_MacroString shift to state 110
-- On TIdent_MacroStmt shift to state 573
-- On TIdent_MacroIterator shift to state 574
-- On TIdent_MacroDecl shift to state 423
-- On TIdent_ClassnameInQualifier_BeforeTypedef shift to state 111
-- On TIdent_ClassnameInQualifier shift to state 112
-- On TIdent shift to state 578
-- On TFloat shift to state 116
-- On TEllipsis shift to state 580
-- On TDec shift to state 117
-- On TColCol_BeforeTypedef shift to state 118
-- On TColCol shift to state 128
-- On TChar shift to state 174
-- On TBang shift to state 175
-- On TAndLog shift to state 176
-- On TAnd shift to state 177
-- On LDots shift to state 178
-- On using_directive shift to state 581
-- On using_declaration shift to state 582
-- On unqualified_id shift to state 179
-- On unary_op shift to state 180
-- On unary_expr shift to state 181
-- On type_spec shift to state 314
-- On type_name shift to state 182
-- On type_cplusplus_id shift to state 183
-- On try_block shift to state 583
-- On template_id shift to state 120
-- On string_elem shift to state 184
-- On storage_class_spec shift to state 316
-- On statement shift to state 594
-- On simple_type_specifier shift to state 266
-- On simple_declaration shift to state 585
-- On shift_expr shift to state 217
-- On selection shift to state 586
-- On relational_expr shift to state 229
-- On qualified_id shift to state 191
-- On primary_expr shift to state 192
-- On primary_cplusplus_id shift to state 193
-- On postfix_expr shift to state 194
-- On pm_expr shift to state 219
-- On option(expr) shift to state 556
-- On option(TColCol) shift to state 221
-- On operator_function_id shift to state 168
-- On new_expr shift to state 233
-- On nested_name_specifier2 shift to state 207
-- On nested_name_specifier shift to state 165
-- On namespace_alias_definition shift to state 587
-- On multiplicative_expr shift to state 234
-- On logical_or_expr shift to state 246
-- On logical_and_expr shift to state 250
-- On literal shift to state 238
-- On lambda_introducer shift to state 239
-- On labeled shift to state 588
-- On jump shift to state 589
-- On iteration shift to state 591
-- On inclusive_or_expr shift to state 272
-- On ident shift to state 592
-- On id_expression shift to state 241
-- On function_spec shift to state 437
-- On function_definition shift to state 595
-- On expr_statement shift to state 596
-- On expr shift to state 597
-- On exclusive_or_expr shift to state 273
-- On equality_expr shift to state 256
-- On enum_specifier shift to state 209
-- On enum_name_or_typedef_name_or_simple_class_name shift to state 123
-- On enum_head shift to state 210
-- On elaborated_type_specifier shift to state 274
-- On delete_expr shift to state 242
-- On decltype_specifier shift to state 243
-- On declaration_statement shift to state 598
-- On decl_spec_seq shift to state 599
-- On decl_spec shift to state 473
-- On cv_qualif shift to state 475
-- On cpp_cast_operator shift to state 244
-- On conversion_function_id shift to state 169
-- On cond_expr shift to state 330
-- On compound shift to state 615
-- On class_specifier shift to state 277
-- On class_or_namespace_name_for_qualifier2 shift to state 124
-- On class_or_namespace_name_for_qualifier shift to state 170
-- On class_key shift to state 278
-- On class_head shift to state 301
-- On cast_operator_expr shift to state 261
-- On cast_expr shift to state 331
-- On cast_constructor_expr shift to state 263
-- On block_declaration shift to state 616
-- On basic_type_2 shift to state 264
-- On assign_expr shift to state 539
-- On asm_definition shift to state 617
-- On and_expr shift to state 334
-- On additive_expr shift to state 341
## Reductions:
-- On Tnew Tdelete
--   reduce production option(TColCol) ->
-- On TPtVirg
--   reduce production option(expr) ->

State 594:
## Known stack suffix:
## ident TCol statement
## LR(1) items:
labeled -> ident TCol statement . [ Twhile Twchar_t_Constr Twchar_t Tvolatile Tvoid Tvirtual Tusing Tunsigned Tunion Ttypeof Ttypename Ttypeid Ttypedef Ttry Ttrue Tthrow Tthread_local Tthis Tswitch Tstruct Tstatic_cast Tstatic Tsizeof Tsigned Tshort_Constr Tshort Treturn Trestrict Treinterpret_cast Tregister Toperator Tnullptr Tnull Tnew Tnamespace Tmutable Tlong_Constr Tlong Tint_Constr Tint Tinline Tif Tgoto Tfriend Tfor Tfloat_Constr Tfloat Tfalse Textern Tenum Telse Tdynamic_cast Tdouble_Constr Tdouble Tdo Tdelete Tdefault Tdecltype Tcontinue Tconstexpr Tconst_cast Tconst Tclass Tchar_Constr Tchar Tcase Tbreak Tbool_Constr Tbool Tauto Tasm TUndef TTilde TString TPtVirg TPlus TOPar TOCro_Lambda TOBrace TMul TMinus TInt TInclude TInc TIfdefelse TIfdefelif TIfdefVersion TIfdefMisc TIfdefBool TIfdef TIdent_TypedefConstr TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_MacroString TIdent_MacroStmt TIdent_MacroIterator TIdent_MacroDecl TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TIdent TFloat TEndif TEllipsis TDefine TDec TCppDirectiveOther TCommentNewline_DefineEndOfMacro TColCol_BeforeTypedef TColCol TChar TCBrace TBang TAndLog TAnd LDots EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production labeled -> ident TCol statement

State 595:
## Known stack suffix:
## function_definition
## LR(1) items:
statement -> function_definition . [ Twhile Twchar_t_Constr Twchar_t Tvolatile Tvoid Tvirtual Tusing Tunsigned Tunion Ttypeof Ttypename Ttypeid Ttypedef Ttry Ttrue Tthrow Tthread_local Tthis Tswitch Tstruct Tstatic_cast Tstatic Tsizeof Tsigned Tshort_Constr Tshort Treturn Trestrict Treinterpret_cast Tregister Toperator Tnullptr Tnull Tnew Tnamespace Tmutable Tlong_Constr Tlong Tint_Constr Tint Tinline Tif Tgoto Tfriend Tfor Tfloat_Constr Tfloat Tfalse Textern Tenum Telse Tdynamic_cast Tdouble_Constr Tdouble Tdo Tdelete Tdefault Tdecltype Tcontinue Tconstexpr Tconst_cast Tconst Tclass Tchar_Constr Tchar Tcase Tbreak Tbool_Constr Tbool Tauto Tasm TUndef TTilde TString TPtVirg TPlus TOPar TOCro_Lambda TOBrace TMul TMinus TInt TInclude TInc TIfdefelse TIfdefelif TIfdefVersion TIfdefMisc TIfdefBool TIfdef TIdent_TypedefConstr TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_MacroString TIdent_MacroStmt TIdent_MacroIterator TIdent_MacroDecl TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TIdent TFloat TEndif TEllipsis TDefine TDec TCppDirectiveOther TCommentNewline_DefineEndOfMacro TColCol_BeforeTypedef TColCol TChar TCBrace TBang TAndLog TAnd LDots EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production statement -> function_definition

State 596:
## Known stack suffix:
## expr_statement
## LR(1) items:
statement -> expr_statement . [ Twhile Twchar_t_Constr Twchar_t Tvolatile Tvoid Tvirtual Tusing Tunsigned Tunion Ttypeof Ttypename Ttypeid Ttypedef Ttry Ttrue Tthrow Tthread_local Tthis Tswitch Tstruct Tstatic_cast Tstatic Tsizeof Tsigned Tshort_Constr Tshort Treturn Trestrict Treinterpret_cast Tregister Toperator Tnullptr Tnull Tnew Tnamespace Tmutable Tlong_Constr Tlong Tint_Constr Tint Tinline Tif Tgoto Tfriend Tfor Tfloat_Constr Tfloat Tfalse Textern Tenum Telse Tdynamic_cast Tdouble_Constr Tdouble Tdo Tdelete Tdefault Tdecltype Tcontinue Tconstexpr Tconst_cast Tconst Tclass Tchar_Constr Tchar Tcase Tbreak Tbool_Constr Tbool Tauto Tasm TUndef TTilde TString TPtVirg TPlus TOPar TOCro_Lambda TOBrace TMul TMinus TInt TInclude TInc TIfdefelse TIfdefelif TIfdefVersion TIfdefMisc TIfdefBool TIfdef TIdent_TypedefConstr TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_MacroString TIdent_MacroStmt TIdent_MacroIterator TIdent_MacroDecl TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TIdent TFloat TEndif TEllipsis TDefine TDec TCppDirectiveOther TCommentNewline_DefineEndOfMacro TColCol_BeforeTypedef TColCol TChar TCBrace TBang TAndLog TAnd LDots EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production statement -> expr_statement

State 597:
## Known stack suffix:
## expr
## LR(1) items:
expr -> expr . TComma assign_expr [ TPtVirg TComma TCol TCPar ]
option(expr) -> expr . [ TPtVirg TCol TCPar ]
## Transitions:
-- On TComma shift to state 518
## Reductions:
-- On TPtVirg TCol TCPar
--   reduce production option(expr) -> expr

State 598:
## Known stack suffix:
## declaration_statement
## LR(1) items:
statement -> declaration_statement . [ Twhile Twchar_t_Constr Twchar_t Tvolatile Tvoid Tvirtual Tusing Tunsigned Tunion Ttypeof Ttypename Ttypeid Ttypedef Ttry Ttrue Tthrow Tthread_local Tthis Tswitch Tstruct Tstatic_cast Tstatic Tsizeof Tsigned Tshort_Constr Tshort Treturn Trestrict Treinterpret_cast Tregister Toperator Tnullptr Tnull Tnew Tnamespace Tmutable Tlong_Constr Tlong Tint_Constr Tint Tinline Tif Tgoto Tfriend Tfor Tfloat_Constr Tfloat Tfalse Textern Tenum Telse Tdynamic_cast Tdouble_Constr Tdouble Tdo Tdelete Tdefault Tdecltype Tcontinue Tconstexpr Tconst_cast Tconst Tclass Tchar_Constr Tchar Tcase Tbreak Tbool_Constr Tbool Tauto Tasm TUndef TTilde TString TPtVirg TPlus TOPar TOCro_Lambda TOBrace TMul TMinus TInt TInclude TInc TIfdefelse TIfdefelif TIfdefVersion TIfdefMisc TIfdefBool TIfdef TIdent_TypedefConstr TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_MacroString TIdent_MacroStmt TIdent_MacroIterator TIdent_MacroDecl TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TIdent TFloat TEndif TEllipsis TDefine TDec TCppDirectiveOther TCommentNewline_DefineEndOfMacro TColCol_BeforeTypedef TColCol TChar TCBrace TBang TAndLog TAnd LDots EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production statement -> declaration_statement

State 599:
## Known stack suffix:
## decl_spec_seq
## LR(1) items:
function_definition -> decl_spec_seq . declarator function_body [ Twhile Twchar_t_Constr Twchar_t Tvolatile Tvoid Tvirtual Tusing Tunsigned Tunion Ttypeof Ttypename Ttypeid Ttypedef Ttry Ttrue Tthrow Tthread_local Tthis Ttemplate Tswitch Tstruct Tstatic_cast Tstatic Tsizeof Tsigned Tshort_Constr Tshort Treturn Trestrict Treinterpret_cast Tregister Tpublic Tprotected Tprivate Toperator Tnullptr Tnull Tnew Tnamespace Tmutable Tlong_Constr Tlong Tint_Constr Tint Tinline Tif Tgoto Tfriend Tfor Tfloat_Constr Tfloat Tfalse Textern Texplicit Tenum Telse Tdynamic_cast Tdouble_Constr Tdouble Tdo Tdelete Tdefault Tdecltype Tcontinue Tconstexpr Tconst_cast Tconst Tclass Tchar_Constr Tchar Tcase Tbreak Tbool_Constr Tbool Tauto Tasm TUndef TTilde TString TPtVirg TPlus TOPar TOCro_Lambda TOBrace TMul TMinus TInt TInclude TInc TIfdefelse TIfdefelif TIfdefVersion TIfdefMisc TIfdefBool TIfdef TIdent_TypedefConstr TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_MacroString TIdent_MacroStmt TIdent_MacroIterator TIdent_MacroDecl TIdent_Constructor TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TIdent TFloat TEndif TEllipsis TDefine TDec TCppDirectiveOther TCommentNewline_DefineEndOfMacro TColCol_BeforeTypedef TColCol TChar TCBrace TBang TAndLog TAnd LDots EOF ]
simple_declaration -> decl_spec_seq . TPtVirg [ Twhile Twchar_t_Constr Twchar_t Tvolatile Tvoid Tvirtual Tusing Tunsigned Tunion Ttypeof Ttypename Ttypeid Ttypedef Ttry Ttrue Tthrow Tthread_local Tthis Ttemplate Tswitch Tstruct Tstatic_cast Tstatic Tsizeof Tsigned Tshort_Constr Tshort Treturn Trestrict Treinterpret_cast Tregister Tpublic Tprotected Tprivate Toperator Tnullptr Tnull Tnew Tnamespace Tmutable Tlong_Constr Tlong Tint_Constr Tint Tinline Tif Tgoto Tfriend Tfor Tfloat_Constr Tfloat Tfalse Textern Texplicit Tenum Telse Tdynamic_cast Tdouble_Constr Tdouble Tdo Tdelete Tdefault Tdecltype Tcontinue Tconstexpr Tconst_cast Tconst Tclass Tchar_Constr Tchar Tcase Tbreak Tbool_Constr Tbool Tauto Tasm TUndef TTilde TString TPtVirg TPlus TOPar TOCro_Lambda TOBrace TMul TMinus TInt TInclude TInc TIfdefelse TIfdefelif TIfdefVersion TIfdefMisc TIfdefBool TIfdef TIdent_TypedefConstr TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_MacroString TIdent_MacroStmt TIdent_MacroIterator TIdent_MacroDecl TIdent_Constructor TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TIdent TFloat TEndif TEllipsis TDefine TDec TCppDirectiveOther TCommentNewline_DefineEndOfMacro TColCol_BeforeTypedef TColCol TChar TCBrace TBang TAndLog TAnd LDots EOF ]
simple_declaration -> decl_spec_seq . listc(init_declarator) TPtVirg [ Twhile Twchar_t_Constr Twchar_t Tvolatile Tvoid Tvirtual Tusing Tunsigned Tunion Ttypeof Ttypename Ttypeid Ttypedef Ttry Ttrue Tthrow Tthread_local Tthis Ttemplate Tswitch Tstruct Tstatic_cast Tstatic Tsizeof Tsigned Tshort_Constr Tshort Treturn Trestrict Treinterpret_cast Tregister Tpublic Tprotected Tprivate Toperator Tnullptr Tnull Tnew Tnamespace Tmutable Tlong_Constr Tlong Tint_Constr Tint Tinline Tif Tgoto Tfriend Tfor Tfloat_Constr Tfloat Tfalse Textern Texplicit Tenum Telse Tdynamic_cast Tdouble_Constr Tdouble Tdo Tdelete Tdefault Tdecltype Tcontinue Tconstexpr Tconst_cast Tconst Tclass Tchar_Constr Tchar Tcase Tbreak Tbool_Constr Tbool Tauto Tasm TUndef TTilde TString TPtVirg TPlus TOPar TOCro_Lambda TOBrace TMul TMinus TInt TInclude TInc TIfdefelse TIfdefelif TIfdefVersion TIfdefMisc TIfdefBool TIfdef TIdent_TypedefConstr TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_MacroString TIdent_MacroStmt TIdent_MacroIterator TIdent_MacroDecl TIdent_Constructor TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TIdent TFloat TEndif TEllipsis TDefine TDec TCppDirectiveOther TCommentNewline_DefineEndOfMacro TColCol_BeforeTypedef TColCol TChar TCBrace TBang TAndLog TAnd LDots EOF ]
## Transitions:
-- On TPtVirg shift to state 600
-- On TOPar shift to state 521
-- On TMul shift to state 443
-- On TColCol shift to state 8
-- On TAndLog shift to state 444
-- On TAnd shift to state 445
-- On pointer shift to state 522
-- On option(TColCol) shift to state 456
-- On listc(init_declarator) shift to state 601
-- On init_declarator shift to state 611
-- On direct_d shift to state 498
-- On declaratori shift to state 605
-- On declarator_id shift to state 495
-- On declarator shift to state 612
## Reductions:
-- On Toperator TIdent_TemplatenameInQualifier TIdent_ClassnameInQualifier TIdent
--   reduce production option(TColCol) ->

State 600:
## Known stack suffix:
## decl_spec_seq TPtVirg
## LR(1) items:
simple_declaration -> decl_spec_seq TPtVirg . [ Twhile Twchar_t_Constr Twchar_t Tvolatile Tvoid Tvirtual Tusing Tunsigned Tunion Ttypeof Ttypename Ttypeid Ttypedef Ttry Ttrue Tthrow Tthread_local Tthis Ttemplate Tswitch Tstruct Tstatic_cast Tstatic Tsizeof Tsigned Tshort_Constr Tshort Treturn Trestrict Treinterpret_cast Tregister Tpublic Tprotected Tprivate Toperator Tnullptr Tnull Tnew Tnamespace Tmutable Tlong_Constr Tlong Tint_Constr Tint Tinline Tif Tgoto Tfriend Tfor Tfloat_Constr Tfloat Tfalse Textern Texplicit Tenum Telse Tdynamic_cast Tdouble_Constr Tdouble Tdo Tdelete Tdefault Tdecltype Tcontinue Tconstexpr Tconst_cast Tconst Tclass Tchar_Constr Tchar Tcase Tbreak Tbool_Constr Tbool Tauto Tasm TUndef TTilde TString TPtVirg TPlus TOPar TOCro_Lambda TOBrace TMul TMinus TInt TInclude TInc TIfdefelse TIfdefelif TIfdefVersion TIfdefMisc TIfdefBool TIfdef TIdent_TypedefConstr TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_MacroString TIdent_MacroStmt TIdent_MacroIterator TIdent_MacroDecl TIdent_Constructor TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TIdent TFloat TEndif TEllipsis TDefine TDec TCppDirectiveOther TCommentNewline_DefineEndOfMacro TColCol_BeforeTypedef TColCol TChar TCBrace TBang TAndLog TAnd LDots EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production simple_declaration -> decl_spec_seq TPtVirg

State 601:
## Known stack suffix:
## decl_spec_seq listc(init_declarator)
## LR(1) items:
listc(init_declarator) -> listc(init_declarator) . TComma init_declarator [ TPtVirg TComma ]
simple_declaration -> decl_spec_seq listc(init_declarator) . TPtVirg [ Twhile Twchar_t_Constr Twchar_t Tvolatile Tvoid Tvirtual Tusing Tunsigned Tunion Ttypeof Ttypename Ttypeid Ttypedef Ttry Ttrue Tthrow Tthread_local Tthis Ttemplate Tswitch Tstruct Tstatic_cast Tstatic Tsizeof Tsigned Tshort_Constr Tshort Treturn Trestrict Treinterpret_cast Tregister Tpublic Tprotected Tprivate Toperator Tnullptr Tnull Tnew Tnamespace Tmutable Tlong_Constr Tlong Tint_Constr Tint Tinline Tif Tgoto Tfriend Tfor Tfloat_Constr Tfloat Tfalse Textern Texplicit Tenum Telse Tdynamic_cast Tdouble_Constr Tdouble Tdo Tdelete Tdefault Tdecltype Tcontinue Tconstexpr Tconst_cast Tconst Tclass Tchar_Constr Tchar Tcase Tbreak Tbool_Constr Tbool Tauto Tasm TUndef TTilde TString TPtVirg TPlus TOPar TOCro_Lambda TOBrace TMul TMinus TInt TInclude TInc TIfdefelse TIfdefelif TIfdefVersion TIfdefMisc TIfdefBool TIfdef TIdent_TypedefConstr TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_MacroString TIdent_MacroStmt TIdent_MacroIterator TIdent_MacroDecl TIdent_Constructor TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TIdent TFloat TEndif TEllipsis TDefine TDec TCppDirectiveOther TCommentNewline_DefineEndOfMacro TColCol_BeforeTypedef TColCol TChar TCBrace TBang TAndLog TAnd LDots EOF ]
## Transitions:
-- On TPtVirg shift to state 602
-- On TComma shift to state 603
## Reductions:

State 602:
## Known stack suffix:
## decl_spec_seq listc(init_declarator) TPtVirg
## LR(1) items:
simple_declaration -> decl_spec_seq listc(init_declarator) TPtVirg . [ Twhile Twchar_t_Constr Twchar_t Tvolatile Tvoid Tvirtual Tusing Tunsigned Tunion Ttypeof Ttypename Ttypeid Ttypedef Ttry Ttrue Tthrow Tthread_local Tthis Ttemplate Tswitch Tstruct Tstatic_cast Tstatic Tsizeof Tsigned Tshort_Constr Tshort Treturn Trestrict Treinterpret_cast Tregister Tpublic Tprotected Tprivate Toperator Tnullptr Tnull Tnew Tnamespace Tmutable Tlong_Constr Tlong Tint_Constr Tint Tinline Tif Tgoto Tfriend Tfor Tfloat_Constr Tfloat Tfalse Textern Texplicit Tenum Telse Tdynamic_cast Tdouble_Constr Tdouble Tdo Tdelete Tdefault Tdecltype Tcontinue Tconstexpr Tconst_cast Tconst Tclass Tchar_Constr Tchar Tcase Tbreak Tbool_Constr Tbool Tauto Tasm TUndef TTilde TString TPtVirg TPlus TOPar TOCro_Lambda TOBrace TMul TMinus TInt TInclude TInc TIfdefelse TIfdefelif TIfdefVersion TIfdefMisc TIfdefBool TIfdef TIdent_TypedefConstr TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_MacroString TIdent_MacroStmt TIdent_MacroIterator TIdent_MacroDecl TIdent_Constructor TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TIdent TFloat TEndif TEllipsis TDefine TDec TCppDirectiveOther TCommentNewline_DefineEndOfMacro TColCol_BeforeTypedef TColCol TChar TCBrace TBang TAndLog TAnd LDots EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production simple_declaration -> decl_spec_seq listc(init_declarator) TPtVirg

State 603:
## Known stack suffix:
## listc(init_declarator) TComma
## LR(1) items:
listc(init_declarator) -> listc(init_declarator) TComma . init_declarator [ TPtVirg TComma ]
## Transitions:
-- On TOPar shift to state 521
-- On TMul shift to state 443
-- On TColCol shift to state 8
-- On TAndLog shift to state 444
-- On TAnd shift to state 445
-- On pointer shift to state 522
-- On option(TColCol) shift to state 456
-- On init_declarator shift to state 604
-- On direct_d shift to state 498
-- On declaratori shift to state 605
-- On declarator_id shift to state 495
-- On declarator shift to state 528
## Reductions:
-- On Toperator TIdent_TemplatenameInQualifier TIdent_ClassnameInQualifier TIdent
--   reduce production option(TColCol) ->

State 604:
## Known stack suffix:
## listc(init_declarator) TComma init_declarator
## LR(1) items:
listc(init_declarator) -> listc(init_declarator) TComma init_declarator . [ TPtVirg TComma ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production listc(init_declarator) -> listc(init_declarator) TComma init_declarator

State 605:
## Known stack suffix:
## declaratori
## LR(1) items:
init_declarator -> declaratori . [ TPtVirg TComma ]
init_declarator -> declaratori . TEq initializer_clause [ TPtVirg TComma ]
init_declarator -> declaratori . TOPar_CplusplusInit optl(listc(argument)) TCPar [ TPtVirg TComma ]
## Transitions:
-- On TOPar_CplusplusInit shift to state 606
-- On TEq shift to state 609
## Reductions:
-- On TPtVirg TComma
--   reduce production init_declarator -> declaratori

State 606:
## Known stack suffix:
## declaratori TOPar_CplusplusInit
## LR(1) items:
init_declarator -> declaratori TOPar_CplusplusInit . optl(listc(argument)) TCPar [ TPtVirg TComma ]
## Transitions:
-- On Twchar_t_Constr shift to state 14
-- On Twchar_t shift to state 1
-- On Tvolatile shift to state 2
-- On Tvoid shift to state 3
-- On Tunsigned shift to state 15
-- On Tunion shift to state 16
-- On Ttypeof shift to state 17
-- On Ttypename shift to state 19
-- On Ttypeid shift to state 23
-- On Ttrue shift to state 25
-- On Tthrow shift to state 47
-- On Tthis shift to state 26
-- On Tstruct shift to state 27
-- On Tstatic_cast shift to state 28
-- On Tsizeof shift to state 29
-- On Tsigned shift to state 30
-- On Tshort_Constr shift to state 31
-- On Tshort shift to state 32
-- On Trestrict shift to state 65
-- On Treinterpret_cast shift to state 33
-- On Toperator shift to state 34
-- On Tnullptr shift to state 48
-- On Tnull shift to state 49
-- On Tlong_Constr shift to state 50
-- On Tlong shift to state 38
-- On Tint_Constr shift to state 51
-- On Tint shift to state 39
-- On Tfloat_Constr shift to state 52
-- On Tfloat shift to state 40
-- On Tfalse shift to state 53
-- On Tenum shift to state 66
-- On Tdynamic_cast shift to state 54
-- On Tdouble_Constr shift to state 55
-- On Tdouble shift to state 41
-- On Tdecltype shift to state 45
-- On Tconst_cast shift to state 56
-- On Tconst shift to state 76
-- On Tclass shift to state 77
-- On Tchar_Constr shift to state 57
-- On Tchar shift to state 58
-- On Tbool_Constr shift to state 59
-- On Tbool shift to state 60
-- On TTilde shift to state 61
-- On TString shift to state 62
-- On TPlus shift to state 63
-- On TOPar shift to state 64
-- On TOCro_Lambda shift to state 78
-- On TMul shift to state 88
-- On TMinus shift to state 89
-- On TInt shift to state 90
-- On TInc shift to state 91
-- On TIdent_TypedefConstr shift to state 106
-- On TIdent_Typedef shift to state 20
-- On TIdent_TemplatenameInQualifier_BeforeTypedef shift to state 21
-- On TIdent_TemplatenameInQualifier shift to state 12
-- On TIdent_Templatename shift to state 108
-- On TIdent_MacroString shift to state 110
-- On TIdent_ClassnameInQualifier_BeforeTypedef shift to state 111
-- On TIdent_ClassnameInQualifier shift to state 112
-- On TIdent shift to state 113
-- On TFloat shift to state 116
-- On TEllipsis shift to state 201
-- On TDec shift to state 117
-- On TColCol_BeforeTypedef shift to state 118
-- On TColCol shift to state 128
-- On TChar shift to state 174
-- On TBang shift to state 175
-- On TAny_Action shift to state 202
-- On TAndLog shift to state 176
-- On TAnd shift to state 177
-- On LDots shift to state 178
-- On unqualified_id shift to state 179
-- On unary_op shift to state 180
-- On unary_expr shift to state 181
-- On type_spec shift to state 204
-- On type_name shift to state 182
-- On type_id shift to state 224
-- On type_cplusplus_id shift to state 183
-- On template_id shift to state 120
-- On string_elem shift to state 184
-- On spec_qualif_list shift to state 225
-- On simple_type_specifier shift to state 266
-- On shift_expr shift to state 217
-- On relational_expr shift to state 229
-- On qualified_id shift to state 191
-- On primary_expr shift to state 192
-- On primary_cplusplus_id shift to state 193
-- On postfix_expr shift to state 194
-- On pm_expr shift to state 219
-- On optl(listc(argument)) shift to state 607
-- On option(TColCol) shift to state 221
-- On operator_function_id shift to state 168
-- On nonempty_list(TAny_Action) shift to state 269
-- On new_expr shift to state 233
-- On nested_name_specifier2 shift to state 207
-- On nested_name_specifier shift to state 165
-- On multiplicative_expr shift to state 234
-- On logical_or_expr shift to state 246
-- On logical_and_expr shift to state 250
-- On literal shift to state 238
-- On listc(argument) shift to state 270
-- On lambda_introducer shift to state 239
-- On inclusive_or_expr shift to state 272
-- On id_expression shift to state 241
-- On exclusive_or_expr shift to state 273
-- On equality_expr shift to state 256
-- On enum_specifier shift to state 209
-- On enum_name_or_typedef_name_or_simple_class_name shift to state 123
-- On enum_head shift to state 210
-- On elaborated_type_specifier shift to state 274
-- On delete_expr shift to state 242
-- On decltype_specifier shift to state 243
-- On cv_qualif shift to state 275
-- On cpp_cast_operator shift to state 244
-- On conversion_function_id shift to state 169
-- On cond_expr shift to state 330
-- On class_specifier shift to state 277
-- On class_or_namespace_name_for_qualifier2 shift to state 124
-- On class_or_namespace_name_for_qualifier shift to state 170
-- On class_key shift to state 278
-- On class_head shift to state 301
-- On cast_operator_expr shift to state 261
-- On cast_expr shift to state 331
-- On cast_constructor_expr shift to state 263
-- On basic_type_2 shift to state 264
-- On assign_expr shift to state 354
-- On argument shift to state 355
-- On and_expr shift to state 334
-- On additive_expr shift to state 341
## Reductions:
-- On Tnew Tdelete
--   reduce production option(TColCol) ->
-- On TCPar
--   reduce production optl(listc(argument)) ->

State 607:
## Known stack suffix:
## declaratori TOPar_CplusplusInit optl(listc(argument))
## LR(1) items:
init_declarator -> declaratori TOPar_CplusplusInit optl(listc(argument)) . TCPar [ TPtVirg TComma ]
## Transitions:
-- On TCPar shift to state 608
## Reductions:

State 608:
## Known stack suffix:
## declaratori TOPar_CplusplusInit optl(listc(argument)) TCPar
## LR(1) items:
init_declarator -> declaratori TOPar_CplusplusInit optl(listc(argument)) TCPar . [ TPtVirg TComma ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production init_declarator -> declaratori TOPar_CplusplusInit optl(listc(argument)) TCPar

State 609:
## Known stack suffix:
## declaratori TEq
## LR(1) items:
init_declarator -> declaratori TEq . initializer_clause [ TPtVirg TComma ]
## Transitions:
-- On Twchar_t_Constr shift to state 14
-- On Twchar_t shift to state 1
-- On Tvoid shift to state 3
-- On Tunsigned shift to state 15
-- On Ttypeof shift to state 17
-- On Ttypeid shift to state 23
-- On Ttrue shift to state 25
-- On Tthrow shift to state 47
-- On Tthis shift to state 26
-- On Tstatic_cast shift to state 28
-- On Tsizeof shift to state 29
-- On Tsigned shift to state 30
-- On Tshort_Constr shift to state 31
-- On Tshort shift to state 32
-- On Treinterpret_cast shift to state 33
-- On Toperator shift to state 34
-- On Tnullptr shift to state 48
-- On Tnull shift to state 49
-- On Tlong_Constr shift to state 50
-- On Tlong shift to state 38
-- On Tint_Constr shift to state 51
-- On Tint shift to state 39
-- On Tfloat_Constr shift to state 52
-- On Tfloat shift to state 40
-- On Tfalse shift to state 53
-- On Tdynamic_cast shift to state 54
-- On Tdouble_Constr shift to state 55
-- On Tdouble shift to state 41
-- On Tdecltype shift to state 45
-- On Tconst_cast shift to state 56
-- On Tchar_Constr shift to state 57
-- On Tchar shift to state 58
-- On Tbool_Constr shift to state 59
-- On Tbool shift to state 60
-- On TTilde shift to state 61
-- On TString shift to state 62
-- On TPlus shift to state 63
-- On TOPar shift to state 64
-- On TOCro_Lambda shift to state 78
-- On TOBrace shift to state 114
-- On TMul shift to state 88
-- On TMinus shift to state 89
-- On TInt shift to state 90
-- On TInc shift to state 91
-- On TIdent_TypedefConstr shift to state 106
-- On TIdent_Typedef shift to state 20
-- On TIdent_TemplatenameInQualifier_BeforeTypedef shift to state 21
-- On TIdent_TemplatenameInQualifier shift to state 12
-- On TIdent_Templatename shift to state 108
-- On TIdent_MacroString shift to state 110
-- On TIdent_ClassnameInQualifier_BeforeTypedef shift to state 111
-- On TIdent_ClassnameInQualifier shift to state 112
-- On TIdent shift to state 113
-- On TFloat shift to state 116
-- On TDec shift to state 117
-- On TColCol_BeforeTypedef shift to state 118
-- On TColCol shift to state 128
-- On TChar shift to state 174
-- On TBang shift to state 175
-- On TAndLog shift to state 176
-- On TAnd shift to state 177
-- On LDots shift to state 178
-- On unqualified_id shift to state 179
-- On unary_op shift to state 180
-- On unary_expr shift to state 181
-- On type_name shift to state 182
-- On type_cplusplus_id shift to state 183
-- On template_id shift to state 120
-- On string_elem shift to state 184
-- On simple_type_specifier shift to state 189
-- On shift_expr shift to state 217
-- On relational_expr shift to state 229
-- On qualified_id shift to state 191
-- On primary_expr shift to state 192
-- On primary_cplusplus_id shift to state 193
-- On postfix_expr shift to state 194
-- On pm_expr shift to state 219
-- On option(TColCol) shift to state 221
-- On operator_function_id shift to state 168
-- On new_expr shift to state 233
-- On nested_name_specifier2 shift to state 207
-- On nested_name_specifier shift to state 165
-- On multiplicative_expr shift to state 234
-- On logical_or_expr shift to state 246
-- On logical_and_expr shift to state 250
-- On literal shift to state 238
-- On lambda_introducer shift to state 239
-- On initializer_clause shift to state 610
-- On inclusive_or_expr shift to state 272
-- On id_expression shift to state 241
-- On exclusive_or_expr shift to state 273
-- On equality_expr shift to state 256
-- On enum_name_or_typedef_name_or_simple_class_name shift to state 123
-- On delete_expr shift to state 242
-- On decltype_specifier shift to state 243
-- On cpp_cast_operator shift to state 244
-- On conversion_function_id shift to state 169
-- On cond_expr shift to state 330
-- On class_or_namespace_name_for_qualifier2 shift to state 124
-- On class_or_namespace_name_for_qualifier shift to state 170
-- On cast_operator_expr shift to state 261
-- On cast_expr shift to state 331
-- On cast_constructor_expr shift to state 263
-- On braced_init_list shift to state 526
-- On basic_type_2 shift to state 264
-- On assign_expr shift to state 527
-- On and_expr shift to state 334
-- On additive_expr shift to state 341
## Reductions:
-- On Tnew Tdelete
--   reduce production option(TColCol) ->

State 610:
## Known stack suffix:
## declaratori TEq initializer_clause
## LR(1) items:
init_declarator -> declaratori TEq initializer_clause . [ TPtVirg TComma ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production init_declarator -> declaratori TEq initializer_clause

State 611:
## Known stack suffix:
## init_declarator
## LR(1) items:
listc(init_declarator) -> init_declarator . [ TPtVirg TComma ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production listc(init_declarator) -> init_declarator

State 612:
## Known stack suffix:
## decl_spec_seq declarator
## LR(1) items:
declaratori -> declarator . [ TPtVirg TOPar_CplusplusInit TEq TComma ]
declaratori -> declarator . gcc_asm_decl [ TPtVirg TOPar_CplusplusInit TEq TComma ]
function_definition -> decl_spec_seq declarator . function_body [ Twhile Twchar_t_Constr Twchar_t Tvolatile Tvoid Tvirtual Tusing Tunsigned Tunion Ttypeof Ttypename Ttypeid Ttypedef Ttry Ttrue Tthrow Tthread_local Tthis Ttemplate Tswitch Tstruct Tstatic_cast Tstatic Tsizeof Tsigned Tshort_Constr Tshort Treturn Trestrict Treinterpret_cast Tregister Tpublic Tprotected Tprivate Toperator Tnullptr Tnull Tnew Tnamespace Tmutable Tlong_Constr Tlong Tint_Constr Tint Tinline Tif Tgoto Tfriend Tfor Tfloat_Constr Tfloat Tfalse Textern Texplicit Tenum Telse Tdynamic_cast Tdouble_Constr Tdouble Tdo Tdelete Tdefault Tdecltype Tcontinue Tconstexpr Tconst_cast Tconst Tclass Tchar_Constr Tchar Tcase Tbreak Tbool_Constr Tbool Tauto Tasm TUndef TTilde TString TPtVirg TPlus TOPar TOCro_Lambda TOBrace TMul TMinus TInt TInclude TInc TIfdefelse TIfdefelif TIfdefVersion TIfdefMisc TIfdefBool TIfdef TIdent_TypedefConstr TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_MacroString TIdent_MacroStmt TIdent_MacroIterator TIdent_MacroDecl TIdent_Constructor TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TIdent TFloat TEndif TEllipsis TDefine TDec TCppDirectiveOther TCommentNewline_DefineEndOfMacro TColCol_BeforeTypedef TColCol TChar TCBrace TBang TAndLog TAnd LDots EOF ]
## Transitions:
-- On Tasm shift to state 529
-- On TOBrace shift to state 93
-- On gcc_asm_decl shift to state 534
-- On function_body shift to state 613
-- On compound shift to state 614
## Reductions:
-- On TPtVirg TOPar_CplusplusInit TEq TComma
--   reduce production declaratori -> declarator

State 613:
## Known stack suffix:
## decl_spec_seq declarator function_body
## LR(1) items:
function_definition -> decl_spec_seq declarator function_body . [ Twhile Twchar_t_Constr Twchar_t Tvolatile Tvoid Tvirtual Tusing Tunsigned Tunion Ttypeof Ttypename Ttypeid Ttypedef Ttry Ttrue Tthrow Tthread_local Tthis Ttemplate Tswitch Tstruct Tstatic_cast Tstatic Tsizeof Tsigned Tshort_Constr Tshort Treturn Trestrict Treinterpret_cast Tregister Tpublic Tprotected Tprivate Toperator Tnullptr Tnull Tnew Tnamespace Tmutable Tlong_Constr Tlong Tint_Constr Tint Tinline Tif Tgoto Tfriend Tfor Tfloat_Constr Tfloat Tfalse Textern Texplicit Tenum Telse Tdynamic_cast Tdouble_Constr Tdouble Tdo Tdelete Tdefault Tdecltype Tcontinue Tconstexpr Tconst_cast Tconst Tclass Tchar_Constr Tchar Tcase Tbreak Tbool_Constr Tbool Tauto Tasm TUndef TTilde TString TPtVirg TPlus TOPar TOCro_Lambda TOBrace TMul TMinus TInt TInclude TInc TIfdefelse TIfdefelif TIfdefVersion TIfdefMisc TIfdefBool TIfdef TIdent_TypedefConstr TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_MacroString TIdent_MacroStmt TIdent_MacroIterator TIdent_MacroDecl TIdent_Constructor TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TIdent TFloat TEndif TEllipsis TDefine TDec TCppDirectiveOther TCommentNewline_DefineEndOfMacro TColCol_BeforeTypedef TColCol TChar TCBrace TBang TAndLog TAnd LDots EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production function_definition -> decl_spec_seq declarator function_body

State 614:
## Known stack suffix:
## compound
## LR(1) items:
function_body -> compound . [ Twhile Twchar_t_Constr Twchar_t Tvolatile Tvoid Tvirtual Tusing Tunsigned Tunion Ttypeof Ttypename Ttypeid Ttypedef Ttry Ttrue Tthrow Tthread_local Tthis Ttemplate Tswitch Tstruct Tstatic_cast Tstatic Tsizeof Tsigned Tshort_Constr Tshort Treturn Trestrict Treinterpret_cast Tregister Tpublic Tprotected Tprivate Toperator Tnullptr Tnull Tnew Tnamespace Tmutable Tlong_Constr Tlong Tint_Constr Tint Tinline Tif Tgoto Tfriend Tfor Tfloat_Constr Tfloat Tfalse Textern Texplicit Tenum Telse Tdynamic_cast Tdouble_Constr Tdouble Tdo Tdelete Tdefault Tdecltype Tcontinue Tconstexpr Tconst_cast Tconst Tclass Tchar_Constr Tchar Tcase Tbreak Tbool_Constr Tbool Tauto Tasm TUndef TTilde TString TPtVirg TPlus TOPar TOCro_Lambda TOBrace TMul TMinus TInt TInclude TInc TIfdefelse TIfdefelif TIfdefVersion TIfdefMisc TIfdefBool TIfdef TIdent_TypedefConstr TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_MacroString TIdent_MacroStmt TIdent_MacroIterator TIdent_MacroDecl TIdent_Constructor TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TIdent TFloat TEndif TEllipsis TDefine TDec TCppDirectiveOther TCommentNewline_DefineEndOfMacro TColCol_BeforeTypedef TColCol TChar TCBrace TBang TAndLog TAnd LDots EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production function_body -> compound

State 615:
## Known stack suffix:
## compound
## LR(1) items:
statement -> compound . [ Twhile Twchar_t_Constr Twchar_t Tvolatile Tvoid Tvirtual Tusing Tunsigned Tunion Ttypeof Ttypename Ttypeid Ttypedef Ttry Ttrue Tthrow Tthread_local Tthis Tswitch Tstruct Tstatic_cast Tstatic Tsizeof Tsigned Tshort_Constr Tshort Treturn Trestrict Treinterpret_cast Tregister Toperator Tnullptr Tnull Tnew Tnamespace Tmutable Tlong_Constr Tlong Tint_Constr Tint Tinline Tif Tgoto Tfriend Tfor Tfloat_Constr Tfloat Tfalse Textern Tenum Telse Tdynamic_cast Tdouble_Constr Tdouble Tdo Tdelete Tdefault Tdecltype Tcontinue Tconstexpr Tconst_cast Tconst Tclass Tchar_Constr Tchar Tcase Tbreak Tbool_Constr Tbool Tauto Tasm TUndef TTilde TString TPtVirg TPlus TOPar TOCro_Lambda TOBrace TMul TMinus TInt TInclude TInc TIfdefelse TIfdefelif TIfdefVersion TIfdefMisc TIfdefBool TIfdef TIdent_TypedefConstr TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_MacroString TIdent_MacroStmt TIdent_MacroIterator TIdent_MacroDecl TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TIdent TFloat TEndif TEllipsis TDefine TDec TCppDirectiveOther TCommentNewline_DefineEndOfMacro TColCol_BeforeTypedef TColCol TChar TCBrace TBang TAndLog TAnd LDots EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production statement -> compound

State 616:
## Known stack suffix:
## block_declaration
## LR(1) items:
declaration_statement -> block_declaration . [ Twhile Twchar_t_Constr Twchar_t Tvolatile Tvoid Tvirtual Tusing Tunsigned Tunion Ttypeof Ttypename Ttypeid Ttypedef Ttry Ttrue Tthrow Tthread_local Tthis Tswitch Tstruct Tstatic_cast Tstatic Tsizeof Tsigned Tshort_Constr Tshort Treturn Trestrict Treinterpret_cast Tregister Toperator Tnullptr Tnull Tnew Tnamespace Tmutable Tlong_Constr Tlong Tint_Constr Tint Tinline Tif Tgoto Tfriend Tfor Tfloat_Constr Tfloat Tfalse Textern Tenum Telse Tdynamic_cast Tdouble_Constr Tdouble Tdo Tdelete Tdefault Tdecltype Tcontinue Tconstexpr Tconst_cast Tconst Tclass Tchar_Constr Tchar Tcase Tbreak Tbool_Constr Tbool Tauto Tasm TUndef TTilde TString TPtVirg TPlus TOPar TOCro_Lambda TOBrace TMul TMinus TInt TInclude TInc TIfdefelse TIfdefelif TIfdefVersion TIfdefMisc TIfdefBool TIfdef TIdent_TypedefConstr TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_MacroString TIdent_MacroStmt TIdent_MacroIterator TIdent_MacroDecl TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TIdent TFloat TEndif TEllipsis TDefine TDec TCppDirectiveOther TCommentNewline_DefineEndOfMacro TColCol_BeforeTypedef TColCol TChar TCBrace TBang TAndLog TAnd LDots EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production declaration_statement -> block_declaration

State 617:
## Known stack suffix:
## asm_definition
## LR(1) items:
block_declaration -> asm_definition . [ Twhile Twchar_t_Constr Twchar_t Tvolatile Tvoid Tvirtual Tusing Tunsigned Tunion Ttypeof Ttypename Ttypeid Ttypedef Ttry Ttrue Tthrow Tthread_local Tthis Ttemplate Tswitch Tstruct Tstatic_cast Tstatic Tsizeof Tsigned Tshort_Constr Tshort Treturn Trestrict Treinterpret_cast Tregister Tpublic Tprotected Tprivate Toperator Tnullptr Tnull Tnew Tnamespace Tmutable Tlong_Constr Tlong Tint_Constr Tint Tinline Tif Tgoto Tfriend Tfor Tfloat_Constr Tfloat Tfalse Textern Texplicit Tenum Telse Tdynamic_cast Tdouble_Constr Tdouble Tdo Tdelete Tdefault Tdecltype Tcontinue Tconstexpr Tconst_cast Tconst Tclass Tchar_Constr Tchar Tcase Tbreak Tbool_Constr Tbool Tauto Tasm TUndef TTilde TString TPtVirg TPlus TOPar TOCro_Lambda TOBrace TMul TMinus TInt TInclude TInc TIfdefelse TIfdefelif TIfdefVersion TIfdefMisc TIfdefBool TIfdef TIdent_TypedefConstr TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_MacroString TIdent_MacroStmt TIdent_MacroIterator TIdent_MacroDecl TIdent_Constructor TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TIdent TFloat TEndif TEllipsis TDefine TDec TCppDirectiveOther TCommentNewline_DefineEndOfMacro TColCol_BeforeTypedef TColCol TChar TCBrace TBang TAndLog TAnd LDots EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production block_declaration -> asm_definition

State 618:
## Known stack suffix:
## Tcase const_expr TEllipsis const_expr TCol statement
## LR(1) items:
labeled -> Tcase const_expr TEllipsis const_expr TCol statement . [ Twhile Twchar_t_Constr Twchar_t Tvolatile Tvoid Tvirtual Tusing Tunsigned Tunion Ttypeof Ttypename Ttypeid Ttypedef Ttry Ttrue Tthrow Tthread_local Tthis Tswitch Tstruct Tstatic_cast Tstatic Tsizeof Tsigned Tshort_Constr Tshort Treturn Trestrict Treinterpret_cast Tregister Toperator Tnullptr Tnull Tnew Tnamespace Tmutable Tlong_Constr Tlong Tint_Constr Tint Tinline Tif Tgoto Tfriend Tfor Tfloat_Constr Tfloat Tfalse Textern Tenum Telse Tdynamic_cast Tdouble_Constr Tdouble Tdo Tdelete Tdefault Tdecltype Tcontinue Tconstexpr Tconst_cast Tconst Tclass Tchar_Constr Tchar Tcase Tbreak Tbool_Constr Tbool Tauto Tasm TUndef TTilde TString TPtVirg TPlus TOPar TOCro_Lambda TOBrace TMul TMinus TInt TInclude TInc TIfdefelse TIfdefelif TIfdefVersion TIfdefMisc TIfdefBool TIfdef TIdent_TypedefConstr TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_MacroString TIdent_MacroStmt TIdent_MacroIterator TIdent_MacroDecl TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TIdent TFloat TEndif TEllipsis TDefine TDec TCppDirectiveOther TCommentNewline_DefineEndOfMacro TColCol_BeforeTypedef TColCol TChar TCBrace TBang TAndLog TAnd LDots EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production labeled -> Tcase const_expr TEllipsis const_expr TCol statement

State 619:
## Known stack suffix:
## Tcase const_expr TCol
## LR(1) items:
labeled -> Tcase const_expr TCol . statement [ Twhile Twchar_t_Constr Twchar_t Tvolatile Tvoid Tvirtual Tusing Tunsigned Tunion Ttypeof Ttypename Ttypeid Ttypedef Ttry Ttrue Tthrow Tthread_local Tthis Tswitch Tstruct Tstatic_cast Tstatic Tsizeof Tsigned Tshort_Constr Tshort Treturn Trestrict Treinterpret_cast Tregister Toperator Tnullptr Tnull Tnew Tnamespace Tmutable Tlong_Constr Tlong Tint_Constr Tint Tinline Tif Tgoto Tfriend Tfor Tfloat_Constr Tfloat Tfalse Textern Tenum Telse Tdynamic_cast Tdouble_Constr Tdouble Tdo Tdelete Tdefault Tdecltype Tcontinue Tconstexpr Tconst_cast Tconst Tclass Tchar_Constr Tchar Tcase Tbreak Tbool_Constr Tbool Tauto Tasm TUndef TTilde TString TPtVirg TPlus TOPar TOCro_Lambda TOBrace TMul TMinus TInt TInclude TInc TIfdefelse TIfdefelif TIfdefVersion TIfdefMisc TIfdefBool TIfdef TIdent_TypedefConstr TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_MacroString TIdent_MacroStmt TIdent_MacroIterator TIdent_MacroDecl TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TIdent TFloat TEndif TEllipsis TDefine TDec TCppDirectiveOther TCommentNewline_DefineEndOfMacro TColCol_BeforeTypedef TColCol TChar TCBrace TBang TAndLog TAnd LDots EOF ]
## Transitions:
-- On Twhile shift to state 94
-- On Twchar_t_Constr shift to state 14
-- On Twchar_t shift to state 1
-- On Tvolatile shift to state 2
-- On Tvoid shift to state 3
-- On Tvirtual shift to state 4
-- On Tusing shift to state 5
-- On Tunsigned shift to state 15
-- On Tunion shift to state 16
-- On Ttypeof shift to state 17
-- On Ttypename shift to state 19
-- On Ttypeid shift to state 23
-- On Ttypedef shift to state 96
-- On Ttry shift to state 431
-- On Ttrue shift to state 25
-- On Tthrow shift to state 47
-- On Tthread_local shift to state 97
-- On Tthis shift to state 26
-- On Tswitch shift to state 515
-- On Tstruct shift to state 27
-- On Tstatic_cast shift to state 28
-- On Tstatic shift to state 323
-- On Tsizeof shift to state 29
-- On Tsigned shift to state 30
-- On Tshort_Constr shift to state 31
-- On Tshort shift to state 32
-- On Treturn shift to state 537
-- On Trestrict shift to state 65
-- On Treinterpret_cast shift to state 33
-- On Tregister shift to state 99
-- On Toperator shift to state 34
-- On Tnullptr shift to state 48
-- On Tnull shift to state 49
-- On Tnamespace shift to state 540
-- On Tmutable shift to state 100
-- On Tlong_Constr shift to state 50
-- On Tlong shift to state 38
-- On Tint_Constr shift to state 51
-- On Tint shift to state 39
-- On Tinline shift to state 101
-- On Tif shift to state 545
-- On Tgoto shift to state 549
-- On Tfriend shift to state 102
-- On Tfor shift to state 553
-- On Tfloat_Constr shift to state 52
-- On Tfloat shift to state 40
-- On Tfalse shift to state 53
-- On Textern shift to state 103
-- On Tenum shift to state 66
-- On Tdynamic_cast shift to state 54
-- On Tdouble_Constr shift to state 55
-- On Tdouble shift to state 41
-- On Tdo shift to state 562
-- On Tdefault shift to state 563
-- On Tdecltype shift to state 45
-- On Tcontinue shift to state 565
-- On Tconstexpr shift to state 104
-- On Tconst_cast shift to state 56
-- On Tconst shift to state 76
-- On Tclass shift to state 77
-- On Tchar_Constr shift to state 57
-- On Tchar shift to state 58
-- On Tcase shift to state 566
-- On Tbreak shift to state 571
-- On Tbool_Constr shift to state 59
-- On Tbool shift to state 60
-- On Tauto shift to state 105
-- On Tasm shift to state 366
-- On TTilde shift to state 61
-- On TString shift to state 62
-- On TPlus shift to state 63
-- On TOPar shift to state 64
-- On TOCro_Lambda shift to state 78
-- On TOBrace shift to state 93
-- On TMul shift to state 88
-- On TMinus shift to state 89
-- On TInt shift to state 90
-- On TInc shift to state 91
-- On TIdent_TypedefConstr shift to state 106
-- On TIdent_Typedef shift to state 572
-- On TIdent_TemplatenameInQualifier_BeforeTypedef shift to state 21
-- On TIdent_TemplatenameInQualifier shift to state 12
-- On TIdent_Templatename shift to state 108
-- On TIdent_MacroString shift to state 110
-- On TIdent_MacroStmt shift to state 573
-- On TIdent_MacroIterator shift to state 574
-- On TIdent_MacroDecl shift to state 423
-- On TIdent_ClassnameInQualifier_BeforeTypedef shift to state 111
-- On TIdent_ClassnameInQualifier shift to state 112
-- On TIdent shift to state 578
-- On TFloat shift to state 116
-- On TEllipsis shift to state 580
-- On TDec shift to state 117
-- On TColCol_BeforeTypedef shift to state 118
-- On TColCol shift to state 128
-- On TChar shift to state 174
-- On TBang shift to state 175
-- On TAndLog shift to state 176
-- On TAnd shift to state 177
-- On LDots shift to state 178
-- On using_directive shift to state 581
-- On using_declaration shift to state 582
-- On unqualified_id shift to state 179
-- On unary_op shift to state 180
-- On unary_expr shift to state 181
-- On type_spec shift to state 314
-- On type_name shift to state 182
-- On type_cplusplus_id shift to state 183
-- On try_block shift to state 583
-- On template_id shift to state 120
-- On string_elem shift to state 184
-- On storage_class_spec shift to state 316
-- On statement shift to state 620
-- On simple_type_specifier shift to state 266
-- On simple_declaration shift to state 585
-- On shift_expr shift to state 217
-- On selection shift to state 586
-- On relational_expr shift to state 229
-- On qualified_id shift to state 191
-- On primary_expr shift to state 192
-- On primary_cplusplus_id shift to state 193
-- On postfix_expr shift to state 194
-- On pm_expr shift to state 219
-- On option(expr) shift to state 556
-- On option(TColCol) shift to state 221
-- On operator_function_id shift to state 168
-- On new_expr shift to state 233
-- On nested_name_specifier2 shift to state 207
-- On nested_name_specifier shift to state 165
-- On namespace_alias_definition shift to state 587
-- On multiplicative_expr shift to state 234
-- On logical_or_expr shift to state 246
-- On logical_and_expr shift to state 250
-- On literal shift to state 238
-- On lambda_introducer shift to state 239
-- On labeled shift to state 588
-- On jump shift to state 589
-- On iteration shift to state 591
-- On inclusive_or_expr shift to state 272
-- On ident shift to state 592
-- On id_expression shift to state 241
-- On function_spec shift to state 437
-- On function_definition shift to state 595
-- On expr_statement shift to state 596
-- On expr shift to state 597
-- On exclusive_or_expr shift to state 273
-- On equality_expr shift to state 256
-- On enum_specifier shift to state 209
-- On enum_name_or_typedef_name_or_simple_class_name shift to state 123
-- On enum_head shift to state 210
-- On elaborated_type_specifier shift to state 274
-- On delete_expr shift to state 242
-- On decltype_specifier shift to state 243
-- On declaration_statement shift to state 598
-- On decl_spec_seq shift to state 599
-- On decl_spec shift to state 473
-- On cv_qualif shift to state 475
-- On cpp_cast_operator shift to state 244
-- On conversion_function_id shift to state 169
-- On cond_expr shift to state 330
-- On compound shift to state 615
-- On class_specifier shift to state 277
-- On class_or_namespace_name_for_qualifier2 shift to state 124
-- On class_or_namespace_name_for_qualifier shift to state 170
-- On class_key shift to state 278
-- On class_head shift to state 301
-- On cast_operator_expr shift to state 261
-- On cast_expr shift to state 331
-- On cast_constructor_expr shift to state 263
-- On block_declaration shift to state 616
-- On basic_type_2 shift to state 264
-- On assign_expr shift to state 539
-- On asm_definition shift to state 617
-- On and_expr shift to state 334
-- On additive_expr shift to state 341
## Reductions:
-- On Tnew Tdelete
--   reduce production option(TColCol) ->
-- On TPtVirg
--   reduce production option(expr) ->

State 620:
## Known stack suffix:
## Tcase const_expr TCol statement
## LR(1) items:
labeled -> Tcase const_expr TCol statement . [ Twhile Twchar_t_Constr Twchar_t Tvolatile Tvoid Tvirtual Tusing Tunsigned Tunion Ttypeof Ttypename Ttypeid Ttypedef Ttry Ttrue Tthrow Tthread_local Tthis Tswitch Tstruct Tstatic_cast Tstatic Tsizeof Tsigned Tshort_Constr Tshort Treturn Trestrict Treinterpret_cast Tregister Toperator Tnullptr Tnull Tnew Tnamespace Tmutable Tlong_Constr Tlong Tint_Constr Tint Tinline Tif Tgoto Tfriend Tfor Tfloat_Constr Tfloat Tfalse Textern Tenum Telse Tdynamic_cast Tdouble_Constr Tdouble Tdo Tdelete Tdefault Tdecltype Tcontinue Tconstexpr Tconst_cast Tconst Tclass Tchar_Constr Tchar Tcase Tbreak Tbool_Constr Tbool Tauto Tasm TUndef TTilde TString TPtVirg TPlus TOPar TOCro_Lambda TOBrace TMul TMinus TInt TInclude TInc TIfdefelse TIfdefelif TIfdefVersion TIfdefMisc TIfdefBool TIfdef TIdent_TypedefConstr TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_MacroString TIdent_MacroStmt TIdent_MacroIterator TIdent_MacroDecl TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TIdent TFloat TEndif TEllipsis TDefine TDec TCppDirectiveOther TCommentNewline_DefineEndOfMacro TColCol_BeforeTypedef TColCol TChar TCBrace TBang TAndLog TAnd LDots EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production labeled -> Tcase const_expr TCol statement

State 621:
## Known stack suffix:
## Tdefault TCol statement
## LR(1) items:
labeled -> Tdefault TCol statement . [ Twhile Twchar_t_Constr Twchar_t Tvolatile Tvoid Tvirtual Tusing Tunsigned Tunion Ttypeof Ttypename Ttypeid Ttypedef Ttry Ttrue Tthrow Tthread_local Tthis Tswitch Tstruct Tstatic_cast Tstatic Tsizeof Tsigned Tshort_Constr Tshort Treturn Trestrict Treinterpret_cast Tregister Toperator Tnullptr Tnull Tnew Tnamespace Tmutable Tlong_Constr Tlong Tint_Constr Tint Tinline Tif Tgoto Tfriend Tfor Tfloat_Constr Tfloat Tfalse Textern Tenum Telse Tdynamic_cast Tdouble_Constr Tdouble Tdo Tdelete Tdefault Tdecltype Tcontinue Tconstexpr Tconst_cast Tconst Tclass Tchar_Constr Tchar Tcase Tbreak Tbool_Constr Tbool Tauto Tasm TUndef TTilde TString TPtVirg TPlus TOPar TOCro_Lambda TOBrace TMul TMinus TInt TInclude TInc TIfdefelse TIfdefelif TIfdefVersion TIfdefMisc TIfdefBool TIfdef TIdent_TypedefConstr TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_MacroString TIdent_MacroStmt TIdent_MacroIterator TIdent_MacroDecl TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TIdent TFloat TEndif TEllipsis TDefine TDec TCppDirectiveOther TCommentNewline_DefineEndOfMacro TColCol_BeforeTypedef TColCol TChar TCBrace TBang TAndLog TAnd LDots EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production labeled -> Tdefault TCol statement

State 622:
## Known stack suffix:
## Tdo statement
## LR(1) items:
iteration -> Tdo statement . Twhile TOPar expr TCPar TPtVirg [ Twhile Twchar_t_Constr Twchar_t Tvolatile Tvoid Tvirtual Tusing Tunsigned Tunion Ttypeof Ttypename Ttypeid Ttypedef Ttry Ttrue Tthrow Tthread_local Tthis Tswitch Tstruct Tstatic_cast Tstatic Tsizeof Tsigned Tshort_Constr Tshort Treturn Trestrict Treinterpret_cast Tregister Toperator Tnullptr Tnull Tnew Tnamespace Tmutable Tlong_Constr Tlong Tint_Constr Tint Tinline Tif Tgoto Tfriend Tfor Tfloat_Constr Tfloat Tfalse Textern Tenum Telse Tdynamic_cast Tdouble_Constr Tdouble Tdo Tdelete Tdefault Tdecltype Tcontinue Tconstexpr Tconst_cast Tconst Tclass Tchar_Constr Tchar Tcase Tbreak Tbool_Constr Tbool Tauto Tasm TUndef TTilde TString TPtVirg TPlus TOPar TOCro_Lambda TOBrace TMul TMinus TInt TInclude TInc TIfdefelse TIfdefelif TIfdefVersion TIfdefMisc TIfdefBool TIfdef TIdent_TypedefConstr TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_MacroString TIdent_MacroStmt TIdent_MacroIterator TIdent_MacroDecl TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TIdent TFloat TEndif TEllipsis TDefine TDec TCppDirectiveOther TCommentNewline_DefineEndOfMacro TColCol_BeforeTypedef TColCol TChar TCBrace TBang TAndLog TAnd LDots EOF ]
## Transitions:
-- On Twhile shift to state 623
## Reductions:

State 623:
## Known stack suffix:
## Tdo statement Twhile
## LR(1) items:
iteration -> Tdo statement Twhile . TOPar expr TCPar TPtVirg [ Twhile Twchar_t_Constr Twchar_t Tvolatile Tvoid Tvirtual Tusing Tunsigned Tunion Ttypeof Ttypename Ttypeid Ttypedef Ttry Ttrue Tthrow Tthread_local Tthis Tswitch Tstruct Tstatic_cast Tstatic Tsizeof Tsigned Tshort_Constr Tshort Treturn Trestrict Treinterpret_cast Tregister Toperator Tnullptr Tnull Tnew Tnamespace Tmutable Tlong_Constr Tlong Tint_Constr Tint Tinline Tif Tgoto Tfriend Tfor Tfloat_Constr Tfloat Tfalse Textern Tenum Telse Tdynamic_cast Tdouble_Constr Tdouble Tdo Tdelete Tdefault Tdecltype Tcontinue Tconstexpr Tconst_cast Tconst Tclass Tchar_Constr Tchar Tcase Tbreak Tbool_Constr Tbool Tauto Tasm TUndef TTilde TString TPtVirg TPlus TOPar TOCro_Lambda TOBrace TMul TMinus TInt TInclude TInc TIfdefelse TIfdefelif TIfdefVersion TIfdefMisc TIfdefBool TIfdef TIdent_TypedefConstr TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_MacroString TIdent_MacroStmt TIdent_MacroIterator TIdent_MacroDecl TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TIdent TFloat TEndif TEllipsis TDefine TDec TCppDirectiveOther TCommentNewline_DefineEndOfMacro TColCol_BeforeTypedef TColCol TChar TCBrace TBang TAndLog TAnd LDots EOF ]
## Transitions:
-- On TOPar shift to state 624
## Reductions:

State 624:
## Known stack suffix:
## Tdo statement Twhile TOPar
## LR(1) items:
iteration -> Tdo statement Twhile TOPar . expr TCPar TPtVirg [ Twhile Twchar_t_Constr Twchar_t Tvolatile Tvoid Tvirtual Tusing Tunsigned Tunion Ttypeof Ttypename Ttypeid Ttypedef Ttry Ttrue Tthrow Tthread_local Tthis Tswitch Tstruct Tstatic_cast Tstatic Tsizeof Tsigned Tshort_Constr Tshort Treturn Trestrict Treinterpret_cast Tregister Toperator Tnullptr Tnull Tnew Tnamespace Tmutable Tlong_Constr Tlong Tint_Constr Tint Tinline Tif Tgoto Tfriend Tfor Tfloat_Constr Tfloat Tfalse Textern Tenum Telse Tdynamic_cast Tdouble_Constr Tdouble Tdo Tdelete Tdefault Tdecltype Tcontinue Tconstexpr Tconst_cast Tconst Tclass Tchar_Constr Tchar Tcase Tbreak Tbool_Constr Tbool Tauto Tasm TUndef TTilde TString TPtVirg TPlus TOPar TOCro_Lambda TOBrace TMul TMinus TInt TInclude TInc TIfdefelse TIfdefelif TIfdefVersion TIfdefMisc TIfdefBool TIfdef TIdent_TypedefConstr TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_MacroString TIdent_MacroStmt TIdent_MacroIterator TIdent_MacroDecl TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TIdent TFloat TEndif TEllipsis TDefine TDec TCppDirectiveOther TCommentNewline_DefineEndOfMacro TColCol_BeforeTypedef TColCol TChar TCBrace TBang TAndLog TAnd LDots EOF ]
## Transitions:
-- On Twchar_t_Constr shift to state 14
-- On Twchar_t shift to state 1
-- On Tvoid shift to state 3
-- On Tunsigned shift to state 15
-- On Ttypeof shift to state 17
-- On Ttypeid shift to state 23
-- On Ttrue shift to state 25
-- On Tthrow shift to state 47
-- On Tthis shift to state 26
-- On Tstatic_cast shift to state 28
-- On Tsizeof shift to state 29
-- On Tsigned shift to state 30
-- On Tshort_Constr shift to state 31
-- On Tshort shift to state 32
-- On Treinterpret_cast shift to state 33
-- On Toperator shift to state 34
-- On Tnullptr shift to state 48
-- On Tnull shift to state 49
-- On Tlong_Constr shift to state 50
-- On Tlong shift to state 38
-- On Tint_Constr shift to state 51
-- On Tint shift to state 39
-- On Tfloat_Constr shift to state 52
-- On Tfloat shift to state 40
-- On Tfalse shift to state 53
-- On Tdynamic_cast shift to state 54
-- On Tdouble_Constr shift to state 55
-- On Tdouble shift to state 41
-- On Tdecltype shift to state 45
-- On Tconst_cast shift to state 56
-- On Tchar_Constr shift to state 57
-- On Tchar shift to state 58
-- On Tbool_Constr shift to state 59
-- On Tbool shift to state 60
-- On TTilde shift to state 61
-- On TString shift to state 62
-- On TPlus shift to state 63
-- On TOPar shift to state 64
-- On TOCro_Lambda shift to state 78
-- On TMul shift to state 88
-- On TMinus shift to state 89
-- On TInt shift to state 90
-- On TInc shift to state 91
-- On TIdent_TypedefConstr shift to state 106
-- On TIdent_Typedef shift to state 20
-- On TIdent_TemplatenameInQualifier_BeforeTypedef shift to state 21
-- On TIdent_TemplatenameInQualifier shift to state 12
-- On TIdent_Templatename shift to state 108
-- On TIdent_MacroString shift to state 110
-- On TIdent_ClassnameInQualifier_BeforeTypedef shift to state 111
-- On TIdent_ClassnameInQualifier shift to state 112
-- On TIdent shift to state 113
-- On TFloat shift to state 116
-- On TDec shift to state 117
-- On TColCol_BeforeTypedef shift to state 118
-- On TColCol shift to state 128
-- On TChar shift to state 174
-- On TBang shift to state 175
-- On TAndLog shift to state 176
-- On TAnd shift to state 177
-- On LDots shift to state 178
-- On unqualified_id shift to state 179
-- On unary_op shift to state 180
-- On unary_expr shift to state 181
-- On type_name shift to state 182
-- On type_cplusplus_id shift to state 183
-- On template_id shift to state 120
-- On string_elem shift to state 184
-- On simple_type_specifier shift to state 189
-- On shift_expr shift to state 217
-- On relational_expr shift to state 229
-- On qualified_id shift to state 191
-- On primary_expr shift to state 192
-- On primary_cplusplus_id shift to state 193
-- On postfix_expr shift to state 194
-- On pm_expr shift to state 219
-- On option(TColCol) shift to state 221
-- On operator_function_id shift to state 168
-- On new_expr shift to state 233
-- On nested_name_specifier2 shift to state 207
-- On nested_name_specifier shift to state 165
-- On multiplicative_expr shift to state 234
-- On logical_or_expr shift to state 246
-- On logical_and_expr shift to state 250
-- On literal shift to state 238
-- On lambda_introducer shift to state 239
-- On inclusive_or_expr shift to state 272
-- On id_expression shift to state 241
-- On expr shift to state 625
-- On exclusive_or_expr shift to state 273
-- On equality_expr shift to state 256
-- On enum_name_or_typedef_name_or_simple_class_name shift to state 123
-- On delete_expr shift to state 242
-- On decltype_specifier shift to state 243
-- On cpp_cast_operator shift to state 244
-- On conversion_function_id shift to state 169
-- On cond_expr shift to state 330
-- On class_or_namespace_name_for_qualifier2 shift to state 124
-- On class_or_namespace_name_for_qualifier shift to state 170
-- On cast_operator_expr shift to state 261
-- On cast_expr shift to state 331
-- On cast_constructor_expr shift to state 263
-- On basic_type_2 shift to state 264
-- On assign_expr shift to state 539
-- On and_expr shift to state 334
-- On additive_expr shift to state 341
## Reductions:
-- On Tnew Tdelete
--   reduce production option(TColCol) ->

State 625:
## Known stack suffix:
## Tdo statement Twhile TOPar expr
## LR(1) items:
expr -> expr . TComma assign_expr [ TComma TCPar ]
iteration -> Tdo statement Twhile TOPar expr . TCPar TPtVirg [ Twhile Twchar_t_Constr Twchar_t Tvolatile Tvoid Tvirtual Tusing Tunsigned Tunion Ttypeof Ttypename Ttypeid Ttypedef Ttry Ttrue Tthrow Tthread_local Tthis Tswitch Tstruct Tstatic_cast Tstatic Tsizeof Tsigned Tshort_Constr Tshort Treturn Trestrict Treinterpret_cast Tregister Toperator Tnullptr Tnull Tnew Tnamespace Tmutable Tlong_Constr Tlong Tint_Constr Tint Tinline Tif Tgoto Tfriend Tfor Tfloat_Constr Tfloat Tfalse Textern Tenum Telse Tdynamic_cast Tdouble_Constr Tdouble Tdo Tdelete Tdefault Tdecltype Tcontinue Tconstexpr Tconst_cast Tconst Tclass Tchar_Constr Tchar Tcase Tbreak Tbool_Constr Tbool Tauto Tasm TUndef TTilde TString TPtVirg TPlus TOPar TOCro_Lambda TOBrace TMul TMinus TInt TInclude TInc TIfdefelse TIfdefelif TIfdefVersion TIfdefMisc TIfdefBool TIfdef TIdent_TypedefConstr TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_MacroString TIdent_MacroStmt TIdent_MacroIterator TIdent_MacroDecl TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TIdent TFloat TEndif TEllipsis TDefine TDec TCppDirectiveOther TCommentNewline_DefineEndOfMacro TColCol_BeforeTypedef TColCol TChar TCBrace TBang TAndLog TAnd LDots EOF ]
## Transitions:
-- On TComma shift to state 518
-- On TCPar shift to state 626
## Reductions:

State 626:
## Known stack suffix:
## Tdo statement Twhile TOPar expr TCPar
## LR(1) items:
iteration -> Tdo statement Twhile TOPar expr TCPar . TPtVirg [ Twhile Twchar_t_Constr Twchar_t Tvolatile Tvoid Tvirtual Tusing Tunsigned Tunion Ttypeof Ttypename Ttypeid Ttypedef Ttry Ttrue Tthrow Tthread_local Tthis Tswitch Tstruct Tstatic_cast Tstatic Tsizeof Tsigned Tshort_Constr Tshort Treturn Trestrict Treinterpret_cast Tregister Toperator Tnullptr Tnull Tnew Tnamespace Tmutable Tlong_Constr Tlong Tint_Constr Tint Tinline Tif Tgoto Tfriend Tfor Tfloat_Constr Tfloat Tfalse Textern Tenum Telse Tdynamic_cast Tdouble_Constr Tdouble Tdo Tdelete Tdefault Tdecltype Tcontinue Tconstexpr Tconst_cast Tconst Tclass Tchar_Constr Tchar Tcase Tbreak Tbool_Constr Tbool Tauto Tasm TUndef TTilde TString TPtVirg TPlus TOPar TOCro_Lambda TOBrace TMul TMinus TInt TInclude TInc TIfdefelse TIfdefelif TIfdefVersion TIfdefMisc TIfdefBool TIfdef TIdent_TypedefConstr TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_MacroString TIdent_MacroStmt TIdent_MacroIterator TIdent_MacroDecl TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TIdent TFloat TEndif TEllipsis TDefine TDec TCppDirectiveOther TCommentNewline_DefineEndOfMacro TColCol_BeforeTypedef TColCol TChar TCBrace TBang TAndLog TAnd LDots EOF ]
## Transitions:
-- On TPtVirg shift to state 627
## Reductions:

State 627:
## Known stack suffix:
## Tdo statement Twhile TOPar expr TCPar TPtVirg
## LR(1) items:
iteration -> Tdo statement Twhile TOPar expr TCPar TPtVirg . [ Twhile Twchar_t_Constr Twchar_t Tvolatile Tvoid Tvirtual Tusing Tunsigned Tunion Ttypeof Ttypename Ttypeid Ttypedef Ttry Ttrue Tthrow Tthread_local Tthis Tswitch Tstruct Tstatic_cast Tstatic Tsizeof Tsigned Tshort_Constr Tshort Treturn Trestrict Treinterpret_cast Tregister Toperator Tnullptr Tnull Tnew Tnamespace Tmutable Tlong_Constr Tlong Tint_Constr Tint Tinline Tif Tgoto Tfriend Tfor Tfloat_Constr Tfloat Tfalse Textern Tenum Telse Tdynamic_cast Tdouble_Constr Tdouble Tdo Tdelete Tdefault Tdecltype Tcontinue Tconstexpr Tconst_cast Tconst Tclass Tchar_Constr Tchar Tcase Tbreak Tbool_Constr Tbool Tauto Tasm TUndef TTilde TString TPtVirg TPlus TOPar TOCro_Lambda TOBrace TMul TMinus TInt TInclude TInc TIfdefelse TIfdefelif TIfdefVersion TIfdefMisc TIfdefBool TIfdef TIdent_TypedefConstr TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_MacroString TIdent_MacroStmt TIdent_MacroIterator TIdent_MacroDecl TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TIdent TFloat TEndif TEllipsis TDefine TDec TCppDirectiveOther TCommentNewline_DefineEndOfMacro TColCol_BeforeTypedef TColCol TChar TCBrace TBang TAndLog TAnd LDots EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production iteration -> Tdo statement Twhile TOPar expr TCPar TPtVirg

State 628:
## Known stack suffix:
## Tfor TOPar for_range_decl TCol for_range_init TCPar statement
## LR(1) items:
iteration -> Tfor TOPar for_range_decl TCol for_range_init TCPar statement . [ Twhile Twchar_t_Constr Twchar_t Tvolatile Tvoid Tvirtual Tusing Tunsigned Tunion Ttypeof Ttypename Ttypeid Ttypedef Ttry Ttrue Tthrow Tthread_local Tthis Tswitch Tstruct Tstatic_cast Tstatic Tsizeof Tsigned Tshort_Constr Tshort Treturn Trestrict Treinterpret_cast Tregister Toperator Tnullptr Tnull Tnew Tnamespace Tmutable Tlong_Constr Tlong Tint_Constr Tint Tinline Tif Tgoto Tfriend Tfor Tfloat_Constr Tfloat Tfalse Textern Tenum Telse Tdynamic_cast Tdouble_Constr Tdouble Tdo Tdelete Tdefault Tdecltype Tcontinue Tconstexpr Tconst_cast Tconst Tclass Tchar_Constr Tchar Tcase Tbreak Tbool_Constr Tbool Tauto Tasm TUndef TTilde TString TPtVirg TPlus TOPar TOCro_Lambda TOBrace TMul TMinus TInt TInclude TInc TIfdefelse TIfdefelif TIfdefVersion TIfdefMisc TIfdefBool TIfdef TIdent_TypedefConstr TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_MacroString TIdent_MacroStmt TIdent_MacroIterator TIdent_MacroDecl TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TIdent TFloat TEndif TEllipsis TDefine TDec TCppDirectiveOther TCommentNewline_DefineEndOfMacro TColCol_BeforeTypedef TColCol TChar TCBrace TBang TAndLog TAnd LDots EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production iteration -> Tfor TOPar for_range_decl TCol for_range_init TCPar statement

State 629:
## Known stack suffix:
## expr
## LR(1) items:
expr -> expr . TComma assign_expr [ TComma TCPar ]
for_range_init -> expr . [ TCPar ]
## Transitions:
-- On TComma shift to state 518
## Reductions:
-- On TCPar
--   reduce production for_range_init -> expr

State 630:
## Known stack suffix:
## Tfor TOPar for_init_stmt
## LR(1) items:
iteration -> Tfor TOPar for_init_stmt . expr_statement option(expr) TCPar statement [ Twhile Twchar_t_Constr Twchar_t Tvolatile Tvoid Tvirtual Tusing Tunsigned Tunion Ttypeof Ttypename Ttypeid Ttypedef Ttry Ttrue Tthrow Tthread_local Tthis Tswitch Tstruct Tstatic_cast Tstatic Tsizeof Tsigned Tshort_Constr Tshort Treturn Trestrict Treinterpret_cast Tregister Toperator Tnullptr Tnull Tnew Tnamespace Tmutable Tlong_Constr Tlong Tint_Constr Tint Tinline Tif Tgoto Tfriend Tfor Tfloat_Constr Tfloat Tfalse Textern Tenum Telse Tdynamic_cast Tdouble_Constr Tdouble Tdo Tdelete Tdefault Tdecltype Tcontinue Tconstexpr Tconst_cast Tconst Tclass Tchar_Constr Tchar Tcase Tbreak Tbool_Constr Tbool Tauto Tasm TUndef TTilde TString TPtVirg TPlus TOPar TOCro_Lambda TOBrace TMul TMinus TInt TInclude TInc TIfdefelse TIfdefelif TIfdefVersion TIfdefMisc TIfdefBool TIfdef TIdent_TypedefConstr TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_MacroString TIdent_MacroStmt TIdent_MacroIterator TIdent_MacroDecl TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TIdent TFloat TEndif TEllipsis TDefine TDec TCppDirectiveOther TCommentNewline_DefineEndOfMacro TColCol_BeforeTypedef TColCol TChar TCBrace TBang TAndLog TAnd LDots EOF ]
## Transitions:
-- On Twchar_t_Constr shift to state 14
-- On Twchar_t shift to state 1
-- On Tvoid shift to state 3
-- On Tunsigned shift to state 15
-- On Ttypeof shift to state 17
-- On Ttypeid shift to state 23
-- On Ttrue shift to state 25
-- On Tthrow shift to state 47
-- On Tthis shift to state 26
-- On Tstatic_cast shift to state 28
-- On Tsizeof shift to state 29
-- On Tsigned shift to state 30
-- On Tshort_Constr shift to state 31
-- On Tshort shift to state 32
-- On Treinterpret_cast shift to state 33
-- On Toperator shift to state 34
-- On Tnullptr shift to state 48
-- On Tnull shift to state 49
-- On Tlong_Constr shift to state 50
-- On Tlong shift to state 38
-- On Tint_Constr shift to state 51
-- On Tint shift to state 39
-- On Tfloat_Constr shift to state 52
-- On Tfloat shift to state 40
-- On Tfalse shift to state 53
-- On Tdynamic_cast shift to state 54
-- On Tdouble_Constr shift to state 55
-- On Tdouble shift to state 41
-- On Tdecltype shift to state 45
-- On Tconst_cast shift to state 56
-- On Tchar_Constr shift to state 57
-- On Tchar shift to state 58
-- On Tbool_Constr shift to state 59
-- On Tbool shift to state 60
-- On TTilde shift to state 61
-- On TString shift to state 62
-- On TPlus shift to state 63
-- On TOPar shift to state 64
-- On TOCro_Lambda shift to state 78
-- On TMul shift to state 88
-- On TMinus shift to state 89
-- On TInt shift to state 90
-- On TInc shift to state 91
-- On TIdent_TypedefConstr shift to state 106
-- On TIdent_Typedef shift to state 20
-- On TIdent_TemplatenameInQualifier_BeforeTypedef shift to state 21
-- On TIdent_TemplatenameInQualifier shift to state 12
-- On TIdent_Templatename shift to state 108
-- On TIdent_MacroString shift to state 110
-- On TIdent_ClassnameInQualifier_BeforeTypedef shift to state 111
-- On TIdent_ClassnameInQualifier shift to state 112
-- On TIdent shift to state 113
-- On TFloat shift to state 116
-- On TDec shift to state 117
-- On TColCol_BeforeTypedef shift to state 118
-- On TColCol shift to state 128
-- On TChar shift to state 174
-- On TBang shift to state 175
-- On TAndLog shift to state 176
-- On TAnd shift to state 177
-- On LDots shift to state 178
-- On unqualified_id shift to state 179
-- On unary_op shift to state 180
-- On unary_expr shift to state 181
-- On type_name shift to state 182
-- On type_cplusplus_id shift to state 183
-- On template_id shift to state 120
-- On string_elem shift to state 184
-- On simple_type_specifier shift to state 189
-- On shift_expr shift to state 217
-- On relational_expr shift to state 229
-- On qualified_id shift to state 191
-- On primary_expr shift to state 192
-- On primary_cplusplus_id shift to state 193
-- On postfix_expr shift to state 194
-- On pm_expr shift to state 219
-- On option(expr) shift to state 556
-- On option(TColCol) shift to state 221
-- On operator_function_id shift to state 168
-- On new_expr shift to state 233
-- On nested_name_specifier2 shift to state 207
-- On nested_name_specifier shift to state 165
-- On multiplicative_expr shift to state 234
-- On logical_or_expr shift to state 246
-- On logical_and_expr shift to state 250
-- On literal shift to state 238
-- On lambda_introducer shift to state 239
-- On inclusive_or_expr shift to state 272
-- On id_expression shift to state 241
-- On expr_statement shift to state 631
-- On expr shift to state 597
-- On exclusive_or_expr shift to state 273
-- On equality_expr shift to state 256
-- On enum_name_or_typedef_name_or_simple_class_name shift to state 123
-- On delete_expr shift to state 242
-- On decltype_specifier shift to state 243
-- On cpp_cast_operator shift to state 244
-- On conversion_function_id shift to state 169
-- On cond_expr shift to state 330
-- On class_or_namespace_name_for_qualifier2 shift to state 124
-- On class_or_namespace_name_for_qualifier shift to state 170
-- On cast_operator_expr shift to state 261
-- On cast_expr shift to state 331
-- On cast_constructor_expr shift to state 263
-- On basic_type_2 shift to state 264
-- On assign_expr shift to state 539
-- On and_expr shift to state 334
-- On additive_expr shift to state 341
## Reductions:
-- On Tnew Tdelete
--   reduce production option(TColCol) ->
-- On TPtVirg
--   reduce production option(expr) ->

State 631:
## Known stack suffix:
## Tfor TOPar for_init_stmt expr_statement
## LR(1) items:
iteration -> Tfor TOPar for_init_stmt expr_statement . option(expr) TCPar statement [ Twhile Twchar_t_Constr Twchar_t Tvolatile Tvoid Tvirtual Tusing Tunsigned Tunion Ttypeof Ttypename Ttypeid Ttypedef Ttry Ttrue Tthrow Tthread_local Tthis Tswitch Tstruct Tstatic_cast Tstatic Tsizeof Tsigned Tshort_Constr Tshort Treturn Trestrict Treinterpret_cast Tregister Toperator Tnullptr Tnull Tnew Tnamespace Tmutable Tlong_Constr Tlong Tint_Constr Tint Tinline Tif Tgoto Tfriend Tfor Tfloat_Constr Tfloat Tfalse Textern Tenum Telse Tdynamic_cast Tdouble_Constr Tdouble Tdo Tdelete Tdefault Tdecltype Tcontinue Tconstexpr Tconst_cast Tconst Tclass Tchar_Constr Tchar Tcase Tbreak Tbool_Constr Tbool Tauto Tasm TUndef TTilde TString TPtVirg TPlus TOPar TOCro_Lambda TOBrace TMul TMinus TInt TInclude TInc TIfdefelse TIfdefelif TIfdefVersion TIfdefMisc TIfdefBool TIfdef TIdent_TypedefConstr TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_MacroString TIdent_MacroStmt TIdent_MacroIterator TIdent_MacroDecl TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TIdent TFloat TEndif TEllipsis TDefine TDec TCppDirectiveOther TCommentNewline_DefineEndOfMacro TColCol_BeforeTypedef TColCol TChar TCBrace TBang TAndLog TAnd LDots EOF ]
## Transitions:
-- On Twchar_t_Constr shift to state 14
-- On Twchar_t shift to state 1
-- On Tvoid shift to state 3
-- On Tunsigned shift to state 15
-- On Ttypeof shift to state 17
-- On Ttypeid shift to state 23
-- On Ttrue shift to state 25
-- On Tthrow shift to state 47
-- On Tthis shift to state 26
-- On Tstatic_cast shift to state 28
-- On Tsizeof shift to state 29
-- On Tsigned shift to state 30
-- On Tshort_Constr shift to state 31
-- On Tshort shift to state 32
-- On Treinterpret_cast shift to state 33
-- On Toperator shift to state 34
-- On Tnullptr shift to state 48
-- On Tnull shift to state 49
-- On Tlong_Constr shift to state 50
-- On Tlong shift to state 38
-- On Tint_Constr shift to state 51
-- On Tint shift to state 39
-- On Tfloat_Constr shift to state 52
-- On Tfloat shift to state 40
-- On Tfalse shift to state 53
-- On Tdynamic_cast shift to state 54
-- On Tdouble_Constr shift to state 55
-- On Tdouble shift to state 41
-- On Tdecltype shift to state 45
-- On Tconst_cast shift to state 56
-- On Tchar_Constr shift to state 57
-- On Tchar shift to state 58
-- On Tbool_Constr shift to state 59
-- On Tbool shift to state 60
-- On TTilde shift to state 61
-- On TString shift to state 62
-- On TPlus shift to state 63
-- On TOPar shift to state 64
-- On TOCro_Lambda shift to state 78
-- On TMul shift to state 88
-- On TMinus shift to state 89
-- On TInt shift to state 90
-- On TInc shift to state 91
-- On TIdent_TypedefConstr shift to state 106
-- On TIdent_Typedef shift to state 20
-- On TIdent_TemplatenameInQualifier_BeforeTypedef shift to state 21
-- On TIdent_TemplatenameInQualifier shift to state 12
-- On TIdent_Templatename shift to state 108
-- On TIdent_MacroString shift to state 110
-- On TIdent_ClassnameInQualifier_BeforeTypedef shift to state 111
-- On TIdent_ClassnameInQualifier shift to state 112
-- On TIdent shift to state 113
-- On TFloat shift to state 116
-- On TDec shift to state 117
-- On TColCol_BeforeTypedef shift to state 118
-- On TColCol shift to state 128
-- On TChar shift to state 174
-- On TBang shift to state 175
-- On TAndLog shift to state 176
-- On TAnd shift to state 177
-- On LDots shift to state 178
-- On unqualified_id shift to state 179
-- On unary_op shift to state 180
-- On unary_expr shift to state 181
-- On type_name shift to state 182
-- On type_cplusplus_id shift to state 183
-- On template_id shift to state 120
-- On string_elem shift to state 184
-- On simple_type_specifier shift to state 189
-- On shift_expr shift to state 217
-- On relational_expr shift to state 229
-- On qualified_id shift to state 191
-- On primary_expr shift to state 192
-- On primary_cplusplus_id shift to state 193
-- On postfix_expr shift to state 194
-- On pm_expr shift to state 219
-- On option(expr) shift to state 632
-- On option(TColCol) shift to state 221
-- On operator_function_id shift to state 168
-- On new_expr shift to state 233
-- On nested_name_specifier2 shift to state 207
-- On nested_name_specifier shift to state 165
-- On multiplicative_expr shift to state 234
-- On logical_or_expr shift to state 246
-- On logical_and_expr shift to state 250
-- On literal shift to state 238
-- On lambda_introducer shift to state 239
-- On inclusive_or_expr shift to state 272
-- On id_expression shift to state 241
-- On expr shift to state 597
-- On exclusive_or_expr shift to state 273
-- On equality_expr shift to state 256
-- On enum_name_or_typedef_name_or_simple_class_name shift to state 123
-- On delete_expr shift to state 242
-- On decltype_specifier shift to state 243
-- On cpp_cast_operator shift to state 244
-- On conversion_function_id shift to state 169
-- On cond_expr shift to state 330
-- On class_or_namespace_name_for_qualifier2 shift to state 124
-- On class_or_namespace_name_for_qualifier shift to state 170
-- On cast_operator_expr shift to state 261
-- On cast_expr shift to state 331
-- On cast_constructor_expr shift to state 263
-- On basic_type_2 shift to state 264
-- On assign_expr shift to state 539
-- On and_expr shift to state 334
-- On additive_expr shift to state 341
## Reductions:
-- On Tnew Tdelete
--   reduce production option(TColCol) ->
-- On TCPar
--   reduce production option(expr) ->

State 632:
## Known stack suffix:
## Tfor TOPar for_init_stmt expr_statement option(expr)
## LR(1) items:
iteration -> Tfor TOPar for_init_stmt expr_statement option(expr) . TCPar statement [ Twhile Twchar_t_Constr Twchar_t Tvolatile Tvoid Tvirtual Tusing Tunsigned Tunion Ttypeof Ttypename Ttypeid Ttypedef Ttry Ttrue Tthrow Tthread_local Tthis Tswitch Tstruct Tstatic_cast Tstatic Tsizeof Tsigned Tshort_Constr Tshort Treturn Trestrict Treinterpret_cast Tregister Toperator Tnullptr Tnull Tnew Tnamespace Tmutable Tlong_Constr Tlong Tint_Constr Tint Tinline Tif Tgoto Tfriend Tfor Tfloat_Constr Tfloat Tfalse Textern Tenum Telse Tdynamic_cast Tdouble_Constr Tdouble Tdo Tdelete Tdefault Tdecltype Tcontinue Tconstexpr Tconst_cast Tconst Tclass Tchar_Constr Tchar Tcase Tbreak Tbool_Constr Tbool Tauto Tasm TUndef TTilde TString TPtVirg TPlus TOPar TOCro_Lambda TOBrace TMul TMinus TInt TInclude TInc TIfdefelse TIfdefelif TIfdefVersion TIfdefMisc TIfdefBool TIfdef TIdent_TypedefConstr TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_MacroString TIdent_MacroStmt TIdent_MacroIterator TIdent_MacroDecl TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TIdent TFloat TEndif TEllipsis TDefine TDec TCppDirectiveOther TCommentNewline_DefineEndOfMacro TColCol_BeforeTypedef TColCol TChar TCBrace TBang TAndLog TAnd LDots EOF ]
## Transitions:
-- On TCPar shift to state 633
## Reductions:

State 633:
## Known stack suffix:
## Tfor TOPar for_init_stmt expr_statement option(expr) TCPar
## LR(1) items:
iteration -> Tfor TOPar for_init_stmt expr_statement option(expr) TCPar . statement [ Twhile Twchar_t_Constr Twchar_t Tvolatile Tvoid Tvirtual Tusing Tunsigned Tunion Ttypeof Ttypename Ttypeid Ttypedef Ttry Ttrue Tthrow Tthread_local Tthis Tswitch Tstruct Tstatic_cast Tstatic Tsizeof Tsigned Tshort_Constr Tshort Treturn Trestrict Treinterpret_cast Tregister Toperator Tnullptr Tnull Tnew Tnamespace Tmutable Tlong_Constr Tlong Tint_Constr Tint Tinline Tif Tgoto Tfriend Tfor Tfloat_Constr Tfloat Tfalse Textern Tenum Telse Tdynamic_cast Tdouble_Constr Tdouble Tdo Tdelete Tdefault Tdecltype Tcontinue Tconstexpr Tconst_cast Tconst Tclass Tchar_Constr Tchar Tcase Tbreak Tbool_Constr Tbool Tauto Tasm TUndef TTilde TString TPtVirg TPlus TOPar TOCro_Lambda TOBrace TMul TMinus TInt TInclude TInc TIfdefelse TIfdefelif TIfdefVersion TIfdefMisc TIfdefBool TIfdef TIdent_TypedefConstr TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_MacroString TIdent_MacroStmt TIdent_MacroIterator TIdent_MacroDecl TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TIdent TFloat TEndif TEllipsis TDefine TDec TCppDirectiveOther TCommentNewline_DefineEndOfMacro TColCol_BeforeTypedef TColCol TChar TCBrace TBang TAndLog TAnd LDots EOF ]
## Transitions:
-- On Twhile shift to state 94
-- On Twchar_t_Constr shift to state 14
-- On Twchar_t shift to state 1
-- On Tvolatile shift to state 2
-- On Tvoid shift to state 3
-- On Tvirtual shift to state 4
-- On Tusing shift to state 5
-- On Tunsigned shift to state 15
-- On Tunion shift to state 16
-- On Ttypeof shift to state 17
-- On Ttypename shift to state 19
-- On Ttypeid shift to state 23
-- On Ttypedef shift to state 96
-- On Ttry shift to state 431
-- On Ttrue shift to state 25
-- On Tthrow shift to state 47
-- On Tthread_local shift to state 97
-- On Tthis shift to state 26
-- On Tswitch shift to state 515
-- On Tstruct shift to state 27
-- On Tstatic_cast shift to state 28
-- On Tstatic shift to state 323
-- On Tsizeof shift to state 29
-- On Tsigned shift to state 30
-- On Tshort_Constr shift to state 31
-- On Tshort shift to state 32
-- On Treturn shift to state 537
-- On Trestrict shift to state 65
-- On Treinterpret_cast shift to state 33
-- On Tregister shift to state 99
-- On Toperator shift to state 34
-- On Tnullptr shift to state 48
-- On Tnull shift to state 49
-- On Tnamespace shift to state 540
-- On Tmutable shift to state 100
-- On Tlong_Constr shift to state 50
-- On Tlong shift to state 38
-- On Tint_Constr shift to state 51
-- On Tint shift to state 39
-- On Tinline shift to state 101
-- On Tif shift to state 545
-- On Tgoto shift to state 549
-- On Tfriend shift to state 102
-- On Tfor shift to state 553
-- On Tfloat_Constr shift to state 52
-- On Tfloat shift to state 40
-- On Tfalse shift to state 53
-- On Textern shift to state 103
-- On Tenum shift to state 66
-- On Tdynamic_cast shift to state 54
-- On Tdouble_Constr shift to state 55
-- On Tdouble shift to state 41
-- On Tdo shift to state 562
-- On Tdefault shift to state 563
-- On Tdecltype shift to state 45
-- On Tcontinue shift to state 565
-- On Tconstexpr shift to state 104
-- On Tconst_cast shift to state 56
-- On Tconst shift to state 76
-- On Tclass shift to state 77
-- On Tchar_Constr shift to state 57
-- On Tchar shift to state 58
-- On Tcase shift to state 566
-- On Tbreak shift to state 571
-- On Tbool_Constr shift to state 59
-- On Tbool shift to state 60
-- On Tauto shift to state 105
-- On Tasm shift to state 366
-- On TTilde shift to state 61
-- On TString shift to state 62
-- On TPlus shift to state 63
-- On TOPar shift to state 64
-- On TOCro_Lambda shift to state 78
-- On TOBrace shift to state 93
-- On TMul shift to state 88
-- On TMinus shift to state 89
-- On TInt shift to state 90
-- On TInc shift to state 91
-- On TIdent_TypedefConstr shift to state 106
-- On TIdent_Typedef shift to state 572
-- On TIdent_TemplatenameInQualifier_BeforeTypedef shift to state 21
-- On TIdent_TemplatenameInQualifier shift to state 12
-- On TIdent_Templatename shift to state 108
-- On TIdent_MacroString shift to state 110
-- On TIdent_MacroStmt shift to state 573
-- On TIdent_MacroIterator shift to state 574
-- On TIdent_MacroDecl shift to state 423
-- On TIdent_ClassnameInQualifier_BeforeTypedef shift to state 111
-- On TIdent_ClassnameInQualifier shift to state 112
-- On TIdent shift to state 578
-- On TFloat shift to state 116
-- On TEllipsis shift to state 580
-- On TDec shift to state 117
-- On TColCol_BeforeTypedef shift to state 118
-- On TColCol shift to state 128
-- On TChar shift to state 174
-- On TBang shift to state 175
-- On TAndLog shift to state 176
-- On TAnd shift to state 177
-- On LDots shift to state 178
-- On using_directive shift to state 581
-- On using_declaration shift to state 582
-- On unqualified_id shift to state 179
-- On unary_op shift to state 180
-- On unary_expr shift to state 181
-- On type_spec shift to state 314
-- On type_name shift to state 182
-- On type_cplusplus_id shift to state 183
-- On try_block shift to state 583
-- On template_id shift to state 120
-- On string_elem shift to state 184
-- On storage_class_spec shift to state 316
-- On statement shift to state 634
-- On simple_type_specifier shift to state 266
-- On simple_declaration shift to state 585
-- On shift_expr shift to state 217
-- On selection shift to state 586
-- On relational_expr shift to state 229
-- On qualified_id shift to state 191
-- On primary_expr shift to state 192
-- On primary_cplusplus_id shift to state 193
-- On postfix_expr shift to state 194
-- On pm_expr shift to state 219
-- On option(expr) shift to state 556
-- On option(TColCol) shift to state 221
-- On operator_function_id shift to state 168
-- On new_expr shift to state 233
-- On nested_name_specifier2 shift to state 207
-- On nested_name_specifier shift to state 165
-- On namespace_alias_definition shift to state 587
-- On multiplicative_expr shift to state 234
-- On logical_or_expr shift to state 246
-- On logical_and_expr shift to state 250
-- On literal shift to state 238
-- On lambda_introducer shift to state 239
-- On labeled shift to state 588
-- On jump shift to state 589
-- On iteration shift to state 591
-- On inclusive_or_expr shift to state 272
-- On ident shift to state 592
-- On id_expression shift to state 241
-- On function_spec shift to state 437
-- On function_definition shift to state 595
-- On expr_statement shift to state 596
-- On expr shift to state 597
-- On exclusive_or_expr shift to state 273
-- On equality_expr shift to state 256
-- On enum_specifier shift to state 209
-- On enum_name_or_typedef_name_or_simple_class_name shift to state 123
-- On enum_head shift to state 210
-- On elaborated_type_specifier shift to state 274
-- On delete_expr shift to state 242
-- On decltype_specifier shift to state 243
-- On declaration_statement shift to state 598
-- On decl_spec_seq shift to state 599
-- On decl_spec shift to state 473
-- On cv_qualif shift to state 475
-- On cpp_cast_operator shift to state 244
-- On conversion_function_id shift to state 169
-- On cond_expr shift to state 330
-- On compound shift to state 615
-- On class_specifier shift to state 277
-- On class_or_namespace_name_for_qualifier2 shift to state 124
-- On class_or_namespace_name_for_qualifier shift to state 170
-- On class_key shift to state 278
-- On class_head shift to state 301
-- On cast_operator_expr shift to state 261
-- On cast_expr shift to state 331
-- On cast_constructor_expr shift to state 263
-- On block_declaration shift to state 616
-- On basic_type_2 shift to state 264
-- On assign_expr shift to state 539
-- On asm_definition shift to state 617
-- On and_expr shift to state 334
-- On additive_expr shift to state 341
## Reductions:
-- On Tnew Tdelete
--   reduce production option(TColCol) ->
-- On TPtVirg
--   reduce production option(expr) ->

State 634:
## Known stack suffix:
## Tfor TOPar for_init_stmt expr_statement option(expr) TCPar statement
## LR(1) items:
iteration -> Tfor TOPar for_init_stmt expr_statement option(expr) TCPar statement . [ Twhile Twchar_t_Constr Twchar_t Tvolatile Tvoid Tvirtual Tusing Tunsigned Tunion Ttypeof Ttypename Ttypeid Ttypedef Ttry Ttrue Tthrow Tthread_local Tthis Tswitch Tstruct Tstatic_cast Tstatic Tsizeof Tsigned Tshort_Constr Tshort Treturn Trestrict Treinterpret_cast Tregister Toperator Tnullptr Tnull Tnew Tnamespace Tmutable Tlong_Constr Tlong Tint_Constr Tint Tinline Tif Tgoto Tfriend Tfor Tfloat_Constr Tfloat Tfalse Textern Tenum Telse Tdynamic_cast Tdouble_Constr Tdouble Tdo Tdelete Tdefault Tdecltype Tcontinue Tconstexpr Tconst_cast Tconst Tclass Tchar_Constr Tchar Tcase Tbreak Tbool_Constr Tbool Tauto Tasm TUndef TTilde TString TPtVirg TPlus TOPar TOCro_Lambda TOBrace TMul TMinus TInt TInclude TInc TIfdefelse TIfdefelif TIfdefVersion TIfdefMisc TIfdefBool TIfdef TIdent_TypedefConstr TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_MacroString TIdent_MacroStmt TIdent_MacroIterator TIdent_MacroDecl TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TIdent TFloat TEndif TEllipsis TDefine TDec TCppDirectiveOther TCommentNewline_DefineEndOfMacro TColCol_BeforeTypedef TColCol TChar TCBrace TBang TAndLog TAnd LDots EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production iteration -> Tfor TOPar for_init_stmt expr_statement option(expr) TCPar statement

State 635:
## Known stack suffix:
## expr_statement
## LR(1) items:
for_init_stmt -> expr_statement . [ Twchar_t_Constr Twchar_t Tvoid Tunsigned Ttypeof Ttypeid Ttrue Tthrow Tthis Tstatic_cast Tsizeof Tsigned Tshort_Constr Tshort Treinterpret_cast Toperator Tnullptr Tnull Tnew Tlong_Constr Tlong Tint_Constr Tint Tfloat_Constr Tfloat Tfalse Tdynamic_cast Tdouble_Constr Tdouble Tdelete Tdecltype Tconst_cast Tchar_Constr Tchar Tbool_Constr Tbool TTilde TString TPtVirg TPlus TOPar TOCro_Lambda TMul TMinus TInt TInc TIdent_TypedefConstr TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_MacroString TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TIdent TFloat TDec TColCol_BeforeTypedef TColCol TChar TBang TAndLog TAnd LDots ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production for_init_stmt -> expr_statement

State 636:
## Known stack suffix:
## decl_spec_seq
## LR(1) items:
for_range_decl -> decl_spec_seq . declarator [ TCol ]
simple_declaration -> decl_spec_seq . TPtVirg [ Twchar_t_Constr Twchar_t Tvoid Tunsigned Ttypeof Ttypeid Ttrue Tthrow Tthis Tstatic_cast Tsizeof Tsigned Tshort_Constr Tshort Treinterpret_cast Toperator Tnullptr Tnull Tnew Tlong_Constr Tlong Tint_Constr Tint Tfloat_Constr Tfloat Tfalse Tdynamic_cast Tdouble_Constr Tdouble Tdelete Tdecltype Tconst_cast Tchar_Constr Tchar Tbool_Constr Tbool TTilde TString TPtVirg TPlus TOPar TOCro_Lambda TMul TMinus TInt TInc TIdent_TypedefConstr TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_MacroString TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TIdent TFloat TDec TColCol_BeforeTypedef TColCol TChar TBang TAndLog TAnd LDots ]
simple_declaration -> decl_spec_seq . listc(init_declarator) TPtVirg [ Twchar_t_Constr Twchar_t Tvoid Tunsigned Ttypeof Ttypeid Ttrue Tthrow Tthis Tstatic_cast Tsizeof Tsigned Tshort_Constr Tshort Treinterpret_cast Toperator Tnullptr Tnull Tnew Tlong_Constr Tlong Tint_Constr Tint Tfloat_Constr Tfloat Tfalse Tdynamic_cast Tdouble_Constr Tdouble Tdelete Tdecltype Tconst_cast Tchar_Constr Tchar Tbool_Constr Tbool TTilde TString TPtVirg TPlus TOPar TOCro_Lambda TMul TMinus TInt TInc TIdent_TypedefConstr TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_MacroString TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TIdent TFloat TDec TColCol_BeforeTypedef TColCol TChar TBang TAndLog TAnd LDots ]
## Transitions:
-- On TPtVirg shift to state 600
-- On TOPar shift to state 521
-- On TMul shift to state 443
-- On TColCol shift to state 8
-- On TAndLog shift to state 444
-- On TAnd shift to state 445
-- On pointer shift to state 522
-- On option(TColCol) shift to state 456
-- On listc(init_declarator) shift to state 601
-- On init_declarator shift to state 611
-- On direct_d shift to state 498
-- On declaratori shift to state 605
-- On declarator_id shift to state 495
-- On declarator shift to state 637
## Reductions:
-- On Toperator TIdent_TemplatenameInQualifier TIdent_ClassnameInQualifier TIdent
--   reduce production option(TColCol) ->

State 637:
## Known stack suffix:
## decl_spec_seq declarator
## LR(1) items:
declaratori -> declarator . [ TPtVirg TOPar_CplusplusInit TEq TComma ]
declaratori -> declarator . gcc_asm_decl [ TPtVirg TOPar_CplusplusInit TEq TComma ]
for_range_decl -> decl_spec_seq declarator . [ TCol ]
## Transitions:
-- On Tasm shift to state 529
-- On gcc_asm_decl shift to state 534
## Reductions:
-- On TPtVirg TOPar_CplusplusInit TEq TComma
--   reduce production declaratori -> declarator
-- On TCol
--   reduce production for_range_decl -> decl_spec_seq declarator

State 638:
## Known stack suffix:
## Tif TOPar condition TCPar statement
## LR(1) items:
selection -> Tif TOPar condition TCPar statement . [ Twhile Twchar_t_Constr Twchar_t Tvolatile Tvoid Tvirtual Tusing Tunsigned Tunion Ttypeof Ttypename Ttypeid Ttypedef Ttry Ttrue Tthrow Tthread_local Tthis Tswitch Tstruct Tstatic_cast Tstatic Tsizeof Tsigned Tshort_Constr Tshort Treturn Trestrict Treinterpret_cast Tregister Toperator Tnullptr Tnull Tnew Tnamespace Tmutable Tlong_Constr Tlong Tint_Constr Tint Tinline Tif Tgoto Tfriend Tfor Tfloat_Constr Tfloat Tfalse Textern Tenum Telse Tdynamic_cast Tdouble_Constr Tdouble Tdo Tdelete Tdefault Tdecltype Tcontinue Tconstexpr Tconst_cast Tconst Tclass Tchar_Constr Tchar Tcase Tbreak Tbool_Constr Tbool Tauto Tasm TUndef TTilde TString TPtVirg TPlus TOPar TOCro_Lambda TOBrace TMul TMinus TInt TInclude TInc TIfdefelse TIfdefelif TIfdefVersion TIfdefMisc TIfdefBool TIfdef TIdent_TypedefConstr TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_MacroString TIdent_MacroStmt TIdent_MacroIterator TIdent_MacroDecl TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TIdent TFloat TEndif TEllipsis TDefine TDec TCppDirectiveOther TCommentNewline_DefineEndOfMacro TColCol_BeforeTypedef TColCol TChar TCBrace TBang TAndLog TAnd LDots EOF ]
selection -> Tif TOPar condition TCPar statement . Telse statement [ Twhile Twchar_t_Constr Twchar_t Tvolatile Tvoid Tvirtual Tusing Tunsigned Tunion Ttypeof Ttypename Ttypeid Ttypedef Ttry Ttrue Tthrow Tthread_local Tthis Tswitch Tstruct Tstatic_cast Tstatic Tsizeof Tsigned Tshort_Constr Tshort Treturn Trestrict Treinterpret_cast Tregister Toperator Tnullptr Tnull Tnew Tnamespace Tmutable Tlong_Constr Tlong Tint_Constr Tint Tinline Tif Tgoto Tfriend Tfor Tfloat_Constr Tfloat Tfalse Textern Tenum Telse Tdynamic_cast Tdouble_Constr Tdouble Tdo Tdelete Tdefault Tdecltype Tcontinue Tconstexpr Tconst_cast Tconst Tclass Tchar_Constr Tchar Tcase Tbreak Tbool_Constr Tbool Tauto Tasm TUndef TTilde TString TPtVirg TPlus TOPar TOCro_Lambda TOBrace TMul TMinus TInt TInclude TInc TIfdefelse TIfdefelif TIfdefVersion TIfdefMisc TIfdefBool TIfdef TIdent_TypedefConstr TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_MacroString TIdent_MacroStmt TIdent_MacroIterator TIdent_MacroDecl TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TIdent TFloat TEndif TEllipsis TDefine TDec TCppDirectiveOther TCommentNewline_DefineEndOfMacro TColCol_BeforeTypedef TColCol TChar TCBrace TBang TAndLog TAnd LDots EOF ]
## Transitions:
-- On Telse shift to state 639
## Reductions:
-- On Twhile Twchar_t_Constr Twchar_t Tvolatile Tvoid Tvirtual Tusing Tunsigned Tunion Ttypeof Ttypename Ttypeid Ttypedef Ttry Ttrue Tthrow Tthread_local Tthis Tswitch Tstruct Tstatic_cast Tstatic Tsizeof Tsigned Tshort_Constr Tshort Treturn Trestrict Treinterpret_cast Tregister Toperator Tnullptr Tnull Tnew Tnamespace Tmutable Tlong_Constr Tlong Tint_Constr Tint Tinline Tif Tgoto Tfriend Tfor Tfloat_Constr Tfloat Tfalse Textern Tenum Tdynamic_cast Tdouble_Constr Tdouble Tdo Tdelete Tdefault Tdecltype Tcontinue Tconstexpr Tconst_cast Tconst Tclass Tchar_Constr Tchar Tcase Tbreak Tbool_Constr Tbool Tauto Tasm TUndef TTilde TString TPtVirg TPlus TOPar TOCro_Lambda TOBrace TMul TMinus TInt TInclude TInc TIfdefelse TIfdefelif TIfdefVersion TIfdefMisc TIfdefBool TIfdef TIdent_TypedefConstr TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_MacroString TIdent_MacroStmt TIdent_MacroIterator TIdent_MacroDecl TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TIdent TFloat TEndif TEllipsis TDefine TDec TCppDirectiveOther TCommentNewline_DefineEndOfMacro TColCol_BeforeTypedef TColCol TChar TCBrace TBang TAndLog TAnd LDots EOF
--   reduce production selection -> Tif TOPar condition TCPar statement

State 639:
## Known stack suffix:
## Tif TOPar condition TCPar statement Telse
## LR(1) items:
selection -> Tif TOPar condition TCPar statement Telse . statement [ Twhile Twchar_t_Constr Twchar_t Tvolatile Tvoid Tvirtual Tusing Tunsigned Tunion Ttypeof Ttypename Ttypeid Ttypedef Ttry Ttrue Tthrow Tthread_local Tthis Tswitch Tstruct Tstatic_cast Tstatic Tsizeof Tsigned Tshort_Constr Tshort Treturn Trestrict Treinterpret_cast Tregister Toperator Tnullptr Tnull Tnew Tnamespace Tmutable Tlong_Constr Tlong Tint_Constr Tint Tinline Tif Tgoto Tfriend Tfor Tfloat_Constr Tfloat Tfalse Textern Tenum Telse Tdynamic_cast Tdouble_Constr Tdouble Tdo Tdelete Tdefault Tdecltype Tcontinue Tconstexpr Tconst_cast Tconst Tclass Tchar_Constr Tchar Tcase Tbreak Tbool_Constr Tbool Tauto Tasm TUndef TTilde TString TPtVirg TPlus TOPar TOCro_Lambda TOBrace TMul TMinus TInt TInclude TInc TIfdefelse TIfdefelif TIfdefVersion TIfdefMisc TIfdefBool TIfdef TIdent_TypedefConstr TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_MacroString TIdent_MacroStmt TIdent_MacroIterator TIdent_MacroDecl TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TIdent TFloat TEndif TEllipsis TDefine TDec TCppDirectiveOther TCommentNewline_DefineEndOfMacro TColCol_BeforeTypedef TColCol TChar TCBrace TBang TAndLog TAnd LDots EOF ]
## Transitions:
-- On Twhile shift to state 94
-- On Twchar_t_Constr shift to state 14
-- On Twchar_t shift to state 1
-- On Tvolatile shift to state 2
-- On Tvoid shift to state 3
-- On Tvirtual shift to state 4
-- On Tusing shift to state 5
-- On Tunsigned shift to state 15
-- On Tunion shift to state 16
-- On Ttypeof shift to state 17
-- On Ttypename shift to state 19
-- On Ttypeid shift to state 23
-- On Ttypedef shift to state 96
-- On Ttry shift to state 431
-- On Ttrue shift to state 25
-- On Tthrow shift to state 47
-- On Tthread_local shift to state 97
-- On Tthis shift to state 26
-- On Tswitch shift to state 515
-- On Tstruct shift to state 27
-- On Tstatic_cast shift to state 28
-- On Tstatic shift to state 323
-- On Tsizeof shift to state 29
-- On Tsigned shift to state 30
-- On Tshort_Constr shift to state 31
-- On Tshort shift to state 32
-- On Treturn shift to state 537
-- On Trestrict shift to state 65
-- On Treinterpret_cast shift to state 33
-- On Tregister shift to state 99
-- On Toperator shift to state 34
-- On Tnullptr shift to state 48
-- On Tnull shift to state 49
-- On Tnamespace shift to state 540
-- On Tmutable shift to state 100
-- On Tlong_Constr shift to state 50
-- On Tlong shift to state 38
-- On Tint_Constr shift to state 51
-- On Tint shift to state 39
-- On Tinline shift to state 101
-- On Tif shift to state 545
-- On Tgoto shift to state 549
-- On Tfriend shift to state 102
-- On Tfor shift to state 553
-- On Tfloat_Constr shift to state 52
-- On Tfloat shift to state 40
-- On Tfalse shift to state 53
-- On Textern shift to state 103
-- On Tenum shift to state 66
-- On Tdynamic_cast shift to state 54
-- On Tdouble_Constr shift to state 55
-- On Tdouble shift to state 41
-- On Tdo shift to state 562
-- On Tdefault shift to state 563
-- On Tdecltype shift to state 45
-- On Tcontinue shift to state 565
-- On Tconstexpr shift to state 104
-- On Tconst_cast shift to state 56
-- On Tconst shift to state 76
-- On Tclass shift to state 77
-- On Tchar_Constr shift to state 57
-- On Tchar shift to state 58
-- On Tcase shift to state 566
-- On Tbreak shift to state 571
-- On Tbool_Constr shift to state 59
-- On Tbool shift to state 60
-- On Tauto shift to state 105
-- On Tasm shift to state 366
-- On TTilde shift to state 61
-- On TString shift to state 62
-- On TPlus shift to state 63
-- On TOPar shift to state 64
-- On TOCro_Lambda shift to state 78
-- On TOBrace shift to state 93
-- On TMul shift to state 88
-- On TMinus shift to state 89
-- On TInt shift to state 90
-- On TInc shift to state 91
-- On TIdent_TypedefConstr shift to state 106
-- On TIdent_Typedef shift to state 572
-- On TIdent_TemplatenameInQualifier_BeforeTypedef shift to state 21
-- On TIdent_TemplatenameInQualifier shift to state 12
-- On TIdent_Templatename shift to state 108
-- On TIdent_MacroString shift to state 110
-- On TIdent_MacroStmt shift to state 573
-- On TIdent_MacroIterator shift to state 574
-- On TIdent_MacroDecl shift to state 423
-- On TIdent_ClassnameInQualifier_BeforeTypedef shift to state 111
-- On TIdent_ClassnameInQualifier shift to state 112
-- On TIdent shift to state 578
-- On TFloat shift to state 116
-- On TEllipsis shift to state 580
-- On TDec shift to state 117
-- On TColCol_BeforeTypedef shift to state 118
-- On TColCol shift to state 128
-- On TChar shift to state 174
-- On TBang shift to state 175
-- On TAndLog shift to state 176
-- On TAnd shift to state 177
-- On LDots shift to state 178
-- On using_directive shift to state 581
-- On using_declaration shift to state 582
-- On unqualified_id shift to state 179
-- On unary_op shift to state 180
-- On unary_expr shift to state 181
-- On type_spec shift to state 314
-- On type_name shift to state 182
-- On type_cplusplus_id shift to state 183
-- On try_block shift to state 583
-- On template_id shift to state 120
-- On string_elem shift to state 184
-- On storage_class_spec shift to state 316
-- On statement shift to state 640
-- On simple_type_specifier shift to state 266
-- On simple_declaration shift to state 585
-- On shift_expr shift to state 217
-- On selection shift to state 586
-- On relational_expr shift to state 229
-- On qualified_id shift to state 191
-- On primary_expr shift to state 192
-- On primary_cplusplus_id shift to state 193
-- On postfix_expr shift to state 194
-- On pm_expr shift to state 219
-- On option(expr) shift to state 556
-- On option(TColCol) shift to state 221
-- On operator_function_id shift to state 168
-- On new_expr shift to state 233
-- On nested_name_specifier2 shift to state 207
-- On nested_name_specifier shift to state 165
-- On namespace_alias_definition shift to state 587
-- On multiplicative_expr shift to state 234
-- On logical_or_expr shift to state 246
-- On logical_and_expr shift to state 250
-- On literal shift to state 238
-- On lambda_introducer shift to state 239
-- On labeled shift to state 588
-- On jump shift to state 589
-- On iteration shift to state 591
-- On inclusive_or_expr shift to state 272
-- On ident shift to state 592
-- On id_expression shift to state 241
-- On function_spec shift to state 437
-- On function_definition shift to state 595
-- On expr_statement shift to state 596
-- On expr shift to state 597
-- On exclusive_or_expr shift to state 273
-- On equality_expr shift to state 256
-- On enum_specifier shift to state 209
-- On enum_name_or_typedef_name_or_simple_class_name shift to state 123
-- On enum_head shift to state 210
-- On elaborated_type_specifier shift to state 274
-- On delete_expr shift to state 242
-- On decltype_specifier shift to state 243
-- On declaration_statement shift to state 598
-- On decl_spec_seq shift to state 599
-- On decl_spec shift to state 473
-- On cv_qualif shift to state 475
-- On cpp_cast_operator shift to state 244
-- On conversion_function_id shift to state 169
-- On cond_expr shift to state 330
-- On compound shift to state 615
-- On class_specifier shift to state 277
-- On class_or_namespace_name_for_qualifier2 shift to state 124
-- On class_or_namespace_name_for_qualifier shift to state 170
-- On class_key shift to state 278
-- On class_head shift to state 301
-- On cast_operator_expr shift to state 261
-- On cast_expr shift to state 331
-- On cast_constructor_expr shift to state 263
-- On block_declaration shift to state 616
-- On basic_type_2 shift to state 264
-- On assign_expr shift to state 539
-- On asm_definition shift to state 617
-- On and_expr shift to state 334
-- On additive_expr shift to state 341
## Reductions:
-- On Tnew Tdelete
--   reduce production option(TColCol) ->
-- On TPtVirg
--   reduce production option(expr) ->

State 640:
## Known stack suffix:
## Tif TOPar condition TCPar statement Telse statement
## LR(1) items:
selection -> Tif TOPar condition TCPar statement Telse statement . [ Twhile Twchar_t_Constr Twchar_t Tvolatile Tvoid Tvirtual Tusing Tunsigned Tunion Ttypeof Ttypename Ttypeid Ttypedef Ttry Ttrue Tthrow Tthread_local Tthis Tswitch Tstruct Tstatic_cast Tstatic Tsizeof Tsigned Tshort_Constr Tshort Treturn Trestrict Treinterpret_cast Tregister Toperator Tnullptr Tnull Tnew Tnamespace Tmutable Tlong_Constr Tlong Tint_Constr Tint Tinline Tif Tgoto Tfriend Tfor Tfloat_Constr Tfloat Tfalse Textern Tenum Telse Tdynamic_cast Tdouble_Constr Tdouble Tdo Tdelete Tdefault Tdecltype Tcontinue Tconstexpr Tconst_cast Tconst Tclass Tchar_Constr Tchar Tcase Tbreak Tbool_Constr Tbool Tauto Tasm TUndef TTilde TString TPtVirg TPlus TOPar TOCro_Lambda TOBrace TMul TMinus TInt TInclude TInc TIfdefelse TIfdefelif TIfdefVersion TIfdefMisc TIfdefBool TIfdef TIdent_TypedefConstr TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_MacroString TIdent_MacroStmt TIdent_MacroIterator TIdent_MacroDecl TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TIdent TFloat TEndif TEllipsis TDefine TDec TCppDirectiveOther TCommentNewline_DefineEndOfMacro TColCol_BeforeTypedef TColCol TChar TCBrace TBang TAndLog TAnd LDots EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production selection -> Tif TOPar condition TCPar statement Telse statement

State 641:
## Known stack suffix:
## Tswitch TOPar condition TCPar statement
## LR(1) items:
selection -> Tswitch TOPar condition TCPar statement . [ Twhile Twchar_t_Constr Twchar_t Tvolatile Tvoid Tvirtual Tusing Tunsigned Tunion Ttypeof Ttypename Ttypeid Ttypedef Ttry Ttrue Tthrow Tthread_local Tthis Tswitch Tstruct Tstatic_cast Tstatic Tsizeof Tsigned Tshort_Constr Tshort Treturn Trestrict Treinterpret_cast Tregister Toperator Tnullptr Tnull Tnew Tnamespace Tmutable Tlong_Constr Tlong Tint_Constr Tint Tinline Tif Tgoto Tfriend Tfor Tfloat_Constr Tfloat Tfalse Textern Tenum Telse Tdynamic_cast Tdouble_Constr Tdouble Tdo Tdelete Tdefault Tdecltype Tcontinue Tconstexpr Tconst_cast Tconst Tclass Tchar_Constr Tchar Tcase Tbreak Tbool_Constr Tbool Tauto Tasm TUndef TTilde TString TPtVirg TPlus TOPar TOCro_Lambda TOBrace TMul TMinus TInt TInclude TInc TIfdefelse TIfdefelif TIfdefVersion TIfdefMisc TIfdefBool TIfdef TIdent_TypedefConstr TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_MacroString TIdent_MacroStmt TIdent_MacroIterator TIdent_MacroDecl TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TIdent TFloat TEndif TEllipsis TDefine TDec TCppDirectiveOther TCommentNewline_DefineEndOfMacro TColCol_BeforeTypedef TColCol TChar TCBrace TBang TAndLog TAnd LDots EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production selection -> Tswitch TOPar condition TCPar statement

State 642:
## Known stack suffix:
## Tif
## LR(1) items:
define_val -> Tif . TOPar condition TCPar id_expression [ TCommentNewline_DefineEndOfMacro ]
selection -> Tif . TOPar condition TCPar statement [ TCommentNewline_DefineEndOfMacro ]
selection -> Tif . TOPar condition TCPar statement Telse statement [ TCommentNewline_DefineEndOfMacro ]
## Transitions:
-- On TOPar shift to state 643
## Reductions:

State 643:
## Known stack suffix:
## Tif TOPar
## LR(1) items:
define_val -> Tif TOPar . condition TCPar id_expression [ TCommentNewline_DefineEndOfMacro ]
selection -> Tif TOPar . condition TCPar statement [ TCommentNewline_DefineEndOfMacro ]
selection -> Tif TOPar . condition TCPar statement Telse statement [ TCommentNewline_DefineEndOfMacro ]
## Transitions:
-- On Twchar_t_Constr shift to state 14
-- On Twchar_t shift to state 1
-- On Tvolatile shift to state 2
-- On Tvoid shift to state 3
-- On Tvirtual shift to state 4
-- On Tunsigned shift to state 15
-- On Tunion shift to state 16
-- On Ttypeof shift to state 17
-- On Ttypename shift to state 19
-- On Ttypeid shift to state 23
-- On Ttypedef shift to state 96
-- On Ttrue shift to state 25
-- On Tthrow shift to state 47
-- On Tthread_local shift to state 97
-- On Tthis shift to state 26
-- On Tstruct shift to state 27
-- On Tstatic_cast shift to state 28
-- On Tstatic shift to state 98
-- On Tsizeof shift to state 29
-- On Tsigned shift to state 30
-- On Tshort_Constr shift to state 31
-- On Tshort shift to state 32
-- On Trestrict shift to state 65
-- On Treinterpret_cast shift to state 33
-- On Tregister shift to state 99
-- On Toperator shift to state 34
-- On Tnullptr shift to state 48
-- On Tnull shift to state 49
-- On Tmutable shift to state 100
-- On Tlong_Constr shift to state 50
-- On Tlong shift to state 38
-- On Tint_Constr shift to state 51
-- On Tint shift to state 39
-- On Tinline shift to state 101
-- On Tfriend shift to state 102
-- On Tfloat_Constr shift to state 52
-- On Tfloat shift to state 40
-- On Tfalse shift to state 53
-- On Textern shift to state 103
-- On Tenum shift to state 66
-- On Tdynamic_cast shift to state 54
-- On Tdouble_Constr shift to state 55
-- On Tdouble shift to state 41
-- On Tdecltype shift to state 45
-- On Tconstexpr shift to state 104
-- On Tconst_cast shift to state 56
-- On Tconst shift to state 76
-- On Tclass shift to state 77
-- On Tchar_Constr shift to state 57
-- On Tchar shift to state 58
-- On Tbool_Constr shift to state 59
-- On Tbool shift to state 60
-- On Tauto shift to state 105
-- On TTilde shift to state 61
-- On TString shift to state 62
-- On TPlus shift to state 63
-- On TOPar shift to state 64
-- On TOCro_Lambda shift to state 78
-- On TMul shift to state 88
-- On TMinus shift to state 89
-- On TInt shift to state 90
-- On TInc shift to state 91
-- On TIdent_TypedefConstr shift to state 106
-- On TIdent_Typedef shift to state 20
-- On TIdent_TemplatenameInQualifier_BeforeTypedef shift to state 21
-- On TIdent_TemplatenameInQualifier shift to state 12
-- On TIdent_Templatename shift to state 108
-- On TIdent_MacroString shift to state 110
-- On TIdent_ClassnameInQualifier_BeforeTypedef shift to state 111
-- On TIdent_ClassnameInQualifier shift to state 112
-- On TIdent shift to state 113
-- On TFloat shift to state 116
-- On TDec shift to state 117
-- On TColCol_BeforeTypedef shift to state 118
-- On TColCol shift to state 128
-- On TChar shift to state 174
-- On TBang shift to state 175
-- On TAndLog shift to state 176
-- On TAnd shift to state 177
-- On LDots shift to state 178
-- On unqualified_id shift to state 179
-- On unary_op shift to state 180
-- On unary_expr shift to state 181
-- On type_spec shift to state 314
-- On type_name shift to state 182
-- On type_cplusplus_id shift to state 183
-- On template_id shift to state 120
-- On string_elem shift to state 184
-- On storage_class_spec shift to state 316
-- On simple_type_specifier shift to state 266
-- On shift_expr shift to state 217
-- On relational_expr shift to state 229
-- On qualified_id shift to state 191
-- On primary_expr shift to state 192
-- On primary_cplusplus_id shift to state 193
-- On postfix_expr shift to state 194
-- On pm_expr shift to state 219
-- On option(TColCol) shift to state 221
-- On operator_function_id shift to state 168
-- On new_expr shift to state 233
-- On nested_name_specifier2 shift to state 207
-- On nested_name_specifier shift to state 165
-- On multiplicative_expr shift to state 234
-- On logical_or_expr shift to state 246
-- On logical_and_expr shift to state 250
-- On literal shift to state 238
-- On lambda_introducer shift to state 239
-- On inclusive_or_expr shift to state 272
-- On id_expression shift to state 241
-- On function_spec shift to state 437
-- On expr shift to state 517
-- On exclusive_or_expr shift to state 273
-- On equality_expr shift to state 256
-- On enum_specifier shift to state 209
-- On enum_name_or_typedef_name_or_simple_class_name shift to state 123
-- On enum_head shift to state 210
-- On elaborated_type_specifier shift to state 274
-- On delete_expr shift to state 242
-- On decltype_specifier shift to state 243
-- On decl_spec_seq shift to state 520
-- On decl_spec shift to state 473
-- On cv_qualif shift to state 475
-- On cpp_cast_operator shift to state 244
-- On conversion_function_id shift to state 169
-- On condition shift to state 644
-- On cond_expr shift to state 330
-- On class_specifier shift to state 277
-- On class_or_namespace_name_for_qualifier2 shift to state 124
-- On class_or_namespace_name_for_qualifier shift to state 170
-- On class_key shift to state 278
-- On class_head shift to state 301
-- On cast_operator_expr shift to state 261
-- On cast_expr shift to state 331
-- On cast_constructor_expr shift to state 263
-- On basic_type_2 shift to state 264
-- On assign_expr shift to state 539
-- On and_expr shift to state 334
-- On additive_expr shift to state 341
## Reductions:
-- On Tnew Tdelete
--   reduce production option(TColCol) ->

State 644:
## Known stack suffix:
## Tif TOPar condition
## LR(1) items:
define_val -> Tif TOPar condition . TCPar id_expression [ TCommentNewline_DefineEndOfMacro ]
selection -> Tif TOPar condition . TCPar statement [ TCommentNewline_DefineEndOfMacro ]
selection -> Tif TOPar condition . TCPar statement Telse statement [ TCommentNewline_DefineEndOfMacro ]
## Transitions:
-- On TCPar shift to state 645
## Reductions:

State 645:
## Known stack suffix:
## Tif TOPar condition TCPar
## LR(1) items:
define_val -> Tif TOPar condition TCPar . id_expression [ TCommentNewline_DefineEndOfMacro ]
selection -> Tif TOPar condition TCPar . statement [ TCommentNewline_DefineEndOfMacro ]
selection -> Tif TOPar condition TCPar . statement Telse statement [ TCommentNewline_DefineEndOfMacro ]
## Transitions:
-- On Twhile shift to state 94
-- On Twchar_t_Constr shift to state 14
-- On Twchar_t shift to state 1
-- On Tvolatile shift to state 2
-- On Tvoid shift to state 3
-- On Tvirtual shift to state 4
-- On Tusing shift to state 5
-- On Tunsigned shift to state 15
-- On Tunion shift to state 16
-- On Ttypeof shift to state 17
-- On Ttypename shift to state 19
-- On Ttypeid shift to state 23
-- On Ttypedef shift to state 96
-- On Ttry shift to state 431
-- On Ttrue shift to state 25
-- On Tthrow shift to state 47
-- On Tthread_local shift to state 97
-- On Tthis shift to state 26
-- On Tswitch shift to state 515
-- On Tstruct shift to state 27
-- On Tstatic_cast shift to state 28
-- On Tstatic shift to state 323
-- On Tsizeof shift to state 29
-- On Tsigned shift to state 30
-- On Tshort_Constr shift to state 31
-- On Tshort shift to state 32
-- On Treturn shift to state 537
-- On Trestrict shift to state 65
-- On Treinterpret_cast shift to state 33
-- On Tregister shift to state 99
-- On Toperator shift to state 34
-- On Tnullptr shift to state 48
-- On Tnull shift to state 49
-- On Tnamespace shift to state 540
-- On Tmutable shift to state 100
-- On Tlong_Constr shift to state 50
-- On Tlong shift to state 38
-- On Tint_Constr shift to state 51
-- On Tint shift to state 39
-- On Tinline shift to state 101
-- On Tif shift to state 545
-- On Tgoto shift to state 549
-- On Tfriend shift to state 102
-- On Tfor shift to state 553
-- On Tfloat_Constr shift to state 52
-- On Tfloat shift to state 40
-- On Tfalse shift to state 53
-- On Textern shift to state 103
-- On Tenum shift to state 66
-- On Tdynamic_cast shift to state 54
-- On Tdouble_Constr shift to state 55
-- On Tdouble shift to state 41
-- On Tdo shift to state 562
-- On Tdefault shift to state 563
-- On Tdecltype shift to state 45
-- On Tcontinue shift to state 565
-- On Tconstexpr shift to state 104
-- On Tconst_cast shift to state 56
-- On Tconst shift to state 76
-- On Tclass shift to state 77
-- On Tchar_Constr shift to state 57
-- On Tchar shift to state 58
-- On Tcase shift to state 566
-- On Tbreak shift to state 571
-- On Tbool_Constr shift to state 59
-- On Tbool shift to state 60
-- On Tauto shift to state 105
-- On Tasm shift to state 366
-- On TTilde shift to state 61
-- On TString shift to state 62
-- On TPlus shift to state 63
-- On TOPar shift to state 64
-- On TOCro_Lambda shift to state 78
-- On TOBrace shift to state 93
-- On TMul shift to state 88
-- On TMinus shift to state 89
-- On TInt shift to state 90
-- On TInc shift to state 91
-- On TIdent_TypedefConstr shift to state 106
-- On TIdent_Typedef shift to state 572
-- On TIdent_TemplatenameInQualifier_BeforeTypedef shift to state 21
-- On TIdent_TemplatenameInQualifier shift to state 12
-- On TIdent_Templatename shift to state 108
-- On TIdent_MacroString shift to state 110
-- On TIdent_MacroStmt shift to state 573
-- On TIdent_MacroIterator shift to state 574
-- On TIdent_MacroDecl shift to state 423
-- On TIdent_ClassnameInQualifier_BeforeTypedef shift to state 111
-- On TIdent_ClassnameInQualifier shift to state 112
-- On TIdent shift to state 578
-- On TFloat shift to state 116
-- On TEllipsis shift to state 580
-- On TDec shift to state 117
-- On TColCol_BeforeTypedef shift to state 118
-- On TColCol shift to state 128
-- On TChar shift to state 174
-- On TBang shift to state 175
-- On TAndLog shift to state 176
-- On TAnd shift to state 177
-- On LDots shift to state 178
-- On using_directive shift to state 581
-- On using_declaration shift to state 582
-- On unqualified_id shift to state 179
-- On unary_op shift to state 180
-- On unary_expr shift to state 181
-- On type_spec shift to state 314
-- On type_name shift to state 182
-- On type_cplusplus_id shift to state 183
-- On try_block shift to state 583
-- On template_id shift to state 120
-- On string_elem shift to state 184
-- On storage_class_spec shift to state 316
-- On statement shift to state 638
-- On simple_type_specifier shift to state 266
-- On simple_declaration shift to state 585
-- On shift_expr shift to state 217
-- On selection shift to state 586
-- On relational_expr shift to state 229
-- On qualified_id shift to state 191
-- On primary_expr shift to state 192
-- On primary_cplusplus_id shift to state 193
-- On postfix_expr shift to state 194
-- On pm_expr shift to state 219
-- On option(expr) shift to state 556
-- On option(TColCol) shift to state 221
-- On operator_function_id shift to state 168
-- On new_expr shift to state 233
-- On nested_name_specifier2 shift to state 207
-- On nested_name_specifier shift to state 165
-- On namespace_alias_definition shift to state 587
-- On multiplicative_expr shift to state 234
-- On logical_or_expr shift to state 246
-- On logical_and_expr shift to state 250
-- On literal shift to state 238
-- On lambda_introducer shift to state 239
-- On labeled shift to state 588
-- On jump shift to state 589
-- On iteration shift to state 591
-- On inclusive_or_expr shift to state 272
-- On ident shift to state 592
-- On id_expression shift to state 646
-- On function_spec shift to state 437
-- On function_definition shift to state 595
-- On expr_statement shift to state 596
-- On expr shift to state 597
-- On exclusive_or_expr shift to state 273
-- On equality_expr shift to state 256
-- On enum_specifier shift to state 209
-- On enum_name_or_typedef_name_or_simple_class_name shift to state 123
-- On enum_head shift to state 210
-- On elaborated_type_specifier shift to state 274
-- On delete_expr shift to state 242
-- On decltype_specifier shift to state 243
-- On declaration_statement shift to state 598
-- On decl_spec_seq shift to state 599
-- On decl_spec shift to state 473
-- On cv_qualif shift to state 475
-- On cpp_cast_operator shift to state 244
-- On conversion_function_id shift to state 169
-- On cond_expr shift to state 330
-- On compound shift to state 615
-- On class_specifier shift to state 277
-- On class_or_namespace_name_for_qualifier2 shift to state 124
-- On class_or_namespace_name_for_qualifier shift to state 170
-- On class_key shift to state 278
-- On class_head shift to state 301
-- On cast_operator_expr shift to state 261
-- On cast_expr shift to state 331
-- On cast_constructor_expr shift to state 263
-- On block_declaration shift to state 616
-- On basic_type_2 shift to state 264
-- On assign_expr shift to state 539
-- On asm_definition shift to state 617
-- On and_expr shift to state 334
-- On additive_expr shift to state 341
## Reductions:
-- On Tnew Tdelete
--   reduce production option(TColCol) ->
-- On TPtVirg
--   reduce production option(expr) ->

State 646:
## Known stack suffix:
## Tif TOPar condition TCPar id_expression
## LR(1) items:
define_val -> Tif TOPar condition TCPar id_expression . [ TCommentNewline_DefineEndOfMacro ]
primary_cplusplus_id -> id_expression . [ TXor TWhy TSupEq TSup TShr TShl TPtrOpStar TPtrOp TPtVirg TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMod TMinus TInfEq TInf TInc TEqEq TEq TDotStar TDot TDiv TDec TComma TAssign TAndLog TAnd ]
## Transitions:
## Reductions:
-- On TCommentNewline_DefineEndOfMacro
--   reduce production define_val -> Tif TOPar condition TCPar id_expression
-- On TXor TWhy TSupEq TSup TShr TShl TPtrOpStar TPtrOp TPtVirg TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMod TMinus TInfEq TInf TInc TEqEq TEq TDotStar TDot TDiv TDec TComma TAssign TAndLog TAnd
--   reduce production primary_cplusplus_id -> id_expression

State 647:
## Known stack suffix:
## Tdo
## LR(1) items:
define_val -> Tdo . statement Twhile TOPar expr TCPar [ TCommentNewline_DefineEndOfMacro ]
iteration -> Tdo . statement Twhile TOPar expr TCPar TPtVirg [ TCommentNewline_DefineEndOfMacro ]
## Transitions:
-- On Twhile shift to state 94
-- On Twchar_t_Constr shift to state 14
-- On Twchar_t shift to state 1
-- On Tvolatile shift to state 2
-- On Tvoid shift to state 3
-- On Tvirtual shift to state 4
-- On Tusing shift to state 5
-- On Tunsigned shift to state 15
-- On Tunion shift to state 16
-- On Ttypeof shift to state 17
-- On Ttypename shift to state 19
-- On Ttypeid shift to state 23
-- On Ttypedef shift to state 96
-- On Ttry shift to state 431
-- On Ttrue shift to state 25
-- On Tthrow shift to state 47
-- On Tthread_local shift to state 97
-- On Tthis shift to state 26
-- On Tswitch shift to state 515
-- On Tstruct shift to state 27
-- On Tstatic_cast shift to state 28
-- On Tstatic shift to state 323
-- On Tsizeof shift to state 29
-- On Tsigned shift to state 30
-- On Tshort_Constr shift to state 31
-- On Tshort shift to state 32
-- On Treturn shift to state 537
-- On Trestrict shift to state 65
-- On Treinterpret_cast shift to state 33
-- On Tregister shift to state 99
-- On Toperator shift to state 34
-- On Tnullptr shift to state 48
-- On Tnull shift to state 49
-- On Tnamespace shift to state 540
-- On Tmutable shift to state 100
-- On Tlong_Constr shift to state 50
-- On Tlong shift to state 38
-- On Tint_Constr shift to state 51
-- On Tint shift to state 39
-- On Tinline shift to state 101
-- On Tif shift to state 545
-- On Tgoto shift to state 549
-- On Tfriend shift to state 102
-- On Tfor shift to state 553
-- On Tfloat_Constr shift to state 52
-- On Tfloat shift to state 40
-- On Tfalse shift to state 53
-- On Textern shift to state 103
-- On Tenum shift to state 66
-- On Tdynamic_cast shift to state 54
-- On Tdouble_Constr shift to state 55
-- On Tdouble shift to state 41
-- On Tdo shift to state 562
-- On Tdefault shift to state 563
-- On Tdecltype shift to state 45
-- On Tcontinue shift to state 565
-- On Tconstexpr shift to state 104
-- On Tconst_cast shift to state 56
-- On Tconst shift to state 76
-- On Tclass shift to state 77
-- On Tchar_Constr shift to state 57
-- On Tchar shift to state 58
-- On Tcase shift to state 566
-- On Tbreak shift to state 571
-- On Tbool_Constr shift to state 59
-- On Tbool shift to state 60
-- On Tauto shift to state 105
-- On Tasm shift to state 366
-- On TTilde shift to state 61
-- On TString shift to state 62
-- On TPlus shift to state 63
-- On TOPar shift to state 64
-- On TOCro_Lambda shift to state 78
-- On TOBrace shift to state 93
-- On TMul shift to state 88
-- On TMinus shift to state 89
-- On TInt shift to state 90
-- On TInc shift to state 91
-- On TIdent_TypedefConstr shift to state 106
-- On TIdent_Typedef shift to state 572
-- On TIdent_TemplatenameInQualifier_BeforeTypedef shift to state 21
-- On TIdent_TemplatenameInQualifier shift to state 12
-- On TIdent_Templatename shift to state 108
-- On TIdent_MacroString shift to state 110
-- On TIdent_MacroStmt shift to state 573
-- On TIdent_MacroIterator shift to state 574
-- On TIdent_MacroDecl shift to state 423
-- On TIdent_ClassnameInQualifier_BeforeTypedef shift to state 111
-- On TIdent_ClassnameInQualifier shift to state 112
-- On TIdent shift to state 578
-- On TFloat shift to state 116
-- On TEllipsis shift to state 580
-- On TDec shift to state 117
-- On TColCol_BeforeTypedef shift to state 118
-- On TColCol shift to state 128
-- On TChar shift to state 174
-- On TBang shift to state 175
-- On TAndLog shift to state 176
-- On TAnd shift to state 177
-- On LDots shift to state 178
-- On using_directive shift to state 581
-- On using_declaration shift to state 582
-- On unqualified_id shift to state 179
-- On unary_op shift to state 180
-- On unary_expr shift to state 181
-- On type_spec shift to state 314
-- On type_name shift to state 182
-- On type_cplusplus_id shift to state 183
-- On try_block shift to state 583
-- On template_id shift to state 120
-- On string_elem shift to state 184
-- On storage_class_spec shift to state 316
-- On statement shift to state 648
-- On simple_type_specifier shift to state 266
-- On simple_declaration shift to state 585
-- On shift_expr shift to state 217
-- On selection shift to state 586
-- On relational_expr shift to state 229
-- On qualified_id shift to state 191
-- On primary_expr shift to state 192
-- On primary_cplusplus_id shift to state 193
-- On postfix_expr shift to state 194
-- On pm_expr shift to state 219
-- On option(expr) shift to state 556
-- On option(TColCol) shift to state 221
-- On operator_function_id shift to state 168
-- On new_expr shift to state 233
-- On nested_name_specifier2 shift to state 207
-- On nested_name_specifier shift to state 165
-- On namespace_alias_definition shift to state 587
-- On multiplicative_expr shift to state 234
-- On logical_or_expr shift to state 246
-- On logical_and_expr shift to state 250
-- On literal shift to state 238
-- On lambda_introducer shift to state 239
-- On labeled shift to state 588
-- On jump shift to state 589
-- On iteration shift to state 591
-- On inclusive_or_expr shift to state 272
-- On ident shift to state 592
-- On id_expression shift to state 241
-- On function_spec shift to state 437
-- On function_definition shift to state 595
-- On expr_statement shift to state 596
-- On expr shift to state 597
-- On exclusive_or_expr shift to state 273
-- On equality_expr shift to state 256
-- On enum_specifier shift to state 209
-- On enum_name_or_typedef_name_or_simple_class_name shift to state 123
-- On enum_head shift to state 210
-- On elaborated_type_specifier shift to state 274
-- On delete_expr shift to state 242
-- On decltype_specifier shift to state 243
-- On declaration_statement shift to state 598
-- On decl_spec_seq shift to state 599
-- On decl_spec shift to state 473
-- On cv_qualif shift to state 475
-- On cpp_cast_operator shift to state 244
-- On conversion_function_id shift to state 169
-- On cond_expr shift to state 330
-- On compound shift to state 615
-- On class_specifier shift to state 277
-- On class_or_namespace_name_for_qualifier2 shift to state 124
-- On class_or_namespace_name_for_qualifier shift to state 170
-- On class_key shift to state 278
-- On class_head shift to state 301
-- On cast_operator_expr shift to state 261
-- On cast_expr shift to state 331
-- On cast_constructor_expr shift to state 263
-- On block_declaration shift to state 616
-- On basic_type_2 shift to state 264
-- On assign_expr shift to state 539
-- On asm_definition shift to state 617
-- On and_expr shift to state 334
-- On additive_expr shift to state 341
## Reductions:
-- On Tnew Tdelete
--   reduce production option(TColCol) ->
-- On TPtVirg
--   reduce production option(expr) ->

State 648:
## Known stack suffix:
## Tdo statement
## LR(1) items:
define_val -> Tdo statement . Twhile TOPar expr TCPar [ TCommentNewline_DefineEndOfMacro ]
iteration -> Tdo statement . Twhile TOPar expr TCPar TPtVirg [ TCommentNewline_DefineEndOfMacro ]
## Transitions:
-- On Twhile shift to state 649
## Reductions:

State 649:
## Known stack suffix:
## Tdo statement Twhile
## LR(1) items:
define_val -> Tdo statement Twhile . TOPar expr TCPar [ TCommentNewline_DefineEndOfMacro ]
iteration -> Tdo statement Twhile . TOPar expr TCPar TPtVirg [ TCommentNewline_DefineEndOfMacro ]
## Transitions:
-- On TOPar shift to state 650
## Reductions:

State 650:
## Known stack suffix:
## Tdo statement Twhile TOPar
## LR(1) items:
define_val -> Tdo statement Twhile TOPar . expr TCPar [ TCommentNewline_DefineEndOfMacro ]
iteration -> Tdo statement Twhile TOPar . expr TCPar TPtVirg [ TCommentNewline_DefineEndOfMacro ]
## Transitions:
-- On Twchar_t_Constr shift to state 14
-- On Twchar_t shift to state 1
-- On Tvoid shift to state 3
-- On Tunsigned shift to state 15
-- On Ttypeof shift to state 17
-- On Ttypeid shift to state 23
-- On Ttrue shift to state 25
-- On Tthrow shift to state 47
-- On Tthis shift to state 26
-- On Tstatic_cast shift to state 28
-- On Tsizeof shift to state 29
-- On Tsigned shift to state 30
-- On Tshort_Constr shift to state 31
-- On Tshort shift to state 32
-- On Treinterpret_cast shift to state 33
-- On Toperator shift to state 34
-- On Tnullptr shift to state 48
-- On Tnull shift to state 49
-- On Tlong_Constr shift to state 50
-- On Tlong shift to state 38
-- On Tint_Constr shift to state 51
-- On Tint shift to state 39
-- On Tfloat_Constr shift to state 52
-- On Tfloat shift to state 40
-- On Tfalse shift to state 53
-- On Tdynamic_cast shift to state 54
-- On Tdouble_Constr shift to state 55
-- On Tdouble shift to state 41
-- On Tdecltype shift to state 45
-- On Tconst_cast shift to state 56
-- On Tchar_Constr shift to state 57
-- On Tchar shift to state 58
-- On Tbool_Constr shift to state 59
-- On Tbool shift to state 60
-- On TTilde shift to state 61
-- On TString shift to state 62
-- On TPlus shift to state 63
-- On TOPar shift to state 64
-- On TOCro_Lambda shift to state 78
-- On TMul shift to state 88
-- On TMinus shift to state 89
-- On TInt shift to state 90
-- On TInc shift to state 91
-- On TIdent_TypedefConstr shift to state 106
-- On TIdent_Typedef shift to state 20
-- On TIdent_TemplatenameInQualifier_BeforeTypedef shift to state 21
-- On TIdent_TemplatenameInQualifier shift to state 12
-- On TIdent_Templatename shift to state 108
-- On TIdent_MacroString shift to state 110
-- On TIdent_ClassnameInQualifier_BeforeTypedef shift to state 111
-- On TIdent_ClassnameInQualifier shift to state 112
-- On TIdent shift to state 113
-- On TFloat shift to state 116
-- On TDec shift to state 117
-- On TColCol_BeforeTypedef shift to state 118
-- On TColCol shift to state 128
-- On TChar shift to state 174
-- On TBang shift to state 175
-- On TAndLog shift to state 176
-- On TAnd shift to state 177
-- On LDots shift to state 178
-- On unqualified_id shift to state 179
-- On unary_op shift to state 180
-- On unary_expr shift to state 181
-- On type_name shift to state 182
-- On type_cplusplus_id shift to state 183
-- On template_id shift to state 120
-- On string_elem shift to state 184
-- On simple_type_specifier shift to state 189
-- On shift_expr shift to state 217
-- On relational_expr shift to state 229
-- On qualified_id shift to state 191
-- On primary_expr shift to state 192
-- On primary_cplusplus_id shift to state 193
-- On postfix_expr shift to state 194
-- On pm_expr shift to state 219
-- On option(TColCol) shift to state 221
-- On operator_function_id shift to state 168
-- On new_expr shift to state 233
-- On nested_name_specifier2 shift to state 207
-- On nested_name_specifier shift to state 165
-- On multiplicative_expr shift to state 234
-- On logical_or_expr shift to state 246
-- On logical_and_expr shift to state 250
-- On literal shift to state 238
-- On lambda_introducer shift to state 239
-- On inclusive_or_expr shift to state 272
-- On id_expression shift to state 241
-- On expr shift to state 651
-- On exclusive_or_expr shift to state 273
-- On equality_expr shift to state 256
-- On enum_name_or_typedef_name_or_simple_class_name shift to state 123
-- On delete_expr shift to state 242
-- On decltype_specifier shift to state 243
-- On cpp_cast_operator shift to state 244
-- On conversion_function_id shift to state 169
-- On cond_expr shift to state 330
-- On class_or_namespace_name_for_qualifier2 shift to state 124
-- On class_or_namespace_name_for_qualifier shift to state 170
-- On cast_operator_expr shift to state 261
-- On cast_expr shift to state 331
-- On cast_constructor_expr shift to state 263
-- On basic_type_2 shift to state 264
-- On assign_expr shift to state 539
-- On and_expr shift to state 334
-- On additive_expr shift to state 341
## Reductions:
-- On Tnew Tdelete
--   reduce production option(TColCol) ->

State 651:
## Known stack suffix:
## Tdo statement Twhile TOPar expr
## LR(1) items:
define_val -> Tdo statement Twhile TOPar expr . TCPar [ TCommentNewline_DefineEndOfMacro ]
expr -> expr . TComma assign_expr [ TComma TCPar ]
iteration -> Tdo statement Twhile TOPar expr . TCPar TPtVirg [ TCommentNewline_DefineEndOfMacro ]
## Transitions:
-- On TComma shift to state 518
-- On TCPar shift to state 652
## Reductions:

State 652:
## Known stack suffix:
## Tdo statement Twhile TOPar expr TCPar
## LR(1) items:
define_val -> Tdo statement Twhile TOPar expr TCPar . [ TCommentNewline_DefineEndOfMacro ]
iteration -> Tdo statement Twhile TOPar expr TCPar . TPtVirg [ TCommentNewline_DefineEndOfMacro ]
## Transitions:
-- On TPtVirg shift to state 627
## Reductions:
-- On TCommentNewline_DefineEndOfMacro
--   reduce production define_val -> Tdo statement Twhile TOPar expr TCPar

State 653:
## Known stack suffix:
## TDefine TIdent_Define TOPar_Define
## LR(1) items:
cpp_directive -> TDefine TIdent_Define TOPar_Define . optl(listc(param_define)) TCPar define_val TCommentNewline_DefineEndOfMacro [ Twhile Twchar_t_Constr Twchar_t Tvolatile Tvoid Tvirtual Tusing Tunsigned Tunion Ttypeof Ttypename Ttypeid Ttypedef Ttry Ttrue Tthrow Tthread_local Tthis Ttemplate Tswitch Tstruct Tstatic_cast Tstatic Tsizeof Tsigned Tshort_Constr Tshort Treturn Trestrict Treinterpret_cast Tregister Toperator Tnullptr Tnull Tnew Tnamespace Tmutable Tlong_Constr Tlong Tint_Constr Tint Tinline Tif Tgoto Tfriend Tfor Tfloat_Constr Tfloat Tfalse Textern Tenum Tdynamic_cast Tdouble_Constr Tdouble Tdo Tdelete Tdefault Tdecltype Tcontinue Tconstexpr Tconst_cast Tconst Tclass Tchar_Constr Tchar Tcase Tbreak Tbool_Constr Tbool Tauto Tasm TUndef TTilde TString TPtVirg TPlus TOPar TOCro_Lambda TOBrace TMul TMinus TInt TInclude TInc TIfdefelse TIfdefelif TIfdefVersion TIfdefMisc TIfdefBool TIfdef TIdent_TypedefConstr TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_MacroString TIdent_MacroStmt TIdent_MacroIterator TIdent_MacroDecl TIdent_Constructor TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TIdent TFloat TEndif TEllipsis TDefine TDec TCppDirectiveOther TColCol_BeforeTypedef TColCol TChar TCBrace TBang TAndLog TAnd LDots EOF ]
## Transitions:
-- On Tregister shift to state 654
-- On Tnew shift to state 655
-- On TIdent_Typedef shift to state 68
-- On TIdent shift to state 69
-- On TEllipsis shift to state 656
-- On TDefParamVariadic shift to state 657
-- On param_define shift to state 658
-- On optl(listc(param_define)) shift to state 659
-- On listc(param_define) shift to state 685
-- On ident shift to state 688
## Reductions:
-- On TCPar
--   reduce production optl(listc(param_define)) ->

State 654:
## Known stack suffix:
## Tregister
## LR(1) items:
param_define -> Tregister . [ TComma TCPar ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production param_define -> Tregister

State 655:
## Known stack suffix:
## Tnew
## LR(1) items:
param_define -> Tnew . [ TComma TCPar ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production param_define -> Tnew

State 656:
## Known stack suffix:
## TEllipsis
## LR(1) items:
param_define -> TEllipsis . [ TComma TCPar ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production param_define -> TEllipsis

State 657:
## Known stack suffix:
## TDefParamVariadic
## LR(1) items:
param_define -> TDefParamVariadic . [ TComma TCPar ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production param_define -> TDefParamVariadic

State 658:
## Known stack suffix:
## param_define
## LR(1) items:
listc(param_define) -> param_define . [ TComma TCPar ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production listc(param_define) -> param_define

State 659:
## Known stack suffix:
## TDefine TIdent_Define TOPar_Define optl(listc(param_define))
## LR(1) items:
cpp_directive -> TDefine TIdent_Define TOPar_Define optl(listc(param_define)) . TCPar define_val TCommentNewline_DefineEndOfMacro [ Twhile Twchar_t_Constr Twchar_t Tvolatile Tvoid Tvirtual Tusing Tunsigned Tunion Ttypeof Ttypename Ttypeid Ttypedef Ttry Ttrue Tthrow Tthread_local Tthis Ttemplate Tswitch Tstruct Tstatic_cast Tstatic Tsizeof Tsigned Tshort_Constr Tshort Treturn Trestrict Treinterpret_cast Tregister Toperator Tnullptr Tnull Tnew Tnamespace Tmutable Tlong_Constr Tlong Tint_Constr Tint Tinline Tif Tgoto Tfriend Tfor Tfloat_Constr Tfloat Tfalse Textern Tenum Tdynamic_cast Tdouble_Constr Tdouble Tdo Tdelete Tdefault Tdecltype Tcontinue Tconstexpr Tconst_cast Tconst Tclass Tchar_Constr Tchar Tcase Tbreak Tbool_Constr Tbool Tauto Tasm TUndef TTilde TString TPtVirg TPlus TOPar TOCro_Lambda TOBrace TMul TMinus TInt TInclude TInc TIfdefelse TIfdefelif TIfdefVersion TIfdefMisc TIfdefBool TIfdef TIdent_TypedefConstr TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_MacroString TIdent_MacroStmt TIdent_MacroIterator TIdent_MacroDecl TIdent_Constructor TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TIdent TFloat TEndif TEllipsis TDefine TDec TCppDirectiveOther TColCol_BeforeTypedef TColCol TChar TCBrace TBang TAndLog TAnd LDots EOF ]
## Transitions:
-- On TCPar shift to state 660
## Reductions:

State 660:
## Known stack suffix:
## TDefine TIdent_Define TOPar_Define optl(listc(param_define)) TCPar
## LR(1) items:
cpp_directive -> TDefine TIdent_Define TOPar_Define optl(listc(param_define)) TCPar . define_val TCommentNewline_DefineEndOfMacro [ Twhile Twchar_t_Constr Twchar_t Tvolatile Tvoid Tvirtual Tusing Tunsigned Tunion Ttypeof Ttypename Ttypeid Ttypedef Ttry Ttrue Tthrow Tthread_local Tthis Ttemplate Tswitch Tstruct Tstatic_cast Tstatic Tsizeof Tsigned Tshort_Constr Tshort Treturn Trestrict Treinterpret_cast Tregister Toperator Tnullptr Tnull Tnew Tnamespace Tmutable Tlong_Constr Tlong Tint_Constr Tint Tinline Tif Tgoto Tfriend Tfor Tfloat_Constr Tfloat Tfalse Textern Tenum Tdynamic_cast Tdouble_Constr Tdouble Tdo Tdelete Tdefault Tdecltype Tcontinue Tconstexpr Tconst_cast Tconst Tclass Tchar_Constr Tchar Tcase Tbreak Tbool_Constr Tbool Tauto Tasm TUndef TTilde TString TPtVirg TPlus TOPar TOCro_Lambda TOBrace TMul TMinus TInt TInclude TInc TIfdefelse TIfdefelif TIfdefVersion TIfdefMisc TIfdefBool TIfdef TIdent_TypedefConstr TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_MacroString TIdent_MacroStmt TIdent_MacroIterator TIdent_MacroDecl TIdent_Constructor TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TIdent TFloat TEndif TEllipsis TDefine TDec TCppDirectiveOther TColCol_BeforeTypedef TColCol TChar TCBrace TBang TAndLog TAnd LDots EOF ]
## Transitions:
-- On Twhile shift to state 94
-- On Twchar_t_Constr shift to state 14
-- On Twchar_t shift to state 1
-- On Tvolatile shift to state 2
-- On Tvoid shift to state 3
-- On Tvirtual shift to state 4
-- On Tusing shift to state 5
-- On Tunsigned shift to state 15
-- On Tunion shift to state 16
-- On Ttypeof shift to state 17
-- On Ttypename shift to state 19
-- On Ttypeid shift to state 23
-- On Ttypedef shift to state 96
-- On Ttry shift to state 431
-- On Ttrue shift to state 25
-- On Tthrow shift to state 47
-- On Tthread_local shift to state 97
-- On Tthis shift to state 26
-- On Tswitch shift to state 515
-- On Tstruct shift to state 27
-- On Tstatic_cast shift to state 28
-- On Tstatic shift to state 323
-- On Tsizeof shift to state 29
-- On Tsigned shift to state 30
-- On Tshort_Constr shift to state 31
-- On Tshort shift to state 32
-- On Treturn shift to state 537
-- On Trestrict shift to state 65
-- On Treinterpret_cast shift to state 33
-- On Tregister shift to state 99
-- On Toperator shift to state 34
-- On Tnullptr shift to state 48
-- On Tnull shift to state 49
-- On Tnamespace shift to state 540
-- On Tmutable shift to state 100
-- On Tlong_Constr shift to state 50
-- On Tlong shift to state 38
-- On Tint_Constr shift to state 51
-- On Tint shift to state 39
-- On Tinline shift to state 101
-- On Tif shift to state 642
-- On Tgoto shift to state 549
-- On Tfriend shift to state 102
-- On Tfor shift to state 553
-- On Tfloat_Constr shift to state 52
-- On Tfloat shift to state 40
-- On Tfalse shift to state 53
-- On Textern shift to state 103
-- On Tenum shift to state 66
-- On Tdynamic_cast shift to state 54
-- On Tdouble_Constr shift to state 55
-- On Tdouble shift to state 41
-- On Tdo shift to state 647
-- On Tdefault shift to state 563
-- On Tdecltype shift to state 45
-- On Tcontinue shift to state 565
-- On Tconstexpr shift to state 104
-- On Tconst_cast shift to state 56
-- On Tconst shift to state 76
-- On Tclass shift to state 77
-- On Tchar_Constr shift to state 57
-- On Tchar shift to state 58
-- On Tcase shift to state 566
-- On Tbreak shift to state 571
-- On Tbool_Constr shift to state 59
-- On Tbool shift to state 60
-- On Tauto shift to state 105
-- On Tasm shift to state 366
-- On TTilde shift to state 61
-- On TString shift to state 62
-- On TPlus shift to state 63
-- On TOPar shift to state 64
-- On TOCro_Lambda shift to state 78
-- On TOBrace_DefineInit shift to state 661
-- On TOBrace shift to state 93
-- On TMul shift to state 88
-- On TMinus shift to state 89
-- On TInt shift to state 90
-- On TInc shift to state 91
-- On TIdent_TypedefConstr shift to state 106
-- On TIdent_Typedef shift to state 572
-- On TIdent_TemplatenameInQualifier_BeforeTypedef shift to state 21
-- On TIdent_TemplatenameInQualifier shift to state 12
-- On TIdent_Templatename shift to state 108
-- On TIdent_MacroString shift to state 110
-- On TIdent_MacroStmt shift to state 573
-- On TIdent_MacroIterator shift to state 574
-- On TIdent_MacroDecl shift to state 423
-- On TIdent_ClassnameInQualifier_BeforeTypedef shift to state 111
-- On TIdent_ClassnameInQualifier shift to state 112
-- On TIdent shift to state 578
-- On TFloat shift to state 116
-- On TEllipsis shift to state 580
-- On TDec shift to state 117
-- On TColCol_BeforeTypedef shift to state 118
-- On TColCol shift to state 128
-- On TChar shift to state 174
-- On TBang shift to state 175
-- On TAndLog shift to state 176
-- On TAnd shift to state 177
-- On LDots shift to state 178
-- On using_directive shift to state 581
-- On using_declaration shift to state 582
-- On unqualified_id shift to state 179
-- On unary_op shift to state 180
-- On unary_expr shift to state 181
-- On type_spec shift to state 314
-- On type_name shift to state 182
-- On type_cplusplus_id shift to state 183
-- On try_block shift to state 583
-- On template_id shift to state 120
-- On string_elem shift to state 184
-- On storage_class_spec shift to state 316
-- On statement shift to state 681
-- On simple_type_specifier shift to state 266
-- On simple_declaration shift to state 585
-- On shift_expr shift to state 217
-- On selection shift to state 586
-- On relational_expr shift to state 229
-- On qualified_id shift to state 191
-- On primary_expr shift to state 192
-- On primary_cplusplus_id shift to state 193
-- On postfix_expr shift to state 194
-- On pm_expr shift to state 219
-- On option(expr) shift to state 556
-- On option(TColCol) shift to state 221
-- On operator_function_id shift to state 168
-- On new_expr shift to state 233
-- On nested_name_specifier2 shift to state 207
-- On nested_name_specifier shift to state 165
-- On namespace_alias_definition shift to state 587
-- On multiplicative_expr shift to state 234
-- On logical_or_expr shift to state 246
-- On logical_and_expr shift to state 250
-- On literal shift to state 238
-- On lambda_introducer shift to state 239
-- On labeled shift to state 588
-- On jump shift to state 589
-- On iteration shift to state 591
-- On inclusive_or_expr shift to state 272
-- On ident shift to state 592
-- On id_expression shift to state 241
-- On function_spec shift to state 437
-- On function_definition shift to state 595
-- On expr_statement shift to state 596
-- On expr shift to state 682
-- On exclusive_or_expr shift to state 273
-- On equality_expr shift to state 256
-- On enum_specifier shift to state 209
-- On enum_name_or_typedef_name_or_simple_class_name shift to state 123
-- On enum_head shift to state 210
-- On elaborated_type_specifier shift to state 274
-- On delete_expr shift to state 242
-- On define_val shift to state 683
-- On decltype_specifier shift to state 243
-- On declaration_statement shift to state 598
-- On decl_spec_seq shift to state 599
-- On decl_spec shift to state 473
-- On cv_qualif shift to state 475
-- On cpp_cast_operator shift to state 244
-- On conversion_function_id shift to state 169
-- On cond_expr shift to state 330
-- On compound shift to state 615
-- On class_specifier shift to state 277
-- On class_or_namespace_name_for_qualifier2 shift to state 124
-- On class_or_namespace_name_for_qualifier shift to state 170
-- On class_key shift to state 278
-- On class_head shift to state 301
-- On cast_operator_expr shift to state 261
-- On cast_expr shift to state 331
-- On cast_constructor_expr shift to state 263
-- On block_declaration shift to state 616
-- On basic_type_2 shift to state 264
-- On assign_expr shift to state 539
-- On asm_definition shift to state 617
-- On and_expr shift to state 334
-- On additive_expr shift to state 341
## Reductions:
-- On TCommentNewline_DefineEndOfMacro
--   reduce production define_val ->
-- On Tnew Tdelete
--   reduce production option(TColCol) ->
-- On TPtVirg
--   reduce production option(expr) ->

State 661:
## Known stack suffix:
## TOBrace_DefineInit
## LR(1) items:
define_val -> TOBrace_DefineInit . initialize_list TCBrace option(TComma) [ TCommentNewline_DefineEndOfMacro ]
## Transitions:
-- On Twchar_t_Constr shift to state 14
-- On Twchar_t shift to state 1
-- On Tvoid shift to state 3
-- On Tunsigned shift to state 15
-- On Ttypeof shift to state 17
-- On Ttypeid shift to state 23
-- On Ttrue shift to state 25
-- On Tthis shift to state 26
-- On Tstatic_cast shift to state 28
-- On Tsizeof shift to state 29
-- On Tsigned shift to state 30
-- On Tshort_Constr shift to state 31
-- On Tshort shift to state 32
-- On Treinterpret_cast shift to state 33
-- On Toperator shift to state 34
-- On Tnullptr shift to state 48
-- On Tnull shift to state 49
-- On Tlong_Constr shift to state 50
-- On Tlong shift to state 38
-- On Tint_Constr shift to state 51
-- On Tint shift to state 39
-- On Tfloat_Constr shift to state 52
-- On Tfloat shift to state 40
-- On Tfalse shift to state 53
-- On Tdynamic_cast shift to state 54
-- On Tdouble_Constr shift to state 55
-- On Tdouble shift to state 41
-- On Tdecltype shift to state 45
-- On Tconst_cast shift to state 56
-- On Tchar_Constr shift to state 57
-- On Tchar shift to state 58
-- On Tbool_Constr shift to state 59
-- On Tbool shift to state 60
-- On TTilde shift to state 61
-- On TString shift to state 62
-- On TPlus shift to state 63
-- On TOPar shift to state 64
-- On TOCro_Lambda shift to state 78
-- On TOCro shift to state 115
-- On TOBrace shift to state 114
-- On TMul shift to state 88
-- On TMinus shift to state 89
-- On TInt shift to state 90
-- On TInc shift to state 91
-- On TIdent_TypedefConstr shift to state 106
-- On TIdent_Typedef shift to state 572
-- On TIdent_TemplatenameInQualifier_BeforeTypedef shift to state 21
-- On TIdent_TemplatenameInQualifier shift to state 12
-- On TIdent_Templatename shift to state 108
-- On TIdent_MacroString shift to state 110
-- On TIdent_ClassnameInQualifier_BeforeTypedef shift to state 111
-- On TIdent_ClassnameInQualifier shift to state 112
-- On TIdent shift to state 578
-- On TFloat shift to state 116
-- On TDot shift to state 662
-- On TDec shift to state 117
-- On TColCol_BeforeTypedef shift to state 118
-- On TColCol shift to state 128
-- On TChar shift to state 174
-- On TBang shift to state 175
-- On TAndLog shift to state 176
-- On TAnd shift to state 177
-- On LDots shift to state 178
-- On unqualified_id shift to state 179
-- On unary_op shift to state 180
-- On unary_expr shift to state 181
-- On type_name shift to state 182
-- On type_cplusplus_id shift to state 183
-- On template_id shift to state 120
-- On string_elem shift to state 184
-- On simple_type_specifier shift to state 189
-- On shift_expr shift to state 217
-- On relational_expr shift to state 229
-- On qualified_id shift to state 191
-- On primary_expr shift to state 192
-- On primary_cplusplus_id shift to state 193
-- On postfix_expr shift to state 194
-- On pm_expr shift to state 219
-- On option(TColCol) shift to state 221
-- On operator_function_id shift to state 168
-- On nonempty_list(designator) shift to state 664
-- On new_expr shift to state 233
-- On nested_name_specifier2 shift to state 207
-- On nested_name_specifier shift to state 165
-- On multiplicative_expr shift to state 234
-- On logical_or_expr shift to state 246
-- On logical_and_expr shift to state 250
-- On literal shift to state 238
-- On lambda_introducer shift to state 239
-- On initialize_list shift to state 674
-- On initialize2 shift to state 680
-- On inclusive_or_expr shift to state 272
-- On ident shift to state 667
-- On id_expression shift to state 241
-- On exclusive_or_expr shift to state 273
-- On equality_expr shift to state 256
-- On enum_name_or_typedef_name_or_simple_class_name shift to state 123
-- On designator shift to state 670
-- On delete_expr shift to state 242
-- On decltype_specifier shift to state 243
-- On cpp_cast_operator shift to state 244
-- On conversion_function_id shift to state 169
-- On cond_expr shift to state 672
-- On class_or_namespace_name_for_qualifier2 shift to state 124
-- On class_or_namespace_name_for_qualifier shift to state 170
-- On cast_operator_expr shift to state 261
-- On cast_expr shift to state 262
-- On cast_constructor_expr shift to state 263
-- On braced_init_list shift to state 673
-- On basic_type_2 shift to state 264
-- On and_expr shift to state 334
-- On additive_expr shift to state 341
## Reductions:
-- On Tnew Tdelete
--   reduce production option(TColCol) ->

State 662:
## Known stack suffix:
## TDot
## LR(1) items:
designator -> TDot . ident [ TEq TDot ]
## Transitions:
-- On TIdent_Typedef shift to state 68
-- On TIdent shift to state 69
-- On ident shift to state 663
## Reductions:

State 663:
## Known stack suffix:
## TDot ident
## LR(1) items:
designator -> TDot ident . [ TEq TDot ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production designator -> TDot ident

State 664:
## Known stack suffix:
## nonempty_list(designator)
## LR(1) items:
initialize2 -> nonempty_list(designator) . TEq initialize2 [ TComma TCBrace ]
## Transitions:
-- On TEq shift to state 665
## Reductions:

State 665:
## Known stack suffix:
## nonempty_list(designator) TEq
## LR(1) items:
initialize2 -> nonempty_list(designator) TEq . initialize2 [ TComma TCBrace ]
## Transitions:
-- On Twchar_t_Constr shift to state 14
-- On Twchar_t shift to state 1
-- On Tvoid shift to state 3
-- On Tunsigned shift to state 15
-- On Ttypeof shift to state 17
-- On Ttypeid shift to state 23
-- On Ttrue shift to state 25
-- On Tthis shift to state 26
-- On Tstatic_cast shift to state 28
-- On Tsizeof shift to state 29
-- On Tsigned shift to state 30
-- On Tshort_Constr shift to state 31
-- On Tshort shift to state 32
-- On Treinterpret_cast shift to state 33
-- On Toperator shift to state 34
-- On Tnullptr shift to state 48
-- On Tnull shift to state 49
-- On Tlong_Constr shift to state 50
-- On Tlong shift to state 38
-- On Tint_Constr shift to state 51
-- On Tint shift to state 39
-- On Tfloat_Constr shift to state 52
-- On Tfloat shift to state 40
-- On Tfalse shift to state 53
-- On Tdynamic_cast shift to state 54
-- On Tdouble_Constr shift to state 55
-- On Tdouble shift to state 41
-- On Tdecltype shift to state 45
-- On Tconst_cast shift to state 56
-- On Tchar_Constr shift to state 57
-- On Tchar shift to state 58
-- On Tbool_Constr shift to state 59
-- On Tbool shift to state 60
-- On TTilde shift to state 61
-- On TString shift to state 62
-- On TPlus shift to state 63
-- On TOPar shift to state 64
-- On TOCro_Lambda shift to state 78
-- On TOCro shift to state 115
-- On TOBrace shift to state 114
-- On TMul shift to state 88
-- On TMinus shift to state 89
-- On TInt shift to state 90
-- On TInc shift to state 91
-- On TIdent_TypedefConstr shift to state 106
-- On TIdent_Typedef shift to state 572
-- On TIdent_TemplatenameInQualifier_BeforeTypedef shift to state 21
-- On TIdent_TemplatenameInQualifier shift to state 12
-- On TIdent_Templatename shift to state 108
-- On TIdent_MacroString shift to state 110
-- On TIdent_ClassnameInQualifier_BeforeTypedef shift to state 111
-- On TIdent_ClassnameInQualifier shift to state 112
-- On TIdent shift to state 578
-- On TFloat shift to state 116
-- On TDot shift to state 662
-- On TDec shift to state 117
-- On TColCol_BeforeTypedef shift to state 118
-- On TColCol shift to state 128
-- On TChar shift to state 174
-- On TBang shift to state 175
-- On TAndLog shift to state 176
-- On TAnd shift to state 177
-- On LDots shift to state 178
-- On unqualified_id shift to state 179
-- On unary_op shift to state 180
-- On unary_expr shift to state 181
-- On type_name shift to state 182
-- On type_cplusplus_id shift to state 183
-- On template_id shift to state 120
-- On string_elem shift to state 184
-- On simple_type_specifier shift to state 189
-- On shift_expr shift to state 217
-- On relational_expr shift to state 229
-- On qualified_id shift to state 191
-- On primary_expr shift to state 192
-- On primary_cplusplus_id shift to state 193
-- On postfix_expr shift to state 194
-- On pm_expr shift to state 219
-- On option(TColCol) shift to state 221
-- On operator_function_id shift to state 168
-- On nonempty_list(designator) shift to state 664
-- On new_expr shift to state 233
-- On nested_name_specifier2 shift to state 207
-- On nested_name_specifier shift to state 165
-- On multiplicative_expr shift to state 234
-- On logical_or_expr shift to state 246
-- On logical_and_expr shift to state 250
-- On literal shift to state 238
-- On lambda_introducer shift to state 239
-- On initialize2 shift to state 666
-- On inclusive_or_expr shift to state 272
-- On ident shift to state 667
-- On id_expression shift to state 241
-- On exclusive_or_expr shift to state 273
-- On equality_expr shift to state 256
-- On enum_name_or_typedef_name_or_simple_class_name shift to state 123
-- On designator shift to state 670
-- On delete_expr shift to state 242
-- On decltype_specifier shift to state 243
-- On cpp_cast_operator shift to state 244
-- On conversion_function_id shift to state 169
-- On cond_expr shift to state 672
-- On class_or_namespace_name_for_qualifier2 shift to state 124
-- On class_or_namespace_name_for_qualifier shift to state 170
-- On cast_operator_expr shift to state 261
-- On cast_expr shift to state 262
-- On cast_constructor_expr shift to state 263
-- On braced_init_list shift to state 673
-- On basic_type_2 shift to state 264
-- On and_expr shift to state 334
-- On additive_expr shift to state 341
## Reductions:
-- On Tnew Tdelete
--   reduce production option(TColCol) ->

State 666:
## Known stack suffix:
## nonempty_list(designator) TEq initialize2
## LR(1) items:
initialize2 -> nonempty_list(designator) TEq initialize2 . [ TComma TCBrace ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production initialize2 -> nonempty_list(designator) TEq initialize2

State 667:
## Known stack suffix:
## ident
## LR(1) items:
initialize2 -> ident . TCol initialize2 [ TComma TCBrace ]
## Transitions:
-- On TCol shift to state 668
## Reductions:

State 668:
## Known stack suffix:
## ident TCol
## LR(1) items:
initialize2 -> ident TCol . initialize2 [ TComma TCBrace ]
## Transitions:
-- On Twchar_t_Constr shift to state 14
-- On Twchar_t shift to state 1
-- On Tvoid shift to state 3
-- On Tunsigned shift to state 15
-- On Ttypeof shift to state 17
-- On Ttypeid shift to state 23
-- On Ttrue shift to state 25
-- On Tthis shift to state 26
-- On Tstatic_cast shift to state 28
-- On Tsizeof shift to state 29
-- On Tsigned shift to state 30
-- On Tshort_Constr shift to state 31
-- On Tshort shift to state 32
-- On Treinterpret_cast shift to state 33
-- On Toperator shift to state 34
-- On Tnullptr shift to state 48
-- On Tnull shift to state 49
-- On Tlong_Constr shift to state 50
-- On Tlong shift to state 38
-- On Tint_Constr shift to state 51
-- On Tint shift to state 39
-- On Tfloat_Constr shift to state 52
-- On Tfloat shift to state 40
-- On Tfalse shift to state 53
-- On Tdynamic_cast shift to state 54
-- On Tdouble_Constr shift to state 55
-- On Tdouble shift to state 41
-- On Tdecltype shift to state 45
-- On Tconst_cast shift to state 56
-- On Tchar_Constr shift to state 57
-- On Tchar shift to state 58
-- On Tbool_Constr shift to state 59
-- On Tbool shift to state 60
-- On TTilde shift to state 61
-- On TString shift to state 62
-- On TPlus shift to state 63
-- On TOPar shift to state 64
-- On TOCro_Lambda shift to state 78
-- On TOCro shift to state 115
-- On TOBrace shift to state 114
-- On TMul shift to state 88
-- On TMinus shift to state 89
-- On TInt shift to state 90
-- On TInc shift to state 91
-- On TIdent_TypedefConstr shift to state 106
-- On TIdent_Typedef shift to state 572
-- On TIdent_TemplatenameInQualifier_BeforeTypedef shift to state 21
-- On TIdent_TemplatenameInQualifier shift to state 12
-- On TIdent_Templatename shift to state 108
-- On TIdent_MacroString shift to state 110
-- On TIdent_ClassnameInQualifier_BeforeTypedef shift to state 111
-- On TIdent_ClassnameInQualifier shift to state 112
-- On TIdent shift to state 578
-- On TFloat shift to state 116
-- On TDot shift to state 662
-- On TDec shift to state 117
-- On TColCol_BeforeTypedef shift to state 118
-- On TColCol shift to state 128
-- On TChar shift to state 174
-- On TBang shift to state 175
-- On TAndLog shift to state 176
-- On TAnd shift to state 177
-- On LDots shift to state 178
-- On unqualified_id shift to state 179
-- On unary_op shift to state 180
-- On unary_expr shift to state 181
-- On type_name shift to state 182
-- On type_cplusplus_id shift to state 183
-- On template_id shift to state 120
-- On string_elem shift to state 184
-- On simple_type_specifier shift to state 189
-- On shift_expr shift to state 217
-- On relational_expr shift to state 229
-- On qualified_id shift to state 191
-- On primary_expr shift to state 192
-- On primary_cplusplus_id shift to state 193
-- On postfix_expr shift to state 194
-- On pm_expr shift to state 219
-- On option(TColCol) shift to state 221
-- On operator_function_id shift to state 168
-- On nonempty_list(designator) shift to state 664
-- On new_expr shift to state 233
-- On nested_name_specifier2 shift to state 207
-- On nested_name_specifier shift to state 165
-- On multiplicative_expr shift to state 234
-- On logical_or_expr shift to state 246
-- On logical_and_expr shift to state 250
-- On literal shift to state 238
-- On lambda_introducer shift to state 239
-- On initialize2 shift to state 669
-- On inclusive_or_expr shift to state 272
-- On ident shift to state 667
-- On id_expression shift to state 241
-- On exclusive_or_expr shift to state 273
-- On equality_expr shift to state 256
-- On enum_name_or_typedef_name_or_simple_class_name shift to state 123
-- On designator shift to state 670
-- On delete_expr shift to state 242
-- On decltype_specifier shift to state 243
-- On cpp_cast_operator shift to state 244
-- On conversion_function_id shift to state 169
-- On cond_expr shift to state 672
-- On class_or_namespace_name_for_qualifier2 shift to state 124
-- On class_or_namespace_name_for_qualifier shift to state 170
-- On cast_operator_expr shift to state 261
-- On cast_expr shift to state 262
-- On cast_constructor_expr shift to state 263
-- On braced_init_list shift to state 673
-- On basic_type_2 shift to state 264
-- On and_expr shift to state 334
-- On additive_expr shift to state 341
## Reductions:
-- On Tnew Tdelete
--   reduce production option(TColCol) ->

State 669:
## Known stack suffix:
## ident TCol initialize2
## LR(1) items:
initialize2 -> ident TCol initialize2 . [ TComma TCBrace ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production initialize2 -> ident TCol initialize2

State 670:
## Known stack suffix:
## designator
## LR(1) items:
nonempty_list(designator) -> designator . [ TEq ]
nonempty_list(designator) -> designator . nonempty_list(designator) [ TEq ]
## Transitions:
-- On TDot shift to state 662
-- On nonempty_list(designator) shift to state 671
-- On designator shift to state 670
## Reductions:
-- On TEq
--   reduce production nonempty_list(designator) -> designator

State 671:
## Known stack suffix:
## designator nonempty_list(designator)
## LR(1) items:
nonempty_list(designator) -> designator nonempty_list(designator) . [ TEq ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production nonempty_list(designator) -> designator nonempty_list(designator)

State 672:
## Known stack suffix:
## cond_expr
## LR(1) items:
initialize2 -> cond_expr . [ TComma TCBrace ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production initialize2 -> cond_expr

State 673:
## Known stack suffix:
## braced_init_list
## LR(1) items:
initialize2 -> braced_init_list . [ TComma TCBrace ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production initialize2 -> braced_init_list

State 674:
## Known stack suffix:
## TOBrace_DefineInit initialize_list
## LR(1) items:
define_val -> TOBrace_DefineInit initialize_list . TCBrace option(TComma) [ TCommentNewline_DefineEndOfMacro ]
initialize_list -> initialize_list . TComma initialize2 [ TComma TCBrace ]
## Transitions:
-- On TComma shift to state 675
-- On TCBrace shift to state 677
## Reductions:

State 675:
## Known stack suffix:
## initialize_list TComma
## LR(1) items:
initialize_list -> initialize_list TComma . initialize2 [ TComma TCBrace ]
## Transitions:
-- On Twchar_t_Constr shift to state 14
-- On Twchar_t shift to state 1
-- On Tvoid shift to state 3
-- On Tunsigned shift to state 15
-- On Ttypeof shift to state 17
-- On Ttypeid shift to state 23
-- On Ttrue shift to state 25
-- On Tthis shift to state 26
-- On Tstatic_cast shift to state 28
-- On Tsizeof shift to state 29
-- On Tsigned shift to state 30
-- On Tshort_Constr shift to state 31
-- On Tshort shift to state 32
-- On Treinterpret_cast shift to state 33
-- On Toperator shift to state 34
-- On Tnullptr shift to state 48
-- On Tnull shift to state 49
-- On Tlong_Constr shift to state 50
-- On Tlong shift to state 38
-- On Tint_Constr shift to state 51
-- On Tint shift to state 39
-- On Tfloat_Constr shift to state 52
-- On Tfloat shift to state 40
-- On Tfalse shift to state 53
-- On Tdynamic_cast shift to state 54
-- On Tdouble_Constr shift to state 55
-- On Tdouble shift to state 41
-- On Tdecltype shift to state 45
-- On Tconst_cast shift to state 56
-- On Tchar_Constr shift to state 57
-- On Tchar shift to state 58
-- On Tbool_Constr shift to state 59
-- On Tbool shift to state 60
-- On TTilde shift to state 61
-- On TString shift to state 62
-- On TPlus shift to state 63
-- On TOPar shift to state 64
-- On TOCro_Lambda shift to state 78
-- On TOCro shift to state 115
-- On TOBrace shift to state 114
-- On TMul shift to state 88
-- On TMinus shift to state 89
-- On TInt shift to state 90
-- On TInc shift to state 91
-- On TIdent_TypedefConstr shift to state 106
-- On TIdent_Typedef shift to state 572
-- On TIdent_TemplatenameInQualifier_BeforeTypedef shift to state 21
-- On TIdent_TemplatenameInQualifier shift to state 12
-- On TIdent_Templatename shift to state 108
-- On TIdent_MacroString shift to state 110
-- On TIdent_ClassnameInQualifier_BeforeTypedef shift to state 111
-- On TIdent_ClassnameInQualifier shift to state 112
-- On TIdent shift to state 578
-- On TFloat shift to state 116
-- On TDot shift to state 662
-- On TDec shift to state 117
-- On TColCol_BeforeTypedef shift to state 118
-- On TColCol shift to state 128
-- On TChar shift to state 174
-- On TBang shift to state 175
-- On TAndLog shift to state 176
-- On TAnd shift to state 177
-- On LDots shift to state 178
-- On unqualified_id shift to state 179
-- On unary_op shift to state 180
-- On unary_expr shift to state 181
-- On type_name shift to state 182
-- On type_cplusplus_id shift to state 183
-- On template_id shift to state 120
-- On string_elem shift to state 184
-- On simple_type_specifier shift to state 189
-- On shift_expr shift to state 217
-- On relational_expr shift to state 229
-- On qualified_id shift to state 191
-- On primary_expr shift to state 192
-- On primary_cplusplus_id shift to state 193
-- On postfix_expr shift to state 194
-- On pm_expr shift to state 219
-- On option(TColCol) shift to state 221
-- On operator_function_id shift to state 168
-- On nonempty_list(designator) shift to state 664
-- On new_expr shift to state 233
-- On nested_name_specifier2 shift to state 207
-- On nested_name_specifier shift to state 165
-- On multiplicative_expr shift to state 234
-- On logical_or_expr shift to state 246
-- On logical_and_expr shift to state 250
-- On literal shift to state 238
-- On lambda_introducer shift to state 239
-- On initialize2 shift to state 676
-- On inclusive_or_expr shift to state 272
-- On ident shift to state 667
-- On id_expression shift to state 241
-- On exclusive_or_expr shift to state 273
-- On equality_expr shift to state 256
-- On enum_name_or_typedef_name_or_simple_class_name shift to state 123
-- On designator shift to state 670
-- On delete_expr shift to state 242
-- On decltype_specifier shift to state 243
-- On cpp_cast_operator shift to state 244
-- On conversion_function_id shift to state 169
-- On cond_expr shift to state 672
-- On class_or_namespace_name_for_qualifier2 shift to state 124
-- On class_or_namespace_name_for_qualifier shift to state 170
-- On cast_operator_expr shift to state 261
-- On cast_expr shift to state 262
-- On cast_constructor_expr shift to state 263
-- On braced_init_list shift to state 673
-- On basic_type_2 shift to state 264
-- On and_expr shift to state 334
-- On additive_expr shift to state 341
## Reductions:
-- On Tnew Tdelete
--   reduce production option(TColCol) ->

State 676:
## Known stack suffix:
## initialize_list TComma initialize2
## LR(1) items:
initialize_list -> initialize_list TComma initialize2 . [ TComma TCBrace ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production initialize_list -> initialize_list TComma initialize2

State 677:
## Known stack suffix:
## TOBrace_DefineInit initialize_list TCBrace
## LR(1) items:
define_val -> TOBrace_DefineInit initialize_list TCBrace . option(TComma) [ TCommentNewline_DefineEndOfMacro ]
## Transitions:
-- On TComma shift to state 678
-- On option(TComma) shift to state 679
## Reductions:
-- On TCommentNewline_DefineEndOfMacro
--   reduce production option(TComma) ->

State 678:
## Known stack suffix:
## TComma
## LR(1) items:
option(TComma) -> TComma . [ TCommentNewline_DefineEndOfMacro ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production option(TComma) -> TComma

State 679:
## Known stack suffix:
## TOBrace_DefineInit initialize_list TCBrace option(TComma)
## LR(1) items:
define_val -> TOBrace_DefineInit initialize_list TCBrace option(TComma) . [ TCommentNewline_DefineEndOfMacro ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production define_val -> TOBrace_DefineInit initialize_list TCBrace option(TComma)

State 680:
## Known stack suffix:
## initialize2
## LR(1) items:
initialize_list -> initialize2 . [ TComma TCBrace ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production initialize_list -> initialize2

State 681:
## Known stack suffix:
## statement
## LR(1) items:
define_val -> statement . [ TCommentNewline_DefineEndOfMacro ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production define_val -> statement

State 682:
## Known stack suffix:
## expr
## LR(1) items:
define_val -> expr . [ TCommentNewline_DefineEndOfMacro ]
expr -> expr . TComma assign_expr [ TPtVirg TCommentNewline_DefineEndOfMacro TComma ]
option(expr) -> expr . [ TPtVirg ]
## Transitions:
-- On TComma shift to state 518
## Reductions:
-- On TCommentNewline_DefineEndOfMacro
--   reduce production define_val -> expr
-- On TPtVirg
--   reduce production option(expr) -> expr

State 683:
## Known stack suffix:
## TDefine TIdent_Define TOPar_Define optl(listc(param_define)) TCPar define_val
## LR(1) items:
cpp_directive -> TDefine TIdent_Define TOPar_Define optl(listc(param_define)) TCPar define_val . TCommentNewline_DefineEndOfMacro [ Twhile Twchar_t_Constr Twchar_t Tvolatile Tvoid Tvirtual Tusing Tunsigned Tunion Ttypeof Ttypename Ttypeid Ttypedef Ttry Ttrue Tthrow Tthread_local Tthis Ttemplate Tswitch Tstruct Tstatic_cast Tstatic Tsizeof Tsigned Tshort_Constr Tshort Treturn Trestrict Treinterpret_cast Tregister Toperator Tnullptr Tnull Tnew Tnamespace Tmutable Tlong_Constr Tlong Tint_Constr Tint Tinline Tif Tgoto Tfriend Tfor Tfloat_Constr Tfloat Tfalse Textern Tenum Tdynamic_cast Tdouble_Constr Tdouble Tdo Tdelete Tdefault Tdecltype Tcontinue Tconstexpr Tconst_cast Tconst Tclass Tchar_Constr Tchar Tcase Tbreak Tbool_Constr Tbool Tauto Tasm TUndef TTilde TString TPtVirg TPlus TOPar TOCro_Lambda TOBrace TMul TMinus TInt TInclude TInc TIfdefelse TIfdefelif TIfdefVersion TIfdefMisc TIfdefBool TIfdef TIdent_TypedefConstr TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_MacroString TIdent_MacroStmt TIdent_MacroIterator TIdent_MacroDecl TIdent_Constructor TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TIdent TFloat TEndif TEllipsis TDefine TDec TCppDirectiveOther TColCol_BeforeTypedef TColCol TChar TCBrace TBang TAndLog TAnd LDots EOF ]
## Transitions:
-- On TCommentNewline_DefineEndOfMacro shift to state 684
## Reductions:

State 684:
## Known stack suffix:
## TDefine TIdent_Define TOPar_Define optl(listc(param_define)) TCPar define_val TCommentNewline_DefineEndOfMacro
## LR(1) items:
cpp_directive -> TDefine TIdent_Define TOPar_Define optl(listc(param_define)) TCPar define_val TCommentNewline_DefineEndOfMacro . [ Twhile Twchar_t_Constr Twchar_t Tvolatile Tvoid Tvirtual Tusing Tunsigned Tunion Ttypeof Ttypename Ttypeid Ttypedef Ttry Ttrue Tthrow Tthread_local Tthis Ttemplate Tswitch Tstruct Tstatic_cast Tstatic Tsizeof Tsigned Tshort_Constr Tshort Treturn Trestrict Treinterpret_cast Tregister Toperator Tnullptr Tnull Tnew Tnamespace Tmutable Tlong_Constr Tlong Tint_Constr Tint Tinline Tif Tgoto Tfriend Tfor Tfloat_Constr Tfloat Tfalse Textern Tenum Tdynamic_cast Tdouble_Constr Tdouble Tdo Tdelete Tdefault Tdecltype Tcontinue Tconstexpr Tconst_cast Tconst Tclass Tchar_Constr Tchar Tcase Tbreak Tbool_Constr Tbool Tauto Tasm TUndef TTilde TString TPtVirg TPlus TOPar TOCro_Lambda TOBrace TMul TMinus TInt TInclude TInc TIfdefelse TIfdefelif TIfdefVersion TIfdefMisc TIfdefBool TIfdef TIdent_TypedefConstr TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_MacroString TIdent_MacroStmt TIdent_MacroIterator TIdent_MacroDecl TIdent_Constructor TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TIdent TFloat TEndif TEllipsis TDefine TDec TCppDirectiveOther TColCol_BeforeTypedef TColCol TChar TCBrace TBang TAndLog TAnd LDots EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production cpp_directive -> TDefine TIdent_Define TOPar_Define optl(listc(param_define)) TCPar define_val TCommentNewline_DefineEndOfMacro

State 685:
## Known stack suffix:
## listc(param_define)
## LR(1) items:
listc(param_define) -> listc(param_define) . TComma param_define [ TComma TCPar ]
optl(listc(param_define)) -> listc(param_define) . [ TCPar ]
## Transitions:
-- On TComma shift to state 686
## Reductions:
-- On TCPar
--   reduce production optl(listc(param_define)) -> listc(param_define)

State 686:
## Known stack suffix:
## listc(param_define) TComma
## LR(1) items:
listc(param_define) -> listc(param_define) TComma . param_define [ TComma TCPar ]
## Transitions:
-- On Tregister shift to state 654
-- On Tnew shift to state 655
-- On TIdent_Typedef shift to state 68
-- On TIdent shift to state 69
-- On TEllipsis shift to state 656
-- On TDefParamVariadic shift to state 657
-- On param_define shift to state 687
-- On ident shift to state 688
## Reductions:

State 687:
## Known stack suffix:
## listc(param_define) TComma param_define
## LR(1) items:
listc(param_define) -> listc(param_define) TComma param_define . [ TComma TCPar ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production listc(param_define) -> listc(param_define) TComma param_define

State 688:
## Known stack suffix:
## ident
## LR(1) items:
param_define -> ident . [ TComma TCPar ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production param_define -> ident

State 689:
## Known stack suffix:
## TDefine TIdent_Define define_val
## LR(1) items:
cpp_directive -> TDefine TIdent_Define define_val . TCommentNewline_DefineEndOfMacro [ Twhile Twchar_t_Constr Twchar_t Tvolatile Tvoid Tvirtual Tusing Tunsigned Tunion Ttypeof Ttypename Ttypeid Ttypedef Ttry Ttrue Tthrow Tthread_local Tthis Ttemplate Tswitch Tstruct Tstatic_cast Tstatic Tsizeof Tsigned Tshort_Constr Tshort Treturn Trestrict Treinterpret_cast Tregister Toperator Tnullptr Tnull Tnew Tnamespace Tmutable Tlong_Constr Tlong Tint_Constr Tint Tinline Tif Tgoto Tfriend Tfor Tfloat_Constr Tfloat Tfalse Textern Tenum Tdynamic_cast Tdouble_Constr Tdouble Tdo Tdelete Tdefault Tdecltype Tcontinue Tconstexpr Tconst_cast Tconst Tclass Tchar_Constr Tchar Tcase Tbreak Tbool_Constr Tbool Tauto Tasm TUndef TTilde TString TPtVirg TPlus TOPar TOCro_Lambda TOBrace TMul TMinus TInt TInclude TInc TIfdefelse TIfdefelif TIfdefVersion TIfdefMisc TIfdefBool TIfdef TIdent_TypedefConstr TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_MacroString TIdent_MacroStmt TIdent_MacroIterator TIdent_MacroDecl TIdent_Constructor TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TIdent TFloat TEndif TEllipsis TDefine TDec TCppDirectiveOther TColCol_BeforeTypedef TColCol TChar TCBrace TBang TAndLog TAnd LDots EOF ]
## Transitions:
-- On TCommentNewline_DefineEndOfMacro shift to state 690
## Reductions:

State 690:
## Known stack suffix:
## TDefine TIdent_Define define_val TCommentNewline_DefineEndOfMacro
## LR(1) items:
cpp_directive -> TDefine TIdent_Define define_val TCommentNewline_DefineEndOfMacro . [ Twhile Twchar_t_Constr Twchar_t Tvolatile Tvoid Tvirtual Tusing Tunsigned Tunion Ttypeof Ttypename Ttypeid Ttypedef Ttry Ttrue Tthrow Tthread_local Tthis Ttemplate Tswitch Tstruct Tstatic_cast Tstatic Tsizeof Tsigned Tshort_Constr Tshort Treturn Trestrict Treinterpret_cast Tregister Toperator Tnullptr Tnull Tnew Tnamespace Tmutable Tlong_Constr Tlong Tint_Constr Tint Tinline Tif Tgoto Tfriend Tfor Tfloat_Constr Tfloat Tfalse Textern Tenum Tdynamic_cast Tdouble_Constr Tdouble Tdo Tdelete Tdefault Tdecltype Tcontinue Tconstexpr Tconst_cast Tconst Tclass Tchar_Constr Tchar Tcase Tbreak Tbool_Constr Tbool Tauto Tasm TUndef TTilde TString TPtVirg TPlus TOPar TOCro_Lambda TOBrace TMul TMinus TInt TInclude TInc TIfdefelse TIfdefelif TIfdefVersion TIfdefMisc TIfdefBool TIfdef TIdent_TypedefConstr TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_MacroString TIdent_MacroStmt TIdent_MacroIterator TIdent_MacroDecl TIdent_Constructor TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TIdent TFloat TEndif TEllipsis TDefine TDec TCppDirectiveOther TColCol_BeforeTypedef TColCol TChar TCBrace TBang TAndLog TAnd LDots EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production cpp_directive -> TDefine TIdent_Define define_val TCommentNewline_DefineEndOfMacro

State 691:
## Known stack suffix:
## TCppDirectiveOther
## LR(1) items:
cpp_directive -> TCppDirectiveOther . [ Twhile Twchar_t_Constr Twchar_t Tvolatile Tvoid Tvirtual Tusing Tunsigned Tunion Ttypeof Ttypename Ttypeid Ttypedef Ttry Ttrue Tthrow Tthread_local Tthis Ttemplate Tswitch Tstruct Tstatic_cast Tstatic Tsizeof Tsigned Tshort_Constr Tshort Treturn Trestrict Treinterpret_cast Tregister Toperator Tnullptr Tnull Tnew Tnamespace Tmutable Tlong_Constr Tlong Tint_Constr Tint Tinline Tif Tgoto Tfriend Tfor Tfloat_Constr Tfloat Tfalse Textern Tenum Tdynamic_cast Tdouble_Constr Tdouble Tdo Tdelete Tdefault Tdecltype Tcontinue Tconstexpr Tconst_cast Tconst Tclass Tchar_Constr Tchar Tcase Tbreak Tbool_Constr Tbool Tauto Tasm TUndef TTilde TString TPtVirg TPlus TOPar TOCro_Lambda TOBrace TMul TMinus TInt TInclude TInc TIfdefelse TIfdefelif TIfdefVersion TIfdefMisc TIfdefBool TIfdef TIdent_TypedefConstr TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_MacroString TIdent_MacroStmt TIdent_MacroIterator TIdent_MacroDecl TIdent_Constructor TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TIdent TFloat TEndif TEllipsis TDefine TDec TCppDirectiveOther TColCol_BeforeTypedef TColCol TChar TCBrace TBang TAndLog TAnd LDots EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production cpp_directive -> TCppDirectiveOther

State 692:
## Known stack suffix:
## unnamed_namespace_definition
## LR(1) items:
namespace_definition -> unnamed_namespace_definition . [ Twchar_t Tvolatile Tvoid Tvirtual Tusing Tunsigned Tunion Ttypeof Ttypename Ttypedef Tthread_local Ttemplate Tstruct Tstatic Tsigned Tshort Trestrict Tregister Tpublic Tprotected Tprivate Tnamespace Tmutable Tlong Tint Tinline Tfriend Tfloat Textern Texplicit Tenum Tdouble Tdecltype Tconstexpr Tconst Tclass Tchar Tbool Tauto Tasm TUndef TTilde TPtVirg TInclude TIfdefelse TIfdefelif TIfdefVersion TIfdefMisc TIfdefBool TIfdef TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_MacroDecl TIdent_Constructor TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TEndif TDefine TCppDirectiveOther TColCol_BeforeTypedef TCBrace ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production namespace_definition -> unnamed_namespace_definition

State 693:
## Known stack suffix:
## template_declaration
## LR(1) items:
declaration -> template_declaration . [ Twchar_t Tvolatile Tvoid Tvirtual Tusing Tunsigned Tunion Ttypeof Ttypename Ttypedef Tthread_local Ttemplate Tstruct Tstatic Tsigned Tshort Trestrict Tregister Tpublic Tprotected Tprivate Tnamespace Tmutable Tlong Tint Tinline Tfriend Tfloat Textern Texplicit Tenum Tdouble Tdecltype Tconstexpr Tconst Tclass Tchar Tbool Tauto Tasm TUndef TTilde TPtVirg TInclude TIfdefelse TIfdefelif TIfdefVersion TIfdefMisc TIfdefBool TIfdef TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_MacroDecl TIdent_Constructor TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TEndif TDefine TCppDirectiveOther TColCol_BeforeTypedef TCBrace ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production declaration -> template_declaration

State 694:
## Known stack suffix:
## Textern TString TOBrace optl(nonempty_list(declaration_cpp))
## LR(1) items:
linkage_specification -> Textern TString TOBrace optl(nonempty_list(declaration_cpp)) . TCBrace [ Twchar_t Tvolatile Tvoid Tvirtual Tusing Tunsigned Tunion Ttypeof Ttypename Ttypedef Tthread_local Ttemplate Tstruct Tstatic Tsigned Tshort Trestrict Tregister Tpublic Tprotected Tprivate Tnamespace Tmutable Tlong Tint Tinline Tfriend Tfloat Textern Texplicit Tenum Tdouble Tdecltype Tconstexpr Tconst Tclass Tchar Tbool Tauto Tasm TUndef TTilde TPtVirg TInclude TIfdefelse TIfdefelif TIfdefVersion TIfdefMisc TIfdefBool TIfdef TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_MacroDecl TIdent_Constructor TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TEndif TDefine TCppDirectiveOther TColCol_BeforeTypedef TCBrace ]
## Transitions:
-- On TCBrace shift to state 695
## Reductions:

State 695:
## Known stack suffix:
## Textern TString TOBrace optl(nonempty_list(declaration_cpp)) TCBrace
## LR(1) items:
linkage_specification -> Textern TString TOBrace optl(nonempty_list(declaration_cpp)) TCBrace . [ Twchar_t Tvolatile Tvoid Tvirtual Tusing Tunsigned Tunion Ttypeof Ttypename Ttypedef Tthread_local Ttemplate Tstruct Tstatic Tsigned Tshort Trestrict Tregister Tpublic Tprotected Tprivate Tnamespace Tmutable Tlong Tint Tinline Tfriend Tfloat Textern Texplicit Tenum Tdouble Tdecltype Tconstexpr Tconst Tclass Tchar Tbool Tauto Tasm TUndef TTilde TPtVirg TInclude TIfdefelse TIfdefelif TIfdefVersion TIfdefMisc TIfdefBool TIfdef TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_MacroDecl TIdent_Constructor TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TEndif TDefine TCppDirectiveOther TColCol_BeforeTypedef TCBrace ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production linkage_specification -> Textern TString TOBrace optl(nonempty_list(declaration_cpp)) TCBrace

State 696:
## Known stack suffix:
## option(Tinline)
## LR(1) items:
ctor_dtor -> option(Tinline) . TIdent_Constructor TOPar option(parameter_type_list) TCPar ctor_mem_initializer_list_opt compound [ Twchar_t Tvolatile Tvoid Tvirtual Tusing Tunsigned Tunion Ttypeof Ttypename Ttypedef Tthread_local Ttemplate Tstruct Tstatic Tsigned Tshort Trestrict Tregister Tpublic Tprotected Tprivate Tnamespace Tmutable Tlong Tint Tinline Tfriend Tfloat Textern Texplicit Tenum Tdouble Tdecltype Tconstexpr Tconst Tclass Tchar Tbool Tauto Tasm TUndef TTilde TPtVirg TInclude TIfdefelse TIfdefelif TIfdefVersion TIfdefMisc TIfdefBool TIfdef TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_MacroDecl TIdent_Constructor TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TEndif TDefine TCppDirectiveOther TColCol_BeforeTypedef TCBrace ]
## Transitions:
-- On TIdent_Constructor shift to state 697
## Reductions:

State 697:
## Known stack suffix:
## option(Tinline) TIdent_Constructor
## LR(1) items:
ctor_dtor -> option(Tinline) TIdent_Constructor . TOPar option(parameter_type_list) TCPar ctor_mem_initializer_list_opt compound [ Twchar_t Tvolatile Tvoid Tvirtual Tusing Tunsigned Tunion Ttypeof Ttypename Ttypedef Tthread_local Ttemplate Tstruct Tstatic Tsigned Tshort Trestrict Tregister Tpublic Tprotected Tprivate Tnamespace Tmutable Tlong Tint Tinline Tfriend Tfloat Textern Texplicit Tenum Tdouble Tdecltype Tconstexpr Tconst Tclass Tchar Tbool Tauto Tasm TUndef TTilde TPtVirg TInclude TIfdefelse TIfdefelif TIfdefVersion TIfdefMisc TIfdefBool TIfdef TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_MacroDecl TIdent_Constructor TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TEndif TDefine TCppDirectiveOther TColCol_BeforeTypedef TCBrace ]
## Transitions:
-- On TOPar shift to state 698
## Reductions:

State 698:
## Known stack suffix:
## option(Tinline) TIdent_Constructor TOPar
## LR(1) items:
ctor_dtor -> option(Tinline) TIdent_Constructor TOPar . option(parameter_type_list) TCPar ctor_mem_initializer_list_opt compound [ Twchar_t Tvolatile Tvoid Tvirtual Tusing Tunsigned Tunion Ttypeof Ttypename Ttypedef Tthread_local Ttemplate Tstruct Tstatic Tsigned Tshort Trestrict Tregister Tpublic Tprotected Tprivate Tnamespace Tmutable Tlong Tint Tinline Tfriend Tfloat Textern Texplicit Tenum Tdouble Tdecltype Tconstexpr Tconst Tclass Tchar Tbool Tauto Tasm TUndef TTilde TPtVirg TInclude TIfdefelse TIfdefelif TIfdefVersion TIfdefMisc TIfdefBool TIfdef TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_MacroDecl TIdent_Constructor TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TEndif TDefine TCppDirectiveOther TColCol_BeforeTypedef TCBrace ]
## Transitions:
-- On Twchar_t shift to state 1
-- On Tvolatile shift to state 2
-- On Tvoid shift to state 3
-- On Tvirtual shift to state 4
-- On Tunsigned shift to state 15
-- On Tunion shift to state 16
-- On Ttypeof shift to state 17
-- On Ttypename shift to state 19
-- On Ttypedef shift to state 96
-- On Tthread_local shift to state 97
-- On Tstruct shift to state 27
-- On Tstatic shift to state 98
-- On Tsigned shift to state 30
-- On Tshort shift to state 32
-- On Trestrict shift to state 65
-- On Tregister shift to state 99
-- On Tmutable shift to state 100
-- On Tlong shift to state 38
-- On Tint shift to state 39
-- On Tinline shift to state 101
-- On Tfriend shift to state 102
-- On Tfloat shift to state 40
-- On Textern shift to state 103
-- On Tenum shift to state 66
-- On Tdouble shift to state 41
-- On Tdecltype shift to state 45
-- On Tconstexpr shift to state 104
-- On Tconst shift to state 76
-- On Tclass shift to state 77
-- On Tchar shift to state 58
-- On Tbool shift to state 60
-- On Tauto shift to state 105
-- On TIdent_Typedef shift to state 20
-- On TIdent_TemplatenameInQualifier_BeforeTypedef shift to state 21
-- On TIdent_Templatename shift to state 108
-- On TIdent_ClassnameInQualifier_BeforeTypedef shift to state 111
-- On TIdent shift to state 453
-- On TColCol_BeforeTypedef shift to state 118
-- On type_spec shift to state 314
-- On type_name shift to state 182
-- On type_cplusplus_id shift to state 183
-- On template_id shift to state 120
-- On storage_class_spec shift to state 316
-- On simple_type_specifier shift to state 206
-- On parameter_type_list shift to state 699
-- On parameter_list shift to state 468
-- On parameter_decl2 shift to state 476
-- On parameter_decl shift to state 472
-- On option(parameter_type_list) shift to state 700
-- On nested_name_specifier2 shift to state 207
-- On function_spec shift to state 437
-- On enum_specifier shift to state 209
-- On enum_name_or_typedef_name_or_simple_class_name shift to state 123
-- On enum_head shift to state 210
-- On elaborated_type_specifier shift to state 274
-- On decltype_specifier shift to state 243
-- On decl_spec_seq shift to state 441
-- On decl_spec shift to state 473
-- On cv_qualif shift to state 475
-- On class_specifier shift to state 277
-- On class_or_namespace_name_for_qualifier2 shift to state 124
-- On class_key shift to state 278
-- On class_head shift to state 301
## Reductions:
-- On TCPar
--   reduce production option(parameter_type_list) ->

State 699:
## Known stack suffix:
## parameter_type_list
## LR(1) items:
option(parameter_type_list) -> parameter_type_list . [ TCPar ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production option(parameter_type_list) -> parameter_type_list

State 700:
## Known stack suffix:
## option(Tinline) TIdent_Constructor TOPar option(parameter_type_list)
## LR(1) items:
ctor_dtor -> option(Tinline) TIdent_Constructor TOPar option(parameter_type_list) . TCPar ctor_mem_initializer_list_opt compound [ Twchar_t Tvolatile Tvoid Tvirtual Tusing Tunsigned Tunion Ttypeof Ttypename Ttypedef Tthread_local Ttemplate Tstruct Tstatic Tsigned Tshort Trestrict Tregister Tpublic Tprotected Tprivate Tnamespace Tmutable Tlong Tint Tinline Tfriend Tfloat Textern Texplicit Tenum Tdouble Tdecltype Tconstexpr Tconst Tclass Tchar Tbool Tauto Tasm TUndef TTilde TPtVirg TInclude TIfdefelse TIfdefelif TIfdefVersion TIfdefMisc TIfdefBool TIfdef TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_MacroDecl TIdent_Constructor TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TEndif TDefine TCppDirectiveOther TColCol_BeforeTypedef TCBrace ]
## Transitions:
-- On TCPar shift to state 701
## Reductions:

State 701:
## Known stack suffix:
## option(Tinline) TIdent_Constructor TOPar option(parameter_type_list) TCPar
## LR(1) items:
ctor_dtor -> option(Tinline) TIdent_Constructor TOPar option(parameter_type_list) TCPar . ctor_mem_initializer_list_opt compound [ Twchar_t Tvolatile Tvoid Tvirtual Tusing Tunsigned Tunion Ttypeof Ttypename Ttypedef Tthread_local Ttemplate Tstruct Tstatic Tsigned Tshort Trestrict Tregister Tpublic Tprotected Tprivate Tnamespace Tmutable Tlong Tint Tinline Tfriend Tfloat Textern Texplicit Tenum Tdouble Tdecltype Tconstexpr Tconst Tclass Tchar Tbool Tauto Tasm TUndef TTilde TPtVirg TInclude TIfdefelse TIfdefelif TIfdefVersion TIfdefMisc TIfdefBool TIfdef TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_MacroDecl TIdent_Constructor TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TEndif TDefine TCppDirectiveOther TColCol_BeforeTypedef TCBrace ]
## Transitions:
-- On TCol shift to state 702
-- On ctor_mem_initializer_list_opt shift to state 713
## Reductions:
-- On TOBrace
--   reduce production ctor_mem_initializer_list_opt ->

State 702:
## Known stack suffix:
## TCol
## LR(1) items:
ctor_mem_initializer_list_opt -> TCol . listc(mem_initializer) [ TOBrace ]
## Transitions:
-- On Toperator shift to state 34
-- On TIdent_TemplatenameInQualifier shift to state 12
-- On TIdent_ClassnameInQualifier shift to state 112
-- On TIdent shift to state 166
-- On TColCol shift to state 703
-- On unqualified_id shift to state 179
-- On qualified_id shift to state 191
-- On primary_cplusplus_id shift to state 704
-- On operator_function_id shift to state 168
-- On nested_name_specifier shift to state 165
-- On mem_initializer_id shift to state 705
-- On mem_initializer shift to state 709
-- On listc(mem_initializer) shift to state 710
-- On id_expression shift to state 241
-- On conversion_function_id shift to state 169
-- On class_or_namespace_name_for_qualifier shift to state 170
## Reductions:

State 703:
## Known stack suffix:
## TColCol
## LR(1) items:
primary_cplusplus_id -> TColCol . TIdent [ TOPar ]
primary_cplusplus_id -> TColCol . operator_function_id [ TOPar ]
primary_cplusplus_id -> TColCol . qualified_id [ TOPar ]
## Transitions:
-- On Toperator shift to state 129
-- On TIdent_TemplatenameInQualifier shift to state 12
-- On TIdent_ClassnameInQualifier shift to state 112
-- On TIdent shift to state 162
-- On qualified_id shift to state 163
-- On operator_function_id shift to state 164
-- On nested_name_specifier shift to state 165
-- On class_or_namespace_name_for_qualifier shift to state 170
## Reductions:

State 704:
## Known stack suffix:
## primary_cplusplus_id
## LR(1) items:
mem_initializer_id -> primary_cplusplus_id . [ TOPar ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production mem_initializer_id -> primary_cplusplus_id

State 705:
## Known stack suffix:
## mem_initializer_id
## LR(1) items:
mem_initializer -> mem_initializer_id . TOPar optl(listc(argument)) TCPar [ TOBrace TComma ]
## Transitions:
-- On TOPar shift to state 706
## Reductions:

State 706:
## Known stack suffix:
## mem_initializer_id TOPar
## LR(1) items:
mem_initializer -> mem_initializer_id TOPar . optl(listc(argument)) TCPar [ TOBrace TComma ]
## Transitions:
-- On Twchar_t_Constr shift to state 14
-- On Twchar_t shift to state 1
-- On Tvolatile shift to state 2
-- On Tvoid shift to state 3
-- On Tunsigned shift to state 15
-- On Tunion shift to state 16
-- On Ttypeof shift to state 17
-- On Ttypename shift to state 19
-- On Ttypeid shift to state 23
-- On Ttrue shift to state 25
-- On Tthrow shift to state 47
-- On Tthis shift to state 26
-- On Tstruct shift to state 27
-- On Tstatic_cast shift to state 28
-- On Tsizeof shift to state 29
-- On Tsigned shift to state 30
-- On Tshort_Constr shift to state 31
-- On Tshort shift to state 32
-- On Trestrict shift to state 65
-- On Treinterpret_cast shift to state 33
-- On Toperator shift to state 34
-- On Tnullptr shift to state 48
-- On Tnull shift to state 49
-- On Tlong_Constr shift to state 50
-- On Tlong shift to state 38
-- On Tint_Constr shift to state 51
-- On Tint shift to state 39
-- On Tfloat_Constr shift to state 52
-- On Tfloat shift to state 40
-- On Tfalse shift to state 53
-- On Tenum shift to state 66
-- On Tdynamic_cast shift to state 54
-- On Tdouble_Constr shift to state 55
-- On Tdouble shift to state 41
-- On Tdecltype shift to state 45
-- On Tconst_cast shift to state 56
-- On Tconst shift to state 76
-- On Tclass shift to state 77
-- On Tchar_Constr shift to state 57
-- On Tchar shift to state 58
-- On Tbool_Constr shift to state 59
-- On Tbool shift to state 60
-- On TTilde shift to state 61
-- On TString shift to state 62
-- On TPlus shift to state 63
-- On TOPar shift to state 64
-- On TOCro_Lambda shift to state 78
-- On TMul shift to state 88
-- On TMinus shift to state 89
-- On TInt shift to state 90
-- On TInc shift to state 91
-- On TIdent_TypedefConstr shift to state 106
-- On TIdent_Typedef shift to state 20
-- On TIdent_TemplatenameInQualifier_BeforeTypedef shift to state 21
-- On TIdent_TemplatenameInQualifier shift to state 12
-- On TIdent_Templatename shift to state 108
-- On TIdent_MacroString shift to state 110
-- On TIdent_ClassnameInQualifier_BeforeTypedef shift to state 111
-- On TIdent_ClassnameInQualifier shift to state 112
-- On TIdent shift to state 113
-- On TFloat shift to state 116
-- On TEllipsis shift to state 201
-- On TDec shift to state 117
-- On TColCol_BeforeTypedef shift to state 118
-- On TColCol shift to state 128
-- On TChar shift to state 174
-- On TBang shift to state 175
-- On TAny_Action shift to state 202
-- On TAndLog shift to state 176
-- On TAnd shift to state 177
-- On LDots shift to state 178
-- On unqualified_id shift to state 179
-- On unary_op shift to state 180
-- On unary_expr shift to state 181
-- On type_spec shift to state 204
-- On type_name shift to state 182
-- On type_id shift to state 224
-- On type_cplusplus_id shift to state 183
-- On template_id shift to state 120
-- On string_elem shift to state 184
-- On spec_qualif_list shift to state 225
-- On simple_type_specifier shift to state 266
-- On shift_expr shift to state 217
-- On relational_expr shift to state 229
-- On qualified_id shift to state 191
-- On primary_expr shift to state 192
-- On primary_cplusplus_id shift to state 193
-- On postfix_expr shift to state 194
-- On pm_expr shift to state 219
-- On optl(listc(argument)) shift to state 707
-- On option(TColCol) shift to state 221
-- On operator_function_id shift to state 168
-- On nonempty_list(TAny_Action) shift to state 269
-- On new_expr shift to state 233
-- On nested_name_specifier2 shift to state 207
-- On nested_name_specifier shift to state 165
-- On multiplicative_expr shift to state 234
-- On logical_or_expr shift to state 246
-- On logical_and_expr shift to state 250
-- On literal shift to state 238
-- On listc(argument) shift to state 270
-- On lambda_introducer shift to state 239
-- On inclusive_or_expr shift to state 272
-- On id_expression shift to state 241
-- On exclusive_or_expr shift to state 273
-- On equality_expr shift to state 256
-- On enum_specifier shift to state 209
-- On enum_name_or_typedef_name_or_simple_class_name shift to state 123
-- On enum_head shift to state 210
-- On elaborated_type_specifier shift to state 274
-- On delete_expr shift to state 242
-- On decltype_specifier shift to state 243
-- On cv_qualif shift to state 275
-- On cpp_cast_operator shift to state 244
-- On conversion_function_id shift to state 169
-- On cond_expr shift to state 330
-- On class_specifier shift to state 277
-- On class_or_namespace_name_for_qualifier2 shift to state 124
-- On class_or_namespace_name_for_qualifier shift to state 170
-- On class_key shift to state 278
-- On class_head shift to state 301
-- On cast_operator_expr shift to state 261
-- On cast_expr shift to state 331
-- On cast_constructor_expr shift to state 263
-- On basic_type_2 shift to state 264
-- On assign_expr shift to state 354
-- On argument shift to state 355
-- On and_expr shift to state 334
-- On additive_expr shift to state 341
## Reductions:
-- On Tnew Tdelete
--   reduce production option(TColCol) ->
-- On TCPar
--   reduce production optl(listc(argument)) ->

State 707:
## Known stack suffix:
## mem_initializer_id TOPar optl(listc(argument))
## LR(1) items:
mem_initializer -> mem_initializer_id TOPar optl(listc(argument)) . TCPar [ TOBrace TComma ]
## Transitions:
-- On TCPar shift to state 708
## Reductions:

State 708:
## Known stack suffix:
## mem_initializer_id TOPar optl(listc(argument)) TCPar
## LR(1) items:
mem_initializer -> mem_initializer_id TOPar optl(listc(argument)) TCPar . [ TOBrace TComma ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production mem_initializer -> mem_initializer_id TOPar optl(listc(argument)) TCPar

State 709:
## Known stack suffix:
## mem_initializer
## LR(1) items:
listc(mem_initializer) -> mem_initializer . [ TOBrace TComma ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production listc(mem_initializer) -> mem_initializer

State 710:
## Known stack suffix:
## TCol listc(mem_initializer)
## LR(1) items:
ctor_mem_initializer_list_opt -> TCol listc(mem_initializer) . [ TOBrace ]
listc(mem_initializer) -> listc(mem_initializer) . TComma mem_initializer [ TOBrace TComma ]
## Transitions:
-- On TComma shift to state 711
## Reductions:
-- On TOBrace
--   reduce production ctor_mem_initializer_list_opt -> TCol listc(mem_initializer)

State 711:
## Known stack suffix:
## listc(mem_initializer) TComma
## LR(1) items:
listc(mem_initializer) -> listc(mem_initializer) TComma . mem_initializer [ TOBrace TComma ]
## Transitions:
-- On Toperator shift to state 34
-- On TIdent_TemplatenameInQualifier shift to state 12
-- On TIdent_ClassnameInQualifier shift to state 112
-- On TIdent shift to state 166
-- On TColCol shift to state 703
-- On unqualified_id shift to state 179
-- On qualified_id shift to state 191
-- On primary_cplusplus_id shift to state 704
-- On operator_function_id shift to state 168
-- On nested_name_specifier shift to state 165
-- On mem_initializer_id shift to state 705
-- On mem_initializer shift to state 712
-- On id_expression shift to state 241
-- On conversion_function_id shift to state 169
-- On class_or_namespace_name_for_qualifier shift to state 170
## Reductions:

State 712:
## Known stack suffix:
## listc(mem_initializer) TComma mem_initializer
## LR(1) items:
listc(mem_initializer) -> listc(mem_initializer) TComma mem_initializer . [ TOBrace TComma ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production listc(mem_initializer) -> listc(mem_initializer) TComma mem_initializer

State 713:
## Known stack suffix:
## option(Tinline) TIdent_Constructor TOPar option(parameter_type_list) TCPar ctor_mem_initializer_list_opt
## LR(1) items:
ctor_dtor -> option(Tinline) TIdent_Constructor TOPar option(parameter_type_list) TCPar ctor_mem_initializer_list_opt . compound [ Twchar_t Tvolatile Tvoid Tvirtual Tusing Tunsigned Tunion Ttypeof Ttypename Ttypedef Tthread_local Ttemplate Tstruct Tstatic Tsigned Tshort Trestrict Tregister Tpublic Tprotected Tprivate Tnamespace Tmutable Tlong Tint Tinline Tfriend Tfloat Textern Texplicit Tenum Tdouble Tdecltype Tconstexpr Tconst Tclass Tchar Tbool Tauto Tasm TUndef TTilde TPtVirg TInclude TIfdefelse TIfdefelif TIfdefVersion TIfdefMisc TIfdefBool TIfdef TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_MacroDecl TIdent_Constructor TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TEndif TDefine TCppDirectiveOther TColCol_BeforeTypedef TCBrace ]
## Transitions:
-- On TOBrace shift to state 93
-- On compound shift to state 714
## Reductions:

State 714:
## Known stack suffix:
## option(Tinline) TIdent_Constructor TOPar option(parameter_type_list) TCPar ctor_mem_initializer_list_opt compound
## LR(1) items:
ctor_dtor -> option(Tinline) TIdent_Constructor TOPar option(parameter_type_list) TCPar ctor_mem_initializer_list_opt compound . [ Twchar_t Tvolatile Tvoid Tvirtual Tusing Tunsigned Tunion Ttypeof Ttypename Ttypedef Tthread_local Ttemplate Tstruct Tstatic Tsigned Tshort Trestrict Tregister Tpublic Tprotected Tprivate Tnamespace Tmutable Tlong Tint Tinline Tfriend Tfloat Textern Texplicit Tenum Tdouble Tdecltype Tconstexpr Tconst Tclass Tchar Tbool Tauto Tasm TUndef TTilde TPtVirg TInclude TIfdefelse TIfdefelif TIfdefVersion TIfdefMisc TIfdefBool TIfdef TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_MacroDecl TIdent_Constructor TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TEndif TDefine TCppDirectiveOther TColCol_BeforeTypedef TCBrace ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production ctor_dtor -> option(Tinline) TIdent_Constructor TOPar option(parameter_type_list) TCPar ctor_mem_initializer_list_opt compound

State 715:
## Known stack suffix:
## nonempty_list(declaration_cpp)
## LR(1) items:
optl(nonempty_list(declaration_cpp)) -> nonempty_list(declaration_cpp) . [ TCBrace ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production optl(nonempty_list(declaration_cpp)) -> nonempty_list(declaration_cpp)

State 716:
## Known stack suffix:
## nested_name_specifier
## LR(1) items:
ctor_dtor -> nested_name_specifier . TIdent_Constructor TOPar option(parameter_type_list) TCPar ctor_mem_initializer_list_opt compound [ Twchar_t Tvolatile Tvoid Tvirtual Tusing Tunsigned Tunion Ttypeof Ttypename Ttypedef Tthread_local Ttemplate Tstruct Tstatic Tsigned Tshort Trestrict Tregister Tpublic Tprotected Tprivate Tnamespace Tmutable Tlong Tint Tinline Tfriend Tfloat Textern Texplicit Tenum Tdouble Tdecltype Tconstexpr Tconst Tclass Tchar Tbool Tauto Tasm TUndef TTilde TPtVirg TInclude TIfdefelse TIfdefelif TIfdefVersion TIfdefMisc TIfdefBool TIfdef TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_MacroDecl TIdent_Constructor TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TEndif TDefine TCppDirectiveOther TColCol_BeforeTypedef TCBrace ]
ctor_dtor -> nested_name_specifier . TTilde ident TOPar option(Tvoid) TCPar compound [ Twchar_t Tvolatile Tvoid Tvirtual Tusing Tunsigned Tunion Ttypeof Ttypename Ttypedef Tthread_local Ttemplate Tstruct Tstatic Tsigned Tshort Trestrict Tregister Tpublic Tprotected Tprivate Tnamespace Tmutable Tlong Tint Tinline Tfriend Tfloat Textern Texplicit Tenum Tdouble Tdecltype Tconstexpr Tconst Tclass Tchar Tbool Tauto Tasm TUndef TTilde TPtVirg TInclude TIfdefelse TIfdefelif TIfdefVersion TIfdefMisc TIfdefBool TIfdef TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_MacroDecl TIdent_Constructor TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TEndif TDefine TCppDirectiveOther TColCol_BeforeTypedef TCBrace ]
## Transitions:
-- On TTilde shift to state 717
-- On TIdent_Constructor shift to state 723
## Reductions:

State 717:
## Known stack suffix:
## nested_name_specifier TTilde
## LR(1) items:
ctor_dtor -> nested_name_specifier TTilde . ident TOPar option(Tvoid) TCPar compound [ Twchar_t Tvolatile Tvoid Tvirtual Tusing Tunsigned Tunion Ttypeof Ttypename Ttypedef Tthread_local Ttemplate Tstruct Tstatic Tsigned Tshort Trestrict Tregister Tpublic Tprotected Tprivate Tnamespace Tmutable Tlong Tint Tinline Tfriend Tfloat Textern Texplicit Tenum Tdouble Tdecltype Tconstexpr Tconst Tclass Tchar Tbool Tauto Tasm TUndef TTilde TPtVirg TInclude TIfdefelse TIfdefelif TIfdefVersion TIfdefMisc TIfdefBool TIfdef TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_MacroDecl TIdent_Constructor TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TEndif TDefine TCppDirectiveOther TColCol_BeforeTypedef TCBrace ]
## Transitions:
-- On TIdent_Typedef shift to state 68
-- On TIdent shift to state 69
-- On ident shift to state 718
## Reductions:

State 718:
## Known stack suffix:
## nested_name_specifier TTilde ident
## LR(1) items:
ctor_dtor -> nested_name_specifier TTilde ident . TOPar option(Tvoid) TCPar compound [ Twchar_t Tvolatile Tvoid Tvirtual Tusing Tunsigned Tunion Ttypeof Ttypename Ttypedef Tthread_local Ttemplate Tstruct Tstatic Tsigned Tshort Trestrict Tregister Tpublic Tprotected Tprivate Tnamespace Tmutable Tlong Tint Tinline Tfriend Tfloat Textern Texplicit Tenum Tdouble Tdecltype Tconstexpr Tconst Tclass Tchar Tbool Tauto Tasm TUndef TTilde TPtVirg TInclude TIfdefelse TIfdefelif TIfdefVersion TIfdefMisc TIfdefBool TIfdef TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_MacroDecl TIdent_Constructor TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TEndif TDefine TCppDirectiveOther TColCol_BeforeTypedef TCBrace ]
## Transitions:
-- On TOPar shift to state 719
## Reductions:

State 719:
## Known stack suffix:
## nested_name_specifier TTilde ident TOPar
## LR(1) items:
ctor_dtor -> nested_name_specifier TTilde ident TOPar . option(Tvoid) TCPar compound [ Twchar_t Tvolatile Tvoid Tvirtual Tusing Tunsigned Tunion Ttypeof Ttypename Ttypedef Tthread_local Ttemplate Tstruct Tstatic Tsigned Tshort Trestrict Tregister Tpublic Tprotected Tprivate Tnamespace Tmutable Tlong Tint Tinline Tfriend Tfloat Textern Texplicit Tenum Tdouble Tdecltype Tconstexpr Tconst Tclass Tchar Tbool Tauto Tasm TUndef TTilde TPtVirg TInclude TIfdefelse TIfdefelif TIfdefVersion TIfdefMisc TIfdefBool TIfdef TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_MacroDecl TIdent_Constructor TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TEndif TDefine TCppDirectiveOther TColCol_BeforeTypedef TCBrace ]
## Transitions:
-- On Tvoid shift to state 398
-- On option(Tvoid) shift to state 720
## Reductions:
-- On TCPar
--   reduce production option(Tvoid) ->

State 720:
## Known stack suffix:
## nested_name_specifier TTilde ident TOPar option(Tvoid)
## LR(1) items:
ctor_dtor -> nested_name_specifier TTilde ident TOPar option(Tvoid) . TCPar compound [ Twchar_t Tvolatile Tvoid Tvirtual Tusing Tunsigned Tunion Ttypeof Ttypename Ttypedef Tthread_local Ttemplate Tstruct Tstatic Tsigned Tshort Trestrict Tregister Tpublic Tprotected Tprivate Tnamespace Tmutable Tlong Tint Tinline Tfriend Tfloat Textern Texplicit Tenum Tdouble Tdecltype Tconstexpr Tconst Tclass Tchar Tbool Tauto Tasm TUndef TTilde TPtVirg TInclude TIfdefelse TIfdefelif TIfdefVersion TIfdefMisc TIfdefBool TIfdef TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_MacroDecl TIdent_Constructor TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TEndif TDefine TCppDirectiveOther TColCol_BeforeTypedef TCBrace ]
## Transitions:
-- On TCPar shift to state 721
## Reductions:

State 721:
## Known stack suffix:
## nested_name_specifier TTilde ident TOPar option(Tvoid) TCPar
## LR(1) items:
ctor_dtor -> nested_name_specifier TTilde ident TOPar option(Tvoid) TCPar . compound [ Twchar_t Tvolatile Tvoid Tvirtual Tusing Tunsigned Tunion Ttypeof Ttypename Ttypedef Tthread_local Ttemplate Tstruct Tstatic Tsigned Tshort Trestrict Tregister Tpublic Tprotected Tprivate Tnamespace Tmutable Tlong Tint Tinline Tfriend Tfloat Textern Texplicit Tenum Tdouble Tdecltype Tconstexpr Tconst Tclass Tchar Tbool Tauto Tasm TUndef TTilde TPtVirg TInclude TIfdefelse TIfdefelif TIfdefVersion TIfdefMisc TIfdefBool TIfdef TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_MacroDecl TIdent_Constructor TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TEndif TDefine TCppDirectiveOther TColCol_BeforeTypedef TCBrace ]
## Transitions:
-- On TOBrace shift to state 93
-- On compound shift to state 722
## Reductions:

State 722:
## Known stack suffix:
## nested_name_specifier TTilde ident TOPar option(Tvoid) TCPar compound
## LR(1) items:
ctor_dtor -> nested_name_specifier TTilde ident TOPar option(Tvoid) TCPar compound . [ Twchar_t Tvolatile Tvoid Tvirtual Tusing Tunsigned Tunion Ttypeof Ttypename Ttypedef Tthread_local Ttemplate Tstruct Tstatic Tsigned Tshort Trestrict Tregister Tpublic Tprotected Tprivate Tnamespace Tmutable Tlong Tint Tinline Tfriend Tfloat Textern Texplicit Tenum Tdouble Tdecltype Tconstexpr Tconst Tclass Tchar Tbool Tauto Tasm TUndef TTilde TPtVirg TInclude TIfdefelse TIfdefelif TIfdefVersion TIfdefMisc TIfdefBool TIfdef TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_MacroDecl TIdent_Constructor TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TEndif TDefine TCppDirectiveOther TColCol_BeforeTypedef TCBrace ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production ctor_dtor -> nested_name_specifier TTilde ident TOPar option(Tvoid) TCPar compound

State 723:
## Known stack suffix:
## nested_name_specifier TIdent_Constructor
## LR(1) items:
ctor_dtor -> nested_name_specifier TIdent_Constructor . TOPar option(parameter_type_list) TCPar ctor_mem_initializer_list_opt compound [ Twchar_t Tvolatile Tvoid Tvirtual Tusing Tunsigned Tunion Ttypeof Ttypename Ttypedef Tthread_local Ttemplate Tstruct Tstatic Tsigned Tshort Trestrict Tregister Tpublic Tprotected Tprivate Tnamespace Tmutable Tlong Tint Tinline Tfriend Tfloat Textern Texplicit Tenum Tdouble Tdecltype Tconstexpr Tconst Tclass Tchar Tbool Tauto Tasm TUndef TTilde TPtVirg TInclude TIfdefelse TIfdefelif TIfdefVersion TIfdefMisc TIfdefBool TIfdef TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_MacroDecl TIdent_Constructor TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TEndif TDefine TCppDirectiveOther TColCol_BeforeTypedef TCBrace ]
## Transitions:
-- On TOPar shift to state 724
## Reductions:

State 724:
## Known stack suffix:
## nested_name_specifier TIdent_Constructor TOPar
## LR(1) items:
ctor_dtor -> nested_name_specifier TIdent_Constructor TOPar . option(parameter_type_list) TCPar ctor_mem_initializer_list_opt compound [ Twchar_t Tvolatile Tvoid Tvirtual Tusing Tunsigned Tunion Ttypeof Ttypename Ttypedef Tthread_local Ttemplate Tstruct Tstatic Tsigned Tshort Trestrict Tregister Tpublic Tprotected Tprivate Tnamespace Tmutable Tlong Tint Tinline Tfriend Tfloat Textern Texplicit Tenum Tdouble Tdecltype Tconstexpr Tconst Tclass Tchar Tbool Tauto Tasm TUndef TTilde TPtVirg TInclude TIfdefelse TIfdefelif TIfdefVersion TIfdefMisc TIfdefBool TIfdef TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_MacroDecl TIdent_Constructor TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TEndif TDefine TCppDirectiveOther TColCol_BeforeTypedef TCBrace ]
## Transitions:
-- On Twchar_t shift to state 1
-- On Tvolatile shift to state 2
-- On Tvoid shift to state 3
-- On Tvirtual shift to state 4
-- On Tunsigned shift to state 15
-- On Tunion shift to state 16
-- On Ttypeof shift to state 17
-- On Ttypename shift to state 19
-- On Ttypedef shift to state 96
-- On Tthread_local shift to state 97
-- On Tstruct shift to state 27
-- On Tstatic shift to state 98
-- On Tsigned shift to state 30
-- On Tshort shift to state 32
-- On Trestrict shift to state 65
-- On Tregister shift to state 99
-- On Tmutable shift to state 100
-- On Tlong shift to state 38
-- On Tint shift to state 39
-- On Tinline shift to state 101
-- On Tfriend shift to state 102
-- On Tfloat shift to state 40
-- On Textern shift to state 103
-- On Tenum shift to state 66
-- On Tdouble shift to state 41
-- On Tdecltype shift to state 45
-- On Tconstexpr shift to state 104
-- On Tconst shift to state 76
-- On Tclass shift to state 77
-- On Tchar shift to state 58
-- On Tbool shift to state 60
-- On Tauto shift to state 105
-- On TIdent_Typedef shift to state 20
-- On TIdent_TemplatenameInQualifier_BeforeTypedef shift to state 21
-- On TIdent_Templatename shift to state 108
-- On TIdent_ClassnameInQualifier_BeforeTypedef shift to state 111
-- On TIdent shift to state 453
-- On TColCol_BeforeTypedef shift to state 118
-- On type_spec shift to state 314
-- On type_name shift to state 182
-- On type_cplusplus_id shift to state 183
-- On template_id shift to state 120
-- On storage_class_spec shift to state 316
-- On simple_type_specifier shift to state 206
-- On parameter_type_list shift to state 699
-- On parameter_list shift to state 468
-- On parameter_decl2 shift to state 476
-- On parameter_decl shift to state 472
-- On option(parameter_type_list) shift to state 725
-- On nested_name_specifier2 shift to state 207
-- On function_spec shift to state 437
-- On enum_specifier shift to state 209
-- On enum_name_or_typedef_name_or_simple_class_name shift to state 123
-- On enum_head shift to state 210
-- On elaborated_type_specifier shift to state 274
-- On decltype_specifier shift to state 243
-- On decl_spec_seq shift to state 441
-- On decl_spec shift to state 473
-- On cv_qualif shift to state 475
-- On class_specifier shift to state 277
-- On class_or_namespace_name_for_qualifier2 shift to state 124
-- On class_key shift to state 278
-- On class_head shift to state 301
## Reductions:
-- On TCPar
--   reduce production option(parameter_type_list) ->

State 725:
## Known stack suffix:
## nested_name_specifier TIdent_Constructor TOPar option(parameter_type_list)
## LR(1) items:
ctor_dtor -> nested_name_specifier TIdent_Constructor TOPar option(parameter_type_list) . TCPar ctor_mem_initializer_list_opt compound [ Twchar_t Tvolatile Tvoid Tvirtual Tusing Tunsigned Tunion Ttypeof Ttypename Ttypedef Tthread_local Ttemplate Tstruct Tstatic Tsigned Tshort Trestrict Tregister Tpublic Tprotected Tprivate Tnamespace Tmutable Tlong Tint Tinline Tfriend Tfloat Textern Texplicit Tenum Tdouble Tdecltype Tconstexpr Tconst Tclass Tchar Tbool Tauto Tasm TUndef TTilde TPtVirg TInclude TIfdefelse TIfdefelif TIfdefVersion TIfdefMisc TIfdefBool TIfdef TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_MacroDecl TIdent_Constructor TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TEndif TDefine TCppDirectiveOther TColCol_BeforeTypedef TCBrace ]
## Transitions:
-- On TCPar shift to state 726
## Reductions:

State 726:
## Known stack suffix:
## nested_name_specifier TIdent_Constructor TOPar option(parameter_type_list) TCPar
## LR(1) items:
ctor_dtor -> nested_name_specifier TIdent_Constructor TOPar option(parameter_type_list) TCPar . ctor_mem_initializer_list_opt compound [ Twchar_t Tvolatile Tvoid Tvirtual Tusing Tunsigned Tunion Ttypeof Ttypename Ttypedef Tthread_local Ttemplate Tstruct Tstatic Tsigned Tshort Trestrict Tregister Tpublic Tprotected Tprivate Tnamespace Tmutable Tlong Tint Tinline Tfriend Tfloat Textern Texplicit Tenum Tdouble Tdecltype Tconstexpr Tconst Tclass Tchar Tbool Tauto Tasm TUndef TTilde TPtVirg TInclude TIfdefelse TIfdefelif TIfdefVersion TIfdefMisc TIfdefBool TIfdef TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_MacroDecl TIdent_Constructor TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TEndif TDefine TCppDirectiveOther TColCol_BeforeTypedef TCBrace ]
## Transitions:
-- On TCol shift to state 702
-- On ctor_mem_initializer_list_opt shift to state 727
## Reductions:
-- On TOBrace
--   reduce production ctor_mem_initializer_list_opt ->

State 727:
## Known stack suffix:
## nested_name_specifier TIdent_Constructor TOPar option(parameter_type_list) TCPar ctor_mem_initializer_list_opt
## LR(1) items:
ctor_dtor -> nested_name_specifier TIdent_Constructor TOPar option(parameter_type_list) TCPar ctor_mem_initializer_list_opt . compound [ Twchar_t Tvolatile Tvoid Tvirtual Tusing Tunsigned Tunion Ttypeof Ttypename Ttypedef Tthread_local Ttemplate Tstruct Tstatic Tsigned Tshort Trestrict Tregister Tpublic Tprotected Tprivate Tnamespace Tmutable Tlong Tint Tinline Tfriend Tfloat Textern Texplicit Tenum Tdouble Tdecltype Tconstexpr Tconst Tclass Tchar Tbool Tauto Tasm TUndef TTilde TPtVirg TInclude TIfdefelse TIfdefelif TIfdefVersion TIfdefMisc TIfdefBool TIfdef TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_MacroDecl TIdent_Constructor TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TEndif TDefine TCppDirectiveOther TColCol_BeforeTypedef TCBrace ]
## Transitions:
-- On TOBrace shift to state 93
-- On compound shift to state 728
## Reductions:

State 728:
## Known stack suffix:
## nested_name_specifier TIdent_Constructor TOPar option(parameter_type_list) TCPar ctor_mem_initializer_list_opt compound
## LR(1) items:
ctor_dtor -> nested_name_specifier TIdent_Constructor TOPar option(parameter_type_list) TCPar ctor_mem_initializer_list_opt compound . [ Twchar_t Tvolatile Tvoid Tvirtual Tusing Tunsigned Tunion Ttypeof Ttypename Ttypedef Tthread_local Ttemplate Tstruct Tstatic Tsigned Tshort Trestrict Tregister Tpublic Tprotected Tprivate Tnamespace Tmutable Tlong Tint Tinline Tfriend Tfloat Textern Texplicit Tenum Tdouble Tdecltype Tconstexpr Tconst Tclass Tchar Tbool Tauto Tasm TUndef TTilde TPtVirg TInclude TIfdefelse TIfdefelif TIfdefVersion TIfdefMisc TIfdefBool TIfdef TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_MacroDecl TIdent_Constructor TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TEndif TDefine TCppDirectiveOther TColCol_BeforeTypedef TCBrace ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production ctor_dtor -> nested_name_specifier TIdent_Constructor TOPar option(parameter_type_list) TCPar ctor_mem_initializer_list_opt compound

State 729:
## Known stack suffix:
## namespace_definition
## LR(1) items:
declaration -> namespace_definition . [ Twchar_t Tvolatile Tvoid Tvirtual Tusing Tunsigned Tunion Ttypeof Ttypename Ttypedef Tthread_local Ttemplate Tstruct Tstatic Tsigned Tshort Trestrict Tregister Tpublic Tprotected Tprivate Tnamespace Tmutable Tlong Tint Tinline Tfriend Tfloat Textern Texplicit Tenum Tdouble Tdecltype Tconstexpr Tconst Tclass Tchar Tbool Tauto Tasm TUndef TTilde TPtVirg TInclude TIfdefelse TIfdefelif TIfdefVersion TIfdefMisc TIfdefBool TIfdef TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_MacroDecl TIdent_Constructor TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TEndif TDefine TCppDirectiveOther TColCol_BeforeTypedef TCBrace ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production declaration -> namespace_definition

State 730:
## Known stack suffix:
## named_namespace_definition
## LR(1) items:
namespace_definition -> named_namespace_definition . [ Twchar_t Tvolatile Tvoid Tvirtual Tusing Tunsigned Tunion Ttypeof Ttypename Ttypedef Tthread_local Ttemplate Tstruct Tstatic Tsigned Tshort Trestrict Tregister Tpublic Tprotected Tprivate Tnamespace Tmutable Tlong Tint Tinline Tfriend Tfloat Textern Texplicit Tenum Tdouble Tdecltype Tconstexpr Tconst Tclass Tchar Tbool Tauto Tasm TUndef TTilde TPtVirg TInclude TIfdefelse TIfdefelif TIfdefVersion TIfdefMisc TIfdefBool TIfdef TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_MacroDecl TIdent_Constructor TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TEndif TDefine TCppDirectiveOther TColCol_BeforeTypedef TCBrace ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production namespace_definition -> named_namespace_definition

State 731:
## Known stack suffix:
## linkage_specification
## LR(1) items:
declaration -> linkage_specification . [ Twchar_t Tvolatile Tvoid Tvirtual Tusing Tunsigned Tunion Ttypeof Ttypename Ttypedef Tthread_local Ttemplate Tstruct Tstatic Tsigned Tshort Trestrict Tregister Tpublic Tprotected Tprivate Tnamespace Tmutable Tlong Tint Tinline Tfriend Tfloat Textern Texplicit Tenum Tdouble Tdecltype Tconstexpr Tconst Tclass Tchar Tbool Tauto Tasm TUndef TTilde TPtVirg TInclude TIfdefelse TIfdefelif TIfdefVersion TIfdefMisc TIfdefBool TIfdef TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_MacroDecl TIdent_Constructor TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TEndif TDefine TCppDirectiveOther TColCol_BeforeTypedef TCBrace ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production declaration -> linkage_specification

State 732:
## Known stack suffix:
## function_definition
## LR(1) items:
declaration -> function_definition . [ Twchar_t Tvolatile Tvoid Tvirtual Tusing Tunsigned Tunion Ttypeof Ttypename Ttypedef Tthread_local Ttemplate Tstruct Tstatic Tsigned Tshort Trestrict Tregister Tpublic Tprotected Tprivate Tnamespace Tmutable Tlong Tint Tinline Tfriend Tfloat Textern Texplicit Tenum Tdouble Tdecltype Tconstexpr Tconst Tclass Tchar Tbool Tauto Tasm TUndef TTilde TPtVirg TInclude TIfdefelse TIfdefelif TIfdefVersion TIfdefMisc TIfdefBool TIfdef TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_MacroDecl TIdent_Constructor TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TEndif TDefine TCppDirectiveOther TColCol_BeforeTypedef TCBrace ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production declaration -> function_definition

State 733:
## Known stack suffix:
## explicit_specialization
## LR(1) items:
declaration -> explicit_specialization . [ Twchar_t Tvolatile Tvoid Tvirtual Tusing Tunsigned Tunion Ttypeof Ttypename Ttypedef Tthread_local Ttemplate Tstruct Tstatic Tsigned Tshort Trestrict Tregister Tpublic Tprotected Tprivate Tnamespace Tmutable Tlong Tint Tinline Tfriend Tfloat Textern Texplicit Tenum Tdouble Tdecltype Tconstexpr Tconst Tclass Tchar Tbool Tauto Tasm TUndef TTilde TPtVirg TInclude TIfdefelse TIfdefelif TIfdefVersion TIfdefMisc TIfdefBool TIfdef TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_MacroDecl TIdent_Constructor TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TEndif TDefine TCppDirectiveOther TColCol_BeforeTypedef TCBrace ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production declaration -> explicit_specialization

State 734:
## Known stack suffix:
## declaration_cpp
## LR(1) items:
nonempty_list(declaration_cpp) -> declaration_cpp . [ TCBrace ]
nonempty_list(declaration_cpp) -> declaration_cpp . nonempty_list(declaration_cpp) [ TCBrace ]
## Transitions:
-- On Twchar_t shift to state 1
-- On Tvolatile shift to state 2
-- On Tvoid shift to state 3
-- On Tvirtual shift to state 4
-- On Tusing shift to state 5
-- On Tunsigned shift to state 15
-- On Tunion shift to state 16
-- On Ttypeof shift to state 17
-- On Ttypename shift to state 19
-- On Ttypedef shift to state 96
-- On Tthread_local shift to state 97
-- On Ttemplate shift to state 320
-- On Tstruct shift to state 27
-- On Tstatic shift to state 323
-- On Tsigned shift to state 30
-- On Tshort shift to state 32
-- On Trestrict shift to state 65
-- On Tregister shift to state 99
-- On Tnamespace shift to state 361
-- On Tmutable shift to state 100
-- On Tlong shift to state 38
-- On Tint shift to state 39
-- On Tinline shift to state 363
-- On Tfriend shift to state 102
-- On Tfloat shift to state 40
-- On Textern shift to state 364
-- On Tenum shift to state 66
-- On Tdouble shift to state 41
-- On Tdecltype shift to state 45
-- On Tconstexpr shift to state 104
-- On Tconst shift to state 76
-- On Tclass shift to state 77
-- On Tchar shift to state 58
-- On Tbool shift to state 60
-- On Tauto shift to state 105
-- On Tasm shift to state 366
-- On TUndef shift to state 415
-- On TTilde shift to state 395
-- On TPtVirg shift to state 413
-- On TInclude shift to state 416
-- On TIfdefelse shift to state 417
-- On TIfdefelif shift to state 418
-- On TIfdefVersion shift to state 419
-- On TIfdefMisc shift to state 420
-- On TIfdefBool shift to state 421
-- On TIfdef shift to state 422
-- On TIdent_Typedef shift to state 20
-- On TIdent_TemplatenameInQualifier_BeforeTypedef shift to state 21
-- On TIdent_TemplatenameInQualifier shift to state 12
-- On TIdent_Templatename shift to state 108
-- On TIdent_MacroDecl shift to state 423
-- On TIdent_ClassnameInQualifier_BeforeTypedef shift to state 111
-- On TIdent_ClassnameInQualifier shift to state 112
-- On TEndif shift to state 428
-- On TDefine shift to state 429
-- On TCppDirectiveOther shift to state 691
-- On TColCol_BeforeTypedef shift to state 118
-- On using_directive shift to state 581
-- On using_declaration shift to state 582
-- On unnamed_namespace_definition shift to state 692
-- On type_spec shift to state 314
-- On type_name shift to state 182
-- On type_cplusplus_id shift to state 183
-- On template_id shift to state 120
-- On template_declaration shift to state 693
-- On storage_class_spec shift to state 316
-- On simple_type_specifier shift to state 206
-- On simple_declaration shift to state 585
-- On option(Tinline) shift to state 696
-- On nonempty_list(declaration_cpp) shift to state 735
-- On nested_name_specifier2 shift to state 207
-- On nested_name_specifier shift to state 716
-- On namespace_definition shift to state 729
-- On namespace_alias_definition shift to state 587
-- On named_namespace_definition shift to state 730
-- On linkage_specification shift to state 731
-- On function_spec shift to state 437
-- On function_definition shift to state 732
-- On explicit_specialization shift to state 733
-- On enum_specifier shift to state 209
-- On enum_name_or_typedef_name_or_simple_class_name shift to state 123
-- On enum_head shift to state 210
-- On elaborated_type_specifier shift to state 274
-- On decltype_specifier shift to state 243
-- On declaration_cpp shift to state 734
-- On declaration shift to state 736
-- On decl_spec_seq shift to state 599
-- On decl_spec shift to state 473
-- On cv_qualif shift to state 475
-- On ctor_dtor shift to state 737
-- On cpp_ifdef_directive shift to state 738
-- On cpp_directive shift to state 739
-- On class_specifier shift to state 277
-- On class_or_namespace_name_for_qualifier2 shift to state 124
-- On class_or_namespace_name_for_qualifier shift to state 170
-- On class_key shift to state 278
-- On class_head shift to state 301
-- On block_declaration shift to state 740
-- On asm_definition shift to state 617
## Reductions:
-- On TCBrace
--   reduce production nonempty_list(declaration_cpp) -> declaration_cpp
-- On TIdent_Constructor
--   reduce production option(Tinline) ->

State 735:
## Known stack suffix:
## declaration_cpp nonempty_list(declaration_cpp)
## LR(1) items:
nonempty_list(declaration_cpp) -> declaration_cpp nonempty_list(declaration_cpp) . [ TCBrace ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production nonempty_list(declaration_cpp) -> declaration_cpp nonempty_list(declaration_cpp)

State 736:
## Known stack suffix:
## declaration
## LR(1) items:
declaration_cpp -> declaration . [ Twchar_t Tvolatile Tvoid Tvirtual Tusing Tunsigned Tunion Ttypeof Ttypename Ttypedef Tthread_local Ttemplate Tstruct Tstatic Tsigned Tshort Trestrict Tregister Tnamespace Tmutable Tlong Tint Tinline Tfriend Tfloat Textern Tenum Tdouble Tdecltype Tconstexpr Tconst Tclass Tchar Tbool Tauto Tasm TUndef TTilde TPtVirg TInclude TIfdefelse TIfdefelif TIfdefVersion TIfdefMisc TIfdefBool TIfdef TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_MacroDecl TIdent_Constructor TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TEndif TDefine TCppDirectiveOther TColCol_BeforeTypedef TCBrace ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production declaration_cpp -> declaration

State 737:
## Known stack suffix:
## ctor_dtor
## LR(1) items:
declaration -> ctor_dtor . [ Twchar_t Tvolatile Tvoid Tvirtual Tusing Tunsigned Tunion Ttypeof Ttypename Ttypedef Tthread_local Ttemplate Tstruct Tstatic Tsigned Tshort Trestrict Tregister Tpublic Tprotected Tprivate Tnamespace Tmutable Tlong Tint Tinline Tfriend Tfloat Textern Texplicit Tenum Tdouble Tdecltype Tconstexpr Tconst Tclass Tchar Tbool Tauto Tasm TUndef TTilde TPtVirg TInclude TIfdefelse TIfdefelif TIfdefVersion TIfdefMisc TIfdefBool TIfdef TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_MacroDecl TIdent_Constructor TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TEndif TDefine TCppDirectiveOther TColCol_BeforeTypedef TCBrace ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production declaration -> ctor_dtor

State 738:
## Known stack suffix:
## cpp_ifdef_directive
## LR(1) items:
declaration_cpp -> cpp_ifdef_directive . [ Twchar_t Tvolatile Tvoid Tvirtual Tusing Tunsigned Tunion Ttypeof Ttypename Ttypedef Tthread_local Ttemplate Tstruct Tstatic Tsigned Tshort Trestrict Tregister Tnamespace Tmutable Tlong Tint Tinline Tfriend Tfloat Textern Tenum Tdouble Tdecltype Tconstexpr Tconst Tclass Tchar Tbool Tauto Tasm TUndef TTilde TPtVirg TInclude TIfdefelse TIfdefelif TIfdefVersion TIfdefMisc TIfdefBool TIfdef TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_MacroDecl TIdent_Constructor TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TEndif TDefine TCppDirectiveOther TColCol_BeforeTypedef TCBrace ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production declaration_cpp -> cpp_ifdef_directive

State 739:
## Known stack suffix:
## cpp_directive
## LR(1) items:
declaration_cpp -> cpp_directive . [ Twchar_t Tvolatile Tvoid Tvirtual Tusing Tunsigned Tunion Ttypeof Ttypename Ttypedef Tthread_local Ttemplate Tstruct Tstatic Tsigned Tshort Trestrict Tregister Tnamespace Tmutable Tlong Tint Tinline Tfriend Tfloat Textern Tenum Tdouble Tdecltype Tconstexpr Tconst Tclass Tchar Tbool Tauto Tasm TUndef TTilde TPtVirg TInclude TIfdefelse TIfdefelif TIfdefVersion TIfdefMisc TIfdefBool TIfdef TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_MacroDecl TIdent_Constructor TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TEndif TDefine TCppDirectiveOther TColCol_BeforeTypedef TCBrace ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production declaration_cpp -> cpp_directive

State 740:
## Known stack suffix:
## block_declaration
## LR(1) items:
declaration -> block_declaration . [ Twchar_t Tvolatile Tvoid Tvirtual Tusing Tunsigned Tunion Ttypeof Ttypename Ttypedef Tthread_local Ttemplate Tstruct Tstatic Tsigned Tshort Trestrict Tregister Tpublic Tprotected Tprivate Tnamespace Tmutable Tlong Tint Tinline Tfriend Tfloat Textern Texplicit Tenum Tdouble Tdecltype Tconstexpr Tconst Tclass Tchar Tbool Tauto Tasm TUndef TTilde TPtVirg TInclude TIfdefelse TIfdefelif TIfdefVersion TIfdefMisc TIfdefBool TIfdef TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_MacroDecl TIdent_Constructor TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TEndif TDefine TCppDirectiveOther TColCol_BeforeTypedef TCBrace ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production declaration -> block_declaration

State 741:
## Known stack suffix:
## Textern TString declaration
## LR(1) items:
linkage_specification -> Textern TString declaration . [ Twchar_t Tvolatile Tvoid Tvirtual Tusing Tunsigned Tunion Ttypeof Ttypename Ttypedef Tthread_local Ttemplate Tstruct Tstatic Tsigned Tshort Trestrict Tregister Tpublic Tprotected Tprivate Tnamespace Tmutable Tlong Tint Tinline Tfriend Tfloat Textern Texplicit Tenum Tdouble Tdecltype Tconstexpr Tconst Tclass Tchar Tbool Tauto Tasm TUndef TTilde TPtVirg TInclude TIfdefelse TIfdefelif TIfdefVersion TIfdefMisc TIfdefBool TIfdef TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_MacroDecl TIdent_Constructor TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TEndif TDefine TCppDirectiveOther TColCol_BeforeTypedef TCBrace ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production linkage_specification -> Textern TString declaration

State 742:
## Known stack suffix:
## Tnamespace TOBrace optl(nonempty_list(declaration_cpp))
## LR(1) items:
unnamed_namespace_definition -> Tnamespace TOBrace optl(nonempty_list(declaration_cpp)) . TCBrace [ Twchar_t Tvolatile Tvoid Tvirtual Tusing Tunsigned Tunion Ttypeof Ttypename Ttypedef Tthread_local Ttemplate Tstruct Tstatic Tsigned Tshort Trestrict Tregister Tpublic Tprotected Tprivate Tnamespace Tmutable Tlong Tint Tinline Tfriend Tfloat Textern Texplicit Tenum Tdouble Tdecltype Tconstexpr Tconst Tclass Tchar Tbool Tauto Tasm TUndef TTilde TPtVirg TInclude TIfdefelse TIfdefelif TIfdefVersion TIfdefMisc TIfdefBool TIfdef TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_MacroDecl TIdent_Constructor TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TEndif TDefine TCppDirectiveOther TColCol_BeforeTypedef TCBrace ]
## Transitions:
-- On TCBrace shift to state 743
## Reductions:

State 743:
## Known stack suffix:
## Tnamespace TOBrace optl(nonempty_list(declaration_cpp)) TCBrace
## LR(1) items:
unnamed_namespace_definition -> Tnamespace TOBrace optl(nonempty_list(declaration_cpp)) TCBrace . [ Twchar_t Tvolatile Tvoid Tvirtual Tusing Tunsigned Tunion Ttypeof Ttypename Ttypedef Tthread_local Ttemplate Tstruct Tstatic Tsigned Tshort Trestrict Tregister Tpublic Tprotected Tprivate Tnamespace Tmutable Tlong Tint Tinline Tfriend Tfloat Textern Texplicit Tenum Tdouble Tdecltype Tconstexpr Tconst Tclass Tchar Tbool Tauto Tasm TUndef TTilde TPtVirg TInclude TIfdefelse TIfdefelif TIfdefVersion TIfdefMisc TIfdefBool TIfdef TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_MacroDecl TIdent_Constructor TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TEndif TDefine TCppDirectiveOther TColCol_BeforeTypedef TCBrace ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production unnamed_namespace_definition -> Tnamespace TOBrace optl(nonempty_list(declaration_cpp)) TCBrace

State 744:
## Known stack suffix:
## Tnamespace TIdent
## LR(1) items:
named_namespace_definition -> Tnamespace TIdent . TOBrace optl(nonempty_list(declaration_cpp)) TCBrace [ Twchar_t Tvolatile Tvoid Tvirtual Tusing Tunsigned Tunion Ttypeof Ttypename Ttypedef Tthread_local Ttemplate Tstruct Tstatic Tsigned Tshort Trestrict Tregister Tpublic Tprotected Tprivate Tnamespace Tmutable Tlong Tint Tinline Tfriend Tfloat Textern Texplicit Tenum Tdouble Tdecltype Tconstexpr Tconst Tclass Tchar Tbool Tauto Tasm TUndef TTilde TPtVirg TInclude TIfdefelse TIfdefelif TIfdefVersion TIfdefMisc TIfdefBool TIfdef TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_MacroDecl TIdent_Constructor TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TEndif TDefine TCppDirectiveOther TColCol_BeforeTypedef TCBrace ]
namespace_alias_definition -> Tnamespace TIdent . TEq qualified_namespace_spec TPtVirg [ Twchar_t Tvolatile Tvoid Tvirtual Tusing Tunsigned Tunion Ttypeof Ttypename Ttypedef Tthread_local Ttemplate Tstruct Tstatic Tsigned Tshort Trestrict Tregister Tpublic Tprotected Tprivate Tnamespace Tmutable Tlong Tint Tinline Tfriend Tfloat Textern Texplicit Tenum Tdouble Tdecltype Tconstexpr Tconst Tclass Tchar Tbool Tauto Tasm TUndef TTilde TPtVirg TInclude TIfdefelse TIfdefelif TIfdefVersion TIfdefMisc TIfdefBool TIfdef TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_MacroDecl TIdent_Constructor TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TEndif TDefine TCppDirectiveOther TColCol_BeforeTypedef TCBrace ]
## Transitions:
-- On TOBrace shift to state 745
-- On TEq shift to state 542
## Reductions:

State 745:
## Known stack suffix:
## Tnamespace TIdent TOBrace
## LR(1) items:
named_namespace_definition -> Tnamespace TIdent TOBrace . optl(nonempty_list(declaration_cpp)) TCBrace [ Twchar_t Tvolatile Tvoid Tvirtual Tusing Tunsigned Tunion Ttypeof Ttypename Ttypedef Tthread_local Ttemplate Tstruct Tstatic Tsigned Tshort Trestrict Tregister Tpublic Tprotected Tprivate Tnamespace Tmutable Tlong Tint Tinline Tfriend Tfloat Textern Texplicit Tenum Tdouble Tdecltype Tconstexpr Tconst Tclass Tchar Tbool Tauto Tasm TUndef TTilde TPtVirg TInclude TIfdefelse TIfdefelif TIfdefVersion TIfdefMisc TIfdefBool TIfdef TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_MacroDecl TIdent_Constructor TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TEndif TDefine TCppDirectiveOther TColCol_BeforeTypedef TCBrace ]
## Transitions:
-- On Twchar_t shift to state 1
-- On Tvolatile shift to state 2
-- On Tvoid shift to state 3
-- On Tvirtual shift to state 4
-- On Tusing shift to state 5
-- On Tunsigned shift to state 15
-- On Tunion shift to state 16
-- On Ttypeof shift to state 17
-- On Ttypename shift to state 19
-- On Ttypedef shift to state 96
-- On Tthread_local shift to state 97
-- On Ttemplate shift to state 320
-- On Tstruct shift to state 27
-- On Tstatic shift to state 323
-- On Tsigned shift to state 30
-- On Tshort shift to state 32
-- On Trestrict shift to state 65
-- On Tregister shift to state 99
-- On Tnamespace shift to state 361
-- On Tmutable shift to state 100
-- On Tlong shift to state 38
-- On Tint shift to state 39
-- On Tinline shift to state 363
-- On Tfriend shift to state 102
-- On Tfloat shift to state 40
-- On Textern shift to state 364
-- On Tenum shift to state 66
-- On Tdouble shift to state 41
-- On Tdecltype shift to state 45
-- On Tconstexpr shift to state 104
-- On Tconst shift to state 76
-- On Tclass shift to state 77
-- On Tchar shift to state 58
-- On Tbool shift to state 60
-- On Tauto shift to state 105
-- On Tasm shift to state 366
-- On TUndef shift to state 415
-- On TTilde shift to state 395
-- On TPtVirg shift to state 413
-- On TInclude shift to state 416
-- On TIfdefelse shift to state 417
-- On TIfdefelif shift to state 418
-- On TIfdefVersion shift to state 419
-- On TIfdefMisc shift to state 420
-- On TIfdefBool shift to state 421
-- On TIfdef shift to state 422
-- On TIdent_Typedef shift to state 20
-- On TIdent_TemplatenameInQualifier_BeforeTypedef shift to state 21
-- On TIdent_TemplatenameInQualifier shift to state 12
-- On TIdent_Templatename shift to state 108
-- On TIdent_MacroDecl shift to state 423
-- On TIdent_ClassnameInQualifier_BeforeTypedef shift to state 111
-- On TIdent_ClassnameInQualifier shift to state 112
-- On TEndif shift to state 428
-- On TDefine shift to state 429
-- On TCppDirectiveOther shift to state 691
-- On TColCol_BeforeTypedef shift to state 118
-- On using_directive shift to state 581
-- On using_declaration shift to state 582
-- On unnamed_namespace_definition shift to state 692
-- On type_spec shift to state 314
-- On type_name shift to state 182
-- On type_cplusplus_id shift to state 183
-- On template_id shift to state 120
-- On template_declaration shift to state 693
-- On storage_class_spec shift to state 316
-- On simple_type_specifier shift to state 206
-- On simple_declaration shift to state 585
-- On optl(nonempty_list(declaration_cpp)) shift to state 746
-- On option(Tinline) shift to state 696
-- On nonempty_list(declaration_cpp) shift to state 715
-- On nested_name_specifier2 shift to state 207
-- On nested_name_specifier shift to state 716
-- On namespace_definition shift to state 729
-- On namespace_alias_definition shift to state 587
-- On named_namespace_definition shift to state 730
-- On linkage_specification shift to state 731
-- On function_spec shift to state 437
-- On function_definition shift to state 732
-- On explicit_specialization shift to state 733
-- On enum_specifier shift to state 209
-- On enum_name_or_typedef_name_or_simple_class_name shift to state 123
-- On enum_head shift to state 210
-- On elaborated_type_specifier shift to state 274
-- On decltype_specifier shift to state 243
-- On declaration_cpp shift to state 734
-- On declaration shift to state 736
-- On decl_spec_seq shift to state 599
-- On decl_spec shift to state 473
-- On cv_qualif shift to state 475
-- On ctor_dtor shift to state 737
-- On cpp_ifdef_directive shift to state 738
-- On cpp_directive shift to state 739
-- On class_specifier shift to state 277
-- On class_or_namespace_name_for_qualifier2 shift to state 124
-- On class_or_namespace_name_for_qualifier shift to state 170
-- On class_key shift to state 278
-- On class_head shift to state 301
-- On block_declaration shift to state 740
-- On asm_definition shift to state 617
## Reductions:
-- On TIdent_Constructor
--   reduce production option(Tinline) ->
-- On TCBrace
--   reduce production optl(nonempty_list(declaration_cpp)) ->

State 746:
## Known stack suffix:
## Tnamespace TIdent TOBrace optl(nonempty_list(declaration_cpp))
## LR(1) items:
named_namespace_definition -> Tnamespace TIdent TOBrace optl(nonempty_list(declaration_cpp)) . TCBrace [ Twchar_t Tvolatile Tvoid Tvirtual Tusing Tunsigned Tunion Ttypeof Ttypename Ttypedef Tthread_local Ttemplate Tstruct Tstatic Tsigned Tshort Trestrict Tregister Tpublic Tprotected Tprivate Tnamespace Tmutable Tlong Tint Tinline Tfriend Tfloat Textern Texplicit Tenum Tdouble Tdecltype Tconstexpr Tconst Tclass Tchar Tbool Tauto Tasm TUndef TTilde TPtVirg TInclude TIfdefelse TIfdefelif TIfdefVersion TIfdefMisc TIfdefBool TIfdef TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_MacroDecl TIdent_Constructor TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TEndif TDefine TCppDirectiveOther TColCol_BeforeTypedef TCBrace ]
## Transitions:
-- On TCBrace shift to state 747
## Reductions:

State 747:
## Known stack suffix:
## Tnamespace TIdent TOBrace optl(nonempty_list(declaration_cpp)) TCBrace
## LR(1) items:
named_namespace_definition -> Tnamespace TIdent TOBrace optl(nonempty_list(declaration_cpp)) TCBrace . [ Twchar_t Tvolatile Tvoid Tvirtual Tusing Tunsigned Tunion Ttypeof Ttypename Ttypedef Tthread_local Ttemplate Tstruct Tstatic Tsigned Tshort Trestrict Tregister Tpublic Tprotected Tprivate Tnamespace Tmutable Tlong Tint Tinline Tfriend Tfloat Textern Texplicit Tenum Tdouble Tdecltype Tconstexpr Tconst Tclass Tchar Tbool Tauto Tasm TUndef TTilde TPtVirg TInclude TIfdefelse TIfdefelif TIfdefVersion TIfdefMisc TIfdefBool TIfdef TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_MacroDecl TIdent_Constructor TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TEndif TDefine TCppDirectiveOther TColCol_BeforeTypedef TCBrace ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production named_namespace_definition -> Tnamespace TIdent TOBrace optl(nonempty_list(declaration_cpp)) TCBrace

State 748:
## Known stack suffix:
## Ttemplate TInf_Template TSup_Template declaration
## LR(1) items:
explicit_specialization -> Ttemplate TInf_Template TSup_Template declaration . [ Twchar_t Tvolatile Tvoid Tvirtual Tusing Tunsigned Tunion Ttypeof Ttypename Ttypedef Tthread_local Ttemplate Tstruct Tstatic Tsigned Tshort Trestrict Tregister Tpublic Tprotected Tprivate Tnamespace Tmutable Tlong Tint Tinline Tfriend Tfloat Textern Texplicit Tenum Tdouble Tdecltype Tconstexpr Tconst Tclass Tchar Tbool Tauto Tasm TUndef TTilde TPtVirg TInclude TIfdefelse TIfdefelif TIfdefVersion TIfdefMisc TIfdefBool TIfdef TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_MacroDecl TIdent_Constructor TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TEndif TDefine TCppDirectiveOther TColCol_BeforeTypedef TCBrace ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production explicit_specialization -> Ttemplate TInf_Template TSup_Template declaration

State 749:
## Known stack suffix:
## Ttemplate TInf_Template listc(template_parameter) TSup_Template declaration
## LR(1) items:
template_declaration -> Ttemplate TInf_Template listc(template_parameter) TSup_Template declaration . [ Twchar_t Tvolatile Tvoid Tvirtual Tusing Tunsigned Tunion Ttypeof Ttypename Ttypedef Tthread_local Ttemplate Tstruct Tstatic Tsigned Tshort Trestrict Tregister Tpublic Tprotected Tprivate Tnamespace Tmutable Tlong Tint Tinline Tfriend Tfloat Textern Texplicit Tenum Tdouble Tdecltype Tconstexpr Tconst Tclass Tchar Tbool Tauto Tasm TUndef TTilde TPtVirg TInclude TIfdefelse TIfdefelif TIfdefVersion TIfdefMisc TIfdefBool TIfdef TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_MacroDecl TIdent_Constructor TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TEndif TDefine TCppDirectiveOther TColCol_BeforeTypedef TCBrace ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production template_declaration -> Ttemplate TInf_Template listc(template_parameter) TSup_Template declaration

State 750:
## Known stack suffix:
## listc(template_parameter) TComma
## LR(1) items:
listc(template_parameter) -> listc(template_parameter) TComma . template_parameter [ TSup_Template TComma ]
## Transitions:
-- On Twchar_t shift to state 1
-- On Tvolatile shift to state 2
-- On Tvoid shift to state 3
-- On Tvirtual shift to state 4
-- On Tunsigned shift to state 15
-- On Tunion shift to state 16
-- On Ttypeof shift to state 17
-- On Ttypename shift to state 19
-- On Ttypedef shift to state 96
-- On Tthread_local shift to state 97
-- On Tstruct shift to state 27
-- On Tstatic shift to state 98
-- On Tsigned shift to state 30
-- On Tshort shift to state 32
-- On Trestrict shift to state 65
-- On Tregister shift to state 99
-- On Tmutable shift to state 100
-- On Tlong shift to state 38
-- On Tint shift to state 39
-- On Tinline shift to state 101
-- On Tfriend shift to state 102
-- On Tfloat shift to state 40
-- On Textern shift to state 103
-- On Tenum shift to state 66
-- On Tdouble shift to state 41
-- On Tdecltype shift to state 45
-- On Tconstexpr shift to state 104
-- On Tconst shift to state 76
-- On Tclass shift to state 77
-- On Tchar shift to state 58
-- On Tbool shift to state 60
-- On Tauto shift to state 105
-- On TIdent_Typedef shift to state 20
-- On TIdent_TemplatenameInQualifier_BeforeTypedef shift to state 21
-- On TIdent_Templatename shift to state 108
-- On TIdent_ClassnameInQualifier_BeforeTypedef shift to state 111
-- On TColCol_BeforeTypedef shift to state 118
-- On type_spec shift to state 314
-- On type_name shift to state 182
-- On type_cplusplus_id shift to state 183
-- On template_parameter shift to state 751
-- On template_id shift to state 120
-- On storage_class_spec shift to state 316
-- On simple_type_specifier shift to state 206
-- On parameter_decl shift to state 317
-- On nested_name_specifier2 shift to state 207
-- On function_spec shift to state 437
-- On enum_specifier shift to state 209
-- On enum_name_or_typedef_name_or_simple_class_name shift to state 123
-- On enum_head shift to state 210
-- On elaborated_type_specifier shift to state 274
-- On decltype_specifier shift to state 243
-- On decl_spec_seq shift to state 441
-- On decl_spec shift to state 473
-- On cv_qualif shift to state 475
-- On class_specifier shift to state 277
-- On class_or_namespace_name_for_qualifier2 shift to state 124
-- On class_key shift to state 278
-- On class_head shift to state 301
## Reductions:

State 751:
## Known stack suffix:
## listc(template_parameter) TComma template_parameter
## LR(1) items:
listc(template_parameter) -> listc(template_parameter) TComma template_parameter . [ TSup_Template TComma ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production listc(template_parameter) -> listc(template_parameter) TComma template_parameter

State 752:
## Known stack suffix:
## Tinline
## LR(1) items:
ctor_spec -> Tinline . [ TIdent_Constructor ]
dtor_spec -> Tinline . [ TTilde ]
function_spec -> Tinline . [ Twchar_t Tvolatile Tvoid Tvirtual Tunsigned Tunion Ttypeof Ttypename Ttypedef Tthread_local Tstruct Tstatic Tsigned Tshort Trestrict Tregister Toperator Tmutable Tlong Tint Tinline Tfriend Tfloat Textern Tenum Tdouble Tdecltype Tconstexpr Tconst Tclass Tchar Tbool Tauto TPtVirg TOPar TMul TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TIdent TColCol_BeforeTypedef TColCol TCol TAndLog TAnd ]
## Transitions:
## Reductions:
-- On TIdent_Constructor
--   reduce production ctor_spec -> Tinline
-- On TTilde
--   reduce production dtor_spec -> Tinline
-- On Twchar_t Tvolatile Tvoid Tvirtual Tunsigned Tunion Ttypeof Ttypename Ttypedef Tthread_local Tstruct Tstatic Tsigned Tshort Trestrict Tregister Toperator Tmutable Tlong Tint Tinline Tfriend Tfloat Textern Tenum Tdouble Tdecltype Tconstexpr Tconst Tclass Tchar Tbool Tauto TPtVirg TOPar TMul TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TIdent TColCol_BeforeTypedef TColCol TCol TAndLog TAnd
--   reduce production function_spec -> Tinline

State 753:
## Known stack suffix:
## Texplicit
## LR(1) items:
ctor_spec -> Texplicit . [ TIdent_Constructor ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production ctor_spec -> Texplicit

State 754:
## Known stack suffix:
## TPtVirg
## LR(1) items:
member_declaration -> TPtVirg . [ Twchar_t Tvolatile Tvoid Tvirtual Tusing Tunsigned Tunion Ttypeof Ttypename Ttypedef Tthread_local Ttemplate Tstruct Tstatic Tsigned Tshort Trestrict Tregister Tpublic Tprotected Tprivate Tmutable Tlong Tint Tinline Tfriend Tfloat Textern Texplicit Tenum Tdouble Tdecltype Tconstexpr Tconst Tclass Tchar Tbool Tauto TTilde TPtVirg TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_Constructor TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TColCol_BeforeTypedef TCBrace ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production member_declaration -> TPtVirg

State 755:
## Known stack suffix:
## using_declaration
## LR(1) items:
member_declaration -> using_declaration . [ Twchar_t Tvolatile Tvoid Tvirtual Tusing Tunsigned Tunion Ttypeof Ttypename Ttypedef Tthread_local Ttemplate Tstruct Tstatic Tsigned Tshort Trestrict Tregister Tpublic Tprotected Tprivate Tmutable Tlong Tint Tinline Tfriend Tfloat Textern Texplicit Tenum Tdouble Tdecltype Tconstexpr Tconst Tclass Tchar Tbool Tauto TTilde TPtVirg TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_Constructor TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TColCol_BeforeTypedef TCBrace ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production member_declaration -> using_declaration

State 756:
## Known stack suffix:
## template_declaration
## LR(1) items:
member_declaration -> template_declaration . [ Twchar_t Tvolatile Tvoid Tvirtual Tusing Tunsigned Tunion Ttypeof Ttypename Ttypedef Tthread_local Ttemplate Tstruct Tstatic Tsigned Tshort Trestrict Tregister Tpublic Tprotected Tprivate Tmutable Tlong Tint Tinline Tfriend Tfloat Textern Texplicit Tenum Tdouble Tdecltype Tconstexpr Tconst Tclass Tchar Tbool Tauto TTilde TPtVirg TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_Constructor TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TColCol_BeforeTypedef TCBrace ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production member_declaration -> template_declaration

State 757:
## Known stack suffix:
## qualified_id
## LR(1) items:
member_declaration -> qualified_id . TPtVirg [ Twchar_t Tvolatile Tvoid Tvirtual Tusing Tunsigned Tunion Ttypeof Ttypename Ttypedef Tthread_local Ttemplate Tstruct Tstatic Tsigned Tshort Trestrict Tregister Tpublic Tprotected Tprivate Tmutable Tlong Tint Tinline Tfriend Tfloat Textern Texplicit Tenum Tdouble Tdecltype Tconstexpr Tconst Tclass Tchar Tbool Tauto TTilde TPtVirg TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_Constructor TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TColCol_BeforeTypedef TCBrace ]
## Transitions:
-- On TPtVirg shift to state 758
## Reductions:

State 758:
## Known stack suffix:
## qualified_id TPtVirg
## LR(1) items:
member_declaration -> qualified_id TPtVirg . [ Twchar_t Tvolatile Tvoid Tvirtual Tusing Tunsigned Tunion Ttypeof Ttypename Ttypedef Tthread_local Ttemplate Tstruct Tstatic Tsigned Tshort Trestrict Tregister Tpublic Tprotected Tprivate Tmutable Tlong Tint Tinline Tfriend Tfloat Textern Texplicit Tenum Tdouble Tdecltype Tconstexpr Tconst Tclass Tchar Tbool Tauto TTilde TPtVirg TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_Constructor TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TColCol_BeforeTypedef TCBrace ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production member_declaration -> qualified_id TPtVirg

State 759:
## Known stack suffix:
## class_head TOBrace optl(member_specification)
## LR(1) items:
class_specifier -> class_head TOBrace optl(member_specification) . TCBrace [ Twchar_t Tvolatile Tvoid Tvirtual Tunsigned Tunion Ttypeof Ttypename Ttypedef Tthread_local Tstruct Tstatic Tsigned Tshort Trestrict Tregister Toperator Tmutable Tlong Tint Tinline Tfriend Tfloat Textern Tenum Tdouble Tdecltype Tconstexpr Tconst Tclass Tchar Tbool Tauto TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtrOpStar TPtVirg TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMod TMinus TInfEq TInf TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TIdent TEqEq TEq TEllipsis TDotStar TDiv TCommentNewline_DefineEndOfMacro TComma TColCol_BeforeTypedef TColCol TCol TCPar_EOL TCPar TCCro TCBrace TAssign TAndLog TAnd RDots EOF ]
## Transitions:
-- On TCBrace shift to state 760
## Reductions:

State 760:
## Known stack suffix:
## class_head TOBrace optl(member_specification) TCBrace
## LR(1) items:
class_specifier -> class_head TOBrace optl(member_specification) TCBrace . [ Twchar_t Tvolatile Tvoid Tvirtual Tunsigned Tunion Ttypeof Ttypename Ttypedef Tthread_local Tstruct Tstatic Tsigned Tshort Trestrict Tregister Toperator Tmutable Tlong Tint Tinline Tfriend Tfloat Textern Tenum Tdouble Tdecltype Tconstexpr Tconst Tclass Tchar Tbool Tauto TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtrOpStar TPtVirg TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMod TMinus TInfEq TInf TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TIdent TEqEq TEq TEllipsis TDotStar TDiv TCommentNewline_DefineEndOfMacro TComma TColCol_BeforeTypedef TColCol TCol TCPar_EOL TCPar TCCro TCBrace TAssign TAndLog TAnd RDots EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production class_specifier -> class_head TOBrace optl(member_specification) TCBrace

State 761:
## Known stack suffix:
## member_specification
## LR(1) items:
optl(member_specification) -> member_specification . [ TCBrace ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production optl(member_specification) -> member_specification

State 762:
## Known stack suffix:
## member_declaration
## LR(1) items:
member_specification -> member_declaration . optl(member_specification) [ TCBrace ]
## Transitions:
-- On Twchar_t shift to state 1
-- On Tvolatile shift to state 2
-- On Tvoid shift to state 3
-- On Tvirtual shift to state 303
-- On Tusing shift to state 304
-- On Tunsigned shift to state 15
-- On Tunion shift to state 16
-- On Ttypeof shift to state 17
-- On Ttypename shift to state 19
-- On Ttypedef shift to state 96
-- On Tthread_local shift to state 97
-- On Ttemplate shift to state 312
-- On Tstruct shift to state 27
-- On Tstatic shift to state 98
-- On Tsigned shift to state 30
-- On Tshort shift to state 32
-- On Trestrict shift to state 65
-- On Tregister shift to state 99
-- On Tpublic shift to state 283
-- On Tprotected shift to state 284
-- On Tprivate shift to state 285
-- On Tmutable shift to state 100
-- On Tlong shift to state 38
-- On Tint shift to state 39
-- On Tinline shift to state 752
-- On Tfriend shift to state 102
-- On Tfloat shift to state 40
-- On Textern shift to state 103
-- On Texplicit shift to state 753
-- On Tenum shift to state 66
-- On Tdouble shift to state 41
-- On Tdecltype shift to state 45
-- On Tconstexpr shift to state 104
-- On Tconst shift to state 76
-- On Tclass shift to state 77
-- On Tchar shift to state 58
-- On Tbool shift to state 60
-- On Tauto shift to state 105
-- On TPtVirg shift to state 754
-- On TIdent_Typedef shift to state 20
-- On TIdent_TemplatenameInQualifier_BeforeTypedef shift to state 21
-- On TIdent_TemplatenameInQualifier shift to state 12
-- On TIdent_Templatename shift to state 108
-- On TIdent_ClassnameInQualifier_BeforeTypedef shift to state 111
-- On TIdent_ClassnameInQualifier shift to state 112
-- On TColCol_BeforeTypedef shift to state 118
-- On using_declaration shift to state 755
-- On type_spec shift to state 314
-- On type_name shift to state 182
-- On type_cplusplus_id shift to state 183
-- On template_id shift to state 120
-- On template_declaration shift to state 756
-- On storage_class_spec shift to state 316
-- On simple_type_specifier shift to state 206
-- On qualified_id shift to state 757
-- On optl(member_specification) shift to state 763
-- On nested_name_specifier2 shift to state 207
-- On nested_name_specifier shift to state 165
-- On member_specification shift to state 761
-- On member_declaration shift to state 762
-- On function_spec shift to state 437
-- On function_definition shift to state 764
-- On field_declaration shift to state 765
-- On enum_specifier shift to state 209
-- On enum_name_or_typedef_name_or_simple_class_name shift to state 123
-- On enum_head shift to state 210
-- On elaborated_type_specifier shift to state 274
-- On dtor_spec shift to state 766
-- On decltype_specifier shift to state 243
-- On decl_spec_seq shift to state 780
-- On decl_spec shift to state 473
-- On cv_qualif shift to state 475
-- On ctor_spec shift to state 795
-- On ctor_dtor_member shift to state 808
-- On class_specifier shift to state 277
-- On class_or_namespace_name_for_qualifier2 shift to state 124
-- On class_or_namespace_name_for_qualifier shift to state 170
-- On class_key shift to state 278
-- On class_head shift to state 301
-- On access_specifier shift to state 809
## Reductions:
-- On TIdent_Constructor
--   reduce production ctor_spec ->
-- On TTilde
--   reduce production dtor_spec ->
-- On TCBrace
--   reduce production optl(member_specification) ->

State 763:
## Known stack suffix:
## member_declaration optl(member_specification)
## LR(1) items:
member_specification -> member_declaration optl(member_specification) . [ TCBrace ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production member_specification -> member_declaration optl(member_specification)

State 764:
## Known stack suffix:
## function_definition
## LR(1) items:
member_declaration -> function_definition . [ Twchar_t Tvolatile Tvoid Tvirtual Tusing Tunsigned Tunion Ttypeof Ttypename Ttypedef Tthread_local Ttemplate Tstruct Tstatic Tsigned Tshort Trestrict Tregister Tpublic Tprotected Tprivate Tmutable Tlong Tint Tinline Tfriend Tfloat Textern Texplicit Tenum Tdouble Tdecltype Tconstexpr Tconst Tclass Tchar Tbool Tauto TTilde TPtVirg TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_Constructor TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TColCol_BeforeTypedef TCBrace ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production member_declaration -> function_definition

State 765:
## Known stack suffix:
## field_declaration
## LR(1) items:
member_declaration -> field_declaration . [ Twchar_t Tvolatile Tvoid Tvirtual Tusing Tunsigned Tunion Ttypeof Ttypename Ttypedef Tthread_local Ttemplate Tstruct Tstatic Tsigned Tshort Trestrict Tregister Tpublic Tprotected Tprivate Tmutable Tlong Tint Tinline Tfriend Tfloat Textern Texplicit Tenum Tdouble Tdecltype Tconstexpr Tconst Tclass Tchar Tbool Tauto TTilde TPtVirg TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_Constructor TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TColCol_BeforeTypedef TCBrace ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production member_declaration -> field_declaration

State 766:
## Known stack suffix:
## dtor_spec
## LR(1) items:
ctor_dtor_member -> dtor_spec . TTilde ident TOPar option(Tvoid) TCPar option(exn_spec) compound [ Twchar_t Tvolatile Tvoid Tvirtual Tusing Tunsigned Tunion Ttypeof Ttypename Ttypedef Tthread_local Ttemplate Tstruct Tstatic Tsigned Tshort Trestrict Tregister Tpublic Tprotected Tprivate Tmutable Tlong Tint Tinline Tfriend Tfloat Textern Texplicit Tenum Tdouble Tdecltype Tconstexpr Tconst Tclass Tchar Tbool Tauto TTilde TPtVirg TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_Constructor TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TColCol_BeforeTypedef TCBrace ]
ctor_dtor_member -> dtor_spec . TTilde ident TOPar option(Tvoid) TCPar option(exn_spec) TPtVirg [ Twchar_t Tvolatile Tvoid Tvirtual Tusing Tunsigned Tunion Ttypeof Ttypename Ttypedef Tthread_local Ttemplate Tstruct Tstatic Tsigned Tshort Trestrict Tregister Tpublic Tprotected Tprivate Tmutable Tlong Tint Tinline Tfriend Tfloat Textern Texplicit Tenum Tdouble Tdecltype Tconstexpr Tconst Tclass Tchar Tbool Tauto TTilde TPtVirg TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_Constructor TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TColCol_BeforeTypedef TCBrace ]
ctor_dtor_member -> dtor_spec . TTilde ident TOPar option(Tvoid) TCPar option(exn_spec) TEq Tdelete TPtVirg [ Twchar_t Tvolatile Tvoid Tvirtual Tusing Tunsigned Tunion Ttypeof Ttypename Ttypedef Tthread_local Ttemplate Tstruct Tstatic Tsigned Tshort Trestrict Tregister Tpublic Tprotected Tprivate Tmutable Tlong Tint Tinline Tfriend Tfloat Textern Texplicit Tenum Tdouble Tdecltype Tconstexpr Tconst Tclass Tchar Tbool Tauto TTilde TPtVirg TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_Constructor TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TColCol_BeforeTypedef TCBrace ]
ctor_dtor_member -> dtor_spec . TTilde ident TOPar option(Tvoid) TCPar option(exn_spec) TEq Tdefault TPtVirg [ Twchar_t Tvolatile Tvoid Tvirtual Tusing Tunsigned Tunion Ttypeof Ttypename Ttypedef Tthread_local Ttemplate Tstruct Tstatic Tsigned Tshort Trestrict Tregister Tpublic Tprotected Tprivate Tmutable Tlong Tint Tinline Tfriend Tfloat Textern Texplicit Tenum Tdouble Tdecltype Tconstexpr Tconst Tclass Tchar Tbool Tauto TTilde TPtVirg TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_Constructor TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TColCol_BeforeTypedef TCBrace ]
## Transitions:
-- On TTilde shift to state 767
## Reductions:

State 767:
## Known stack suffix:
## dtor_spec TTilde
## LR(1) items:
ctor_dtor_member -> dtor_spec TTilde . ident TOPar option(Tvoid) TCPar option(exn_spec) compound [ Twchar_t Tvolatile Tvoid Tvirtual Tusing Tunsigned Tunion Ttypeof Ttypename Ttypedef Tthread_local Ttemplate Tstruct Tstatic Tsigned Tshort Trestrict Tregister Tpublic Tprotected Tprivate Tmutable Tlong Tint Tinline Tfriend Tfloat Textern Texplicit Tenum Tdouble Tdecltype Tconstexpr Tconst Tclass Tchar Tbool Tauto TTilde TPtVirg TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_Constructor TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TColCol_BeforeTypedef TCBrace ]
ctor_dtor_member -> dtor_spec TTilde . ident TOPar option(Tvoid) TCPar option(exn_spec) TPtVirg [ Twchar_t Tvolatile Tvoid Tvirtual Tusing Tunsigned Tunion Ttypeof Ttypename Ttypedef Tthread_local Ttemplate Tstruct Tstatic Tsigned Tshort Trestrict Tregister Tpublic Tprotected Tprivate Tmutable Tlong Tint Tinline Tfriend Tfloat Textern Texplicit Tenum Tdouble Tdecltype Tconstexpr Tconst Tclass Tchar Tbool Tauto TTilde TPtVirg TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_Constructor TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TColCol_BeforeTypedef TCBrace ]
ctor_dtor_member -> dtor_spec TTilde . ident TOPar option(Tvoid) TCPar option(exn_spec) TEq Tdelete TPtVirg [ Twchar_t Tvolatile Tvoid Tvirtual Tusing Tunsigned Tunion Ttypeof Ttypename Ttypedef Tthread_local Ttemplate Tstruct Tstatic Tsigned Tshort Trestrict Tregister Tpublic Tprotected Tprivate Tmutable Tlong Tint Tinline Tfriend Tfloat Textern Texplicit Tenum Tdouble Tdecltype Tconstexpr Tconst Tclass Tchar Tbool Tauto TTilde TPtVirg TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_Constructor TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TColCol_BeforeTypedef TCBrace ]
ctor_dtor_member -> dtor_spec TTilde . ident TOPar option(Tvoid) TCPar option(exn_spec) TEq Tdefault TPtVirg [ Twchar_t Tvolatile Tvoid Tvirtual Tusing Tunsigned Tunion Ttypeof Ttypename Ttypedef Tthread_local Ttemplate Tstruct Tstatic Tsigned Tshort Trestrict Tregister Tpublic Tprotected Tprivate Tmutable Tlong Tint Tinline Tfriend Tfloat Textern Texplicit Tenum Tdouble Tdecltype Tconstexpr Tconst Tclass Tchar Tbool Tauto TTilde TPtVirg TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_Constructor TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TColCol_BeforeTypedef TCBrace ]
## Transitions:
-- On TIdent_Typedef shift to state 68
-- On TIdent shift to state 69
-- On ident shift to state 768
## Reductions:

State 768:
## Known stack suffix:
## dtor_spec TTilde ident
## LR(1) items:
ctor_dtor_member -> dtor_spec TTilde ident . TOPar option(Tvoid) TCPar option(exn_spec) compound [ Twchar_t Tvolatile Tvoid Tvirtual Tusing Tunsigned Tunion Ttypeof Ttypename Ttypedef Tthread_local Ttemplate Tstruct Tstatic Tsigned Tshort Trestrict Tregister Tpublic Tprotected Tprivate Tmutable Tlong Tint Tinline Tfriend Tfloat Textern Texplicit Tenum Tdouble Tdecltype Tconstexpr Tconst Tclass Tchar Tbool Tauto TTilde TPtVirg TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_Constructor TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TColCol_BeforeTypedef TCBrace ]
ctor_dtor_member -> dtor_spec TTilde ident . TOPar option(Tvoid) TCPar option(exn_spec) TPtVirg [ Twchar_t Tvolatile Tvoid Tvirtual Tusing Tunsigned Tunion Ttypeof Ttypename Ttypedef Tthread_local Ttemplate Tstruct Tstatic Tsigned Tshort Trestrict Tregister Tpublic Tprotected Tprivate Tmutable Tlong Tint Tinline Tfriend Tfloat Textern Texplicit Tenum Tdouble Tdecltype Tconstexpr Tconst Tclass Tchar Tbool Tauto TTilde TPtVirg TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_Constructor TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TColCol_BeforeTypedef TCBrace ]
ctor_dtor_member -> dtor_spec TTilde ident . TOPar option(Tvoid) TCPar option(exn_spec) TEq Tdelete TPtVirg [ Twchar_t Tvolatile Tvoid Tvirtual Tusing Tunsigned Tunion Ttypeof Ttypename Ttypedef Tthread_local Ttemplate Tstruct Tstatic Tsigned Tshort Trestrict Tregister Tpublic Tprotected Tprivate Tmutable Tlong Tint Tinline Tfriend Tfloat Textern Texplicit Tenum Tdouble Tdecltype Tconstexpr Tconst Tclass Tchar Tbool Tauto TTilde TPtVirg TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_Constructor TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TColCol_BeforeTypedef TCBrace ]
ctor_dtor_member -> dtor_spec TTilde ident . TOPar option(Tvoid) TCPar option(exn_spec) TEq Tdefault TPtVirg [ Twchar_t Tvolatile Tvoid Tvirtual Tusing Tunsigned Tunion Ttypeof Ttypename Ttypedef Tthread_local Ttemplate Tstruct Tstatic Tsigned Tshort Trestrict Tregister Tpublic Tprotected Tprivate Tmutable Tlong Tint Tinline Tfriend Tfloat Textern Texplicit Tenum Tdouble Tdecltype Tconstexpr Tconst Tclass Tchar Tbool Tauto TTilde TPtVirg TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_Constructor TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TColCol_BeforeTypedef TCBrace ]
## Transitions:
-- On TOPar shift to state 769
## Reductions:

State 769:
## Known stack suffix:
## dtor_spec TTilde ident TOPar
## LR(1) items:
ctor_dtor_member -> dtor_spec TTilde ident TOPar . option(Tvoid) TCPar option(exn_spec) compound [ Twchar_t Tvolatile Tvoid Tvirtual Tusing Tunsigned Tunion Ttypeof Ttypename Ttypedef Tthread_local Ttemplate Tstruct Tstatic Tsigned Tshort Trestrict Tregister Tpublic Tprotected Tprivate Tmutable Tlong Tint Tinline Tfriend Tfloat Textern Texplicit Tenum Tdouble Tdecltype Tconstexpr Tconst Tclass Tchar Tbool Tauto TTilde TPtVirg TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_Constructor TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TColCol_BeforeTypedef TCBrace ]
ctor_dtor_member -> dtor_spec TTilde ident TOPar . option(Tvoid) TCPar option(exn_spec) TPtVirg [ Twchar_t Tvolatile Tvoid Tvirtual Tusing Tunsigned Tunion Ttypeof Ttypename Ttypedef Tthread_local Ttemplate Tstruct Tstatic Tsigned Tshort Trestrict Tregister Tpublic Tprotected Tprivate Tmutable Tlong Tint Tinline Tfriend Tfloat Textern Texplicit Tenum Tdouble Tdecltype Tconstexpr Tconst Tclass Tchar Tbool Tauto TTilde TPtVirg TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_Constructor TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TColCol_BeforeTypedef TCBrace ]
ctor_dtor_member -> dtor_spec TTilde ident TOPar . option(Tvoid) TCPar option(exn_spec) TEq Tdelete TPtVirg [ Twchar_t Tvolatile Tvoid Tvirtual Tusing Tunsigned Tunion Ttypeof Ttypename Ttypedef Tthread_local Ttemplate Tstruct Tstatic Tsigned Tshort Trestrict Tregister Tpublic Tprotected Tprivate Tmutable Tlong Tint Tinline Tfriend Tfloat Textern Texplicit Tenum Tdouble Tdecltype Tconstexpr Tconst Tclass Tchar Tbool Tauto TTilde TPtVirg TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_Constructor TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TColCol_BeforeTypedef TCBrace ]
ctor_dtor_member -> dtor_spec TTilde ident TOPar . option(Tvoid) TCPar option(exn_spec) TEq Tdefault TPtVirg [ Twchar_t Tvolatile Tvoid Tvirtual Tusing Tunsigned Tunion Ttypeof Ttypename Ttypedef Tthread_local Ttemplate Tstruct Tstatic Tsigned Tshort Trestrict Tregister Tpublic Tprotected Tprivate Tmutable Tlong Tint Tinline Tfriend Tfloat Textern Texplicit Tenum Tdouble Tdecltype Tconstexpr Tconst Tclass Tchar Tbool Tauto TTilde TPtVirg TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_Constructor TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TColCol_BeforeTypedef TCBrace ]
## Transitions:
-- On Tvoid shift to state 398
-- On option(Tvoid) shift to state 770
## Reductions:
-- On TCPar
--   reduce production option(Tvoid) ->

State 770:
## Known stack suffix:
## dtor_spec TTilde ident TOPar option(Tvoid)
## LR(1) items:
ctor_dtor_member -> dtor_spec TTilde ident TOPar option(Tvoid) . TCPar option(exn_spec) compound [ Twchar_t Tvolatile Tvoid Tvirtual Tusing Tunsigned Tunion Ttypeof Ttypename Ttypedef Tthread_local Ttemplate Tstruct Tstatic Tsigned Tshort Trestrict Tregister Tpublic Tprotected Tprivate Tmutable Tlong Tint Tinline Tfriend Tfloat Textern Texplicit Tenum Tdouble Tdecltype Tconstexpr Tconst Tclass Tchar Tbool Tauto TTilde TPtVirg TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_Constructor TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TColCol_BeforeTypedef TCBrace ]
ctor_dtor_member -> dtor_spec TTilde ident TOPar option(Tvoid) . TCPar option(exn_spec) TPtVirg [ Twchar_t Tvolatile Tvoid Tvirtual Tusing Tunsigned Tunion Ttypeof Ttypename Ttypedef Tthread_local Ttemplate Tstruct Tstatic Tsigned Tshort Trestrict Tregister Tpublic Tprotected Tprivate Tmutable Tlong Tint Tinline Tfriend Tfloat Textern Texplicit Tenum Tdouble Tdecltype Tconstexpr Tconst Tclass Tchar Tbool Tauto TTilde TPtVirg TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_Constructor TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TColCol_BeforeTypedef TCBrace ]
ctor_dtor_member -> dtor_spec TTilde ident TOPar option(Tvoid) . TCPar option(exn_spec) TEq Tdelete TPtVirg [ Twchar_t Tvolatile Tvoid Tvirtual Tusing Tunsigned Tunion Ttypeof Ttypename Ttypedef Tthread_local Ttemplate Tstruct Tstatic Tsigned Tshort Trestrict Tregister Tpublic Tprotected Tprivate Tmutable Tlong Tint Tinline Tfriend Tfloat Textern Texplicit Tenum Tdouble Tdecltype Tconstexpr Tconst Tclass Tchar Tbool Tauto TTilde TPtVirg TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_Constructor TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TColCol_BeforeTypedef TCBrace ]
ctor_dtor_member -> dtor_spec TTilde ident TOPar option(Tvoid) . TCPar option(exn_spec) TEq Tdefault TPtVirg [ Twchar_t Tvolatile Tvoid Tvirtual Tusing Tunsigned Tunion Ttypeof Ttypename Ttypedef Tthread_local Ttemplate Tstruct Tstatic Tsigned Tshort Trestrict Tregister Tpublic Tprotected Tprivate Tmutable Tlong Tint Tinline Tfriend Tfloat Textern Texplicit Tenum Tdouble Tdecltype Tconstexpr Tconst Tclass Tchar Tbool Tauto TTilde TPtVirg TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_Constructor TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TColCol_BeforeTypedef TCBrace ]
## Transitions:
-- On TCPar shift to state 771
## Reductions:

State 771:
## Known stack suffix:
## dtor_spec TTilde ident TOPar option(Tvoid) TCPar
## LR(1) items:
ctor_dtor_member -> dtor_spec TTilde ident TOPar option(Tvoid) TCPar . option(exn_spec) compound [ Twchar_t Tvolatile Tvoid Tvirtual Tusing Tunsigned Tunion Ttypeof Ttypename Ttypedef Tthread_local Ttemplate Tstruct Tstatic Tsigned Tshort Trestrict Tregister Tpublic Tprotected Tprivate Tmutable Tlong Tint Tinline Tfriend Tfloat Textern Texplicit Tenum Tdouble Tdecltype Tconstexpr Tconst Tclass Tchar Tbool Tauto TTilde TPtVirg TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_Constructor TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TColCol_BeforeTypedef TCBrace ]
ctor_dtor_member -> dtor_spec TTilde ident TOPar option(Tvoid) TCPar . option(exn_spec) TPtVirg [ Twchar_t Tvolatile Tvoid Tvirtual Tusing Tunsigned Tunion Ttypeof Ttypename Ttypedef Tthread_local Ttemplate Tstruct Tstatic Tsigned Tshort Trestrict Tregister Tpublic Tprotected Tprivate Tmutable Tlong Tint Tinline Tfriend Tfloat Textern Texplicit Tenum Tdouble Tdecltype Tconstexpr Tconst Tclass Tchar Tbool Tauto TTilde TPtVirg TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_Constructor TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TColCol_BeforeTypedef TCBrace ]
ctor_dtor_member -> dtor_spec TTilde ident TOPar option(Tvoid) TCPar . option(exn_spec) TEq Tdelete TPtVirg [ Twchar_t Tvolatile Tvoid Tvirtual Tusing Tunsigned Tunion Ttypeof Ttypename Ttypedef Tthread_local Ttemplate Tstruct Tstatic Tsigned Tshort Trestrict Tregister Tpublic Tprotected Tprivate Tmutable Tlong Tint Tinline Tfriend Tfloat Textern Texplicit Tenum Tdouble Tdecltype Tconstexpr Tconst Tclass Tchar Tbool Tauto TTilde TPtVirg TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_Constructor TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TColCol_BeforeTypedef TCBrace ]
ctor_dtor_member -> dtor_spec TTilde ident TOPar option(Tvoid) TCPar . option(exn_spec) TEq Tdefault TPtVirg [ Twchar_t Tvolatile Tvoid Tvirtual Tusing Tunsigned Tunion Ttypeof Ttypename Ttypedef Tthread_local Ttemplate Tstruct Tstatic Tsigned Tshort Trestrict Tregister Tpublic Tprotected Tprivate Tmutable Tlong Tint Tinline Tfriend Tfloat Textern Texplicit Tenum Tdouble Tdecltype Tconstexpr Tconst Tclass Tchar Tbool Tauto TTilde TPtVirg TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_Constructor TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TColCol_BeforeTypedef TCBrace ]
## Transitions:
-- On Tthrow shift to state 401
-- On option(exn_spec) shift to state 772
-- On exn_spec shift to state 412
## Reductions:
-- On TPtVirg TOBrace TEq
--   reduce production option(exn_spec) ->

State 772:
## Known stack suffix:
## dtor_spec TTilde ident TOPar option(Tvoid) TCPar option(exn_spec)
## LR(1) items:
ctor_dtor_member -> dtor_spec TTilde ident TOPar option(Tvoid) TCPar option(exn_spec) . compound [ Twchar_t Tvolatile Tvoid Tvirtual Tusing Tunsigned Tunion Ttypeof Ttypename Ttypedef Tthread_local Ttemplate Tstruct Tstatic Tsigned Tshort Trestrict Tregister Tpublic Tprotected Tprivate Tmutable Tlong Tint Tinline Tfriend Tfloat Textern Texplicit Tenum Tdouble Tdecltype Tconstexpr Tconst Tclass Tchar Tbool Tauto TTilde TPtVirg TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_Constructor TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TColCol_BeforeTypedef TCBrace ]
ctor_dtor_member -> dtor_spec TTilde ident TOPar option(Tvoid) TCPar option(exn_spec) . TPtVirg [ Twchar_t Tvolatile Tvoid Tvirtual Tusing Tunsigned Tunion Ttypeof Ttypename Ttypedef Tthread_local Ttemplate Tstruct Tstatic Tsigned Tshort Trestrict Tregister Tpublic Tprotected Tprivate Tmutable Tlong Tint Tinline Tfriend Tfloat Textern Texplicit Tenum Tdouble Tdecltype Tconstexpr Tconst Tclass Tchar Tbool Tauto TTilde TPtVirg TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_Constructor TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TColCol_BeforeTypedef TCBrace ]
ctor_dtor_member -> dtor_spec TTilde ident TOPar option(Tvoid) TCPar option(exn_spec) . TEq Tdelete TPtVirg [ Twchar_t Tvolatile Tvoid Tvirtual Tusing Tunsigned Tunion Ttypeof Ttypename Ttypedef Tthread_local Ttemplate Tstruct Tstatic Tsigned Tshort Trestrict Tregister Tpublic Tprotected Tprivate Tmutable Tlong Tint Tinline Tfriend Tfloat Textern Texplicit Tenum Tdouble Tdecltype Tconstexpr Tconst Tclass Tchar Tbool Tauto TTilde TPtVirg TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_Constructor TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TColCol_BeforeTypedef TCBrace ]
ctor_dtor_member -> dtor_spec TTilde ident TOPar option(Tvoid) TCPar option(exn_spec) . TEq Tdefault TPtVirg [ Twchar_t Tvolatile Tvoid Tvirtual Tusing Tunsigned Tunion Ttypeof Ttypename Ttypedef Tthread_local Ttemplate Tstruct Tstatic Tsigned Tshort Trestrict Tregister Tpublic Tprotected Tprivate Tmutable Tlong Tint Tinline Tfriend Tfloat Textern Texplicit Tenum Tdouble Tdecltype Tconstexpr Tconst Tclass Tchar Tbool Tauto TTilde TPtVirg TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_Constructor TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TColCol_BeforeTypedef TCBrace ]
## Transitions:
-- On TPtVirg shift to state 773
-- On TOBrace shift to state 93
-- On TEq shift to state 774
-- On compound shift to state 779
## Reductions:

State 773:
## Known stack suffix:
## dtor_spec TTilde ident TOPar option(Tvoid) TCPar option(exn_spec) TPtVirg
## LR(1) items:
ctor_dtor_member -> dtor_spec TTilde ident TOPar option(Tvoid) TCPar option(exn_spec) TPtVirg . [ Twchar_t Tvolatile Tvoid Tvirtual Tusing Tunsigned Tunion Ttypeof Ttypename Ttypedef Tthread_local Ttemplate Tstruct Tstatic Tsigned Tshort Trestrict Tregister Tpublic Tprotected Tprivate Tmutable Tlong Tint Tinline Tfriend Tfloat Textern Texplicit Tenum Tdouble Tdecltype Tconstexpr Tconst Tclass Tchar Tbool Tauto TTilde TPtVirg TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_Constructor TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TColCol_BeforeTypedef TCBrace ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production ctor_dtor_member -> dtor_spec TTilde ident TOPar option(Tvoid) TCPar option(exn_spec) TPtVirg

State 774:
## Known stack suffix:
## dtor_spec TTilde ident TOPar option(Tvoid) TCPar option(exn_spec) TEq
## LR(1) items:
ctor_dtor_member -> dtor_spec TTilde ident TOPar option(Tvoid) TCPar option(exn_spec) TEq . Tdelete TPtVirg [ Twchar_t Tvolatile Tvoid Tvirtual Tusing Tunsigned Tunion Ttypeof Ttypename Ttypedef Tthread_local Ttemplate Tstruct Tstatic Tsigned Tshort Trestrict Tregister Tpublic Tprotected Tprivate Tmutable Tlong Tint Tinline Tfriend Tfloat Textern Texplicit Tenum Tdouble Tdecltype Tconstexpr Tconst Tclass Tchar Tbool Tauto TTilde TPtVirg TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_Constructor TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TColCol_BeforeTypedef TCBrace ]
ctor_dtor_member -> dtor_spec TTilde ident TOPar option(Tvoid) TCPar option(exn_spec) TEq . Tdefault TPtVirg [ Twchar_t Tvolatile Tvoid Tvirtual Tusing Tunsigned Tunion Ttypeof Ttypename Ttypedef Tthread_local Ttemplate Tstruct Tstatic Tsigned Tshort Trestrict Tregister Tpublic Tprotected Tprivate Tmutable Tlong Tint Tinline Tfriend Tfloat Textern Texplicit Tenum Tdouble Tdecltype Tconstexpr Tconst Tclass Tchar Tbool Tauto TTilde TPtVirg TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_Constructor TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TColCol_BeforeTypedef TCBrace ]
## Transitions:
-- On Tdelete shift to state 775
-- On Tdefault shift to state 777
## Reductions:

State 775:
## Known stack suffix:
## dtor_spec TTilde ident TOPar option(Tvoid) TCPar option(exn_spec) TEq Tdelete
## LR(1) items:
ctor_dtor_member -> dtor_spec TTilde ident TOPar option(Tvoid) TCPar option(exn_spec) TEq Tdelete . TPtVirg [ Twchar_t Tvolatile Tvoid Tvirtual Tusing Tunsigned Tunion Ttypeof Ttypename Ttypedef Tthread_local Ttemplate Tstruct Tstatic Tsigned Tshort Trestrict Tregister Tpublic Tprotected Tprivate Tmutable Tlong Tint Tinline Tfriend Tfloat Textern Texplicit Tenum Tdouble Tdecltype Tconstexpr Tconst Tclass Tchar Tbool Tauto TTilde TPtVirg TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_Constructor TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TColCol_BeforeTypedef TCBrace ]
## Transitions:
-- On TPtVirg shift to state 776
## Reductions:

State 776:
## Known stack suffix:
## dtor_spec TTilde ident TOPar option(Tvoid) TCPar option(exn_spec) TEq Tdelete TPtVirg
## LR(1) items:
ctor_dtor_member -> dtor_spec TTilde ident TOPar option(Tvoid) TCPar option(exn_spec) TEq Tdelete TPtVirg . [ Twchar_t Tvolatile Tvoid Tvirtual Tusing Tunsigned Tunion Ttypeof Ttypename Ttypedef Tthread_local Ttemplate Tstruct Tstatic Tsigned Tshort Trestrict Tregister Tpublic Tprotected Tprivate Tmutable Tlong Tint Tinline Tfriend Tfloat Textern Texplicit Tenum Tdouble Tdecltype Tconstexpr Tconst Tclass Tchar Tbool Tauto TTilde TPtVirg TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_Constructor TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TColCol_BeforeTypedef TCBrace ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production ctor_dtor_member -> dtor_spec TTilde ident TOPar option(Tvoid) TCPar option(exn_spec) TEq Tdelete TPtVirg

State 777:
## Known stack suffix:
## dtor_spec TTilde ident TOPar option(Tvoid) TCPar option(exn_spec) TEq Tdefault
## LR(1) items:
ctor_dtor_member -> dtor_spec TTilde ident TOPar option(Tvoid) TCPar option(exn_spec) TEq Tdefault . TPtVirg [ Twchar_t Tvolatile Tvoid Tvirtual Tusing Tunsigned Tunion Ttypeof Ttypename Ttypedef Tthread_local Ttemplate Tstruct Tstatic Tsigned Tshort Trestrict Tregister Tpublic Tprotected Tprivate Tmutable Tlong Tint Tinline Tfriend Tfloat Textern Texplicit Tenum Tdouble Tdecltype Tconstexpr Tconst Tclass Tchar Tbool Tauto TTilde TPtVirg TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_Constructor TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TColCol_BeforeTypedef TCBrace ]
## Transitions:
-- On TPtVirg shift to state 778
## Reductions:

State 778:
## Known stack suffix:
## dtor_spec TTilde ident TOPar option(Tvoid) TCPar option(exn_spec) TEq Tdefault TPtVirg
## LR(1) items:
ctor_dtor_member -> dtor_spec TTilde ident TOPar option(Tvoid) TCPar option(exn_spec) TEq Tdefault TPtVirg . [ Twchar_t Tvolatile Tvoid Tvirtual Tusing Tunsigned Tunion Ttypeof Ttypename Ttypedef Tthread_local Ttemplate Tstruct Tstatic Tsigned Tshort Trestrict Tregister Tpublic Tprotected Tprivate Tmutable Tlong Tint Tinline Tfriend Tfloat Textern Texplicit Tenum Tdouble Tdecltype Tconstexpr Tconst Tclass Tchar Tbool Tauto TTilde TPtVirg TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_Constructor TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TColCol_BeforeTypedef TCBrace ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production ctor_dtor_member -> dtor_spec TTilde ident TOPar option(Tvoid) TCPar option(exn_spec) TEq Tdefault TPtVirg

State 779:
## Known stack suffix:
## dtor_spec TTilde ident TOPar option(Tvoid) TCPar option(exn_spec) compound
## LR(1) items:
ctor_dtor_member -> dtor_spec TTilde ident TOPar option(Tvoid) TCPar option(exn_spec) compound . [ Twchar_t Tvolatile Tvoid Tvirtual Tusing Tunsigned Tunion Ttypeof Ttypename Ttypedef Tthread_local Ttemplate Tstruct Tstatic Tsigned Tshort Trestrict Tregister Tpublic Tprotected Tprivate Tmutable Tlong Tint Tinline Tfriend Tfloat Textern Texplicit Tenum Tdouble Tdecltype Tconstexpr Tconst Tclass Tchar Tbool Tauto TTilde TPtVirg TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_Constructor TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TColCol_BeforeTypedef TCBrace ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production ctor_dtor_member -> dtor_spec TTilde ident TOPar option(Tvoid) TCPar option(exn_spec) compound

State 780:
## Known stack suffix:
## decl_spec_seq
## LR(1) items:
field_declaration -> decl_spec_seq . TPtVirg [ Twchar_t Tvolatile Tvoid Tvirtual Tusing Tunsigned Tunion Ttypeof Ttypename Ttypedef Tthread_local Ttemplate Tstruct Tstatic Tsigned Tshort Trestrict Tregister Tpublic Tprotected Tprivate Tmutable Tlong Tint Tinline Tfriend Tfloat Textern Texplicit Tenum Tdouble Tdecltype Tconstexpr Tconst Tclass Tchar Tbool Tauto TTilde TPtVirg TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_Constructor TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TColCol_BeforeTypedef TCBrace ]
field_declaration -> decl_spec_seq . listc(member_declarator) TPtVirg [ Twchar_t Tvolatile Tvoid Tvirtual Tusing Tunsigned Tunion Ttypeof Ttypename Ttypedef Tthread_local Ttemplate Tstruct Tstatic Tsigned Tshort Trestrict Tregister Tpublic Tprotected Tprivate Tmutable Tlong Tint Tinline Tfriend Tfloat Textern Texplicit Tenum Tdouble Tdecltype Tconstexpr Tconst Tclass Tchar Tbool Tauto TTilde TPtVirg TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_Constructor TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TColCol_BeforeTypedef TCBrace ]
function_definition -> decl_spec_seq . declarator function_body [ Twchar_t Tvolatile Tvoid Tvirtual Tusing Tunsigned Tunion Ttypeof Ttypename Ttypedef Tthread_local Ttemplate Tstruct Tstatic Tsigned Tshort Trestrict Tregister Tpublic Tprotected Tprivate Tmutable Tlong Tint Tinline Tfriend Tfloat Textern Texplicit Tenum Tdouble Tdecltype Tconstexpr Tconst Tclass Tchar Tbool Tauto TTilde TPtVirg TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_Constructor TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TColCol_BeforeTypedef TCBrace ]
## Transitions:
-- On TPtVirg shift to state 781
-- On TOPar shift to state 521
-- On TMul shift to state 443
-- On TColCol shift to state 8
-- On TCol shift to state 782
-- On TAndLog shift to state 444
-- On TAnd shift to state 445
-- On pointer shift to state 522
-- On option(TColCol) shift to state 456
-- On member_declarator shift to state 784
-- On listc(member_declarator) shift to state 785
-- On direct_d shift to state 498
-- On declarator_id shift to state 495
-- On declarator shift to state 794
## Reductions:
-- On Toperator TIdent_TemplatenameInQualifier TIdent_ClassnameInQualifier TIdent
--   reduce production option(TColCol) ->

State 781:
## Known stack suffix:
## decl_spec_seq TPtVirg
## LR(1) items:
field_declaration -> decl_spec_seq TPtVirg . [ Twchar_t Tvolatile Tvoid Tvirtual Tusing Tunsigned Tunion Ttypeof Ttypename Ttypedef Tthread_local Ttemplate Tstruct Tstatic Tsigned Tshort Trestrict Tregister Tpublic Tprotected Tprivate Tmutable Tlong Tint Tinline Tfriend Tfloat Textern Texplicit Tenum Tdouble Tdecltype Tconstexpr Tconst Tclass Tchar Tbool Tauto TTilde TPtVirg TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_Constructor TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TColCol_BeforeTypedef TCBrace ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production field_declaration -> decl_spec_seq TPtVirg

State 782:
## Known stack suffix:
## TCol
## LR(1) items:
member_declarator -> TCol . const_expr [ TPtVirg TComma ]
## Transitions:
-- On Twchar_t_Constr shift to state 14
-- On Twchar_t shift to state 1
-- On Tvoid shift to state 3
-- On Tunsigned shift to state 15
-- On Ttypeof shift to state 17
-- On Ttypeid shift to state 23
-- On Ttrue shift to state 25
-- On Tthis shift to state 26
-- On Tstatic_cast shift to state 28
-- On Tsizeof shift to state 29
-- On Tsigned shift to state 30
-- On Tshort_Constr shift to state 31
-- On Tshort shift to state 32
-- On Treinterpret_cast shift to state 33
-- On Toperator shift to state 34
-- On Tnullptr shift to state 48
-- On Tnull shift to state 49
-- On Tlong_Constr shift to state 50
-- On Tlong shift to state 38
-- On Tint_Constr shift to state 51
-- On Tint shift to state 39
-- On Tfloat_Constr shift to state 52
-- On Tfloat shift to state 40
-- On Tfalse shift to state 53
-- On Tdynamic_cast shift to state 54
-- On Tdouble_Constr shift to state 55
-- On Tdouble shift to state 41
-- On Tdecltype shift to state 45
-- On Tconst_cast shift to state 56
-- On Tchar_Constr shift to state 57
-- On Tchar shift to state 58
-- On Tbool_Constr shift to state 59
-- On Tbool shift to state 60
-- On TTilde shift to state 61
-- On TString shift to state 62
-- On TPlus shift to state 63
-- On TOPar shift to state 64
-- On TOCro_Lambda shift to state 78
-- On TMul shift to state 88
-- On TMinus shift to state 89
-- On TInt shift to state 90
-- On TInc shift to state 91
-- On TIdent_TypedefConstr shift to state 106
-- On TIdent_Typedef shift to state 20
-- On TIdent_TemplatenameInQualifier_BeforeTypedef shift to state 21
-- On TIdent_TemplatenameInQualifier shift to state 12
-- On TIdent_Templatename shift to state 108
-- On TIdent_MacroString shift to state 110
-- On TIdent_ClassnameInQualifier_BeforeTypedef shift to state 111
-- On TIdent_ClassnameInQualifier shift to state 112
-- On TIdent shift to state 113
-- On TFloat shift to state 116
-- On TDec shift to state 117
-- On TColCol_BeforeTypedef shift to state 118
-- On TColCol shift to state 128
-- On TChar shift to state 174
-- On TBang shift to state 175
-- On TAndLog shift to state 176
-- On TAnd shift to state 177
-- On LDots shift to state 178
-- On unqualified_id shift to state 179
-- On unary_op shift to state 180
-- On unary_expr shift to state 181
-- On type_name shift to state 182
-- On type_cplusplus_id shift to state 183
-- On template_id shift to state 120
-- On string_elem shift to state 184
-- On simple_type_specifier shift to state 189
-- On shift_expr shift to state 217
-- On relational_expr shift to state 229
-- On qualified_id shift to state 191
-- On primary_expr shift to state 192
-- On primary_cplusplus_id shift to state 193
-- On postfix_expr shift to state 194
-- On pm_expr shift to state 219
-- On option(TColCol) shift to state 221
-- On operator_function_id shift to state 168
-- On new_expr shift to state 233
-- On nested_name_specifier2 shift to state 207
-- On nested_name_specifier shift to state 165
-- On multiplicative_expr shift to state 234
-- On logical_or_expr shift to state 246
-- On logical_and_expr shift to state 250
-- On literal shift to state 238
-- On lambda_introducer shift to state 239
-- On inclusive_or_expr shift to state 272
-- On id_expression shift to state 241
-- On exclusive_or_expr shift to state 273
-- On equality_expr shift to state 256
-- On enum_name_or_typedef_name_or_simple_class_name shift to state 123
-- On delete_expr shift to state 242
-- On decltype_specifier shift to state 243
-- On cpp_cast_operator shift to state 244
-- On conversion_function_id shift to state 169
-- On const_expr shift to state 783
-- On cond_expr shift to state 481
-- On class_or_namespace_name_for_qualifier2 shift to state 124
-- On class_or_namespace_name_for_qualifier shift to state 170
-- On cast_operator_expr shift to state 261
-- On cast_expr shift to state 262
-- On cast_constructor_expr shift to state 263
-- On basic_type_2 shift to state 264
-- On and_expr shift to state 334
-- On additive_expr shift to state 341
## Reductions:
-- On Tnew Tdelete
--   reduce production option(TColCol) ->

State 783:
## Known stack suffix:
## TCol const_expr
## LR(1) items:
member_declarator -> TCol const_expr . [ TPtVirg TComma ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production member_declarator -> TCol const_expr

State 784:
## Known stack suffix:
## member_declarator
## LR(1) items:
listc(member_declarator) -> member_declarator . [ TPtVirg TComma ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production listc(member_declarator) -> member_declarator

State 785:
## Known stack suffix:
## decl_spec_seq listc(member_declarator)
## LR(1) items:
field_declaration -> decl_spec_seq listc(member_declarator) . TPtVirg [ Twchar_t Tvolatile Tvoid Tvirtual Tusing Tunsigned Tunion Ttypeof Ttypename Ttypedef Tthread_local Ttemplate Tstruct Tstatic Tsigned Tshort Trestrict Tregister Tpublic Tprotected Tprivate Tmutable Tlong Tint Tinline Tfriend Tfloat Textern Texplicit Tenum Tdouble Tdecltype Tconstexpr Tconst Tclass Tchar Tbool Tauto TTilde TPtVirg TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_Constructor TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TColCol_BeforeTypedef TCBrace ]
listc(member_declarator) -> listc(member_declarator) . TComma member_declarator [ TPtVirg TComma ]
## Transitions:
-- On TPtVirg shift to state 786
-- On TComma shift to state 787
## Reductions:

State 786:
## Known stack suffix:
## decl_spec_seq listc(member_declarator) TPtVirg
## LR(1) items:
field_declaration -> decl_spec_seq listc(member_declarator) TPtVirg . [ Twchar_t Tvolatile Tvoid Tvirtual Tusing Tunsigned Tunion Ttypeof Ttypename Ttypedef Tthread_local Ttemplate Tstruct Tstatic Tsigned Tshort Trestrict Tregister Tpublic Tprotected Tprivate Tmutable Tlong Tint Tinline Tfriend Tfloat Textern Texplicit Tenum Tdouble Tdecltype Tconstexpr Tconst Tclass Tchar Tbool Tauto TTilde TPtVirg TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_Constructor TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TColCol_BeforeTypedef TCBrace ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production field_declaration -> decl_spec_seq listc(member_declarator) TPtVirg

State 787:
## Known stack suffix:
## listc(member_declarator) TComma
## LR(1) items:
listc(member_declarator) -> listc(member_declarator) TComma . member_declarator [ TPtVirg TComma ]
## Transitions:
-- On TOPar shift to state 521
-- On TMul shift to state 443
-- On TColCol shift to state 8
-- On TCol shift to state 782
-- On TAndLog shift to state 444
-- On TAnd shift to state 445
-- On pointer shift to state 522
-- On option(TColCol) shift to state 456
-- On member_declarator shift to state 788
-- On direct_d shift to state 498
-- On declarator_id shift to state 495
-- On declarator shift to state 789
## Reductions:
-- On Toperator TIdent_TemplatenameInQualifier TIdent_ClassnameInQualifier TIdent
--   reduce production option(TColCol) ->

State 788:
## Known stack suffix:
## listc(member_declarator) TComma member_declarator
## LR(1) items:
listc(member_declarator) -> listc(member_declarator) TComma member_declarator . [ TPtVirg TComma ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production listc(member_declarator) -> listc(member_declarator) TComma member_declarator

State 789:
## Known stack suffix:
## declarator
## LR(1) items:
member_declarator -> declarator . [ TPtVirg TComma ]
member_declarator -> declarator . TEq const_expr [ TPtVirg TComma ]
member_declarator -> declarator . TCol const_expr [ TPtVirg TComma ]
## Transitions:
-- On TEq shift to state 790
-- On TCol shift to state 792
## Reductions:
-- On TPtVirg TComma
--   reduce production member_declarator -> declarator

State 790:
## Known stack suffix:
## declarator TEq
## LR(1) items:
member_declarator -> declarator TEq . const_expr [ TPtVirg TComma ]
## Transitions:
-- On Twchar_t_Constr shift to state 14
-- On Twchar_t shift to state 1
-- On Tvoid shift to state 3
-- On Tunsigned shift to state 15
-- On Ttypeof shift to state 17
-- On Ttypeid shift to state 23
-- On Ttrue shift to state 25
-- On Tthis shift to state 26
-- On Tstatic_cast shift to state 28
-- On Tsizeof shift to state 29
-- On Tsigned shift to state 30
-- On Tshort_Constr shift to state 31
-- On Tshort shift to state 32
-- On Treinterpret_cast shift to state 33
-- On Toperator shift to state 34
-- On Tnullptr shift to state 48
-- On Tnull shift to state 49
-- On Tlong_Constr shift to state 50
-- On Tlong shift to state 38
-- On Tint_Constr shift to state 51
-- On Tint shift to state 39
-- On Tfloat_Constr shift to state 52
-- On Tfloat shift to state 40
-- On Tfalse shift to state 53
-- On Tdynamic_cast shift to state 54
-- On Tdouble_Constr shift to state 55
-- On Tdouble shift to state 41
-- On Tdecltype shift to state 45
-- On Tconst_cast shift to state 56
-- On Tchar_Constr shift to state 57
-- On Tchar shift to state 58
-- On Tbool_Constr shift to state 59
-- On Tbool shift to state 60
-- On TTilde shift to state 61
-- On TString shift to state 62
-- On TPlus shift to state 63
-- On TOPar shift to state 64
-- On TOCro_Lambda shift to state 78
-- On TMul shift to state 88
-- On TMinus shift to state 89
-- On TInt shift to state 90
-- On TInc shift to state 91
-- On TIdent_TypedefConstr shift to state 106
-- On TIdent_Typedef shift to state 20
-- On TIdent_TemplatenameInQualifier_BeforeTypedef shift to state 21
-- On TIdent_TemplatenameInQualifier shift to state 12
-- On TIdent_Templatename shift to state 108
-- On TIdent_MacroString shift to state 110
-- On TIdent_ClassnameInQualifier_BeforeTypedef shift to state 111
-- On TIdent_ClassnameInQualifier shift to state 112
-- On TIdent shift to state 113
-- On TFloat shift to state 116
-- On TDec shift to state 117
-- On TColCol_BeforeTypedef shift to state 118
-- On TColCol shift to state 128
-- On TChar shift to state 174
-- On TBang shift to state 175
-- On TAndLog shift to state 176
-- On TAnd shift to state 177
-- On LDots shift to state 178
-- On unqualified_id shift to state 179
-- On unary_op shift to state 180
-- On unary_expr shift to state 181
-- On type_name shift to state 182
-- On type_cplusplus_id shift to state 183
-- On template_id shift to state 120
-- On string_elem shift to state 184
-- On simple_type_specifier shift to state 189
-- On shift_expr shift to state 217
-- On relational_expr shift to state 229
-- On qualified_id shift to state 191
-- On primary_expr shift to state 192
-- On primary_cplusplus_id shift to state 193
-- On postfix_expr shift to state 194
-- On pm_expr shift to state 219
-- On option(TColCol) shift to state 221
-- On operator_function_id shift to state 168
-- On new_expr shift to state 233
-- On nested_name_specifier2 shift to state 207
-- On nested_name_specifier shift to state 165
-- On multiplicative_expr shift to state 234
-- On logical_or_expr shift to state 246
-- On logical_and_expr shift to state 250
-- On literal shift to state 238
-- On lambda_introducer shift to state 239
-- On inclusive_or_expr shift to state 272
-- On id_expression shift to state 241
-- On exclusive_or_expr shift to state 273
-- On equality_expr shift to state 256
-- On enum_name_or_typedef_name_or_simple_class_name shift to state 123
-- On delete_expr shift to state 242
-- On decltype_specifier shift to state 243
-- On cpp_cast_operator shift to state 244
-- On conversion_function_id shift to state 169
-- On const_expr shift to state 791
-- On cond_expr shift to state 481
-- On class_or_namespace_name_for_qualifier2 shift to state 124
-- On class_or_namespace_name_for_qualifier shift to state 170
-- On cast_operator_expr shift to state 261
-- On cast_expr shift to state 262
-- On cast_constructor_expr shift to state 263
-- On basic_type_2 shift to state 264
-- On and_expr shift to state 334
-- On additive_expr shift to state 341
## Reductions:
-- On Tnew Tdelete
--   reduce production option(TColCol) ->

State 791:
## Known stack suffix:
## declarator TEq const_expr
## LR(1) items:
member_declarator -> declarator TEq const_expr . [ TPtVirg TComma ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production member_declarator -> declarator TEq const_expr

State 792:
## Known stack suffix:
## declarator TCol
## LR(1) items:
member_declarator -> declarator TCol . const_expr [ TPtVirg TComma ]
## Transitions:
-- On Twchar_t_Constr shift to state 14
-- On Twchar_t shift to state 1
-- On Tvoid shift to state 3
-- On Tunsigned shift to state 15
-- On Ttypeof shift to state 17
-- On Ttypeid shift to state 23
-- On Ttrue shift to state 25
-- On Tthis shift to state 26
-- On Tstatic_cast shift to state 28
-- On Tsizeof shift to state 29
-- On Tsigned shift to state 30
-- On Tshort_Constr shift to state 31
-- On Tshort shift to state 32
-- On Treinterpret_cast shift to state 33
-- On Toperator shift to state 34
-- On Tnullptr shift to state 48
-- On Tnull shift to state 49
-- On Tlong_Constr shift to state 50
-- On Tlong shift to state 38
-- On Tint_Constr shift to state 51
-- On Tint shift to state 39
-- On Tfloat_Constr shift to state 52
-- On Tfloat shift to state 40
-- On Tfalse shift to state 53
-- On Tdynamic_cast shift to state 54
-- On Tdouble_Constr shift to state 55
-- On Tdouble shift to state 41
-- On Tdecltype shift to state 45
-- On Tconst_cast shift to state 56
-- On Tchar_Constr shift to state 57
-- On Tchar shift to state 58
-- On Tbool_Constr shift to state 59
-- On Tbool shift to state 60
-- On TTilde shift to state 61
-- On TString shift to state 62
-- On TPlus shift to state 63
-- On TOPar shift to state 64
-- On TOCro_Lambda shift to state 78
-- On TMul shift to state 88
-- On TMinus shift to state 89
-- On TInt shift to state 90
-- On TInc shift to state 91
-- On TIdent_TypedefConstr shift to state 106
-- On TIdent_Typedef shift to state 20
-- On TIdent_TemplatenameInQualifier_BeforeTypedef shift to state 21
-- On TIdent_TemplatenameInQualifier shift to state 12
-- On TIdent_Templatename shift to state 108
-- On TIdent_MacroString shift to state 110
-- On TIdent_ClassnameInQualifier_BeforeTypedef shift to state 111
-- On TIdent_ClassnameInQualifier shift to state 112
-- On TIdent shift to state 113
-- On TFloat shift to state 116
-- On TDec shift to state 117
-- On TColCol_BeforeTypedef shift to state 118
-- On TColCol shift to state 128
-- On TChar shift to state 174
-- On TBang shift to state 175
-- On TAndLog shift to state 176
-- On TAnd shift to state 177
-- On LDots shift to state 178
-- On unqualified_id shift to state 179
-- On unary_op shift to state 180
-- On unary_expr shift to state 181
-- On type_name shift to state 182
-- On type_cplusplus_id shift to state 183
-- On template_id shift to state 120
-- On string_elem shift to state 184
-- On simple_type_specifier shift to state 189
-- On shift_expr shift to state 217
-- On relational_expr shift to state 229
-- On qualified_id shift to state 191
-- On primary_expr shift to state 192
-- On primary_cplusplus_id shift to state 193
-- On postfix_expr shift to state 194
-- On pm_expr shift to state 219
-- On option(TColCol) shift to state 221
-- On operator_function_id shift to state 168
-- On new_expr shift to state 233
-- On nested_name_specifier2 shift to state 207
-- On nested_name_specifier shift to state 165
-- On multiplicative_expr shift to state 234
-- On logical_or_expr shift to state 246
-- On logical_and_expr shift to state 250
-- On literal shift to state 238
-- On lambda_introducer shift to state 239
-- On inclusive_or_expr shift to state 272
-- On id_expression shift to state 241
-- On exclusive_or_expr shift to state 273
-- On equality_expr shift to state 256
-- On enum_name_or_typedef_name_or_simple_class_name shift to state 123
-- On delete_expr shift to state 242
-- On decltype_specifier shift to state 243
-- On cpp_cast_operator shift to state 244
-- On conversion_function_id shift to state 169
-- On const_expr shift to state 793
-- On cond_expr shift to state 481
-- On class_or_namespace_name_for_qualifier2 shift to state 124
-- On class_or_namespace_name_for_qualifier shift to state 170
-- On cast_operator_expr shift to state 261
-- On cast_expr shift to state 262
-- On cast_constructor_expr shift to state 263
-- On basic_type_2 shift to state 264
-- On and_expr shift to state 334
-- On additive_expr shift to state 341
## Reductions:
-- On Tnew Tdelete
--   reduce production option(TColCol) ->

State 793:
## Known stack suffix:
## declarator TCol const_expr
## LR(1) items:
member_declarator -> declarator TCol const_expr . [ TPtVirg TComma ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production member_declarator -> declarator TCol const_expr

State 794:
## Known stack suffix:
## decl_spec_seq declarator
## LR(1) items:
function_definition -> decl_spec_seq declarator . function_body [ Twchar_t Tvolatile Tvoid Tvirtual Tusing Tunsigned Tunion Ttypeof Ttypename Ttypedef Tthread_local Ttemplate Tstruct Tstatic Tsigned Tshort Trestrict Tregister Tpublic Tprotected Tprivate Tmutable Tlong Tint Tinline Tfriend Tfloat Textern Texplicit Tenum Tdouble Tdecltype Tconstexpr Tconst Tclass Tchar Tbool Tauto TTilde TPtVirg TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_Constructor TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TColCol_BeforeTypedef TCBrace ]
member_declarator -> declarator . [ TPtVirg TComma ]
member_declarator -> declarator . TEq const_expr [ TPtVirg TComma ]
member_declarator -> declarator . TCol const_expr [ TPtVirg TComma ]
## Transitions:
-- On TOBrace shift to state 93
-- On TEq shift to state 790
-- On TCol shift to state 792
-- On function_body shift to state 613
-- On compound shift to state 614
## Reductions:
-- On TPtVirg TComma
--   reduce production member_declarator -> declarator

State 795:
## Known stack suffix:
## ctor_spec
## LR(1) items:
ctor_dtor_member -> ctor_spec . TIdent_Constructor TOPar option(parameter_type_list) TCPar ctor_mem_initializer_list_opt compound [ Twchar_t Tvolatile Tvoid Tvirtual Tusing Tunsigned Tunion Ttypeof Ttypename Ttypedef Tthread_local Ttemplate Tstruct Tstatic Tsigned Tshort Trestrict Tregister Tpublic Tprotected Tprivate Tmutable Tlong Tint Tinline Tfriend Tfloat Textern Texplicit Tenum Tdouble Tdecltype Tconstexpr Tconst Tclass Tchar Tbool Tauto TTilde TPtVirg TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_Constructor TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TColCol_BeforeTypedef TCBrace ]
ctor_dtor_member -> ctor_spec . TIdent_Constructor TOPar option(parameter_type_list) TCPar TPtVirg [ Twchar_t Tvolatile Tvoid Tvirtual Tusing Tunsigned Tunion Ttypeof Ttypename Ttypedef Tthread_local Ttemplate Tstruct Tstatic Tsigned Tshort Trestrict Tregister Tpublic Tprotected Tprivate Tmutable Tlong Tint Tinline Tfriend Tfloat Textern Texplicit Tenum Tdouble Tdecltype Tconstexpr Tconst Tclass Tchar Tbool Tauto TTilde TPtVirg TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_Constructor TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TColCol_BeforeTypedef TCBrace ]
ctor_dtor_member -> ctor_spec . TIdent_Constructor TOPar option(parameter_type_list) TCPar TEq Tdelete TPtVirg [ Twchar_t Tvolatile Tvoid Tvirtual Tusing Tunsigned Tunion Ttypeof Ttypename Ttypedef Tthread_local Ttemplate Tstruct Tstatic Tsigned Tshort Trestrict Tregister Tpublic Tprotected Tprivate Tmutable Tlong Tint Tinline Tfriend Tfloat Textern Texplicit Tenum Tdouble Tdecltype Tconstexpr Tconst Tclass Tchar Tbool Tauto TTilde TPtVirg TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_Constructor TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TColCol_BeforeTypedef TCBrace ]
ctor_dtor_member -> ctor_spec . TIdent_Constructor TOPar option(parameter_type_list) TCPar TEq Tdefault TPtVirg [ Twchar_t Tvolatile Tvoid Tvirtual Tusing Tunsigned Tunion Ttypeof Ttypename Ttypedef Tthread_local Ttemplate Tstruct Tstatic Tsigned Tshort Trestrict Tregister Tpublic Tprotected Tprivate Tmutable Tlong Tint Tinline Tfriend Tfloat Textern Texplicit Tenum Tdouble Tdecltype Tconstexpr Tconst Tclass Tchar Tbool Tauto TTilde TPtVirg TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_Constructor TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TColCol_BeforeTypedef TCBrace ]
## Transitions:
-- On TIdent_Constructor shift to state 796
## Reductions:

State 796:
## Known stack suffix:
## ctor_spec TIdent_Constructor
## LR(1) items:
ctor_dtor_member -> ctor_spec TIdent_Constructor . TOPar option(parameter_type_list) TCPar ctor_mem_initializer_list_opt compound [ Twchar_t Tvolatile Tvoid Tvirtual Tusing Tunsigned Tunion Ttypeof Ttypename Ttypedef Tthread_local Ttemplate Tstruct Tstatic Tsigned Tshort Trestrict Tregister Tpublic Tprotected Tprivate Tmutable Tlong Tint Tinline Tfriend Tfloat Textern Texplicit Tenum Tdouble Tdecltype Tconstexpr Tconst Tclass Tchar Tbool Tauto TTilde TPtVirg TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_Constructor TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TColCol_BeforeTypedef TCBrace ]
ctor_dtor_member -> ctor_spec TIdent_Constructor . TOPar option(parameter_type_list) TCPar TPtVirg [ Twchar_t Tvolatile Tvoid Tvirtual Tusing Tunsigned Tunion Ttypeof Ttypename Ttypedef Tthread_local Ttemplate Tstruct Tstatic Tsigned Tshort Trestrict Tregister Tpublic Tprotected Tprivate Tmutable Tlong Tint Tinline Tfriend Tfloat Textern Texplicit Tenum Tdouble Tdecltype Tconstexpr Tconst Tclass Tchar Tbool Tauto TTilde TPtVirg TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_Constructor TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TColCol_BeforeTypedef TCBrace ]
ctor_dtor_member -> ctor_spec TIdent_Constructor . TOPar option(parameter_type_list) TCPar TEq Tdelete TPtVirg [ Twchar_t Tvolatile Tvoid Tvirtual Tusing Tunsigned Tunion Ttypeof Ttypename Ttypedef Tthread_local Ttemplate Tstruct Tstatic Tsigned Tshort Trestrict Tregister Tpublic Tprotected Tprivate Tmutable Tlong Tint Tinline Tfriend Tfloat Textern Texplicit Tenum Tdouble Tdecltype Tconstexpr Tconst Tclass Tchar Tbool Tauto TTilde TPtVirg TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_Constructor TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TColCol_BeforeTypedef TCBrace ]
ctor_dtor_member -> ctor_spec TIdent_Constructor . TOPar option(parameter_type_list) TCPar TEq Tdefault TPtVirg [ Twchar_t Tvolatile Tvoid Tvirtual Tusing Tunsigned Tunion Ttypeof Ttypename Ttypedef Tthread_local Ttemplate Tstruct Tstatic Tsigned Tshort Trestrict Tregister Tpublic Tprotected Tprivate Tmutable Tlong Tint Tinline Tfriend Tfloat Textern Texplicit Tenum Tdouble Tdecltype Tconstexpr Tconst Tclass Tchar Tbool Tauto TTilde TPtVirg TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_Constructor TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TColCol_BeforeTypedef TCBrace ]
## Transitions:
-- On TOPar shift to state 797
## Reductions:

State 797:
## Known stack suffix:
## ctor_spec TIdent_Constructor TOPar
## LR(1) items:
ctor_dtor_member -> ctor_spec TIdent_Constructor TOPar . option(parameter_type_list) TCPar ctor_mem_initializer_list_opt compound [ Twchar_t Tvolatile Tvoid Tvirtual Tusing Tunsigned Tunion Ttypeof Ttypename Ttypedef Tthread_local Ttemplate Tstruct Tstatic Tsigned Tshort Trestrict Tregister Tpublic Tprotected Tprivate Tmutable Tlong Tint Tinline Tfriend Tfloat Textern Texplicit Tenum Tdouble Tdecltype Tconstexpr Tconst Tclass Tchar Tbool Tauto TTilde TPtVirg TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_Constructor TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TColCol_BeforeTypedef TCBrace ]
ctor_dtor_member -> ctor_spec TIdent_Constructor TOPar . option(parameter_type_list) TCPar TPtVirg [ Twchar_t Tvolatile Tvoid Tvirtual Tusing Tunsigned Tunion Ttypeof Ttypename Ttypedef Tthread_local Ttemplate Tstruct Tstatic Tsigned Tshort Trestrict Tregister Tpublic Tprotected Tprivate Tmutable Tlong Tint Tinline Tfriend Tfloat Textern Texplicit Tenum Tdouble Tdecltype Tconstexpr Tconst Tclass Tchar Tbool Tauto TTilde TPtVirg TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_Constructor TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TColCol_BeforeTypedef TCBrace ]
ctor_dtor_member -> ctor_spec TIdent_Constructor TOPar . option(parameter_type_list) TCPar TEq Tdelete TPtVirg [ Twchar_t Tvolatile Tvoid Tvirtual Tusing Tunsigned Tunion Ttypeof Ttypename Ttypedef Tthread_local Ttemplate Tstruct Tstatic Tsigned Tshort Trestrict Tregister Tpublic Tprotected Tprivate Tmutable Tlong Tint Tinline Tfriend Tfloat Textern Texplicit Tenum Tdouble Tdecltype Tconstexpr Tconst Tclass Tchar Tbool Tauto TTilde TPtVirg TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_Constructor TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TColCol_BeforeTypedef TCBrace ]
ctor_dtor_member -> ctor_spec TIdent_Constructor TOPar . option(parameter_type_list) TCPar TEq Tdefault TPtVirg [ Twchar_t Tvolatile Tvoid Tvirtual Tusing Tunsigned Tunion Ttypeof Ttypename Ttypedef Tthread_local Ttemplate Tstruct Tstatic Tsigned Tshort Trestrict Tregister Tpublic Tprotected Tprivate Tmutable Tlong Tint Tinline Tfriend Tfloat Textern Texplicit Tenum Tdouble Tdecltype Tconstexpr Tconst Tclass Tchar Tbool Tauto TTilde TPtVirg TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_Constructor TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TColCol_BeforeTypedef TCBrace ]
## Transitions:
-- On Twchar_t shift to state 1
-- On Tvolatile shift to state 2
-- On Tvoid shift to state 3
-- On Tvirtual shift to state 4
-- On Tunsigned shift to state 15
-- On Tunion shift to state 16
-- On Ttypeof shift to state 17
-- On Ttypename shift to state 19
-- On Ttypedef shift to state 96
-- On Tthread_local shift to state 97
-- On Tstruct shift to state 27
-- On Tstatic shift to state 98
-- On Tsigned shift to state 30
-- On Tshort shift to state 32
-- On Trestrict shift to state 65
-- On Tregister shift to state 99
-- On Tmutable shift to state 100
-- On Tlong shift to state 38
-- On Tint shift to state 39
-- On Tinline shift to state 101
-- On Tfriend shift to state 102
-- On Tfloat shift to state 40
-- On Textern shift to state 103
-- On Tenum shift to state 66
-- On Tdouble shift to state 41
-- On Tdecltype shift to state 45
-- On Tconstexpr shift to state 104
-- On Tconst shift to state 76
-- On Tclass shift to state 77
-- On Tchar shift to state 58
-- On Tbool shift to state 60
-- On Tauto shift to state 105
-- On TIdent_Typedef shift to state 20
-- On TIdent_TemplatenameInQualifier_BeforeTypedef shift to state 21
-- On TIdent_Templatename shift to state 108
-- On TIdent_ClassnameInQualifier_BeforeTypedef shift to state 111
-- On TIdent shift to state 453
-- On TColCol_BeforeTypedef shift to state 118
-- On type_spec shift to state 314
-- On type_name shift to state 182
-- On type_cplusplus_id shift to state 183
-- On template_id shift to state 120
-- On storage_class_spec shift to state 316
-- On simple_type_specifier shift to state 206
-- On parameter_type_list shift to state 699
-- On parameter_list shift to state 468
-- On parameter_decl2 shift to state 476
-- On parameter_decl shift to state 472
-- On option(parameter_type_list) shift to state 798
-- On nested_name_specifier2 shift to state 207
-- On function_spec shift to state 437
-- On enum_specifier shift to state 209
-- On enum_name_or_typedef_name_or_simple_class_name shift to state 123
-- On enum_head shift to state 210
-- On elaborated_type_specifier shift to state 274
-- On decltype_specifier shift to state 243
-- On decl_spec_seq shift to state 441
-- On decl_spec shift to state 473
-- On cv_qualif shift to state 475
-- On class_specifier shift to state 277
-- On class_or_namespace_name_for_qualifier2 shift to state 124
-- On class_key shift to state 278
-- On class_head shift to state 301
## Reductions:
-- On TCPar
--   reduce production option(parameter_type_list) ->

State 798:
## Known stack suffix:
## ctor_spec TIdent_Constructor TOPar option(parameter_type_list)
## LR(1) items:
ctor_dtor_member -> ctor_spec TIdent_Constructor TOPar option(parameter_type_list) . TCPar ctor_mem_initializer_list_opt compound [ Twchar_t Tvolatile Tvoid Tvirtual Tusing Tunsigned Tunion Ttypeof Ttypename Ttypedef Tthread_local Ttemplate Tstruct Tstatic Tsigned Tshort Trestrict Tregister Tpublic Tprotected Tprivate Tmutable Tlong Tint Tinline Tfriend Tfloat Textern Texplicit Tenum Tdouble Tdecltype Tconstexpr Tconst Tclass Tchar Tbool Tauto TTilde TPtVirg TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_Constructor TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TColCol_BeforeTypedef TCBrace ]
ctor_dtor_member -> ctor_spec TIdent_Constructor TOPar option(parameter_type_list) . TCPar TPtVirg [ Twchar_t Tvolatile Tvoid Tvirtual Tusing Tunsigned Tunion Ttypeof Ttypename Ttypedef Tthread_local Ttemplate Tstruct Tstatic Tsigned Tshort Trestrict Tregister Tpublic Tprotected Tprivate Tmutable Tlong Tint Tinline Tfriend Tfloat Textern Texplicit Tenum Tdouble Tdecltype Tconstexpr Tconst Tclass Tchar Tbool Tauto TTilde TPtVirg TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_Constructor TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TColCol_BeforeTypedef TCBrace ]
ctor_dtor_member -> ctor_spec TIdent_Constructor TOPar option(parameter_type_list) . TCPar TEq Tdelete TPtVirg [ Twchar_t Tvolatile Tvoid Tvirtual Tusing Tunsigned Tunion Ttypeof Ttypename Ttypedef Tthread_local Ttemplate Tstruct Tstatic Tsigned Tshort Trestrict Tregister Tpublic Tprotected Tprivate Tmutable Tlong Tint Tinline Tfriend Tfloat Textern Texplicit Tenum Tdouble Tdecltype Tconstexpr Tconst Tclass Tchar Tbool Tauto TTilde TPtVirg TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_Constructor TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TColCol_BeforeTypedef TCBrace ]
ctor_dtor_member -> ctor_spec TIdent_Constructor TOPar option(parameter_type_list) . TCPar TEq Tdefault TPtVirg [ Twchar_t Tvolatile Tvoid Tvirtual Tusing Tunsigned Tunion Ttypeof Ttypename Ttypedef Tthread_local Ttemplate Tstruct Tstatic Tsigned Tshort Trestrict Tregister Tpublic Tprotected Tprivate Tmutable Tlong Tint Tinline Tfriend Tfloat Textern Texplicit Tenum Tdouble Tdecltype Tconstexpr Tconst Tclass Tchar Tbool Tauto TTilde TPtVirg TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_Constructor TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TColCol_BeforeTypedef TCBrace ]
## Transitions:
-- On TCPar shift to state 799
## Reductions:

State 799:
## Known stack suffix:
## ctor_spec TIdent_Constructor TOPar option(parameter_type_list) TCPar
## LR(1) items:
ctor_dtor_member -> ctor_spec TIdent_Constructor TOPar option(parameter_type_list) TCPar . ctor_mem_initializer_list_opt compound [ Twchar_t Tvolatile Tvoid Tvirtual Tusing Tunsigned Tunion Ttypeof Ttypename Ttypedef Tthread_local Ttemplate Tstruct Tstatic Tsigned Tshort Trestrict Tregister Tpublic Tprotected Tprivate Tmutable Tlong Tint Tinline Tfriend Tfloat Textern Texplicit Tenum Tdouble Tdecltype Tconstexpr Tconst Tclass Tchar Tbool Tauto TTilde TPtVirg TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_Constructor TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TColCol_BeforeTypedef TCBrace ]
ctor_dtor_member -> ctor_spec TIdent_Constructor TOPar option(parameter_type_list) TCPar . TPtVirg [ Twchar_t Tvolatile Tvoid Tvirtual Tusing Tunsigned Tunion Ttypeof Ttypename Ttypedef Tthread_local Ttemplate Tstruct Tstatic Tsigned Tshort Trestrict Tregister Tpublic Tprotected Tprivate Tmutable Tlong Tint Tinline Tfriend Tfloat Textern Texplicit Tenum Tdouble Tdecltype Tconstexpr Tconst Tclass Tchar Tbool Tauto TTilde TPtVirg TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_Constructor TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TColCol_BeforeTypedef TCBrace ]
ctor_dtor_member -> ctor_spec TIdent_Constructor TOPar option(parameter_type_list) TCPar . TEq Tdelete TPtVirg [ Twchar_t Tvolatile Tvoid Tvirtual Tusing Tunsigned Tunion Ttypeof Ttypename Ttypedef Tthread_local Ttemplate Tstruct Tstatic Tsigned Tshort Trestrict Tregister Tpublic Tprotected Tprivate Tmutable Tlong Tint Tinline Tfriend Tfloat Textern Texplicit Tenum Tdouble Tdecltype Tconstexpr Tconst Tclass Tchar Tbool Tauto TTilde TPtVirg TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_Constructor TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TColCol_BeforeTypedef TCBrace ]
ctor_dtor_member -> ctor_spec TIdent_Constructor TOPar option(parameter_type_list) TCPar . TEq Tdefault TPtVirg [ Twchar_t Tvolatile Tvoid Tvirtual Tusing Tunsigned Tunion Ttypeof Ttypename Ttypedef Tthread_local Ttemplate Tstruct Tstatic Tsigned Tshort Trestrict Tregister Tpublic Tprotected Tprivate Tmutable Tlong Tint Tinline Tfriend Tfloat Textern Texplicit Tenum Tdouble Tdecltype Tconstexpr Tconst Tclass Tchar Tbool Tauto TTilde TPtVirg TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_Constructor TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TColCol_BeforeTypedef TCBrace ]
## Transitions:
-- On TPtVirg shift to state 800
-- On TEq shift to state 801
-- On TCol shift to state 702
-- On ctor_mem_initializer_list_opt shift to state 806
## Reductions:
-- On TOBrace
--   reduce production ctor_mem_initializer_list_opt ->

State 800:
## Known stack suffix:
## ctor_spec TIdent_Constructor TOPar option(parameter_type_list) TCPar TPtVirg
## LR(1) items:
ctor_dtor_member -> ctor_spec TIdent_Constructor TOPar option(parameter_type_list) TCPar TPtVirg . [ Twchar_t Tvolatile Tvoid Tvirtual Tusing Tunsigned Tunion Ttypeof Ttypename Ttypedef Tthread_local Ttemplate Tstruct Tstatic Tsigned Tshort Trestrict Tregister Tpublic Tprotected Tprivate Tmutable Tlong Tint Tinline Tfriend Tfloat Textern Texplicit Tenum Tdouble Tdecltype Tconstexpr Tconst Tclass Tchar Tbool Tauto TTilde TPtVirg TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_Constructor TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TColCol_BeforeTypedef TCBrace ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production ctor_dtor_member -> ctor_spec TIdent_Constructor TOPar option(parameter_type_list) TCPar TPtVirg

State 801:
## Known stack suffix:
## ctor_spec TIdent_Constructor TOPar option(parameter_type_list) TCPar TEq
## LR(1) items:
ctor_dtor_member -> ctor_spec TIdent_Constructor TOPar option(parameter_type_list) TCPar TEq . Tdelete TPtVirg [ Twchar_t Tvolatile Tvoid Tvirtual Tusing Tunsigned Tunion Ttypeof Ttypename Ttypedef Tthread_local Ttemplate Tstruct Tstatic Tsigned Tshort Trestrict Tregister Tpublic Tprotected Tprivate Tmutable Tlong Tint Tinline Tfriend Tfloat Textern Texplicit Tenum Tdouble Tdecltype Tconstexpr Tconst Tclass Tchar Tbool Tauto TTilde TPtVirg TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_Constructor TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TColCol_BeforeTypedef TCBrace ]
ctor_dtor_member -> ctor_spec TIdent_Constructor TOPar option(parameter_type_list) TCPar TEq . Tdefault TPtVirg [ Twchar_t Tvolatile Tvoid Tvirtual Tusing Tunsigned Tunion Ttypeof Ttypename Ttypedef Tthread_local Ttemplate Tstruct Tstatic Tsigned Tshort Trestrict Tregister Tpublic Tprotected Tprivate Tmutable Tlong Tint Tinline Tfriend Tfloat Textern Texplicit Tenum Tdouble Tdecltype Tconstexpr Tconst Tclass Tchar Tbool Tauto TTilde TPtVirg TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_Constructor TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TColCol_BeforeTypedef TCBrace ]
## Transitions:
-- On Tdelete shift to state 802
-- On Tdefault shift to state 804
## Reductions:

State 802:
## Known stack suffix:
## ctor_spec TIdent_Constructor TOPar option(parameter_type_list) TCPar TEq Tdelete
## LR(1) items:
ctor_dtor_member -> ctor_spec TIdent_Constructor TOPar option(parameter_type_list) TCPar TEq Tdelete . TPtVirg [ Twchar_t Tvolatile Tvoid Tvirtual Tusing Tunsigned Tunion Ttypeof Ttypename Ttypedef Tthread_local Ttemplate Tstruct Tstatic Tsigned Tshort Trestrict Tregister Tpublic Tprotected Tprivate Tmutable Tlong Tint Tinline Tfriend Tfloat Textern Texplicit Tenum Tdouble Tdecltype Tconstexpr Tconst Tclass Tchar Tbool Tauto TTilde TPtVirg TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_Constructor TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TColCol_BeforeTypedef TCBrace ]
## Transitions:
-- On TPtVirg shift to state 803
## Reductions:

State 803:
## Known stack suffix:
## ctor_spec TIdent_Constructor TOPar option(parameter_type_list) TCPar TEq Tdelete TPtVirg
## LR(1) items:
ctor_dtor_member -> ctor_spec TIdent_Constructor TOPar option(parameter_type_list) TCPar TEq Tdelete TPtVirg . [ Twchar_t Tvolatile Tvoid Tvirtual Tusing Tunsigned Tunion Ttypeof Ttypename Ttypedef Tthread_local Ttemplate Tstruct Tstatic Tsigned Tshort Trestrict Tregister Tpublic Tprotected Tprivate Tmutable Tlong Tint Tinline Tfriend Tfloat Textern Texplicit Tenum Tdouble Tdecltype Tconstexpr Tconst Tclass Tchar Tbool Tauto TTilde TPtVirg TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_Constructor TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TColCol_BeforeTypedef TCBrace ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production ctor_dtor_member -> ctor_spec TIdent_Constructor TOPar option(parameter_type_list) TCPar TEq Tdelete TPtVirg

State 804:
## Known stack suffix:
## ctor_spec TIdent_Constructor TOPar option(parameter_type_list) TCPar TEq Tdefault
## LR(1) items:
ctor_dtor_member -> ctor_spec TIdent_Constructor TOPar option(parameter_type_list) TCPar TEq Tdefault . TPtVirg [ Twchar_t Tvolatile Tvoid Tvirtual Tusing Tunsigned Tunion Ttypeof Ttypename Ttypedef Tthread_local Ttemplate Tstruct Tstatic Tsigned Tshort Trestrict Tregister Tpublic Tprotected Tprivate Tmutable Tlong Tint Tinline Tfriend Tfloat Textern Texplicit Tenum Tdouble Tdecltype Tconstexpr Tconst Tclass Tchar Tbool Tauto TTilde TPtVirg TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_Constructor TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TColCol_BeforeTypedef TCBrace ]
## Transitions:
-- On TPtVirg shift to state 805
## Reductions:

State 805:
## Known stack suffix:
## ctor_spec TIdent_Constructor TOPar option(parameter_type_list) TCPar TEq Tdefault TPtVirg
## LR(1) items:
ctor_dtor_member -> ctor_spec TIdent_Constructor TOPar option(parameter_type_list) TCPar TEq Tdefault TPtVirg . [ Twchar_t Tvolatile Tvoid Tvirtual Tusing Tunsigned Tunion Ttypeof Ttypename Ttypedef Tthread_local Ttemplate Tstruct Tstatic Tsigned Tshort Trestrict Tregister Tpublic Tprotected Tprivate Tmutable Tlong Tint Tinline Tfriend Tfloat Textern Texplicit Tenum Tdouble Tdecltype Tconstexpr Tconst Tclass Tchar Tbool Tauto TTilde TPtVirg TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_Constructor TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TColCol_BeforeTypedef TCBrace ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production ctor_dtor_member -> ctor_spec TIdent_Constructor TOPar option(parameter_type_list) TCPar TEq Tdefault TPtVirg

State 806:
## Known stack suffix:
## ctor_spec TIdent_Constructor TOPar option(parameter_type_list) TCPar ctor_mem_initializer_list_opt
## LR(1) items:
ctor_dtor_member -> ctor_spec TIdent_Constructor TOPar option(parameter_type_list) TCPar ctor_mem_initializer_list_opt . compound [ Twchar_t Tvolatile Tvoid Tvirtual Tusing Tunsigned Tunion Ttypeof Ttypename Ttypedef Tthread_local Ttemplate Tstruct Tstatic Tsigned Tshort Trestrict Tregister Tpublic Tprotected Tprivate Tmutable Tlong Tint Tinline Tfriend Tfloat Textern Texplicit Tenum Tdouble Tdecltype Tconstexpr Tconst Tclass Tchar Tbool Tauto TTilde TPtVirg TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_Constructor TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TColCol_BeforeTypedef TCBrace ]
## Transitions:
-- On TOBrace shift to state 93
-- On compound shift to state 807
## Reductions:

State 807:
## Known stack suffix:
## ctor_spec TIdent_Constructor TOPar option(parameter_type_list) TCPar ctor_mem_initializer_list_opt compound
## LR(1) items:
ctor_dtor_member -> ctor_spec TIdent_Constructor TOPar option(parameter_type_list) TCPar ctor_mem_initializer_list_opt compound . [ Twchar_t Tvolatile Tvoid Tvirtual Tusing Tunsigned Tunion Ttypeof Ttypename Ttypedef Tthread_local Ttemplate Tstruct Tstatic Tsigned Tshort Trestrict Tregister Tpublic Tprotected Tprivate Tmutable Tlong Tint Tinline Tfriend Tfloat Textern Texplicit Tenum Tdouble Tdecltype Tconstexpr Tconst Tclass Tchar Tbool Tauto TTilde TPtVirg TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_Constructor TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TColCol_BeforeTypedef TCBrace ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production ctor_dtor_member -> ctor_spec TIdent_Constructor TOPar option(parameter_type_list) TCPar ctor_mem_initializer_list_opt compound

State 808:
## Known stack suffix:
## ctor_dtor_member
## LR(1) items:
member_declaration -> ctor_dtor_member . [ Twchar_t Tvolatile Tvoid Tvirtual Tusing Tunsigned Tunion Ttypeof Ttypename Ttypedef Tthread_local Ttemplate Tstruct Tstatic Tsigned Tshort Trestrict Tregister Tpublic Tprotected Tprivate Tmutable Tlong Tint Tinline Tfriend Tfloat Textern Texplicit Tenum Tdouble Tdecltype Tconstexpr Tconst Tclass Tchar Tbool Tauto TTilde TPtVirg TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_Constructor TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TColCol_BeforeTypedef TCBrace ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production member_declaration -> ctor_dtor_member

State 809:
## Known stack suffix:
## access_specifier
## LR(1) items:
member_specification -> access_specifier . TCol optl(member_specification) [ TCBrace ]
## Transitions:
-- On TCol shift to state 810
## Reductions:

State 810:
## Known stack suffix:
## access_specifier TCol
## LR(1) items:
member_specification -> access_specifier TCol . optl(member_specification) [ TCBrace ]
## Transitions:
-- On Twchar_t shift to state 1
-- On Tvolatile shift to state 2
-- On Tvoid shift to state 3
-- On Tvirtual shift to state 303
-- On Tusing shift to state 304
-- On Tunsigned shift to state 15
-- On Tunion shift to state 16
-- On Ttypeof shift to state 17
-- On Ttypename shift to state 19
-- On Ttypedef shift to state 96
-- On Tthread_local shift to state 97
-- On Ttemplate shift to state 312
-- On Tstruct shift to state 27
-- On Tstatic shift to state 98
-- On Tsigned shift to state 30
-- On Tshort shift to state 32
-- On Trestrict shift to state 65
-- On Tregister shift to state 99
-- On Tpublic shift to state 283
-- On Tprotected shift to state 284
-- On Tprivate shift to state 285
-- On Tmutable shift to state 100
-- On Tlong shift to state 38
-- On Tint shift to state 39
-- On Tinline shift to state 752
-- On Tfriend shift to state 102
-- On Tfloat shift to state 40
-- On Textern shift to state 103
-- On Texplicit shift to state 753
-- On Tenum shift to state 66
-- On Tdouble shift to state 41
-- On Tdecltype shift to state 45
-- On Tconstexpr shift to state 104
-- On Tconst shift to state 76
-- On Tclass shift to state 77
-- On Tchar shift to state 58
-- On Tbool shift to state 60
-- On Tauto shift to state 105
-- On TPtVirg shift to state 754
-- On TIdent_Typedef shift to state 20
-- On TIdent_TemplatenameInQualifier_BeforeTypedef shift to state 21
-- On TIdent_TemplatenameInQualifier shift to state 12
-- On TIdent_Templatename shift to state 108
-- On TIdent_ClassnameInQualifier_BeforeTypedef shift to state 111
-- On TIdent_ClassnameInQualifier shift to state 112
-- On TColCol_BeforeTypedef shift to state 118
-- On using_declaration shift to state 755
-- On type_spec shift to state 314
-- On type_name shift to state 182
-- On type_cplusplus_id shift to state 183
-- On template_id shift to state 120
-- On template_declaration shift to state 756
-- On storage_class_spec shift to state 316
-- On simple_type_specifier shift to state 206
-- On qualified_id shift to state 757
-- On optl(member_specification) shift to state 811
-- On nested_name_specifier2 shift to state 207
-- On nested_name_specifier shift to state 165
-- On member_specification shift to state 761
-- On member_declaration shift to state 762
-- On function_spec shift to state 437
-- On function_definition shift to state 764
-- On field_declaration shift to state 765
-- On enum_specifier shift to state 209
-- On enum_name_or_typedef_name_or_simple_class_name shift to state 123
-- On enum_head shift to state 210
-- On elaborated_type_specifier shift to state 274
-- On dtor_spec shift to state 766
-- On decltype_specifier shift to state 243
-- On decl_spec_seq shift to state 780
-- On decl_spec shift to state 473
-- On cv_qualif shift to state 475
-- On ctor_spec shift to state 795
-- On ctor_dtor_member shift to state 808
-- On class_specifier shift to state 277
-- On class_or_namespace_name_for_qualifier2 shift to state 124
-- On class_or_namespace_name_for_qualifier shift to state 170
-- On class_key shift to state 278
-- On class_head shift to state 301
-- On access_specifier shift to state 809
## Reductions:
-- On TIdent_Constructor
--   reduce production ctor_spec ->
-- On TTilde
--   reduce production dtor_spec ->
-- On TCBrace
--   reduce production optl(member_specification) ->

State 811:
## Known stack suffix:
## access_specifier TCol optl(member_specification)
## LR(1) items:
member_specification -> access_specifier TCol optl(member_specification) . [ TCBrace ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production member_specification -> access_specifier TCol optl(member_specification)

State 812:
## Known stack suffix:
## listc(argument) TComma argument
## LR(1) items:
listc(argument) -> listc(argument) TComma argument . [ TComma TCPar_EOL TCPar ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production listc(argument) -> listc(argument) TComma argument

State 813:
## Known stack suffix:
## exclusive_or_expr TXor and_expr
## LR(1) items:
and_expr -> and_expr . TAnd equality_expr [ TXor TWhy TSup_Template TPtVirg TOrLog TOr TEllipsis TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAndLog TAnd RDots EOF ]
exclusive_or_expr -> exclusive_or_expr TXor and_expr . [ TXor TWhy TSup_Template TPtVirg TOrLog TOr TEllipsis TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAndLog RDots EOF ]
## Transitions:
-- On TAnd shift to state 335
## Reductions:
-- On TXor TWhy TSup_Template TPtVirg TOrLog TOr TEllipsis TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAndLog RDots EOF
--   reduce production exclusive_or_expr -> exclusive_or_expr TXor and_expr

State 814:
## Known stack suffix:
## logical_or_expr TWhy option(expr) TCol assign_expr
## LR(1) items:
cond_expr -> logical_or_expr TWhy option(expr) TCol assign_expr . [ TSup_Template TPtVirg TEllipsis TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace RDots EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production cond_expr -> logical_or_expr TWhy option(expr) TCol assign_expr

State 815:
## Known stack suffix:
## logical_or_expr TOrLog
## LR(1) items:
logical_or_expr -> logical_or_expr TOrLog . logical_and_expr [ TWhy TSup_Template TPtVirg TOrLog TEllipsis TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace RDots EOF ]
## Transitions:
-- On Twchar_t_Constr shift to state 14
-- On Twchar_t shift to state 1
-- On Tvoid shift to state 3
-- On Tunsigned shift to state 15
-- On Ttypeof shift to state 17
-- On Ttypeid shift to state 23
-- On Ttrue shift to state 25
-- On Tthis shift to state 26
-- On Tstatic_cast shift to state 28
-- On Tsizeof shift to state 29
-- On Tsigned shift to state 30
-- On Tshort_Constr shift to state 31
-- On Tshort shift to state 32
-- On Treinterpret_cast shift to state 33
-- On Toperator shift to state 34
-- On Tnullptr shift to state 48
-- On Tnull shift to state 49
-- On Tlong_Constr shift to state 50
-- On Tlong shift to state 38
-- On Tint_Constr shift to state 51
-- On Tint shift to state 39
-- On Tfloat_Constr shift to state 52
-- On Tfloat shift to state 40
-- On Tfalse shift to state 53
-- On Tdynamic_cast shift to state 54
-- On Tdouble_Constr shift to state 55
-- On Tdouble shift to state 41
-- On Tdecltype shift to state 45
-- On Tconst_cast shift to state 56
-- On Tchar_Constr shift to state 57
-- On Tchar shift to state 58
-- On Tbool_Constr shift to state 59
-- On Tbool shift to state 60
-- On TTilde shift to state 61
-- On TString shift to state 62
-- On TPlus shift to state 63
-- On TOPar shift to state 64
-- On TOCro_Lambda shift to state 78
-- On TMul shift to state 88
-- On TMinus shift to state 89
-- On TInt shift to state 90
-- On TInc shift to state 91
-- On TIdent_TypedefConstr shift to state 106
-- On TIdent_Typedef shift to state 20
-- On TIdent_TemplatenameInQualifier_BeforeTypedef shift to state 21
-- On TIdent_TemplatenameInQualifier shift to state 12
-- On TIdent_Templatename shift to state 108
-- On TIdent_MacroString shift to state 110
-- On TIdent_ClassnameInQualifier_BeforeTypedef shift to state 111
-- On TIdent_ClassnameInQualifier shift to state 112
-- On TIdent shift to state 113
-- On TFloat shift to state 116
-- On TDec shift to state 117
-- On TColCol_BeforeTypedef shift to state 118
-- On TColCol shift to state 128
-- On TChar shift to state 174
-- On TBang shift to state 175
-- On TAndLog shift to state 176
-- On TAnd shift to state 177
-- On LDots shift to state 178
-- On unqualified_id shift to state 179
-- On unary_op shift to state 180
-- On unary_expr shift to state 181
-- On type_name shift to state 182
-- On type_cplusplus_id shift to state 183
-- On template_id shift to state 120
-- On string_elem shift to state 184
-- On simple_type_specifier shift to state 189
-- On shift_expr shift to state 217
-- On relational_expr shift to state 229
-- On qualified_id shift to state 191
-- On primary_expr shift to state 192
-- On primary_cplusplus_id shift to state 193
-- On postfix_expr shift to state 194
-- On pm_expr shift to state 219
-- On option(TColCol) shift to state 221
-- On operator_function_id shift to state 168
-- On new_expr shift to state 233
-- On nested_name_specifier2 shift to state 207
-- On nested_name_specifier shift to state 165
-- On multiplicative_expr shift to state 234
-- On logical_and_expr shift to state 816
-- On literal shift to state 238
-- On lambda_introducer shift to state 239
-- On inclusive_or_expr shift to state 272
-- On id_expression shift to state 241
-- On exclusive_or_expr shift to state 273
-- On equality_expr shift to state 256
-- On enum_name_or_typedef_name_or_simple_class_name shift to state 123
-- On delete_expr shift to state 242
-- On decltype_specifier shift to state 243
-- On cpp_cast_operator shift to state 244
-- On conversion_function_id shift to state 169
-- On class_or_namespace_name_for_qualifier2 shift to state 124
-- On class_or_namespace_name_for_qualifier shift to state 170
-- On cast_operator_expr shift to state 261
-- On cast_expr shift to state 262
-- On cast_constructor_expr shift to state 263
-- On basic_type_2 shift to state 264
-- On and_expr shift to state 334
-- On additive_expr shift to state 341
## Reductions:
-- On Tnew Tdelete
--   reduce production option(TColCol) ->

State 816:
## Known stack suffix:
## logical_or_expr TOrLog logical_and_expr
## LR(1) items:
logical_and_expr -> logical_and_expr . TAndLog inclusive_or_expr [ TWhy TSup_Template TPtVirg TOrLog TEllipsis TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAndLog RDots EOF ]
logical_or_expr -> logical_or_expr TOrLog logical_and_expr . [ TWhy TSup_Template TPtVirg TOrLog TEllipsis TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace RDots EOF ]
## Transitions:
-- On TAndLog shift to state 251
## Reductions:
-- On TWhy TSup_Template TPtVirg TOrLog TEllipsis TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace RDots EOF
--   reduce production logical_or_expr -> logical_or_expr TOrLog logical_and_expr

State 817:
## Known stack suffix:
## cpp_cast_operator TOPar expr
## LR(1) items:
cast_operator_expr -> cpp_cast_operator TOPar expr . TCPar [ TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtrOpStar TPtrOp TPtVirg TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMod TMinus TInfEq TInf TInc TEqEq TEq TEllipsis TDotStar TDot TDiv TDec TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAssign TAndLog TAnd RDots EOF ]
expr -> expr . TComma assign_expr [ TComma TCPar ]
## Transitions:
-- On TComma shift to state 518
-- On TCPar shift to state 818
## Reductions:

State 818:
## Known stack suffix:
## cpp_cast_operator TOPar expr TCPar
## LR(1) items:
cast_operator_expr -> cpp_cast_operator TOPar expr TCPar . [ TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtrOpStar TPtrOp TPtVirg TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMod TMinus TInfEq TInf TInc TEqEq TEq TEllipsis TDotStar TDot TDiv TDec TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAssign TAndLog TAnd RDots EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production cast_operator_expr -> cpp_cast_operator TOPar expr TCPar

State 819:
## Known stack suffix:
## cpp_cast_operator TInf_Template
## LR(1) items:
cast_operator_expr -> cpp_cast_operator TInf_Template . type_id TSup_Template TOPar expr TCPar [ TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtrOpStar TPtrOp TPtVirg TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMod TMinus TInfEq TInf TInc TEqEq TEq TEllipsis TDotStar TDot TDiv TDec TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAssign TAndLog TAnd RDots EOF ]
## Transitions:
-- On Twchar_t shift to state 1
-- On Tvolatile shift to state 2
-- On Tvoid shift to state 3
-- On Tunsigned shift to state 15
-- On Tunion shift to state 16
-- On Ttypeof shift to state 17
-- On Ttypename shift to state 19
-- On Tstruct shift to state 27
-- On Tsigned shift to state 30
-- On Tshort shift to state 32
-- On Trestrict shift to state 65
-- On Tlong shift to state 38
-- On Tint shift to state 39
-- On Tfloat shift to state 40
-- On Tenum shift to state 66
-- On Tdouble shift to state 41
-- On Tdecltype shift to state 45
-- On Tconst shift to state 76
-- On Tclass shift to state 77
-- On Tchar shift to state 58
-- On Tbool shift to state 60
-- On TIdent_Typedef shift to state 20
-- On TIdent_TemplatenameInQualifier_BeforeTypedef shift to state 21
-- On TIdent_Templatename shift to state 108
-- On TIdent_ClassnameInQualifier_BeforeTypedef shift to state 111
-- On TColCol_BeforeTypedef shift to state 118
-- On type_spec shift to state 204
-- On type_name shift to state 182
-- On type_id shift to state 820
-- On type_cplusplus_id shift to state 183
-- On template_id shift to state 120
-- On spec_qualif_list shift to state 225
-- On simple_type_specifier shift to state 206
-- On nested_name_specifier2 shift to state 207
-- On enum_specifier shift to state 209
-- On enum_name_or_typedef_name_or_simple_class_name shift to state 123
-- On enum_head shift to state 210
-- On elaborated_type_specifier shift to state 274
-- On decltype_specifier shift to state 243
-- On cv_qualif shift to state 275
-- On class_specifier shift to state 277
-- On class_or_namespace_name_for_qualifier2 shift to state 124
-- On class_key shift to state 278
-- On class_head shift to state 301
## Reductions:

State 820:
## Known stack suffix:
## cpp_cast_operator TInf_Template type_id
## LR(1) items:
cast_operator_expr -> cpp_cast_operator TInf_Template type_id . TSup_Template TOPar expr TCPar [ TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtrOpStar TPtrOp TPtVirg TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMod TMinus TInfEq TInf TInc TEqEq TEq TEllipsis TDotStar TDot TDiv TDec TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAssign TAndLog TAnd RDots EOF ]
## Transitions:
-- On TSup_Template shift to state 821
## Reductions:

State 821:
## Known stack suffix:
## cpp_cast_operator TInf_Template type_id TSup_Template
## LR(1) items:
cast_operator_expr -> cpp_cast_operator TInf_Template type_id TSup_Template . TOPar expr TCPar [ TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtrOpStar TPtrOp TPtVirg TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMod TMinus TInfEq TInf TInc TEqEq TEq TEllipsis TDotStar TDot TDiv TDec TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAssign TAndLog TAnd RDots EOF ]
## Transitions:
-- On TOPar shift to state 822
## Reductions:

State 822:
## Known stack suffix:
## cpp_cast_operator TInf_Template type_id TSup_Template TOPar
## LR(1) items:
cast_operator_expr -> cpp_cast_operator TInf_Template type_id TSup_Template TOPar . expr TCPar [ TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtrOpStar TPtrOp TPtVirg TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMod TMinus TInfEq TInf TInc TEqEq TEq TEllipsis TDotStar TDot TDiv TDec TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAssign TAndLog TAnd RDots EOF ]
## Transitions:
-- On Twchar_t_Constr shift to state 14
-- On Twchar_t shift to state 1
-- On Tvoid shift to state 3
-- On Tunsigned shift to state 15
-- On Ttypeof shift to state 17
-- On Ttypeid shift to state 23
-- On Ttrue shift to state 25
-- On Tthrow shift to state 47
-- On Tthis shift to state 26
-- On Tstatic_cast shift to state 28
-- On Tsizeof shift to state 29
-- On Tsigned shift to state 30
-- On Tshort_Constr shift to state 31
-- On Tshort shift to state 32
-- On Treinterpret_cast shift to state 33
-- On Toperator shift to state 34
-- On Tnullptr shift to state 48
-- On Tnull shift to state 49
-- On Tlong_Constr shift to state 50
-- On Tlong shift to state 38
-- On Tint_Constr shift to state 51
-- On Tint shift to state 39
-- On Tfloat_Constr shift to state 52
-- On Tfloat shift to state 40
-- On Tfalse shift to state 53
-- On Tdynamic_cast shift to state 54
-- On Tdouble_Constr shift to state 55
-- On Tdouble shift to state 41
-- On Tdecltype shift to state 45
-- On Tconst_cast shift to state 56
-- On Tchar_Constr shift to state 57
-- On Tchar shift to state 58
-- On Tbool_Constr shift to state 59
-- On Tbool shift to state 60
-- On TTilde shift to state 61
-- On TString shift to state 62
-- On TPlus shift to state 63
-- On TOPar shift to state 64
-- On TOCro_Lambda shift to state 78
-- On TMul shift to state 88
-- On TMinus shift to state 89
-- On TInt shift to state 90
-- On TInc shift to state 91
-- On TIdent_TypedefConstr shift to state 106
-- On TIdent_Typedef shift to state 20
-- On TIdent_TemplatenameInQualifier_BeforeTypedef shift to state 21
-- On TIdent_TemplatenameInQualifier shift to state 12
-- On TIdent_Templatename shift to state 108
-- On TIdent_MacroString shift to state 110
-- On TIdent_ClassnameInQualifier_BeforeTypedef shift to state 111
-- On TIdent_ClassnameInQualifier shift to state 112
-- On TIdent shift to state 113
-- On TFloat shift to state 116
-- On TDec shift to state 117
-- On TColCol_BeforeTypedef shift to state 118
-- On TColCol shift to state 128
-- On TChar shift to state 174
-- On TBang shift to state 175
-- On TAndLog shift to state 176
-- On TAnd shift to state 177
-- On LDots shift to state 178
-- On unqualified_id shift to state 179
-- On unary_op shift to state 180
-- On unary_expr shift to state 181
-- On type_name shift to state 182
-- On type_cplusplus_id shift to state 183
-- On template_id shift to state 120
-- On string_elem shift to state 184
-- On simple_type_specifier shift to state 189
-- On shift_expr shift to state 217
-- On relational_expr shift to state 229
-- On qualified_id shift to state 191
-- On primary_expr shift to state 192
-- On primary_cplusplus_id shift to state 193
-- On postfix_expr shift to state 194
-- On pm_expr shift to state 219
-- On option(TColCol) shift to state 221
-- On operator_function_id shift to state 168
-- On new_expr shift to state 233
-- On nested_name_specifier2 shift to state 207
-- On nested_name_specifier shift to state 165
-- On multiplicative_expr shift to state 234
-- On logical_or_expr shift to state 246
-- On logical_and_expr shift to state 250
-- On literal shift to state 238
-- On lambda_introducer shift to state 239
-- On inclusive_or_expr shift to state 272
-- On id_expression shift to state 241
-- On expr shift to state 823
-- On exclusive_or_expr shift to state 273
-- On equality_expr shift to state 256
-- On enum_name_or_typedef_name_or_simple_class_name shift to state 123
-- On delete_expr shift to state 242
-- On decltype_specifier shift to state 243
-- On cpp_cast_operator shift to state 244
-- On conversion_function_id shift to state 169
-- On cond_expr shift to state 330
-- On class_or_namespace_name_for_qualifier2 shift to state 124
-- On class_or_namespace_name_for_qualifier shift to state 170
-- On cast_operator_expr shift to state 261
-- On cast_expr shift to state 331
-- On cast_constructor_expr shift to state 263
-- On basic_type_2 shift to state 264
-- On assign_expr shift to state 539
-- On and_expr shift to state 334
-- On additive_expr shift to state 341
## Reductions:
-- On Tnew Tdelete
--   reduce production option(TColCol) ->

State 823:
## Known stack suffix:
## cpp_cast_operator TInf_Template type_id TSup_Template TOPar expr
## LR(1) items:
cast_operator_expr -> cpp_cast_operator TInf_Template type_id TSup_Template TOPar expr . TCPar [ TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtrOpStar TPtrOp TPtVirg TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMod TMinus TInfEq TInf TInc TEqEq TEq TEllipsis TDotStar TDot TDiv TDec TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAssign TAndLog TAnd RDots EOF ]
expr -> expr . TComma assign_expr [ TComma TCPar ]
## Transitions:
-- On TComma shift to state 518
-- On TCPar shift to state 824
## Reductions:

State 824:
## Known stack suffix:
## cpp_cast_operator TInf_Template type_id TSup_Template TOPar expr TCPar
## LR(1) items:
cast_operator_expr -> cpp_cast_operator TInf_Template type_id TSup_Template TOPar expr TCPar . [ TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtrOpStar TPtrOp TPtVirg TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMod TMinus TInfEq TInf TInc TEqEq TEq TEllipsis TDotStar TDot TDiv TDec TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAssign TAndLog TAnd RDots EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production cast_operator_expr -> cpp_cast_operator TInf_Template type_id TSup_Template TOPar expr TCPar

State 825:
## Known stack suffix:
## pm_expr TDotStar cast_expr
## LR(1) items:
pm_expr -> pm_expr TDotStar cast_expr . [ TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtrOpStar TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TEllipsis TDotStar TDiv TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAndLog TAnd RDots EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production pm_expr -> pm_expr TDotStar cast_expr

State 826:
## Known stack suffix:
## shift_expr TShl additive_expr
## LR(1) items:
additive_expr -> additive_expr . TPlus multiplicative_expr [ TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMinus TInfEq TInf TEqEq TEllipsis TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAndLog TAnd RDots EOF ]
additive_expr -> additive_expr . TMinus multiplicative_expr [ TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMinus TInfEq TInf TEqEq TEllipsis TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAndLog TAnd RDots EOF ]
shift_expr -> shift_expr TShl additive_expr . [ TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtVirg TOrLog TOr TNotEq TInfEq TInf TEqEq TEllipsis TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAndLog TAnd RDots EOF ]
## Transitions:
-- On TPlus shift to state 342
-- On TMinus shift to state 348
## Reductions:
-- On TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtVirg TOrLog TOr TNotEq TInfEq TInf TEqEq TEllipsis TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAndLog TAnd RDots EOF
--   reduce production shift_expr -> shift_expr TShl additive_expr

State 827:
## Known stack suffix:
## TOCro const_expr
## LR(1) items:
direct_abstract_declarator -> TOCro const_expr . TCCro [ TSup_Template TOPar TOCro TIdent TEq TComma TCPar_EOL TCPar ]
## Transitions:
-- On TCCro shift to state 828
## Reductions:

State 828:
## Known stack suffix:
## TOCro const_expr TCCro
## LR(1) items:
direct_abstract_declarator -> TOCro const_expr TCCro . [ TSup_Template TOPar TOCro TIdent TEq TComma TCPar_EOL TCPar ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production direct_abstract_declarator -> TOCro const_expr TCCro

State 829:
## Known stack suffix:
## pointer
## LR(1) items:
abstract_declarator -> pointer . [ TSup_Template TIdent TComma TCPar_EOL TCPar ]
abstract_declarator -> pointer . direct_abstract_declarator [ TSup_Template TIdent TComma TCPar_EOL TCPar ]
## Transitions:
-- On TOPar shift to state 226
-- On TOCro shift to state 227
-- On direct_abstract_declarator shift to state 482
## Reductions:
-- On TSup_Template TIdent TComma TCPar_EOL TCPar
--   reduce production abstract_declarator -> pointer

State 830:
## Known stack suffix:
## spec_qualif_list abstract_declarator
## LR(1) items:
type_id -> spec_qualif_list abstract_declarator . [ TSup_Template TIdent TComma TCPar_EOL TCPar ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production type_id -> spec_qualif_list abstract_declarator

State 831:
## Known stack suffix:
## TOPar listc(argument)
## LR(1) items:
listc(argument) -> listc(argument) . TComma argument [ TComma TCPar ]
new_placement -> TOPar listc(argument) . TCPar [ Twchar_t Tvolatile Tvoid Tunsigned Tunion Ttypeof Ttypename Tstruct Tsigned Tshort Trestrict Tlong Tint Tfloat Tenum Tdouble Tdecltype Tconst Tclass Tchar Tbool TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_Templatename TIdent_ClassnameInQualifier_BeforeTypedef TColCol_BeforeTypedef ]
## Transitions:
-- On TComma shift to state 271
-- On TCPar shift to state 832
## Reductions:

State 832:
## Known stack suffix:
## TOPar listc(argument) TCPar
## LR(1) items:
new_placement -> TOPar listc(argument) TCPar . [ Twchar_t Tvolatile Tvoid Tunsigned Tunion Ttypeof Ttypename Tstruct Tsigned Tshort Trestrict Tlong Tint Tfloat Tenum Tdouble Tdecltype Tconst Tclass Tchar Tbool TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_Templatename TIdent_ClassnameInQualifier_BeforeTypedef TColCol_BeforeTypedef ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production new_placement -> TOPar listc(argument) TCPar

State 833:
## Known stack suffix:
## option(TColCol) Tnew option(new_placement)
## LR(1) items:
new_expr -> option(TColCol) Tnew option(new_placement) . new_type_id option(new_initializer) [ TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtrOpStar TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TEq TEllipsis TDotStar TDiv TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAssign TAndLog TAnd RDots EOF ]
## Transitions:
-- On Twchar_t shift to state 1
-- On Tvolatile shift to state 2
-- On Tvoid shift to state 3
-- On Tunsigned shift to state 15
-- On Tunion shift to state 16
-- On Ttypeof shift to state 17
-- On Ttypename shift to state 19
-- On Tstruct shift to state 27
-- On Tsigned shift to state 30
-- On Tshort shift to state 32
-- On Trestrict shift to state 65
-- On Tlong shift to state 38
-- On Tint shift to state 39
-- On Tfloat shift to state 40
-- On Tenum shift to state 66
-- On Tdouble shift to state 41
-- On Tdecltype shift to state 45
-- On Tconst shift to state 76
-- On Tclass shift to state 77
-- On Tchar shift to state 58
-- On Tbool shift to state 60
-- On TIdent_Typedef shift to state 20
-- On TIdent_TemplatenameInQualifier_BeforeTypedef shift to state 21
-- On TIdent_Templatename shift to state 108
-- On TIdent_ClassnameInQualifier_BeforeTypedef shift to state 111
-- On TColCol_BeforeTypedef shift to state 118
-- On type_spec shift to state 204
-- On type_name shift to state 182
-- On type_cplusplus_id shift to state 183
-- On template_id shift to state 120
-- On spec_qualif_list shift to state 834
-- On simple_type_specifier shift to state 206
-- On new_type_id shift to state 848
-- On nested_name_specifier2 shift to state 207
-- On enum_specifier shift to state 209
-- On enum_name_or_typedef_name_or_simple_class_name shift to state 123
-- On enum_head shift to state 210
-- On elaborated_type_specifier shift to state 274
-- On decltype_specifier shift to state 243
-- On cv_qualif shift to state 275
-- On class_specifier shift to state 277
-- On class_or_namespace_name_for_qualifier2 shift to state 124
-- On class_key shift to state 278
-- On class_head shift to state 301
## Reductions:

State 834:
## Known stack suffix:
## spec_qualif_list
## LR(1) items:
new_type_id -> spec_qualif_list . [ TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtrOpStar TPtVirg TPlus TOrLog TOr TOPar TNotEq TMul TMod TMinus TInfEq TInf TEqEq TEq TEllipsis TDotStar TDiv TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAssign TAndLog TAnd RDots EOF ]
new_type_id -> spec_qualif_list . new_declarator [ TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtrOpStar TPtVirg TPlus TOrLog TOr TOPar TNotEq TMul TMod TMinus TInfEq TInf TEqEq TEq TEllipsis TDotStar TDiv TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAssign TAndLog TAnd RDots EOF ]
## Transitions:
-- On TOCro shift to state 835
-- On TMul shift to state 838
-- On TAndLog shift to state 839
-- On TAnd shift to state 840
-- On ptr_operator shift to state 841
-- On new_declarator shift to state 847
-- On direct_new_declarator shift to state 843
## Reductions:
-- On TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtrOpStar TPtVirg TPlus TOrLog TOr TOPar TNotEq TMod TMinus TInfEq TInf TEqEq TEq TEllipsis TDotStar TDiv TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAssign RDots EOF
--   reduce production new_type_id -> spec_qualif_list

State 835:
## Known stack suffix:
## TOCro
## LR(1) items:
direct_new_declarator -> TOCro . expr TCCro [ TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtrOpStar TPtVirg TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMod TMinus TInfEq TInf TEqEq TEq TEllipsis TDotStar TDiv TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAssign TAndLog TAnd RDots EOF ]
## Transitions:
-- On Twchar_t_Constr shift to state 14
-- On Twchar_t shift to state 1
-- On Tvoid shift to state 3
-- On Tunsigned shift to state 15
-- On Ttypeof shift to state 17
-- On Ttypeid shift to state 23
-- On Ttrue shift to state 25
-- On Tthrow shift to state 47
-- On Tthis shift to state 26
-- On Tstatic_cast shift to state 28
-- On Tsizeof shift to state 29
-- On Tsigned shift to state 30
-- On Tshort_Constr shift to state 31
-- On Tshort shift to state 32
-- On Treinterpret_cast shift to state 33
-- On Toperator shift to state 34
-- On Tnullptr shift to state 48
-- On Tnull shift to state 49
-- On Tlong_Constr shift to state 50
-- On Tlong shift to state 38
-- On Tint_Constr shift to state 51
-- On Tint shift to state 39
-- On Tfloat_Constr shift to state 52
-- On Tfloat shift to state 40
-- On Tfalse shift to state 53
-- On Tdynamic_cast shift to state 54
-- On Tdouble_Constr shift to state 55
-- On Tdouble shift to state 41
-- On Tdecltype shift to state 45
-- On Tconst_cast shift to state 56
-- On Tchar_Constr shift to state 57
-- On Tchar shift to state 58
-- On Tbool_Constr shift to state 59
-- On Tbool shift to state 60
-- On TTilde shift to state 61
-- On TString shift to state 62
-- On TPlus shift to state 63
-- On TOPar shift to state 64
-- On TOCro_Lambda shift to state 78
-- On TMul shift to state 88
-- On TMinus shift to state 89
-- On TInt shift to state 90
-- On TInc shift to state 91
-- On TIdent_TypedefConstr shift to state 106
-- On TIdent_Typedef shift to state 20
-- On TIdent_TemplatenameInQualifier_BeforeTypedef shift to state 21
-- On TIdent_TemplatenameInQualifier shift to state 12
-- On TIdent_Templatename shift to state 108
-- On TIdent_MacroString shift to state 110
-- On TIdent_ClassnameInQualifier_BeforeTypedef shift to state 111
-- On TIdent_ClassnameInQualifier shift to state 112
-- On TIdent shift to state 113
-- On TFloat shift to state 116
-- On TDec shift to state 117
-- On TColCol_BeforeTypedef shift to state 118
-- On TColCol shift to state 128
-- On TChar shift to state 174
-- On TBang shift to state 175
-- On TAndLog shift to state 176
-- On TAnd shift to state 177
-- On LDots shift to state 178
-- On unqualified_id shift to state 179
-- On unary_op shift to state 180
-- On unary_expr shift to state 181
-- On type_name shift to state 182
-- On type_cplusplus_id shift to state 183
-- On template_id shift to state 120
-- On string_elem shift to state 184
-- On simple_type_specifier shift to state 189
-- On shift_expr shift to state 217
-- On relational_expr shift to state 229
-- On qualified_id shift to state 191
-- On primary_expr shift to state 192
-- On primary_cplusplus_id shift to state 193
-- On postfix_expr shift to state 194
-- On pm_expr shift to state 219
-- On option(TColCol) shift to state 221
-- On operator_function_id shift to state 168
-- On new_expr shift to state 233
-- On nested_name_specifier2 shift to state 207
-- On nested_name_specifier shift to state 165
-- On multiplicative_expr shift to state 234
-- On logical_or_expr shift to state 246
-- On logical_and_expr shift to state 250
-- On literal shift to state 238
-- On lambda_introducer shift to state 239
-- On inclusive_or_expr shift to state 272
-- On id_expression shift to state 241
-- On expr shift to state 836
-- On exclusive_or_expr shift to state 273
-- On equality_expr shift to state 256
-- On enum_name_or_typedef_name_or_simple_class_name shift to state 123
-- On delete_expr shift to state 242
-- On decltype_specifier shift to state 243
-- On cpp_cast_operator shift to state 244
-- On conversion_function_id shift to state 169
-- On cond_expr shift to state 330
-- On class_or_namespace_name_for_qualifier2 shift to state 124
-- On class_or_namespace_name_for_qualifier shift to state 170
-- On cast_operator_expr shift to state 261
-- On cast_expr shift to state 331
-- On cast_constructor_expr shift to state 263
-- On basic_type_2 shift to state 264
-- On assign_expr shift to state 539
-- On and_expr shift to state 334
-- On additive_expr shift to state 341
## Reductions:
-- On Tnew Tdelete
--   reduce production option(TColCol) ->

State 836:
## Known stack suffix:
## TOCro expr
## LR(1) items:
direct_new_declarator -> TOCro expr . TCCro [ TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtrOpStar TPtVirg TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMod TMinus TInfEq TInf TEqEq TEq TEllipsis TDotStar TDiv TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAssign TAndLog TAnd RDots EOF ]
expr -> expr . TComma assign_expr [ TComma TCCro ]
## Transitions:
-- On TComma shift to state 518
-- On TCCro shift to state 837
## Reductions:

State 837:
## Known stack suffix:
## TOCro expr TCCro
## LR(1) items:
direct_new_declarator -> TOCro expr TCCro . [ TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtrOpStar TPtVirg TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMod TMinus TInfEq TInf TEqEq TEq TEllipsis TDotStar TDiv TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAssign TAndLog TAnd RDots EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production direct_new_declarator -> TOCro expr TCCro

State 838:
## Known stack suffix:
## TMul
## LR(1) items:
ptr_operator -> TMul . [ Tasm TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtrOpStar TPtrOp TPtVirg TPlus TOrLog TOr TOPar_CplusplusInit TOPar TOCro TOBrace TNotEq TMul TMod TMinus TInfEq TInf TInc TEqEq TEq TEllipsis TDotStar TDot TDiv TDec TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAssign TAndLog TAnd RDots EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production ptr_operator -> TMul

State 839:
## Known stack suffix:
## TAndLog
## LR(1) items:
ptr_operator -> TAndLog . [ Tasm TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtrOpStar TPtrOp TPtVirg TPlus TOrLog TOr TOPar_CplusplusInit TOPar TOCro TOBrace TNotEq TMul TMod TMinus TInfEq TInf TInc TEqEq TEq TEllipsis TDotStar TDot TDiv TDec TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAssign TAndLog TAnd RDots EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production ptr_operator -> TAndLog

State 840:
## Known stack suffix:
## TAnd
## LR(1) items:
ptr_operator -> TAnd . [ Tasm TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtrOpStar TPtrOp TPtVirg TPlus TOrLog TOr TOPar_CplusplusInit TOPar TOCro TOBrace TNotEq TMul TMod TMinus TInfEq TInf TInc TEqEq TEq TEllipsis TDotStar TDot TDiv TDec TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAssign TAndLog TAnd RDots EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production ptr_operator -> TAnd

State 841:
## Known stack suffix:
## ptr_operator
## LR(1) items:
new_declarator -> ptr_operator . new_declarator [ TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtrOpStar TPtVirg TPlus TOrLog TOr TOPar TNotEq TMul TMod TMinus TInfEq TInf TEqEq TEq TEllipsis TDotStar TDiv TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAssign TAndLog TAnd RDots EOF ]
new_declarator -> ptr_operator . [ TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtrOpStar TPtVirg TPlus TOrLog TOr TOPar TNotEq TMul TMod TMinus TInfEq TInf TEqEq TEq TEllipsis TDotStar TDiv TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAssign TAndLog TAnd RDots EOF ]
## Transitions:
-- On TOCro shift to state 835
-- On TMul shift to state 838
-- On TAndLog shift to state 839
-- On TAnd shift to state 840
-- On ptr_operator shift to state 841
-- On new_declarator shift to state 842
-- On direct_new_declarator shift to state 843
## Reductions:
-- On TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtrOpStar TPtVirg TPlus TOrLog TOr TOPar TNotEq TMod TMinus TInfEq TInf TEqEq TEq TEllipsis TDotStar TDiv TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAssign RDots EOF
--   reduce production new_declarator -> ptr_operator

State 842:
## Known stack suffix:
## ptr_operator new_declarator
## LR(1) items:
new_declarator -> ptr_operator new_declarator . [ TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtrOpStar TPtVirg TPlus TOrLog TOr TOPar TNotEq TMul TMod TMinus TInfEq TInf TEqEq TEq TEllipsis TDotStar TDiv TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAssign TAndLog TAnd RDots EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production new_declarator -> ptr_operator new_declarator

State 843:
## Known stack suffix:
## direct_new_declarator
## LR(1) items:
direct_new_declarator -> direct_new_declarator . TOCro expr TCCro [ TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtrOpStar TPtVirg TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMod TMinus TInfEq TInf TEqEq TEq TEllipsis TDotStar TDiv TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAssign TAndLog TAnd RDots EOF ]
new_declarator -> direct_new_declarator . [ TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtrOpStar TPtVirg TPlus TOrLog TOr TOPar TNotEq TMul TMod TMinus TInfEq TInf TEqEq TEq TEllipsis TDotStar TDiv TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAssign TAndLog TAnd RDots EOF ]
## Transitions:
-- On TOCro shift to state 844
## Reductions:
-- On TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtrOpStar TPtVirg TPlus TOrLog TOr TOPar TNotEq TMul TMod TMinus TInfEq TInf TEqEq TEq TEllipsis TDotStar TDiv TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAssign TAndLog TAnd RDots EOF
--   reduce production new_declarator -> direct_new_declarator

State 844:
## Known stack suffix:
## direct_new_declarator TOCro
## LR(1) items:
direct_new_declarator -> direct_new_declarator TOCro . expr TCCro [ TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtrOpStar TPtVirg TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMod TMinus TInfEq TInf TEqEq TEq TEllipsis TDotStar TDiv TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAssign TAndLog TAnd RDots EOF ]
## Transitions:
-- On Twchar_t_Constr shift to state 14
-- On Twchar_t shift to state 1
-- On Tvoid shift to state 3
-- On Tunsigned shift to state 15
-- On Ttypeof shift to state 17
-- On Ttypeid shift to state 23
-- On Ttrue shift to state 25
-- On Tthrow shift to state 47
-- On Tthis shift to state 26
-- On Tstatic_cast shift to state 28
-- On Tsizeof shift to state 29
-- On Tsigned shift to state 30
-- On Tshort_Constr shift to state 31
-- On Tshort shift to state 32
-- On Treinterpret_cast shift to state 33
-- On Toperator shift to state 34
-- On Tnullptr shift to state 48
-- On Tnull shift to state 49
-- On Tlong_Constr shift to state 50
-- On Tlong shift to state 38
-- On Tint_Constr shift to state 51
-- On Tint shift to state 39
-- On Tfloat_Constr shift to state 52
-- On Tfloat shift to state 40
-- On Tfalse shift to state 53
-- On Tdynamic_cast shift to state 54
-- On Tdouble_Constr shift to state 55
-- On Tdouble shift to state 41
-- On Tdecltype shift to state 45
-- On Tconst_cast shift to state 56
-- On Tchar_Constr shift to state 57
-- On Tchar shift to state 58
-- On Tbool_Constr shift to state 59
-- On Tbool shift to state 60
-- On TTilde shift to state 61
-- On TString shift to state 62
-- On TPlus shift to state 63
-- On TOPar shift to state 64
-- On TOCro_Lambda shift to state 78
-- On TMul shift to state 88
-- On TMinus shift to state 89
-- On TInt shift to state 90
-- On TInc shift to state 91
-- On TIdent_TypedefConstr shift to state 106
-- On TIdent_Typedef shift to state 20
-- On TIdent_TemplatenameInQualifier_BeforeTypedef shift to state 21
-- On TIdent_TemplatenameInQualifier shift to state 12
-- On TIdent_Templatename shift to state 108
-- On TIdent_MacroString shift to state 110
-- On TIdent_ClassnameInQualifier_BeforeTypedef shift to state 111
-- On TIdent_ClassnameInQualifier shift to state 112
-- On TIdent shift to state 113
-- On TFloat shift to state 116
-- On TDec shift to state 117
-- On TColCol_BeforeTypedef shift to state 118
-- On TColCol shift to state 128
-- On TChar shift to state 174
-- On TBang shift to state 175
-- On TAndLog shift to state 176
-- On TAnd shift to state 177
-- On LDots shift to state 178
-- On unqualified_id shift to state 179
-- On unary_op shift to state 180
-- On unary_expr shift to state 181
-- On type_name shift to state 182
-- On type_cplusplus_id shift to state 183
-- On template_id shift to state 120
-- On string_elem shift to state 184
-- On simple_type_specifier shift to state 189
-- On shift_expr shift to state 217
-- On relational_expr shift to state 229
-- On qualified_id shift to state 191
-- On primary_expr shift to state 192
-- On primary_cplusplus_id shift to state 193
-- On postfix_expr shift to state 194
-- On pm_expr shift to state 219
-- On option(TColCol) shift to state 221
-- On operator_function_id shift to state 168
-- On new_expr shift to state 233
-- On nested_name_specifier2 shift to state 207
-- On nested_name_specifier shift to state 165
-- On multiplicative_expr shift to state 234
-- On logical_or_expr shift to state 246
-- On logical_and_expr shift to state 250
-- On literal shift to state 238
-- On lambda_introducer shift to state 239
-- On inclusive_or_expr shift to state 272
-- On id_expression shift to state 241
-- On expr shift to state 845
-- On exclusive_or_expr shift to state 273
-- On equality_expr shift to state 256
-- On enum_name_or_typedef_name_or_simple_class_name shift to state 123
-- On delete_expr shift to state 242
-- On decltype_specifier shift to state 243
-- On cpp_cast_operator shift to state 244
-- On conversion_function_id shift to state 169
-- On cond_expr shift to state 330
-- On class_or_namespace_name_for_qualifier2 shift to state 124
-- On class_or_namespace_name_for_qualifier shift to state 170
-- On cast_operator_expr shift to state 261
-- On cast_expr shift to state 331
-- On cast_constructor_expr shift to state 263
-- On basic_type_2 shift to state 264
-- On assign_expr shift to state 539
-- On and_expr shift to state 334
-- On additive_expr shift to state 341
## Reductions:
-- On Tnew Tdelete
--   reduce production option(TColCol) ->

State 845:
## Known stack suffix:
## direct_new_declarator TOCro expr
## LR(1) items:
direct_new_declarator -> direct_new_declarator TOCro expr . TCCro [ TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtrOpStar TPtVirg TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMod TMinus TInfEq TInf TEqEq TEq TEllipsis TDotStar TDiv TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAssign TAndLog TAnd RDots EOF ]
expr -> expr . TComma assign_expr [ TComma TCCro ]
## Transitions:
-- On TComma shift to state 518
-- On TCCro shift to state 846
## Reductions:

State 846:
## Known stack suffix:
## direct_new_declarator TOCro expr TCCro
## LR(1) items:
direct_new_declarator -> direct_new_declarator TOCro expr TCCro . [ TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtrOpStar TPtVirg TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMod TMinus TInfEq TInf TEqEq TEq TEllipsis TDotStar TDiv TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAssign TAndLog TAnd RDots EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production direct_new_declarator -> direct_new_declarator TOCro expr TCCro

State 847:
## Known stack suffix:
## spec_qualif_list new_declarator
## LR(1) items:
new_type_id -> spec_qualif_list new_declarator . [ TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtrOpStar TPtVirg TPlus TOrLog TOr TOPar TNotEq TMul TMod TMinus TInfEq TInf TEqEq TEq TEllipsis TDotStar TDiv TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAssign TAndLog TAnd RDots EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production new_type_id -> spec_qualif_list new_declarator

State 848:
## Known stack suffix:
## option(TColCol) Tnew option(new_placement) new_type_id
## LR(1) items:
new_expr -> option(TColCol) Tnew option(new_placement) new_type_id . option(new_initializer) [ TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtrOpStar TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TEq TEllipsis TDotStar TDiv TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAssign TAndLog TAnd RDots EOF ]
## Transitions:
-- On TOPar shift to state 849
-- On option(new_initializer) shift to state 852
-- On new_initializer shift to state 853
## Reductions:
-- On TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtrOpStar TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TEq TEllipsis TDotStar TDiv TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAssign TAndLog TAnd RDots EOF
--   reduce production option(new_initializer) ->

State 849:
## Known stack suffix:
## TOPar
## LR(1) items:
new_initializer -> TOPar . optl(listc(argument)) TCPar [ TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtrOpStar TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TEq TEllipsis TDotStar TDiv TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAssign TAndLog TAnd RDots EOF ]
## Transitions:
-- On Twchar_t_Constr shift to state 14
-- On Twchar_t shift to state 1
-- On Tvolatile shift to state 2
-- On Tvoid shift to state 3
-- On Tunsigned shift to state 15
-- On Tunion shift to state 16
-- On Ttypeof shift to state 17
-- On Ttypename shift to state 19
-- On Ttypeid shift to state 23
-- On Ttrue shift to state 25
-- On Tthrow shift to state 47
-- On Tthis shift to state 26
-- On Tstruct shift to state 27
-- On Tstatic_cast shift to state 28
-- On Tsizeof shift to state 29
-- On Tsigned shift to state 30
-- On Tshort_Constr shift to state 31
-- On Tshort shift to state 32
-- On Trestrict shift to state 65
-- On Treinterpret_cast shift to state 33
-- On Toperator shift to state 34
-- On Tnullptr shift to state 48
-- On Tnull shift to state 49
-- On Tlong_Constr shift to state 50
-- On Tlong shift to state 38
-- On Tint_Constr shift to state 51
-- On Tint shift to state 39
-- On Tfloat_Constr shift to state 52
-- On Tfloat shift to state 40
-- On Tfalse shift to state 53
-- On Tenum shift to state 66
-- On Tdynamic_cast shift to state 54
-- On Tdouble_Constr shift to state 55
-- On Tdouble shift to state 41
-- On Tdecltype shift to state 45
-- On Tconst_cast shift to state 56
-- On Tconst shift to state 76
-- On Tclass shift to state 77
-- On Tchar_Constr shift to state 57
-- On Tchar shift to state 58
-- On Tbool_Constr shift to state 59
-- On Tbool shift to state 60
-- On TTilde shift to state 61
-- On TString shift to state 62
-- On TPlus shift to state 63
-- On TOPar shift to state 64
-- On TOCro_Lambda shift to state 78
-- On TMul shift to state 88
-- On TMinus shift to state 89
-- On TInt shift to state 90
-- On TInc shift to state 91
-- On TIdent_TypedefConstr shift to state 106
-- On TIdent_Typedef shift to state 20
-- On TIdent_TemplatenameInQualifier_BeforeTypedef shift to state 21
-- On TIdent_TemplatenameInQualifier shift to state 12
-- On TIdent_Templatename shift to state 108
-- On TIdent_MacroString shift to state 110
-- On TIdent_ClassnameInQualifier_BeforeTypedef shift to state 111
-- On TIdent_ClassnameInQualifier shift to state 112
-- On TIdent shift to state 113
-- On TFloat shift to state 116
-- On TEllipsis shift to state 201
-- On TDec shift to state 117
-- On TColCol_BeforeTypedef shift to state 118
-- On TColCol shift to state 128
-- On TChar shift to state 174
-- On TBang shift to state 175
-- On TAny_Action shift to state 202
-- On TAndLog shift to state 176
-- On TAnd shift to state 177
-- On LDots shift to state 178
-- On unqualified_id shift to state 179
-- On unary_op shift to state 180
-- On unary_expr shift to state 181
-- On type_spec shift to state 204
-- On type_name shift to state 182
-- On type_id shift to state 224
-- On type_cplusplus_id shift to state 183
-- On template_id shift to state 120
-- On string_elem shift to state 184
-- On spec_qualif_list shift to state 225
-- On simple_type_specifier shift to state 266
-- On shift_expr shift to state 217
-- On relational_expr shift to state 229
-- On qualified_id shift to state 191
-- On primary_expr shift to state 192
-- On primary_cplusplus_id shift to state 193
-- On postfix_expr shift to state 194
-- On pm_expr shift to state 219
-- On optl(listc(argument)) shift to state 850
-- On option(TColCol) shift to state 221
-- On operator_function_id shift to state 168
-- On nonempty_list(TAny_Action) shift to state 269
-- On new_expr shift to state 233
-- On nested_name_specifier2 shift to state 207
-- On nested_name_specifier shift to state 165
-- On multiplicative_expr shift to state 234
-- On logical_or_expr shift to state 246
-- On logical_and_expr shift to state 250
-- On literal shift to state 238
-- On listc(argument) shift to state 270
-- On lambda_introducer shift to state 239
-- On inclusive_or_expr shift to state 272
-- On id_expression shift to state 241
-- On exclusive_or_expr shift to state 273
-- On equality_expr shift to state 256
-- On enum_specifier shift to state 209
-- On enum_name_or_typedef_name_or_simple_class_name shift to state 123
-- On enum_head shift to state 210
-- On elaborated_type_specifier shift to state 274
-- On delete_expr shift to state 242
-- On decltype_specifier shift to state 243
-- On cv_qualif shift to state 275
-- On cpp_cast_operator shift to state 244
-- On conversion_function_id shift to state 169
-- On cond_expr shift to state 330
-- On class_specifier shift to state 277
-- On class_or_namespace_name_for_qualifier2 shift to state 124
-- On class_or_namespace_name_for_qualifier shift to state 170
-- On class_key shift to state 278
-- On class_head shift to state 301
-- On cast_operator_expr shift to state 261
-- On cast_expr shift to state 331
-- On cast_constructor_expr shift to state 263
-- On basic_type_2 shift to state 264
-- On assign_expr shift to state 354
-- On argument shift to state 355
-- On and_expr shift to state 334
-- On additive_expr shift to state 341
## Reductions:
-- On Tnew Tdelete
--   reduce production option(TColCol) ->
-- On TCPar
--   reduce production optl(listc(argument)) ->

State 850:
## Known stack suffix:
## TOPar optl(listc(argument))
## LR(1) items:
new_initializer -> TOPar optl(listc(argument)) . TCPar [ TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtrOpStar TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TEq TEllipsis TDotStar TDiv TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAssign TAndLog TAnd RDots EOF ]
## Transitions:
-- On TCPar shift to state 851
## Reductions:

State 851:
## Known stack suffix:
## TOPar optl(listc(argument)) TCPar
## LR(1) items:
new_initializer -> TOPar optl(listc(argument)) TCPar . [ TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtrOpStar TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TEq TEllipsis TDotStar TDiv TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAssign TAndLog TAnd RDots EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production new_initializer -> TOPar optl(listc(argument)) TCPar

State 852:
## Known stack suffix:
## option(TColCol) Tnew option(new_placement) new_type_id option(new_initializer)
## LR(1) items:
new_expr -> option(TColCol) Tnew option(new_placement) new_type_id option(new_initializer) . [ TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtrOpStar TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TEq TEllipsis TDotStar TDiv TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAssign TAndLog TAnd RDots EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production new_expr -> option(TColCol) Tnew option(new_placement) new_type_id option(new_initializer)

State 853:
## Known stack suffix:
## new_initializer
## LR(1) items:
option(new_initializer) -> new_initializer . [ TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtrOpStar TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TEq TEllipsis TDotStar TDiv TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAssign TAndLog TAnd RDots EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production option(new_initializer) -> new_initializer

State 854:
## Known stack suffix:
## new_placement
## LR(1) items:
option(new_placement) -> new_placement . [ Twchar_t Tvolatile Tvoid Tunsigned Tunion Ttypeof Ttypename Tstruct Tsigned Tshort Trestrict Tlong Tint Tfloat Tenum Tdouble Tdecltype Tconst Tclass Tchar Tbool TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_Templatename TIdent_ClassnameInQualifier_BeforeTypedef TColCol_BeforeTypedef ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production option(new_placement) -> new_placement

State 855:
## Known stack suffix:
## option(TColCol) Tdelete
## LR(1) items:
delete_expr -> option(TColCol) Tdelete . cast_expr [ TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtrOpStar TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TEq TEllipsis TDotStar TDiv TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAssign TAndLog TAnd RDots EOF ]
delete_expr -> option(TColCol) Tdelete . TOCro_new TCCro_new cast_expr [ TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtrOpStar TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TEq TEllipsis TDotStar TDiv TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAssign TAndLog TAnd RDots EOF ]
## Transitions:
-- On Twchar_t_Constr shift to state 14
-- On Twchar_t shift to state 1
-- On Tvoid shift to state 3
-- On Tunsigned shift to state 15
-- On Ttypeof shift to state 17
-- On Ttypeid shift to state 23
-- On Ttrue shift to state 25
-- On Tthis shift to state 26
-- On Tstatic_cast shift to state 28
-- On Tsizeof shift to state 29
-- On Tsigned shift to state 30
-- On Tshort_Constr shift to state 31
-- On Tshort shift to state 32
-- On Treinterpret_cast shift to state 33
-- On Toperator shift to state 34
-- On Tnullptr shift to state 48
-- On Tnull shift to state 49
-- On Tlong_Constr shift to state 50
-- On Tlong shift to state 38
-- On Tint_Constr shift to state 51
-- On Tint shift to state 39
-- On Tfloat_Constr shift to state 52
-- On Tfloat shift to state 40
-- On Tfalse shift to state 53
-- On Tdynamic_cast shift to state 54
-- On Tdouble_Constr shift to state 55
-- On Tdouble shift to state 41
-- On Tdecltype shift to state 45
-- On Tconst_cast shift to state 56
-- On Tchar_Constr shift to state 57
-- On Tchar shift to state 58
-- On Tbool_Constr shift to state 59
-- On Tbool shift to state 60
-- On TTilde shift to state 61
-- On TString shift to state 62
-- On TPlus shift to state 63
-- On TOPar shift to state 64
-- On TOCro_new shift to state 856
-- On TOCro_Lambda shift to state 78
-- On TMul shift to state 88
-- On TMinus shift to state 89
-- On TInt shift to state 90
-- On TInc shift to state 91
-- On TIdent_TypedefConstr shift to state 106
-- On TIdent_Typedef shift to state 20
-- On TIdent_TemplatenameInQualifier_BeforeTypedef shift to state 21
-- On TIdent_TemplatenameInQualifier shift to state 12
-- On TIdent_Templatename shift to state 108
-- On TIdent_MacroString shift to state 110
-- On TIdent_ClassnameInQualifier_BeforeTypedef shift to state 111
-- On TIdent_ClassnameInQualifier shift to state 112
-- On TIdent shift to state 113
-- On TFloat shift to state 116
-- On TDec shift to state 117
-- On TColCol_BeforeTypedef shift to state 118
-- On TColCol shift to state 128
-- On TChar shift to state 174
-- On TBang shift to state 175
-- On TAndLog shift to state 176
-- On TAnd shift to state 177
-- On LDots shift to state 178
-- On unqualified_id shift to state 179
-- On unary_op shift to state 180
-- On unary_expr shift to state 181
-- On type_name shift to state 182
-- On type_cplusplus_id shift to state 183
-- On template_id shift to state 120
-- On string_elem shift to state 184
-- On simple_type_specifier shift to state 189
-- On qualified_id shift to state 191
-- On primary_expr shift to state 192
-- On primary_cplusplus_id shift to state 193
-- On postfix_expr shift to state 194
-- On option(TColCol) shift to state 221
-- On operator_function_id shift to state 168
-- On new_expr shift to state 233
-- On nested_name_specifier2 shift to state 207
-- On nested_name_specifier shift to state 165
-- On literal shift to state 238
-- On lambda_introducer shift to state 239
-- On id_expression shift to state 241
-- On enum_name_or_typedef_name_or_simple_class_name shift to state 123
-- On delete_expr shift to state 242
-- On decltype_specifier shift to state 243
-- On cpp_cast_operator shift to state 244
-- On conversion_function_id shift to state 169
-- On class_or_namespace_name_for_qualifier2 shift to state 124
-- On class_or_namespace_name_for_qualifier shift to state 170
-- On cast_operator_expr shift to state 261
-- On cast_expr shift to state 859
-- On cast_constructor_expr shift to state 263
-- On basic_type_2 shift to state 264
## Reductions:
-- On Tnew Tdelete
--   reduce production option(TColCol) ->

State 856:
## Known stack suffix:
## option(TColCol) Tdelete TOCro_new
## LR(1) items:
delete_expr -> option(TColCol) Tdelete TOCro_new . TCCro_new cast_expr [ TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtrOpStar TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TEq TEllipsis TDotStar TDiv TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAssign TAndLog TAnd RDots EOF ]
## Transitions:
-- On TCCro_new shift to state 857
## Reductions:

State 857:
## Known stack suffix:
## option(TColCol) Tdelete TOCro_new TCCro_new
## LR(1) items:
delete_expr -> option(TColCol) Tdelete TOCro_new TCCro_new . cast_expr [ TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtrOpStar TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TEq TEllipsis TDotStar TDiv TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAssign TAndLog TAnd RDots EOF ]
## Transitions:
-- On Twchar_t_Constr shift to state 14
-- On Twchar_t shift to state 1
-- On Tvoid shift to state 3
-- On Tunsigned shift to state 15
-- On Ttypeof shift to state 17
-- On Ttypeid shift to state 23
-- On Ttrue shift to state 25
-- On Tthis shift to state 26
-- On Tstatic_cast shift to state 28
-- On Tsizeof shift to state 29
-- On Tsigned shift to state 30
-- On Tshort_Constr shift to state 31
-- On Tshort shift to state 32
-- On Treinterpret_cast shift to state 33
-- On Toperator shift to state 34
-- On Tnullptr shift to state 48
-- On Tnull shift to state 49
-- On Tlong_Constr shift to state 50
-- On Tlong shift to state 38
-- On Tint_Constr shift to state 51
-- On Tint shift to state 39
-- On Tfloat_Constr shift to state 52
-- On Tfloat shift to state 40
-- On Tfalse shift to state 53
-- On Tdynamic_cast shift to state 54
-- On Tdouble_Constr shift to state 55
-- On Tdouble shift to state 41
-- On Tdecltype shift to state 45
-- On Tconst_cast shift to state 56
-- On Tchar_Constr shift to state 57
-- On Tchar shift to state 58
-- On Tbool_Constr shift to state 59
-- On Tbool shift to state 60
-- On TTilde shift to state 61
-- On TString shift to state 62
-- On TPlus shift to state 63
-- On TOPar shift to state 64
-- On TOCro_Lambda shift to state 78
-- On TMul shift to state 88
-- On TMinus shift to state 89
-- On TInt shift to state 90
-- On TInc shift to state 91
-- On TIdent_TypedefConstr shift to state 106
-- On TIdent_Typedef shift to state 20
-- On TIdent_TemplatenameInQualifier_BeforeTypedef shift to state 21
-- On TIdent_TemplatenameInQualifier shift to state 12
-- On TIdent_Templatename shift to state 108
-- On TIdent_MacroString shift to state 110
-- On TIdent_ClassnameInQualifier_BeforeTypedef shift to state 111
-- On TIdent_ClassnameInQualifier shift to state 112
-- On TIdent shift to state 113
-- On TFloat shift to state 116
-- On TDec shift to state 117
-- On TColCol_BeforeTypedef shift to state 118
-- On TColCol shift to state 128
-- On TChar shift to state 174
-- On TBang shift to state 175
-- On TAndLog shift to state 176
-- On TAnd shift to state 177
-- On LDots shift to state 178
-- On unqualified_id shift to state 179
-- On unary_op shift to state 180
-- On unary_expr shift to state 181
-- On type_name shift to state 182
-- On type_cplusplus_id shift to state 183
-- On template_id shift to state 120
-- On string_elem shift to state 184
-- On simple_type_specifier shift to state 189
-- On qualified_id shift to state 191
-- On primary_expr shift to state 192
-- On primary_cplusplus_id shift to state 193
-- On postfix_expr shift to state 194
-- On option(TColCol) shift to state 221
-- On operator_function_id shift to state 168
-- On new_expr shift to state 233
-- On nested_name_specifier2 shift to state 207
-- On nested_name_specifier shift to state 165
-- On literal shift to state 238
-- On lambda_introducer shift to state 239
-- On id_expression shift to state 241
-- On enum_name_or_typedef_name_or_simple_class_name shift to state 123
-- On delete_expr shift to state 242
-- On decltype_specifier shift to state 243
-- On cpp_cast_operator shift to state 244
-- On conversion_function_id shift to state 169
-- On class_or_namespace_name_for_qualifier2 shift to state 124
-- On class_or_namespace_name_for_qualifier shift to state 170
-- On cast_operator_expr shift to state 261
-- On cast_expr shift to state 858
-- On cast_constructor_expr shift to state 263
-- On basic_type_2 shift to state 264
## Reductions:
-- On Tnew Tdelete
--   reduce production option(TColCol) ->

State 858:
## Known stack suffix:
## option(TColCol) Tdelete TOCro_new TCCro_new cast_expr
## LR(1) items:
delete_expr -> option(TColCol) Tdelete TOCro_new TCCro_new cast_expr . [ TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtrOpStar TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TEq TEllipsis TDotStar TDiv TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAssign TAndLog TAnd RDots EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production delete_expr -> option(TColCol) Tdelete TOCro_new TCCro_new cast_expr

State 859:
## Known stack suffix:
## option(TColCol) Tdelete cast_expr
## LR(1) items:
delete_expr -> option(TColCol) Tdelete cast_expr . [ TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtrOpStar TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TEq TEllipsis TDotStar TDiv TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAssign TAndLog TAnd RDots EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production delete_expr -> option(TColCol) Tdelete cast_expr

State 860:
## Known stack suffix:
## pm_expr TPtrOpStar cast_expr
## LR(1) items:
pm_expr -> pm_expr TPtrOpStar cast_expr . [ TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtrOpStar TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TEllipsis TDotStar TDiv TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAndLog TAnd RDots EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production pm_expr -> pm_expr TPtrOpStar cast_expr

State 861:
## Known stack suffix:
## shift_expr TShr additive_expr
## LR(1) items:
additive_expr -> additive_expr . TPlus multiplicative_expr [ TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMinus TInfEq TInf TEqEq TEllipsis TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAndLog TAnd RDots EOF ]
additive_expr -> additive_expr . TMinus multiplicative_expr [ TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtVirg TPlus TOrLog TOr TNotEq TMinus TInfEq TInf TEqEq TEllipsis TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAndLog TAnd RDots EOF ]
shift_expr -> shift_expr TShr additive_expr . [ TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtVirg TOrLog TOr TNotEq TInfEq TInf TEqEq TEllipsis TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAndLog TAnd RDots EOF ]
## Transitions:
-- On TPlus shift to state 342
-- On TMinus shift to state 348
## Reductions:
-- On TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtVirg TOrLog TOr TNotEq TInfEq TInf TEqEq TEllipsis TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAndLog TAnd RDots EOF
--   reduce production shift_expr -> shift_expr TShr additive_expr

State 862:
## Known stack suffix:
## ident TEq const_expr
## LR(1) items:
enumerator -> ident TEq const_expr . [ TComma TCBrace ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production enumerator -> ident TEq const_expr

State 863:
## Known stack suffix:
## listc(enumerator) TComma enumerator
## LR(1) items:
listc(enumerator) -> listc(enumerator) TComma enumerator . [ TComma TCBrace ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production listc(enumerator) -> listc(enumerator) TComma enumerator

State 864:
## Known stack suffix:
## enum_head TOBrace listc(enumerator) option(TComma)
## LR(1) items:
enum_specifier -> enum_head TOBrace listc(enumerator) option(TComma) . TCBrace [ Twchar_t Tvolatile Tvoid Tvirtual Tunsigned Tunion Ttypeof Ttypename Ttypedef Tthread_local Tstruct Tstatic Tsigned Tshort Trestrict Tregister Toperator Tmutable Tlong Tint Tinline Tfriend Tfloat Textern Tenum Tdouble Tdecltype Tconstexpr Tconst Tclass Tchar Tbool Tauto TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtrOpStar TPtVirg TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMod TMinus TInfEq TInf TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TIdent TEqEq TEq TEllipsis TDotStar TDiv TCommentNewline_DefineEndOfMacro TComma TColCol_BeforeTypedef TColCol TCol TCPar_EOL TCPar TCCro TCBrace TAssign TAndLog TAnd RDots EOF ]
## Transitions:
-- On TCBrace shift to state 865
## Reductions:

State 865:
## Known stack suffix:
## enum_head TOBrace listc(enumerator) option(TComma) TCBrace
## LR(1) items:
enum_specifier -> enum_head TOBrace listc(enumerator) option(TComma) TCBrace . [ Twchar_t Tvolatile Tvoid Tvirtual Tunsigned Tunion Ttypeof Ttypename Ttypedef Tthread_local Tstruct Tstatic Tsigned Tshort Trestrict Tregister Toperator Tmutable Tlong Tint Tinline Tfriend Tfloat Textern Tenum Tdouble Tdecltype Tconstexpr Tconst Tclass Tchar Tbool Tauto TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtrOpStar TPtVirg TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMod TMinus TInfEq TInf TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TIdent TEqEq TEq TEllipsis TDotStar TDiv TCommentNewline_DefineEndOfMacro TComma TColCol_BeforeTypedef TColCol TCol TCPar_EOL TCPar TCCro TCBrace TAssign TAndLog TAnd RDots EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production enum_specifier -> enum_head TOBrace listc(enumerator) option(TComma) TCBrace

State 866:
## Known stack suffix:
## enumerator
## LR(1) items:
listc(enumerator) -> enumerator . [ TComma TCBrace ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production listc(enumerator) -> enumerator

State 867:
## Known stack suffix:
## postfix_expr TOPar optl(listc(argument))
## LR(1) items:
postfix_expr -> postfix_expr TOPar optl(listc(argument)) . TCPar [ TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtrOpStar TPtrOp TPtVirg TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMod TMinus TInfEq TInf TInc TEqEq TEq TEllipsis TDotStar TDot TDiv TDec TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAssign TAndLog TAnd RDots EOF ]
## Transitions:
-- On TCPar shift to state 868
## Reductions:

State 868:
## Known stack suffix:
## postfix_expr TOPar optl(listc(argument)) TCPar
## LR(1) items:
postfix_expr -> postfix_expr TOPar optl(listc(argument)) TCPar . [ TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtrOpStar TPtrOp TPtVirg TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMod TMinus TInfEq TInf TInc TEqEq TEq TEllipsis TDotStar TDot TDiv TDec TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAssign TAndLog TAnd RDots EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production postfix_expr -> postfix_expr TOPar optl(listc(argument)) TCPar

State 869:
## Known stack suffix:
## postfix_expr TOCro
## LR(1) items:
postfix_expr -> postfix_expr TOCro . expr TCCro [ TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtrOpStar TPtrOp TPtVirg TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMod TMinus TInfEq TInf TInc TEqEq TEq TEllipsis TDotStar TDot TDiv TDec TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAssign TAndLog TAnd RDots EOF ]
## Transitions:
-- On Twchar_t_Constr shift to state 14
-- On Twchar_t shift to state 1
-- On Tvoid shift to state 3
-- On Tunsigned shift to state 15
-- On Ttypeof shift to state 17
-- On Ttypeid shift to state 23
-- On Ttrue shift to state 25
-- On Tthrow shift to state 47
-- On Tthis shift to state 26
-- On Tstatic_cast shift to state 28
-- On Tsizeof shift to state 29
-- On Tsigned shift to state 30
-- On Tshort_Constr shift to state 31
-- On Tshort shift to state 32
-- On Treinterpret_cast shift to state 33
-- On Toperator shift to state 34
-- On Tnullptr shift to state 48
-- On Tnull shift to state 49
-- On Tlong_Constr shift to state 50
-- On Tlong shift to state 38
-- On Tint_Constr shift to state 51
-- On Tint shift to state 39
-- On Tfloat_Constr shift to state 52
-- On Tfloat shift to state 40
-- On Tfalse shift to state 53
-- On Tdynamic_cast shift to state 54
-- On Tdouble_Constr shift to state 55
-- On Tdouble shift to state 41
-- On Tdecltype shift to state 45
-- On Tconst_cast shift to state 56
-- On Tchar_Constr shift to state 57
-- On Tchar shift to state 58
-- On Tbool_Constr shift to state 59
-- On Tbool shift to state 60
-- On TTilde shift to state 61
-- On TString shift to state 62
-- On TPlus shift to state 63
-- On TOPar shift to state 64
-- On TOCro_Lambda shift to state 78
-- On TMul shift to state 88
-- On TMinus shift to state 89
-- On TInt shift to state 90
-- On TInc shift to state 91
-- On TIdent_TypedefConstr shift to state 106
-- On TIdent_Typedef shift to state 20
-- On TIdent_TemplatenameInQualifier_BeforeTypedef shift to state 21
-- On TIdent_TemplatenameInQualifier shift to state 12
-- On TIdent_Templatename shift to state 108
-- On TIdent_MacroString shift to state 110
-- On TIdent_ClassnameInQualifier_BeforeTypedef shift to state 111
-- On TIdent_ClassnameInQualifier shift to state 112
-- On TIdent shift to state 113
-- On TFloat shift to state 116
-- On TDec shift to state 117
-- On TColCol_BeforeTypedef shift to state 118
-- On TColCol shift to state 128
-- On TChar shift to state 174
-- On TBang shift to state 175
-- On TAndLog shift to state 176
-- On TAnd shift to state 177
-- On LDots shift to state 178
-- On unqualified_id shift to state 179
-- On unary_op shift to state 180
-- On unary_expr shift to state 181
-- On type_name shift to state 182
-- On type_cplusplus_id shift to state 183
-- On template_id shift to state 120
-- On string_elem shift to state 184
-- On simple_type_specifier shift to state 189
-- On shift_expr shift to state 217
-- On relational_expr shift to state 229
-- On qualified_id shift to state 191
-- On primary_expr shift to state 192
-- On primary_cplusplus_id shift to state 193
-- On postfix_expr shift to state 194
-- On pm_expr shift to state 219
-- On option(TColCol) shift to state 221
-- On operator_function_id shift to state 168
-- On new_expr shift to state 233
-- On nested_name_specifier2 shift to state 207
-- On nested_name_specifier shift to state 165
-- On multiplicative_expr shift to state 234
-- On logical_or_expr shift to state 246
-- On logical_and_expr shift to state 250
-- On literal shift to state 238
-- On lambda_introducer shift to state 239
-- On inclusive_or_expr shift to state 272
-- On id_expression shift to state 241
-- On expr shift to state 870
-- On exclusive_or_expr shift to state 273
-- On equality_expr shift to state 256
-- On enum_name_or_typedef_name_or_simple_class_name shift to state 123
-- On delete_expr shift to state 242
-- On decltype_specifier shift to state 243
-- On cpp_cast_operator shift to state 244
-- On conversion_function_id shift to state 169
-- On cond_expr shift to state 330
-- On class_or_namespace_name_for_qualifier2 shift to state 124
-- On class_or_namespace_name_for_qualifier shift to state 170
-- On cast_operator_expr shift to state 261
-- On cast_expr shift to state 331
-- On cast_constructor_expr shift to state 263
-- On basic_type_2 shift to state 264
-- On assign_expr shift to state 539
-- On and_expr shift to state 334
-- On additive_expr shift to state 341
## Reductions:
-- On Tnew Tdelete
--   reduce production option(TColCol) ->

State 870:
## Known stack suffix:
## postfix_expr TOCro expr
## LR(1) items:
expr -> expr . TComma assign_expr [ TComma TCCro ]
postfix_expr -> postfix_expr TOCro expr . TCCro [ TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtrOpStar TPtrOp TPtVirg TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMod TMinus TInfEq TInf TInc TEqEq TEq TEllipsis TDotStar TDot TDiv TDec TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAssign TAndLog TAnd RDots EOF ]
## Transitions:
-- On TComma shift to state 518
-- On TCCro shift to state 871
## Reductions:

State 871:
## Known stack suffix:
## postfix_expr TOCro expr TCCro
## LR(1) items:
postfix_expr -> postfix_expr TOCro expr TCCro . [ TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtrOpStar TPtrOp TPtVirg TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMod TMinus TInfEq TInf TInc TEqEq TEq TEllipsis TDotStar TDot TDiv TDec TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAssign TAndLog TAnd RDots EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production postfix_expr -> postfix_expr TOCro expr TCCro

State 872:
## Known stack suffix:
## postfix_expr TInc
## LR(1) items:
postfix_expr -> postfix_expr TInc . [ TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtrOpStar TPtrOp TPtVirg TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMod TMinus TInfEq TInf TInc TEqEq TEq TEllipsis TDotStar TDot TDiv TDec TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAssign TAndLog TAnd RDots EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production postfix_expr -> postfix_expr TInc

State 873:
## Known stack suffix:
## postfix_expr TDot
## LR(1) items:
postfix_expr -> postfix_expr TDot . option(Ttemplate) option(TColCol) id_expression [ TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtrOpStar TPtrOp TPtVirg TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMod TMinus TInfEq TInf TInc TEqEq TEq TEllipsis TDotStar TDot TDiv TDec TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAssign TAndLog TAnd RDots EOF ]
## Transitions:
-- On Ttemplate shift to state 196
-- On option(Ttemplate) shift to state 874
## Reductions:
-- On Toperator TIdent_TemplatenameInQualifier TIdent_ClassnameInQualifier TIdent TColCol
--   reduce production option(Ttemplate) ->

State 874:
## Known stack suffix:
## postfix_expr TDot option(Ttemplate)
## LR(1) items:
postfix_expr -> postfix_expr TDot option(Ttemplate) . option(TColCol) id_expression [ TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtrOpStar TPtrOp TPtVirg TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMod TMinus TInfEq TInf TInc TEqEq TEq TEllipsis TDotStar TDot TDiv TDec TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAssign TAndLog TAnd RDots EOF ]
## Transitions:
-- On TColCol shift to state 8
-- On option(TColCol) shift to state 875
## Reductions:
-- On Toperator TIdent_TemplatenameInQualifier TIdent_ClassnameInQualifier TIdent
--   reduce production option(TColCol) ->

State 875:
## Known stack suffix:
## postfix_expr TDot option(Ttemplate) option(TColCol)
## LR(1) items:
postfix_expr -> postfix_expr TDot option(Ttemplate) option(TColCol) . id_expression [ TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtrOpStar TPtrOp TPtVirg TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMod TMinus TInfEq TInf TInc TEqEq TEq TEllipsis TDotStar TDot TDiv TDec TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAssign TAndLog TAnd RDots EOF ]
## Transitions:
-- On Toperator shift to state 34
-- On TIdent_TemplatenameInQualifier shift to state 12
-- On TIdent_ClassnameInQualifier shift to state 112
-- On TIdent shift to state 166
-- On unqualified_id shift to state 179
-- On qualified_id shift to state 191
-- On operator_function_id shift to state 168
-- On nested_name_specifier shift to state 165
-- On id_expression shift to state 876
-- On conversion_function_id shift to state 169
-- On class_or_namespace_name_for_qualifier shift to state 170
## Reductions:

State 876:
## Known stack suffix:
## postfix_expr TDot option(Ttemplate) option(TColCol) id_expression
## LR(1) items:
postfix_expr -> postfix_expr TDot option(Ttemplate) option(TColCol) id_expression . [ TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtrOpStar TPtrOp TPtVirg TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMod TMinus TInfEq TInf TInc TEqEq TEq TEllipsis TDotStar TDot TDiv TDec TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAssign TAndLog TAnd RDots EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production postfix_expr -> postfix_expr TDot option(Ttemplate) option(TColCol) id_expression

State 877:
## Known stack suffix:
## postfix_expr TDec
## LR(1) items:
postfix_expr -> postfix_expr TDec . [ TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtrOpStar TPtrOp TPtVirg TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMod TMinus TInfEq TInf TInc TEqEq TEq TEllipsis TDotStar TDot TDiv TDec TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAssign TAndLog TAnd RDots EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production postfix_expr -> postfix_expr TDec

State 878:
## Known stack suffix:
## unary_op cast_expr
## LR(1) items:
unary_expr -> unary_op cast_expr . [ TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtrOpStar TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TEq TEllipsis TDotStar TDiv TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAssign TAndLog TAnd RDots EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production unary_expr -> unary_op cast_expr

State 879:
## Known stack suffix:
## LDots expr
## LR(1) items:
expr -> expr . TComma assign_expr [ TComma RDots ]
primary_expr -> LDots expr . RDots [ TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtrOpStar TPtrOp TPtVirg TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMod TMinus TInfEq TInf TInc TEqEq TEq TEllipsis TDotStar TDot TDiv TDec TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAssign TAndLog TAnd RDots EOF ]
## Transitions:
-- On TComma shift to state 518
-- On RDots shift to state 880
## Reductions:

State 880:
## Known stack suffix:
## LDots expr RDots
## LR(1) items:
primary_expr -> LDots expr RDots . [ TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtrOpStar TPtrOp TPtVirg TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMod TMinus TInfEq TInf TInc TEqEq TEq TEllipsis TDotStar TDot TDiv TDec TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAssign TAndLog TAnd RDots EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production primary_expr -> LDots expr RDots

State 881:
## Known stack suffix:
## TDec unary_expr
## LR(1) items:
unary_expr -> TDec unary_expr . [ TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtrOpStar TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TEq TEllipsis TDotStar TDiv TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAssign TAndLog TAnd RDots EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production unary_expr -> TDec unary_expr

State 882:
## Known stack suffix:
## TOCro const_expr
## LR(1) items:
initialize2 -> TOCro const_expr . TCCro TEq initialize2 [ TComma TCBrace ]
initialize2 -> TOCro const_expr . TCCro initialize2 [ TComma TCBrace ]
## Transitions:
-- On TCCro shift to state 883
## Reductions:

State 883:
## Known stack suffix:
## TOCro const_expr TCCro
## LR(1) items:
initialize2 -> TOCro const_expr TCCro . TEq initialize2 [ TComma TCBrace ]
initialize2 -> TOCro const_expr TCCro . initialize2 [ TComma TCBrace ]
## Transitions:
-- On Twchar_t_Constr shift to state 14
-- On Twchar_t shift to state 1
-- On Tvoid shift to state 3
-- On Tunsigned shift to state 15
-- On Ttypeof shift to state 17
-- On Ttypeid shift to state 23
-- On Ttrue shift to state 25
-- On Tthis shift to state 26
-- On Tstatic_cast shift to state 28
-- On Tsizeof shift to state 29
-- On Tsigned shift to state 30
-- On Tshort_Constr shift to state 31
-- On Tshort shift to state 32
-- On Treinterpret_cast shift to state 33
-- On Toperator shift to state 34
-- On Tnullptr shift to state 48
-- On Tnull shift to state 49
-- On Tlong_Constr shift to state 50
-- On Tlong shift to state 38
-- On Tint_Constr shift to state 51
-- On Tint shift to state 39
-- On Tfloat_Constr shift to state 52
-- On Tfloat shift to state 40
-- On Tfalse shift to state 53
-- On Tdynamic_cast shift to state 54
-- On Tdouble_Constr shift to state 55
-- On Tdouble shift to state 41
-- On Tdecltype shift to state 45
-- On Tconst_cast shift to state 56
-- On Tchar_Constr shift to state 57
-- On Tchar shift to state 58
-- On Tbool_Constr shift to state 59
-- On Tbool shift to state 60
-- On TTilde shift to state 61
-- On TString shift to state 62
-- On TPlus shift to state 63
-- On TOPar shift to state 64
-- On TOCro_Lambda shift to state 78
-- On TOCro shift to state 115
-- On TOBrace shift to state 114
-- On TMul shift to state 88
-- On TMinus shift to state 89
-- On TInt shift to state 90
-- On TInc shift to state 91
-- On TIdent_TypedefConstr shift to state 106
-- On TIdent_Typedef shift to state 572
-- On TIdent_TemplatenameInQualifier_BeforeTypedef shift to state 21
-- On TIdent_TemplatenameInQualifier shift to state 12
-- On TIdent_Templatename shift to state 108
-- On TIdent_MacroString shift to state 110
-- On TIdent_ClassnameInQualifier_BeforeTypedef shift to state 111
-- On TIdent_ClassnameInQualifier shift to state 112
-- On TIdent shift to state 578
-- On TFloat shift to state 116
-- On TEq shift to state 884
-- On TDot shift to state 662
-- On TDec shift to state 117
-- On TColCol_BeforeTypedef shift to state 118
-- On TColCol shift to state 128
-- On TChar shift to state 174
-- On TBang shift to state 175
-- On TAndLog shift to state 176
-- On TAnd shift to state 177
-- On LDots shift to state 178
-- On unqualified_id shift to state 179
-- On unary_op shift to state 180
-- On unary_expr shift to state 181
-- On type_name shift to state 182
-- On type_cplusplus_id shift to state 183
-- On template_id shift to state 120
-- On string_elem shift to state 184
-- On simple_type_specifier shift to state 189
-- On shift_expr shift to state 217
-- On relational_expr shift to state 229
-- On qualified_id shift to state 191
-- On primary_expr shift to state 192
-- On primary_cplusplus_id shift to state 193
-- On postfix_expr shift to state 194
-- On pm_expr shift to state 219
-- On option(TColCol) shift to state 221
-- On operator_function_id shift to state 168
-- On nonempty_list(designator) shift to state 664
-- On new_expr shift to state 233
-- On nested_name_specifier2 shift to state 207
-- On nested_name_specifier shift to state 165
-- On multiplicative_expr shift to state 234
-- On logical_or_expr shift to state 246
-- On logical_and_expr shift to state 250
-- On literal shift to state 238
-- On lambda_introducer shift to state 239
-- On initialize2 shift to state 886
-- On inclusive_or_expr shift to state 272
-- On ident shift to state 667
-- On id_expression shift to state 241
-- On exclusive_or_expr shift to state 273
-- On equality_expr shift to state 256
-- On enum_name_or_typedef_name_or_simple_class_name shift to state 123
-- On designator shift to state 670
-- On delete_expr shift to state 242
-- On decltype_specifier shift to state 243
-- On cpp_cast_operator shift to state 244
-- On conversion_function_id shift to state 169
-- On cond_expr shift to state 672
-- On class_or_namespace_name_for_qualifier2 shift to state 124
-- On class_or_namespace_name_for_qualifier shift to state 170
-- On cast_operator_expr shift to state 261
-- On cast_expr shift to state 262
-- On cast_constructor_expr shift to state 263
-- On braced_init_list shift to state 673
-- On basic_type_2 shift to state 264
-- On and_expr shift to state 334
-- On additive_expr shift to state 341
## Reductions:
-- On Tnew Tdelete
--   reduce production option(TColCol) ->

State 884:
## Known stack suffix:
## TOCro const_expr TCCro TEq
## LR(1) items:
initialize2 -> TOCro const_expr TCCro TEq . initialize2 [ TComma TCBrace ]
## Transitions:
-- On Twchar_t_Constr shift to state 14
-- On Twchar_t shift to state 1
-- On Tvoid shift to state 3
-- On Tunsigned shift to state 15
-- On Ttypeof shift to state 17
-- On Ttypeid shift to state 23
-- On Ttrue shift to state 25
-- On Tthis shift to state 26
-- On Tstatic_cast shift to state 28
-- On Tsizeof shift to state 29
-- On Tsigned shift to state 30
-- On Tshort_Constr shift to state 31
-- On Tshort shift to state 32
-- On Treinterpret_cast shift to state 33
-- On Toperator shift to state 34
-- On Tnullptr shift to state 48
-- On Tnull shift to state 49
-- On Tlong_Constr shift to state 50
-- On Tlong shift to state 38
-- On Tint_Constr shift to state 51
-- On Tint shift to state 39
-- On Tfloat_Constr shift to state 52
-- On Tfloat shift to state 40
-- On Tfalse shift to state 53
-- On Tdynamic_cast shift to state 54
-- On Tdouble_Constr shift to state 55
-- On Tdouble shift to state 41
-- On Tdecltype shift to state 45
-- On Tconst_cast shift to state 56
-- On Tchar_Constr shift to state 57
-- On Tchar shift to state 58
-- On Tbool_Constr shift to state 59
-- On Tbool shift to state 60
-- On TTilde shift to state 61
-- On TString shift to state 62
-- On TPlus shift to state 63
-- On TOPar shift to state 64
-- On TOCro_Lambda shift to state 78
-- On TOCro shift to state 115
-- On TOBrace shift to state 114
-- On TMul shift to state 88
-- On TMinus shift to state 89
-- On TInt shift to state 90
-- On TInc shift to state 91
-- On TIdent_TypedefConstr shift to state 106
-- On TIdent_Typedef shift to state 572
-- On TIdent_TemplatenameInQualifier_BeforeTypedef shift to state 21
-- On TIdent_TemplatenameInQualifier shift to state 12
-- On TIdent_Templatename shift to state 108
-- On TIdent_MacroString shift to state 110
-- On TIdent_ClassnameInQualifier_BeforeTypedef shift to state 111
-- On TIdent_ClassnameInQualifier shift to state 112
-- On TIdent shift to state 578
-- On TFloat shift to state 116
-- On TDot shift to state 662
-- On TDec shift to state 117
-- On TColCol_BeforeTypedef shift to state 118
-- On TColCol shift to state 128
-- On TChar shift to state 174
-- On TBang shift to state 175
-- On TAndLog shift to state 176
-- On TAnd shift to state 177
-- On LDots shift to state 178
-- On unqualified_id shift to state 179
-- On unary_op shift to state 180
-- On unary_expr shift to state 181
-- On type_name shift to state 182
-- On type_cplusplus_id shift to state 183
-- On template_id shift to state 120
-- On string_elem shift to state 184
-- On simple_type_specifier shift to state 189
-- On shift_expr shift to state 217
-- On relational_expr shift to state 229
-- On qualified_id shift to state 191
-- On primary_expr shift to state 192
-- On primary_cplusplus_id shift to state 193
-- On postfix_expr shift to state 194
-- On pm_expr shift to state 219
-- On option(TColCol) shift to state 221
-- On operator_function_id shift to state 168
-- On nonempty_list(designator) shift to state 664
-- On new_expr shift to state 233
-- On nested_name_specifier2 shift to state 207
-- On nested_name_specifier shift to state 165
-- On multiplicative_expr shift to state 234
-- On logical_or_expr shift to state 246
-- On logical_and_expr shift to state 250
-- On literal shift to state 238
-- On lambda_introducer shift to state 239
-- On initialize2 shift to state 885
-- On inclusive_or_expr shift to state 272
-- On ident shift to state 667
-- On id_expression shift to state 241
-- On exclusive_or_expr shift to state 273
-- On equality_expr shift to state 256
-- On enum_name_or_typedef_name_or_simple_class_name shift to state 123
-- On designator shift to state 670
-- On delete_expr shift to state 242
-- On decltype_specifier shift to state 243
-- On cpp_cast_operator shift to state 244
-- On conversion_function_id shift to state 169
-- On cond_expr shift to state 672
-- On class_or_namespace_name_for_qualifier2 shift to state 124
-- On class_or_namespace_name_for_qualifier shift to state 170
-- On cast_operator_expr shift to state 261
-- On cast_expr shift to state 262
-- On cast_constructor_expr shift to state 263
-- On braced_init_list shift to state 673
-- On basic_type_2 shift to state 264
-- On and_expr shift to state 334
-- On additive_expr shift to state 341
## Reductions:
-- On Tnew Tdelete
--   reduce production option(TColCol) ->

State 885:
## Known stack suffix:
## TOCro const_expr TCCro TEq initialize2
## LR(1) items:
initialize2 -> TOCro const_expr TCCro TEq initialize2 . [ TComma TCBrace ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production initialize2 -> TOCro const_expr TCCro TEq initialize2

State 886:
## Known stack suffix:
## TOCro const_expr TCCro initialize2
## LR(1) items:
initialize2 -> TOCro const_expr TCCro initialize2 . [ TComma TCBrace ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production initialize2 -> TOCro const_expr TCCro initialize2

State 887:
## Known stack suffix:
## TOBrace TCBrace
## LR(1) items:
braced_init_list -> TOBrace TCBrace . [ TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtrOpStar TPtrOp TPtVirg TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMod TMinus TInfEq TInf TInc TEqEq TEq TEllipsis TDotStar TDot TDiv TDec TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAssign TAndLog TAnd RDots EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production braced_init_list -> TOBrace TCBrace

State 888:
## Known stack suffix:
## TOBrace initialize_list
## LR(1) items:
braced_init_list -> TOBrace initialize_list . option(TComma) TCBrace [ TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtrOpStar TPtrOp TPtVirg TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMod TMinus TInfEq TInf TInc TEqEq TEq TEllipsis TDotStar TDot TDiv TDec TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAssign TAndLog TAnd RDots EOF ]
initialize_list -> initialize_list . TComma initialize2 [ TComma TCBrace ]
## Transitions:
-- On TComma shift to state 889
-- On option(TComma) shift to state 890
## Reductions:
-- On TCBrace
--   reduce production option(TComma) ->

State 889:
## Known stack suffix:
## initialize_list TComma
## LR(1) items:
initialize_list -> initialize_list TComma . initialize2 [ TComma TCBrace ]
option(TComma) -> TComma . [ TCBrace ]
## Transitions:
-- On Twchar_t_Constr shift to state 14
-- On Twchar_t shift to state 1
-- On Tvoid shift to state 3
-- On Tunsigned shift to state 15
-- On Ttypeof shift to state 17
-- On Ttypeid shift to state 23
-- On Ttrue shift to state 25
-- On Tthis shift to state 26
-- On Tstatic_cast shift to state 28
-- On Tsizeof shift to state 29
-- On Tsigned shift to state 30
-- On Tshort_Constr shift to state 31
-- On Tshort shift to state 32
-- On Treinterpret_cast shift to state 33
-- On Toperator shift to state 34
-- On Tnullptr shift to state 48
-- On Tnull shift to state 49
-- On Tlong_Constr shift to state 50
-- On Tlong shift to state 38
-- On Tint_Constr shift to state 51
-- On Tint shift to state 39
-- On Tfloat_Constr shift to state 52
-- On Tfloat shift to state 40
-- On Tfalse shift to state 53
-- On Tdynamic_cast shift to state 54
-- On Tdouble_Constr shift to state 55
-- On Tdouble shift to state 41
-- On Tdecltype shift to state 45
-- On Tconst_cast shift to state 56
-- On Tchar_Constr shift to state 57
-- On Tchar shift to state 58
-- On Tbool_Constr shift to state 59
-- On Tbool shift to state 60
-- On TTilde shift to state 61
-- On TString shift to state 62
-- On TPlus shift to state 63
-- On TOPar shift to state 64
-- On TOCro_Lambda shift to state 78
-- On TOCro shift to state 115
-- On TOBrace shift to state 114
-- On TMul shift to state 88
-- On TMinus shift to state 89
-- On TInt shift to state 90
-- On TInc shift to state 91
-- On TIdent_TypedefConstr shift to state 106
-- On TIdent_Typedef shift to state 572
-- On TIdent_TemplatenameInQualifier_BeforeTypedef shift to state 21
-- On TIdent_TemplatenameInQualifier shift to state 12
-- On TIdent_Templatename shift to state 108
-- On TIdent_MacroString shift to state 110
-- On TIdent_ClassnameInQualifier_BeforeTypedef shift to state 111
-- On TIdent_ClassnameInQualifier shift to state 112
-- On TIdent shift to state 578
-- On TFloat shift to state 116
-- On TDot shift to state 662
-- On TDec shift to state 117
-- On TColCol_BeforeTypedef shift to state 118
-- On TColCol shift to state 128
-- On TChar shift to state 174
-- On TBang shift to state 175
-- On TAndLog shift to state 176
-- On TAnd shift to state 177
-- On LDots shift to state 178
-- On unqualified_id shift to state 179
-- On unary_op shift to state 180
-- On unary_expr shift to state 181
-- On type_name shift to state 182
-- On type_cplusplus_id shift to state 183
-- On template_id shift to state 120
-- On string_elem shift to state 184
-- On simple_type_specifier shift to state 189
-- On shift_expr shift to state 217
-- On relational_expr shift to state 229
-- On qualified_id shift to state 191
-- On primary_expr shift to state 192
-- On primary_cplusplus_id shift to state 193
-- On postfix_expr shift to state 194
-- On pm_expr shift to state 219
-- On option(TColCol) shift to state 221
-- On operator_function_id shift to state 168
-- On nonempty_list(designator) shift to state 664
-- On new_expr shift to state 233
-- On nested_name_specifier2 shift to state 207
-- On nested_name_specifier shift to state 165
-- On multiplicative_expr shift to state 234
-- On logical_or_expr shift to state 246
-- On logical_and_expr shift to state 250
-- On literal shift to state 238
-- On lambda_introducer shift to state 239
-- On initialize2 shift to state 676
-- On inclusive_or_expr shift to state 272
-- On ident shift to state 667
-- On id_expression shift to state 241
-- On exclusive_or_expr shift to state 273
-- On equality_expr shift to state 256
-- On enum_name_or_typedef_name_or_simple_class_name shift to state 123
-- On designator shift to state 670
-- On delete_expr shift to state 242
-- On decltype_specifier shift to state 243
-- On cpp_cast_operator shift to state 244
-- On conversion_function_id shift to state 169
-- On cond_expr shift to state 672
-- On class_or_namespace_name_for_qualifier2 shift to state 124
-- On class_or_namespace_name_for_qualifier shift to state 170
-- On cast_operator_expr shift to state 261
-- On cast_expr shift to state 262
-- On cast_constructor_expr shift to state 263
-- On braced_init_list shift to state 673
-- On basic_type_2 shift to state 264
-- On and_expr shift to state 334
-- On additive_expr shift to state 341
## Reductions:
-- On Tnew Tdelete
--   reduce production option(TColCol) ->
-- On TCBrace
--   reduce production option(TComma) -> TComma

State 890:
## Known stack suffix:
## TOBrace initialize_list option(TComma)
## LR(1) items:
braced_init_list -> TOBrace initialize_list option(TComma) . TCBrace [ TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtrOpStar TPtrOp TPtVirg TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMod TMinus TInfEq TInf TInc TEqEq TEq TEllipsis TDotStar TDot TDiv TDec TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAssign TAndLog TAnd RDots EOF ]
## Transitions:
-- On TCBrace shift to state 891
## Reductions:

State 891:
## Known stack suffix:
## TOBrace initialize_list option(TComma) TCBrace
## LR(1) items:
braced_init_list -> TOBrace initialize_list option(TComma) TCBrace . [ TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtrOpStar TPtrOp TPtVirg TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMod TMinus TInfEq TInf TInc TEqEq TEq TEllipsis TDotStar TDot TDiv TDec TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAssign TAndLog TAnd RDots EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production braced_init_list -> TOBrace initialize_list option(TComma) TCBrace

State 892:
## Known stack suffix:
## type_id
## LR(1) items:
template_argument -> type_id . [ TSup_Template TComma ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production template_argument -> type_id

State 893:
## Known stack suffix:
## template_argument
## LR(1) items:
listc(template_argument) -> template_argument . [ TSup_Template TComma ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production listc(template_argument) -> template_argument

State 894:
## Known stack suffix:
## TIdent_Templatename TInf_Template listc(template_argument)
## LR(1) items:
listc(template_argument) -> listc(template_argument) . TComma template_argument [ TSup_Template TComma ]
template_id -> TIdent_Templatename TInf_Template listc(template_argument) . TSup_Template [ Twchar_t Tvolatile Tvoid Tvirtual Tunsigned Tunion Ttypeof Ttypename Ttypedef Tthread_local Tstruct Tstatic Tsigned Tshort Trestrict Tregister Toperator Tmutable Tlong Tint Tinline Tfriend Tfloat Textern Tenum Tdouble Tdecltype Tconstexpr Tconst Tclass Tchar Tbool Tauto Tasm TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtrOpStar TPtrOp TPtVirg TPlus TOrLog TOr TOPar_CplusplusInit TOPar TOCro TOBrace TNotEq TMul TMod TMinus TInfEq TInf TInc TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TIdent TEqEq TEq TEllipsis TDotStar TDot TDiv TDec TCommentNewline_DefineEndOfMacro TComma TColCol_BeforeTypedef TColCol TCol TCPar_EOL TCPar TCCro TCBrace TAssign TAndLog TAnd RDots EOF ]
## Transitions:
-- On TSup_Template shift to state 895
-- On TComma shift to state 896
## Reductions:

State 895:
## Known stack suffix:
## TIdent_Templatename TInf_Template listc(template_argument) TSup_Template
## LR(1) items:
template_id -> TIdent_Templatename TInf_Template listc(template_argument) TSup_Template . [ Twchar_t Tvolatile Tvoid Tvirtual Tunsigned Tunion Ttypeof Ttypename Ttypedef Tthread_local Tstruct Tstatic Tsigned Tshort Trestrict Tregister Toperator Tmutable Tlong Tint Tinline Tfriend Tfloat Textern Tenum Tdouble Tdecltype Tconstexpr Tconst Tclass Tchar Tbool Tauto Tasm TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtrOpStar TPtrOp TPtVirg TPlus TOrLog TOr TOPar_CplusplusInit TOPar TOCro TOBrace TNotEq TMul TMod TMinus TInfEq TInf TInc TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TIdent TEqEq TEq TEllipsis TDotStar TDot TDiv TDec TCommentNewline_DefineEndOfMacro TComma TColCol_BeforeTypedef TColCol TCol TCPar_EOL TCPar TCCro TCBrace TAssign TAndLog TAnd RDots EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production template_id -> TIdent_Templatename TInf_Template listc(template_argument) TSup_Template

State 896:
## Known stack suffix:
## listc(template_argument) TComma
## LR(1) items:
listc(template_argument) -> listc(template_argument) TComma . template_argument [ TSup_Template TComma ]
## Transitions:
-- On Twchar_t_Constr shift to state 14
-- On Twchar_t shift to state 1
-- On Tvolatile shift to state 2
-- On Tvoid shift to state 3
-- On Tunsigned shift to state 15
-- On Tunion shift to state 16
-- On Ttypeof shift to state 17
-- On Ttypename shift to state 19
-- On Ttypeid shift to state 23
-- On Ttrue shift to state 25
-- On Tthrow shift to state 47
-- On Tthis shift to state 26
-- On Tstruct shift to state 27
-- On Tstatic_cast shift to state 28
-- On Tsizeof shift to state 29
-- On Tsigned shift to state 30
-- On Tshort_Constr shift to state 31
-- On Tshort shift to state 32
-- On Trestrict shift to state 65
-- On Treinterpret_cast shift to state 33
-- On Toperator shift to state 34
-- On Tnullptr shift to state 48
-- On Tnull shift to state 49
-- On Tlong_Constr shift to state 50
-- On Tlong shift to state 38
-- On Tint_Constr shift to state 51
-- On Tint shift to state 39
-- On Tfloat_Constr shift to state 52
-- On Tfloat shift to state 40
-- On Tfalse shift to state 53
-- On Tenum shift to state 66
-- On Tdynamic_cast shift to state 54
-- On Tdouble_Constr shift to state 55
-- On Tdouble shift to state 41
-- On Tdecltype shift to state 45
-- On Tconst_cast shift to state 56
-- On Tconst shift to state 76
-- On Tclass shift to state 77
-- On Tchar_Constr shift to state 57
-- On Tchar shift to state 58
-- On Tbool_Constr shift to state 59
-- On Tbool shift to state 60
-- On TTilde shift to state 61
-- On TString shift to state 62
-- On TPlus shift to state 63
-- On TOPar shift to state 64
-- On TOCro_Lambda shift to state 78
-- On TMul shift to state 88
-- On TMinus shift to state 89
-- On TInt shift to state 90
-- On TInc shift to state 91
-- On TIdent_TypedefConstr shift to state 106
-- On TIdent_Typedef shift to state 20
-- On TIdent_TemplatenameInQualifier_BeforeTypedef shift to state 21
-- On TIdent_TemplatenameInQualifier shift to state 12
-- On TIdent_Templatename shift to state 108
-- On TIdent_MacroString shift to state 110
-- On TIdent_ClassnameInQualifier_BeforeTypedef shift to state 111
-- On TIdent_ClassnameInQualifier shift to state 112
-- On TIdent shift to state 113
-- On TFloat shift to state 116
-- On TDec shift to state 117
-- On TColCol_BeforeTypedef shift to state 118
-- On TColCol shift to state 128
-- On TChar shift to state 174
-- On TBang shift to state 175
-- On TAndLog shift to state 176
-- On TAnd shift to state 177
-- On LDots shift to state 178
-- On unqualified_id shift to state 179
-- On unary_op shift to state 180
-- On unary_expr shift to state 181
-- On type_spec shift to state 204
-- On type_name shift to state 182
-- On type_id shift to state 892
-- On type_cplusplus_id shift to state 183
-- On template_id shift to state 120
-- On template_argument shift to state 897
-- On string_elem shift to state 184
-- On spec_qualif_list shift to state 225
-- On simple_type_specifier shift to state 266
-- On shift_expr shift to state 217
-- On relational_expr shift to state 229
-- On qualified_id shift to state 191
-- On primary_expr shift to state 192
-- On primary_cplusplus_id shift to state 193
-- On postfix_expr shift to state 194
-- On pm_expr shift to state 219
-- On option(TColCol) shift to state 221
-- On operator_function_id shift to state 168
-- On new_expr shift to state 233
-- On nested_name_specifier2 shift to state 207
-- On nested_name_specifier shift to state 165
-- On multiplicative_expr shift to state 234
-- On logical_or_expr shift to state 246
-- On logical_and_expr shift to state 250
-- On literal shift to state 238
-- On lambda_introducer shift to state 239
-- On inclusive_or_expr shift to state 272
-- On id_expression shift to state 241
-- On exclusive_or_expr shift to state 273
-- On equality_expr shift to state 256
-- On enum_specifier shift to state 209
-- On enum_name_or_typedef_name_or_simple_class_name shift to state 123
-- On enum_head shift to state 210
-- On elaborated_type_specifier shift to state 274
-- On delete_expr shift to state 242
-- On decltype_specifier shift to state 243
-- On cv_qualif shift to state 275
-- On cpp_cast_operator shift to state 244
-- On conversion_function_id shift to state 169
-- On cond_expr shift to state 330
-- On class_specifier shift to state 277
-- On class_or_namespace_name_for_qualifier2 shift to state 124
-- On class_or_namespace_name_for_qualifier shift to state 170
-- On class_key shift to state 278
-- On class_head shift to state 301
-- On cast_operator_expr shift to state 261
-- On cast_expr shift to state 331
-- On cast_constructor_expr shift to state 263
-- On basic_type_2 shift to state 264
-- On assign_expr shift to state 898
-- On and_expr shift to state 334
-- On additive_expr shift to state 341
## Reductions:
-- On Tnew Tdelete
--   reduce production option(TColCol) ->

State 897:
## Known stack suffix:
## listc(template_argument) TComma template_argument
## LR(1) items:
listc(template_argument) -> listc(template_argument) TComma template_argument . [ TSup_Template TComma ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production listc(template_argument) -> listc(template_argument) TComma template_argument

State 898:
## Known stack suffix:
## assign_expr
## LR(1) items:
template_argument -> assign_expr . [ TSup_Template TComma ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production template_argument -> assign_expr

State 899:
## Known stack suffix:
## TIdent_TypedefConstr TOPar optl(listc(argument))
## LR(1) items:
cast_constructor_expr -> TIdent_TypedefConstr TOPar optl(listc(argument)) . TCPar [ TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtrOpStar TPtrOp TPtVirg TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMod TMinus TInfEq TInf TInc TEqEq TEq TEllipsis TDotStar TDot TDiv TDec TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAssign TAndLog TAnd RDots EOF ]
## Transitions:
-- On TCPar shift to state 900
## Reductions:

State 900:
## Known stack suffix:
## TIdent_TypedefConstr TOPar optl(listc(argument)) TCPar
## LR(1) items:
cast_constructor_expr -> TIdent_TypedefConstr TOPar optl(listc(argument)) TCPar . [ TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtrOpStar TPtrOp TPtVirg TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMod TMinus TInfEq TInf TInc TEqEq TEq TEllipsis TDotStar TDot TDiv TDec TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAssign TAndLog TAnd RDots EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production cast_constructor_expr -> TIdent_TypedefConstr TOPar optl(listc(argument)) TCPar

State 901:
## Known stack suffix:
## Twhile TOPar condition
## LR(1) items:
iteration -> Twhile TOPar condition . TCPar statement [ Twhile Twchar_t_Constr Twchar_t Tvolatile Tvoid Tvirtual Tusing Tunsigned Tunion Ttypeof Ttypename Ttypeid Ttypedef Ttry Ttrue Tthrow Tthread_local Tthis Tswitch Tstruct Tstatic_cast Tstatic Tsizeof Tsigned Tshort_Constr Tshort Treturn Trestrict Treinterpret_cast Tregister Toperator Tnullptr Tnull Tnew Tnamespace Tmutable Tlong_Constr Tlong Tint_Constr Tint Tinline Tif Tgoto Tfriend Tfor Tfloat_Constr Tfloat Tfalse Textern Tenum Telse Tdynamic_cast Tdouble_Constr Tdouble Tdo Tdelete Tdefault Tdecltype Tcontinue Tconstexpr Tconst_cast Tconst Tclass Tchar_Constr Tchar Tcase Tbreak Tbool_Constr Tbool Tauto Tasm TUndef TTilde TString TPtVirg TPlus TOPar TOCro_Lambda TOBrace TMul TMinus TInt TInclude TInc TIfdefelse TIfdefelif TIfdefVersion TIfdefMisc TIfdefBool TIfdef TIdent_TypedefConstr TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_MacroString TIdent_MacroStmt TIdent_MacroIterator TIdent_MacroDecl TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TIdent TFloat TEndif TEllipsis TDefine TDec TCppDirectiveOther TCommentNewline_DefineEndOfMacro TColCol_BeforeTypedef TColCol TChar TCBrace TBang TAndLog TAnd LDots EOF ]
## Transitions:
-- On TCPar shift to state 902
## Reductions:

State 902:
## Known stack suffix:
## Twhile TOPar condition TCPar
## LR(1) items:
iteration -> Twhile TOPar condition TCPar . statement [ Twhile Twchar_t_Constr Twchar_t Tvolatile Tvoid Tvirtual Tusing Tunsigned Tunion Ttypeof Ttypename Ttypeid Ttypedef Ttry Ttrue Tthrow Tthread_local Tthis Tswitch Tstruct Tstatic_cast Tstatic Tsizeof Tsigned Tshort_Constr Tshort Treturn Trestrict Treinterpret_cast Tregister Toperator Tnullptr Tnull Tnew Tnamespace Tmutable Tlong_Constr Tlong Tint_Constr Tint Tinline Tif Tgoto Tfriend Tfor Tfloat_Constr Tfloat Tfalse Textern Tenum Telse Tdynamic_cast Tdouble_Constr Tdouble Tdo Tdelete Tdefault Tdecltype Tcontinue Tconstexpr Tconst_cast Tconst Tclass Tchar_Constr Tchar Tcase Tbreak Tbool_Constr Tbool Tauto Tasm TUndef TTilde TString TPtVirg TPlus TOPar TOCro_Lambda TOBrace TMul TMinus TInt TInclude TInc TIfdefelse TIfdefelif TIfdefVersion TIfdefMisc TIfdefBool TIfdef TIdent_TypedefConstr TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_MacroString TIdent_MacroStmt TIdent_MacroIterator TIdent_MacroDecl TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TIdent TFloat TEndif TEllipsis TDefine TDec TCppDirectiveOther TCommentNewline_DefineEndOfMacro TColCol_BeforeTypedef TColCol TChar TCBrace TBang TAndLog TAnd LDots EOF ]
## Transitions:
-- On Twhile shift to state 94
-- On Twchar_t_Constr shift to state 14
-- On Twchar_t shift to state 1
-- On Tvolatile shift to state 2
-- On Tvoid shift to state 3
-- On Tvirtual shift to state 4
-- On Tusing shift to state 5
-- On Tunsigned shift to state 15
-- On Tunion shift to state 16
-- On Ttypeof shift to state 17
-- On Ttypename shift to state 19
-- On Ttypeid shift to state 23
-- On Ttypedef shift to state 96
-- On Ttry shift to state 431
-- On Ttrue shift to state 25
-- On Tthrow shift to state 47
-- On Tthread_local shift to state 97
-- On Tthis shift to state 26
-- On Tswitch shift to state 515
-- On Tstruct shift to state 27
-- On Tstatic_cast shift to state 28
-- On Tstatic shift to state 323
-- On Tsizeof shift to state 29
-- On Tsigned shift to state 30
-- On Tshort_Constr shift to state 31
-- On Tshort shift to state 32
-- On Treturn shift to state 537
-- On Trestrict shift to state 65
-- On Treinterpret_cast shift to state 33
-- On Tregister shift to state 99
-- On Toperator shift to state 34
-- On Tnullptr shift to state 48
-- On Tnull shift to state 49
-- On Tnamespace shift to state 540
-- On Tmutable shift to state 100
-- On Tlong_Constr shift to state 50
-- On Tlong shift to state 38
-- On Tint_Constr shift to state 51
-- On Tint shift to state 39
-- On Tinline shift to state 101
-- On Tif shift to state 545
-- On Tgoto shift to state 549
-- On Tfriend shift to state 102
-- On Tfor shift to state 553
-- On Tfloat_Constr shift to state 52
-- On Tfloat shift to state 40
-- On Tfalse shift to state 53
-- On Textern shift to state 103
-- On Tenum shift to state 66
-- On Tdynamic_cast shift to state 54
-- On Tdouble_Constr shift to state 55
-- On Tdouble shift to state 41
-- On Tdo shift to state 562
-- On Tdefault shift to state 563
-- On Tdecltype shift to state 45
-- On Tcontinue shift to state 565
-- On Tconstexpr shift to state 104
-- On Tconst_cast shift to state 56
-- On Tconst shift to state 76
-- On Tclass shift to state 77
-- On Tchar_Constr shift to state 57
-- On Tchar shift to state 58
-- On Tcase shift to state 566
-- On Tbreak shift to state 571
-- On Tbool_Constr shift to state 59
-- On Tbool shift to state 60
-- On Tauto shift to state 105
-- On Tasm shift to state 366
-- On TTilde shift to state 61
-- On TString shift to state 62
-- On TPlus shift to state 63
-- On TOPar shift to state 64
-- On TOCro_Lambda shift to state 78
-- On TOBrace shift to state 93
-- On TMul shift to state 88
-- On TMinus shift to state 89
-- On TInt shift to state 90
-- On TInc shift to state 91
-- On TIdent_TypedefConstr shift to state 106
-- On TIdent_Typedef shift to state 572
-- On TIdent_TemplatenameInQualifier_BeforeTypedef shift to state 21
-- On TIdent_TemplatenameInQualifier shift to state 12
-- On TIdent_Templatename shift to state 108
-- On TIdent_MacroString shift to state 110
-- On TIdent_MacroStmt shift to state 573
-- On TIdent_MacroIterator shift to state 574
-- On TIdent_MacroDecl shift to state 423
-- On TIdent_ClassnameInQualifier_BeforeTypedef shift to state 111
-- On TIdent_ClassnameInQualifier shift to state 112
-- On TIdent shift to state 578
-- On TFloat shift to state 116
-- On TEllipsis shift to state 580
-- On TDec shift to state 117
-- On TColCol_BeforeTypedef shift to state 118
-- On TColCol shift to state 128
-- On TChar shift to state 174
-- On TBang shift to state 175
-- On TAndLog shift to state 176
-- On TAnd shift to state 177
-- On LDots shift to state 178
-- On using_directive shift to state 581
-- On using_declaration shift to state 582
-- On unqualified_id shift to state 179
-- On unary_op shift to state 180
-- On unary_expr shift to state 181
-- On type_spec shift to state 314
-- On type_name shift to state 182
-- On type_cplusplus_id shift to state 183
-- On try_block shift to state 583
-- On template_id shift to state 120
-- On string_elem shift to state 184
-- On storage_class_spec shift to state 316
-- On statement shift to state 903
-- On simple_type_specifier shift to state 266
-- On simple_declaration shift to state 585
-- On shift_expr shift to state 217
-- On selection shift to state 586
-- On relational_expr shift to state 229
-- On qualified_id shift to state 191
-- On primary_expr shift to state 192
-- On primary_cplusplus_id shift to state 193
-- On postfix_expr shift to state 194
-- On pm_expr shift to state 219
-- On option(expr) shift to state 556
-- On option(TColCol) shift to state 221
-- On operator_function_id shift to state 168
-- On new_expr shift to state 233
-- On nested_name_specifier2 shift to state 207
-- On nested_name_specifier shift to state 165
-- On namespace_alias_definition shift to state 587
-- On multiplicative_expr shift to state 234
-- On logical_or_expr shift to state 246
-- On logical_and_expr shift to state 250
-- On literal shift to state 238
-- On lambda_introducer shift to state 239
-- On labeled shift to state 588
-- On jump shift to state 589
-- On iteration shift to state 591
-- On inclusive_or_expr shift to state 272
-- On ident shift to state 592
-- On id_expression shift to state 241
-- On function_spec shift to state 437
-- On function_definition shift to state 595
-- On expr_statement shift to state 596
-- On expr shift to state 597
-- On exclusive_or_expr shift to state 273
-- On equality_expr shift to state 256
-- On enum_specifier shift to state 209
-- On enum_name_or_typedef_name_or_simple_class_name shift to state 123
-- On enum_head shift to state 210
-- On elaborated_type_specifier shift to state 274
-- On delete_expr shift to state 242
-- On decltype_specifier shift to state 243
-- On declaration_statement shift to state 598
-- On decl_spec_seq shift to state 599
-- On decl_spec shift to state 473
-- On cv_qualif shift to state 475
-- On cpp_cast_operator shift to state 244
-- On conversion_function_id shift to state 169
-- On cond_expr shift to state 330
-- On compound shift to state 615
-- On class_specifier shift to state 277
-- On class_or_namespace_name_for_qualifier2 shift to state 124
-- On class_or_namespace_name_for_qualifier shift to state 170
-- On class_key shift to state 278
-- On class_head shift to state 301
-- On cast_operator_expr shift to state 261
-- On cast_expr shift to state 331
-- On cast_constructor_expr shift to state 263
-- On block_declaration shift to state 616
-- On basic_type_2 shift to state 264
-- On assign_expr shift to state 539
-- On asm_definition shift to state 617
-- On and_expr shift to state 334
-- On additive_expr shift to state 341
## Reductions:
-- On Tnew Tdelete
--   reduce production option(TColCol) ->
-- On TPtVirg
--   reduce production option(expr) ->

State 903:
## Known stack suffix:
## Twhile TOPar condition TCPar statement
## LR(1) items:
iteration -> Twhile TOPar condition TCPar statement . [ Twhile Twchar_t_Constr Twchar_t Tvolatile Tvoid Tvirtual Tusing Tunsigned Tunion Ttypeof Ttypename Ttypeid Ttypedef Ttry Ttrue Tthrow Tthread_local Tthis Tswitch Tstruct Tstatic_cast Tstatic Tsizeof Tsigned Tshort_Constr Tshort Treturn Trestrict Treinterpret_cast Tregister Toperator Tnullptr Tnull Tnew Tnamespace Tmutable Tlong_Constr Tlong Tint_Constr Tint Tinline Tif Tgoto Tfriend Tfor Tfloat_Constr Tfloat Tfalse Textern Tenum Telse Tdynamic_cast Tdouble_Constr Tdouble Tdo Tdelete Tdefault Tdecltype Tcontinue Tconstexpr Tconst_cast Tconst Tclass Tchar_Constr Tchar Tcase Tbreak Tbool_Constr Tbool Tauto Tasm TUndef TTilde TString TPtVirg TPlus TOPar TOCro_Lambda TOBrace TMul TMinus TInt TInclude TInc TIfdefelse TIfdefelif TIfdefVersion TIfdefMisc TIfdefBool TIfdef TIdent_TypedefConstr TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_MacroString TIdent_MacroStmt TIdent_MacroIterator TIdent_MacroDecl TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TIdent TFloat TEndif TEllipsis TDefine TDec TCppDirectiveOther TCommentNewline_DefineEndOfMacro TColCol_BeforeTypedef TColCol TChar TCBrace TBang TAndLog TAnd LDots EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production iteration -> Twhile TOPar condition TCPar statement

State 904:
## Known stack suffix:
## statement_cpp
## LR(1) items:
list(statement_cpp) -> statement_cpp . list(statement_cpp) [ TCBrace ]
## Transitions:
-- On Twhile shift to state 94
-- On Twchar_t_Constr shift to state 14
-- On Twchar_t shift to state 1
-- On Tvolatile shift to state 2
-- On Tvoid shift to state 3
-- On Tvirtual shift to state 4
-- On Tusing shift to state 5
-- On Tunsigned shift to state 15
-- On Tunion shift to state 16
-- On Ttypeof shift to state 17
-- On Ttypename shift to state 19
-- On Ttypeid shift to state 23
-- On Ttypedef shift to state 96
-- On Ttry shift to state 431
-- On Ttrue shift to state 25
-- On Tthrow shift to state 47
-- On Tthread_local shift to state 97
-- On Tthis shift to state 26
-- On Tswitch shift to state 515
-- On Tstruct shift to state 27
-- On Tstatic_cast shift to state 28
-- On Tstatic shift to state 323
-- On Tsizeof shift to state 29
-- On Tsigned shift to state 30
-- On Tshort_Constr shift to state 31
-- On Tshort shift to state 32
-- On Treturn shift to state 537
-- On Trestrict shift to state 65
-- On Treinterpret_cast shift to state 33
-- On Tregister shift to state 99
-- On Toperator shift to state 34
-- On Tnullptr shift to state 48
-- On Tnull shift to state 49
-- On Tnamespace shift to state 540
-- On Tmutable shift to state 100
-- On Tlong_Constr shift to state 50
-- On Tlong shift to state 38
-- On Tint_Constr shift to state 51
-- On Tint shift to state 39
-- On Tinline shift to state 101
-- On Tif shift to state 545
-- On Tgoto shift to state 549
-- On Tfriend shift to state 102
-- On Tfor shift to state 553
-- On Tfloat_Constr shift to state 52
-- On Tfloat shift to state 40
-- On Tfalse shift to state 53
-- On Textern shift to state 103
-- On Tenum shift to state 66
-- On Tdynamic_cast shift to state 54
-- On Tdouble_Constr shift to state 55
-- On Tdouble shift to state 41
-- On Tdo shift to state 562
-- On Tdefault shift to state 563
-- On Tdecltype shift to state 45
-- On Tcontinue shift to state 565
-- On Tconstexpr shift to state 104
-- On Tconst_cast shift to state 56
-- On Tconst shift to state 76
-- On Tclass shift to state 77
-- On Tchar_Constr shift to state 57
-- On Tchar shift to state 58
-- On Tcase shift to state 566
-- On Tbreak shift to state 571
-- On Tbool_Constr shift to state 59
-- On Tbool shift to state 60
-- On Tauto shift to state 105
-- On Tasm shift to state 366
-- On TUndef shift to state 415
-- On TTilde shift to state 61
-- On TString shift to state 62
-- On TPlus shift to state 63
-- On TOPar shift to state 64
-- On TOCro_Lambda shift to state 78
-- On TOBrace shift to state 93
-- On TMul shift to state 88
-- On TMinus shift to state 89
-- On TInt shift to state 90
-- On TInclude shift to state 416
-- On TInc shift to state 91
-- On TIfdefelse shift to state 417
-- On TIfdefelif shift to state 418
-- On TIfdefVersion shift to state 419
-- On TIfdefMisc shift to state 420
-- On TIfdefBool shift to state 421
-- On TIfdef shift to state 422
-- On TIdent_TypedefConstr shift to state 106
-- On TIdent_Typedef shift to state 572
-- On TIdent_TemplatenameInQualifier_BeforeTypedef shift to state 21
-- On TIdent_TemplatenameInQualifier shift to state 12
-- On TIdent_Templatename shift to state 108
-- On TIdent_MacroString shift to state 110
-- On TIdent_MacroStmt shift to state 573
-- On TIdent_MacroIterator shift to state 574
-- On TIdent_MacroDecl shift to state 423
-- On TIdent_ClassnameInQualifier_BeforeTypedef shift to state 111
-- On TIdent_ClassnameInQualifier shift to state 112
-- On TIdent shift to state 578
-- On TFloat shift to state 116
-- On TEndif shift to state 428
-- On TEllipsis shift to state 580
-- On TDefine shift to state 429
-- On TDec shift to state 117
-- On TCppDirectiveOther shift to state 691
-- On TColCol_BeforeTypedef shift to state 118
-- On TColCol shift to state 128
-- On TChar shift to state 174
-- On TBang shift to state 175
-- On TAndLog shift to state 176
-- On TAnd shift to state 177
-- On LDots shift to state 178
-- On using_directive shift to state 581
-- On using_declaration shift to state 582
-- On unqualified_id shift to state 179
-- On unary_op shift to state 180
-- On unary_expr shift to state 181
-- On type_spec shift to state 314
-- On type_name shift to state 182
-- On type_cplusplus_id shift to state 183
-- On try_block shift to state 583
-- On template_id shift to state 120
-- On string_elem shift to state 184
-- On storage_class_spec shift to state 316
-- On statement_cpp shift to state 904
-- On statement shift to state 905
-- On simple_type_specifier shift to state 266
-- On simple_declaration shift to state 585
-- On shift_expr shift to state 217
-- On selection shift to state 586
-- On relational_expr shift to state 229
-- On qualified_id shift to state 191
-- On primary_expr shift to state 192
-- On primary_cplusplus_id shift to state 193
-- On postfix_expr shift to state 194
-- On pm_expr shift to state 219
-- On option(expr) shift to state 556
-- On option(TColCol) shift to state 221
-- On operator_function_id shift to state 168
-- On new_expr shift to state 233
-- On nested_name_specifier2 shift to state 207
-- On nested_name_specifier shift to state 165
-- On namespace_alias_definition shift to state 587
-- On multiplicative_expr shift to state 234
-- On logical_or_expr shift to state 246
-- On logical_and_expr shift to state 250
-- On literal shift to state 238
-- On list(statement_cpp) shift to state 906
-- On lambda_introducer shift to state 239
-- On labeled shift to state 588
-- On jump shift to state 589
-- On iteration shift to state 591
-- On inclusive_or_expr shift to state 272
-- On ident shift to state 592
-- On id_expression shift to state 241
-- On function_spec shift to state 437
-- On function_definition shift to state 595
-- On expr_statement shift to state 596
-- On expr shift to state 597
-- On exclusive_or_expr shift to state 273
-- On equality_expr shift to state 256
-- On enum_specifier shift to state 209
-- On enum_name_or_typedef_name_or_simple_class_name shift to state 123
-- On enum_head shift to state 210
-- On elaborated_type_specifier shift to state 274
-- On delete_expr shift to state 242
-- On decltype_specifier shift to state 243
-- On declaration_statement shift to state 598
-- On decl_spec_seq shift to state 599
-- On decl_spec shift to state 473
-- On cv_qualif shift to state 475
-- On cpp_ifdef_directive shift to state 907
-- On cpp_directive shift to state 908
-- On cpp_cast_operator shift to state 244
-- On conversion_function_id shift to state 169
-- On cond_expr shift to state 330
-- On compound shift to state 615
-- On class_specifier shift to state 277
-- On class_or_namespace_name_for_qualifier2 shift to state 124
-- On class_or_namespace_name_for_qualifier shift to state 170
-- On class_key shift to state 278
-- On class_head shift to state 301
-- On cast_operator_expr shift to state 261
-- On cast_expr shift to state 331
-- On cast_constructor_expr shift to state 263
-- On block_declaration shift to state 616
-- On basic_type_2 shift to state 264
-- On assign_expr shift to state 539
-- On asm_definition shift to state 617
-- On and_expr shift to state 334
-- On additive_expr shift to state 341
## Reductions:
-- On TCBrace
--   reduce production list(statement_cpp) ->
-- On Tnew Tdelete
--   reduce production option(TColCol) ->
-- On TPtVirg
--   reduce production option(expr) ->

State 905:
## Known stack suffix:
## statement
## LR(1) items:
statement_cpp -> statement . [ Twhile Twchar_t_Constr Twchar_t Tvolatile Tvoid Tvirtual Tusing Tunsigned Tunion Ttypeof Ttypename Ttypeid Ttypedef Ttry Ttrue Tthrow Tthread_local Tthis Tswitch Tstruct Tstatic_cast Tstatic Tsizeof Tsigned Tshort_Constr Tshort Treturn Trestrict Treinterpret_cast Tregister Toperator Tnullptr Tnull Tnew Tnamespace Tmutable Tlong_Constr Tlong Tint_Constr Tint Tinline Tif Tgoto Tfriend Tfor Tfloat_Constr Tfloat Tfalse Textern Tenum Tdynamic_cast Tdouble_Constr Tdouble Tdo Tdelete Tdefault Tdecltype Tcontinue Tconstexpr Tconst_cast Tconst Tclass Tchar_Constr Tchar Tcase Tbreak Tbool_Constr Tbool Tauto Tasm TUndef TTilde TString TPtVirg TPlus TOPar TOCro_Lambda TOBrace TMul TMinus TInt TInclude TInc TIfdefelse TIfdefelif TIfdefVersion TIfdefMisc TIfdefBool TIfdef TIdent_TypedefConstr TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_MacroString TIdent_MacroStmt TIdent_MacroIterator TIdent_MacroDecl TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TIdent TFloat TEndif TEllipsis TDefine TDec TCppDirectiveOther TColCol_BeforeTypedef TColCol TChar TCBrace TBang TAndLog TAnd LDots ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production statement_cpp -> statement

State 906:
## Known stack suffix:
## statement_cpp list(statement_cpp)
## LR(1) items:
list(statement_cpp) -> statement_cpp list(statement_cpp) . [ TCBrace ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production list(statement_cpp) -> statement_cpp list(statement_cpp)

State 907:
## Known stack suffix:
## cpp_ifdef_directive
## LR(1) items:
statement_cpp -> cpp_ifdef_directive . [ Twhile Twchar_t_Constr Twchar_t Tvolatile Tvoid Tvirtual Tusing Tunsigned Tunion Ttypeof Ttypename Ttypeid Ttypedef Ttry Ttrue Tthrow Tthread_local Tthis Tswitch Tstruct Tstatic_cast Tstatic Tsizeof Tsigned Tshort_Constr Tshort Treturn Trestrict Treinterpret_cast Tregister Toperator Tnullptr Tnull Tnew Tnamespace Tmutable Tlong_Constr Tlong Tint_Constr Tint Tinline Tif Tgoto Tfriend Tfor Tfloat_Constr Tfloat Tfalse Textern Tenum Tdynamic_cast Tdouble_Constr Tdouble Tdo Tdelete Tdefault Tdecltype Tcontinue Tconstexpr Tconst_cast Tconst Tclass Tchar_Constr Tchar Tcase Tbreak Tbool_Constr Tbool Tauto Tasm TUndef TTilde TString TPtVirg TPlus TOPar TOCro_Lambda TOBrace TMul TMinus TInt TInclude TInc TIfdefelse TIfdefelif TIfdefVersion TIfdefMisc TIfdefBool TIfdef TIdent_TypedefConstr TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_MacroString TIdent_MacroStmt TIdent_MacroIterator TIdent_MacroDecl TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TIdent TFloat TEndif TEllipsis TDefine TDec TCppDirectiveOther TColCol_BeforeTypedef TColCol TChar TCBrace TBang TAndLog TAnd LDots ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production statement_cpp -> cpp_ifdef_directive

State 908:
## Known stack suffix:
## cpp_directive
## LR(1) items:
statement_cpp -> cpp_directive . [ Twhile Twchar_t_Constr Twchar_t Tvolatile Tvoid Tvirtual Tusing Tunsigned Tunion Ttypeof Ttypename Ttypeid Ttypedef Ttry Ttrue Tthrow Tthread_local Tthis Tswitch Tstruct Tstatic_cast Tstatic Tsizeof Tsigned Tshort_Constr Tshort Treturn Trestrict Treinterpret_cast Tregister Toperator Tnullptr Tnull Tnew Tnamespace Tmutable Tlong_Constr Tlong Tint_Constr Tint Tinline Tif Tgoto Tfriend Tfor Tfloat_Constr Tfloat Tfalse Textern Tenum Tdynamic_cast Tdouble_Constr Tdouble Tdo Tdelete Tdefault Tdecltype Tcontinue Tconstexpr Tconst_cast Tconst Tclass Tchar_Constr Tchar Tcase Tbreak Tbool_Constr Tbool Tauto Tasm TUndef TTilde TString TPtVirg TPlus TOPar TOCro_Lambda TOBrace TMul TMinus TInt TInclude TInc TIfdefelse TIfdefelif TIfdefVersion TIfdefMisc TIfdefBool TIfdef TIdent_TypedefConstr TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_MacroString TIdent_MacroStmt TIdent_MacroIterator TIdent_MacroDecl TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TIdent TFloat TEndif TEllipsis TDefine TDec TCppDirectiveOther TColCol_BeforeTypedef TColCol TChar TCBrace TBang TAndLog TAnd LDots ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production statement_cpp -> cpp_directive

State 909:
## Known stack suffix:
## TOBrace list(statement_cpp)
## LR(1) items:
compound -> TOBrace list(statement_cpp) . TCBrace [ Twhile Twchar_t_Constr Twchar_t Tvolatile Tvoid Tvirtual Tusing Tunsigned Tunion Ttypeof Ttypename Ttypeid Ttypedef Ttry Ttrue Tthrow Tthread_local Tthis Ttemplate Tswitch Tstruct Tstatic_cast Tstatic Tsizeof Tsigned Tshort_Constr Tshort Treturn Trestrict Treinterpret_cast Tregister Tpublic Tprotected Tprivate Toperator Tnullptr Tnull Tnew Tnamespace Tmutable Tlong_Constr Tlong Tint_Constr Tint Tinline Tif Tgoto Tfriend Tfor Tfloat_Constr Tfloat Tfalse Textern Texplicit Tenum Telse Tdynamic_cast Tdouble_Constr Tdouble Tdo Tdelete Tdefault Tdecltype Tcontinue Tconstexpr Tconst_cast Tconst Tclass Tchar_Constr Tchar Tcatch Tcase Tbreak Tbool_Constr Tbool Tauto Tasm TXor TWhy TUndef TTilde TSup_Template TSupEq TSup TString TShr TShl TPtrOpStar TPtrOp TPtVirg TPlus TOrLog TOr TOPar TOCro_Lambda TOCro TOBrace TNotEq TMul TMod TMinus TInt TInfEq TInf TInclude TInc TIfdefelse TIfdefelif TIfdefVersion TIfdefMisc TIfdefBool TIfdef TIdent_TypedefConstr TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_MacroString TIdent_MacroStmt TIdent_MacroIterator TIdent_MacroDecl TIdent_Constructor TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TIdent TFloat TEqEq TEq TEndif TEllipsis TDotStar TDot TDiv TDefine TDec TCppDirectiveOther TCommentNewline_DefineEndOfMacro TComma TColCol_BeforeTypedef TColCol TCol TChar TCPar_EOL TCPar TCCro TCBrace TBang TAssign TAndLog TAnd RDots LDots EOF ]
## Transitions:
-- On TCBrace shift to state 910
## Reductions:

State 910:
## Known stack suffix:
## TOBrace list(statement_cpp) TCBrace
## LR(1) items:
compound -> TOBrace list(statement_cpp) TCBrace . [ Twhile Twchar_t_Constr Twchar_t Tvolatile Tvoid Tvirtual Tusing Tunsigned Tunion Ttypeof Ttypename Ttypeid Ttypedef Ttry Ttrue Tthrow Tthread_local Tthis Ttemplate Tswitch Tstruct Tstatic_cast Tstatic Tsizeof Tsigned Tshort_Constr Tshort Treturn Trestrict Treinterpret_cast Tregister Tpublic Tprotected Tprivate Toperator Tnullptr Tnull Tnew Tnamespace Tmutable Tlong_Constr Tlong Tint_Constr Tint Tinline Tif Tgoto Tfriend Tfor Tfloat_Constr Tfloat Tfalse Textern Texplicit Tenum Telse Tdynamic_cast Tdouble_Constr Tdouble Tdo Tdelete Tdefault Tdecltype Tcontinue Tconstexpr Tconst_cast Tconst Tclass Tchar_Constr Tchar Tcatch Tcase Tbreak Tbool_Constr Tbool Tauto Tasm TXor TWhy TUndef TTilde TSup_Template TSupEq TSup TString TShr TShl TPtrOpStar TPtrOp TPtVirg TPlus TOrLog TOr TOPar TOCro_Lambda TOCro TOBrace TNotEq TMul TMod TMinus TInt TInfEq TInf TInclude TInc TIfdefelse TIfdefelif TIfdefVersion TIfdefMisc TIfdefBool TIfdef TIdent_TypedefConstr TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_MacroString TIdent_MacroStmt TIdent_MacroIterator TIdent_MacroDecl TIdent_Constructor TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TIdent TFloat TEqEq TEq TEndif TEllipsis TDotStar TDot TDiv TDefine TDec TCppDirectiveOther TCommentNewline_DefineEndOfMacro TComma TColCol_BeforeTypedef TColCol TCol TChar TCPar_EOL TCPar TCCro TCBrace TBang TAssign TAndLog TAnd RDots LDots EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production compound -> TOBrace list(statement_cpp) TCBrace

State 911:
## Known stack suffix:
## TOPar type_id
## LR(1) items:
postfix_expr -> TOPar type_id . TCPar braced_init_list [ TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtrOpStar TPtrOp TPtVirg TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMod TMinus TInfEq TInf TInc TEqEq TEq TEllipsis TDotStar TDot TDiv TDec TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAssign TAndLog TAnd RDots EOF ]
## Transitions:
-- On TCPar shift to state 912
## Reductions:

State 912:
## Known stack suffix:
## TOPar type_id TCPar
## LR(1) items:
postfix_expr -> TOPar type_id TCPar . braced_init_list [ TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtrOpStar TPtrOp TPtVirg TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMod TMinus TInfEq TInf TInc TEqEq TEq TEllipsis TDotStar TDot TDiv TDec TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAssign TAndLog TAnd RDots EOF ]
## Transitions:
-- On TOBrace shift to state 114
-- On braced_init_list shift to state 913
## Reductions:

State 913:
## Known stack suffix:
## TOPar type_id TCPar braced_init_list
## LR(1) items:
postfix_expr -> TOPar type_id TCPar braced_init_list . [ TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtrOpStar TPtrOp TPtVirg TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMod TMinus TInfEq TInf TInc TEqEq TEq TEllipsis TDotStar TDot TDiv TDec TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAssign TAndLog TAnd RDots EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production postfix_expr -> TOPar type_id TCPar braced_init_list

State 914:
## Known stack suffix:
## TOPar expr
## LR(1) items:
expr -> expr . TComma assign_expr [ TComma TCPar ]
primary_expr -> TOPar expr . TCPar [ TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtrOpStar TPtrOp TPtVirg TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMod TMinus TInfEq TInf TInc TEqEq TEq TEllipsis TDotStar TDot TDiv TDec TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAssign TAndLog TAnd RDots EOF ]
## Transitions:
-- On TComma shift to state 518
-- On TCPar shift to state 915
## Reductions:

State 915:
## Known stack suffix:
## TOPar expr TCPar
## LR(1) items:
primary_expr -> TOPar expr TCPar . [ TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtrOpStar TPtrOp TPtVirg TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMod TMinus TInfEq TInf TInc TEqEq TEq TEllipsis TDotStar TDot TDiv TDec TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAssign TAndLog TAnd RDots EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production primary_expr -> TOPar expr TCPar

State 916:
## Known stack suffix:
## TOPar compound
## LR(1) items:
primary_expr -> TOPar compound . TCPar [ TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtrOpStar TPtrOp TPtVirg TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMod TMinus TInfEq TInf TInc TEqEq TEq TEllipsis TDotStar TDot TDiv TDec TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAssign TAndLog TAnd RDots EOF ]
## Transitions:
-- On TCPar shift to state 917
## Reductions:

State 917:
## Known stack suffix:
## TOPar compound TCPar
## LR(1) items:
primary_expr -> TOPar compound TCPar . [ TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtrOpStar TPtrOp TPtVirg TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMod TMinus TInfEq TInf TInc TEqEq TEq TEllipsis TDotStar TDot TDiv TDec TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAssign TAndLog TAnd RDots EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production primary_expr -> TOPar compound TCPar

State 918:
## Known stack suffix:
## TInc unary_expr
## LR(1) items:
unary_expr -> TInc unary_expr . [ TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtrOpStar TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TEq TEllipsis TDotStar TDiv TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAssign TAndLog TAnd RDots EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production unary_expr -> TInc unary_expr

State 919:
## Known stack suffix:
## ident TEq assign_expr
## LR(1) items:
capture -> ident TEq assign_expr . [ TEllipsis TComma TCCro ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production capture -> ident TEq assign_expr

State 920:
## Known stack suffix:
## capture_list
## LR(1) items:
capture_list -> capture_list . TComma capture [ TComma TCCro ]
capture_list -> capture_list . TComma capture TEllipsis [ TComma TCCro ]
lambda_capture -> capture_list . [ TCCro ]
## Transitions:
-- On TComma shift to state 921
## Reductions:
-- On TCCro
--   reduce production lambda_capture -> capture_list

State 921:
## Known stack suffix:
## capture_list TComma
## LR(1) items:
capture_list -> capture_list TComma . capture [ TComma TCCro ]
capture_list -> capture_list TComma . capture TEllipsis [ TComma TCCro ]
## Transitions:
-- On Tthis shift to state 79
-- On TIdent_Typedef shift to state 68
-- On TIdent shift to state 69
-- On TAnd shift to state 922
-- On ident shift to state 86
-- On capture shift to state 923
## Reductions:

State 922:
## Known stack suffix:
## TAnd
## LR(1) items:
capture -> TAnd . ident [ TEllipsis TComma TCCro ]
## Transitions:
-- On TIdent_Typedef shift to state 68
-- On TIdent shift to state 69
-- On ident shift to state 83
## Reductions:

State 923:
## Known stack suffix:
## capture_list TComma capture
## LR(1) items:
capture_list -> capture_list TComma capture . [ TComma TCCro ]
capture_list -> capture_list TComma capture . TEllipsis [ TComma TCCro ]
## Transitions:
-- On TEllipsis shift to state 924
## Reductions:
-- On TComma TCCro
--   reduce production capture_list -> capture_list TComma capture

State 924:
## Known stack suffix:
## capture_list TComma capture TEllipsis
## LR(1) items:
capture_list -> capture_list TComma capture TEllipsis . [ TComma TCCro ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production capture_list -> capture_list TComma capture TEllipsis

State 925:
## Known stack suffix:
## capture_default
## LR(1) items:
lambda_capture -> capture_default . [ TCCro ]
lambda_capture -> capture_default . TComma capture_list [ TCCro ]
## Transitions:
-- On TComma shift to state 926
## Reductions:
-- On TCCro
--   reduce production lambda_capture -> capture_default

State 926:
## Known stack suffix:
## capture_default TComma
## LR(1) items:
lambda_capture -> capture_default TComma . capture_list [ TCCro ]
## Transitions:
-- On Tthis shift to state 79
-- On TIdent_Typedef shift to state 68
-- On TIdent shift to state 69
-- On TAnd shift to state 922
-- On ident shift to state 86
-- On capture_list shift to state 927
-- On capture shift to state 928
## Reductions:

State 927:
## Known stack suffix:
## capture_default TComma capture_list
## LR(1) items:
capture_list -> capture_list . TComma capture [ TComma TCCro ]
capture_list -> capture_list . TComma capture TEllipsis [ TComma TCCro ]
lambda_capture -> capture_default TComma capture_list . [ TCCro ]
## Transitions:
-- On TComma shift to state 921
## Reductions:
-- On TCCro
--   reduce production lambda_capture -> capture_default TComma capture_list

State 928:
## Known stack suffix:
## capture
## LR(1) items:
capture_list -> capture . [ TComma TCCro ]
capture_list -> capture . TEllipsis [ TComma TCCro ]
## Transitions:
-- On TEllipsis shift to state 929
## Reductions:
-- On TComma TCCro
--   reduce production capture_list -> capture

State 929:
## Known stack suffix:
## capture TEllipsis
## LR(1) items:
capture_list -> capture TEllipsis . [ TComma TCCro ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production capture_list -> capture TEllipsis

State 930:
## Known stack suffix:
## TOPar type_id
## LR(1) items:
cast_expr -> TOPar type_id . TCPar cast_expr [ TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtrOpStar TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TEq TEllipsis TDotStar TDiv TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAssign TAndLog TAnd RDots EOF ]
cast_expr -> TOPar type_id . TIdent TCPar [ TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtrOpStar TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TEq TEllipsis TDotStar TDiv TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAssign TAndLog TAnd RDots EOF ]
postfix_expr -> TOPar type_id . TCPar braced_init_list [ TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtrOpStar TPtrOp TPtVirg TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMod TMinus TInfEq TInf TInc TEqEq TEq TEllipsis TDotStar TDot TDiv TDec TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAssign TAndLog TAnd RDots EOF ]
## Transitions:
-- On TIdent shift to state 931
-- On TCPar shift to state 933
## Reductions:

State 931:
## Known stack suffix:
## TOPar type_id TIdent
## LR(1) items:
cast_expr -> TOPar type_id TIdent . TCPar [ TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtrOpStar TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TEq TEllipsis TDotStar TDiv TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAssign TAndLog TAnd RDots EOF ]
## Transitions:
-- On TCPar shift to state 932
## Reductions:

State 932:
## Known stack suffix:
## TOPar type_id TIdent TCPar
## LR(1) items:
cast_expr -> TOPar type_id TIdent TCPar . [ TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtrOpStar TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TEq TEllipsis TDotStar TDiv TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAssign TAndLog TAnd RDots EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production cast_expr -> TOPar type_id TIdent TCPar

State 933:
## Known stack suffix:
## TOPar type_id TCPar
## LR(1) items:
cast_expr -> TOPar type_id TCPar . cast_expr [ TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtrOpStar TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TEq TEllipsis TDotStar TDiv TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAssign TAndLog TAnd RDots EOF ]
postfix_expr -> TOPar type_id TCPar . braced_init_list [ TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtrOpStar TPtrOp TPtVirg TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMod TMinus TInfEq TInf TInc TEqEq TEq TEllipsis TDotStar TDot TDiv TDec TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAssign TAndLog TAnd RDots EOF ]
## Transitions:
-- On Twchar_t_Constr shift to state 14
-- On Twchar_t shift to state 1
-- On Tvoid shift to state 3
-- On Tunsigned shift to state 15
-- On Ttypeof shift to state 17
-- On Ttypeid shift to state 23
-- On Ttrue shift to state 25
-- On Tthis shift to state 26
-- On Tstatic_cast shift to state 28
-- On Tsizeof shift to state 29
-- On Tsigned shift to state 30
-- On Tshort_Constr shift to state 31
-- On Tshort shift to state 32
-- On Treinterpret_cast shift to state 33
-- On Toperator shift to state 34
-- On Tnullptr shift to state 48
-- On Tnull shift to state 49
-- On Tlong_Constr shift to state 50
-- On Tlong shift to state 38
-- On Tint_Constr shift to state 51
-- On Tint shift to state 39
-- On Tfloat_Constr shift to state 52
-- On Tfloat shift to state 40
-- On Tfalse shift to state 53
-- On Tdynamic_cast shift to state 54
-- On Tdouble_Constr shift to state 55
-- On Tdouble shift to state 41
-- On Tdecltype shift to state 45
-- On Tconst_cast shift to state 56
-- On Tchar_Constr shift to state 57
-- On Tchar shift to state 58
-- On Tbool_Constr shift to state 59
-- On Tbool shift to state 60
-- On TTilde shift to state 61
-- On TString shift to state 62
-- On TPlus shift to state 63
-- On TOPar shift to state 64
-- On TOCro_Lambda shift to state 78
-- On TOBrace shift to state 114
-- On TMul shift to state 88
-- On TMinus shift to state 89
-- On TInt shift to state 90
-- On TInc shift to state 91
-- On TIdent_TypedefConstr shift to state 106
-- On TIdent_Typedef shift to state 20
-- On TIdent_TemplatenameInQualifier_BeforeTypedef shift to state 21
-- On TIdent_TemplatenameInQualifier shift to state 12
-- On TIdent_Templatename shift to state 108
-- On TIdent_MacroString shift to state 110
-- On TIdent_ClassnameInQualifier_BeforeTypedef shift to state 111
-- On TIdent_ClassnameInQualifier shift to state 112
-- On TIdent shift to state 113
-- On TFloat shift to state 116
-- On TDec shift to state 117
-- On TColCol_BeforeTypedef shift to state 118
-- On TColCol shift to state 128
-- On TChar shift to state 174
-- On TBang shift to state 175
-- On TAndLog shift to state 176
-- On TAnd shift to state 177
-- On LDots shift to state 178
-- On unqualified_id shift to state 179
-- On unary_op shift to state 180
-- On unary_expr shift to state 181
-- On type_name shift to state 182
-- On type_cplusplus_id shift to state 183
-- On template_id shift to state 120
-- On string_elem shift to state 184
-- On simple_type_specifier shift to state 189
-- On qualified_id shift to state 191
-- On primary_expr shift to state 192
-- On primary_cplusplus_id shift to state 193
-- On postfix_expr shift to state 194
-- On option(TColCol) shift to state 221
-- On operator_function_id shift to state 168
-- On new_expr shift to state 233
-- On nested_name_specifier2 shift to state 207
-- On nested_name_specifier shift to state 165
-- On literal shift to state 238
-- On lambda_introducer shift to state 239
-- On id_expression shift to state 241
-- On enum_name_or_typedef_name_or_simple_class_name shift to state 123
-- On delete_expr shift to state 242
-- On decltype_specifier shift to state 243
-- On cpp_cast_operator shift to state 244
-- On conversion_function_id shift to state 169
-- On class_or_namespace_name_for_qualifier2 shift to state 124
-- On class_or_namespace_name_for_qualifier shift to state 170
-- On cast_operator_expr shift to state 261
-- On cast_expr shift to state 934
-- On cast_constructor_expr shift to state 263
-- On braced_init_list shift to state 913
-- On basic_type_2 shift to state 264
## Reductions:
-- On Tnew Tdelete
--   reduce production option(TColCol) ->

State 934:
## Known stack suffix:
## TOPar type_id TCPar cast_expr
## LR(1) items:
cast_expr -> TOPar type_id TCPar cast_expr . [ TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtrOpStar TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TEq TEllipsis TDotStar TDiv TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAssign TAndLog TAnd RDots EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production cast_expr -> TOPar type_id TCPar cast_expr

State 935:
## Known stack suffix:
## Tthrow option(assign_expr)
## LR(1) items:
assign_expr -> Tthrow option(assign_expr) . [ TSup_Template TPtVirg TEllipsis TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace RDots EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production assign_expr -> Tthrow option(assign_expr)

State 936:
## Known stack suffix:
## assign_expr
## LR(1) items:
option(assign_expr) -> assign_expr . [ TSup_Template TPtVirg TEllipsis TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace RDots EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production option(assign_expr) -> assign_expr

State 937:
## Known stack suffix:
## Tdecltype TOPar TIdent_Typedef
## LR(1) items:
decltype_specifier -> Tdecltype TOPar TIdent_Typedef . TCPar [ Twchar_t Tvolatile Tvoid Tvirtual Tunsigned Tunion Ttypeof Ttypename Ttypedef Tthread_local Tstruct Tstatic Tsigned Tshort Trestrict Tregister Toperator Tmutable Tlong Tint Tinline Tfriend Tfloat Textern Tenum Tdouble Tdecltype Tconstexpr Tconst Tclass Tchar Tbool Tauto Tasm TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtrOpStar TPtrOp TPtVirg TPlus TOrLog TOr TOPar_CplusplusInit TOPar TOCro TOBrace TNotEq TMul TMod TMinus TInfEq TInf TInc TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TIdent TEqEq TEq TEllipsis TDotStar TDot TDiv TDec TCommentNewline_DefineEndOfMacro TComma TColCol_BeforeTypedef TColCol TCol TCPar_EOL TCPar TCCro TCBrace TAssign TAndLog TAnd RDots EOF ]
enum_name_or_typedef_name_or_simple_class_name -> TIdent_Typedef . [ TOBrace ]
## Transitions:
-- On TCPar shift to state 938
## Reductions:
-- On TOBrace
--   reduce production enum_name_or_typedef_name_or_simple_class_name -> TIdent_Typedef

State 938:
## Known stack suffix:
## Tdecltype TOPar TIdent_Typedef TCPar
## LR(1) items:
decltype_specifier -> Tdecltype TOPar TIdent_Typedef TCPar . [ Twchar_t Tvolatile Tvoid Tvirtual Tunsigned Tunion Ttypeof Ttypename Ttypedef Tthread_local Tstruct Tstatic Tsigned Tshort Trestrict Tregister Toperator Tmutable Tlong Tint Tinline Tfriend Tfloat Textern Tenum Tdouble Tdecltype Tconstexpr Tconst Tclass Tchar Tbool Tauto Tasm TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtrOpStar TPtrOp TPtVirg TPlus TOrLog TOr TOPar_CplusplusInit TOPar TOCro TOBrace TNotEq TMul TMod TMinus TInfEq TInf TInc TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TIdent TEqEq TEq TEllipsis TDotStar TDot TDiv TDec TCommentNewline_DefineEndOfMacro TComma TColCol_BeforeTypedef TColCol TCol TCPar_EOL TCPar TCCro TCBrace TAssign TAndLog TAnd RDots EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production decltype_specifier -> Tdecltype TOPar TIdent_Typedef TCPar

State 939:
## Known stack suffix:
## Tdecltype TOPar expr
## LR(1) items:
decltype_specifier -> Tdecltype TOPar expr . TCPar [ Twchar_t Tvolatile Tvoid Tvirtual Tunsigned Tunion Ttypeof Ttypename Ttypedef Tthread_local Tstruct Tstatic Tsigned Tshort Trestrict Tregister Toperator Tmutable Tlong Tint Tinline Tfriend Tfloat Textern Tenum Tdouble Tdecltype Tconstexpr Tconst Tclass Tchar Tbool Tauto Tasm TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtrOpStar TPtrOp TPtVirg TPlus TOrLog TOr TOPar_CplusplusInit TOPar TOCro TOBrace TNotEq TMul TMod TMinus TInfEq TInf TInc TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TIdent TEqEq TEq TEllipsis TDotStar TDot TDiv TDec TCommentNewline_DefineEndOfMacro TComma TColCol_BeforeTypedef TColCol TCol TCPar_EOL TCPar TCCro TCBrace TAssign TAndLog TAnd RDots EOF ]
expr -> expr . TComma assign_expr [ TComma TCPar ]
## Transitions:
-- On TComma shift to state 518
-- On TCPar shift to state 940
## Reductions:

State 940:
## Known stack suffix:
## Tdecltype TOPar expr TCPar
## LR(1) items:
decltype_specifier -> Tdecltype TOPar expr TCPar . [ Twchar_t Tvolatile Tvoid Tvirtual Tunsigned Tunion Ttypeof Ttypename Ttypedef Tthread_local Tstruct Tstatic Tsigned Tshort Trestrict Tregister Toperator Tmutable Tlong Tint Tinline Tfriend Tfloat Textern Tenum Tdouble Tdecltype Tconstexpr Tconst Tclass Tchar Tbool Tauto Tasm TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtrOpStar TPtrOp TPtVirg TPlus TOrLog TOr TOPar_CplusplusInit TOPar TOCro TOBrace TNotEq TMul TMod TMinus TInfEq TInf TInc TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TIdent TEqEq TEq TEllipsis TDotStar TDot TDiv TDec TCommentNewline_DefineEndOfMacro TComma TColCol_BeforeTypedef TColCol TCol TCPar_EOL TCPar TCCro TCBrace TAssign TAndLog TAnd RDots EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production decltype_specifier -> Tdecltype TOPar expr TCPar

State 941:
## Known stack suffix:
## simple_type_specifier
## LR(1) items:
conversion_type_id -> simple_type_specifier . conversion_declarator [ Tasm TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtrOpStar TPtrOp TPtVirg TPlus TOrLog TOr TOPar_CplusplusInit TOPar TOCro TOBrace TNotEq TMul TMod TMinus TInfEq TInf TInc TEqEq TEq TEllipsis TDotStar TDot TDiv TDec TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAssign TAndLog TAnd RDots EOF ]
conversion_type_id -> simple_type_specifier . [ Tasm TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtrOpStar TPtrOp TPtVirg TPlus TOrLog TOr TOPar_CplusplusInit TOPar TOCro TOBrace TNotEq TMul TMod TMinus TInfEq TInf TInc TEqEq TEq TEllipsis TDotStar TDot TDiv TDec TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAssign TAndLog TAnd RDots EOF ]
## Transitions:
-- On TMul shift to state 838
-- On TAndLog shift to state 839
-- On TAnd shift to state 840
-- On ptr_operator shift to state 942
-- On conversion_declarator shift to state 944
## Reductions:
-- On Tasm TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtrOpStar TPtrOp TPtVirg TPlus TOrLog TOr TOPar_CplusplusInit TOPar TOCro TOBrace TNotEq TMod TMinus TInfEq TInf TInc TEqEq TEq TEllipsis TDotStar TDot TDiv TDec TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAssign RDots EOF
--   reduce production conversion_type_id -> simple_type_specifier

State 942:
## Known stack suffix:
## ptr_operator
## LR(1) items:
conversion_declarator -> ptr_operator . conversion_declarator [ Tasm TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtrOpStar TPtrOp TPtVirg TPlus TOrLog TOr TOPar_CplusplusInit TOPar TOCro TOBrace TNotEq TMul TMod TMinus TInfEq TInf TInc TEqEq TEq TEllipsis TDotStar TDot TDiv TDec TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAssign TAndLog TAnd RDots EOF ]
conversion_declarator -> ptr_operator . [ Tasm TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtrOpStar TPtrOp TPtVirg TPlus TOrLog TOr TOPar_CplusplusInit TOPar TOCro TOBrace TNotEq TMul TMod TMinus TInfEq TInf TInc TEqEq TEq TEllipsis TDotStar TDot TDiv TDec TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAssign TAndLog TAnd RDots EOF ]
## Transitions:
-- On TMul shift to state 838
-- On TAndLog shift to state 839
-- On TAnd shift to state 840
-- On ptr_operator shift to state 942
-- On conversion_declarator shift to state 943
## Reductions:
-- On Tasm TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtrOpStar TPtrOp TPtVirg TPlus TOrLog TOr TOPar_CplusplusInit TOPar TOCro TOBrace TNotEq TMod TMinus TInfEq TInf TInc TEqEq TEq TEllipsis TDotStar TDot TDiv TDec TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAssign RDots EOF
--   reduce production conversion_declarator -> ptr_operator

State 943:
## Known stack suffix:
## ptr_operator conversion_declarator
## LR(1) items:
conversion_declarator -> ptr_operator conversion_declarator . [ Tasm TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtrOpStar TPtrOp TPtVirg TPlus TOrLog TOr TOPar_CplusplusInit TOPar TOCro TOBrace TNotEq TMul TMod TMinus TInfEq TInf TInc TEqEq TEq TEllipsis TDotStar TDot TDiv TDec TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAssign TAndLog TAnd RDots EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production conversion_declarator -> ptr_operator conversion_declarator

State 944:
## Known stack suffix:
## simple_type_specifier conversion_declarator
## LR(1) items:
conversion_type_id -> simple_type_specifier conversion_declarator . [ Tasm TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtrOpStar TPtrOp TPtVirg TPlus TOrLog TOr TOPar_CplusplusInit TOPar TOCro TOBrace TNotEq TMul TMod TMinus TInfEq TInf TInc TEqEq TEq TEllipsis TDotStar TDot TDiv TDec TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAssign TAndLog TAnd RDots EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production conversion_type_id -> simple_type_specifier conversion_declarator

State 945:
## Known stack suffix:
## Toperator conversion_type_id
## LR(1) items:
conversion_function_id -> Toperator conversion_type_id . [ Tasm TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtrOpStar TPtrOp TPtVirg TPlus TOrLog TOr TOPar_CplusplusInit TOPar TOCro TOBrace TNotEq TMul TMod TMinus TInfEq TInf TInc TEqEq TEq TEllipsis TDotStar TDot TDiv TDec TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAssign TAndLog TAnd RDots EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production conversion_function_id -> Toperator conversion_type_id

State 946:
## Known stack suffix:
## Tsizeof TOPar
## LR(1) items:
postfix_expr -> TOPar . type_id TCPar braced_init_list [ TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtrOpStar TPtrOp TPtVirg TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMod TMinus TInfEq TInf TInc TEqEq TEq TEllipsis TDotStar TDot TDiv TDec TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAssign TAndLog TAnd RDots EOF ]
primary_expr -> TOPar . expr TCPar [ TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtrOpStar TPtrOp TPtVirg TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMod TMinus TInfEq TInf TInc TEqEq TEq TEllipsis TDotStar TDot TDiv TDec TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAssign TAndLog TAnd RDots EOF ]
primary_expr -> TOPar . compound TCPar [ TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtrOpStar TPtrOp TPtVirg TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMod TMinus TInfEq TInf TInc TEqEq TEq TEllipsis TDotStar TDot TDiv TDec TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAssign TAndLog TAnd RDots EOF ]
unary_expr -> Tsizeof TOPar . type_id TCPar [ TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtrOpStar TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TEq TEllipsis TDotStar TDiv TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAssign TAndLog TAnd RDots EOF ]
## Transitions:
-- On Twchar_t_Constr shift to state 14
-- On Twchar_t shift to state 1
-- On Tvolatile shift to state 2
-- On Tvoid shift to state 3
-- On Tunsigned shift to state 15
-- On Tunion shift to state 16
-- On Ttypeof shift to state 17
-- On Ttypename shift to state 19
-- On Ttypeid shift to state 23
-- On Ttrue shift to state 25
-- On Tthrow shift to state 47
-- On Tthis shift to state 26
-- On Tstruct shift to state 27
-- On Tstatic_cast shift to state 28
-- On Tsizeof shift to state 29
-- On Tsigned shift to state 30
-- On Tshort_Constr shift to state 31
-- On Tshort shift to state 32
-- On Trestrict shift to state 65
-- On Treinterpret_cast shift to state 33
-- On Toperator shift to state 34
-- On Tnullptr shift to state 48
-- On Tnull shift to state 49
-- On Tlong_Constr shift to state 50
-- On Tlong shift to state 38
-- On Tint_Constr shift to state 51
-- On Tint shift to state 39
-- On Tfloat_Constr shift to state 52
-- On Tfloat shift to state 40
-- On Tfalse shift to state 53
-- On Tenum shift to state 66
-- On Tdynamic_cast shift to state 54
-- On Tdouble_Constr shift to state 55
-- On Tdouble shift to state 41
-- On Tdecltype shift to state 45
-- On Tconst_cast shift to state 56
-- On Tconst shift to state 76
-- On Tclass shift to state 77
-- On Tchar_Constr shift to state 57
-- On Tchar shift to state 58
-- On Tbool_Constr shift to state 59
-- On Tbool shift to state 60
-- On TTilde shift to state 61
-- On TString shift to state 62
-- On TPlus shift to state 63
-- On TOPar shift to state 64
-- On TOCro_Lambda shift to state 78
-- On TOBrace shift to state 93
-- On TMul shift to state 88
-- On TMinus shift to state 89
-- On TInt shift to state 90
-- On TInc shift to state 91
-- On TIdent_TypedefConstr shift to state 106
-- On TIdent_Typedef shift to state 20
-- On TIdent_TemplatenameInQualifier_BeforeTypedef shift to state 21
-- On TIdent_TemplatenameInQualifier shift to state 12
-- On TIdent_Templatename shift to state 108
-- On TIdent_MacroString shift to state 110
-- On TIdent_ClassnameInQualifier_BeforeTypedef shift to state 111
-- On TIdent_ClassnameInQualifier shift to state 112
-- On TIdent shift to state 113
-- On TFloat shift to state 116
-- On TDec shift to state 117
-- On TColCol_BeforeTypedef shift to state 118
-- On TColCol shift to state 128
-- On TChar shift to state 174
-- On TBang shift to state 175
-- On TAndLog shift to state 176
-- On TAnd shift to state 177
-- On LDots shift to state 178
-- On unqualified_id shift to state 179
-- On unary_op shift to state 180
-- On unary_expr shift to state 181
-- On type_spec shift to state 204
-- On type_name shift to state 182
-- On type_id shift to state 947
-- On type_cplusplus_id shift to state 183
-- On template_id shift to state 120
-- On string_elem shift to state 184
-- On spec_qualif_list shift to state 225
-- On simple_type_specifier shift to state 266
-- On shift_expr shift to state 217
-- On relational_expr shift to state 229
-- On qualified_id shift to state 191
-- On primary_expr shift to state 192
-- On primary_cplusplus_id shift to state 193
-- On postfix_expr shift to state 194
-- On pm_expr shift to state 219
-- On option(TColCol) shift to state 221
-- On operator_function_id shift to state 168
-- On new_expr shift to state 233
-- On nested_name_specifier2 shift to state 207
-- On nested_name_specifier shift to state 165
-- On multiplicative_expr shift to state 234
-- On logical_or_expr shift to state 246
-- On logical_and_expr shift to state 250
-- On literal shift to state 238
-- On lambda_introducer shift to state 239
-- On inclusive_or_expr shift to state 272
-- On id_expression shift to state 241
-- On expr shift to state 914
-- On exclusive_or_expr shift to state 273
-- On equality_expr shift to state 256
-- On enum_specifier shift to state 209
-- On enum_name_or_typedef_name_or_simple_class_name shift to state 123
-- On enum_head shift to state 210
-- On elaborated_type_specifier shift to state 274
-- On delete_expr shift to state 242
-- On decltype_specifier shift to state 243
-- On cv_qualif shift to state 275
-- On cpp_cast_operator shift to state 244
-- On conversion_function_id shift to state 169
-- On cond_expr shift to state 330
-- On compound shift to state 916
-- On class_specifier shift to state 277
-- On class_or_namespace_name_for_qualifier2 shift to state 124
-- On class_or_namespace_name_for_qualifier shift to state 170
-- On class_key shift to state 278
-- On class_head shift to state 301
-- On cast_operator_expr shift to state 261
-- On cast_expr shift to state 331
-- On cast_constructor_expr shift to state 263
-- On basic_type_2 shift to state 264
-- On assign_expr shift to state 539
-- On and_expr shift to state 334
-- On additive_expr shift to state 341
## Reductions:
-- On Tnew Tdelete
--   reduce production option(TColCol) ->

State 947:
## Known stack suffix:
## Tsizeof TOPar type_id
## LR(1) items:
postfix_expr -> TOPar type_id . TCPar braced_init_list [ TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtrOpStar TPtrOp TPtVirg TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMod TMinus TInfEq TInf TInc TEqEq TEq TEllipsis TDotStar TDot TDiv TDec TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAssign TAndLog TAnd RDots EOF ]
unary_expr -> Tsizeof TOPar type_id . TCPar [ TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtrOpStar TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TEq TEllipsis TDotStar TDiv TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAssign TAndLog TAnd RDots EOF ]
## Transitions:
-- On TCPar shift to state 948
## Reductions:

State 948:
## Known stack suffix:
## Tsizeof TOPar type_id TCPar
## LR(1) items:
postfix_expr -> TOPar type_id TCPar . braced_init_list [ TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtrOpStar TPtrOp TPtVirg TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMod TMinus TInfEq TInf TInc TEqEq TEq TEllipsis TDotStar TDot TDiv TDec TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAssign TAndLog TAnd RDots EOF ]
unary_expr -> Tsizeof TOPar type_id TCPar . [ TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtrOpStar TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TEq TEllipsis TDotStar TDiv TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAssign TAndLog TAnd RDots EOF ]
## Transitions:
-- On TOBrace shift to state 114
-- On braced_init_list shift to state 913
## Reductions:
-- On TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtrOpStar TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TEq TEllipsis TDotStar TDiv TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAssign TAndLog TAnd RDots EOF
--   reduce production unary_expr -> Tsizeof TOPar type_id TCPar

State 949:
## Known stack suffix:
## Tsizeof unary_expr
## LR(1) items:
unary_expr -> Tsizeof unary_expr . [ TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtrOpStar TPtVirg TPlus TOrLog TOr TNotEq TMul TMod TMinus TInfEq TInf TEqEq TEq TEllipsis TDotStar TDiv TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAssign TAndLog TAnd RDots EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production unary_expr -> Tsizeof unary_expr

State 950:
## Known stack suffix:
## Ttypeid TOPar unary_expr
## LR(1) items:
postfix_expr -> Ttypeid TOPar unary_expr . TCPar [ TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtrOpStar TPtrOp TPtVirg TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMod TMinus TInfEq TInf TInc TEqEq TEq TEllipsis TDotStar TDot TDiv TDec TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAssign TAndLog TAnd RDots EOF ]
## Transitions:
-- On TCPar shift to state 951
## Reductions:

State 951:
## Known stack suffix:
## Ttypeid TOPar unary_expr TCPar
## LR(1) items:
postfix_expr -> Ttypeid TOPar unary_expr TCPar . [ TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtrOpStar TPtrOp TPtVirg TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMod TMinus TInfEq TInf TInc TEqEq TEq TEllipsis TDotStar TDot TDiv TDec TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAssign TAndLog TAnd RDots EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production postfix_expr -> Ttypeid TOPar unary_expr TCPar

State 952:
## Known stack suffix:
## Ttypeid TOPar type_id
## LR(1) items:
postfix_expr -> Ttypeid TOPar type_id . TCPar [ TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtrOpStar TPtrOp TPtVirg TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMod TMinus TInfEq TInf TInc TEqEq TEq TEllipsis TDotStar TDot TDiv TDec TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAssign TAndLog TAnd RDots EOF ]
## Transitions:
-- On TCPar shift to state 953
## Reductions:

State 953:
## Known stack suffix:
## Ttypeid TOPar type_id TCPar
## LR(1) items:
postfix_expr -> Ttypeid TOPar type_id TCPar . [ TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtrOpStar TPtrOp TPtVirg TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMod TMinus TInfEq TInf TInc TEqEq TEq TEllipsis TDotStar TDot TDiv TDec TCommentNewline_DefineEndOfMacro TComma TCol TCPar_EOL TCPar TCCro TCBrace TAssign TAndLog TAnd RDots EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production postfix_expr -> Ttypeid TOPar type_id TCPar

State 954:
## Known stack suffix:
## TIdent_TemplatenameInQualifier_BeforeTypedef TInf_Template listc(template_argument)
## LR(1) items:
class_or_namespace_name_for_qualifier2 -> TIdent_TemplatenameInQualifier_BeforeTypedef TInf_Template listc(template_argument) . TSup_Template [ TColCol_BeforeTypedef ]
listc(template_argument) -> listc(template_argument) . TComma template_argument [ TSup_Template TComma ]
## Transitions:
-- On TSup_Template shift to state 955
-- On TComma shift to state 896
## Reductions:

State 955:
## Known stack suffix:
## TIdent_TemplatenameInQualifier_BeforeTypedef TInf_Template listc(template_argument) TSup_Template
## LR(1) items:
class_or_namespace_name_for_qualifier2 -> TIdent_TemplatenameInQualifier_BeforeTypedef TInf_Template listc(template_argument) TSup_Template . [ TColCol_BeforeTypedef ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production class_or_namespace_name_for_qualifier2 -> TIdent_TemplatenameInQualifier_BeforeTypedef TInf_Template listc(template_argument) TSup_Template

State 956:
## Known stack suffix:
## Ttypename type_cplusplus_id
## LR(1) items:
elaborated_type_specifier -> Ttypename type_cplusplus_id . [ Twchar_t Tvolatile Tvoid Tvirtual Tunsigned Tunion Ttypeof Ttypename Ttypedef Tthread_local Tstruct Tstatic Tsigned Tshort Trestrict Tregister Toperator Tmutable Tlong Tint Tinline Tfriend Tfloat Textern Tenum Tdouble Tdecltype Tconstexpr Tconst Tclass Tchar Tbool Tauto TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtrOpStar TPtVirg TPlus TOrLog TOr TOPar TOCro TNotEq TMul TMod TMinus TInfEq TInf TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TIdent TEqEq TEq TEllipsis TDotStar TDiv TCommentNewline_DefineEndOfMacro TComma TColCol_BeforeTypedef TColCol TCol TCPar_EOL TCPar TCCro TCBrace TAssign TAndLog TAnd RDots EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production elaborated_type_specifier -> Ttypename type_cplusplus_id

State 957:
## Known stack suffix:
## Ttypeof TOPar type_id
## LR(1) items:
simple_type_specifier -> Ttypeof TOPar type_id . TCPar [ Twchar_t Tvolatile Tvoid Tvirtual Tunsigned Tunion Ttypeof Ttypename Ttypedef Tthread_local Tstruct Tstatic Tsigned Tshort Trestrict Tregister Toperator Tmutable Tlong Tint Tinline Tfriend Tfloat Textern Tenum Tdouble Tdecltype Tconstexpr Tconst Tclass Tchar Tbool Tauto Tasm TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtrOpStar TPtrOp TPtVirg TPlus TOrLog TOr TOPar_CplusplusInit TOPar TOCro TOBrace TNotEq TMul TMod TMinus TInfEq TInf TInc TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TIdent TEqEq TEq TEllipsis TDotStar TDot TDiv TDec TCommentNewline_DefineEndOfMacro TComma TColCol_BeforeTypedef TColCol TCol TCPar_EOL TCPar TCCro TCBrace TAssign TAndLog TAnd RDots EOF ]
## Transitions:
-- On TCPar shift to state 958
## Reductions:

State 958:
## Known stack suffix:
## Ttypeof TOPar type_id TCPar
## LR(1) items:
simple_type_specifier -> Ttypeof TOPar type_id TCPar . [ Twchar_t Tvolatile Tvoid Tvirtual Tunsigned Tunion Ttypeof Ttypename Ttypedef Tthread_local Tstruct Tstatic Tsigned Tshort Trestrict Tregister Toperator Tmutable Tlong Tint Tinline Tfriend Tfloat Textern Tenum Tdouble Tdecltype Tconstexpr Tconst Tclass Tchar Tbool Tauto Tasm TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtrOpStar TPtrOp TPtVirg TPlus TOrLog TOr TOPar_CplusplusInit TOPar TOCro TOBrace TNotEq TMul TMod TMinus TInfEq TInf TInc TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TIdent TEqEq TEq TEllipsis TDotStar TDot TDiv TDec TCommentNewline_DefineEndOfMacro TComma TColCol_BeforeTypedef TColCol TCol TCPar_EOL TCPar TCCro TCBrace TAssign TAndLog TAnd RDots EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production simple_type_specifier -> Ttypeof TOPar type_id TCPar

State 959:
## Known stack suffix:
## Ttypeof TOPar assign_expr
## LR(1) items:
simple_type_specifier -> Ttypeof TOPar assign_expr . TCPar [ Twchar_t Tvolatile Tvoid Tvirtual Tunsigned Tunion Ttypeof Ttypename Ttypedef Tthread_local Tstruct Tstatic Tsigned Tshort Trestrict Tregister Toperator Tmutable Tlong Tint Tinline Tfriend Tfloat Textern Tenum Tdouble Tdecltype Tconstexpr Tconst Tclass Tchar Tbool Tauto Tasm TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtrOpStar TPtrOp TPtVirg TPlus TOrLog TOr TOPar_CplusplusInit TOPar TOCro TOBrace TNotEq TMul TMod TMinus TInfEq TInf TInc TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TIdent TEqEq TEq TEllipsis TDotStar TDot TDiv TDec TCommentNewline_DefineEndOfMacro TComma TColCol_BeforeTypedef TColCol TCol TCPar_EOL TCPar TCCro TCBrace TAssign TAndLog TAnd RDots EOF ]
## Transitions:
-- On TCPar shift to state 960
## Reductions:

State 960:
## Known stack suffix:
## Ttypeof TOPar assign_expr TCPar
## LR(1) items:
simple_type_specifier -> Ttypeof TOPar assign_expr TCPar . [ Twchar_t Tvolatile Tvoid Tvirtual Tunsigned Tunion Ttypeof Ttypename Ttypedef Tthread_local Tstruct Tstatic Tsigned Tshort Trestrict Tregister Toperator Tmutable Tlong Tint Tinline Tfriend Tfloat Textern Tenum Tdouble Tdecltype Tconstexpr Tconst Tclass Tchar Tbool Tauto Tasm TXor TWhy TSup_Template TSupEq TSup TShr TShl TPtrOpStar TPtrOp TPtVirg TPlus TOrLog TOr TOPar_CplusplusInit TOPar TOCro TOBrace TNotEq TMul TMod TMinus TInfEq TInf TInc TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TIdent TEqEq TEq TEllipsis TDotStar TDot TDiv TDec TCommentNewline_DefineEndOfMacro TComma TColCol_BeforeTypedef TColCol TCol TCPar_EOL TCPar TCCro TCBrace TAssign TAndLog TAnd RDots EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production simple_type_specifier -> Ttypeof TOPar assign_expr TCPar

State 961:
## Known stack suffix:
## TIdent_TemplatenameInQualifier TInf_Template listc(template_argument)
## LR(1) items:
class_or_namespace_name_for_qualifier -> TIdent_TemplatenameInQualifier TInf_Template listc(template_argument) . TSup_Template [ TColCol ]
listc(template_argument) -> listc(template_argument) . TComma template_argument [ TSup_Template TComma ]
## Transitions:
-- On TSup_Template shift to state 962
-- On TComma shift to state 896
## Reductions:

State 962:
## Known stack suffix:
## TIdent_TemplatenameInQualifier TInf_Template listc(template_argument) TSup_Template
## LR(1) items:
class_or_namespace_name_for_qualifier -> TIdent_TemplatenameInQualifier TInf_Template listc(template_argument) TSup_Template . [ TColCol ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production class_or_namespace_name_for_qualifier -> TIdent_TemplatenameInQualifier TInf_Template listc(template_argument) TSup_Template

State 963:
## Known stack suffix:
## option(TColCol) optl(nested_name_specifier)
## LR(1) items:
qualified_namespace_spec -> option(TColCol) optl(nested_name_specifier) . TIdent [ TPtVirg ]
## Transitions:
-- On TIdent shift to state 964
## Reductions:

State 964:
## Known stack suffix:
## option(TColCol) optl(nested_name_specifier) TIdent
## LR(1) items:
qualified_namespace_spec -> option(TColCol) optl(nested_name_specifier) TIdent . [ TPtVirg ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production qualified_namespace_spec -> option(TColCol) optl(nested_name_specifier) TIdent

State 965:
## Known stack suffix:
## translation_unit
## LR(1) items:
main -> translation_unit . EOF [ # ]
## Transitions:
-- On EOF shift to state 966
## Reductions:

State 966:
## Known stack suffix:
## translation_unit EOF
## LR(1) items:
main -> translation_unit EOF . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, reduce production main -> translation_unit EOF

State 967:
## Known stack suffix:
## nonempty_list(external_declaration)
## LR(1) items:
translation_unit -> nonempty_list(external_declaration) . [ EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production translation_unit -> nonempty_list(external_declaration)

State 968:
## Known stack suffix:
## main
## LR(1) items:
main' -> main . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, accept main

State 969:
## Known stack suffix:
## function_definition
## LR(1) items:
external_declaration -> function_definition . [ Twchar_t Tvolatile Tvoid Tvirtual Tusing Tunsigned Tunion Ttypeof Ttypename Ttypedef Tthread_local Tstruct Tstatic Tsigned Tshort Trestrict Tregister Tnamespace Tmutable Tlong Tint Tinline Tfriend Tfloat Textern Tenum Tdouble Tdecltype Tconstexpr Tconst Tclass Tchar Tbool Tauto Tasm TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_Templatename TIdent_MacroDecl TIdent_ClassnameInQualifier_BeforeTypedef TColCol_BeforeTypedef EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production external_declaration -> function_definition

State 970:
## Known stack suffix:
## external_declaration
## LR(1) items:
nonempty_list(external_declaration) -> external_declaration . [ EOF ]
nonempty_list(external_declaration) -> external_declaration . nonempty_list(external_declaration) [ EOF ]
## Transitions:
-- On Twchar_t shift to state 1
-- On Tvolatile shift to state 2
-- On Tvoid shift to state 3
-- On Tvirtual shift to state 4
-- On Tusing shift to state 5
-- On Tunsigned shift to state 15
-- On Tunion shift to state 16
-- On Ttypeof shift to state 17
-- On Ttypename shift to state 19
-- On Ttypedef shift to state 96
-- On Tthread_local shift to state 97
-- On Tstruct shift to state 27
-- On Tstatic shift to state 323
-- On Tsigned shift to state 30
-- On Tshort shift to state 32
-- On Trestrict shift to state 65
-- On Tregister shift to state 99
-- On Tnamespace shift to state 540
-- On Tmutable shift to state 100
-- On Tlong shift to state 38
-- On Tint shift to state 39
-- On Tinline shift to state 101
-- On Tfriend shift to state 102
-- On Tfloat shift to state 40
-- On Textern shift to state 103
-- On Tenum shift to state 66
-- On Tdouble shift to state 41
-- On Tdecltype shift to state 45
-- On Tconstexpr shift to state 104
-- On Tconst shift to state 76
-- On Tclass shift to state 77
-- On Tchar shift to state 58
-- On Tbool shift to state 60
-- On Tauto shift to state 105
-- On Tasm shift to state 366
-- On TIdent_Typedef shift to state 20
-- On TIdent_TemplatenameInQualifier_BeforeTypedef shift to state 21
-- On TIdent_Templatename shift to state 108
-- On TIdent_MacroDecl shift to state 423
-- On TIdent_ClassnameInQualifier_BeforeTypedef shift to state 111
-- On TColCol_BeforeTypedef shift to state 118
-- On using_directive shift to state 581
-- On using_declaration shift to state 582
-- On type_spec shift to state 314
-- On type_name shift to state 182
-- On type_cplusplus_id shift to state 183
-- On template_id shift to state 120
-- On storage_class_spec shift to state 316
-- On simple_type_specifier shift to state 206
-- On simple_declaration shift to state 585
-- On nonempty_list(external_declaration) shift to state 971
-- On nested_name_specifier2 shift to state 207
-- On namespace_alias_definition shift to state 587
-- On function_spec shift to state 437
-- On function_definition shift to state 969
-- On external_declaration shift to state 970
-- On enum_specifier shift to state 209
-- On enum_name_or_typedef_name_or_simple_class_name shift to state 123
-- On enum_head shift to state 210
-- On elaborated_type_specifier shift to state 274
-- On decltype_specifier shift to state 243
-- On decl_spec_seq shift to state 599
-- On decl_spec shift to state 473
-- On cv_qualif shift to state 475
-- On class_specifier shift to state 277
-- On class_or_namespace_name_for_qualifier2 shift to state 124
-- On class_key shift to state 278
-- On class_head shift to state 301
-- On block_declaration shift to state 972
-- On asm_definition shift to state 617
## Reductions:
-- On EOF
--   reduce production nonempty_list(external_declaration) -> external_declaration

State 971:
## Known stack suffix:
## external_declaration nonempty_list(external_declaration)
## LR(1) items:
nonempty_list(external_declaration) -> external_declaration nonempty_list(external_declaration) . [ EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production nonempty_list(external_declaration) -> external_declaration nonempty_list(external_declaration)

State 972:
## Known stack suffix:
## block_declaration
## LR(1) items:
external_declaration -> block_declaration . [ Twchar_t Tvolatile Tvoid Tvirtual Tusing Tunsigned Tunion Ttypeof Ttypename Ttypedef Tthread_local Tstruct Tstatic Tsigned Tshort Trestrict Tregister Tnamespace Tmutable Tlong Tint Tinline Tfriend Tfloat Textern Tenum Tdouble Tdecltype Tconstexpr Tconst Tclass Tchar Tbool Tauto Tasm TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_Templatename TIdent_MacroDecl TIdent_ClassnameInQualifier_BeforeTypedef TColCol_BeforeTypedef EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production external_declaration -> block_declaration

State 973:
## Known stack suffix:
##
## LR(1) items:
sgrep_spatch_pattern' -> . sgrep_spatch_pattern [ # ]
## Transitions:
-- On Twhile shift to state 94
-- On Twchar_t_Constr shift to state 14
-- On Twchar_t shift to state 1
-- On Tvolatile shift to state 2
-- On Tvoid shift to state 3
-- On Tvirtual shift to state 4
-- On Tusing shift to state 5
-- On Tunsigned shift to state 15
-- On Tunion shift to state 16
-- On Ttypeof shift to state 17
-- On Ttypename shift to state 19
-- On Ttypeid shift to state 23
-- On Ttypedef shift to state 96
-- On Ttry shift to state 431
-- On Ttrue shift to state 25
-- On Tthrow shift to state 47
-- On Tthread_local shift to state 97
-- On Tthis shift to state 26
-- On Tswitch shift to state 515
-- On Tstruct shift to state 27
-- On Tstatic_cast shift to state 28
-- On Tstatic shift to state 323
-- On Tsizeof shift to state 29
-- On Tsigned shift to state 30
-- On Tshort_Constr shift to state 31
-- On Tshort shift to state 32
-- On Treturn shift to state 537
-- On Trestrict shift to state 65
-- On Treinterpret_cast shift to state 33
-- On Tregister shift to state 99
-- On Toperator shift to state 34
-- On Tnullptr shift to state 48
-- On Tnull shift to state 49
-- On Tnamespace shift to state 540
-- On Tmutable shift to state 100
-- On Tlong_Constr shift to state 50
-- On Tlong shift to state 38
-- On Tint_Constr shift to state 51
-- On Tint shift to state 39
-- On Tinline shift to state 101
-- On Tif shift to state 545
-- On Tgoto shift to state 549
-- On Tfriend shift to state 102
-- On Tfor shift to state 553
-- On Tfloat_Constr shift to state 52
-- On Tfloat shift to state 40
-- On Tfalse shift to state 53
-- On Textern shift to state 103
-- On Tenum shift to state 66
-- On Tdynamic_cast shift to state 54
-- On Tdouble_Constr shift to state 55
-- On Tdouble shift to state 41
-- On Tdo shift to state 562
-- On Tdefault shift to state 563
-- On Tdecltype shift to state 45
-- On Tcontinue shift to state 565
-- On Tconstexpr shift to state 104
-- On Tconst_cast shift to state 56
-- On Tconst shift to state 76
-- On Tclass shift to state 77
-- On Tchar_Constr shift to state 57
-- On Tchar shift to state 58
-- On Tcase shift to state 566
-- On Tbreak shift to state 571
-- On Tbool_Constr shift to state 59
-- On Tbool shift to state 60
-- On Tauto shift to state 105
-- On Tasm shift to state 366
-- On TUndef shift to state 415
-- On TTilde shift to state 61
-- On TString shift to state 62
-- On TPlus shift to state 63
-- On TOPar shift to state 64
-- On TOCro_Lambda shift to state 78
-- On TOBrace shift to state 93
-- On TMul shift to state 88
-- On TMinus shift to state 89
-- On TInt shift to state 90
-- On TInclude shift to state 416
-- On TInc shift to state 91
-- On TIdent_TypedefConstr shift to state 106
-- On TIdent_Typedef shift to state 572
-- On TIdent_TemplatenameInQualifier_BeforeTypedef shift to state 21
-- On TIdent_TemplatenameInQualifier shift to state 12
-- On TIdent_Templatename shift to state 108
-- On TIdent_MacroString shift to state 110
-- On TIdent_MacroStmt shift to state 573
-- On TIdent_MacroIterator shift to state 574
-- On TIdent_MacroDecl shift to state 423
-- On TIdent_ClassnameInQualifier_BeforeTypedef shift to state 111
-- On TIdent_ClassnameInQualifier shift to state 112
-- On TIdent shift to state 578
-- On TFloat shift to state 116
-- On TEllipsis shift to state 580
-- On TDefine shift to state 429
-- On TDec shift to state 117
-- On TCppDirectiveOther shift to state 691
-- On TColCol_BeforeTypedef shift to state 118
-- On TColCol shift to state 128
-- On TChar shift to state 174
-- On TBang shift to state 175
-- On TAndLog shift to state 176
-- On TAnd shift to state 177
-- On LDots shift to state 178
-- On using_directive shift to state 581
-- On using_declaration shift to state 582
-- On unqualified_id shift to state 179
-- On unary_op shift to state 180
-- On unary_expr shift to state 181
-- On type_spec shift to state 314
-- On type_name shift to state 182
-- On type_cplusplus_id shift to state 183
-- On try_block shift to state 583
-- On template_id shift to state 120
-- On string_elem shift to state 184
-- On storage_class_spec shift to state 316
-- On statement shift to state 974
-- On simple_type_specifier shift to state 266
-- On simple_declaration shift to state 585
-- On shift_expr shift to state 217
-- On sgrep_spatch_pattern shift to state 980
-- On selection shift to state 586
-- On relational_expr shift to state 229
-- On qualified_id shift to state 191
-- On primary_expr shift to state 192
-- On primary_cplusplus_id shift to state 193
-- On postfix_expr shift to state 194
-- On pm_expr shift to state 219
-- On option(expr) shift to state 556
-- On option(TColCol) shift to state 221
-- On operator_function_id shift to state 168
-- On new_expr shift to state 233
-- On nested_name_specifier2 shift to state 207
-- On nested_name_specifier shift to state 165
-- On namespace_alias_definition shift to state 587
-- On multiplicative_expr shift to state 234
-- On logical_or_expr shift to state 246
-- On logical_and_expr shift to state 250
-- On literal shift to state 238
-- On lambda_introducer shift to state 239
-- On labeled shift to state 588
-- On jump shift to state 589
-- On iteration shift to state 591
-- On inclusive_or_expr shift to state 272
-- On ident shift to state 592
-- On id_expression shift to state 241
-- On function_spec shift to state 437
-- On function_definition shift to state 595
-- On expr_statement shift to state 596
-- On expr shift to state 981
-- On exclusive_or_expr shift to state 273
-- On equality_expr shift to state 256
-- On enum_specifier shift to state 209
-- On enum_name_or_typedef_name_or_simple_class_name shift to state 123
-- On enum_head shift to state 210
-- On elaborated_type_specifier shift to state 274
-- On delete_expr shift to state 242
-- On decltype_specifier shift to state 243
-- On declaration_statement shift to state 598
-- On decl_spec_seq shift to state 599
-- On decl_spec shift to state 473
-- On cv_qualif shift to state 475
-- On cpp_directive shift to state 983
-- On cpp_cast_operator shift to state 244
-- On conversion_function_id shift to state 169
-- On cond_expr shift to state 330
-- On compound shift to state 615
-- On class_specifier shift to state 277
-- On class_or_namespace_name_for_qualifier2 shift to state 124
-- On class_or_namespace_name_for_qualifier shift to state 170
-- On class_key shift to state 278
-- On class_head shift to state 301
-- On cast_operator_expr shift to state 261
-- On cast_expr shift to state 331
-- On cast_constructor_expr shift to state 263
-- On block_declaration shift to state 616
-- On basic_type_2 shift to state 264
-- On assign_expr shift to state 539
-- On asm_definition shift to state 617
-- On and_expr shift to state 334
-- On additive_expr shift to state 341
## Reductions:
-- On Tnew Tdelete
--   reduce production option(TColCol) ->
-- On TPtVirg
--   reduce production option(expr) ->

State 974:
## Known stack suffix:
## statement
## LR(1) items:
sgrep_spatch_pattern -> statement . EOF [ # ]
sgrep_spatch_pattern -> statement . nonempty_list(statement) EOF [ # ]
## Transitions:
-- On Twhile shift to state 94
-- On Twchar_t_Constr shift to state 14
-- On Twchar_t shift to state 1
-- On Tvolatile shift to state 2
-- On Tvoid shift to state 3
-- On Tvirtual shift to state 4
-- On Tusing shift to state 5
-- On Tunsigned shift to state 15
-- On Tunion shift to state 16
-- On Ttypeof shift to state 17
-- On Ttypename shift to state 19
-- On Ttypeid shift to state 23
-- On Ttypedef shift to state 96
-- On Ttry shift to state 431
-- On Ttrue shift to state 25
-- On Tthrow shift to state 47
-- On Tthread_local shift to state 97
-- On Tthis shift to state 26
-- On Tswitch shift to state 515
-- On Tstruct shift to state 27
-- On Tstatic_cast shift to state 28
-- On Tstatic shift to state 323
-- On Tsizeof shift to state 29
-- On Tsigned shift to state 30
-- On Tshort_Constr shift to state 31
-- On Tshort shift to state 32
-- On Treturn shift to state 537
-- On Trestrict shift to state 65
-- On Treinterpret_cast shift to state 33
-- On Tregister shift to state 99
-- On Toperator shift to state 34
-- On Tnullptr shift to state 48
-- On Tnull shift to state 49
-- On Tnamespace shift to state 540
-- On Tmutable shift to state 100
-- On Tlong_Constr shift to state 50
-- On Tlong shift to state 38
-- On Tint_Constr shift to state 51
-- On Tint shift to state 39
-- On Tinline shift to state 101
-- On Tif shift to state 545
-- On Tgoto shift to state 549
-- On Tfriend shift to state 102
-- On Tfor shift to state 553
-- On Tfloat_Constr shift to state 52
-- On Tfloat shift to state 40
-- On Tfalse shift to state 53
-- On Textern shift to state 103
-- On Tenum shift to state 66
-- On Tdynamic_cast shift to state 54
-- On Tdouble_Constr shift to state 55
-- On Tdouble shift to state 41
-- On Tdo shift to state 562
-- On Tdefault shift to state 563
-- On Tdecltype shift to state 45
-- On Tcontinue shift to state 565
-- On Tconstexpr shift to state 104
-- On Tconst_cast shift to state 56
-- On Tconst shift to state 76
-- On Tclass shift to state 77
-- On Tchar_Constr shift to state 57
-- On Tchar shift to state 58
-- On Tcase shift to state 566
-- On Tbreak shift to state 571
-- On Tbool_Constr shift to state 59
-- On Tbool shift to state 60
-- On Tauto shift to state 105
-- On Tasm shift to state 366
-- On TTilde shift to state 61
-- On TString shift to state 62
-- On TPlus shift to state 63
-- On TOPar shift to state 64
-- On TOCro_Lambda shift to state 78
-- On TOBrace shift to state 93
-- On TMul shift to state 88
-- On TMinus shift to state 89
-- On TInt shift to state 90
-- On TInc shift to state 91
-- On TIdent_TypedefConstr shift to state 106
-- On TIdent_Typedef shift to state 572
-- On TIdent_TemplatenameInQualifier_BeforeTypedef shift to state 21
-- On TIdent_TemplatenameInQualifier shift to state 12
-- On TIdent_Templatename shift to state 108
-- On TIdent_MacroString shift to state 110
-- On TIdent_MacroStmt shift to state 573
-- On TIdent_MacroIterator shift to state 574
-- On TIdent_MacroDecl shift to state 423
-- On TIdent_ClassnameInQualifier_BeforeTypedef shift to state 111
-- On TIdent_ClassnameInQualifier shift to state 112
-- On TIdent shift to state 578
-- On TFloat shift to state 116
-- On TEllipsis shift to state 580
-- On TDec shift to state 117
-- On TColCol_BeforeTypedef shift to state 118
-- On TColCol shift to state 128
-- On TChar shift to state 174
-- On TBang shift to state 175
-- On TAndLog shift to state 176
-- On TAnd shift to state 177
-- On LDots shift to state 178
-- On EOF shift to state 975
-- On using_directive shift to state 581
-- On using_declaration shift to state 582
-- On unqualified_id shift to state 179
-- On unary_op shift to state 180
-- On unary_expr shift to state 181
-- On type_spec shift to state 314
-- On type_name shift to state 182
-- On type_cplusplus_id shift to state 183
-- On try_block shift to state 583
-- On template_id shift to state 120
-- On string_elem shift to state 184
-- On storage_class_spec shift to state 316
-- On statement shift to state 976
-- On simple_type_specifier shift to state 266
-- On simple_declaration shift to state 585
-- On shift_expr shift to state 217
-- On selection shift to state 586
-- On relational_expr shift to state 229
-- On qualified_id shift to state 191
-- On primary_expr shift to state 192
-- On primary_cplusplus_id shift to state 193
-- On postfix_expr shift to state 194
-- On pm_expr shift to state 219
-- On option(expr) shift to state 556
-- On option(TColCol) shift to state 221
-- On operator_function_id shift to state 168
-- On nonempty_list(statement) shift to state 978
-- On new_expr shift to state 233
-- On nested_name_specifier2 shift to state 207
-- On nested_name_specifier shift to state 165
-- On namespace_alias_definition shift to state 587
-- On multiplicative_expr shift to state 234
-- On logical_or_expr shift to state 246
-- On logical_and_expr shift to state 250
-- On literal shift to state 238
-- On lambda_introducer shift to state 239
-- On labeled shift to state 588
-- On jump shift to state 589
-- On iteration shift to state 591
-- On inclusive_or_expr shift to state 272
-- On ident shift to state 592
-- On id_expression shift to state 241
-- On function_spec shift to state 437
-- On function_definition shift to state 595
-- On expr_statement shift to state 596
-- On expr shift to state 597
-- On exclusive_or_expr shift to state 273
-- On equality_expr shift to state 256
-- On enum_specifier shift to state 209
-- On enum_name_or_typedef_name_or_simple_class_name shift to state 123
-- On enum_head shift to state 210
-- On elaborated_type_specifier shift to state 274
-- On delete_expr shift to state 242
-- On decltype_specifier shift to state 243
-- On declaration_statement shift to state 598
-- On decl_spec_seq shift to state 599
-- On decl_spec shift to state 473
-- On cv_qualif shift to state 475
-- On cpp_cast_operator shift to state 244
-- On conversion_function_id shift to state 169
-- On cond_expr shift to state 330
-- On compound shift to state 615
-- On class_specifier shift to state 277
-- On class_or_namespace_name_for_qualifier2 shift to state 124
-- On class_or_namespace_name_for_qualifier shift to state 170
-- On class_key shift to state 278
-- On class_head shift to state 301
-- On cast_operator_expr shift to state 261
-- On cast_expr shift to state 331
-- On cast_constructor_expr shift to state 263
-- On block_declaration shift to state 616
-- On basic_type_2 shift to state 264
-- On assign_expr shift to state 539
-- On asm_definition shift to state 617
-- On and_expr shift to state 334
-- On additive_expr shift to state 341
## Reductions:
-- On Tnew Tdelete
--   reduce production option(TColCol) ->
-- On TPtVirg
--   reduce production option(expr) ->

State 975:
## Known stack suffix:
## statement EOF
## LR(1) items:
sgrep_spatch_pattern -> statement EOF . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, reduce production sgrep_spatch_pattern -> statement EOF

State 976:
## Known stack suffix:
## statement
## LR(1) items:
nonempty_list(statement) -> statement . [ EOF ]
nonempty_list(statement) -> statement . nonempty_list(statement) [ EOF ]
## Transitions:
-- On Twhile shift to state 94
-- On Twchar_t_Constr shift to state 14
-- On Twchar_t shift to state 1
-- On Tvolatile shift to state 2
-- On Tvoid shift to state 3
-- On Tvirtual shift to state 4
-- On Tusing shift to state 5
-- On Tunsigned shift to state 15
-- On Tunion shift to state 16
-- On Ttypeof shift to state 17
-- On Ttypename shift to state 19
-- On Ttypeid shift to state 23
-- On Ttypedef shift to state 96
-- On Ttry shift to state 431
-- On Ttrue shift to state 25
-- On Tthrow shift to state 47
-- On Tthread_local shift to state 97
-- On Tthis shift to state 26
-- On Tswitch shift to state 515
-- On Tstruct shift to state 27
-- On Tstatic_cast shift to state 28
-- On Tstatic shift to state 323
-- On Tsizeof shift to state 29
-- On Tsigned shift to state 30
-- On Tshort_Constr shift to state 31
-- On Tshort shift to state 32
-- On Treturn shift to state 537
-- On Trestrict shift to state 65
-- On Treinterpret_cast shift to state 33
-- On Tregister shift to state 99
-- On Toperator shift to state 34
-- On Tnullptr shift to state 48
-- On Tnull shift to state 49
-- On Tnamespace shift to state 540
-- On Tmutable shift to state 100
-- On Tlong_Constr shift to state 50
-- On Tlong shift to state 38
-- On Tint_Constr shift to state 51
-- On Tint shift to state 39
-- On Tinline shift to state 101
-- On Tif shift to state 545
-- On Tgoto shift to state 549
-- On Tfriend shift to state 102
-- On Tfor shift to state 553
-- On Tfloat_Constr shift to state 52
-- On Tfloat shift to state 40
-- On Tfalse shift to state 53
-- On Textern shift to state 103
-- On Tenum shift to state 66
-- On Tdynamic_cast shift to state 54
-- On Tdouble_Constr shift to state 55
-- On Tdouble shift to state 41
-- On Tdo shift to state 562
-- On Tdefault shift to state 563
-- On Tdecltype shift to state 45
-- On Tcontinue shift to state 565
-- On Tconstexpr shift to state 104
-- On Tconst_cast shift to state 56
-- On Tconst shift to state 76
-- On Tclass shift to state 77
-- On Tchar_Constr shift to state 57
-- On Tchar shift to state 58
-- On Tcase shift to state 566
-- On Tbreak shift to state 571
-- On Tbool_Constr shift to state 59
-- On Tbool shift to state 60
-- On Tauto shift to state 105
-- On Tasm shift to state 366
-- On TTilde shift to state 61
-- On TString shift to state 62
-- On TPlus shift to state 63
-- On TOPar shift to state 64
-- On TOCro_Lambda shift to state 78
-- On TOBrace shift to state 93
-- On TMul shift to state 88
-- On TMinus shift to state 89
-- On TInt shift to state 90
-- On TInc shift to state 91
-- On TIdent_TypedefConstr shift to state 106
-- On TIdent_Typedef shift to state 572
-- On TIdent_TemplatenameInQualifier_BeforeTypedef shift to state 21
-- On TIdent_TemplatenameInQualifier shift to state 12
-- On TIdent_Templatename shift to state 108
-- On TIdent_MacroString shift to state 110
-- On TIdent_MacroStmt shift to state 573
-- On TIdent_MacroIterator shift to state 574
-- On TIdent_MacroDecl shift to state 423
-- On TIdent_ClassnameInQualifier_BeforeTypedef shift to state 111
-- On TIdent_ClassnameInQualifier shift to state 112
-- On TIdent shift to state 578
-- On TFloat shift to state 116
-- On TEllipsis shift to state 580
-- On TDec shift to state 117
-- On TColCol_BeforeTypedef shift to state 118
-- On TColCol shift to state 128
-- On TChar shift to state 174
-- On TBang shift to state 175
-- On TAndLog shift to state 176
-- On TAnd shift to state 177
-- On LDots shift to state 178
-- On using_directive shift to state 581
-- On using_declaration shift to state 582
-- On unqualified_id shift to state 179
-- On unary_op shift to state 180
-- On unary_expr shift to state 181
-- On type_spec shift to state 314
-- On type_name shift to state 182
-- On type_cplusplus_id shift to state 183
-- On try_block shift to state 583
-- On template_id shift to state 120
-- On string_elem shift to state 184
-- On storage_class_spec shift to state 316
-- On statement shift to state 976
-- On simple_type_specifier shift to state 266
-- On simple_declaration shift to state 585
-- On shift_expr shift to state 217
-- On selection shift to state 586
-- On relational_expr shift to state 229
-- On qualified_id shift to state 191
-- On primary_expr shift to state 192
-- On primary_cplusplus_id shift to state 193
-- On postfix_expr shift to state 194
-- On pm_expr shift to state 219
-- On option(expr) shift to state 556
-- On option(TColCol) shift to state 221
-- On operator_function_id shift to state 168
-- On nonempty_list(statement) shift to state 977
-- On new_expr shift to state 233
-- On nested_name_specifier2 shift to state 207
-- On nested_name_specifier shift to state 165
-- On namespace_alias_definition shift to state 587
-- On multiplicative_expr shift to state 234
-- On logical_or_expr shift to state 246
-- On logical_and_expr shift to state 250
-- On literal shift to state 238
-- On lambda_introducer shift to state 239
-- On labeled shift to state 588
-- On jump shift to state 589
-- On iteration shift to state 591
-- On inclusive_or_expr shift to state 272
-- On ident shift to state 592
-- On id_expression shift to state 241
-- On function_spec shift to state 437
-- On function_definition shift to state 595
-- On expr_statement shift to state 596
-- On expr shift to state 597
-- On exclusive_or_expr shift to state 273
-- On equality_expr shift to state 256
-- On enum_specifier shift to state 209
-- On enum_name_or_typedef_name_or_simple_class_name shift to state 123
-- On enum_head shift to state 210
-- On elaborated_type_specifier shift to state 274
-- On delete_expr shift to state 242
-- On decltype_specifier shift to state 243
-- On declaration_statement shift to state 598
-- On decl_spec_seq shift to state 599
-- On decl_spec shift to state 473
-- On cv_qualif shift to state 475
-- On cpp_cast_operator shift to state 244
-- On conversion_function_id shift to state 169
-- On cond_expr shift to state 330
-- On compound shift to state 615
-- On class_specifier shift to state 277
-- On class_or_namespace_name_for_qualifier2 shift to state 124
-- On class_or_namespace_name_for_qualifier shift to state 170
-- On class_key shift to state 278
-- On class_head shift to state 301
-- On cast_operator_expr shift to state 261
-- On cast_expr shift to state 331
-- On cast_constructor_expr shift to state 263
-- On block_declaration shift to state 616
-- On basic_type_2 shift to state 264
-- On assign_expr shift to state 539
-- On asm_definition shift to state 617
-- On and_expr shift to state 334
-- On additive_expr shift to state 341
## Reductions:
-- On EOF
--   reduce production nonempty_list(statement) -> statement
-- On Tnew Tdelete
--   reduce production option(TColCol) ->
-- On TPtVirg
--   reduce production option(expr) ->

State 977:
## Known stack suffix:
## statement nonempty_list(statement)
## LR(1) items:
nonempty_list(statement) -> statement nonempty_list(statement) . [ EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production nonempty_list(statement) -> statement nonempty_list(statement)

State 978:
## Known stack suffix:
## statement nonempty_list(statement)
## LR(1) items:
sgrep_spatch_pattern -> statement nonempty_list(statement) . EOF [ # ]
## Transitions:
-- On EOF shift to state 979
## Reductions:

State 979:
## Known stack suffix:
## statement nonempty_list(statement) EOF
## LR(1) items:
sgrep_spatch_pattern -> statement nonempty_list(statement) EOF . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, reduce production sgrep_spatch_pattern -> statement nonempty_list(statement) EOF

State 980:
## Known stack suffix:
## sgrep_spatch_pattern
## LR(1) items:
sgrep_spatch_pattern' -> sgrep_spatch_pattern . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, accept sgrep_spatch_pattern

State 981:
## Known stack suffix:
## expr
## LR(1) items:
expr -> expr . TComma assign_expr [ TPtVirg TComma EOF ]
option(expr) -> expr . [ TPtVirg ]
sgrep_spatch_pattern -> expr . EOF [ # ]
## Transitions:
-- On TComma shift to state 518
-- On EOF shift to state 982
## Reductions:
-- On TPtVirg
--   reduce production option(expr) -> expr

State 982:
## Known stack suffix:
## expr EOF
## LR(1) items:
sgrep_spatch_pattern -> expr EOF . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, reduce production sgrep_spatch_pattern -> expr EOF

State 983:
## Known stack suffix:
## cpp_directive
## LR(1) items:
sgrep_spatch_pattern -> cpp_directive . EOF [ # ]
## Transitions:
-- On EOF shift to state 984
## Reductions:

State 984:
## Known stack suffix:
## cpp_directive EOF
## LR(1) items:
sgrep_spatch_pattern -> cpp_directive EOF . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, reduce production sgrep_spatch_pattern -> cpp_directive EOF

State 985:
## Known stack suffix:
##
## LR(1) items:
toplevel' -> . toplevel [ # ]
## Transitions:
-- On Twchar_t shift to state 1
-- On Tvolatile shift to state 2
-- On Tvoid shift to state 3
-- On Tvirtual shift to state 4
-- On Tusing shift to state 986
-- On Tunsigned shift to state 15
-- On Tunion shift to state 16
-- On Ttypeof shift to state 17
-- On Ttypename shift to state 19
-- On Ttypedef shift to state 96
-- On Tthread_local shift to state 97
-- On Ttemplate shift to state 997
-- On Tstruct shift to state 27
-- On Tstatic shift to state 1000
-- On Tsigned shift to state 30
-- On Tshort shift to state 32
-- On Trestrict shift to state 65
-- On Tregister shift to state 99
-- On Tnamespace shift to state 1012
-- On Tmutable shift to state 100
-- On Tlong shift to state 38
-- On Tint shift to state 39
-- On Tinline shift to state 363
-- On Tfriend shift to state 102
-- On Tfloat shift to state 40
-- On Textern shift to state 1023
-- On Tenum shift to state 66
-- On Tdouble shift to state 41
-- On Tdecltype shift to state 45
-- On Tconstexpr shift to state 104
-- On Tconst shift to state 76
-- On Tclass shift to state 77
-- On Tchar shift to state 58
-- On Tbool shift to state 60
-- On Tauto shift to state 105
-- On Tasm shift to state 1025
-- On TUndef shift to state 1096
-- On TTilde shift to state 1031
-- On TPtVirg shift to state 1041
-- On TInclude shift to state 1097
-- On TIfdefelse shift to state 1098
-- On TIfdefelif shift to state 1099
-- On TIfdefVersion shift to state 1100
-- On TIfdefMisc shift to state 1101
-- On TIfdefBool shift to state 1102
-- On TIfdef shift to state 1103
-- On TIdent_Typedef shift to state 20
-- On TIdent_TemplatenameInQualifier_BeforeTypedef shift to state 21
-- On TIdent_TemplatenameInQualifier shift to state 12
-- On TIdent_Templatename shift to state 108
-- On TIdent_MacroDecl shift to state 1045
-- On TIdent_ClassnameInQualifier_BeforeTypedef shift to state 111
-- On TIdent_ClassnameInQualifier shift to state 112
-- On TIdent shift to state 1104
-- On TEndif shift to state 1111
-- On TDefine shift to state 1112
-- On TCppDirectiveOther shift to state 1121
-- On TColCol_BeforeTypedef shift to state 118
-- On TCBrace shift to state 1122
-- On EOF shift to state 1123
-- On using_directive shift to state 1050
-- On using_declaration shift to state 1051
-- On unnamed_namespace_definition shift to state 1052
-- On type_spec shift to state 314
-- On type_name shift to state 182
-- On type_cplusplus_id shift to state 183
-- On toplevel_aux shift to state 1124
-- On toplevel shift to state 1125
-- On template_id shift to state 120
-- On template_declaration shift to state 1053
-- On storage_class_spec shift to state 316
-- On simple_type_specifier shift to state 206
-- On simple_declaration shift to state 1054
-- On option(Tinline) shift to state 1055
-- On nested_name_specifier2 shift to state 207
-- On nested_name_specifier shift to state 1062
-- On namespace_definition shift to state 1075
-- On namespace_alias_definition shift to state 1076
-- On named_namespace_definition shift to state 1077
-- On linkage_specification shift to state 1078
-- On function_spec shift to state 437
-- On function_definition shift to state 1079
-- On explicit_specialization shift to state 1080
-- On enum_specifier shift to state 209
-- On enum_name_or_typedef_name_or_simple_class_name shift to state 123
-- On enum_head shift to state 210
-- On elaborated_type_specifier shift to state 274
-- On decltype_specifier shift to state 243
-- On declaration shift to state 1126
-- On decl_spec_seq shift to state 1082
-- On decl_spec shift to state 473
-- On cv_qualif shift to state 475
-- On ctor_dtor shift to state 1089
-- On cpp_other shift to state 1127
-- On cpp_ifdef_directive shift to state 1128
-- On cpp_directive shift to state 1129
-- On class_specifier shift to state 277
-- On class_or_namespace_name_for_qualifier2 shift to state 124
-- On class_or_namespace_name_for_qualifier shift to state 170
-- On class_key shift to state 278
-- On class_head shift to state 301
-- On block_declaration shift to state 1090
-- On asm_definition shift to state 1091
## Reductions:
-- On TIdent_Constructor
--   reduce production option(Tinline) ->

State 986:
## Known stack suffix:
## Tusing
## LR(1) items:
using_declaration -> Tusing . option(Ttypename) option(TColCol) nested_name_specifier unqualified_id TPtVirg [ # ]
using_declaration -> Tusing . option(Ttypename) option(TColCol) unqualified_id TPtVirg [ # ]
using_directive -> Tusing . Tnamespace qualified_namespace_spec TPtVirg [ # ]
## Transitions:
-- On Ttypename shift to state 6
-- On Tnamespace shift to state 987
-- On option(Ttypename) shift to state 990
## Reductions:
-- On Toperator TIdent_TemplatenameInQualifier TIdent_ClassnameInQualifier TIdent TColCol
--   reduce production option(Ttypename) ->

State 987:
## Known stack suffix:
## Tusing Tnamespace
## LR(1) items:
using_directive -> Tusing Tnamespace . qualified_namespace_spec TPtVirg [ # ]
## Transitions:
-- On TColCol shift to state 8
-- On qualified_namespace_spec shift to state 988
-- On option(TColCol) shift to state 11
## Reductions:
-- On TIdent_TemplatenameInQualifier TIdent_ClassnameInQualifier TIdent
--   reduce production option(TColCol) ->

State 988:
## Known stack suffix:
## Tusing Tnamespace qualified_namespace_spec
## LR(1) items:
using_directive -> Tusing Tnamespace qualified_namespace_spec . TPtVirg [ # ]
## Transitions:
-- On TPtVirg shift to state 989
## Reductions:

State 989:
## Known stack suffix:
## Tusing Tnamespace qualified_namespace_spec TPtVirg
## LR(1) items:
using_directive -> Tusing Tnamespace qualified_namespace_spec TPtVirg . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, reduce production using_directive -> Tusing Tnamespace qualified_namespace_spec TPtVirg

State 990:
## Known stack suffix:
## Tusing option(Ttypename)
## LR(1) items:
using_declaration -> Tusing option(Ttypename) . option(TColCol) nested_name_specifier unqualified_id TPtVirg [ # ]
using_declaration -> Tusing option(Ttypename) . option(TColCol) unqualified_id TPtVirg [ # ]
## Transitions:
-- On TColCol shift to state 8
-- On option(TColCol) shift to state 991
## Reductions:
-- On Toperator TIdent_TemplatenameInQualifier TIdent_ClassnameInQualifier TIdent
--   reduce production option(TColCol) ->

State 991:
## Known stack suffix:
## Tusing option(Ttypename) option(TColCol)
## LR(1) items:
using_declaration -> Tusing option(Ttypename) option(TColCol) . nested_name_specifier unqualified_id TPtVirg [ # ]
using_declaration -> Tusing option(Ttypename) option(TColCol) . unqualified_id TPtVirg [ # ]
## Transitions:
-- On Toperator shift to state 34
-- On TIdent_TemplatenameInQualifier shift to state 12
-- On TIdent_ClassnameInQualifier shift to state 112
-- On TIdent shift to state 166
-- On unqualified_id shift to state 992
-- On operator_function_id shift to state 168
-- On nested_name_specifier shift to state 994
-- On conversion_function_id shift to state 169
-- On class_or_namespace_name_for_qualifier shift to state 170
## Reductions:

State 992:
## Known stack suffix:
## Tusing option(Ttypename) option(TColCol) unqualified_id
## LR(1) items:
using_declaration -> Tusing option(Ttypename) option(TColCol) unqualified_id . TPtVirg [ # ]
## Transitions:
-- On TPtVirg shift to state 993
## Reductions:

State 993:
## Known stack suffix:
## Tusing option(Ttypename) option(TColCol) unqualified_id TPtVirg
## LR(1) items:
using_declaration -> Tusing option(Ttypename) option(TColCol) unqualified_id TPtVirg . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, reduce production using_declaration -> Tusing option(Ttypename) option(TColCol) unqualified_id TPtVirg

State 994:
## Known stack suffix:
## Tusing option(Ttypename) option(TColCol) nested_name_specifier
## LR(1) items:
using_declaration -> Tusing option(Ttypename) option(TColCol) nested_name_specifier . unqualified_id TPtVirg [ # ]
## Transitions:
-- On Toperator shift to state 34
-- On TIdent shift to state 166
-- On unqualified_id shift to state 995
-- On operator_function_id shift to state 168
-- On conversion_function_id shift to state 169
## Reductions:

State 995:
## Known stack suffix:
## Tusing option(Ttypename) option(TColCol) nested_name_specifier unqualified_id
## LR(1) items:
using_declaration -> Tusing option(Ttypename) option(TColCol) nested_name_specifier unqualified_id . TPtVirg [ # ]
## Transitions:
-- On TPtVirg shift to state 996
## Reductions:

State 996:
## Known stack suffix:
## Tusing option(Ttypename) option(TColCol) nested_name_specifier unqualified_id TPtVirg
## LR(1) items:
using_declaration -> Tusing option(Ttypename) option(TColCol) nested_name_specifier unqualified_id TPtVirg . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, reduce production using_declaration -> Tusing option(Ttypename) option(TColCol) nested_name_specifier unqualified_id TPtVirg

State 997:
## Known stack suffix:
## Ttemplate
## LR(1) items:
explicit_specialization -> Ttemplate . TInf_Template TSup_Template declaration [ # ]
template_declaration -> Ttemplate . TInf_Template listc(template_parameter) TSup_Template declaration [ # ]
## Transitions:
-- On TInf_Template shift to state 998
## Reductions:

State 998:
## Known stack suffix:
## Ttemplate TInf_Template
## LR(1) items:
explicit_specialization -> Ttemplate TInf_Template . TSup_Template declaration [ # ]
template_declaration -> Ttemplate TInf_Template . listc(template_parameter) TSup_Template declaration [ # ]
## Transitions:
-- On Twchar_t shift to state 1
-- On Tvolatile shift to state 2
-- On Tvoid shift to state 3
-- On Tvirtual shift to state 4
-- On Tunsigned shift to state 15
-- On Tunion shift to state 16
-- On Ttypeof shift to state 17
-- On Ttypename shift to state 19
-- On Ttypedef shift to state 96
-- On Tthread_local shift to state 97
-- On Tstruct shift to state 27
-- On Tstatic shift to state 98
-- On Tsigned shift to state 30
-- On Tshort shift to state 32
-- On Trestrict shift to state 65
-- On Tregister shift to state 99
-- On Tmutable shift to state 100
-- On Tlong shift to state 38
-- On Tint shift to state 39
-- On Tinline shift to state 101
-- On Tfriend shift to state 102
-- On Tfloat shift to state 40
-- On Textern shift to state 103
-- On Tenum shift to state 66
-- On Tdouble shift to state 41
-- On Tdecltype shift to state 45
-- On Tconstexpr shift to state 104
-- On Tconst shift to state 76
-- On Tclass shift to state 77
-- On Tchar shift to state 58
-- On Tbool shift to state 60
-- On Tauto shift to state 105
-- On TSup_Template shift to state 999
-- On TIdent_Typedef shift to state 20
-- On TIdent_TemplatenameInQualifier_BeforeTypedef shift to state 21
-- On TIdent_Templatename shift to state 108
-- On TIdent_ClassnameInQualifier_BeforeTypedef shift to state 111
-- On TColCol_BeforeTypedef shift to state 118
-- On type_spec shift to state 314
-- On type_name shift to state 182
-- On type_cplusplus_id shift to state 183
-- On template_parameter shift to state 315
-- On template_id shift to state 120
-- On storage_class_spec shift to state 316
-- On simple_type_specifier shift to state 206
-- On parameter_decl shift to state 317
-- On nested_name_specifier2 shift to state 207
-- On listc(template_parameter) shift to state 1093
-- On function_spec shift to state 437
-- On enum_specifier shift to state 209
-- On enum_name_or_typedef_name_or_simple_class_name shift to state 123
-- On enum_head shift to state 210
-- On elaborated_type_specifier shift to state 274
-- On decltype_specifier shift to state 243
-- On decl_spec_seq shift to state 441
-- On decl_spec shift to state 473
-- On cv_qualif shift to state 475
-- On class_specifier shift to state 277
-- On class_or_namespace_name_for_qualifier2 shift to state 124
-- On class_key shift to state 278
-- On class_head shift to state 301
## Reductions:

State 999:
## Known stack suffix:
## Ttemplate TInf_Template TSup_Template
## LR(1) items:
explicit_specialization -> Ttemplate TInf_Template TSup_Template . declaration [ # ]
## Transitions:
-- On Twchar_t shift to state 1
-- On Tvolatile shift to state 2
-- On Tvoid shift to state 3
-- On Tvirtual shift to state 4
-- On Tusing shift to state 986
-- On Tunsigned shift to state 15
-- On Tunion shift to state 16
-- On Ttypeof shift to state 17
-- On Ttypename shift to state 19
-- On Ttypedef shift to state 96
-- On Tthread_local shift to state 97
-- On Ttemplate shift to state 997
-- On Tstruct shift to state 27
-- On Tstatic shift to state 1000
-- On Tsigned shift to state 30
-- On Tshort shift to state 32
-- On Trestrict shift to state 65
-- On Tregister shift to state 99
-- On Tnamespace shift to state 1012
-- On Tmutable shift to state 100
-- On Tlong shift to state 38
-- On Tint shift to state 39
-- On Tinline shift to state 363
-- On Tfriend shift to state 102
-- On Tfloat shift to state 40
-- On Textern shift to state 1023
-- On Tenum shift to state 66
-- On Tdouble shift to state 41
-- On Tdecltype shift to state 45
-- On Tconstexpr shift to state 104
-- On Tconst shift to state 76
-- On Tclass shift to state 77
-- On Tchar shift to state 58
-- On Tbool shift to state 60
-- On Tauto shift to state 105
-- On Tasm shift to state 1025
-- On TTilde shift to state 1031
-- On TPtVirg shift to state 1041
-- On TIdent_Typedef shift to state 20
-- On TIdent_TemplatenameInQualifier_BeforeTypedef shift to state 21
-- On TIdent_TemplatenameInQualifier shift to state 12
-- On TIdent_Templatename shift to state 108
-- On TIdent_MacroDecl shift to state 1045
-- On TIdent_ClassnameInQualifier_BeforeTypedef shift to state 111
-- On TIdent_ClassnameInQualifier shift to state 112
-- On TColCol_BeforeTypedef shift to state 118
-- On using_directive shift to state 1050
-- On using_declaration shift to state 1051
-- On unnamed_namespace_definition shift to state 1052
-- On type_spec shift to state 314
-- On type_name shift to state 182
-- On type_cplusplus_id shift to state 183
-- On template_id shift to state 120
-- On template_declaration shift to state 1053
-- On storage_class_spec shift to state 316
-- On simple_type_specifier shift to state 206
-- On simple_declaration shift to state 1054
-- On option(Tinline) shift to state 1055
-- On nested_name_specifier2 shift to state 207
-- On nested_name_specifier shift to state 1062
-- On namespace_definition shift to state 1075
-- On namespace_alias_definition shift to state 1076
-- On named_namespace_definition shift to state 1077
-- On linkage_specification shift to state 1078
-- On function_spec shift to state 437
-- On function_definition shift to state 1079
-- On explicit_specialization shift to state 1080
-- On enum_specifier shift to state 209
-- On enum_name_or_typedef_name_or_simple_class_name shift to state 123
-- On enum_head shift to state 210
-- On elaborated_type_specifier shift to state 274
-- On decltype_specifier shift to state 243
-- On declaration shift to state 1092
-- On decl_spec_seq shift to state 1082
-- On decl_spec shift to state 473
-- On cv_qualif shift to state 475
-- On ctor_dtor shift to state 1089
-- On class_specifier shift to state 277
-- On class_or_namespace_name_for_qualifier2 shift to state 124
-- On class_or_namespace_name_for_qualifier shift to state 170
-- On class_key shift to state 278
-- On class_head shift to state 301
-- On block_declaration shift to state 1090
-- On asm_definition shift to state 1091
## Reductions:
-- On TIdent_Constructor
--   reduce production option(Tinline) ->

State 1000:
## Known stack suffix:
## Tstatic
## LR(1) items:
simple_declaration -> Tstatic . TIdent_MacroDecl TOPar listc(argument) TCPar TPtVirg [ # ]
simple_declaration -> Tstatic . Tconst_MacroDeclConst TIdent_MacroDecl TOPar listc(argument) TCPar TPtVirg [ # ]
storage_class_spec -> Tstatic . [ Twchar_t Tvolatile Tvoid Tvirtual Tunsigned Tunion Ttypeof Ttypename Ttypedef Tthread_local Tstruct Tstatic Tsigned Tshort Trestrict Tregister Toperator Tmutable Tlong Tint Tinline Tfriend Tfloat Textern Tenum Tdouble Tdecltype Tconstexpr Tconst Tclass Tchar Tbool Tauto TPtVirg TOPar TMul TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TIdent TColCol_BeforeTypedef TColCol TAndLog TAnd ]
## Transitions:
-- On Tconst_MacroDeclConst shift to state 1001
-- On TIdent_MacroDecl shift to state 1007
## Reductions:
-- On Twchar_t Tvolatile Tvoid Tvirtual Tunsigned Tunion Ttypeof Ttypename Ttypedef Tthread_local Tstruct Tstatic Tsigned Tshort Trestrict Tregister Toperator Tmutable Tlong Tint Tinline Tfriend Tfloat Textern Tenum Tdouble Tdecltype Tconstexpr Tconst Tclass Tchar Tbool Tauto TPtVirg TOPar TMul TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TIdent TColCol_BeforeTypedef TColCol TAndLog TAnd
--   reduce production storage_class_spec -> Tstatic

State 1001:
## Known stack suffix:
## Tstatic Tconst_MacroDeclConst
## LR(1) items:
simple_declaration -> Tstatic Tconst_MacroDeclConst . TIdent_MacroDecl TOPar listc(argument) TCPar TPtVirg [ # ]
## Transitions:
-- On TIdent_MacroDecl shift to state 1002
## Reductions:

State 1002:
## Known stack suffix:
## Tstatic Tconst_MacroDeclConst TIdent_MacroDecl
## LR(1) items:
simple_declaration -> Tstatic Tconst_MacroDeclConst TIdent_MacroDecl . TOPar listc(argument) TCPar TPtVirg [ # ]
## Transitions:
-- On TOPar shift to state 1003
## Reductions:

State 1003:
## Known stack suffix:
## Tstatic Tconst_MacroDeclConst TIdent_MacroDecl TOPar
## LR(1) items:
simple_declaration -> Tstatic Tconst_MacroDeclConst TIdent_MacroDecl TOPar . listc(argument) TCPar TPtVirg [ # ]
## Transitions:
-- On Twchar_t_Constr shift to state 14
-- On Twchar_t shift to state 1
-- On Tvolatile shift to state 2
-- On Tvoid shift to state 3
-- On Tunsigned shift to state 15
-- On Tunion shift to state 16
-- On Ttypeof shift to state 17
-- On Ttypename shift to state 19
-- On Ttypeid shift to state 23
-- On Ttrue shift to state 25
-- On Tthrow shift to state 47
-- On Tthis shift to state 26
-- On Tstruct shift to state 27
-- On Tstatic_cast shift to state 28
-- On Tsizeof shift to state 29
-- On Tsigned shift to state 30
-- On Tshort_Constr shift to state 31
-- On Tshort shift to state 32
-- On Trestrict shift to state 65
-- On Treinterpret_cast shift to state 33
-- On Toperator shift to state 34
-- On Tnullptr shift to state 48
-- On Tnull shift to state 49
-- On Tlong_Constr shift to state 50
-- On Tlong shift to state 38
-- On Tint_Constr shift to state 51
-- On Tint shift to state 39
-- On Tfloat_Constr shift to state 52
-- On Tfloat shift to state 40
-- On Tfalse shift to state 53
-- On Tenum shift to state 66
-- On Tdynamic_cast shift to state 54
-- On Tdouble_Constr shift to state 55
-- On Tdouble shift to state 41
-- On Tdecltype shift to state 45
-- On Tconst_cast shift to state 56
-- On Tconst shift to state 76
-- On Tclass shift to state 77
-- On Tchar_Constr shift to state 57
-- On Tchar shift to state 58
-- On Tbool_Constr shift to state 59
-- On Tbool shift to state 60
-- On TTilde shift to state 61
-- On TString shift to state 62
-- On TPlus shift to state 63
-- On TOPar shift to state 64
-- On TOCro_Lambda shift to state 78
-- On TMul shift to state 88
-- On TMinus shift to state 89
-- On TInt shift to state 90
-- On TInc shift to state 91
-- On TIdent_TypedefConstr shift to state 106
-- On TIdent_Typedef shift to state 20
-- On TIdent_TemplatenameInQualifier_BeforeTypedef shift to state 21
-- On TIdent_TemplatenameInQualifier shift to state 12
-- On TIdent_Templatename shift to state 108
-- On TIdent_MacroString shift to state 110
-- On TIdent_ClassnameInQualifier_BeforeTypedef shift to state 111
-- On TIdent_ClassnameInQualifier shift to state 112
-- On TIdent shift to state 113
-- On TFloat shift to state 116
-- On TEllipsis shift to state 201
-- On TDec shift to state 117
-- On TColCol_BeforeTypedef shift to state 118
-- On TColCol shift to state 128
-- On TChar shift to state 174
-- On TBang shift to state 175
-- On TAny_Action shift to state 202
-- On TAndLog shift to state 176
-- On TAnd shift to state 177
-- On LDots shift to state 178
-- On unqualified_id shift to state 179
-- On unary_op shift to state 180
-- On unary_expr shift to state 181
-- On type_spec shift to state 204
-- On type_name shift to state 182
-- On type_id shift to state 224
-- On type_cplusplus_id shift to state 183
-- On template_id shift to state 120
-- On string_elem shift to state 184
-- On spec_qualif_list shift to state 225
-- On simple_type_specifier shift to state 266
-- On shift_expr shift to state 217
-- On relational_expr shift to state 229
-- On qualified_id shift to state 191
-- On primary_expr shift to state 192
-- On primary_cplusplus_id shift to state 193
-- On postfix_expr shift to state 194
-- On pm_expr shift to state 219
-- On option(TColCol) shift to state 221
-- On operator_function_id shift to state 168
-- On nonempty_list(TAny_Action) shift to state 269
-- On new_expr shift to state 233
-- On nested_name_specifier2 shift to state 207
-- On nested_name_specifier shift to state 165
-- On multiplicative_expr shift to state 234
-- On logical_or_expr shift to state 246
-- On logical_and_expr shift to state 250
-- On literal shift to state 238
-- On listc(argument) shift to state 1004
-- On lambda_introducer shift to state 239
-- On inclusive_or_expr shift to state 272
-- On id_expression shift to state 241
-- On exclusive_or_expr shift to state 273
-- On equality_expr shift to state 256
-- On enum_specifier shift to state 209
-- On enum_name_or_typedef_name_or_simple_class_name shift to state 123
-- On enum_head shift to state 210
-- On elaborated_type_specifier shift to state 274
-- On delete_expr shift to state 242
-- On decltype_specifier shift to state 243
-- On cv_qualif shift to state 275
-- On cpp_cast_operator shift to state 244
-- On conversion_function_id shift to state 169
-- On cond_expr shift to state 330
-- On class_specifier shift to state 277
-- On class_or_namespace_name_for_qualifier2 shift to state 124
-- On class_or_namespace_name_for_qualifier shift to state 170
-- On class_key shift to state 278
-- On class_head shift to state 301
-- On cast_operator_expr shift to state 261
-- On cast_expr shift to state 331
-- On cast_constructor_expr shift to state 263
-- On basic_type_2 shift to state 264
-- On assign_expr shift to state 354
-- On argument shift to state 355
-- On and_expr shift to state 334
-- On additive_expr shift to state 341
## Reductions:
-- On Tnew Tdelete
--   reduce production option(TColCol) ->

State 1004:
## Known stack suffix:
## Tstatic Tconst_MacroDeclConst TIdent_MacroDecl TOPar listc(argument)
## LR(1) items:
listc(argument) -> listc(argument) . TComma argument [ TComma TCPar ]
simple_declaration -> Tstatic Tconst_MacroDeclConst TIdent_MacroDecl TOPar listc(argument) . TCPar TPtVirg [ # ]
## Transitions:
-- On TComma shift to state 271
-- On TCPar shift to state 1005
## Reductions:

State 1005:
## Known stack suffix:
## Tstatic Tconst_MacroDeclConst TIdent_MacroDecl TOPar listc(argument) TCPar
## LR(1) items:
simple_declaration -> Tstatic Tconst_MacroDeclConst TIdent_MacroDecl TOPar listc(argument) TCPar . TPtVirg [ # ]
## Transitions:
-- On TPtVirg shift to state 1006
## Reductions:

State 1006:
## Known stack suffix:
## Tstatic Tconst_MacroDeclConst TIdent_MacroDecl TOPar listc(argument) TCPar TPtVirg
## LR(1) items:
simple_declaration -> Tstatic Tconst_MacroDeclConst TIdent_MacroDecl TOPar listc(argument) TCPar TPtVirg . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, reduce production simple_declaration -> Tstatic Tconst_MacroDeclConst TIdent_MacroDecl TOPar listc(argument) TCPar TPtVirg

State 1007:
## Known stack suffix:
## Tstatic TIdent_MacroDecl
## LR(1) items:
simple_declaration -> Tstatic TIdent_MacroDecl . TOPar listc(argument) TCPar TPtVirg [ # ]
## Transitions:
-- On TOPar shift to state 1008
## Reductions:

State 1008:
## Known stack suffix:
## Tstatic TIdent_MacroDecl TOPar
## LR(1) items:
simple_declaration -> Tstatic TIdent_MacroDecl TOPar . listc(argument) TCPar TPtVirg [ # ]
## Transitions:
-- On Twchar_t_Constr shift to state 14
-- On Twchar_t shift to state 1
-- On Tvolatile shift to state 2
-- On Tvoid shift to state 3
-- On Tunsigned shift to state 15
-- On Tunion shift to state 16
-- On Ttypeof shift to state 17
-- On Ttypename shift to state 19
-- On Ttypeid shift to state 23
-- On Ttrue shift to state 25
-- On Tthrow shift to state 47
-- On Tthis shift to state 26
-- On Tstruct shift to state 27
-- On Tstatic_cast shift to state 28
-- On Tsizeof shift to state 29
-- On Tsigned shift to state 30
-- On Tshort_Constr shift to state 31
-- On Tshort shift to state 32
-- On Trestrict shift to state 65
-- On Treinterpret_cast shift to state 33
-- On Toperator shift to state 34
-- On Tnullptr shift to state 48
-- On Tnull shift to state 49
-- On Tlong_Constr shift to state 50
-- On Tlong shift to state 38
-- On Tint_Constr shift to state 51
-- On Tint shift to state 39
-- On Tfloat_Constr shift to state 52
-- On Tfloat shift to state 40
-- On Tfalse shift to state 53
-- On Tenum shift to state 66
-- On Tdynamic_cast shift to state 54
-- On Tdouble_Constr shift to state 55
-- On Tdouble shift to state 41
-- On Tdecltype shift to state 45
-- On Tconst_cast shift to state 56
-- On Tconst shift to state 76
-- On Tclass shift to state 77
-- On Tchar_Constr shift to state 57
-- On Tchar shift to state 58
-- On Tbool_Constr shift to state 59
-- On Tbool shift to state 60
-- On TTilde shift to state 61
-- On TString shift to state 62
-- On TPlus shift to state 63
-- On TOPar shift to state 64
-- On TOCro_Lambda shift to state 78
-- On TMul shift to state 88
-- On TMinus shift to state 89
-- On TInt shift to state 90
-- On TInc shift to state 91
-- On TIdent_TypedefConstr shift to state 106
-- On TIdent_Typedef shift to state 20
-- On TIdent_TemplatenameInQualifier_BeforeTypedef shift to state 21
-- On TIdent_TemplatenameInQualifier shift to state 12
-- On TIdent_Templatename shift to state 108
-- On TIdent_MacroString shift to state 110
-- On TIdent_ClassnameInQualifier_BeforeTypedef shift to state 111
-- On TIdent_ClassnameInQualifier shift to state 112
-- On TIdent shift to state 113
-- On TFloat shift to state 116
-- On TEllipsis shift to state 201
-- On TDec shift to state 117
-- On TColCol_BeforeTypedef shift to state 118
-- On TColCol shift to state 128
-- On TChar shift to state 174
-- On TBang shift to state 175
-- On TAny_Action shift to state 202
-- On TAndLog shift to state 176
-- On TAnd shift to state 177
-- On LDots shift to state 178
-- On unqualified_id shift to state 179
-- On unary_op shift to state 180
-- On unary_expr shift to state 181
-- On type_spec shift to state 204
-- On type_name shift to state 182
-- On type_id shift to state 224
-- On type_cplusplus_id shift to state 183
-- On template_id shift to state 120
-- On string_elem shift to state 184
-- On spec_qualif_list shift to state 225
-- On simple_type_specifier shift to state 266
-- On shift_expr shift to state 217
-- On relational_expr shift to state 229
-- On qualified_id shift to state 191
-- On primary_expr shift to state 192
-- On primary_cplusplus_id shift to state 193
-- On postfix_expr shift to state 194
-- On pm_expr shift to state 219
-- On option(TColCol) shift to state 221
-- On operator_function_id shift to state 168
-- On nonempty_list(TAny_Action) shift to state 269
-- On new_expr shift to state 233
-- On nested_name_specifier2 shift to state 207
-- On nested_name_specifier shift to state 165
-- On multiplicative_expr shift to state 234
-- On logical_or_expr shift to state 246
-- On logical_and_expr shift to state 250
-- On literal shift to state 238
-- On listc(argument) shift to state 1009
-- On lambda_introducer shift to state 239
-- On inclusive_or_expr shift to state 272
-- On id_expression shift to state 241
-- On exclusive_or_expr shift to state 273
-- On equality_expr shift to state 256
-- On enum_specifier shift to state 209
-- On enum_name_or_typedef_name_or_simple_class_name shift to state 123
-- On enum_head shift to state 210
-- On elaborated_type_specifier shift to state 274
-- On delete_expr shift to state 242
-- On decltype_specifier shift to state 243
-- On cv_qualif shift to state 275
-- On cpp_cast_operator shift to state 244
-- On conversion_function_id shift to state 169
-- On cond_expr shift to state 330
-- On class_specifier shift to state 277
-- On class_or_namespace_name_for_qualifier2 shift to state 124
-- On class_or_namespace_name_for_qualifier shift to state 170
-- On class_key shift to state 278
-- On class_head shift to state 301
-- On cast_operator_expr shift to state 261
-- On cast_expr shift to state 331
-- On cast_constructor_expr shift to state 263
-- On basic_type_2 shift to state 264
-- On assign_expr shift to state 354
-- On argument shift to state 355
-- On and_expr shift to state 334
-- On additive_expr shift to state 341
## Reductions:
-- On Tnew Tdelete
--   reduce production option(TColCol) ->

State 1009:
## Known stack suffix:
## Tstatic TIdent_MacroDecl TOPar listc(argument)
## LR(1) items:
listc(argument) -> listc(argument) . TComma argument [ TComma TCPar ]
simple_declaration -> Tstatic TIdent_MacroDecl TOPar listc(argument) . TCPar TPtVirg [ # ]
## Transitions:
-- On TComma shift to state 271
-- On TCPar shift to state 1010
## Reductions:

State 1010:
## Known stack suffix:
## Tstatic TIdent_MacroDecl TOPar listc(argument) TCPar
## LR(1) items:
simple_declaration -> Tstatic TIdent_MacroDecl TOPar listc(argument) TCPar . TPtVirg [ # ]
## Transitions:
-- On TPtVirg shift to state 1011
## Reductions:

State 1011:
## Known stack suffix:
## Tstatic TIdent_MacroDecl TOPar listc(argument) TCPar TPtVirg
## LR(1) items:
simple_declaration -> Tstatic TIdent_MacroDecl TOPar listc(argument) TCPar TPtVirg . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, reduce production simple_declaration -> Tstatic TIdent_MacroDecl TOPar listc(argument) TCPar TPtVirg

State 1012:
## Known stack suffix:
## Tnamespace
## LR(1) items:
named_namespace_definition -> Tnamespace . TIdent TOBrace optl(nonempty_list(declaration_cpp)) TCBrace [ # ]
namespace_alias_definition -> Tnamespace . TIdent TEq qualified_namespace_spec TPtVirg [ # ]
unnamed_namespace_definition -> Tnamespace . TOBrace optl(nonempty_list(declaration_cpp)) TCBrace [ # ]
## Transitions:
-- On TOBrace shift to state 1013
-- On TIdent shift to state 1016
## Reductions:

State 1013:
## Known stack suffix:
## Tnamespace TOBrace
## LR(1) items:
unnamed_namespace_definition -> Tnamespace TOBrace . optl(nonempty_list(declaration_cpp)) TCBrace [ # ]
## Transitions:
-- On Twchar_t shift to state 1
-- On Tvolatile shift to state 2
-- On Tvoid shift to state 3
-- On Tvirtual shift to state 4
-- On Tusing shift to state 5
-- On Tunsigned shift to state 15
-- On Tunion shift to state 16
-- On Ttypeof shift to state 17
-- On Ttypename shift to state 19
-- On Ttypedef shift to state 96
-- On Tthread_local shift to state 97
-- On Ttemplate shift to state 320
-- On Tstruct shift to state 27
-- On Tstatic shift to state 323
-- On Tsigned shift to state 30
-- On Tshort shift to state 32
-- On Trestrict shift to state 65
-- On Tregister shift to state 99
-- On Tnamespace shift to state 361
-- On Tmutable shift to state 100
-- On Tlong shift to state 38
-- On Tint shift to state 39
-- On Tinline shift to state 363
-- On Tfriend shift to state 102
-- On Tfloat shift to state 40
-- On Textern shift to state 364
-- On Tenum shift to state 66
-- On Tdouble shift to state 41
-- On Tdecltype shift to state 45
-- On Tconstexpr shift to state 104
-- On Tconst shift to state 76
-- On Tclass shift to state 77
-- On Tchar shift to state 58
-- On Tbool shift to state 60
-- On Tauto shift to state 105
-- On Tasm shift to state 366
-- On TUndef shift to state 415
-- On TTilde shift to state 395
-- On TPtVirg shift to state 413
-- On TInclude shift to state 416
-- On TIfdefelse shift to state 417
-- On TIfdefelif shift to state 418
-- On TIfdefVersion shift to state 419
-- On TIfdefMisc shift to state 420
-- On TIfdefBool shift to state 421
-- On TIfdef shift to state 422
-- On TIdent_Typedef shift to state 20
-- On TIdent_TemplatenameInQualifier_BeforeTypedef shift to state 21
-- On TIdent_TemplatenameInQualifier shift to state 12
-- On TIdent_Templatename shift to state 108
-- On TIdent_MacroDecl shift to state 423
-- On TIdent_ClassnameInQualifier_BeforeTypedef shift to state 111
-- On TIdent_ClassnameInQualifier shift to state 112
-- On TEndif shift to state 428
-- On TDefine shift to state 429
-- On TCppDirectiveOther shift to state 691
-- On TColCol_BeforeTypedef shift to state 118
-- On using_directive shift to state 581
-- On using_declaration shift to state 582
-- On unnamed_namespace_definition shift to state 692
-- On type_spec shift to state 314
-- On type_name shift to state 182
-- On type_cplusplus_id shift to state 183
-- On template_id shift to state 120
-- On template_declaration shift to state 693
-- On storage_class_spec shift to state 316
-- On simple_type_specifier shift to state 206
-- On simple_declaration shift to state 585
-- On optl(nonempty_list(declaration_cpp)) shift to state 1014
-- On option(Tinline) shift to state 696
-- On nonempty_list(declaration_cpp) shift to state 715
-- On nested_name_specifier2 shift to state 207
-- On nested_name_specifier shift to state 716
-- On namespace_definition shift to state 729
-- On namespace_alias_definition shift to state 587
-- On named_namespace_definition shift to state 730
-- On linkage_specification shift to state 731
-- On function_spec shift to state 437
-- On function_definition shift to state 732
-- On explicit_specialization shift to state 733
-- On enum_specifier shift to state 209
-- On enum_name_or_typedef_name_or_simple_class_name shift to state 123
-- On enum_head shift to state 210
-- On elaborated_type_specifier shift to state 274
-- On decltype_specifier shift to state 243
-- On declaration_cpp shift to state 734
-- On declaration shift to state 736
-- On decl_spec_seq shift to state 599
-- On decl_spec shift to state 473
-- On cv_qualif shift to state 475
-- On ctor_dtor shift to state 737
-- On cpp_ifdef_directive shift to state 738
-- On cpp_directive shift to state 739
-- On class_specifier shift to state 277
-- On class_or_namespace_name_for_qualifier2 shift to state 124
-- On class_or_namespace_name_for_qualifier shift to state 170
-- On class_key shift to state 278
-- On class_head shift to state 301
-- On block_declaration shift to state 740
-- On asm_definition shift to state 617
## Reductions:
-- On TIdent_Constructor
--   reduce production option(Tinline) ->
-- On TCBrace
--   reduce production optl(nonempty_list(declaration_cpp)) ->

State 1014:
## Known stack suffix:
## Tnamespace TOBrace optl(nonempty_list(declaration_cpp))
## LR(1) items:
unnamed_namespace_definition -> Tnamespace TOBrace optl(nonempty_list(declaration_cpp)) . TCBrace [ # ]
## Transitions:
-- On TCBrace shift to state 1015
## Reductions:

State 1015:
## Known stack suffix:
## Tnamespace TOBrace optl(nonempty_list(declaration_cpp)) TCBrace
## LR(1) items:
unnamed_namespace_definition -> Tnamespace TOBrace optl(nonempty_list(declaration_cpp)) TCBrace . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, reduce production unnamed_namespace_definition -> Tnamespace TOBrace optl(nonempty_list(declaration_cpp)) TCBrace

State 1016:
## Known stack suffix:
## Tnamespace TIdent
## LR(1) items:
named_namespace_definition -> Tnamespace TIdent . TOBrace optl(nonempty_list(declaration_cpp)) TCBrace [ # ]
namespace_alias_definition -> Tnamespace TIdent . TEq qualified_namespace_spec TPtVirg [ # ]
## Transitions:
-- On TOBrace shift to state 1017
-- On TEq shift to state 1020
## Reductions:

State 1017:
## Known stack suffix:
## Tnamespace TIdent TOBrace
## LR(1) items:
named_namespace_definition -> Tnamespace TIdent TOBrace . optl(nonempty_list(declaration_cpp)) TCBrace [ # ]
## Transitions:
-- On Twchar_t shift to state 1
-- On Tvolatile shift to state 2
-- On Tvoid shift to state 3
-- On Tvirtual shift to state 4
-- On Tusing shift to state 5
-- On Tunsigned shift to state 15
-- On Tunion shift to state 16
-- On Ttypeof shift to state 17
-- On Ttypename shift to state 19
-- On Ttypedef shift to state 96
-- On Tthread_local shift to state 97
-- On Ttemplate shift to state 320
-- On Tstruct shift to state 27
-- On Tstatic shift to state 323
-- On Tsigned shift to state 30
-- On Tshort shift to state 32
-- On Trestrict shift to state 65
-- On Tregister shift to state 99
-- On Tnamespace shift to state 361
-- On Tmutable shift to state 100
-- On Tlong shift to state 38
-- On Tint shift to state 39
-- On Tinline shift to state 363
-- On Tfriend shift to state 102
-- On Tfloat shift to state 40
-- On Textern shift to state 364
-- On Tenum shift to state 66
-- On Tdouble shift to state 41
-- On Tdecltype shift to state 45
-- On Tconstexpr shift to state 104
-- On Tconst shift to state 76
-- On Tclass shift to state 77
-- On Tchar shift to state 58
-- On Tbool shift to state 60
-- On Tauto shift to state 105
-- On Tasm shift to state 366
-- On TUndef shift to state 415
-- On TTilde shift to state 395
-- On TPtVirg shift to state 413
-- On TInclude shift to state 416
-- On TIfdefelse shift to state 417
-- On TIfdefelif shift to state 418
-- On TIfdefVersion shift to state 419
-- On TIfdefMisc shift to state 420
-- On TIfdefBool shift to state 421
-- On TIfdef shift to state 422
-- On TIdent_Typedef shift to state 20
-- On TIdent_TemplatenameInQualifier_BeforeTypedef shift to state 21
-- On TIdent_TemplatenameInQualifier shift to state 12
-- On TIdent_Templatename shift to state 108
-- On TIdent_MacroDecl shift to state 423
-- On TIdent_ClassnameInQualifier_BeforeTypedef shift to state 111
-- On TIdent_ClassnameInQualifier shift to state 112
-- On TEndif shift to state 428
-- On TDefine shift to state 429
-- On TCppDirectiveOther shift to state 691
-- On TColCol_BeforeTypedef shift to state 118
-- On using_directive shift to state 581
-- On using_declaration shift to state 582
-- On unnamed_namespace_definition shift to state 692
-- On type_spec shift to state 314
-- On type_name shift to state 182
-- On type_cplusplus_id shift to state 183
-- On template_id shift to state 120
-- On template_declaration shift to state 693
-- On storage_class_spec shift to state 316
-- On simple_type_specifier shift to state 206
-- On simple_declaration shift to state 585
-- On optl(nonempty_list(declaration_cpp)) shift to state 1018
-- On option(Tinline) shift to state 696
-- On nonempty_list(declaration_cpp) shift to state 715
-- On nested_name_specifier2 shift to state 207
-- On nested_name_specifier shift to state 716
-- On namespace_definition shift to state 729
-- On namespace_alias_definition shift to state 587
-- On named_namespace_definition shift to state 730
-- On linkage_specification shift to state 731
-- On function_spec shift to state 437
-- On function_definition shift to state 732
-- On explicit_specialization shift to state 733
-- On enum_specifier shift to state 209
-- On enum_name_or_typedef_name_or_simple_class_name shift to state 123
-- On enum_head shift to state 210
-- On elaborated_type_specifier shift to state 274
-- On decltype_specifier shift to state 243
-- On declaration_cpp shift to state 734
-- On declaration shift to state 736
-- On decl_spec_seq shift to state 599
-- On decl_spec shift to state 473
-- On cv_qualif shift to state 475
-- On ctor_dtor shift to state 737
-- On cpp_ifdef_directive shift to state 738
-- On cpp_directive shift to state 739
-- On class_specifier shift to state 277
-- On class_or_namespace_name_for_qualifier2 shift to state 124
-- On class_or_namespace_name_for_qualifier shift to state 170
-- On class_key shift to state 278
-- On class_head shift to state 301
-- On block_declaration shift to state 740
-- On asm_definition shift to state 617
## Reductions:
-- On TIdent_Constructor
--   reduce production option(Tinline) ->
-- On TCBrace
--   reduce production optl(nonempty_list(declaration_cpp)) ->

State 1018:
## Known stack suffix:
## Tnamespace TIdent TOBrace optl(nonempty_list(declaration_cpp))
## LR(1) items:
named_namespace_definition -> Tnamespace TIdent TOBrace optl(nonempty_list(declaration_cpp)) . TCBrace [ # ]
## Transitions:
-- On TCBrace shift to state 1019
## Reductions:

State 1019:
## Known stack suffix:
## Tnamespace TIdent TOBrace optl(nonempty_list(declaration_cpp)) TCBrace
## LR(1) items:
named_namespace_definition -> Tnamespace TIdent TOBrace optl(nonempty_list(declaration_cpp)) TCBrace . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, reduce production named_namespace_definition -> Tnamespace TIdent TOBrace optl(nonempty_list(declaration_cpp)) TCBrace

State 1020:
## Known stack suffix:
## Tnamespace TIdent TEq
## LR(1) items:
namespace_alias_definition -> Tnamespace TIdent TEq . qualified_namespace_spec TPtVirg [ # ]
## Transitions:
-- On TColCol shift to state 8
-- On qualified_namespace_spec shift to state 1021
-- On option(TColCol) shift to state 11
## Reductions:
-- On TIdent_TemplatenameInQualifier TIdent_ClassnameInQualifier TIdent
--   reduce production option(TColCol) ->

State 1021:
## Known stack suffix:
## Tnamespace TIdent TEq qualified_namespace_spec
## LR(1) items:
namespace_alias_definition -> Tnamespace TIdent TEq qualified_namespace_spec . TPtVirg [ # ]
## Transitions:
-- On TPtVirg shift to state 1022
## Reductions:

State 1022:
## Known stack suffix:
## Tnamespace TIdent TEq qualified_namespace_spec TPtVirg
## LR(1) items:
namespace_alias_definition -> Tnamespace TIdent TEq qualified_namespace_spec TPtVirg . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, reduce production namespace_alias_definition -> Tnamespace TIdent TEq qualified_namespace_spec TPtVirg

State 1023:
## Known stack suffix:
## Textern
## LR(1) items:
linkage_specification -> Textern . TString declaration [ # ]
linkage_specification -> Textern . TString TOBrace optl(nonempty_list(declaration_cpp)) TCBrace [ # ]
storage_class_spec -> Textern . [ Twchar_t Tvolatile Tvoid Tvirtual Tunsigned Tunion Ttypeof Ttypename Ttypedef Tthread_local Tstruct Tstatic Tsigned Tshort Trestrict Tregister Toperator Tmutable Tlong Tint Tinline Tfriend Tfloat Textern Tenum Tdouble Tdecltype Tconstexpr Tconst Tclass Tchar Tbool Tauto TPtVirg TOPar TMul TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TIdent TColCol_BeforeTypedef TColCol TAndLog TAnd ]
## Transitions:
-- On TString shift to state 1024
## Reductions:
-- On Twchar_t Tvolatile Tvoid Tvirtual Tunsigned Tunion Ttypeof Ttypename Ttypedef Tthread_local Tstruct Tstatic Tsigned Tshort Trestrict Tregister Toperator Tmutable Tlong Tint Tinline Tfriend Tfloat Textern Tenum Tdouble Tdecltype Tconstexpr Tconst Tclass Tchar Tbool Tauto TPtVirg TOPar TMul TIdent_Typedef TIdent_TemplatenameInQualifier_BeforeTypedef TIdent_TemplatenameInQualifier TIdent_Templatename TIdent_ClassnameInQualifier_BeforeTypedef TIdent_ClassnameInQualifier TIdent TColCol_BeforeTypedef TColCol TAndLog TAnd
--   reduce production storage_class_spec -> Textern

State 1024:
## Known stack suffix:
## Textern TString
## LR(1) items:
linkage_specification -> Textern TString . declaration [ # ]
linkage_specification -> Textern TString . TOBrace optl(nonempty_list(declaration_cpp)) TCBrace [ # ]
## Transitions:
-- On Twchar_t shift to state 1
-- On Tvolatile shift to state 2
-- On Tvoid shift to state 3
-- On Tvirtual shift to state 4
-- On Tusing shift to state 986
-- On Tunsigned shift to state 15
-- On Tunion shift to state 16
-- On Ttypeof shift to state 17
-- On Ttypename shift to state 19
-- On Ttypedef shift to state 96
-- On Tthread_local shift to state 97
-- On Ttemplate shift to state 997
-- On Tstruct shift to state 27
-- On Tstatic shift to state 1000
-- On Tsigned shift to state 30
-- On Tshort shift to state 32
-- On Trestrict shift to state 65
-- On Tregister shift to state 99
-- On Tnamespace shift to state 1012
-- On Tmutable shift to state 100
-- On Tlong shift to state 38
-- On Tint shift to state 39
-- On Tinline shift to state 363
-- On Tfriend shift to state 102
-- On Tfloat shift to state 40
-- On Textern shift to state 1023
-- On Tenum shift to state 66
-- On Tdouble shift to state 41
-- On Tdecltype shift to state 45
-- On Tconstexpr shift to state 104
-- On Tconst shift to state 76
-- On Tclass shift to state 77
-- On Tchar shift to state 58
-- On Tbool shift to state 60
-- On Tauto shift to state 105
-- On Tasm shift to state 1025
-- On TTilde shift to state 1031
-- On TPtVirg shift to state 1041
-- On TOBrace shift to state 1042
-- On TIdent_Typedef shift to state 20
-- On TIdent_TemplatenameInQualifier_BeforeTypedef shift to state 21
-- On TIdent_TemplatenameInQualifier shift to state 12
-- On TIdent_Templatename shift to state 108
-- On TIdent_MacroDecl shift to state 1045
-- On TIdent_ClassnameInQualifier_BeforeTypedef shift to state 111
-- On TIdent_ClassnameInQualifier shift to state 112
-- On TColCol_BeforeTypedef shift to state 118
-- On using_directive shift to state 1050
-- On using_declaration shift to state 1051
-- On unnamed_namespace_definition shift to state 1052
-- On type_spec shift to state 314
-- On type_name shift to state 182
-- On type_cplusplus_id shift to state 183
-- On template_id shift to state 120
-- On template_declaration shift to state 1053
-- On storage_class_spec shift to state 316
-- On simple_type_specifier shift to state 206
-- On simple_declaration shift to state 1054
-- On option(Tinline) shift to state 1055
-- On nested_name_specifier2 shift to state 207
-- On nested_name_specifier shift to state 1062
-- On namespace_definition shift to state 1075
-- On namespace_alias_definition shift to state 1076
-- On named_namespace_definition shift to state 1077
-- On linkage_specification shift to state 1078
-- On function_spec shift to state 437
-- On function_definition shift to state 1079
-- On explicit_specialization shift to state 1080
-- On enum_specifier shift to state 209
-- On enum_name_or_typedef_name_or_simple_class_name shift to state 123
-- On enum_head shift to state 210
-- On elaborated_type_specifier shift to state 274
-- On decltype_specifier shift to state 243
-- On declaration shift to state 1081
-- On decl_spec_seq shift to state 1082
-- On decl_spec shift to state 473
-- On cv_qualif shift to state 475
-- On ctor_dtor shift to state 1089
-- On class_specifier shift to state 277
-- On class_or_namespace_name_for_qualifier2 shift to state 124
-- On class_or_namespace_name_for_qualifier shift to state 170
-- On class_key shift to state 278
-- On class_head shift to state 301
-- On block_declaration shift to state 1090
-- On asm_definition shift to state 1091
## Reductions:
-- On TIdent_Constructor
--   reduce production option(Tinline) ->

State 1025:
## Known stack suffix:
## Tasm
## LR(1) items:
asm_definition -> Tasm . option(Tvolatile) TOPar asmbody TCPar TPtVirg [ # ]
## Transitions:
-- On Tvolatile shift to state 367
-- On option(Tvolatile) shift to state 1026
## Reductions:
-- On TOPar
--   reduce production option(Tvolatile) ->

State 1026:
## Known stack suffix:
## Tasm option(Tvolatile)
## LR(1) items:
asm_definition -> Tasm option(Tvolatile) . TOPar asmbody TCPar TPtVirg [ # ]
## Transitions:
-- On TOPar shift to state 1027
## Reductions:

State 1027:
## Known stack suffix:
## Tasm option(Tvolatile) TOPar
## LR(1) items:
asm_definition -> Tasm option(Tvolatile) TOPar . asmbody TCPar TPtVirg [ # ]
## Transitions:
-- On TString shift to state 185
-- On TIdent_MacroString shift to state 110
-- On string_elem shift to state 186
-- On nonempty_list(string_elem) shift to state 370
-- On asmbody shift to state 1028
## Reductions:

State 1028:
## Known stack suffix:
## Tasm option(Tvolatile) TOPar asmbody
## LR(1) items:
asm_definition -> Tasm option(Tvolatile) TOPar asmbody . TCPar TPtVirg [ # ]
## Transitions:
-- On TCPar shift to state 1029
## Reductions:

State 1029:
## Known stack suffix:
## Tasm option(Tvolatile) TOPar asmbody TCPar
## LR(1) items:
asm_definition -> Tasm option(Tvolatile) TOPar asmbody TCPar . TPtVirg [ # ]
## Transitions:
-- On TPtVirg shift to state 1030
## Reductions:

State 1030:
## Known stack suffix:
## Tasm option(Tvolatile) TOPar asmbody TCPar TPtVirg
## LR(1) items:
asm_definition -> Tasm option(Tvolatile) TOPar asmbody TCPar TPtVirg . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, reduce production asm_definition -> Tasm option(Tvolatile) TOPar asmbody TCPar TPtVirg

State 1031:
## Known stack suffix:
## TTilde
## LR(1) items:
ctor_dtor -> TTilde . ident TOPar option(Tvoid) TCPar option(exn_spec) compound [ # ]
## Transitions:
-- On TIdent_Typedef shift to state 68
-- On TIdent shift to state 69
-- On ident shift to state 1032
## Reductions:

State 1032:
## Known stack suffix:
## TTilde ident
## LR(1) items:
ctor_dtor -> TTilde ident . TOPar option(Tvoid) TCPar option(exn_spec) compound [ # ]
## Transitions:
-- On TOPar shift to state 1033
## Reductions:

State 1033:
## Known stack suffix:
## TTilde ident TOPar
## LR(1) items:
ctor_dtor -> TTilde ident TOPar . option(Tvoid) TCPar option(exn_spec) compound [ # ]
## Transitions:
-- On Tvoid shift to state 398
-- On option(Tvoid) shift to state 1034
## Reductions:
-- On TCPar
--   reduce production option(Tvoid) ->

State 1034:
## Known stack suffix:
## TTilde ident TOPar option(Tvoid)
## LR(1) items:
ctor_dtor -> TTilde ident TOPar option(Tvoid) . TCPar option(exn_spec) compound [ # ]
## Transitions:
-- On TCPar shift to state 1035
## Reductions:

State 1035:
## Known stack suffix:
## TTilde ident TOPar option(Tvoid) TCPar
## LR(1) items:
ctor_dtor -> TTilde ident TOPar option(Tvoid) TCPar . option(exn_spec) compound [ # ]
## Transitions:
-- On Tthrow shift to state 401
-- On option(exn_spec) shift to state 1036
-- On exn_spec shift to state 412
## Reductions:
-- On TOBrace
--   reduce production option(exn_spec) ->

State 1036:
## Known stack suffix:
## TTilde ident TOPar option(Tvoid) TCPar option(exn_spec)
## LR(1) items:
ctor_dtor -> TTilde ident TOPar option(Tvoid) TCPar option(exn_spec) . compound [ # ]
## Transitions:
-- On TOBrace shift to state 1037
-- On compound shift to state 1040
## Reductions:

State 1037:
## Known stack suffix:
## TOBrace
## LR(1) items:
compound -> TOBrace . list(statement_cpp) TCBrace [ # ]
## Transitions:
-- On Twhile shift to state 94
-- On Twchar_t_Constr shift to state 14
-- On Twchar_t shift to state 1
-- On Tvolatile shift to state 2
-- On Tvoid shift to state 3
-- On Tvirtual shift to state 4
-- On Tusing shift to state 5
-- On Tunsigned shift to state 15
-- On Tunion shift to state 16
-- On Ttypeof shift to state 17
-- On Ttypename shift to state 19
-- On Ttypeid shift to state 23
-- On Ttypedef shift to state 96
-- On Ttry shift to state 431
-- On Ttrue shift to state 25
-- On Tthrow shift to state 47
-- On Tthread_local shift to state 97
-- On Tthis shift to state 26
-- On Tswitch shift to state 515
-- On Tstruct shift to state 27
-- On Tstatic_cast shift to state 28
-- On Tstatic shift to state 323
-- On Tsizeof shift to state 29
-- On Tsigned shift to state 30
-- On Tshort_Constr shift to state 31
-- On Tshort shift to state 32
-- On Treturn shift to state 537
-- On Trestrict shift to state 65
-- On Treinterpret_cast shift to state 33
-- On Tregister shift to state 99
-- On Toperator shift to state 34
-- On Tnullptr shift to state 48
-- On Tnull shift to state 49
-- On Tnamespace shift to state 540
-- On Tmutable shift to state 100
-- On Tlong_Constr shift to state 50
-- On Tlong shift to state 38
-- On Tint_Constr shift to state 51
-- On Tint shift to state 39
-- On Tinline shift to state 101
-- On Tif shift to state 545
-- On Tgoto shift to state 549
-- On Tfriend shift to state 102
-- On Tfor shift to state 553
-- On Tfloat_Constr shift to state 52
-- On Tfloat shift to state 40
-- On Tfalse shift to state 53
-- On Textern shift to state 103
-- On Tenum shift to state 66
-- On Tdynamic_cast shift to state 54
-- On Tdouble_Constr shift to state 55
-- On Tdouble shift to state 41
-- On Tdo shift to state 562
-- On Tdefault shift to state 563
-- On Tdecltype shift to state 45
-- On Tcontinue shift to state 565
-- On Tconstexpr shift to state 104
-- On Tconst_cast shift to state 56
-- On Tconst shift to state 76
-- On Tclass shift to state 77
-- On Tchar_Constr shift to state 57
-- On Tchar shift to state 58
-- On Tcase shift to state 566
-- On Tbreak shift to state 571
-- On Tbool_Constr shift to state 59
-- On Tbool shift to state 60
-- On Tauto shift to state 105
-- On Tasm shift to state 366
-- On TUndef shift to state 415
-- On TTilde shift to state 61
-- On TString shift to state 62
-- On TPlus shift to state 63
-- On TOPar shift to state 64
-- On TOCro_Lambda shift to state 78
-- On TOBrace shift to state 93
-- On TMul shift to state 88
-- On TMinus shift to state 89
-- On TInt shift to state 90
-- On TInclude shift to state 416
-- On TInc shift to state 91
-- On TIfdefelse shift to state 417
-- On TIfdefelif shift to state 418
-- On TIfdefVersion shift to state 419
-- On TIfdefMisc shift to state 420
-- On TIfdefBool shift to state 421
-- On TIfdef shift to state 422
-- On TIdent_TypedefConstr shift to state 106
-- On TIdent_Typedef shift to state 572
-- On TIdent_TemplatenameInQualifier_BeforeTypedef shift to state 21
-- On TIdent_TemplatenameInQualifier shift to state 12
-- On TIdent_Templatename shift to state 108
-- On TIdent_MacroString shift to state 110
-- On TIdent_MacroStmt shift to state 573
-- On TIdent_MacroIterator shift to state 574
-- On TIdent_MacroDecl shift to state 423
-- On TIdent_ClassnameInQualifier_BeforeTypedef shift to state 111
-- On TIdent_ClassnameInQualifier shift to state 112
-- On TIdent shift to state 578
-- On TFloat shift to state 116
-- On TEndif shift to state 428
-- On TEllipsis shift to state 580
-- On TDefine shift to state 429
-- On TDec shift to state 117
-- On TCppDirectiveOther shift to state 691
-- On TColCol_BeforeTypedef shift to state 118
-- On TColCol shift to state 128
-- On TChar shift to state 174
-- On TBang shift to state 175
-- On TAndLog shift to state 176
-- On TAnd shift to state 177
-- On LDots shift to state 178
-- On using_directive shift to state 581
-- On using_declaration shift to state 582
-- On unqualified_id shift to state 179
-- On unary_op shift to state 180
-- On unary_expr shift to state 181
-- On type_spec shift to state 314
-- On type_name shift to state 182
-- On type_cplusplus_id shift to state 183
-- On try_block shift to state 583
-- On template_id shift to state 120
-- On string_elem shift to state 184
-- On storage_class_spec shift to state 316
-- On statement_cpp shift to state 904
-- On statement shift to state 905
-- On simple_type_specifier shift to state 266
-- On simple_declaration shift to state 585
-- On shift_expr shift to state 217
-- On selection shift to state 586
-- On relational_expr shift to state 229
-- On qualified_id shift to state 191
-- On primary_expr shift to state 192
-- On primary_cplusplus_id shift to state 193
-- On postfix_expr shift to state 194
-- On pm_expr shift to state 219
-- On option(expr) shift to state 556
-- On option(TColCol) shift to state 221
-- On operator_function_id shift to state 168
-- On new_expr shift to state 233
-- On nested_name_specifier2 shift to state 207
-- On nested_name_specifier shift to state 165
-- On namespace_alias_definition shift to state 587
-- On multiplicative_expr shift to state 234
-- On logical_or_expr shift to state 246
-- On logical_and_expr shift to state 250
-- On literal shift to state 238
-- On list(statement_cpp) shift to state 1038
-- On lambda_introducer shift to state 239
-- On labeled shift to state 588
-- On jump shift to state 589
-- On iteration shift to state 591
-- On inclusive_or_expr shift to state 272
-- On ident shift to state 592
-- On id_expression shift to state 241
-- On function_spec shift to state 437
-- On function_definition shift to state 595
-- On expr_statement shift to state 596
-- On expr shift to state 597
-- On exclusive_or_expr shift to state 273
-- On equality_expr shift to state 256
-- On enum_specifier shift to state 209
-- On enum_name_or_typedef_name_or_simple_class_name shift to state 123
-- On enum_head shift to state 210
-- On elaborated_type_specifier shift to state 274
-- On delete_expr shift to state 242
-- On decltype_specifier shift to state 243
-- On declaration_statement shift to state 598
-- On decl_spec_seq shift to state 599
-- On decl_spec shift to state 473
-- On cv_qualif shift to state 475
-- On cpp_ifdef_directive shift to state 907
-- On cpp_directive shift to state 908
-- On cpp_cast_operator shift to state 244
-- On conversion_function_id shift to state 169
-- On cond_expr shift to state 330
-- On compound shift to state 615
-- On class_specifier shift to state 277
-- On class_or_namespace_name_for_qualifier2 shift to state 124
-- On class_or_namespace_name_for_qualifier shift to state 170
-- On class_key shift to state 278
-- On class_head shift to state 301
-- On cast_operator_expr shift to state 261
-- On cast_expr shift to state 331
-- On cast_constructor_expr shift to state 263
-- On block_declaration shift to state 616
-- On basic_type_2 shift to state 264
-- On assign_expr shift to state 539
-- On asm_definition shift to state 617
-- On and_expr shift to state 334
-- On additive_expr shift to state 341
## Reductions:
-- On TCBrace
--   reduce production list(statement_cpp) ->
-- On Tnew Tdelete
--   reduce production option(TColCol) ->
-- On TPtVirg
--   reduce production option(expr) ->

State 1038:
## Known stack suffix:
## TOBrace list(statement_cpp)
## LR(1) items:
compound -> TOBrace list(statement_cpp) . TCBrace [ # ]
## Transitions:
-- On TCBrace shift to state 1039
## Reductions:

State 1039:
## Known stack suffix:
## TOBrace list(statement_cpp) TCBrace
## LR(1) items:
compound -> TOBrace list(statement_cpp) TCBrace . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, reduce production compound -> TOBrace list(statement_cpp) TCBrace

State 1040:
## Known stack suffix:
## TTilde ident TOPar option(Tvoid) TCPar option(exn_spec) compound
## LR(1) items:
ctor_dtor -> TTilde ident TOPar option(Tvoid) TCPar option(exn_spec) compound . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, reduce production ctor_dtor -> TTilde ident TOPar option(Tvoid) TCPar option(exn_spec) compound

State 1041:
## Known stack suffix:
## TPtVirg
## LR(1) items:
declaration -> TPtVirg . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, reduce production declaration -> TPtVirg

State 1042:
## Known stack suffix:
## Textern TString TOBrace
## LR(1) items:
linkage_specification -> Textern TString TOBrace . optl(nonempty_list(declaration_cpp)) TCBrace [ # ]
## Transitions:
-- On Twchar_t shift to state 1
-- On Tvolatile shift to state 2
-- On Tvoid shift to state 3
-- On Tvirtual shift to state 4
-- On Tusing shift to state 5
-- On Tunsigned shift to state 15
-- On Tunion shift to state 16
-- On Ttypeof shift to state 17
-- On Ttypename shift to state 19
-- On Ttypedef shift to state 96
-- On Tthread_local shift to state 97
-- On Ttemplate shift to state 320
-- On Tstruct shift to state 27
-- On Tstatic shift to state 323
-- On Tsigned shift to state 30
-- On Tshort shift to state 32
-- On Trestrict shift to state 65
-- On Tregister shift to state 99
-- On Tnamespace shift to state 361
-- On Tmutable shift to state 100
-- On Tlong shift to state 38
-- On Tint shift to state 39
-- On Tinline shift to state 363
-- On Tfriend shift to state 102
-- On Tfloat shift to state 40
-- On Textern shift to state 364
-- On Tenum shift to state 66
-- On Tdouble shift to state 41
-- On Tdecltype shift to state 45
-- On Tconstexpr shift to state 104
-- On Tconst shift to state 76
-- On Tclass shift to state 77
-- On Tchar shift to state 58
-- On Tbool shift to state 60
-- On Tauto shift to state 105
-- On Tasm shift to state 366
-- On TUndef shift to state 415
-- On TTilde shift to state 395
-- On TPtVirg shift to state 413
-- On TInclude shift to state 416
-- On TIfdefelse shift to state 417
-- On TIfdefelif shift to state 418
-- On TIfdefVersion shift to state 419
-- On TIfdefMisc shift to state 420
-- On TIfdefBool shift to state 421
-- On TIfdef shift to state 422
-- On TIdent_Typedef shift to state 20
-- On TIdent_TemplatenameInQualifier_BeforeTypedef shift to state 21
-- On TIdent_TemplatenameInQualifier shift to state 12
-- On TIdent_Templatename shift to state 108
-- On TIdent_MacroDecl shift to state 423
-- On TIdent_ClassnameInQualifier_BeforeTypedef shift to state 111
-- On TIdent_ClassnameInQualifier shift to state 112
-- On TEndif shift to state 428
-- On TDefine shift to state 429
-- On TCppDirectiveOther shift to state 691
-- On TColCol_BeforeTypedef shift to state 118
-- On using_directive shift to state 581
-- On using_declaration shift to state 582
-- On unnamed_namespace_definition shift to state 692
-- On type_spec shift to state 314
-- On type_name shift to state 182
-- On type_cplusplus_id shift to state 183
-- On template_id shift to state 120
-- On template_declaration shift to state 693
-- On storage_class_spec shift to state 316
-- On simple_type_specifier shift to state 206
-- On simple_declaration shift to state 585
-- On optl(nonempty_list(declaration_cpp)) shift to state 1043
-- On option(Tinline) shift to state 696
-- On nonempty_list(declaration_cpp) shift to state 715
-- On nested_name_specifier2 shift to state 207
-- On nested_name_specifier shift to state 716
-- On namespace_definition shift to state 729
-- On namespace_alias_definition shift to state 587
-- On named_namespace_definition shift to state 730
-- On linkage_specification shift to state 731
-- On function_spec shift to state 437
-- On function_definition shift to state 732
-- On explicit_specialization shift to state 733
-- On enum_specifier shift to state 209
-- On enum_name_or_typedef_name_or_simple_class_name shift to state 123
-- On enum_head shift to state 210
-- On elaborated_type_specifier shift to state 274
-- On decltype_specifier shift to state 243
-- On declaration_cpp shift to state 734
-- On declaration shift to state 736
-- On decl_spec_seq shift to state 599
-- On decl_spec shift to state 473
-- On cv_qualif shift to state 475
-- On ctor_dtor shift to state 737
-- On cpp_ifdef_directive shift to state 738
-- On cpp_directive shift to state 739
-- On class_specifier shift to state 277
-- On class_or_namespace_name_for_qualifier2 shift to state 124
-- On class_or_namespace_name_for_qualifier shift to state 170
-- On class_key shift to state 278
-- On class_head shift to state 301
-- On block_declaration shift to state 740
-- On asm_definition shift to state 617
## Reductions:
-- On TIdent_Constructor
--   reduce production option(Tinline) ->
-- On TCBrace
--   reduce production optl(nonempty_list(declaration_cpp)) ->

State 1043:
## Known stack suffix:
## Textern TString TOBrace optl(nonempty_list(declaration_cpp))
## LR(1) items:
linkage_specification -> Textern TString TOBrace optl(nonempty_list(declaration_cpp)) . TCBrace [ # ]
## Transitions:
-- On TCBrace shift to state 1044
## Reductions:

State 1044:
## Known stack suffix:
## Textern TString TOBrace optl(nonempty_list(declaration_cpp)) TCBrace
## LR(1) items:
linkage_specification -> Textern TString TOBrace optl(nonempty_list(declaration_cpp)) TCBrace . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, reduce production linkage_specification -> Textern TString TOBrace optl(nonempty_list(declaration_cpp)) TCBrace

State 1045:
## Known stack suffix:
## TIdent_MacroDecl
## LR(1) items:
simple_declaration -> TIdent_MacroDecl . TOPar listc(argument) TCPar TPtVirg [ # ]
## Transitions:
-- On TOPar shift to state 1046
## Reductions:

State 1046:
## Known stack suffix:
## TIdent_MacroDecl TOPar
## LR(1) items:
simple_declaration -> TIdent_MacroDecl TOPar . listc(argument) TCPar TPtVirg [ # ]
## Transitions:
-- On Twchar_t_Constr shift to state 14
-- On Twchar_t shift to state 1
-- On Tvolatile shift to state 2
-- On Tvoid shift to state 3
-- On Tunsigned shift to state 15
-- On Tunion shift to state 16
-- On Ttypeof shift to state 17
-- On Ttypename shift to state 19
-- On Ttypeid shift to state 23
-- On Ttrue shift to state 25
-- On Tthrow shift to state 47
-- On Tthis shift to state 26
-- On Tstruct shift to state 27
-- On Tstatic_cast shift to state 28
-- On Tsizeof shift to state 29
-- On Tsigned shift to state 30
-- On Tshort_Constr shift to state 31
-- On Tshort shift to state 32
-- On Trestrict shift to state 65
-- On Treinterpret_cast shift to state 33
-- On Toperator shift to state 34
-- On Tnullptr shift to state 48
-- On Tnull shift to state 49
-- On Tlong_Constr shift to state 50
-- On Tlong shift to state 38
-- On Tint_Constr shift to state 51
-- On Tint shift to state 39
-- On Tfloat_Constr shift to state 52
-- On Tfloat shift to state 40
-- On Tfalse shift to state 53
-- On Tenum shift to state 66
-- On Tdynamic_cast shift to state 54
-- On Tdouble_Constr shift to state 55
-- On Tdouble shift to state 41
-- On Tdecltype shift to state 45
-- On Tconst_cast shift to state 56
-- On Tconst shift to state 76
-- On Tclass shift to state 77
-- On Tchar_Constr shift to state 57
-- On Tchar shift to state 58
-- On Tbool_Constr shift to state 59
-- On Tbool shift to state 60
-- On TTilde shift to state 61
-- On TString shift to state 62
-- On TPlus shift to state 63
-- On TOPar shift to state 64
-- On TOCro_Lambda shift to state 78
-- On TMul shift to state 88
-- On TMinus shift to state 89
-- On TInt shift to state 90
-- On TInc shift to state 91
-- On TIdent_TypedefConstr shift to state 106
-- On TIdent_Typedef shift to state 20
-- On TIdent_TemplatenameInQualifier_BeforeTypedef shift to state 21
-- On TIdent_TemplatenameInQualifier shift to state 12
-- On TIdent_Templatename shift to state 108
-- On TIdent_MacroString shift to state 110
-- On TIdent_ClassnameInQualifier_BeforeTypedef shift to state 111
-- On TIdent_ClassnameInQualifier shift to state 112
-- On TIdent shift to state 113
-- On TFloat shift to state 116
-- On TEllipsis shift to state 201
-- On TDec shift to state 117
-- On TColCol_BeforeTypedef shift to state 118
-- On TColCol shift to state 128
-- On TChar shift to state 174
-- On TBang shift to state 175
-- On TAny_Action shift to state 202
-- On TAndLog shift to state 176
-- On TAnd shift to state 177
-- On LDots shift to state 178
-- On unqualified_id shift to state 179
-- On unary_op shift to state 180
-- On unary_expr shift to state 181
-- On type_spec shift to state 204
-- On type_name shift to state 182
-- On type_id shift to state 224
-- On type_cplusplus_id shift to state 183
-- On template_id shift to state 120
-- On string_elem shift to state 184
-- On spec_qualif_list shift to state 225
-- On simple_type_specifier shift to state 266
-- On shift_expr shift to state 217
-- On relational_expr shift to state 229
-- On qualified_id shift to state 191
-- On primary_expr shift to state 192
-- On primary_cplusplus_id shift to state 193
-- On postfix_expr shift to state 194
-- On pm_expr shift to state 219
-- On option(TColCol) shift to state 221
-- On operator_function_id shift to state 168
-- On nonempty_list(TAny_Action) shift to state 269
-- On new_expr shift to state 233
-- On nested_name_specifier2 shift to state 207
-- On nested_name_specifier shift to state 165
-- On multiplicative_expr shift to state 234
-- On logical_or_expr shift to state 246
-- On logical_and_expr shift to state 250
-- On literal shift to state 238
-- On listc(argument) shift to state 1047
-- On lambda_introducer shift to state 239
-- On inclusive_or_expr shift to state 272
-- On id_expression shift to state 241
-- On exclusive_or_expr shift to state 273
-- On equality_expr shift to state 256
-- On enum_specifier shift to state 209
-- On enum_name_or_typedef_name_or_simple_class_name shift to state 123
-- On enum_head shift to state 210
-- On elaborated_type_specifier shift to state 274
-- On delete_expr shift to state 242
-- On decltype_specifier shift to state 243
-- On cv_qualif shift to state 275
-- On cpp_cast_operator shift to state 244
-- On conversion_function_id shift to state 169
-- On cond_expr shift to state 330
-- On class_specifier shift to state 277
-- On class_or_namespace_name_for_qualifier2 shift to state 124
-- On class_or_namespace_name_for_qualifier shift to state 170
-- On class_key shift to state 278
-- On class_head shift to state 301
-- On cast_operator_expr shift to state 261
-- On cast_expr shift to state 331
-- On cast_constructor_expr shift to state 263
-- On basic_type_2 shift to state 264
-- On assign_expr shift to state 354
-- On argument shift to state 355
-- On and_expr shift to state 334
-- On additive_expr shift to state 341
## Reductions:
-- On Tnew Tdelete
--   reduce production option(TColCol) ->

State 1047:
## Known stack suffix:
## TIdent_MacroDecl TOPar listc(argument)
## LR(1) items:
listc(argument) -> listc(argument) . TComma argument [ TComma TCPar ]
simple_declaration -> TIdent_MacroDecl TOPar listc(argument) . TCPar TPtVirg [ # ]
## Transitions:
-- On TComma shift to state 271
-- On TCPar shift to state 1048
## Reductions:

State 1048:
## Known stack suffix:
## TIdent_MacroDecl TOPar listc(argument) TCPar
## LR(1) items:
simple_declaration -> TIdent_MacroDecl TOPar listc(argument) TCPar . TPtVirg [ # ]
## Transitions:
-- On TPtVirg shift to state 1049
## Reductions:

State 1049:
## Known stack suffix:
## TIdent_MacroDecl TOPar listc(argument) TCPar TPtVirg
## LR(1) items:
simple_declaration -> TIdent_MacroDecl TOPar listc(argument) TCPar TPtVirg . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, reduce production simple_declaration -> TIdent_MacroDecl TOPar listc(argument) TCPar TPtVirg

State 1050:
## Known stack suffix:
## using_directive
## LR(1) items:
block_declaration -> using_directive . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, reduce production block_declaration -> using_directive

State 1051:
## Known stack suffix:
## using_declaration
## LR(1) items:
block_declaration -> using_declaration . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, reduce production block_declaration -> using_declaration

State 1052:
## Known stack suffix:
## unnamed_namespace_definition
## LR(1) items:
namespace_definition -> unnamed_namespace_definition . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, reduce production namespace_definition -> unnamed_namespace_definition

State 1053:
## Known stack suffix:
## template_declaration
## LR(1) items:
declaration -> template_declaration . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, reduce production declaration -> template_declaration

State 1054:
## Known stack suffix:
## simple_declaration
## LR(1) items:
block_declaration -> simple_declaration . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, reduce production block_declaration -> simple_declaration

State 1055:
## Known stack suffix:
## option(Tinline)
## LR(1) items:
ctor_dtor -> option(Tinline) . TIdent_Constructor TOPar option(parameter_type_list) TCPar ctor_mem_initializer_list_opt compound [ # ]
## Transitions:
-- On TIdent_Constructor shift to state 1056
## Reductions:

State 1056:
## Known stack suffix:
## option(Tinline) TIdent_Constructor
## LR(1) items:
ctor_dtor -> option(Tinline) TIdent_Constructor . TOPar option(parameter_type_list) TCPar ctor_mem_initializer_list_opt compound [ # ]
## Transitions:
-- On TOPar shift to state 1057
## Reductions:

State 1057:
## Known stack suffix:
## option(Tinline) TIdent_Constructor TOPar
## LR(1) items:
ctor_dtor -> option(Tinline) TIdent_Constructor TOPar . option(parameter_type_list) TCPar ctor_mem_initializer_list_opt compound [ # ]
## Transitions:
-- On Twchar_t shift to state 1
-- On Tvolatile shift to state 2
-- On Tvoid shift to state 3
-- On Tvirtual shift to state 4
-- On Tunsigned shift to state 15
-- On Tunion shift to state 16
-- On Ttypeof shift to state 17
-- On Ttypename shift to state 19
-- On Ttypedef shift to state 96
-- On Tthread_local shift to state 97
-- On Tstruct shift to state 27
-- On Tstatic shift to state 98
-- On Tsigned shift to state 30
-- On Tshort shift to state 32
-- On Trestrict shift to state 65
-- On Tregister shift to state 99
-- On Tmutable shift to state 100
-- On Tlong shift to state 38
-- On Tint shift to state 39
-- On Tinline shift to state 101
-- On Tfriend shift to state 102
-- On Tfloat shift to state 40
-- On Textern shift to state 103
-- On Tenum shift to state 66
-- On Tdouble shift to state 41
-- On Tdecltype shift to state 45
-- On Tconstexpr shift to state 104
-- On Tconst shift to state 76
-- On Tclass shift to state 77
-- On Tchar shift to state 58
-- On Tbool shift to state 60
-- On Tauto shift to state 105
-- On TIdent_Typedef shift to state 20
-- On TIdent_TemplatenameInQualifier_BeforeTypedef shift to state 21
-- On TIdent_Templatename shift to state 108
-- On TIdent_ClassnameInQualifier_BeforeTypedef shift to state 111
-- On TIdent shift to state 453
-- On TColCol_BeforeTypedef shift to state 118
-- On type_spec shift to state 314
-- On type_name shift to state 182
-- On type_cplusplus_id shift to state 183
-- On template_id shift to state 120
-- On storage_class_spec shift to state 316
-- On simple_type_specifier shift to state 206
-- On parameter_type_list shift to state 699
-- On parameter_list shift to state 468
-- On parameter_decl2 shift to state 476
-- On parameter_decl shift to state 472
-- On option(parameter_type_list) shift to state 1058
-- On nested_name_specifier2 shift to state 207
-- On function_spec shift to state 437
-- On enum_specifier shift to state 209
-- On enum_name_or_typedef_name_or_simple_class_name shift to state 123
-- On enum_head shift to state 210
-- On elaborated_type_specifier shift to state 274
-- On decltype_specifier shift to state 243
-- On decl_spec_seq shift to state 441
-- On decl_spec shift to state 473
-- On cv_qualif shift to state 475
-- On class_specifier shift to state 277
-- On class_or_namespace_name_for_qualifier2 shift to state 124
-- On class_key shift to state 278
-- On class_head shift to state 301
## Reductions:
-- On TCPar
--   reduce production option(parameter_type_list) ->

State 1058:
## Known stack suffix:
## option(Tinline) TIdent_Constructor TOPar option(parameter_type_list)
## LR(1) items:
ctor_dtor -> option(Tinline) TIdent_Constructor TOPar option(parameter_type_list) . TCPar ctor_mem_initializer_list_opt compound [ # ]
## Transitions:
-- On TCPar shift to state 1059
## Reductions:

State 1059:
## Known stack suffix:
## option(Tinline) TIdent_Constructor TOPar option(parameter_type_list) TCPar
## LR(1) items:
ctor_dtor -> option(Tinline) TIdent_Constructor TOPar option(parameter_type_list) TCPar . ctor_mem_initializer_list_opt compound [ # ]
## Transitions:
-- On TCol shift to state 702
-- On ctor_mem_initializer_list_opt shift to state 1060
## Reductions:
-- On TOBrace
--   reduce production ctor_mem_initializer_list_opt ->

State 1060:
## Known stack suffix:
## option(Tinline) TIdent_Constructor TOPar option(parameter_type_list) TCPar ctor_mem_initializer_list_opt
## LR(1) items:
ctor_dtor -> option(Tinline) TIdent_Constructor TOPar option(parameter_type_list) TCPar ctor_mem_initializer_list_opt . compound [ # ]
## Transitions:
-- On TOBrace shift to state 1037
-- On compound shift to state 1061
## Reductions:

State 1061:
## Known stack suffix:
## option(Tinline) TIdent_Constructor TOPar option(parameter_type_list) TCPar ctor_mem_initializer_list_opt compound
## LR(1) items:
ctor_dtor -> option(Tinline) TIdent_Constructor TOPar option(parameter_type_list) TCPar ctor_mem_initializer_list_opt compound . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, reduce production ctor_dtor -> option(Tinline) TIdent_Constructor TOPar option(parameter_type_list) TCPar ctor_mem_initializer_list_opt compound

State 1062:
## Known stack suffix:
## nested_name_specifier
## LR(1) items:
ctor_dtor -> nested_name_specifier . TIdent_Constructor TOPar option(parameter_type_list) TCPar ctor_mem_initializer_list_opt compound [ # ]
ctor_dtor -> nested_name_specifier . TTilde ident TOPar option(Tvoid) TCPar compound [ # ]
## Transitions:
-- On TTilde shift to state 1063
-- On TIdent_Constructor shift to state 1069
## Reductions:

State 1063:
## Known stack suffix:
## nested_name_specifier TTilde
## LR(1) items:
ctor_dtor -> nested_name_specifier TTilde . ident TOPar option(Tvoid) TCPar compound [ # ]
## Transitions:
-- On TIdent_Typedef shift to state 68
-- On TIdent shift to state 69
-- On ident shift to state 1064
## Reductions:

State 1064:
## Known stack suffix:
## nested_name_specifier TTilde ident
## LR(1) items:
ctor_dtor -> nested_name_specifier TTilde ident . TOPar option(Tvoid) TCPar compound [ # ]
## Transitions:
-- On TOPar shift to state 1065
## Reductions:

State 1065:
## Known stack suffix:
## nested_name_specifier TTilde ident TOPar
## LR(1) items:
ctor_dtor -> nested_name_specifier TTilde ident TOPar . option(Tvoid) TCPar compound [ # ]
## Transitions:
-- On Tvoid shift to state 398
-- On option(Tvoid) shift to state 1066
## Reductions:
-- On TCPar
--   reduce production option(Tvoid) ->

State 1066:
## Known stack suffix:
## nested_name_specifier TTilde ident TOPar option(Tvoid)
## LR(1) items:
ctor_dtor -> nested_name_specifier TTilde ident TOPar option(Tvoid) . TCPar compound [ # ]
## Transitions:
-- On TCPar shift to state 1067
## Reductions:

State 1067:
## Known stack suffix:
## nested_name_specifier TTilde ident TOPar option(Tvoid) TCPar
## LR(1) items:
ctor_dtor -> nested_name_specifier TTilde ident TOPar option(Tvoid) TCPar . compound [ # ]
## Transitions:
-- On TOBrace shift to state 1037
-- On compound shift to state 1068
## Reductions:

State 1068:
## Known stack suffix:
## nested_name_specifier TTilde ident TOPar option(Tvoid) TCPar compound
## LR(1) items:
ctor_dtor -> nested_name_specifier TTilde ident TOPar option(Tvoid) TCPar compound . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, reduce production ctor_dtor -> nested_name_specifier TTilde ident TOPar option(Tvoid) TCPar compound

State 1069:
## Known stack suffix:
## nested_name_specifier TIdent_Constructor
## LR(1) items:
ctor_dtor -> nested_name_specifier TIdent_Constructor . TOPar option(parameter_type_list) TCPar ctor_mem_initializer_list_opt compound [ # ]
## Transitions:
-- On TOPar shift to state 1070
## Reductions:

State 1070:
## Known stack suffix:
## nested_name_specifier TIdent_Constructor TOPar
## LR(1) items:
ctor_dtor -> nested_name_specifier TIdent_Constructor TOPar . option(parameter_type_list) TCPar ctor_mem_initializer_list_opt compound [ # ]
## Transitions:
-- On Twchar_t shift to state 1
-- On Tvolatile shift to state 2
-- On Tvoid shift to state 3
-- On Tvirtual shift to state 4
-- On Tunsigned shift to state 15
-- On Tunion shift to state 16
-- On Ttypeof shift to state 17
-- On Ttypename shift to state 19
-- On Ttypedef shift to state 96
-- On Tthread_local shift to state 97
-- On Tstruct shift to state 27
-- On Tstatic shift to state 98
-- On Tsigned shift to state 30
-- On Tshort shift to state 32
-- On Trestrict shift to state 65
-- On Tregister shift to state 99
-- On Tmutable shift to state 100
-- On Tlong shift to state 38
-- On Tint shift to state 39
-- On Tinline shift to state 101
-- On Tfriend shift to state 102
-- On Tfloat shift to state 40
-- On Textern shift to state 103
-- On Tenum shift to state 66
-- On Tdouble shift to state 41
-- On Tdecltype shift to state 45
-- On Tconstexpr shift to state 104
-- On Tconst shift to state 76
-- On Tclass shift to state 77
-- On Tchar shift to state 58
-- On Tbool shift to state 60
-- On Tauto shift to state 105
-- On TIdent_Typedef shift to state 20
-- On TIdent_TemplatenameInQualifier_BeforeTypedef shift to state 21
-- On TIdent_Templatename shift to state 108
-- On TIdent_ClassnameInQualifier_BeforeTypedef shift to state 111
-- On TIdent shift to state 453
-- On TColCol_BeforeTypedef shift to state 118
-- On type_spec shift to state 314
-- On type_name shift to state 182
-- On type_cplusplus_id shift to state 183
-- On template_id shift to state 120
-- On storage_class_spec shift to state 316
-- On simple_type_specifier shift to state 206
-- On parameter_type_list shift to state 699
-- On parameter_list shift to state 468
-- On parameter_decl2 shift to state 476
-- On parameter_decl shift to state 472
-- On option(parameter_type_list) shift to state 1071
-- On nested_name_specifier2 shift to state 207
-- On function_spec shift to state 437
-- On enum_specifier shift to state 209
-- On enum_name_or_typedef_name_or_simple_class_name shift to state 123
-- On enum_head shift to state 210
-- On elaborated_type_specifier shift to state 274
-- On decltype_specifier shift to state 243
-- On decl_spec_seq shift to state 441
-- On decl_spec shift to state 473
-- On cv_qualif shift to state 475
-- On class_specifier shift to state 277
-- On class_or_namespace_name_for_qualifier2 shift to state 124
-- On class_key shift to state 278
-- On class_head shift to state 301
## Reductions:
-- On TCPar
--   reduce production option(parameter_type_list) ->

State 1071:
## Known stack suffix:
## nested_name_specifier TIdent_Constructor TOPar option(parameter_type_list)
## LR(1) items:
ctor_dtor -> nested_name_specifier TIdent_Constructor TOPar option(parameter_type_list) . TCPar ctor_mem_initializer_list_opt compound [ # ]
## Transitions:
-- On TCPar shift to state 1072
## Reductions:

State 1072:
## Known stack suffix:
## nested_name_specifier TIdent_Constructor TOPar option(parameter_type_list) TCPar
## LR(1) items:
ctor_dtor -> nested_name_specifier TIdent_Constructor TOPar option(parameter_type_list) TCPar . ctor_mem_initializer_list_opt compound [ # ]
## Transitions:
-- On TCol shift to state 702
-- On ctor_mem_initializer_list_opt shift to state 1073
## Reductions:
-- On TOBrace
--   reduce production ctor_mem_initializer_list_opt ->

State 1073:
## Known stack suffix:
## nested_name_specifier TIdent_Constructor TOPar option(parameter_type_list) TCPar ctor_mem_initializer_list_opt
## LR(1) items:
ctor_dtor -> nested_name_specifier TIdent_Constructor TOPar option(parameter_type_list) TCPar ctor_mem_initializer_list_opt . compound [ # ]
## Transitions:
-- On TOBrace shift to state 1037
-- On compound shift to state 1074
## Reductions:

State 1074:
## Known stack suffix:
## nested_name_specifier TIdent_Constructor TOPar option(parameter_type_list) TCPar ctor_mem_initializer_list_opt compound
## LR(1) items:
ctor_dtor -> nested_name_specifier TIdent_Constructor TOPar option(parameter_type_list) TCPar ctor_mem_initializer_list_opt compound . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, reduce production ctor_dtor -> nested_name_specifier TIdent_Constructor TOPar option(parameter_type_list) TCPar ctor_mem_initializer_list_opt compound

State 1075:
## Known stack suffix:
## namespace_definition
## LR(1) items:
declaration -> namespace_definition . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, reduce production declaration -> namespace_definition

State 1076:
## Known stack suffix:
## namespace_alias_definition
## LR(1) items:
block_declaration -> namespace_alias_definition . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, reduce production block_declaration -> namespace_alias_definition

State 1077:
## Known stack suffix:
## named_namespace_definition
## LR(1) items:
namespace_definition -> named_namespace_definition . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, reduce production namespace_definition -> named_namespace_definition

State 1078:
## Known stack suffix:
## linkage_specification
## LR(1) items:
declaration -> linkage_specification . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, reduce production declaration -> linkage_specification

State 1079:
## Known stack suffix:
## function_definition
## LR(1) items:
declaration -> function_definition . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, reduce production declaration -> function_definition

State 1080:
## Known stack suffix:
## explicit_specialization
## LR(1) items:
declaration -> explicit_specialization . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, reduce production declaration -> explicit_specialization

State 1081:
## Known stack suffix:
## Textern TString declaration
## LR(1) items:
linkage_specification -> Textern TString declaration . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, reduce production linkage_specification -> Textern TString declaration

State 1082:
## Known stack suffix:
## decl_spec_seq
## LR(1) items:
function_definition -> decl_spec_seq . declarator function_body [ # ]
simple_declaration -> decl_spec_seq . TPtVirg [ # ]
simple_declaration -> decl_spec_seq . listc(init_declarator) TPtVirg [ # ]
## Transitions:
-- On TPtVirg shift to state 1083
-- On TOPar shift to state 521
-- On TMul shift to state 443
-- On TColCol shift to state 8
-- On TAndLog shift to state 444
-- On TAnd shift to state 445
-- On pointer shift to state 522
-- On option(TColCol) shift to state 456
-- On listc(init_declarator) shift to state 1084
-- On init_declarator shift to state 611
-- On direct_d shift to state 498
-- On declaratori shift to state 605
-- On declarator_id shift to state 495
-- On declarator shift to state 1086
## Reductions:
-- On Toperator TIdent_TemplatenameInQualifier TIdent_ClassnameInQualifier TIdent
--   reduce production option(TColCol) ->

State 1083:
## Known stack suffix:
## decl_spec_seq TPtVirg
## LR(1) items:
simple_declaration -> decl_spec_seq TPtVirg . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, reduce production simple_declaration -> decl_spec_seq TPtVirg

State 1084:
## Known stack suffix:
## decl_spec_seq listc(init_declarator)
## LR(1) items:
listc(init_declarator) -> listc(init_declarator) . TComma init_declarator [ TPtVirg TComma ]
simple_declaration -> decl_spec_seq listc(init_declarator) . TPtVirg [ # ]
## Transitions:
-- On TPtVirg shift to state 1085
-- On TComma shift to state 603
## Reductions:

State 1085:
## Known stack suffix:
## decl_spec_seq listc(init_declarator) TPtVirg
## LR(1) items:
simple_declaration -> decl_spec_seq listc(init_declarator) TPtVirg . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, reduce production simple_declaration -> decl_spec_seq listc(init_declarator) TPtVirg

State 1086:
## Known stack suffix:
## decl_spec_seq declarator
## LR(1) items:
declaratori -> declarator . [ TPtVirg TOPar_CplusplusInit TEq TComma ]
declaratori -> declarator . gcc_asm_decl [ TPtVirg TOPar_CplusplusInit TEq TComma ]
function_definition -> decl_spec_seq declarator . function_body [ # ]
## Transitions:
-- On Tasm shift to state 529
-- On TOBrace shift to state 1037
-- On gcc_asm_decl shift to state 534
-- On function_body shift to state 1087
-- On compound shift to state 1088
## Reductions:
-- On TPtVirg TOPar_CplusplusInit TEq TComma
--   reduce production declaratori -> declarator

State 1087:
## Known stack suffix:
## decl_spec_seq declarator function_body
## LR(1) items:
function_definition -> decl_spec_seq declarator function_body . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, reduce production function_definition -> decl_spec_seq declarator function_body

State 1088:
## Known stack suffix:
## compound
## LR(1) items:
function_body -> compound . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, reduce production function_body -> compound

State 1089:
## Known stack suffix:
## ctor_dtor
## LR(1) items:
declaration -> ctor_dtor . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, reduce production declaration -> ctor_dtor

State 1090:
## Known stack suffix:
## block_declaration
## LR(1) items:
declaration -> block_declaration . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, reduce production declaration -> block_declaration

State 1091:
## Known stack suffix:
## asm_definition
## LR(1) items:
block_declaration -> asm_definition . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, reduce production block_declaration -> asm_definition

State 1092:
## Known stack suffix:
## Ttemplate TInf_Template TSup_Template declaration
## LR(1) items:
explicit_specialization -> Ttemplate TInf_Template TSup_Template declaration . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, reduce production explicit_specialization -> Ttemplate TInf_Template TSup_Template declaration

State 1093:
## Known stack suffix:
## Ttemplate TInf_Template listc(template_parameter)
## LR(1) items:
listc(template_parameter) -> listc(template_parameter) . TComma template_parameter [ TSup_Template TComma ]
template_declaration -> Ttemplate TInf_Template listc(template_parameter) . TSup_Template declaration [ # ]
## Transitions:
-- On TSup_Template shift to state 1094
-- On TComma shift to state 750
## Reductions:

State 1094:
## Known stack suffix:
## Ttemplate TInf_Template listc(template_parameter) TSup_Template
## LR(1) items:
template_declaration -> Ttemplate TInf_Template listc(template_parameter) TSup_Template . declaration [ # ]
## Transitions:
-- On Twchar_t shift to state 1
-- On Tvolatile shift to state 2
-- On Tvoid shift to state 3
-- On Tvirtual shift to state 4
-- On Tusing shift to state 986
-- On Tunsigned shift to state 15
-- On Tunion shift to state 16
-- On Ttypeof shift to state 17
-- On Ttypename shift to state 19
-- On Ttypedef shift to state 96
-- On Tthread_local shift to state 97
-- On Ttemplate shift to state 997
-- On Tstruct shift to state 27
-- On Tstatic shift to state 1000
-- On Tsigned shift to state 30
-- On Tshort shift to state 32
-- On Trestrict shift to state 65
-- On Tregister shift to state 99
-- On Tnamespace shift to state 1012
-- On Tmutable shift to state 100
-- On Tlong shift to state 38
-- On Tint shift to state 39
-- On Tinline shift to state 363
-- On Tfriend shift to state 102
-- On Tfloat shift to state 40
-- On Textern shift to state 1023
-- On Tenum shift to state 66
-- On Tdouble shift to state 41
-- On Tdecltype shift to state 45
-- On Tconstexpr shift to state 104
-- On Tconst shift to state 76
-- On Tclass shift to state 77
-- On Tchar shift to state 58
-- On Tbool shift to state 60
-- On Tauto shift to state 105
-- On Tasm shift to state 1025
-- On TTilde shift to state 1031
-- On TPtVirg shift to state 1041
-- On TIdent_Typedef shift to state 20
-- On TIdent_TemplatenameInQualifier_BeforeTypedef shift to state 21
-- On TIdent_TemplatenameInQualifier shift to state 12
-- On TIdent_Templatename shift to state 108
-- On TIdent_MacroDecl shift to state 1045
-- On TIdent_ClassnameInQualifier_BeforeTypedef shift to state 111
-- On TIdent_ClassnameInQualifier shift to state 112
-- On TColCol_BeforeTypedef shift to state 118
-- On using_directive shift to state 1050
-- On using_declaration shift to state 1051
-- On unnamed_namespace_definition shift to state 1052
-- On type_spec shift to state 314
-- On type_name shift to state 182
-- On type_cplusplus_id shift to state 183
-- On template_id shift to state 120
-- On template_declaration shift to state 1053
-- On storage_class_spec shift to state 316
-- On simple_type_specifier shift to state 206
-- On simple_declaration shift to state 1054
-- On option(Tinline) shift to state 1055
-- On nested_name_specifier2 shift to state 207
-- On nested_name_specifier shift to state 1062
-- On namespace_definition shift to state 1075
-- On namespace_alias_definition shift to state 1076
-- On named_namespace_definition shift to state 1077
-- On linkage_specification shift to state 1078
-- On function_spec shift to state 437
-- On function_definition shift to state 1079
-- On explicit_specialization shift to state 1080
-- On enum_specifier shift to state 209
-- On enum_name_or_typedef_name_or_simple_class_name shift to state 123
-- On enum_head shift to state 210
-- On elaborated_type_specifier shift to state 274
-- On decltype_specifier shift to state 243
-- On declaration shift to state 1095
-- On decl_spec_seq shift to state 1082
-- On decl_spec shift to state 473
-- On cv_qualif shift to state 475
-- On ctor_dtor shift to state 1089
-- On class_specifier shift to state 277
-- On class_or_namespace_name_for_qualifier2 shift to state 124
-- On class_or_namespace_name_for_qualifier shift to state 170
-- On class_key shift to state 278
-- On class_head shift to state 301
-- On block_declaration shift to state 1090
-- On asm_definition shift to state 1091
## Reductions:
-- On TIdent_Constructor
--   reduce production option(Tinline) ->

State 1095:
## Known stack suffix:
## Ttemplate TInf_Template listc(template_parameter) TSup_Template declaration
## LR(1) items:
template_declaration -> Ttemplate TInf_Template listc(template_parameter) TSup_Template declaration . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, reduce production template_declaration -> Ttemplate TInf_Template listc(template_parameter) TSup_Template declaration

State 1096:
## Known stack suffix:
## TUndef
## LR(1) items:
cpp_directive -> TUndef . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, reduce production cpp_directive -> TUndef

State 1097:
## Known stack suffix:
## TInclude
## LR(1) items:
cpp_directive -> TInclude . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, reduce production cpp_directive -> TInclude

State 1098:
## Known stack suffix:
## TIfdefelse
## LR(1) items:
cpp_ifdef_directive -> TIfdefelse . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, reduce production cpp_ifdef_directive -> TIfdefelse

State 1099:
## Known stack suffix:
## TIfdefelif
## LR(1) items:
cpp_ifdef_directive -> TIfdefelif . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, reduce production cpp_ifdef_directive -> TIfdefelif

State 1100:
## Known stack suffix:
## TIfdefVersion
## LR(1) items:
cpp_ifdef_directive -> TIfdefVersion . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, reduce production cpp_ifdef_directive -> TIfdefVersion

State 1101:
## Known stack suffix:
## TIfdefMisc
## LR(1) items:
cpp_ifdef_directive -> TIfdefMisc . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, reduce production cpp_ifdef_directive -> TIfdefMisc

State 1102:
## Known stack suffix:
## TIfdefBool
## LR(1) items:
cpp_ifdef_directive -> TIfdefBool . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, reduce production cpp_ifdef_directive -> TIfdefBool

State 1103:
## Known stack suffix:
## TIfdef
## LR(1) items:
cpp_ifdef_directive -> TIfdef . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, reduce production cpp_ifdef_directive -> TIfdef

State 1104:
## Known stack suffix:
## TIdent
## LR(1) items:
cpp_other -> TIdent . TOPar listc(argument) TCPar TPtVirg [ # ]
cpp_other -> TIdent . TOPar listc(argument) TCPar_EOL [ # ]
cpp_other -> TIdent . TPtVirg [ # ]
## Transitions:
-- On TPtVirg shift to state 1105
-- On TOPar shift to state 1106
## Reductions:

State 1105:
## Known stack suffix:
## TIdent TPtVirg
## LR(1) items:
cpp_other -> TIdent TPtVirg . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, reduce production cpp_other -> TIdent TPtVirg

State 1106:
## Known stack suffix:
## TIdent TOPar
## LR(1) items:
cpp_other -> TIdent TOPar . listc(argument) TCPar TPtVirg [ # ]
cpp_other -> TIdent TOPar . listc(argument) TCPar_EOL [ # ]
## Transitions:
-- On Twchar_t_Constr shift to state 14
-- On Twchar_t shift to state 1
-- On Tvolatile shift to state 2
-- On Tvoid shift to state 3
-- On Tunsigned shift to state 15
-- On Tunion shift to state 16
-- On Ttypeof shift to state 17
-- On Ttypename shift to state 19
-- On Ttypeid shift to state 23
-- On Ttrue shift to state 25
-- On Tthrow shift to state 47
-- On Tthis shift to state 26
-- On Tstruct shift to state 27
-- On Tstatic_cast shift to state 28
-- On Tsizeof shift to state 29
-- On Tsigned shift to state 30
-- On Tshort_Constr shift to state 31
-- On Tshort shift to state 32
-- On Trestrict shift to state 65
-- On Treinterpret_cast shift to state 33
-- On Toperator shift to state 34
-- On Tnullptr shift to state 48
-- On Tnull shift to state 49
-- On Tlong_Constr shift to state 50
-- On Tlong shift to state 38
-- On Tint_Constr shift to state 51
-- On Tint shift to state 39
-- On Tfloat_Constr shift to state 52
-- On Tfloat shift to state 40
-- On Tfalse shift to state 53
-- On Tenum shift to state 66
-- On Tdynamic_cast shift to state 54
-- On Tdouble_Constr shift to state 55
-- On Tdouble shift to state 41
-- On Tdecltype shift to state 45
-- On Tconst_cast shift to state 56
-- On Tconst shift to state 76
-- On Tclass shift to state 77
-- On Tchar_Constr shift to state 57
-- On Tchar shift to state 58
-- On Tbool_Constr shift to state 59
-- On Tbool shift to state 60
-- On TTilde shift to state 61
-- On TString shift to state 62
-- On TPlus shift to state 63
-- On TOPar shift to state 64
-- On TOCro_Lambda shift to state 78
-- On TMul shift to state 88
-- On TMinus shift to state 89
-- On TInt shift to state 90
-- On TInc shift to state 91
-- On TIdent_TypedefConstr shift to state 106
-- On TIdent_Typedef shift to state 20
-- On TIdent_TemplatenameInQualifier_BeforeTypedef shift to state 21
-- On TIdent_TemplatenameInQualifier shift to state 12
-- On TIdent_Templatename shift to state 108
-- On TIdent_MacroString shift to state 110
-- On TIdent_ClassnameInQualifier_BeforeTypedef shift to state 111
-- On TIdent_ClassnameInQualifier shift to state 112
-- On TIdent shift to state 113
-- On TFloat shift to state 116
-- On TEllipsis shift to state 201
-- On TDec shift to state 117
-- On TColCol_BeforeTypedef shift to state 118
-- On TColCol shift to state 128
-- On TChar shift to state 174
-- On TBang shift to state 175
-- On TAny_Action shift to state 202
-- On TAndLog shift to state 176
-- On TAnd shift to state 177
-- On LDots shift to state 178
-- On unqualified_id shift to state 179
-- On unary_op shift to state 180
-- On unary_expr shift to state 181
-- On type_spec shift to state 204
-- On type_name shift to state 182
-- On type_id shift to state 224
-- On type_cplusplus_id shift to state 183
-- On template_id shift to state 120
-- On string_elem shift to state 184
-- On spec_qualif_list shift to state 225
-- On simple_type_specifier shift to state 266
-- On shift_expr shift to state 217
-- On relational_expr shift to state 229
-- On qualified_id shift to state 191
-- On primary_expr shift to state 192
-- On primary_cplusplus_id shift to state 193
-- On postfix_expr shift to state 194
-- On pm_expr shift to state 219
-- On option(TColCol) shift to state 221
-- On operator_function_id shift to state 168
-- On nonempty_list(TAny_Action) shift to state 269
-- On new_expr shift to state 233
-- On nested_name_specifier2 shift to state 207
-- On nested_name_specifier shift to state 165
-- On multiplicative_expr shift to state 234
-- On logical_or_expr shift to state 246
-- On logical_and_expr shift to state 250
-- On literal shift to state 238
-- On listc(argument) shift to state 1107
-- On lambda_introducer shift to state 239
-- On inclusive_or_expr shift to state 272
-- On id_expression shift to state 241
-- On exclusive_or_expr shift to state 273
-- On equality_expr shift to state 256
-- On enum_specifier shift to state 209
-- On enum_name_or_typedef_name_or_simple_class_name shift to state 123
-- On enum_head shift to state 210
-- On elaborated_type_specifier shift to state 274
-- On delete_expr shift to state 242
-- On decltype_specifier shift to state 243
-- On cv_qualif shift to state 275
-- On cpp_cast_operator shift to state 244
-- On conversion_function_id shift to state 169
-- On cond_expr shift to state 330
-- On class_specifier shift to state 277
-- On class_or_namespace_name_for_qualifier2 shift to state 124
-- On class_or_namespace_name_for_qualifier shift to state 170
-- On class_key shift to state 278
-- On class_head shift to state 301
-- On cast_operator_expr shift to state 261
-- On cast_expr shift to state 331
-- On cast_constructor_expr shift to state 263
-- On basic_type_2 shift to state 264
-- On assign_expr shift to state 354
-- On argument shift to state 355
-- On and_expr shift to state 334
-- On additive_expr shift to state 341
## Reductions:
-- On Tnew Tdelete
--   reduce production option(TColCol) ->

State 1107:
## Known stack suffix:
## TIdent TOPar listc(argument)
## LR(1) items:
cpp_other -> TIdent TOPar listc(argument) . TCPar TPtVirg [ # ]
cpp_other -> TIdent TOPar listc(argument) . TCPar_EOL [ # ]
listc(argument) -> listc(argument) . TComma argument [ TComma TCPar_EOL TCPar ]
## Transitions:
-- On TComma shift to state 271
-- On TCPar_EOL shift to state 1108
-- On TCPar shift to state 1109
## Reductions:

State 1108:
## Known stack suffix:
## TIdent TOPar listc(argument) TCPar_EOL
## LR(1) items:
cpp_other -> TIdent TOPar listc(argument) TCPar_EOL . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, reduce production cpp_other -> TIdent TOPar listc(argument) TCPar_EOL

State 1109:
## Known stack suffix:
## TIdent TOPar listc(argument) TCPar
## LR(1) items:
cpp_other -> TIdent TOPar listc(argument) TCPar . TPtVirg [ # ]
## Transitions:
-- On TPtVirg shift to state 1110
## Reductions:

State 1110:
## Known stack suffix:
## TIdent TOPar listc(argument) TCPar TPtVirg
## LR(1) items:
cpp_other -> TIdent TOPar listc(argument) TCPar TPtVirg . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, reduce production cpp_other -> TIdent TOPar listc(argument) TCPar TPtVirg

State 1111:
## Known stack suffix:
## TEndif
## LR(1) items:
cpp_ifdef_directive -> TEndif . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, reduce production cpp_ifdef_directive -> TEndif

State 1112:
## Known stack suffix:
## TDefine
## LR(1) items:
cpp_directive -> TDefine . TIdent_Define define_val TCommentNewline_DefineEndOfMacro [ # ]
cpp_directive -> TDefine . TIdent_Define TOPar_Define optl(listc(param_define)) TCPar define_val TCommentNewline_DefineEndOfMacro [ # ]
## Transitions:
-- On TIdent_Define shift to state 1113
## Reductions:

State 1113:
## Known stack suffix:
## TDefine TIdent_Define
## LR(1) items:
cpp_directive -> TDefine TIdent_Define . define_val TCommentNewline_DefineEndOfMacro [ # ]
cpp_directive -> TDefine TIdent_Define . TOPar_Define optl(listc(param_define)) TCPar define_val TCommentNewline_DefineEndOfMacro [ # ]
## Transitions:
-- On Twhile shift to state 94
-- On Twchar_t_Constr shift to state 14
-- On Twchar_t shift to state 1
-- On Tvolatile shift to state 2
-- On Tvoid shift to state 3
-- On Tvirtual shift to state 4
-- On Tusing shift to state 5
-- On Tunsigned shift to state 15
-- On Tunion shift to state 16
-- On Ttypeof shift to state 17
-- On Ttypename shift to state 19
-- On Ttypeid shift to state 23
-- On Ttypedef shift to state 96
-- On Ttry shift to state 431
-- On Ttrue shift to state 25
-- On Tthrow shift to state 47
-- On Tthread_local shift to state 97
-- On Tthis shift to state 26
-- On Tswitch shift to state 515
-- On Tstruct shift to state 27
-- On Tstatic_cast shift to state 28
-- On Tstatic shift to state 323
-- On Tsizeof shift to state 29
-- On Tsigned shift to state 30
-- On Tshort_Constr shift to state 31
-- On Tshort shift to state 32
-- On Treturn shift to state 537
-- On Trestrict shift to state 65
-- On Treinterpret_cast shift to state 33
-- On Tregister shift to state 99
-- On Toperator shift to state 34
-- On Tnullptr shift to state 48
-- On Tnull shift to state 49
-- On Tnamespace shift to state 540
-- On Tmutable shift to state 100
-- On Tlong_Constr shift to state 50
-- On Tlong shift to state 38
-- On Tint_Constr shift to state 51
-- On Tint shift to state 39
-- On Tinline shift to state 101
-- On Tif shift to state 642
-- On Tgoto shift to state 549
-- On Tfriend shift to state 102
-- On Tfor shift to state 553
-- On Tfloat_Constr shift to state 52
-- On Tfloat shift to state 40
-- On Tfalse shift to state 53
-- On Textern shift to state 103
-- On Tenum shift to state 66
-- On Tdynamic_cast shift to state 54
-- On Tdouble_Constr shift to state 55
-- On Tdouble shift to state 41
-- On Tdo shift to state 647
-- On Tdefault shift to state 563
-- On Tdecltype shift to state 45
-- On Tcontinue shift to state 565
-- On Tconstexpr shift to state 104
-- On Tconst_cast shift to state 56
-- On Tconst shift to state 76
-- On Tclass shift to state 77
-- On Tchar_Constr shift to state 57
-- On Tchar shift to state 58
-- On Tcase shift to state 566
-- On Tbreak shift to state 571
-- On Tbool_Constr shift to state 59
-- On Tbool shift to state 60
-- On Tauto shift to state 105
-- On Tasm shift to state 366
-- On TTilde shift to state 61
-- On TString shift to state 62
-- On TPlus shift to state 63
-- On TOPar_Define shift to state 1114
-- On TOPar shift to state 64
-- On TOCro_Lambda shift to state 78
-- On TOBrace_DefineInit shift to state 661
-- On TOBrace shift to state 93
-- On TMul shift to state 88
-- On TMinus shift to state 89
-- On TInt shift to state 90
-- On TInc shift to state 91
-- On TIdent_TypedefConstr shift to state 106
-- On TIdent_Typedef shift to state 572
-- On TIdent_TemplatenameInQualifier_BeforeTypedef shift to state 21
-- On TIdent_TemplatenameInQualifier shift to state 12
-- On TIdent_Templatename shift to state 108
-- On TIdent_MacroString shift to state 110
-- On TIdent_MacroStmt shift to state 573
-- On TIdent_MacroIterator shift to state 574
-- On TIdent_MacroDecl shift to state 423
-- On TIdent_ClassnameInQualifier_BeforeTypedef shift to state 111
-- On TIdent_ClassnameInQualifier shift to state 112
-- On TIdent shift to state 578
-- On TFloat shift to state 116
-- On TEllipsis shift to state 580
-- On TDec shift to state 117
-- On TColCol_BeforeTypedef shift to state 118
-- On TColCol shift to state 128
-- On TChar shift to state 174
-- On TBang shift to state 175
-- On TAndLog shift to state 176
-- On TAnd shift to state 177
-- On LDots shift to state 178
-- On using_directive shift to state 581
-- On using_declaration shift to state 582
-- On unqualified_id shift to state 179
-- On unary_op shift to state 180
-- On unary_expr shift to state 181
-- On type_spec shift to state 314
-- On type_name shift to state 182
-- On type_cplusplus_id shift to state 183
-- On try_block shift to state 583
-- On template_id shift to state 120
-- On string_elem shift to state 184
-- On storage_class_spec shift to state 316
-- On statement shift to state 681
-- On simple_type_specifier shift to state 266
-- On simple_declaration shift to state 585
-- On shift_expr shift to state 217
-- On selection shift to state 586
-- On relational_expr shift to state 229
-- On qualified_id shift to state 191
-- On primary_expr shift to state 192
-- On primary_cplusplus_id shift to state 193
-- On postfix_expr shift to state 194
-- On pm_expr shift to state 219
-- On option(expr) shift to state 556
-- On option(TColCol) shift to state 221
-- On operator_function_id shift to state 168
-- On new_expr shift to state 233
-- On nested_name_specifier2 shift to state 207
-- On nested_name_specifier shift to state 165
-- On namespace_alias_definition shift to state 587
-- On multiplicative_expr shift to state 234
-- On logical_or_expr shift to state 246
-- On logical_and_expr shift to state 250
-- On literal shift to state 238
-- On lambda_introducer shift to state 239
-- On labeled shift to state 588
-- On jump shift to state 589
-- On iteration shift to state 591
-- On inclusive_or_expr shift to state 272
-- On ident shift to state 592
-- On id_expression shift to state 241
-- On function_spec shift to state 437
-- On function_definition shift to state 595
-- On expr_statement shift to state 596
-- On expr shift to state 682
-- On exclusive_or_expr shift to state 273
-- On equality_expr shift to state 256
-- On enum_specifier shift to state 209
-- On enum_name_or_typedef_name_or_simple_class_name shift to state 123
-- On enum_head shift to state 210
-- On elaborated_type_specifier shift to state 274
-- On delete_expr shift to state 242
-- On define_val shift to state 1119
-- On decltype_specifier shift to state 243
-- On declaration_statement shift to state 598
-- On decl_spec_seq shift to state 599
-- On decl_spec shift to state 473
-- On cv_qualif shift to state 475
-- On cpp_cast_operator shift to state 244
-- On conversion_function_id shift to state 169
-- On cond_expr shift to state 330
-- On compound shift to state 615
-- On class_specifier shift to state 277
-- On class_or_namespace_name_for_qualifier2 shift to state 124
-- On class_or_namespace_name_for_qualifier shift to state 170
-- On class_key shift to state 278
-- On class_head shift to state 301
-- On cast_operator_expr shift to state 261
-- On cast_expr shift to state 331
-- On cast_constructor_expr shift to state 263
-- On block_declaration shift to state 616
-- On basic_type_2 shift to state 264
-- On assign_expr shift to state 539
-- On asm_definition shift to state 617
-- On and_expr shift to state 334
-- On additive_expr shift to state 341
## Reductions:
-- On TCommentNewline_DefineEndOfMacro
--   reduce production define_val ->
-- On Tnew Tdelete
--   reduce production option(TColCol) ->
-- On TPtVirg
--   reduce production option(expr) ->

State 1114:
## Known stack suffix:
## TDefine TIdent_Define TOPar_Define
## LR(1) items:
cpp_directive -> TDefine TIdent_Define TOPar_Define . optl(listc(param_define)) TCPar define_val TCommentNewline_DefineEndOfMacro [ # ]
## Transitions:
-- On Tregister shift to state 654
-- On Tnew shift to state 655
-- On TIdent_Typedef shift to state 68
-- On TIdent shift to state 69
-- On TEllipsis shift to state 656
-- On TDefParamVariadic shift to state 657
-- On param_define shift to state 658
-- On optl(listc(param_define)) shift to state 1115
-- On listc(param_define) shift to state 685
-- On ident shift to state 688
## Reductions:
-- On TCPar
--   reduce production optl(listc(param_define)) ->

State 1115:
## Known stack suffix:
## TDefine TIdent_Define TOPar_Define optl(listc(param_define))
## LR(1) items:
cpp_directive -> TDefine TIdent_Define TOPar_Define optl(listc(param_define)) . TCPar define_val TCommentNewline_DefineEndOfMacro [ # ]
## Transitions:
-- On TCPar shift to state 1116
## Reductions:

State 1116:
## Known stack suffix:
## TDefine TIdent_Define TOPar_Define optl(listc(param_define)) TCPar
## LR(1) items:
cpp_directive -> TDefine TIdent_Define TOPar_Define optl(listc(param_define)) TCPar . define_val TCommentNewline_DefineEndOfMacro [ # ]
## Transitions:
-- On Twhile shift to state 94
-- On Twchar_t_Constr shift to state 14
-- On Twchar_t shift to state 1
-- On Tvolatile shift to state 2
-- On Tvoid shift to state 3
-- On Tvirtual shift to state 4
-- On Tusing shift to state 5
-- On Tunsigned shift to state 15
-- On Tunion shift to state 16
-- On Ttypeof shift to state 17
-- On Ttypename shift to state 19
-- On Ttypeid shift to state 23
-- On Ttypedef shift to state 96
-- On Ttry shift to state 431
-- On Ttrue shift to state 25
-- On Tthrow shift to state 47
-- On Tthread_local shift to state 97
-- On Tthis shift to state 26
-- On Tswitch shift to state 515
-- On Tstruct shift to state 27
-- On Tstatic_cast shift to state 28
-- On Tstatic shift to state 323
-- On Tsizeof shift to state 29
-- On Tsigned shift to state 30
-- On Tshort_Constr shift to state 31
-- On Tshort shift to state 32
-- On Treturn shift to state 537
-- On Trestrict shift to state 65
-- On Treinterpret_cast shift to state 33
-- On Tregister shift to state 99
-- On Toperator shift to state 34
-- On Tnullptr shift to state 48
-- On Tnull shift to state 49
-- On Tnamespace shift to state 540
-- On Tmutable shift to state 100
-- On Tlong_Constr shift to state 50
-- On Tlong shift to state 38
-- On Tint_Constr shift to state 51
-- On Tint shift to state 39
-- On Tinline shift to state 101
-- On Tif shift to state 642
-- On Tgoto shift to state 549
-- On Tfriend shift to state 102
-- On Tfor shift to state 553
-- On Tfloat_Constr shift to state 52
-- On Tfloat shift to state 40
-- On Tfalse shift to state 53
-- On Textern shift to state 103
-- On Tenum shift to state 66
-- On Tdynamic_cast shift to state 54
-- On Tdouble_Constr shift to state 55
-- On Tdouble shift to state 41
-- On Tdo shift to state 647
-- On Tdefault shift to state 563
-- On Tdecltype shift to state 45
-- On Tcontinue shift to state 565
-- On Tconstexpr shift to state 104
-- On Tconst_cast shift to state 56
-- On Tconst shift to state 76
-- On Tclass shift to state 77
-- On Tchar_Constr shift to state 57
-- On Tchar shift to state 58
-- On Tcase shift to state 566
-- On Tbreak shift to state 571
-- On Tbool_Constr shift to state 59
-- On Tbool shift to state 60
-- On Tauto shift to state 105
-- On Tasm shift to state 366
-- On TTilde shift to state 61
-- On TString shift to state 62
-- On TPlus shift to state 63
-- On TOPar shift to state 64
-- On TOCro_Lambda shift to state 78
-- On TOBrace_DefineInit shift to state 661
-- On TOBrace shift to state 93
-- On TMul shift to state 88
-- On TMinus shift to state 89
-- On TInt shift to state 90
-- On TInc shift to state 91
-- On TIdent_TypedefConstr shift to state 106
-- On TIdent_Typedef shift to state 572
-- On TIdent_TemplatenameInQualifier_BeforeTypedef shift to state 21
-- On TIdent_TemplatenameInQualifier shift to state 12
-- On TIdent_Templatename shift to state 108
-- On TIdent_MacroString shift to state 110
-- On TIdent_MacroStmt shift to state 573
-- On TIdent_MacroIterator shift to state 574
-- On TIdent_MacroDecl shift to state 423
-- On TIdent_ClassnameInQualifier_BeforeTypedef shift to state 111
-- On TIdent_ClassnameInQualifier shift to state 112
-- On TIdent shift to state 578
-- On TFloat shift to state 116
-- On TEllipsis shift to state 580
-- On TDec shift to state 117
-- On TColCol_BeforeTypedef shift to state 118
-- On TColCol shift to state 128
-- On TChar shift to state 174
-- On TBang shift to state 175
-- On TAndLog shift to state 176
-- On TAnd shift to state 177
-- On LDots shift to state 178
-- On using_directive shift to state 581
-- On using_declaration shift to state 582
-- On unqualified_id shift to state 179
-- On unary_op shift to state 180
-- On unary_expr shift to state 181
-- On type_spec shift to state 314
-- On type_name shift to state 182
-- On type_cplusplus_id shift to state 183
-- On try_block shift to state 583
-- On template_id shift to state 120
-- On string_elem shift to state 184
-- On storage_class_spec shift to state 316
-- On statement shift to state 681
-- On simple_type_specifier shift to state 266
-- On simple_declaration shift to state 585
-- On shift_expr shift to state 217
-- On selection shift to state 586
-- On relational_expr shift to state 229
-- On qualified_id shift to state 191
-- On primary_expr shift to state 192
-- On primary_cplusplus_id shift to state 193
-- On postfix_expr shift to state 194
-- On pm_expr shift to state 219
-- On option(expr) shift to state 556
-- On option(TColCol) shift to state 221
-- On operator_function_id shift to state 168
-- On new_expr shift to state 233
-- On nested_name_specifier2 shift to state 207
-- On nested_name_specifier shift to state 165
-- On namespace_alias_definition shift to state 587
-- On multiplicative_expr shift to state 234
-- On logical_or_expr shift to state 246
-- On logical_and_expr shift to state 250
-- On literal shift to state 238
-- On lambda_introducer shift to state 239
-- On labeled shift to state 588
-- On jump shift to state 589
-- On iteration shift to state 591
-- On inclusive_or_expr shift to state 272
-- On ident shift to state 592
-- On id_expression shift to state 241
-- On function_spec shift to state 437
-- On function_definition shift to state 595
-- On expr_statement shift to state 596
-- On expr shift to state 682
-- On exclusive_or_expr shift to state 273
-- On equality_expr shift to state 256
-- On enum_specifier shift to state 209
-- On enum_name_or_typedef_name_or_simple_class_name shift to state 123
-- On enum_head shift to state 210
-- On elaborated_type_specifier shift to state 274
-- On delete_expr shift to state 242
-- On define_val shift to state 1117
-- On decltype_specifier shift to state 243
-- On declaration_statement shift to state 598
-- On decl_spec_seq shift to state 599
-- On decl_spec shift to state 473
-- On cv_qualif shift to state 475
-- On cpp_cast_operator shift to state 244
-- On conversion_function_id shift to state 169
-- On cond_expr shift to state 330
-- On compound shift to state 615
-- On class_specifier shift to state 277
-- On class_or_namespace_name_for_qualifier2 shift to state 124
-- On class_or_namespace_name_for_qualifier shift to state 170
-- On class_key shift to state 278
-- On class_head shift to state 301
-- On cast_operator_expr shift to state 261
-- On cast_expr shift to state 331
-- On cast_constructor_expr shift to state 263
-- On block_declaration shift to state 616
-- On basic_type_2 shift to state 264
-- On assign_expr shift to state 539
-- On asm_definition shift to state 617
-- On and_expr shift to state 334
-- On additive_expr shift to state 341
## Reductions:
-- On TCommentNewline_DefineEndOfMacro
--   reduce production define_val ->
-- On Tnew Tdelete
--   reduce production option(TColCol) ->
-- On TPtVirg
--   reduce production option(expr) ->

State 1117:
## Known stack suffix:
## TDefine TIdent_Define TOPar_Define optl(listc(param_define)) TCPar define_val
## LR(1) items:
cpp_directive -> TDefine TIdent_Define TOPar_Define optl(listc(param_define)) TCPar define_val . TCommentNewline_DefineEndOfMacro [ # ]
## Transitions:
-- On TCommentNewline_DefineEndOfMacro shift to state 1118
## Reductions:

State 1118:
## Known stack suffix:
## TDefine TIdent_Define TOPar_Define optl(listc(param_define)) TCPar define_val TCommentNewline_DefineEndOfMacro
## LR(1) items:
cpp_directive -> TDefine TIdent_Define TOPar_Define optl(listc(param_define)) TCPar define_val TCommentNewline_DefineEndOfMacro . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, reduce production cpp_directive -> TDefine TIdent_Define TOPar_Define optl(listc(param_define)) TCPar define_val TCommentNewline_DefineEndOfMacro

State 1119:
## Known stack suffix:
## TDefine TIdent_Define define_val
## LR(1) items:
cpp_directive -> TDefine TIdent_Define define_val . TCommentNewline_DefineEndOfMacro [ # ]
## Transitions:
-- On TCommentNewline_DefineEndOfMacro shift to state 1120
## Reductions:

State 1120:
## Known stack suffix:
## TDefine TIdent_Define define_val TCommentNewline_DefineEndOfMacro
## LR(1) items:
cpp_directive -> TDefine TIdent_Define define_val TCommentNewline_DefineEndOfMacro . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, reduce production cpp_directive -> TDefine TIdent_Define define_val TCommentNewline_DefineEndOfMacro

State 1121:
## Known stack suffix:
## TCppDirectiveOther
## LR(1) items:
cpp_directive -> TCppDirectiveOther . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, reduce production cpp_directive -> TCppDirectiveOther

State 1122:
## Known stack suffix:
## TCBrace
## LR(1) items:
toplevel_aux -> TCBrace . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, reduce production toplevel_aux -> TCBrace

State 1123:
## Known stack suffix:
## EOF
## LR(1) items:
toplevel -> EOF . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, reduce production toplevel -> EOF

State 1124:
## Known stack suffix:
## toplevel_aux
## LR(1) items:
toplevel -> toplevel_aux . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, reduce production toplevel -> toplevel_aux

State 1125:
## Known stack suffix:
## toplevel
## LR(1) items:
toplevel' -> toplevel . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, accept toplevel

State 1126:
## Known stack suffix:
## declaration
## LR(1) items:
toplevel_aux -> declaration . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, reduce production toplevel_aux -> declaration

State 1127:
## Known stack suffix:
## cpp_other
## LR(1) items:
toplevel_aux -> cpp_other . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, reduce production toplevel_aux -> cpp_other

State 1128:
## Known stack suffix:
## cpp_ifdef_directive
## LR(1) items:
toplevel_aux -> cpp_ifdef_directive . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, reduce production toplevel_aux -> cpp_ifdef_directive

State 1129:
## Known stack suffix:
## cpp_directive
## LR(1) items:
toplevel_aux -> cpp_directive . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, reduce production toplevel_aux -> cpp_directive

