State 0:
## Known stack suffix:
##
## LR(1) items:
main' -> . main [ # ]
## Transitions:
-- On T__AT shift to state 1
-- On T_YIELD shift to state 2
-- On T_WHILE shift to state 158
-- On T_VARIABLE shift to state 3
-- On T_USE shift to state 1013
-- On T_UNSET_CAST shift to state 5
-- On T_UNSET shift to state 197
-- On T_TYPE shift to state 1043
-- On T_TRY shift to state 391
-- On T_TRAIT_C shift to state 7
-- On T_TRAIT shift to state 393
-- On T_THROW shift to state 520
-- On T_SWITCH shift to state 525
-- On T_SUPER shift to state 8
-- On T_STRING_CAST shift to state 9
-- On T_STATIC shift to state 536
-- On T_START_HEREDOC shift to state 25
-- On T_SL shift to state 16
-- On T_SELF shift to state 40
-- On T_RETURN shift to state 553
-- On T_REQUIRE_ONCE shift to state 41
-- On T_REQUIRE shift to state 42
-- On T_PRINT shift to state 43
-- On T_PARENT shift to state 44
-- On T_OPEN_TAG_WITH_ECHO shift to state 558
-- On T_OBJECT_CAST shift to state 45
-- On T_NEW shift to state 46
-- On T_NAMESPACE_C shift to state 49
-- On T_NAMESPACE shift to state 1050
-- On T_METHOD_C shift to state 58
-- On T_METAVAR shift to state 17
-- On T_LNUMBER shift to state 59
-- On T_LIST shift to state 69
-- On T_LINE shift to state 60
-- On T_LAMBDA_OPAR shift to state 73
-- On T_ISSET shift to state 133
-- On T_INT_CAST shift to state 135
-- On T_INTERFACE shift to state 563
-- On T_INSTANCEOF shift to state 52
-- On T_INLINE_HTML shift to state 576
-- On T_INCLUDE_ONCE shift to state 136
-- On T_INCLUDE shift to state 137
-- On T_INC shift to state 138
-- On T_IF shift to state 577
-- On T_IDENT shift to state 18
-- On T_GLOBAL shift to state 587
-- On T_FUNC_C shift to state 61
-- On T_FUNCTION shift to state 657
-- On T_FOREACH shift to state 600
-- On T_FOR shift to state 624
-- On T_FINAL shift to state 666
-- On T_FILE shift to state 62
-- On T_EXIT shift to state 160
-- On T_EVAL shift to state 162
-- On T_ENUM shift to state 668
-- On T_EMPTY shift to state 164
-- On T_ELLIPSIS shift to state 635
-- On T_ECHO shift to state 636
-- On T_DOUBLE_CAST shift to state 168
-- On T_DO shift to state 644
-- On T_DNUMBER shift to state 63
-- On T_DIR shift to state 64
-- On T_DECLARE shift to state 645
-- On T_DEC shift to state 169
-- On T_CONTINUE shift to state 649
-- On T_CONSTANT_ENCAPSED_STRING shift to state 65
-- On T_CONST shift to state 1052
-- On T_CLONE shift to state 170
-- On T_CLASS_C shift to state 66
-- On T_CLASS shift to state 682
-- On T_BREAK shift to state 652
-- On T_BOOL_CAST shift to state 171
-- On T_AWAIT shift to state 172
-- On T_ASYNC shift to state 683
-- On T_ARRAY_CAST shift to state 200
-- On T_ARRAY shift to state 201
-- On T_ABSTRACT shift to state 694
-- On TTILDE shift to state 204
-- On TSEMICOLON shift to state 655
-- On TPLUS shift to state 205
-- On TOPAR shift to state 206
-- On TOBRACE shift to state 656
-- On TOBRA shift to state 209
-- On TMINUS shift to state 210
-- On TGUIL shift to state 211
-- On TDOLLARDOLLAR shift to state 213
-- On TDOLLAR shift to state 214
-- On TBANG shift to state 216
-- On TBACKQUOTE shift to state 217
-- On TANTISLASH shift to state 85
-- On LDots shift to state 222
-- On unticked_function_declaration shift to state 696
-- On unticked_class_declaration shift to state 697
-- On type_declaration shift to state 1062
-- On top_statement shift to state 1063
-- On statement shift to state 1064
-- On simple_expr shift to state 223
-- On qualified_name shift to state 94
-- On qualified_class_name shift to state 225
-- On primary_expr shift to state 226
-- On new_expr shift to state 227
-- On namespace_use_declaration shift to state 1065
-- On namespace_name shift to state 102
-- On namespace_declaration shift to state 1066
-- On member_expr shift to state 228
-- On main shift to state 1078
-- On list(top_statement) shift to state 1079
-- On lambda_expr shift to state 231
-- On ident_in_name shift to state 57
-- On ident shift to state 56
-- On function_declaration shift to state 1068
-- On expr shift to state 704
-- On constant_declaration shift to state 1069
-- On constant shift to state 239
-- On class_entry_type shift to state 706
-- On class_declaration shift to state 1070
-- On call_expr shift to state 240
-- On attributes shift to state 717
## Reductions:
-- On EOF
--   reduce production list(top_statement) ->

State 1:
## Known stack suffix:
## T__AT
## LR(1) items:
expr -> T__AT . expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
## Transitions:
-- On T__AT shift to state 1
-- On T_YIELD shift to state 2
-- On T_VARIABLE shift to state 3
-- On T_UNSET_CAST shift to state 5
-- On T_TYPE shift to state 6
-- On T_TRAIT_C shift to state 7
-- On T_SUPER shift to state 8
-- On T_STRING_CAST shift to state 9
-- On T_STATIC shift to state 10
-- On T_START_HEREDOC shift to state 25
-- On T_SELF shift to state 40
-- On T_REQUIRE_ONCE shift to state 41
-- On T_REQUIRE shift to state 42
-- On T_PRINT shift to state 43
-- On T_PARENT shift to state 44
-- On T_OBJECT_CAST shift to state 45
-- On T_NEW shift to state 46
-- On T_NAMESPACE_C shift to state 49
-- On T_NAMESPACE shift to state 50
-- On T_METHOD_C shift to state 58
-- On T_METAVAR shift to state 17
-- On T_LNUMBER shift to state 59
-- On T_LIST shift to state 69
-- On T_LINE shift to state 60
-- On T_LAMBDA_OPAR shift to state 73
-- On T_ISSET shift to state 133
-- On T_INT_CAST shift to state 135
-- On T_INSTANCEOF shift to state 52
-- On T_INCLUDE_ONCE shift to state 136
-- On T_INCLUDE shift to state 137
-- On T_INC shift to state 138
-- On T_IDENT shift to state 18
-- On T_FUNC_C shift to state 61
-- On T_FUNCTION shift to state 139
-- On T_FILE shift to state 62
-- On T_EXIT shift to state 160
-- On T_EVAL shift to state 162
-- On T_ENUM shift to state 19
-- On T_EMPTY shift to state 164
-- On T_DOUBLE_CAST shift to state 168
-- On T_DNUMBER shift to state 63
-- On T_DIR shift to state 64
-- On T_DEC shift to state 169
-- On T_CONSTANT_ENCAPSED_STRING shift to state 65
-- On T_CLONE shift to state 170
-- On T_CLASS_C shift to state 66
-- On T_BOOL_CAST shift to state 171
-- On T_AWAIT shift to state 172
-- On T_ASYNC shift to state 173
-- On T_ARRAY_CAST shift to state 200
-- On T_ARRAY shift to state 201
-- On TTILDE shift to state 204
-- On TPLUS shift to state 205
-- On TOPAR shift to state 206
-- On TOBRA shift to state 209
-- On TMINUS shift to state 210
-- On TGUIL shift to state 211
-- On TDOLLARDOLLAR shift to state 213
-- On TDOLLAR shift to state 214
-- On TBANG shift to state 216
-- On TBACKQUOTE shift to state 217
-- On TANTISLASH shift to state 85
-- On LDots shift to state 222
-- On simple_expr shift to state 223
-- On qualified_name shift to state 94
-- On qualified_class_name shift to state 225
-- On primary_expr shift to state 226
-- On new_expr shift to state 227
-- On namespace_name shift to state 102
-- On member_expr shift to state 228
-- On lambda_expr shift to state 231
-- On ident_in_name shift to state 57
-- On ident shift to state 56
-- On expr shift to state 1012
-- On constant shift to state 239
-- On call_expr shift to state 240
## Reductions:

State 2:
## Known stack suffix:
## T_YIELD
## LR(1) items:
expr -> T_YIELD . expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> T_YIELD . expr T_ARROW expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> T_YIELD . T_FROM expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> T_YIELD . T_BREAK [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
## Transitions:
-- On T__AT shift to state 1
-- On T_YIELD shift to state 2
-- On T_VARIABLE shift to state 3
-- On T_UNSET_CAST shift to state 5
-- On T_TYPE shift to state 6
-- On T_TRAIT_C shift to state 7
-- On T_SUPER shift to state 8
-- On T_STRING_CAST shift to state 9
-- On T_STATIC shift to state 10
-- On T_START_HEREDOC shift to state 25
-- On T_SELF shift to state 40
-- On T_REQUIRE_ONCE shift to state 41
-- On T_REQUIRE shift to state 42
-- On T_PRINT shift to state 43
-- On T_PARENT shift to state 44
-- On T_OBJECT_CAST shift to state 45
-- On T_NEW shift to state 46
-- On T_NAMESPACE_C shift to state 49
-- On T_NAMESPACE shift to state 50
-- On T_METHOD_C shift to state 58
-- On T_METAVAR shift to state 17
-- On T_LNUMBER shift to state 59
-- On T_LIST shift to state 69
-- On T_LINE shift to state 60
-- On T_LAMBDA_OPAR shift to state 73
-- On T_ISSET shift to state 133
-- On T_INT_CAST shift to state 135
-- On T_INSTANCEOF shift to state 52
-- On T_INCLUDE_ONCE shift to state 136
-- On T_INCLUDE shift to state 137
-- On T_INC shift to state 138
-- On T_IDENT shift to state 18
-- On T_FUNC_C shift to state 61
-- On T_FUNCTION shift to state 139
-- On T_FROM shift to state 1006
-- On T_FILE shift to state 62
-- On T_EXIT shift to state 160
-- On T_EVAL shift to state 162
-- On T_ENUM shift to state 19
-- On T_EMPTY shift to state 164
-- On T_DOUBLE_CAST shift to state 168
-- On T_DNUMBER shift to state 63
-- On T_DIR shift to state 64
-- On T_DEC shift to state 169
-- On T_CONSTANT_ENCAPSED_STRING shift to state 65
-- On T_CLONE shift to state 170
-- On T_CLASS_C shift to state 66
-- On T_BREAK shift to state 1008
-- On T_BOOL_CAST shift to state 171
-- On T_AWAIT shift to state 172
-- On T_ASYNC shift to state 173
-- On T_ARRAY_CAST shift to state 200
-- On T_ARRAY shift to state 201
-- On TTILDE shift to state 204
-- On TPLUS shift to state 205
-- On TOPAR shift to state 206
-- On TOBRA shift to state 209
-- On TMINUS shift to state 210
-- On TGUIL shift to state 211
-- On TDOLLARDOLLAR shift to state 213
-- On TDOLLAR shift to state 214
-- On TBANG shift to state 216
-- On TBACKQUOTE shift to state 217
-- On TANTISLASH shift to state 85
-- On LDots shift to state 222
-- On simple_expr shift to state 223
-- On qualified_name shift to state 94
-- On qualified_class_name shift to state 225
-- On primary_expr shift to state 226
-- On new_expr shift to state 227
-- On namespace_name shift to state 102
-- On member_expr shift to state 228
-- On lambda_expr shift to state 231
-- On ident_in_name shift to state 57
-- On ident shift to state 56
-- On expr shift to state 1009
-- On constant shift to state 239
-- On call_expr shift to state 240
## Reductions:

State 3:
## Known stack suffix:
## T_VARIABLE
## LR(1) items:
lambda_expr -> T_VARIABLE . lambda_body [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
primary_expr -> T_VARIABLE . [ T_XOR_EQUAL T_SR_EQUAL T_SR T_SL_EQUAL T_SL T_ROCKET T_PLUS_EQUAL T_OR_EQUAL T_OBJECT_OPERATOR T_MUL_EQUAL T_MOD_EQUAL T_MINUS_EQUAL T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DIV_EQUAL T_DEC T_CONCAT_EQUAL T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW T_AND_EQUAL TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TOPAR TOBRACE TOBRA TMUL TMOD TMINUS TGREATER TEQ TDOT TDIV TCPAR TCOMMA TCOLON TCOLCOL TCBRACE TCBRA TAND RDots EOF ]
## Transitions:
-- On T_DOUBLE_ARROW shift to state 4
-- On lambda_body shift to state 1005
## Reductions:
-- On T_XOR_EQUAL T_SR_EQUAL T_SR T_SL_EQUAL T_SL T_ROCKET T_PLUS_EQUAL T_OR_EQUAL T_OBJECT_OPERATOR T_MUL_EQUAL T_MOD_EQUAL T_MINUS_EQUAL T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DIV_EQUAL T_DEC T_CONCAT_EQUAL T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW T_AND_EQUAL TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TOPAR TOBRACE TOBRA TMUL TMOD TMINUS TGREATER TEQ TDOT TDIV TCPAR TCOMMA TCOLON TCOLCOL TCBRACE TCBRA TAND RDots EOF
--   reduce production primary_expr -> T_VARIABLE

State 4:
## Known stack suffix:
## T_DOUBLE_ARROW
## LR(1) items:
lambda_body -> T_DOUBLE_ARROW . TOBRACE list(inner_statement) TCBRACE [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
lambda_body -> T_DOUBLE_ARROW . expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
## Transitions:
-- On T__AT shift to state 1
-- On T_YIELD shift to state 2
-- On T_VARIABLE shift to state 3
-- On T_UNSET_CAST shift to state 5
-- On T_TYPE shift to state 6
-- On T_TRAIT_C shift to state 7
-- On T_SUPER shift to state 8
-- On T_STRING_CAST shift to state 9
-- On T_STATIC shift to state 10
-- On T_START_HEREDOC shift to state 25
-- On T_SELF shift to state 40
-- On T_REQUIRE_ONCE shift to state 41
-- On T_REQUIRE shift to state 42
-- On T_PRINT shift to state 43
-- On T_PARENT shift to state 44
-- On T_OBJECT_CAST shift to state 45
-- On T_NEW shift to state 46
-- On T_NAMESPACE_C shift to state 49
-- On T_NAMESPACE shift to state 50
-- On T_METHOD_C shift to state 58
-- On T_METAVAR shift to state 17
-- On T_LNUMBER shift to state 59
-- On T_LIST shift to state 69
-- On T_LINE shift to state 60
-- On T_LAMBDA_OPAR shift to state 73
-- On T_ISSET shift to state 133
-- On T_INT_CAST shift to state 135
-- On T_INSTANCEOF shift to state 52
-- On T_INCLUDE_ONCE shift to state 136
-- On T_INCLUDE shift to state 137
-- On T_INC shift to state 138
-- On T_IDENT shift to state 18
-- On T_FUNC_C shift to state 61
-- On T_FUNCTION shift to state 139
-- On T_FILE shift to state 62
-- On T_EXIT shift to state 160
-- On T_EVAL shift to state 162
-- On T_ENUM shift to state 19
-- On T_EMPTY shift to state 164
-- On T_DOUBLE_CAST shift to state 168
-- On T_DNUMBER shift to state 63
-- On T_DIR shift to state 64
-- On T_DEC shift to state 169
-- On T_CONSTANT_ENCAPSED_STRING shift to state 65
-- On T_CLONE shift to state 170
-- On T_CLASS_C shift to state 66
-- On T_BOOL_CAST shift to state 171
-- On T_AWAIT shift to state 172
-- On T_ASYNC shift to state 173
-- On T_ARRAY_CAST shift to state 200
-- On T_ARRAY shift to state 201
-- On TTILDE shift to state 204
-- On TPLUS shift to state 205
-- On TOPAR shift to state 206
-- On TOBRACE shift to state 1001
-- On TOBRA shift to state 209
-- On TMINUS shift to state 210
-- On TGUIL shift to state 211
-- On TDOLLARDOLLAR shift to state 213
-- On TDOLLAR shift to state 214
-- On TBANG shift to state 216
-- On TBACKQUOTE shift to state 217
-- On TANTISLASH shift to state 85
-- On LDots shift to state 222
-- On simple_expr shift to state 223
-- On qualified_name shift to state 94
-- On qualified_class_name shift to state 225
-- On primary_expr shift to state 226
-- On new_expr shift to state 227
-- On namespace_name shift to state 102
-- On member_expr shift to state 228
-- On lambda_expr shift to state 231
-- On ident_in_name shift to state 57
-- On ident shift to state 56
-- On expr shift to state 1004
-- On constant shift to state 239
-- On call_expr shift to state 240
## Reductions:

State 5:
## Known stack suffix:
## T_UNSET_CAST
## LR(1) items:
expr -> T_UNSET_CAST . expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
## Transitions:
-- On T__AT shift to state 1
-- On T_YIELD shift to state 2
-- On T_VARIABLE shift to state 3
-- On T_UNSET_CAST shift to state 5
-- On T_TYPE shift to state 6
-- On T_TRAIT_C shift to state 7
-- On T_SUPER shift to state 8
-- On T_STRING_CAST shift to state 9
-- On T_STATIC shift to state 10
-- On T_START_HEREDOC shift to state 25
-- On T_SELF shift to state 40
-- On T_REQUIRE_ONCE shift to state 41
-- On T_REQUIRE shift to state 42
-- On T_PRINT shift to state 43
-- On T_PARENT shift to state 44
-- On T_OBJECT_CAST shift to state 45
-- On T_NEW shift to state 46
-- On T_NAMESPACE_C shift to state 49
-- On T_NAMESPACE shift to state 50
-- On T_METHOD_C shift to state 58
-- On T_METAVAR shift to state 17
-- On T_LNUMBER shift to state 59
-- On T_LIST shift to state 69
-- On T_LINE shift to state 60
-- On T_LAMBDA_OPAR shift to state 73
-- On T_ISSET shift to state 133
-- On T_INT_CAST shift to state 135
-- On T_INSTANCEOF shift to state 52
-- On T_INCLUDE_ONCE shift to state 136
-- On T_INCLUDE shift to state 137
-- On T_INC shift to state 138
-- On T_IDENT shift to state 18
-- On T_FUNC_C shift to state 61
-- On T_FUNCTION shift to state 139
-- On T_FILE shift to state 62
-- On T_EXIT shift to state 160
-- On T_EVAL shift to state 162
-- On T_ENUM shift to state 19
-- On T_EMPTY shift to state 164
-- On T_DOUBLE_CAST shift to state 168
-- On T_DNUMBER shift to state 63
-- On T_DIR shift to state 64
-- On T_DEC shift to state 169
-- On T_CONSTANT_ENCAPSED_STRING shift to state 65
-- On T_CLONE shift to state 170
-- On T_CLASS_C shift to state 66
-- On T_BOOL_CAST shift to state 171
-- On T_AWAIT shift to state 172
-- On T_ASYNC shift to state 173
-- On T_ARRAY_CAST shift to state 200
-- On T_ARRAY shift to state 201
-- On TTILDE shift to state 204
-- On TPLUS shift to state 205
-- On TOPAR shift to state 206
-- On TOBRA shift to state 209
-- On TMINUS shift to state 210
-- On TGUIL shift to state 211
-- On TDOLLARDOLLAR shift to state 213
-- On TDOLLAR shift to state 214
-- On TBANG shift to state 216
-- On TBACKQUOTE shift to state 217
-- On TANTISLASH shift to state 85
-- On LDots shift to state 222
-- On simple_expr shift to state 223
-- On qualified_name shift to state 94
-- On qualified_class_name shift to state 225
-- On primary_expr shift to state 226
-- On new_expr shift to state 227
-- On namespace_name shift to state 102
-- On member_expr shift to state 228
-- On lambda_expr shift to state 231
-- On ident_in_name shift to state 57
-- On ident shift to state 56
-- On expr shift to state 1000
-- On constant shift to state 239
-- On call_expr shift to state 240
## Reductions:

State 6:
## Known stack suffix:
## T_TYPE
## LR(1) items:
ident -> T_TYPE . [ T_XOR_EQUAL T_VARIABLE T_TYPE T_SUPER T_SR_EQUAL T_SR T_SL_EQUAL T_SL T_ROCKET T_PLUS_EQUAL T_OR_EQUAL T_OBJECT_OPERATOR T_NEW T_MUL_EQUAL T_MOD_EQUAL T_MINUS_EQUAL T_METAVAR T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LIST T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_IMPLEMENTS T_IDENT T_FROM T_EXTENDS T_ENUM T_ELLIPSIS T_DOUBLE_ARROW T_DIV_EQUAL T_DEC T_CONCAT_EQUAL T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW T_AND_EQUAL TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TOPAR TOBRACE TOBRA TMUL TMOD TMINUS TGREATER TEQ TDOT TDIV TCPAR TCOMMA TCOLON TCOLCOL TCBRACE TCBRA TANTISLASH TAND RDots EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production ident -> T_TYPE

State 7:
## Known stack suffix:
## T_TRAIT_C
## LR(1) items:
constant -> T_TRAIT_C . [ T_XOR_EQUAL T_SR_EQUAL T_SR T_SL_EQUAL T_SL T_ROCKET T_PLUS_EQUAL T_OR_EQUAL T_OBJECT_OPERATOR T_MUL_EQUAL T_MOD_EQUAL T_MINUS_EQUAL T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DIV_EQUAL T_DEC T_CONCAT_EQUAL T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW T_AND_EQUAL TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TOPAR TOBRACE TOBRA TMUL TMOD TMINUS TGREATER TEQ TDOT TDIV TCPAR TCOMMA TCOLON TCOLCOL TCBRACE TCBRA TAND RDots EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production constant -> T_TRAIT_C

State 8:
## Known stack suffix:
## T_SUPER
## LR(1) items:
ident -> T_SUPER . [ T_XOR_EQUAL T_VARIABLE T_TYPE T_SUPER T_SR_EQUAL T_SR T_SL_EQUAL T_SL T_ROCKET T_PLUS_EQUAL T_OR_EQUAL T_OBJECT_OPERATOR T_NEW T_MUL_EQUAL T_MOD_EQUAL T_MINUS_EQUAL T_METAVAR T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LIST T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_IMPLEMENTS T_IDENT T_FROM T_EXTENDS T_ENUM T_ELLIPSIS T_DOUBLE_ARROW T_DIV_EQUAL T_DEC T_CONCAT_EQUAL T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW T_AND_EQUAL TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TOPAR TOBRACE TOBRA TMUL TMOD TMINUS TGREATER TEQ TDOT TDIV TCPAR TCOMMA TCOLON TCOLCOL TCBRACE TCBRA TANTISLASH TAND RDots EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production ident -> T_SUPER

State 9:
## Known stack suffix:
## T_STRING_CAST
## LR(1) items:
expr -> T_STRING_CAST . expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
## Transitions:
-- On T__AT shift to state 1
-- On T_YIELD shift to state 2
-- On T_VARIABLE shift to state 3
-- On T_UNSET_CAST shift to state 5
-- On T_TYPE shift to state 6
-- On T_TRAIT_C shift to state 7
-- On T_SUPER shift to state 8
-- On T_STRING_CAST shift to state 9
-- On T_STATIC shift to state 10
-- On T_START_HEREDOC shift to state 25
-- On T_SELF shift to state 40
-- On T_REQUIRE_ONCE shift to state 41
-- On T_REQUIRE shift to state 42
-- On T_PRINT shift to state 43
-- On T_PARENT shift to state 44
-- On T_OBJECT_CAST shift to state 45
-- On T_NEW shift to state 46
-- On T_NAMESPACE_C shift to state 49
-- On T_NAMESPACE shift to state 50
-- On T_METHOD_C shift to state 58
-- On T_METAVAR shift to state 17
-- On T_LNUMBER shift to state 59
-- On T_LIST shift to state 69
-- On T_LINE shift to state 60
-- On T_LAMBDA_OPAR shift to state 73
-- On T_ISSET shift to state 133
-- On T_INT_CAST shift to state 135
-- On T_INSTANCEOF shift to state 52
-- On T_INCLUDE_ONCE shift to state 136
-- On T_INCLUDE shift to state 137
-- On T_INC shift to state 138
-- On T_IDENT shift to state 18
-- On T_FUNC_C shift to state 61
-- On T_FUNCTION shift to state 139
-- On T_FILE shift to state 62
-- On T_EXIT shift to state 160
-- On T_EVAL shift to state 162
-- On T_ENUM shift to state 19
-- On T_EMPTY shift to state 164
-- On T_DOUBLE_CAST shift to state 168
-- On T_DNUMBER shift to state 63
-- On T_DIR shift to state 64
-- On T_DEC shift to state 169
-- On T_CONSTANT_ENCAPSED_STRING shift to state 65
-- On T_CLONE shift to state 170
-- On T_CLASS_C shift to state 66
-- On T_BOOL_CAST shift to state 171
-- On T_AWAIT shift to state 172
-- On T_ASYNC shift to state 173
-- On T_ARRAY_CAST shift to state 200
-- On T_ARRAY shift to state 201
-- On TTILDE shift to state 204
-- On TPLUS shift to state 205
-- On TOPAR shift to state 206
-- On TOBRA shift to state 209
-- On TMINUS shift to state 210
-- On TGUIL shift to state 211
-- On TDOLLARDOLLAR shift to state 213
-- On TDOLLAR shift to state 214
-- On TBANG shift to state 216
-- On TBACKQUOTE shift to state 217
-- On TANTISLASH shift to state 85
-- On LDots shift to state 222
-- On simple_expr shift to state 223
-- On qualified_name shift to state 94
-- On qualified_class_name shift to state 225
-- On primary_expr shift to state 226
-- On new_expr shift to state 227
-- On namespace_name shift to state 102
-- On member_expr shift to state 228
-- On lambda_expr shift to state 231
-- On ident_in_name shift to state 57
-- On ident shift to state 56
-- On expr shift to state 999
-- On constant shift to state 239
-- On call_expr shift to state 240
## Reductions:

State 10:
## Known stack suffix:
## T_STATIC
## LR(1) items:
expr -> T_STATIC . T_FUNCTION is_reference TOPAR parameter_list TCPAR lexical_vars option(return_type) TOBRACE list(inner_statement) TCBRACE [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
primary_expr -> T_STATIC . [ T_XOR_EQUAL T_SR_EQUAL T_SR T_SL_EQUAL T_SL T_ROCKET T_PLUS_EQUAL T_OR_EQUAL T_OBJECT_OPERATOR T_MUL_EQUAL T_MOD_EQUAL T_MINUS_EQUAL T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DIV_EQUAL T_DEC T_CONCAT_EQUAL T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW T_AND_EQUAL TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TOPAR TOBRACE TOBRA TMUL TMOD TMINUS TGREATER TEQ TDOT TDIV TCPAR TCOMMA TCOLON TCOLCOL TCBRACE TCBRA TAND RDots EOF ]
## Transitions:
-- On T_FUNCTION shift to state 11
## Reductions:
-- On T_XOR_EQUAL T_SR_EQUAL T_SR T_SL_EQUAL T_SL T_ROCKET T_PLUS_EQUAL T_OR_EQUAL T_OBJECT_OPERATOR T_MUL_EQUAL T_MOD_EQUAL T_MINUS_EQUAL T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DIV_EQUAL T_DEC T_CONCAT_EQUAL T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW T_AND_EQUAL TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TOPAR TOBRACE TOBRA TMUL TMOD TMINUS TGREATER TEQ TDOT TDIV TCPAR TCOMMA TCOLON TCOLCOL TCBRACE TCBRA TAND RDots EOF
--   reduce production primary_expr -> T_STATIC

State 11:
## Known stack suffix:
## T_STATIC T_FUNCTION
## LR(1) items:
expr -> T_STATIC T_FUNCTION . is_reference TOPAR parameter_list TCPAR lexical_vars option(return_type) TOBRACE list(inner_statement) TCBRACE [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
## Transitions:
-- On TAND shift to state 12
-- On option(TAND) shift to state 13
-- On is_reference shift to state 14
## Reductions:
-- On TOPAR
--   reduce production option(TAND) ->

State 12:
## Known stack suffix:
## TAND
## LR(1) items:
option(TAND) -> TAND . [ T_VARIABLE T_TYPE T_SUPER T_SELF T_PUBLIC T_PARENT T_METAVAR T_INSTANCEOF T_INCLUDE T_IDENT T_FROM T_ENUM T_DEFAULT T_ASYNC TOPAR ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production option(TAND) -> TAND

State 13:
## Known stack suffix:
## option(TAND)
## LR(1) items:
is_reference -> option(TAND) . [ T_TYPE T_SUPER T_SELF T_PUBLIC T_PARENT T_METAVAR T_INSTANCEOF T_INCLUDE T_IDENT T_FROM T_ENUM T_DEFAULT T_ASYNC TOPAR ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production is_reference -> option(TAND)

State 14:
## Known stack suffix:
## T_STATIC T_FUNCTION is_reference
## LR(1) items:
expr -> T_STATIC T_FUNCTION is_reference . TOPAR parameter_list TCPAR lexical_vars option(return_type) TOBRACE list(inner_statement) TCBRACE [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
## Transitions:
-- On TOPAR shift to state 15
## Reductions:

State 15:
## Known stack suffix:
## T_STATIC T_FUNCTION is_reference TOPAR
## LR(1) items:
expr -> T_STATIC T_FUNCTION is_reference TOPAR . parameter_list TCPAR lexical_vars option(return_type) TOBRACE list(inner_statement) TCBRACE [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
## Transitions:
-- On T_SL shift to state 16
-- On parameter_list shift to state 992
-- On parameter shift to state 122
-- On option(attributes) shift to state 125
-- On attributes shift to state 181
## Reductions:
-- On T_VARIABLE T_TYPE T_SUPER T_SELF T_PUBLIC T_PROTECTED T_PRIVATE T_PARENT T_NAMESPACE T_METAVAR T_INSTANCEOF T_IDENT T_ENUM T_ELLIPSIS T_ARRAY TQUESTION TOPAR TANTISLASH TAND
--   reduce production option(attributes) ->
-- On TCPAR
--   reduce production parameter_list ->

State 16:
## Known stack suffix:
## T_SL
## LR(1) items:
attributes -> T_SL . list_sep(attribute,TCOMMA) T_SR [ T_VARIABLE T_TYPE T_TRAIT T_SUPER T_STATIC T_SELF T_PUBLIC T_PROTECTED T_PRIVATE T_PARENT T_NAMESPACE T_METAVAR T_INTERFACE T_INSTANCEOF T_IDENT T_FUNCTION T_FINAL T_ENUM T_ELLIPSIS T_CLASS T_ASYNC T_ARRAY T_ABSTRACT TQUESTION TOPAR TANTISLASH TAND ]
## Transitions:
-- On T_TYPE shift to state 6
-- On T_SUPER shift to state 8
-- On T_METAVAR shift to state 17
-- On T_IDENT shift to state 18
-- On T_ENUM shift to state 19
-- On list_sep(attribute,TCOMMA) shift to state 20
-- On ident shift to state 23
-- On attribute shift to state 991
## Reductions:

State 17:
## Known stack suffix:
## T_METAVAR
## LR(1) items:
ident -> T_METAVAR . [ T_XOR_EQUAL T_VARIABLE T_TYPE T_SUPER T_SR_EQUAL T_SR T_SL_EQUAL T_SL T_ROCKET T_PLUS_EQUAL T_OR_EQUAL T_OBJECT_OPERATOR T_NEW T_MUL_EQUAL T_MOD_EQUAL T_MINUS_EQUAL T_METAVAR T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LIST T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_IMPLEMENTS T_IDENT T_FROM T_EXTENDS T_ENUM T_ELLIPSIS T_DOUBLE_ARROW T_DIV_EQUAL T_DEC T_CONCAT_EQUAL T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW T_AND_EQUAL TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TOPAR TOBRACE TOBRA TMUL TMOD TMINUS TGREATER TEQ TDOT TDIV TCPAR TCOMMA TCOLON TCOLCOL TCBRACE TCBRA TANTISLASH TAND RDots EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production ident -> T_METAVAR

State 18:
## Known stack suffix:
## T_IDENT
## LR(1) items:
ident -> T_IDENT . [ T_XOR_EQUAL T_VARIABLE T_TYPE T_SUPER T_SR_EQUAL T_SR T_SL_EQUAL T_SL T_ROCKET T_PLUS_EQUAL T_OR_EQUAL T_OBJECT_OPERATOR T_NEW T_MUL_EQUAL T_MOD_EQUAL T_MINUS_EQUAL T_METAVAR T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LIST T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_IMPLEMENTS T_IDENT T_FROM T_EXTENDS T_ENUM T_ELLIPSIS T_DOUBLE_ARROW T_DIV_EQUAL T_DEC T_CONCAT_EQUAL T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW T_AND_EQUAL TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TOPAR TOBRACE TOBRA TMUL TMOD TMINUS TGREATER TEQ TDOT TDIV TCPAR TCOMMA TCOLON TCOLCOL TCBRACE TCBRA TANTISLASH TAND RDots EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production ident -> T_IDENT

State 19:
## Known stack suffix:
## T_ENUM
## LR(1) items:
ident -> T_ENUM . [ T_XOR_EQUAL T_VARIABLE T_TYPE T_SUPER T_SR_EQUAL T_SR T_SL_EQUAL T_SL T_ROCKET T_PLUS_EQUAL T_OR_EQUAL T_OBJECT_OPERATOR T_NEW T_MUL_EQUAL T_MOD_EQUAL T_MINUS_EQUAL T_METAVAR T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LIST T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_IMPLEMENTS T_IDENT T_FROM T_EXTENDS T_ENUM T_ELLIPSIS T_DOUBLE_ARROW T_DIV_EQUAL T_DEC T_CONCAT_EQUAL T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW T_AND_EQUAL TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TOPAR TOBRACE TOBRA TMUL TMOD TMINUS TGREATER TEQ TDOT TDIV TCPAR TCOMMA TCOLON TCOLCOL TCBRACE TCBRA TANTISLASH TAND RDots EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production ident -> T_ENUM

State 20:
## Known stack suffix:
## T_SL list_sep(attribute,TCOMMA)
## LR(1) items:
attributes -> T_SL list_sep(attribute,TCOMMA) . T_SR [ T_VARIABLE T_TYPE T_TRAIT T_SUPER T_STATIC T_SELF T_PUBLIC T_PROTECTED T_PRIVATE T_PARENT T_NAMESPACE T_METAVAR T_INTERFACE T_INSTANCEOF T_IDENT T_FUNCTION T_FINAL T_ENUM T_ELLIPSIS T_CLASS T_ASYNC T_ARRAY T_ABSTRACT TQUESTION TOPAR TANTISLASH TAND ]
list_sep(attribute,TCOMMA) -> list_sep(attribute,TCOMMA) . TCOMMA attribute [ T_SR TCOMMA ]
## Transitions:
-- On T_SR shift to state 21
-- On TCOMMA shift to state 22
## Reductions:

State 21:
## Known stack suffix:
## T_SL list_sep(attribute,TCOMMA) T_SR
## LR(1) items:
attributes -> T_SL list_sep(attribute,TCOMMA) T_SR . [ T_VARIABLE T_TYPE T_TRAIT T_SUPER T_STATIC T_SELF T_PUBLIC T_PROTECTED T_PRIVATE T_PARENT T_NAMESPACE T_METAVAR T_INTERFACE T_INSTANCEOF T_IDENT T_FUNCTION T_FINAL T_ENUM T_ELLIPSIS T_CLASS T_ASYNC T_ARRAY T_ABSTRACT TQUESTION TOPAR TANTISLASH TAND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production attributes -> T_SL list_sep(attribute,TCOMMA) T_SR

State 22:
## Known stack suffix:
## list_sep(attribute,TCOMMA) TCOMMA
## LR(1) items:
list_sep(attribute,TCOMMA) -> list_sep(attribute,TCOMMA) TCOMMA . attribute [ T_SR TCOMMA ]
## Transitions:
-- On T_TYPE shift to state 6
-- On T_SUPER shift to state 8
-- On T_METAVAR shift to state 17
-- On T_IDENT shift to state 18
-- On T_ENUM shift to state 19
-- On ident shift to state 23
-- On attribute shift to state 990
## Reductions:

State 23:
## Known stack suffix:
## ident
## LR(1) items:
attribute -> ident . [ T_SR TCOMMA ]
attribute -> ident . TOPAR attribute_argument_list TCPAR [ T_SR TCOMMA ]
## Transitions:
-- On TOPAR shift to state 24
## Reductions:
-- On T_SR TCOMMA
--   reduce production attribute -> ident

State 24:
## Known stack suffix:
## ident TOPAR
## LR(1) items:
attribute -> ident TOPAR . attribute_argument_list TCPAR [ T_SR TCOMMA ]
## Transitions:
-- On T__AT shift to state 1
-- On T_YIELD shift to state 2
-- On T_VARIABLE shift to state 3
-- On T_UNSET_CAST shift to state 5
-- On T_TYPE shift to state 6
-- On T_TRAIT_C shift to state 7
-- On T_SUPER shift to state 8
-- On T_STRING_CAST shift to state 9
-- On T_STATIC shift to state 10
-- On T_START_HEREDOC shift to state 25
-- On T_SELF shift to state 40
-- On T_REQUIRE_ONCE shift to state 41
-- On T_REQUIRE shift to state 42
-- On T_PRINT shift to state 43
-- On T_PARENT shift to state 44
-- On T_OBJECT_CAST shift to state 45
-- On T_NEW shift to state 46
-- On T_NAMESPACE_C shift to state 49
-- On T_NAMESPACE shift to state 50
-- On T_METHOD_C shift to state 58
-- On T_METAVAR shift to state 17
-- On T_LNUMBER shift to state 59
-- On T_LIST shift to state 69
-- On T_LINE shift to state 60
-- On T_LAMBDA_OPAR shift to state 73
-- On T_ISSET shift to state 133
-- On T_INT_CAST shift to state 135
-- On T_INSTANCEOF shift to state 52
-- On T_INCLUDE_ONCE shift to state 136
-- On T_INCLUDE shift to state 137
-- On T_INC shift to state 138
-- On T_IDENT shift to state 18
-- On T_FUNC_C shift to state 61
-- On T_FUNCTION shift to state 139
-- On T_FILE shift to state 62
-- On T_EXIT shift to state 160
-- On T_EVAL shift to state 162
-- On T_ENUM shift to state 19
-- On T_EMPTY shift to state 164
-- On T_DOUBLE_CAST shift to state 168
-- On T_DNUMBER shift to state 63
-- On T_DIR shift to state 64
-- On T_DEC shift to state 169
-- On T_CONSTANT_ENCAPSED_STRING shift to state 65
-- On T_CLONE shift to state 170
-- On T_CLASS_C shift to state 66
-- On T_BOOL_CAST shift to state 171
-- On T_AWAIT shift to state 172
-- On T_ASYNC shift to state 173
-- On T_ARRAY_CAST shift to state 200
-- On T_ARRAY shift to state 201
-- On TTILDE shift to state 204
-- On TPLUS shift to state 205
-- On TOPAR shift to state 206
-- On TOBRA shift to state 209
-- On TMINUS shift to state 210
-- On TGUIL shift to state 211
-- On TDOLLARDOLLAR shift to state 213
-- On TDOLLAR shift to state 214
-- On TBANG shift to state 216
-- On TBACKQUOTE shift to state 217
-- On TANTISLASH shift to state 85
-- On LDots shift to state 222
-- On static_scalar shift to state 984
-- On simple_expr shift to state 223
-- On qualified_name shift to state 94
-- On qualified_class_name shift to state 225
-- On primary_expr shift to state 226
-- On new_expr shift to state 227
-- On namespace_name shift to state 102
-- On member_expr shift to state 228
-- On lambda_expr shift to state 231
-- On ident_in_name shift to state 57
-- On ident shift to state 56
-- On expr shift to state 465
-- On constant shift to state 239
-- On call_expr shift to state 240
-- On attribute_argument_list shift to state 985
-- On attribute_argument shift to state 989
## Reductions:
-- On TCPAR TCOMMA
--   reduce production attribute_argument_list ->

State 25:
## Known stack suffix:
## T_START_HEREDOC
## LR(1) items:
primary_expr -> T_START_HEREDOC . list(encaps) T_END_HEREDOC [ T_XOR_EQUAL T_SR_EQUAL T_SR T_SL_EQUAL T_SL T_ROCKET T_PLUS_EQUAL T_OR_EQUAL T_OBJECT_OPERATOR T_MUL_EQUAL T_MOD_EQUAL T_MINUS_EQUAL T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DIV_EQUAL T_DEC T_CONCAT_EQUAL T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW T_AND_EQUAL TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TOPAR TOBRACE TOBRA TMUL TMOD TMINUS TGREATER TEQ TDOT TDIV TCPAR TCOMMA TCOLON TCOLCOL TCBRACE TCBRA TAND RDots EOF ]
## Transitions:
-- On T_VARIABLE shift to state 26
-- On T_ENCAPSED_AND_WHITESPACE shift to state 36
-- On T_DOLLAR_OPEN_CURLY_BRACES shift to state 37
-- On T_CURLY_OPEN shift to state 212
-- On list(encaps) shift to state 982
-- On encaps shift to state 220
## Reductions:
-- On T_END_HEREDOC
--   reduce production list(encaps) ->

State 26:
## Known stack suffix:
## T_VARIABLE
## LR(1) items:
encaps -> T_VARIABLE . [ T_VARIABLE T_END_HEREDOC T_ENCAPSED_AND_WHITESPACE T_DOLLAR_OPEN_CURLY_BRACES T_CURLY_OPEN TGUIL TBACKQUOTE ]
encaps -> T_VARIABLE . TOBRA encaps_var_offset TCBRA [ T_VARIABLE T_END_HEREDOC T_ENCAPSED_AND_WHITESPACE T_DOLLAR_OPEN_CURLY_BRACES T_CURLY_OPEN TGUIL TBACKQUOTE ]
encaps -> T_VARIABLE . T_OBJECT_OPERATOR ident_encaps [ T_VARIABLE T_END_HEREDOC T_ENCAPSED_AND_WHITESPACE T_DOLLAR_OPEN_CURLY_BRACES T_CURLY_OPEN TGUIL TBACKQUOTE ]
## Transitions:
-- On T_OBJECT_OPERATOR shift to state 27
-- On TOBRA shift to state 30
## Reductions:
-- On T_VARIABLE T_END_HEREDOC T_ENCAPSED_AND_WHITESPACE T_DOLLAR_OPEN_CURLY_BRACES T_CURLY_OPEN TGUIL TBACKQUOTE
--   reduce production encaps -> T_VARIABLE

State 27:
## Known stack suffix:
## T_VARIABLE T_OBJECT_OPERATOR
## LR(1) items:
encaps -> T_VARIABLE T_OBJECT_OPERATOR . ident_encaps [ T_VARIABLE T_END_HEREDOC T_ENCAPSED_AND_WHITESPACE T_DOLLAR_OPEN_CURLY_BRACES T_CURLY_OPEN TGUIL TBACKQUOTE ]
## Transitions:
-- On T_IDENT shift to state 28
-- On ident_encaps shift to state 29
## Reductions:

State 28:
## Known stack suffix:
## T_IDENT
## LR(1) items:
ident_encaps -> T_IDENT . [ T_VARIABLE T_END_HEREDOC T_ENCAPSED_AND_WHITESPACE T_DOLLAR_OPEN_CURLY_BRACES T_CURLY_OPEN TGUIL TCBRA TBACKQUOTE ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production ident_encaps -> T_IDENT

State 29:
## Known stack suffix:
## T_VARIABLE T_OBJECT_OPERATOR ident_encaps
## LR(1) items:
encaps -> T_VARIABLE T_OBJECT_OPERATOR ident_encaps . [ T_VARIABLE T_END_HEREDOC T_ENCAPSED_AND_WHITESPACE T_DOLLAR_OPEN_CURLY_BRACES T_CURLY_OPEN TGUIL TBACKQUOTE ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production encaps -> T_VARIABLE T_OBJECT_OPERATOR ident_encaps

State 30:
## Known stack suffix:
## T_VARIABLE TOBRA
## LR(1) items:
encaps -> T_VARIABLE TOBRA . encaps_var_offset TCBRA [ T_VARIABLE T_END_HEREDOC T_ENCAPSED_AND_WHITESPACE T_DOLLAR_OPEN_CURLY_BRACES T_CURLY_OPEN TGUIL TBACKQUOTE ]
## Transitions:
-- On T_VARIABLE shift to state 31
-- On T_NUM_STRING shift to state 32
-- On T_IDENT shift to state 28
-- On ident_encaps shift to state 33
-- On encaps_var_offset shift to state 34
## Reductions:

State 31:
## Known stack suffix:
## T_VARIABLE
## LR(1) items:
encaps_var_offset -> T_VARIABLE . [ TCBRA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production encaps_var_offset -> T_VARIABLE

State 32:
## Known stack suffix:
## T_NUM_STRING
## LR(1) items:
encaps_var_offset -> T_NUM_STRING . [ TCBRA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production encaps_var_offset -> T_NUM_STRING

State 33:
## Known stack suffix:
## ident_encaps
## LR(1) items:
encaps_var_offset -> ident_encaps . [ TCBRA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production encaps_var_offset -> ident_encaps

State 34:
## Known stack suffix:
## T_VARIABLE TOBRA encaps_var_offset
## LR(1) items:
encaps -> T_VARIABLE TOBRA encaps_var_offset . TCBRA [ T_VARIABLE T_END_HEREDOC T_ENCAPSED_AND_WHITESPACE T_DOLLAR_OPEN_CURLY_BRACES T_CURLY_OPEN TGUIL TBACKQUOTE ]
## Transitions:
-- On TCBRA shift to state 35
## Reductions:

State 35:
## Known stack suffix:
## T_VARIABLE TOBRA encaps_var_offset TCBRA
## LR(1) items:
encaps -> T_VARIABLE TOBRA encaps_var_offset TCBRA . [ T_VARIABLE T_END_HEREDOC T_ENCAPSED_AND_WHITESPACE T_DOLLAR_OPEN_CURLY_BRACES T_CURLY_OPEN TGUIL TBACKQUOTE ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production encaps -> T_VARIABLE TOBRA encaps_var_offset TCBRA

State 36:
## Known stack suffix:
## T_ENCAPSED_AND_WHITESPACE
## LR(1) items:
encaps -> T_ENCAPSED_AND_WHITESPACE . [ T_VARIABLE T_END_HEREDOC T_ENCAPSED_AND_WHITESPACE T_DOLLAR_OPEN_CURLY_BRACES T_CURLY_OPEN TGUIL TBACKQUOTE ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production encaps -> T_ENCAPSED_AND_WHITESPACE

State 37:
## Known stack suffix:
## T_DOLLAR_OPEN_CURLY_BRACES
## LR(1) items:
encaps -> T_DOLLAR_OPEN_CURLY_BRACES . T_STRING_VARNAME TCBRACE [ T_VARIABLE T_END_HEREDOC T_ENCAPSED_AND_WHITESPACE T_DOLLAR_OPEN_CURLY_BRACES T_CURLY_OPEN TGUIL TBACKQUOTE ]
encaps -> T_DOLLAR_OPEN_CURLY_BRACES . T_STRING_VARNAME TOBRA expr TCBRA TCBRACE [ T_VARIABLE T_END_HEREDOC T_ENCAPSED_AND_WHITESPACE T_DOLLAR_OPEN_CURLY_BRACES T_CURLY_OPEN TGUIL TBACKQUOTE ]
encaps -> T_DOLLAR_OPEN_CURLY_BRACES . expr TCBRACE [ T_VARIABLE T_END_HEREDOC T_ENCAPSED_AND_WHITESPACE T_DOLLAR_OPEN_CURLY_BRACES T_CURLY_OPEN TGUIL TBACKQUOTE ]
## Transitions:
-- On T__AT shift to state 1
-- On T_YIELD shift to state 2
-- On T_VARIABLE shift to state 3
-- On T_UNSET_CAST shift to state 5
-- On T_TYPE shift to state 6
-- On T_TRAIT_C shift to state 7
-- On T_SUPER shift to state 8
-- On T_STRING_VARNAME shift to state 38
-- On T_STRING_CAST shift to state 9
-- On T_STATIC shift to state 10
-- On T_START_HEREDOC shift to state 25
-- On T_SELF shift to state 40
-- On T_REQUIRE_ONCE shift to state 41
-- On T_REQUIRE shift to state 42
-- On T_PRINT shift to state 43
-- On T_PARENT shift to state 44
-- On T_OBJECT_CAST shift to state 45
-- On T_NEW shift to state 46
-- On T_NAMESPACE_C shift to state 49
-- On T_NAMESPACE shift to state 50
-- On T_METHOD_C shift to state 58
-- On T_METAVAR shift to state 17
-- On T_LNUMBER shift to state 59
-- On T_LIST shift to state 69
-- On T_LINE shift to state 60
-- On T_LAMBDA_OPAR shift to state 73
-- On T_ISSET shift to state 133
-- On T_INT_CAST shift to state 135
-- On T_INSTANCEOF shift to state 52
-- On T_INCLUDE_ONCE shift to state 136
-- On T_INCLUDE shift to state 137
-- On T_INC shift to state 138
-- On T_IDENT shift to state 18
-- On T_FUNC_C shift to state 61
-- On T_FUNCTION shift to state 139
-- On T_FILE shift to state 62
-- On T_EXIT shift to state 160
-- On T_EVAL shift to state 162
-- On T_ENUM shift to state 19
-- On T_EMPTY shift to state 164
-- On T_DOUBLE_CAST shift to state 168
-- On T_DNUMBER shift to state 63
-- On T_DIR shift to state 64
-- On T_DEC shift to state 169
-- On T_CONSTANT_ENCAPSED_STRING shift to state 65
-- On T_CLONE shift to state 170
-- On T_CLASS_C shift to state 66
-- On T_BOOL_CAST shift to state 171
-- On T_AWAIT shift to state 172
-- On T_ASYNC shift to state 173
-- On T_ARRAY_CAST shift to state 200
-- On T_ARRAY shift to state 201
-- On TTILDE shift to state 204
-- On TPLUS shift to state 205
-- On TOPAR shift to state 206
-- On TOBRA shift to state 209
-- On TMINUS shift to state 210
-- On TGUIL shift to state 211
-- On TDOLLARDOLLAR shift to state 213
-- On TDOLLAR shift to state 214
-- On TBANG shift to state 216
-- On TBACKQUOTE shift to state 217
-- On TANTISLASH shift to state 85
-- On LDots shift to state 222
-- On simple_expr shift to state 223
-- On qualified_name shift to state 94
-- On qualified_class_name shift to state 225
-- On primary_expr shift to state 226
-- On new_expr shift to state 227
-- On namespace_name shift to state 102
-- On member_expr shift to state 228
-- On lambda_expr shift to state 231
-- On ident_in_name shift to state 57
-- On ident shift to state 56
-- On expr shift to state 980
-- On constant shift to state 239
-- On call_expr shift to state 240
## Reductions:

State 38:
## Known stack suffix:
## T_DOLLAR_OPEN_CURLY_BRACES T_STRING_VARNAME
## LR(1) items:
encaps -> T_DOLLAR_OPEN_CURLY_BRACES T_STRING_VARNAME . TCBRACE [ T_VARIABLE T_END_HEREDOC T_ENCAPSED_AND_WHITESPACE T_DOLLAR_OPEN_CURLY_BRACES T_CURLY_OPEN TGUIL TBACKQUOTE ]
encaps -> T_DOLLAR_OPEN_CURLY_BRACES T_STRING_VARNAME . TOBRA expr TCBRA TCBRACE [ T_VARIABLE T_END_HEREDOC T_ENCAPSED_AND_WHITESPACE T_DOLLAR_OPEN_CURLY_BRACES T_CURLY_OPEN TGUIL TBACKQUOTE ]
## Transitions:
-- On TOBRA shift to state 39
-- On TCBRACE shift to state 979
## Reductions:

State 39:
## Known stack suffix:
## T_DOLLAR_OPEN_CURLY_BRACES T_STRING_VARNAME TOBRA
## LR(1) items:
encaps -> T_DOLLAR_OPEN_CURLY_BRACES T_STRING_VARNAME TOBRA . expr TCBRA TCBRACE [ T_VARIABLE T_END_HEREDOC T_ENCAPSED_AND_WHITESPACE T_DOLLAR_OPEN_CURLY_BRACES T_CURLY_OPEN TGUIL TBACKQUOTE ]
## Transitions:
-- On T__AT shift to state 1
-- On T_YIELD shift to state 2
-- On T_VARIABLE shift to state 3
-- On T_UNSET_CAST shift to state 5
-- On T_TYPE shift to state 6
-- On T_TRAIT_C shift to state 7
-- On T_SUPER shift to state 8
-- On T_STRING_CAST shift to state 9
-- On T_STATIC shift to state 10
-- On T_START_HEREDOC shift to state 25
-- On T_SELF shift to state 40
-- On T_REQUIRE_ONCE shift to state 41
-- On T_REQUIRE shift to state 42
-- On T_PRINT shift to state 43
-- On T_PARENT shift to state 44
-- On T_OBJECT_CAST shift to state 45
-- On T_NEW shift to state 46
-- On T_NAMESPACE_C shift to state 49
-- On T_NAMESPACE shift to state 50
-- On T_METHOD_C shift to state 58
-- On T_METAVAR shift to state 17
-- On T_LNUMBER shift to state 59
-- On T_LIST shift to state 69
-- On T_LINE shift to state 60
-- On T_LAMBDA_OPAR shift to state 73
-- On T_ISSET shift to state 133
-- On T_INT_CAST shift to state 135
-- On T_INSTANCEOF shift to state 52
-- On T_INCLUDE_ONCE shift to state 136
-- On T_INCLUDE shift to state 137
-- On T_INC shift to state 138
-- On T_IDENT shift to state 18
-- On T_FUNC_C shift to state 61
-- On T_FUNCTION shift to state 139
-- On T_FILE shift to state 62
-- On T_EXIT shift to state 160
-- On T_EVAL shift to state 162
-- On T_ENUM shift to state 19
-- On T_EMPTY shift to state 164
-- On T_DOUBLE_CAST shift to state 168
-- On T_DNUMBER shift to state 63
-- On T_DIR shift to state 64
-- On T_DEC shift to state 169
-- On T_CONSTANT_ENCAPSED_STRING shift to state 65
-- On T_CLONE shift to state 170
-- On T_CLASS_C shift to state 66
-- On T_BOOL_CAST shift to state 171
-- On T_AWAIT shift to state 172
-- On T_ASYNC shift to state 173
-- On T_ARRAY_CAST shift to state 200
-- On T_ARRAY shift to state 201
-- On TTILDE shift to state 204
-- On TPLUS shift to state 205
-- On TOPAR shift to state 206
-- On TOBRA shift to state 209
-- On TMINUS shift to state 210
-- On TGUIL shift to state 211
-- On TDOLLARDOLLAR shift to state 213
-- On TDOLLAR shift to state 214
-- On TBANG shift to state 216
-- On TBACKQUOTE shift to state 217
-- On TANTISLASH shift to state 85
-- On LDots shift to state 222
-- On simple_expr shift to state 223
-- On qualified_name shift to state 94
-- On qualified_class_name shift to state 225
-- On primary_expr shift to state 226
-- On new_expr shift to state 227
-- On namespace_name shift to state 102
-- On member_expr shift to state 228
-- On lambda_expr shift to state 231
-- On ident_in_name shift to state 57
-- On ident shift to state 56
-- On expr shift to state 976
-- On constant shift to state 239
-- On call_expr shift to state 240
## Reductions:

State 40:
## Known stack suffix:
## T_SELF
## LR(1) items:
primary_expr -> T_SELF . [ T_XOR_EQUAL T_SR_EQUAL T_SR T_SL_EQUAL T_SL T_ROCKET T_PLUS_EQUAL T_OR_EQUAL T_OBJECT_OPERATOR T_MUL_EQUAL T_MOD_EQUAL T_MINUS_EQUAL T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DIV_EQUAL T_DEC T_CONCAT_EQUAL T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW T_AND_EQUAL TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TOPAR TOBRACE TOBRA TMUL TMOD TMINUS TGREATER TEQ TDOT TDIV TCPAR TCOMMA TCOLON TCOLCOL TCBRACE TCBRA TAND RDots EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production primary_expr -> T_SELF

State 41:
## Known stack suffix:
## T_REQUIRE_ONCE
## LR(1) items:
expr -> T_REQUIRE_ONCE . expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> T_REQUIRE_ONCE . T_ELLIPSIS [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
## Transitions:
-- On T__AT shift to state 1
-- On T_YIELD shift to state 2
-- On T_VARIABLE shift to state 3
-- On T_UNSET_CAST shift to state 5
-- On T_TYPE shift to state 6
-- On T_TRAIT_C shift to state 7
-- On T_SUPER shift to state 8
-- On T_STRING_CAST shift to state 9
-- On T_STATIC shift to state 10
-- On T_START_HEREDOC shift to state 25
-- On T_SELF shift to state 40
-- On T_REQUIRE_ONCE shift to state 41
-- On T_REQUIRE shift to state 42
-- On T_PRINT shift to state 43
-- On T_PARENT shift to state 44
-- On T_OBJECT_CAST shift to state 45
-- On T_NEW shift to state 46
-- On T_NAMESPACE_C shift to state 49
-- On T_NAMESPACE shift to state 50
-- On T_METHOD_C shift to state 58
-- On T_METAVAR shift to state 17
-- On T_LNUMBER shift to state 59
-- On T_LIST shift to state 69
-- On T_LINE shift to state 60
-- On T_LAMBDA_OPAR shift to state 73
-- On T_ISSET shift to state 133
-- On T_INT_CAST shift to state 135
-- On T_INSTANCEOF shift to state 52
-- On T_INCLUDE_ONCE shift to state 136
-- On T_INCLUDE shift to state 137
-- On T_INC shift to state 138
-- On T_IDENT shift to state 18
-- On T_FUNC_C shift to state 61
-- On T_FUNCTION shift to state 139
-- On T_FILE shift to state 62
-- On T_EXIT shift to state 160
-- On T_EVAL shift to state 162
-- On T_ENUM shift to state 19
-- On T_EMPTY shift to state 164
-- On T_ELLIPSIS shift to state 974
-- On T_DOUBLE_CAST shift to state 168
-- On T_DNUMBER shift to state 63
-- On T_DIR shift to state 64
-- On T_DEC shift to state 169
-- On T_CONSTANT_ENCAPSED_STRING shift to state 65
-- On T_CLONE shift to state 170
-- On T_CLASS_C shift to state 66
-- On T_BOOL_CAST shift to state 171
-- On T_AWAIT shift to state 172
-- On T_ASYNC shift to state 173
-- On T_ARRAY_CAST shift to state 200
-- On T_ARRAY shift to state 201
-- On TTILDE shift to state 204
-- On TPLUS shift to state 205
-- On TOPAR shift to state 206
-- On TOBRA shift to state 209
-- On TMINUS shift to state 210
-- On TGUIL shift to state 211
-- On TDOLLARDOLLAR shift to state 213
-- On TDOLLAR shift to state 214
-- On TBANG shift to state 216
-- On TBACKQUOTE shift to state 217
-- On TANTISLASH shift to state 85
-- On LDots shift to state 222
-- On simple_expr shift to state 223
-- On qualified_name shift to state 94
-- On qualified_class_name shift to state 225
-- On primary_expr shift to state 226
-- On new_expr shift to state 227
-- On namespace_name shift to state 102
-- On member_expr shift to state 228
-- On lambda_expr shift to state 231
-- On ident_in_name shift to state 57
-- On ident shift to state 56
-- On expr shift to state 975
-- On constant shift to state 239
-- On call_expr shift to state 240
## Reductions:

State 42:
## Known stack suffix:
## T_REQUIRE
## LR(1) items:
expr -> T_REQUIRE . expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> T_REQUIRE . T_ELLIPSIS [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
## Transitions:
-- On T__AT shift to state 1
-- On T_YIELD shift to state 2
-- On T_VARIABLE shift to state 3
-- On T_UNSET_CAST shift to state 5
-- On T_TYPE shift to state 6
-- On T_TRAIT_C shift to state 7
-- On T_SUPER shift to state 8
-- On T_STRING_CAST shift to state 9
-- On T_STATIC shift to state 10
-- On T_START_HEREDOC shift to state 25
-- On T_SELF shift to state 40
-- On T_REQUIRE_ONCE shift to state 41
-- On T_REQUIRE shift to state 42
-- On T_PRINT shift to state 43
-- On T_PARENT shift to state 44
-- On T_OBJECT_CAST shift to state 45
-- On T_NEW shift to state 46
-- On T_NAMESPACE_C shift to state 49
-- On T_NAMESPACE shift to state 50
-- On T_METHOD_C shift to state 58
-- On T_METAVAR shift to state 17
-- On T_LNUMBER shift to state 59
-- On T_LIST shift to state 69
-- On T_LINE shift to state 60
-- On T_LAMBDA_OPAR shift to state 73
-- On T_ISSET shift to state 133
-- On T_INT_CAST shift to state 135
-- On T_INSTANCEOF shift to state 52
-- On T_INCLUDE_ONCE shift to state 136
-- On T_INCLUDE shift to state 137
-- On T_INC shift to state 138
-- On T_IDENT shift to state 18
-- On T_FUNC_C shift to state 61
-- On T_FUNCTION shift to state 139
-- On T_FILE shift to state 62
-- On T_EXIT shift to state 160
-- On T_EVAL shift to state 162
-- On T_ENUM shift to state 19
-- On T_EMPTY shift to state 164
-- On T_ELLIPSIS shift to state 972
-- On T_DOUBLE_CAST shift to state 168
-- On T_DNUMBER shift to state 63
-- On T_DIR shift to state 64
-- On T_DEC shift to state 169
-- On T_CONSTANT_ENCAPSED_STRING shift to state 65
-- On T_CLONE shift to state 170
-- On T_CLASS_C shift to state 66
-- On T_BOOL_CAST shift to state 171
-- On T_AWAIT shift to state 172
-- On T_ASYNC shift to state 173
-- On T_ARRAY_CAST shift to state 200
-- On T_ARRAY shift to state 201
-- On TTILDE shift to state 204
-- On TPLUS shift to state 205
-- On TOPAR shift to state 206
-- On TOBRA shift to state 209
-- On TMINUS shift to state 210
-- On TGUIL shift to state 211
-- On TDOLLARDOLLAR shift to state 213
-- On TDOLLAR shift to state 214
-- On TBANG shift to state 216
-- On TBACKQUOTE shift to state 217
-- On TANTISLASH shift to state 85
-- On LDots shift to state 222
-- On simple_expr shift to state 223
-- On qualified_name shift to state 94
-- On qualified_class_name shift to state 225
-- On primary_expr shift to state 226
-- On new_expr shift to state 227
-- On namespace_name shift to state 102
-- On member_expr shift to state 228
-- On lambda_expr shift to state 231
-- On ident_in_name shift to state 57
-- On ident shift to state 56
-- On expr shift to state 973
-- On constant shift to state 239
-- On call_expr shift to state 240
## Reductions:

State 43:
## Known stack suffix:
## T_PRINT
## LR(1) items:
expr -> T_PRINT . expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
## Transitions:
-- On T__AT shift to state 1
-- On T_YIELD shift to state 2
-- On T_VARIABLE shift to state 3
-- On T_UNSET_CAST shift to state 5
-- On T_TYPE shift to state 6
-- On T_TRAIT_C shift to state 7
-- On T_SUPER shift to state 8
-- On T_STRING_CAST shift to state 9
-- On T_STATIC shift to state 10
-- On T_START_HEREDOC shift to state 25
-- On T_SELF shift to state 40
-- On T_REQUIRE_ONCE shift to state 41
-- On T_REQUIRE shift to state 42
-- On T_PRINT shift to state 43
-- On T_PARENT shift to state 44
-- On T_OBJECT_CAST shift to state 45
-- On T_NEW shift to state 46
-- On T_NAMESPACE_C shift to state 49
-- On T_NAMESPACE shift to state 50
-- On T_METHOD_C shift to state 58
-- On T_METAVAR shift to state 17
-- On T_LNUMBER shift to state 59
-- On T_LIST shift to state 69
-- On T_LINE shift to state 60
-- On T_LAMBDA_OPAR shift to state 73
-- On T_ISSET shift to state 133
-- On T_INT_CAST shift to state 135
-- On T_INSTANCEOF shift to state 52
-- On T_INCLUDE_ONCE shift to state 136
-- On T_INCLUDE shift to state 137
-- On T_INC shift to state 138
-- On T_IDENT shift to state 18
-- On T_FUNC_C shift to state 61
-- On T_FUNCTION shift to state 139
-- On T_FILE shift to state 62
-- On T_EXIT shift to state 160
-- On T_EVAL shift to state 162
-- On T_ENUM shift to state 19
-- On T_EMPTY shift to state 164
-- On T_DOUBLE_CAST shift to state 168
-- On T_DNUMBER shift to state 63
-- On T_DIR shift to state 64
-- On T_DEC shift to state 169
-- On T_CONSTANT_ENCAPSED_STRING shift to state 65
-- On T_CLONE shift to state 170
-- On T_CLASS_C shift to state 66
-- On T_BOOL_CAST shift to state 171
-- On T_AWAIT shift to state 172
-- On T_ASYNC shift to state 173
-- On T_ARRAY_CAST shift to state 200
-- On T_ARRAY shift to state 201
-- On TTILDE shift to state 204
-- On TPLUS shift to state 205
-- On TOPAR shift to state 206
-- On TOBRA shift to state 209
-- On TMINUS shift to state 210
-- On TGUIL shift to state 211
-- On TDOLLARDOLLAR shift to state 213
-- On TDOLLAR shift to state 214
-- On TBANG shift to state 216
-- On TBACKQUOTE shift to state 217
-- On TANTISLASH shift to state 85
-- On LDots shift to state 222
-- On simple_expr shift to state 223
-- On qualified_name shift to state 94
-- On qualified_class_name shift to state 225
-- On primary_expr shift to state 226
-- On new_expr shift to state 227
-- On namespace_name shift to state 102
-- On member_expr shift to state 228
-- On lambda_expr shift to state 231
-- On ident_in_name shift to state 57
-- On ident shift to state 56
-- On expr shift to state 971
-- On constant shift to state 239
-- On call_expr shift to state 240
## Reductions:

State 44:
## Known stack suffix:
## T_PARENT
## LR(1) items:
primary_expr -> T_PARENT . [ T_XOR_EQUAL T_SR_EQUAL T_SR T_SL_EQUAL T_SL T_ROCKET T_PLUS_EQUAL T_OR_EQUAL T_OBJECT_OPERATOR T_MUL_EQUAL T_MOD_EQUAL T_MINUS_EQUAL T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DIV_EQUAL T_DEC T_CONCAT_EQUAL T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW T_AND_EQUAL TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TOPAR TOBRACE TOBRA TMUL TMOD TMINUS TGREATER TEQ TDOT TDIV TCPAR TCOMMA TCOLON TCOLCOL TCBRACE TCBRA TAND RDots EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production primary_expr -> T_PARENT

State 45:
## Known stack suffix:
## T_OBJECT_CAST
## LR(1) items:
expr -> T_OBJECT_CAST . expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
## Transitions:
-- On T__AT shift to state 1
-- On T_YIELD shift to state 2
-- On T_VARIABLE shift to state 3
-- On T_UNSET_CAST shift to state 5
-- On T_TYPE shift to state 6
-- On T_TRAIT_C shift to state 7
-- On T_SUPER shift to state 8
-- On T_STRING_CAST shift to state 9
-- On T_STATIC shift to state 10
-- On T_START_HEREDOC shift to state 25
-- On T_SELF shift to state 40
-- On T_REQUIRE_ONCE shift to state 41
-- On T_REQUIRE shift to state 42
-- On T_PRINT shift to state 43
-- On T_PARENT shift to state 44
-- On T_OBJECT_CAST shift to state 45
-- On T_NEW shift to state 46
-- On T_NAMESPACE_C shift to state 49
-- On T_NAMESPACE shift to state 50
-- On T_METHOD_C shift to state 58
-- On T_METAVAR shift to state 17
-- On T_LNUMBER shift to state 59
-- On T_LIST shift to state 69
-- On T_LINE shift to state 60
-- On T_LAMBDA_OPAR shift to state 73
-- On T_ISSET shift to state 133
-- On T_INT_CAST shift to state 135
-- On T_INSTANCEOF shift to state 52
-- On T_INCLUDE_ONCE shift to state 136
-- On T_INCLUDE shift to state 137
-- On T_INC shift to state 138
-- On T_IDENT shift to state 18
-- On T_FUNC_C shift to state 61
-- On T_FUNCTION shift to state 139
-- On T_FILE shift to state 62
-- On T_EXIT shift to state 160
-- On T_EVAL shift to state 162
-- On T_ENUM shift to state 19
-- On T_EMPTY shift to state 164
-- On T_DOUBLE_CAST shift to state 168
-- On T_DNUMBER shift to state 63
-- On T_DIR shift to state 64
-- On T_DEC shift to state 169
-- On T_CONSTANT_ENCAPSED_STRING shift to state 65
-- On T_CLONE shift to state 170
-- On T_CLASS_C shift to state 66
-- On T_BOOL_CAST shift to state 171
-- On T_AWAIT shift to state 172
-- On T_ASYNC shift to state 173
-- On T_ARRAY_CAST shift to state 200
-- On T_ARRAY shift to state 201
-- On TTILDE shift to state 204
-- On TPLUS shift to state 205
-- On TOPAR shift to state 206
-- On TOBRA shift to state 209
-- On TMINUS shift to state 210
-- On TGUIL shift to state 211
-- On TDOLLARDOLLAR shift to state 213
-- On TDOLLAR shift to state 214
-- On TBANG shift to state 216
-- On TBACKQUOTE shift to state 217
-- On TANTISLASH shift to state 85
-- On LDots shift to state 222
-- On simple_expr shift to state 223
-- On qualified_name shift to state 94
-- On qualified_class_name shift to state 225
-- On primary_expr shift to state 226
-- On new_expr shift to state 227
-- On namespace_name shift to state 102
-- On member_expr shift to state 228
-- On lambda_expr shift to state 231
-- On ident_in_name shift to state 57
-- On ident shift to state 56
-- On expr shift to state 970
-- On constant shift to state 239
-- On call_expr shift to state 240
## Reductions:

State 46:
## Known stack suffix:
## T_NEW
## LR(1) items:
new_expr -> T_NEW . member_expr option(arguments) [ T_XOR_EQUAL T_SR_EQUAL T_SR T_SL_EQUAL T_SL T_ROCKET T_PLUS_EQUAL T_OR_EQUAL T_MUL_EQUAL T_MOD_EQUAL T_MINUS_EQUAL T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DIV_EQUAL T_DEC T_CONCAT_EQUAL T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW T_AND_EQUAL TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TEQ TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
new_expr -> T_NEW . T_CLASS option(arguments) extends_from implements_list TOBRACE list(member_declaration) TCBRACE [ T_XOR_EQUAL T_SR_EQUAL T_SR T_SL_EQUAL T_SL T_ROCKET T_PLUS_EQUAL T_OR_EQUAL T_MUL_EQUAL T_MOD_EQUAL T_MINUS_EQUAL T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DIV_EQUAL T_DEC T_CONCAT_EQUAL T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW T_AND_EQUAL TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TEQ TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
## Transitions:
-- On T_VARIABLE shift to state 47
-- On T_TYPE shift to state 6
-- On T_TRAIT_C shift to state 7
-- On T_SUPER shift to state 8
-- On T_STATIC shift to state 48
-- On T_START_HEREDOC shift to state 25
-- On T_SELF shift to state 40
-- On T_PARENT shift to state 44
-- On T_NAMESPACE_C shift to state 49
-- On T_NAMESPACE shift to state 50
-- On T_METHOD_C shift to state 58
-- On T_METAVAR shift to state 17
-- On T_LNUMBER shift to state 59
-- On T_LINE shift to state 60
-- On T_INSTANCEOF shift to state 52
-- On T_IDENT shift to state 18
-- On T_FUNC_C shift to state 61
-- On T_FILE shift to state 62
-- On T_ENUM shift to state 19
-- On T_DNUMBER shift to state 63
-- On T_DIR shift to state 64
-- On T_CONSTANT_ENCAPSED_STRING shift to state 65
-- On T_CLASS_C shift to state 66
-- On T_CLASS shift to state 67
-- On T_ARRAY shift to state 201
-- On TOPAR shift to state 206
-- On TOBRA shift to state 209
-- On TGUIL shift to state 211
-- On TDOLLARDOLLAR shift to state 213
-- On TDOLLAR shift to state 214
-- On TBACKQUOTE shift to state 217
-- On TANTISLASH shift to state 85
-- On LDots shift to state 222
-- On qualified_name shift to state 94
-- On qualified_class_name shift to state 225
-- On primary_expr shift to state 226
-- On namespace_name shift to state 102
-- On member_expr shift to state 968
-- On ident_in_name shift to state 57
-- On ident shift to state 56
-- On constant shift to state 239
## Reductions:

State 47:
## Known stack suffix:
## T_VARIABLE
## LR(1) items:
primary_expr -> T_VARIABLE . [ T_XOR_EQUAL T_SR_EQUAL T_SR T_SL_EQUAL T_SL T_ROCKET T_PLUS_EQUAL T_OR_EQUAL T_OBJECT_OPERATOR T_MUL_EQUAL T_MOD_EQUAL T_MINUS_EQUAL T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DIV_EQUAL T_DEC T_CONCAT_EQUAL T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW T_AND_EQUAL TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TOPAR TOBRACE TOBRA TMUL TMOD TMINUS TGREATER TEQ TDOT TDIV TCPAR TCOMMA TCOLON TCOLCOL TCBRACE TCBRA TAND RDots EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production primary_expr -> T_VARIABLE

State 48:
## Known stack suffix:
## T_STATIC
## LR(1) items:
primary_expr -> T_STATIC . [ T_XOR_EQUAL T_SR_EQUAL T_SR T_SL_EQUAL T_SL T_ROCKET T_PLUS_EQUAL T_OR_EQUAL T_OBJECT_OPERATOR T_MUL_EQUAL T_MOD_EQUAL T_MINUS_EQUAL T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DIV_EQUAL T_DEC T_CONCAT_EQUAL T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW T_AND_EQUAL TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TOPAR TOBRACE TOBRA TMUL TMOD TMINUS TGREATER TEQ TDOT TDIV TCPAR TCOMMA TCOLON TCOLCOL TCBRACE TCBRA TAND RDots EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production primary_expr -> T_STATIC

State 49:
## Known stack suffix:
## T_NAMESPACE_C
## LR(1) items:
constant -> T_NAMESPACE_C . [ T_XOR_EQUAL T_SR_EQUAL T_SR T_SL_EQUAL T_SL T_ROCKET T_PLUS_EQUAL T_OR_EQUAL T_OBJECT_OPERATOR T_MUL_EQUAL T_MOD_EQUAL T_MINUS_EQUAL T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DIV_EQUAL T_DEC T_CONCAT_EQUAL T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW T_AND_EQUAL TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TOPAR TOBRACE TOBRA TMUL TMOD TMINUS TGREATER TEQ TDOT TDIV TCPAR TCOMMA TCOLON TCOLCOL TCBRACE TCBRA TAND RDots EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production constant -> T_NAMESPACE_C

State 50:
## Known stack suffix:
## T_NAMESPACE
## LR(1) items:
qualified_name -> T_NAMESPACE . TANTISLASH namespace_name [ T_XOR_EQUAL T_VARIABLE T_TYPE T_SUPER T_SR_EQUAL T_SR T_SL_EQUAL T_SL T_ROCKET T_PLUS_EQUAL T_OR_EQUAL T_OBJECT_OPERATOR T_NEW T_MUL_EQUAL T_MOD_EQUAL T_MINUS_EQUAL T_METAVAR T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LIST T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_IMPLEMENTS T_IDENT T_FROM T_ENUM T_ELLIPSIS T_DOUBLE_ARROW T_DIV_EQUAL T_DEC T_CONCAT_EQUAL T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW T_AND_EQUAL TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TOPAR TOBRACE TOBRA TMUL TMOD TMINUS TGREATER TEQ TDOT TDIV TCPAR TCOMMA TCOLON TCOLCOL TCBRACE TCBRA TAND RDots EOF ]
## Transitions:
-- On TANTISLASH shift to state 51
## Reductions:

State 51:
## Known stack suffix:
## T_NAMESPACE TANTISLASH
## LR(1) items:
qualified_name -> T_NAMESPACE TANTISLASH . namespace_name [ T_XOR_EQUAL T_VARIABLE T_TYPE T_SUPER T_SR_EQUAL T_SR T_SL_EQUAL T_SL T_ROCKET T_PLUS_EQUAL T_OR_EQUAL T_OBJECT_OPERATOR T_NEW T_MUL_EQUAL T_MOD_EQUAL T_MINUS_EQUAL T_METAVAR T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LIST T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_IMPLEMENTS T_IDENT T_FROM T_ENUM T_ELLIPSIS T_DOUBLE_ARROW T_DIV_EQUAL T_DEC T_CONCAT_EQUAL T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW T_AND_EQUAL TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TOPAR TOBRACE TOBRA TMUL TMOD TMINUS TGREATER TEQ TDOT TDIV TCPAR TCOMMA TCOLON TCOLCOL TCBRACE TCBRA TAND RDots EOF ]
## Transitions:
-- On T_TYPE shift to state 6
-- On T_SUPER shift to state 8
-- On T_METAVAR shift to state 17
-- On T_INSTANCEOF shift to state 52
-- On T_IDENT shift to state 18
-- On T_ENUM shift to state 19
-- On namespace_name shift to state 53
-- On ident_in_name shift to state 57
-- On ident shift to state 56
## Reductions:

State 52:
## Known stack suffix:
## T_INSTANCEOF
## LR(1) items:
ident_in_name -> T_INSTANCEOF . [ T_XOR_EQUAL T_VARIABLE T_TYPE T_SUPER T_SR_EQUAL T_SR T_SL_EQUAL T_SL T_ROCKET T_PLUS_EQUAL T_OR_EQUAL T_OBJECT_OPERATOR T_NEW T_MUL_EQUAL T_MOD_EQUAL T_MINUS_EQUAL T_METAVAR T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LIST T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_IMPLEMENTS T_IDENT T_FROM T_ENUM T_ELLIPSIS T_DOUBLE_ARROW T_DIV_EQUAL T_DEC T_CONCAT_EQUAL T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW T_AND_EQUAL TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TOPAR TOBRACE TOBRA TMUL TMOD TMINUS TGREATER TEQ TDOT TDIV TCPAR TCOMMA TCOLON TCOLCOL TCBRACE TCBRA TANTISLASH TAND RDots EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production ident_in_name -> T_INSTANCEOF

State 53:
## Known stack suffix:
## T_NAMESPACE TANTISLASH namespace_name
## LR(1) items:
namespace_name -> namespace_name . TANTISLASH ident_in_name [ T_XOR_EQUAL T_VARIABLE T_TYPE T_SUPER T_SR_EQUAL T_SR T_SL_EQUAL T_SL T_ROCKET T_PLUS_EQUAL T_OR_EQUAL T_OBJECT_OPERATOR T_NEW T_MUL_EQUAL T_MOD_EQUAL T_MINUS_EQUAL T_METAVAR T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LIST T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_IMPLEMENTS T_IDENT T_FROM T_ENUM T_ELLIPSIS T_DOUBLE_ARROW T_DIV_EQUAL T_DEC T_CONCAT_EQUAL T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW T_AND_EQUAL TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TOPAR TOBRACE TOBRA TMUL TMOD TMINUS TGREATER TEQ TDOT TDIV TCPAR TCOMMA TCOLON TCOLCOL TCBRACE TCBRA TANTISLASH TAND RDots EOF ]
qualified_name -> T_NAMESPACE TANTISLASH namespace_name . [ T_XOR_EQUAL T_VARIABLE T_TYPE T_SUPER T_SR_EQUAL T_SR T_SL_EQUAL T_SL T_ROCKET T_PLUS_EQUAL T_OR_EQUAL T_OBJECT_OPERATOR T_NEW T_MUL_EQUAL T_MOD_EQUAL T_MINUS_EQUAL T_METAVAR T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LIST T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_IMPLEMENTS T_IDENT T_FROM T_ENUM T_ELLIPSIS T_DOUBLE_ARROW T_DIV_EQUAL T_DEC T_CONCAT_EQUAL T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW T_AND_EQUAL TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TOPAR TOBRACE TOBRA TMUL TMOD TMINUS TGREATER TEQ TDOT TDIV TCPAR TCOMMA TCOLON TCOLCOL TCBRACE TCBRA TAND RDots EOF ]
## Transitions:
-- On TANTISLASH shift to state 54
## Reductions:
-- On T_XOR_EQUAL T_VARIABLE T_TYPE T_SUPER T_SR_EQUAL T_SR T_SL_EQUAL T_SL T_ROCKET T_PLUS_EQUAL T_OR_EQUAL T_OBJECT_OPERATOR T_NEW T_MUL_EQUAL T_MOD_EQUAL T_MINUS_EQUAL T_METAVAR T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LIST T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_IMPLEMENTS T_IDENT T_FROM T_ENUM T_ELLIPSIS T_DOUBLE_ARROW T_DIV_EQUAL T_DEC T_CONCAT_EQUAL T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW T_AND_EQUAL TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TOPAR TOBRACE TOBRA TMUL TMOD TMINUS TGREATER TEQ TDOT TDIV TCPAR TCOMMA TCOLON TCOLCOL TCBRACE TCBRA TAND RDots EOF
--   reduce production qualified_name -> T_NAMESPACE TANTISLASH namespace_name

State 54:
## Known stack suffix:
## namespace_name TANTISLASH
## LR(1) items:
namespace_name -> namespace_name TANTISLASH . ident_in_name [ T_XOR_EQUAL T_VARIABLE T_TYPE T_SUPER T_SR_EQUAL T_SR T_SL_EQUAL T_SL T_ROCKET T_PLUS_EQUAL T_OR_EQUAL T_OBJECT_OPERATOR T_NEW T_MUL_EQUAL T_MOD_EQUAL T_MINUS_EQUAL T_METAVAR T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LIST T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_IMPLEMENTS T_IDENT T_FROM T_ENUM T_ELLIPSIS T_DOUBLE_ARROW T_DIV_EQUAL T_DEC T_CONCAT_EQUAL T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW T_AND_EQUAL TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TOPAR TOBRACE TOBRA TMUL TMOD TMINUS TGREATER TEQ TDOT TDIV TCPAR TCOMMA TCOLON TCOLCOL TCBRACE TCBRA TANTISLASH TAND RDots EOF ]
## Transitions:
-- On T_TYPE shift to state 6
-- On T_SUPER shift to state 8
-- On T_METAVAR shift to state 17
-- On T_INSTANCEOF shift to state 52
-- On T_IDENT shift to state 18
-- On T_ENUM shift to state 19
-- On ident_in_name shift to state 55
-- On ident shift to state 56
## Reductions:

State 55:
## Known stack suffix:
## namespace_name TANTISLASH ident_in_name
## LR(1) items:
namespace_name -> namespace_name TANTISLASH ident_in_name . [ T_XOR_EQUAL T_VARIABLE T_TYPE T_SUPER T_SR_EQUAL T_SR T_SL_EQUAL T_SL T_ROCKET T_PLUS_EQUAL T_OR_EQUAL T_OBJECT_OPERATOR T_NEW T_MUL_EQUAL T_MOD_EQUAL T_MINUS_EQUAL T_METAVAR T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LIST T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_IMPLEMENTS T_IDENT T_FROM T_ENUM T_ELLIPSIS T_DOUBLE_ARROW T_DIV_EQUAL T_DEC T_CONCAT_EQUAL T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW T_AND_EQUAL TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TOPAR TOBRACE TOBRA TMUL TMOD TMINUS TGREATER TEQ TDOT TDIV TCPAR TCOMMA TCOLON TCOLCOL TCBRACE TCBRA TANTISLASH TAND RDots EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production namespace_name -> namespace_name TANTISLASH ident_in_name

State 56:
## Known stack suffix:
## ident
## LR(1) items:
ident_in_name -> ident . [ T_XOR_EQUAL T_VARIABLE T_TYPE T_SUPER T_SR_EQUAL T_SR T_SL_EQUAL T_SL T_ROCKET T_PLUS_EQUAL T_OR_EQUAL T_OBJECT_OPERATOR T_NEW T_MUL_EQUAL T_MOD_EQUAL T_MINUS_EQUAL T_METAVAR T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LIST T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_IMPLEMENTS T_IDENT T_FROM T_ENUM T_ELLIPSIS T_DOUBLE_ARROW T_DIV_EQUAL T_DEC T_CONCAT_EQUAL T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW T_AND_EQUAL TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TOPAR TOBRACE TOBRA TMUL TMOD TMINUS TGREATER TEQ TDOT TDIV TCPAR TCOMMA TCOLON TCOLCOL TCBRACE TCBRA TANTISLASH TAND RDots EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production ident_in_name -> ident

State 57:
## Known stack suffix:
## ident_in_name
## LR(1) items:
namespace_name -> ident_in_name . [ T_XOR_EQUAL T_VARIABLE T_TYPE T_SUPER T_SR_EQUAL T_SR T_SL_EQUAL T_SL T_ROCKET T_PLUS_EQUAL T_OR_EQUAL T_OBJECT_OPERATOR T_NEW T_MUL_EQUAL T_MOD_EQUAL T_MINUS_EQUAL T_METAVAR T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LIST T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_IMPLEMENTS T_IDENT T_FROM T_ENUM T_ELLIPSIS T_DOUBLE_ARROW T_DIV_EQUAL T_DEC T_CONCAT_EQUAL T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW T_AND_EQUAL TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TOPAR TOBRACE TOBRA TMUL TMOD TMINUS TGREATER TEQ TDOT TDIV TCPAR TCOMMA TCOLON TCOLCOL TCBRACE TCBRA TANTISLASH TAND RDots EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production namespace_name -> ident_in_name

State 58:
## Known stack suffix:
## T_METHOD_C
## LR(1) items:
constant -> T_METHOD_C . [ T_XOR_EQUAL T_SR_EQUAL T_SR T_SL_EQUAL T_SL T_ROCKET T_PLUS_EQUAL T_OR_EQUAL T_OBJECT_OPERATOR T_MUL_EQUAL T_MOD_EQUAL T_MINUS_EQUAL T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DIV_EQUAL T_DEC T_CONCAT_EQUAL T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW T_AND_EQUAL TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TOPAR TOBRACE TOBRA TMUL TMOD TMINUS TGREATER TEQ TDOT TDIV TCPAR TCOMMA TCOLON TCOLCOL TCBRACE TCBRA TAND RDots EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production constant -> T_METHOD_C

State 59:
## Known stack suffix:
## T_LNUMBER
## LR(1) items:
constant -> T_LNUMBER . [ T_XOR_EQUAL T_SR_EQUAL T_SR T_SL_EQUAL T_SL T_ROCKET T_PLUS_EQUAL T_OR_EQUAL T_OBJECT_OPERATOR T_MUL_EQUAL T_MOD_EQUAL T_MINUS_EQUAL T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DIV_EQUAL T_DEC T_CONCAT_EQUAL T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW T_AND_EQUAL TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TOPAR TOBRACE TOBRA TMUL TMOD TMINUS TGREATER TEQ TDOT TDIV TCPAR TCOMMA TCOLON TCOLCOL TCBRACE TCBRA TAND RDots EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production constant -> T_LNUMBER

State 60:
## Known stack suffix:
## T_LINE
## LR(1) items:
constant -> T_LINE . [ T_XOR_EQUAL T_SR_EQUAL T_SR T_SL_EQUAL T_SL T_ROCKET T_PLUS_EQUAL T_OR_EQUAL T_OBJECT_OPERATOR T_MUL_EQUAL T_MOD_EQUAL T_MINUS_EQUAL T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DIV_EQUAL T_DEC T_CONCAT_EQUAL T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW T_AND_EQUAL TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TOPAR TOBRACE TOBRA TMUL TMOD TMINUS TGREATER TEQ TDOT TDIV TCPAR TCOMMA TCOLON TCOLCOL TCBRACE TCBRA TAND RDots EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production constant -> T_LINE

State 61:
## Known stack suffix:
## T_FUNC_C
## LR(1) items:
constant -> T_FUNC_C . [ T_XOR_EQUAL T_SR_EQUAL T_SR T_SL_EQUAL T_SL T_ROCKET T_PLUS_EQUAL T_OR_EQUAL T_OBJECT_OPERATOR T_MUL_EQUAL T_MOD_EQUAL T_MINUS_EQUAL T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DIV_EQUAL T_DEC T_CONCAT_EQUAL T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW T_AND_EQUAL TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TOPAR TOBRACE TOBRA TMUL TMOD TMINUS TGREATER TEQ TDOT TDIV TCPAR TCOMMA TCOLON TCOLCOL TCBRACE TCBRA TAND RDots EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production constant -> T_FUNC_C

State 62:
## Known stack suffix:
## T_FILE
## LR(1) items:
constant -> T_FILE . [ T_XOR_EQUAL T_SR_EQUAL T_SR T_SL_EQUAL T_SL T_ROCKET T_PLUS_EQUAL T_OR_EQUAL T_OBJECT_OPERATOR T_MUL_EQUAL T_MOD_EQUAL T_MINUS_EQUAL T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DIV_EQUAL T_DEC T_CONCAT_EQUAL T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW T_AND_EQUAL TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TOPAR TOBRACE TOBRA TMUL TMOD TMINUS TGREATER TEQ TDOT TDIV TCPAR TCOMMA TCOLON TCOLCOL TCBRACE TCBRA TAND RDots EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production constant -> T_FILE

State 63:
## Known stack suffix:
## T_DNUMBER
## LR(1) items:
constant -> T_DNUMBER . [ T_XOR_EQUAL T_SR_EQUAL T_SR T_SL_EQUAL T_SL T_ROCKET T_PLUS_EQUAL T_OR_EQUAL T_OBJECT_OPERATOR T_MUL_EQUAL T_MOD_EQUAL T_MINUS_EQUAL T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DIV_EQUAL T_DEC T_CONCAT_EQUAL T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW T_AND_EQUAL TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TOPAR TOBRACE TOBRA TMUL TMOD TMINUS TGREATER TEQ TDOT TDIV TCPAR TCOMMA TCOLON TCOLCOL TCBRACE TCBRA TAND RDots EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production constant -> T_DNUMBER

State 64:
## Known stack suffix:
## T_DIR
## LR(1) items:
constant -> T_DIR . [ T_XOR_EQUAL T_SR_EQUAL T_SR T_SL_EQUAL T_SL T_ROCKET T_PLUS_EQUAL T_OR_EQUAL T_OBJECT_OPERATOR T_MUL_EQUAL T_MOD_EQUAL T_MINUS_EQUAL T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DIV_EQUAL T_DEC T_CONCAT_EQUAL T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW T_AND_EQUAL TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TOPAR TOBRACE TOBRA TMUL TMOD TMINUS TGREATER TEQ TDOT TDIV TCPAR TCOMMA TCOLON TCOLCOL TCBRACE TCBRA TAND RDots EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production constant -> T_DIR

State 65:
## Known stack suffix:
## T_CONSTANT_ENCAPSED_STRING
## LR(1) items:
constant -> T_CONSTANT_ENCAPSED_STRING . [ T_XOR_EQUAL T_SR_EQUAL T_SR T_SL_EQUAL T_SL T_ROCKET T_PLUS_EQUAL T_OR_EQUAL T_OBJECT_OPERATOR T_MUL_EQUAL T_MOD_EQUAL T_MINUS_EQUAL T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DIV_EQUAL T_DEC T_CONCAT_EQUAL T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW T_AND_EQUAL TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TOPAR TOBRACE TOBRA TMUL TMOD TMINUS TGREATER TEQ TDOT TDIV TCPAR TCOMMA TCOLON TCOLCOL TCBRACE TCBRA TAND RDots EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production constant -> T_CONSTANT_ENCAPSED_STRING

State 66:
## Known stack suffix:
## T_CLASS_C
## LR(1) items:
constant -> T_CLASS_C . [ T_XOR_EQUAL T_SR_EQUAL T_SR T_SL_EQUAL T_SL T_ROCKET T_PLUS_EQUAL T_OR_EQUAL T_OBJECT_OPERATOR T_MUL_EQUAL T_MOD_EQUAL T_MINUS_EQUAL T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DIV_EQUAL T_DEC T_CONCAT_EQUAL T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW T_AND_EQUAL TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TOPAR TOBRACE TOBRA TMUL TMOD TMINUS TGREATER TEQ TDOT TDIV TCPAR TCOMMA TCOLON TCOLCOL TCBRACE TCBRA TAND RDots EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production constant -> T_CLASS_C

State 67:
## Known stack suffix:
## T_NEW T_CLASS
## LR(1) items:
new_expr -> T_NEW T_CLASS . option(arguments) extends_from implements_list TOBRACE list(member_declaration) TCBRACE [ T_XOR_EQUAL T_SR_EQUAL T_SR T_SL_EQUAL T_SL T_ROCKET T_PLUS_EQUAL T_OR_EQUAL T_MUL_EQUAL T_MOD_EQUAL T_MINUS_EQUAL T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DIV_EQUAL T_DEC T_CONCAT_EQUAL T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW T_AND_EQUAL TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TEQ TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
## Transitions:
-- On TOPAR shift to state 68
-- On option(arguments) shift to state 961
-- On arguments shift to state 967
## Reductions:
-- On T_IMPLEMENTS T_EXTENDS TOBRACE
--   reduce production option(arguments) ->

State 68:
## Known stack suffix:
## TOPAR
## LR(1) items:
arguments -> TOPAR . function_call_argument_list TCPAR [ T_XOR_EQUAL T_SR_EQUAL T_SR T_SL_EQUAL T_SL T_ROCKET T_PLUS_EQUAL T_OR_EQUAL T_OBJECT_OPERATOR T_MUL_EQUAL T_MOD_EQUAL T_MINUS_EQUAL T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_IMPLEMENTS T_EXTENDS T_DIV_EQUAL T_DEC T_CONCAT_EQUAL T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW T_AND_EQUAL TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TOPAR TOBRACE TOBRA TMUL TMOD TMINUS TGREATER TEQ TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
## Transitions:
-- On T__AT shift to state 1
-- On T_YIELD shift to state 2
-- On T_VARIABLE shift to state 3
-- On T_UNSET_CAST shift to state 5
-- On T_TYPE shift to state 6
-- On T_TRAIT_C shift to state 7
-- On T_SUPER shift to state 8
-- On T_STRING_CAST shift to state 9
-- On T_STATIC shift to state 10
-- On T_START_HEREDOC shift to state 25
-- On T_SELF shift to state 40
-- On T_REQUIRE_ONCE shift to state 41
-- On T_REQUIRE shift to state 42
-- On T_PRINT shift to state 43
-- On T_PARENT shift to state 44
-- On T_OBJECT_CAST shift to state 45
-- On T_NEW shift to state 46
-- On T_NAMESPACE_C shift to state 49
-- On T_NAMESPACE shift to state 50
-- On T_METHOD_C shift to state 58
-- On T_METAVAR shift to state 17
-- On T_LNUMBER shift to state 59
-- On T_LIST shift to state 69
-- On T_LINE shift to state 60
-- On T_LAMBDA_OPAR shift to state 73
-- On T_ISSET shift to state 133
-- On T_INT_CAST shift to state 135
-- On T_INSTANCEOF shift to state 52
-- On T_INCLUDE_ONCE shift to state 136
-- On T_INCLUDE shift to state 137
-- On T_INC shift to state 138
-- On T_IDENT shift to state 18
-- On T_FUNC_C shift to state 61
-- On T_FUNCTION shift to state 139
-- On T_FILE shift to state 62
-- On T_EXIT shift to state 160
-- On T_EVAL shift to state 162
-- On T_ENUM shift to state 19
-- On T_EMPTY shift to state 164
-- On T_ELLIPSIS shift to state 950
-- On T_DOUBLE_CAST shift to state 168
-- On T_DNUMBER shift to state 63
-- On T_DIR shift to state 64
-- On T_DEC shift to state 169
-- On T_CONSTANT_ENCAPSED_STRING shift to state 65
-- On T_CLONE shift to state 170
-- On T_CLASS_C shift to state 66
-- On T_BOOL_CAST shift to state 171
-- On T_AWAIT shift to state 172
-- On T_ASYNC shift to state 173
-- On T_ARRAY_CAST shift to state 200
-- On T_ARRAY shift to state 201
-- On TTILDE shift to state 204
-- On TPLUS shift to state 205
-- On TOPAR shift to state 206
-- On TOBRA shift to state 209
-- On TMINUS shift to state 210
-- On TGUIL shift to state 211
-- On TDOLLARDOLLAR shift to state 213
-- On TDOLLAR shift to state 214
-- On TBANG shift to state 216
-- On TBACKQUOTE shift to state 217
-- On TANTISLASH shift to state 85
-- On TAND shift to state 952
-- On LDots shift to state 222
-- On simple_expr shift to state 223
-- On qualified_name shift to state 94
-- On qualified_class_name shift to state 225
-- On primary_expr shift to state 226
-- On new_expr shift to state 227
-- On namespace_name shift to state 102
-- On member_expr shift to state 228
-- On list_sep(function_call_argument,TCOMMA) shift to state 954
-- On lambda_expr shift to state 231
-- On ident_in_name shift to state 57
-- On ident shift to state 56
-- On function_call_argument_list shift to state 958
-- On function_call_argument shift to state 960
-- On expr shift to state 957
-- On constant shift to state 239
-- On call_expr shift to state 240
## Reductions:
-- On TCPAR
--   reduce production function_call_argument_list ->

State 69:
## Known stack suffix:
## T_LIST
## LR(1) items:
expr -> T_LIST . TOPAR assignment_list TCPAR TEQ expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
## Transitions:
-- On TOPAR shift to state 70
## Reductions:

State 70:
## Known stack suffix:
## T_LIST TOPAR
## LR(1) items:
expr -> T_LIST TOPAR . assignment_list TCPAR TEQ expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
## Transitions:
-- On T__AT shift to state 1
-- On T_YIELD shift to state 2
-- On T_VARIABLE shift to state 3
-- On T_UNSET_CAST shift to state 5
-- On T_TYPE shift to state 6
-- On T_TRAIT_C shift to state 7
-- On T_SUPER shift to state 8
-- On T_STRING_CAST shift to state 9
-- On T_STATIC shift to state 10
-- On T_START_HEREDOC shift to state 25
-- On T_SELF shift to state 40
-- On T_REQUIRE_ONCE shift to state 41
-- On T_REQUIRE shift to state 42
-- On T_PRINT shift to state 43
-- On T_PARENT shift to state 44
-- On T_OBJECT_CAST shift to state 45
-- On T_NEW shift to state 46
-- On T_NAMESPACE_C shift to state 49
-- On T_NAMESPACE shift to state 50
-- On T_METHOD_C shift to state 58
-- On T_METAVAR shift to state 17
-- On T_LNUMBER shift to state 59
-- On T_LIST shift to state 71
-- On T_LINE shift to state 60
-- On T_LAMBDA_OPAR shift to state 73
-- On T_ISSET shift to state 133
-- On T_INT_CAST shift to state 135
-- On T_INSTANCEOF shift to state 52
-- On T_INCLUDE_ONCE shift to state 136
-- On T_INCLUDE shift to state 137
-- On T_INC shift to state 138
-- On T_IDENT shift to state 18
-- On T_FUNC_C shift to state 61
-- On T_FUNCTION shift to state 139
-- On T_FILE shift to state 62
-- On T_EXIT shift to state 160
-- On T_EVAL shift to state 162
-- On T_ENUM shift to state 19
-- On T_EMPTY shift to state 164
-- On T_DOUBLE_CAST shift to state 168
-- On T_DNUMBER shift to state 63
-- On T_DIR shift to state 64
-- On T_DEC shift to state 169
-- On T_CONSTANT_ENCAPSED_STRING shift to state 65
-- On T_CLONE shift to state 170
-- On T_CLASS_C shift to state 66
-- On T_BOOL_CAST shift to state 171
-- On T_AWAIT shift to state 172
-- On T_ASYNC shift to state 173
-- On T_ARRAY_CAST shift to state 200
-- On T_ARRAY shift to state 201
-- On TTILDE shift to state 204
-- On TPLUS shift to state 205
-- On TOPAR shift to state 206
-- On TOBRA shift to state 209
-- On TMINUS shift to state 210
-- On TGUIL shift to state 211
-- On TDOLLARDOLLAR shift to state 213
-- On TDOLLAR shift to state 214
-- On TBANG shift to state 216
-- On TBACKQUOTE shift to state 217
-- On TANTISLASH shift to state 85
-- On LDots shift to state 222
-- On simple_expr shift to state 223
-- On qualified_name shift to state 94
-- On qualified_class_name shift to state 225
-- On primary_expr shift to state 226
-- On new_expr shift to state 227
-- On namespace_name shift to state 102
-- On member_expr shift to state 228
-- On list_sep(assignment_list_element,TCOMMA) shift to state 607
-- On lambda_expr shift to state 231
-- On ident_in_name shift to state 57
-- On ident shift to state 56
-- On expr shift to state 609
-- On constant shift to state 239
-- On call_expr shift to state 240
-- On assignment_list_element shift to state 611
-- On assignment_list shift to state 948
## Reductions:
-- On TCPAR TCOMMA
--   reduce production assignment_list_element ->

State 71:
## Known stack suffix:
## T_LIST
## LR(1) items:
assignment_list_element -> T_LIST . TOPAR assignment_list TCPAR [ TCPAR TCOMMA ]
expr -> T_LIST . TOPAR assignment_list TCPAR TEQ expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TAND ]
## Transitions:
-- On TOPAR shift to state 72
## Reductions:

State 72:
## Known stack suffix:
## T_LIST TOPAR
## LR(1) items:
assignment_list_element -> T_LIST TOPAR . assignment_list TCPAR [ TCPAR TCOMMA ]
expr -> T_LIST TOPAR . assignment_list TCPAR TEQ expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TAND ]
## Transitions:
-- On T__AT shift to state 1
-- On T_YIELD shift to state 2
-- On T_VARIABLE shift to state 3
-- On T_UNSET_CAST shift to state 5
-- On T_TYPE shift to state 6
-- On T_TRAIT_C shift to state 7
-- On T_SUPER shift to state 8
-- On T_STRING_CAST shift to state 9
-- On T_STATIC shift to state 10
-- On T_START_HEREDOC shift to state 25
-- On T_SELF shift to state 40
-- On T_REQUIRE_ONCE shift to state 41
-- On T_REQUIRE shift to state 42
-- On T_PRINT shift to state 43
-- On T_PARENT shift to state 44
-- On T_OBJECT_CAST shift to state 45
-- On T_NEW shift to state 46
-- On T_NAMESPACE_C shift to state 49
-- On T_NAMESPACE shift to state 50
-- On T_METHOD_C shift to state 58
-- On T_METAVAR shift to state 17
-- On T_LNUMBER shift to state 59
-- On T_LIST shift to state 71
-- On T_LINE shift to state 60
-- On T_LAMBDA_OPAR shift to state 73
-- On T_ISSET shift to state 133
-- On T_INT_CAST shift to state 135
-- On T_INSTANCEOF shift to state 52
-- On T_INCLUDE_ONCE shift to state 136
-- On T_INCLUDE shift to state 137
-- On T_INC shift to state 138
-- On T_IDENT shift to state 18
-- On T_FUNC_C shift to state 61
-- On T_FUNCTION shift to state 139
-- On T_FILE shift to state 62
-- On T_EXIT shift to state 160
-- On T_EVAL shift to state 162
-- On T_ENUM shift to state 19
-- On T_EMPTY shift to state 164
-- On T_DOUBLE_CAST shift to state 168
-- On T_DNUMBER shift to state 63
-- On T_DIR shift to state 64
-- On T_DEC shift to state 169
-- On T_CONSTANT_ENCAPSED_STRING shift to state 65
-- On T_CLONE shift to state 170
-- On T_CLASS_C shift to state 66
-- On T_BOOL_CAST shift to state 171
-- On T_AWAIT shift to state 172
-- On T_ASYNC shift to state 173
-- On T_ARRAY_CAST shift to state 200
-- On T_ARRAY shift to state 201
-- On TTILDE shift to state 204
-- On TPLUS shift to state 205
-- On TOPAR shift to state 206
-- On TOBRA shift to state 209
-- On TMINUS shift to state 210
-- On TGUIL shift to state 211
-- On TDOLLARDOLLAR shift to state 213
-- On TDOLLAR shift to state 214
-- On TBANG shift to state 216
-- On TBACKQUOTE shift to state 217
-- On TANTISLASH shift to state 85
-- On LDots shift to state 222
-- On simple_expr shift to state 223
-- On qualified_name shift to state 94
-- On qualified_class_name shift to state 225
-- On primary_expr shift to state 226
-- On new_expr shift to state 227
-- On namespace_name shift to state 102
-- On member_expr shift to state 228
-- On list_sep(assignment_list_element,TCOMMA) shift to state 607
-- On lambda_expr shift to state 231
-- On ident_in_name shift to state 57
-- On ident shift to state 56
-- On expr shift to state 609
-- On constant shift to state 239
-- On call_expr shift to state 240
-- On assignment_list_element shift to state 611
-- On assignment_list shift to state 946
## Reductions:
-- On TCPAR TCOMMA
--   reduce production assignment_list_element ->

State 73:
## Known stack suffix:
## T_LAMBDA_OPAR
## LR(1) items:
lambda_expr -> T_LAMBDA_OPAR . parameter_list T_LAMBDA_CPAR option(return_type) lambda_body [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
## Transitions:
-- On T_SL shift to state 16
-- On parameter_list shift to state 74
-- On parameter shift to state 122
-- On option(attributes) shift to state 125
-- On attributes shift to state 181
## Reductions:
-- On T_VARIABLE T_TYPE T_SUPER T_SELF T_PUBLIC T_PROTECTED T_PRIVATE T_PARENT T_NAMESPACE T_METAVAR T_INSTANCEOF T_IDENT T_ENUM T_ELLIPSIS T_ARRAY TQUESTION TOPAR TANTISLASH TAND
--   reduce production option(attributes) ->
-- On T_LAMBDA_CPAR
--   reduce production parameter_list ->

State 74:
## Known stack suffix:
## T_LAMBDA_OPAR parameter_list
## LR(1) items:
lambda_expr -> T_LAMBDA_OPAR parameter_list . T_LAMBDA_CPAR option(return_type) lambda_body [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
## Transitions:
-- On T_LAMBDA_CPAR shift to state 75
## Reductions:

State 75:
## Known stack suffix:
## T_LAMBDA_OPAR parameter_list T_LAMBDA_CPAR
## LR(1) items:
lambda_expr -> T_LAMBDA_OPAR parameter_list T_LAMBDA_CPAR . option(return_type) lambda_body [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
## Transitions:
-- On TCOLON shift to state 76
-- On return_type shift to state 119
-- On option(return_type) shift to state 120
## Reductions:
-- On T_DOUBLE_ARROW
--   reduce production option(return_type) ->

State 76:
## Known stack suffix:
## TCOLON
## LR(1) items:
return_type -> TCOLON . type_php [ T_DOUBLE_ARROW TSEMICOLON TOBRACE TCPAR ]
## Transitions:
-- On T_TYPE shift to state 6
-- On T_SUPER shift to state 8
-- On T_SELF shift to state 77
-- On T_PARENT shift to state 78
-- On T_NAMESPACE shift to state 50
-- On T_METAVAR shift to state 17
-- On T_INSTANCEOF shift to state 52
-- On T_IDENT shift to state 18
-- On T_ENUM shift to state 19
-- On T_ARRAY shift to state 79
-- On TQUESTION shift to state 80
-- On TOPAR shift to state 81
-- On TANTISLASH shift to state 85
-- On type_php shift to state 118
-- On qualified_name shift to state 94
-- On qualified_class_name_or_array shift to state 95
-- On qualified_class_name shift to state 100
-- On primary_type_php shift to state 101
-- On namespace_name shift to state 102
-- On ident_in_name shift to state 57
-- On ident shift to state 56
-- On class_name shift to state 103
## Reductions:

State 77:
## Known stack suffix:
## T_SELF
## LR(1) items:
primary_type_php -> T_SELF . [ T_VARIABLE T_TYPE T_SUPER T_NEW T_METAVAR T_LOGICAL_AND T_LIST T_IDENT T_FROM T_ENUM T_ELLIPSIS T_DOUBLE_ARROW T_AS TSEMICOLON TOBRACE TGREATER TEQ TCPAR TCOMMA TCOLCOL TAND EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production primary_type_php -> T_SELF

State 78:
## Known stack suffix:
## T_PARENT
## LR(1) items:
primary_type_php -> T_PARENT . [ T_VARIABLE T_TYPE T_SUPER T_NEW T_METAVAR T_LOGICAL_AND T_LIST T_IDENT T_FROM T_ENUM T_ELLIPSIS T_DOUBLE_ARROW T_AS TSEMICOLON TOBRACE TGREATER TEQ TCPAR TCOMMA TCOLCOL TAND EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production primary_type_php -> T_PARENT

State 79:
## Known stack suffix:
## T_ARRAY
## LR(1) items:
qualified_class_name_or_array -> T_ARRAY . [ T_VARIABLE T_TYPE T_SUPER T_NEW T_METAVAR T_LOGICAL_AND T_LIST T_IDENT T_FROM T_ENUM T_ELLIPSIS T_DOUBLE_ARROW T_AS TSMALLER TSEMICOLON TOR TOBRACE TGREATER TEQ TCPAR TCOMMA TCOLCOL TAND EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production qualified_class_name_or_array -> T_ARRAY

State 80:
## Known stack suffix:
## TQUESTION
## LR(1) items:
primary_type_php -> TQUESTION . type_php [ T_VARIABLE T_TYPE T_SUPER T_NEW T_METAVAR T_LOGICAL_AND T_LIST T_IDENT T_FROM T_ENUM T_ELLIPSIS T_DOUBLE_ARROW T_AS TSEMICOLON TOBRACE TGREATER TEQ TCPAR TCOMMA TCOLCOL TAND EOF ]
## Transitions:
-- On T_TYPE shift to state 6
-- On T_SUPER shift to state 8
-- On T_SELF shift to state 77
-- On T_PARENT shift to state 78
-- On T_NAMESPACE shift to state 50
-- On T_METAVAR shift to state 17
-- On T_INSTANCEOF shift to state 52
-- On T_IDENT shift to state 18
-- On T_ENUM shift to state 19
-- On T_ARRAY shift to state 79
-- On TQUESTION shift to state 80
-- On TOPAR shift to state 81
-- On TANTISLASH shift to state 85
-- On type_php shift to state 117
-- On qualified_name shift to state 94
-- On qualified_class_name_or_array shift to state 95
-- On qualified_class_name shift to state 100
-- On primary_type_php shift to state 101
-- On namespace_name shift to state 102
-- On ident_in_name shift to state 57
-- On ident shift to state 56
-- On class_name shift to state 103
## Reductions:

State 81:
## Known stack suffix:
## TOPAR
## LR(1) items:
primary_type_php -> TOPAR . non_empty_type_php_list TCPAR [ T_VARIABLE T_TYPE T_SUPER T_NEW T_METAVAR T_LOGICAL_AND T_LIST T_IDENT T_FROM T_ENUM T_ELLIPSIS T_DOUBLE_ARROW T_AS TSEMICOLON TOBRACE TGREATER TEQ TCPAR TCOMMA TCOLCOL TAND EOF ]
primary_type_php -> TOPAR . T_FUNCTION TOPAR type_php_or_dots_list TCPAR return_type TCPAR [ T_VARIABLE T_TYPE T_SUPER T_NEW T_METAVAR T_LOGICAL_AND T_LIST T_IDENT T_FROM T_ENUM T_ELLIPSIS T_DOUBLE_ARROW T_AS TSEMICOLON TOBRACE TGREATER TEQ TCPAR TCOMMA TCOLCOL TAND EOF ]
## Transitions:
-- On T_TYPE shift to state 6
-- On T_SUPER shift to state 8
-- On T_SELF shift to state 77
-- On T_PARENT shift to state 78
-- On T_NAMESPACE shift to state 50
-- On T_METAVAR shift to state 17
-- On T_INSTANCEOF shift to state 52
-- On T_IDENT shift to state 18
-- On T_FUNCTION shift to state 82
-- On T_ENUM shift to state 19
-- On T_ARRAY shift to state 79
-- On TQUESTION shift to state 80
-- On TOPAR shift to state 81
-- On TANTISLASH shift to state 85
-- On type_php shift to state 111
-- On qualified_name shift to state 94
-- On qualified_class_name_or_array shift to state 95
-- On qualified_class_name shift to state 100
-- On primary_type_php shift to state 101
-- On non_empty_type_php_list shift to state 112
-- On namespace_name shift to state 102
-- On list_sep(type_php,TCOMMA) shift to state 114
-- On ident_in_name shift to state 57
-- On ident shift to state 56
-- On class_name shift to state 103
## Reductions:

State 82:
## Known stack suffix:
## TOPAR T_FUNCTION
## LR(1) items:
primary_type_php -> TOPAR T_FUNCTION . TOPAR type_php_or_dots_list TCPAR return_type TCPAR [ T_VARIABLE T_TYPE T_SUPER T_NEW T_METAVAR T_LOGICAL_AND T_LIST T_IDENT T_FROM T_ENUM T_ELLIPSIS T_DOUBLE_ARROW T_AS TSEMICOLON TOBRACE TGREATER TEQ TCPAR TCOMMA TCOLCOL TAND EOF ]
## Transitions:
-- On TOPAR shift to state 83
## Reductions:

State 83:
## Known stack suffix:
## TOPAR T_FUNCTION TOPAR
## LR(1) items:
primary_type_php -> TOPAR T_FUNCTION TOPAR . type_php_or_dots_list TCPAR return_type TCPAR [ T_VARIABLE T_TYPE T_SUPER T_NEW T_METAVAR T_LOGICAL_AND T_LIST T_IDENT T_FROM T_ENUM T_ELLIPSIS T_DOUBLE_ARROW T_AS TSEMICOLON TOBRACE TGREATER TEQ TCPAR TCOMMA TCOLCOL TAND EOF ]
## Transitions:
-- On T_TYPE shift to state 6
-- On T_SUPER shift to state 8
-- On T_SELF shift to state 77
-- On T_PARENT shift to state 78
-- On T_NAMESPACE shift to state 50
-- On T_METAVAR shift to state 17
-- On T_INSTANCEOF shift to state 52
-- On T_IDENT shift to state 18
-- On T_ENUM shift to state 19
-- On T_ELLIPSIS shift to state 84
-- On T_ARRAY shift to state 79
-- On TQUESTION shift to state 80
-- On TOPAR shift to state 81
-- On TANTISLASH shift to state 85
-- On type_php_or_dots_list shift to state 87
-- On type_php_or_dots shift to state 91
-- On type_php shift to state 92
-- On qualified_name shift to state 94
-- On qualified_class_name_or_array shift to state 95
-- On qualified_class_name shift to state 100
-- On primary_type_php shift to state 101
-- On non_empty_type_php_or_dots_list shift to state 108
-- On namespace_name shift to state 102
-- On ident_in_name shift to state 57
-- On ident shift to state 56
-- On class_name shift to state 103
## Reductions:
-- On TCPAR
--   reduce production type_php_or_dots_list ->

State 84:
## Known stack suffix:
## T_ELLIPSIS
## LR(1) items:
type_php_or_dots -> T_ELLIPSIS . [ TCPAR TCOMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production type_php_or_dots -> T_ELLIPSIS

State 85:
## Known stack suffix:
## TANTISLASH
## LR(1) items:
qualified_name -> TANTISLASH . namespace_name [ T_XOR_EQUAL T_VARIABLE T_TYPE T_SUPER T_SR_EQUAL T_SR T_SL_EQUAL T_SL T_ROCKET T_PLUS_EQUAL T_OR_EQUAL T_OBJECT_OPERATOR T_NEW T_MUL_EQUAL T_MOD_EQUAL T_MINUS_EQUAL T_METAVAR T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LIST T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_IMPLEMENTS T_IDENT T_FROM T_ENUM T_ELLIPSIS T_DOUBLE_ARROW T_DIV_EQUAL T_DEC T_CONCAT_EQUAL T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW T_AND_EQUAL TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TOPAR TOBRACE TOBRA TMUL TMOD TMINUS TGREATER TEQ TDOT TDIV TCPAR TCOMMA TCOLON TCOLCOL TCBRACE TCBRA TAND RDots EOF ]
## Transitions:
-- On T_TYPE shift to state 6
-- On T_SUPER shift to state 8
-- On T_METAVAR shift to state 17
-- On T_INSTANCEOF shift to state 52
-- On T_IDENT shift to state 18
-- On T_ENUM shift to state 19
-- On namespace_name shift to state 86
-- On ident_in_name shift to state 57
-- On ident shift to state 56
## Reductions:

State 86:
## Known stack suffix:
## TANTISLASH namespace_name
## LR(1) items:
namespace_name -> namespace_name . TANTISLASH ident_in_name [ T_XOR_EQUAL T_VARIABLE T_TYPE T_SUPER T_SR_EQUAL T_SR T_SL_EQUAL T_SL T_ROCKET T_PLUS_EQUAL T_OR_EQUAL T_OBJECT_OPERATOR T_NEW T_MUL_EQUAL T_MOD_EQUAL T_MINUS_EQUAL T_METAVAR T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LIST T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_IMPLEMENTS T_IDENT T_FROM T_ENUM T_ELLIPSIS T_DOUBLE_ARROW T_DIV_EQUAL T_DEC T_CONCAT_EQUAL T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW T_AND_EQUAL TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TOPAR TOBRACE TOBRA TMUL TMOD TMINUS TGREATER TEQ TDOT TDIV TCPAR TCOMMA TCOLON TCOLCOL TCBRACE TCBRA TANTISLASH TAND RDots EOF ]
qualified_name -> TANTISLASH namespace_name . [ T_XOR_EQUAL T_VARIABLE T_TYPE T_SUPER T_SR_EQUAL T_SR T_SL_EQUAL T_SL T_ROCKET T_PLUS_EQUAL T_OR_EQUAL T_OBJECT_OPERATOR T_NEW T_MUL_EQUAL T_MOD_EQUAL T_MINUS_EQUAL T_METAVAR T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LIST T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_IMPLEMENTS T_IDENT T_FROM T_ENUM T_ELLIPSIS T_DOUBLE_ARROW T_DIV_EQUAL T_DEC T_CONCAT_EQUAL T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW T_AND_EQUAL TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TOPAR TOBRACE TOBRA TMUL TMOD TMINUS TGREATER TEQ TDOT TDIV TCPAR TCOMMA TCOLON TCOLCOL TCBRACE TCBRA TAND RDots EOF ]
## Transitions:
-- On TANTISLASH shift to state 54
## Reductions:
-- On T_XOR_EQUAL T_VARIABLE T_TYPE T_SUPER T_SR_EQUAL T_SR T_SL_EQUAL T_SL T_ROCKET T_PLUS_EQUAL T_OR_EQUAL T_OBJECT_OPERATOR T_NEW T_MUL_EQUAL T_MOD_EQUAL T_MINUS_EQUAL T_METAVAR T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LIST T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_IMPLEMENTS T_IDENT T_FROM T_ENUM T_ELLIPSIS T_DOUBLE_ARROW T_DIV_EQUAL T_DEC T_CONCAT_EQUAL T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW T_AND_EQUAL TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TOPAR TOBRACE TOBRA TMUL TMOD TMINUS TGREATER TEQ TDOT TDIV TCPAR TCOMMA TCOLON TCOLCOL TCBRACE TCBRA TAND RDots EOF
--   reduce production qualified_name -> TANTISLASH namespace_name

State 87:
## Known stack suffix:
## TOPAR T_FUNCTION TOPAR type_php_or_dots_list
## LR(1) items:
primary_type_php -> TOPAR T_FUNCTION TOPAR type_php_or_dots_list . TCPAR return_type TCPAR [ T_VARIABLE T_TYPE T_SUPER T_NEW T_METAVAR T_LOGICAL_AND T_LIST T_IDENT T_FROM T_ENUM T_ELLIPSIS T_DOUBLE_ARROW T_AS TSEMICOLON TOBRACE TGREATER TEQ TCPAR TCOMMA TCOLCOL TAND EOF ]
## Transitions:
-- On TCPAR shift to state 88
## Reductions:

State 88:
## Known stack suffix:
## TOPAR T_FUNCTION TOPAR type_php_or_dots_list TCPAR
## LR(1) items:
primary_type_php -> TOPAR T_FUNCTION TOPAR type_php_or_dots_list TCPAR . return_type TCPAR [ T_VARIABLE T_TYPE T_SUPER T_NEW T_METAVAR T_LOGICAL_AND T_LIST T_IDENT T_FROM T_ENUM T_ELLIPSIS T_DOUBLE_ARROW T_AS TSEMICOLON TOBRACE TGREATER TEQ TCPAR TCOMMA TCOLCOL TAND EOF ]
## Transitions:
-- On TCOLON shift to state 76
-- On return_type shift to state 89
## Reductions:

State 89:
## Known stack suffix:
## TOPAR T_FUNCTION TOPAR type_php_or_dots_list TCPAR return_type
## LR(1) items:
primary_type_php -> TOPAR T_FUNCTION TOPAR type_php_or_dots_list TCPAR return_type . TCPAR [ T_VARIABLE T_TYPE T_SUPER T_NEW T_METAVAR T_LOGICAL_AND T_LIST T_IDENT T_FROM T_ENUM T_ELLIPSIS T_DOUBLE_ARROW T_AS TSEMICOLON TOBRACE TGREATER TEQ TCPAR TCOMMA TCOLCOL TAND EOF ]
## Transitions:
-- On TCPAR shift to state 90
## Reductions:

State 90:
## Known stack suffix:
## TOPAR T_FUNCTION TOPAR type_php_or_dots_list TCPAR return_type TCPAR
## LR(1) items:
primary_type_php -> TOPAR T_FUNCTION TOPAR type_php_or_dots_list TCPAR return_type TCPAR . [ T_VARIABLE T_TYPE T_SUPER T_NEW T_METAVAR T_LOGICAL_AND T_LIST T_IDENT T_FROM T_ENUM T_ELLIPSIS T_DOUBLE_ARROW T_AS TSEMICOLON TOBRACE TGREATER TEQ TCPAR TCOMMA TCOLCOL TAND EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production primary_type_php -> TOPAR T_FUNCTION TOPAR type_php_or_dots_list TCPAR return_type TCPAR

State 91:
## Known stack suffix:
## type_php_or_dots
## LR(1) items:
non_empty_type_php_or_dots_list -> type_php_or_dots . [ TCPAR TCOMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production non_empty_type_php_or_dots_list -> type_php_or_dots

State 92:
## Known stack suffix:
## type_php
## LR(1) items:
type_php -> type_php . TCOLCOL primary_type_php [ TCPAR TCOMMA TCOLCOL ]
type_php_or_dots -> type_php . [ TCPAR TCOMMA ]
## Transitions:
-- On TCOLCOL shift to state 93
## Reductions:
-- On TCPAR TCOMMA
--   reduce production type_php_or_dots -> type_php

State 93:
## Known stack suffix:
## type_php TCOLCOL
## LR(1) items:
type_php -> type_php TCOLCOL . primary_type_php [ T_VARIABLE T_TYPE T_SUPER T_NEW T_METAVAR T_LOGICAL_AND T_LIST T_IDENT T_FROM T_ENUM T_ELLIPSIS T_DOUBLE_ARROW T_AS TSEMICOLON TOBRACE TGREATER TEQ TCPAR TCOMMA TCOLCOL TAND EOF ]
## Transitions:
-- On T_TYPE shift to state 6
-- On T_SUPER shift to state 8
-- On T_SELF shift to state 77
-- On T_PARENT shift to state 78
-- On T_NAMESPACE shift to state 50
-- On T_METAVAR shift to state 17
-- On T_INSTANCEOF shift to state 52
-- On T_IDENT shift to state 18
-- On T_ENUM shift to state 19
-- On T_ARRAY shift to state 79
-- On TQUESTION shift to state 80
-- On TOPAR shift to state 81
-- On TANTISLASH shift to state 85
-- On qualified_name shift to state 94
-- On qualified_class_name_or_array shift to state 95
-- On qualified_class_name shift to state 100
-- On primary_type_php shift to state 107
-- On namespace_name shift to state 102
-- On ident_in_name shift to state 57
-- On ident shift to state 56
-- On class_name shift to state 103
## Reductions:

State 94:
## Known stack suffix:
## qualified_name
## LR(1) items:
qualified_class_name -> qualified_name . [ T_XOR_EQUAL T_VARIABLE T_TYPE T_SUPER T_SR_EQUAL T_SR T_SL_EQUAL T_SL T_ROCKET T_PLUS_EQUAL T_OR_EQUAL T_OBJECT_OPERATOR T_NEW T_MUL_EQUAL T_MOD_EQUAL T_MINUS_EQUAL T_METAVAR T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LIST T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_IMPLEMENTS T_IDENT T_FROM T_ENUM T_ELLIPSIS T_DOUBLE_ARROW T_DIV_EQUAL T_DEC T_CONCAT_EQUAL T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW T_AND_EQUAL TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TOPAR TOBRACE TOBRA TMUL TMOD TMINUS TGREATER TEQ TDOT TDIV TCPAR TCOMMA TCOLON TCOLCOL TCBRACE TCBRA TAND RDots EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production qualified_class_name -> qualified_name

State 95:
## Known stack suffix:
## qualified_class_name_or_array
## LR(1) items:
class_name -> qualified_class_name_or_array . type_arguments [ T_VARIABLE T_TYPE T_SUPER T_NEW T_METAVAR T_LOGICAL_AND T_LIST T_IDENT T_FROM T_ENUM T_ELLIPSIS T_DOUBLE_ARROW T_AS TSEMICOLON TOR TOBRACE TGREATER TEQ TCPAR TCOMMA TCOLCOL TAND EOF ]
## Transitions:
-- On TSMALLER shift to state 96
-- On type_arguments shift to state 106
## Reductions:
-- On T_VARIABLE T_TYPE T_SUPER T_NEW T_METAVAR T_LOGICAL_AND T_LIST T_IDENT T_FROM T_ENUM T_ELLIPSIS T_DOUBLE_ARROW T_AS TSEMICOLON TOR TOBRACE TGREATER TEQ TCPAR TCOMMA TCOLCOL TAND EOF
--   reduce production type_arguments ->

State 96:
## Known stack suffix:
## TSMALLER
## LR(1) items:
type_arguments -> TSMALLER . type_arg_list TGREATER [ T_VARIABLE T_TYPE T_SUPER T_NEW T_METAVAR T_LOGICAL_AND T_LIST T_IMPLEMENTS T_IDENT T_FROM T_ENUM T_ELLIPSIS T_DOUBLE_ARROW T_AS TSEMICOLON TOR TOBRACE TGREATER TEQ TCPAR TCOMMA TCOLCOL TAND EOF ]
## Transitions:
-- On T_TYPE shift to state 6
-- On T_SUPER shift to state 8
-- On T_SELF shift to state 77
-- On T_PARENT shift to state 78
-- On T_NAMESPACE shift to state 50
-- On T_METAVAR shift to state 17
-- On T_INSTANCEOF shift to state 52
-- On T_IDENT shift to state 18
-- On T_ENUM shift to state 19
-- On T_ARRAY shift to state 79
-- On TQUESTION shift to state 80
-- On TOPAR shift to state 81
-- On TANTISLASH shift to state 85
-- On type_php shift to state 97
-- On type_arg_list shift to state 104
-- On qualified_name shift to state 94
-- On qualified_class_name_or_array shift to state 95
-- On qualified_class_name shift to state 100
-- On primary_type_php shift to state 101
-- On namespace_name shift to state 102
-- On ident_in_name shift to state 57
-- On ident shift to state 56
-- On class_name shift to state 103
## Reductions:

State 97:
## Known stack suffix:
## type_php
## LR(1) items:
type_arg_list -> type_php . [ TGREATER ]
type_arg_list -> type_php . TCOMMA type_arg_list [ TGREATER ]
type_php -> type_php . TCOLCOL primary_type_php [ TGREATER TCOMMA TCOLCOL ]
## Transitions:
-- On TCOMMA shift to state 98
-- On TCOLCOL shift to state 93
## Reductions:
-- On TGREATER
--   reduce production type_arg_list -> type_php

State 98:
## Known stack suffix:
## type_php TCOMMA
## LR(1) items:
type_arg_list -> type_php TCOMMA . type_arg_list [ TGREATER ]
## Transitions:
-- On T_TYPE shift to state 6
-- On T_SUPER shift to state 8
-- On T_SELF shift to state 77
-- On T_PARENT shift to state 78
-- On T_NAMESPACE shift to state 50
-- On T_METAVAR shift to state 17
-- On T_INSTANCEOF shift to state 52
-- On T_IDENT shift to state 18
-- On T_ENUM shift to state 19
-- On T_ARRAY shift to state 79
-- On TQUESTION shift to state 80
-- On TOPAR shift to state 81
-- On TANTISLASH shift to state 85
-- On type_php shift to state 97
-- On type_arg_list shift to state 99
-- On qualified_name shift to state 94
-- On qualified_class_name_or_array shift to state 95
-- On qualified_class_name shift to state 100
-- On primary_type_php shift to state 101
-- On namespace_name shift to state 102
-- On ident_in_name shift to state 57
-- On ident shift to state 56
-- On class_name shift to state 103
## Reductions:

State 99:
## Known stack suffix:
## type_php TCOMMA type_arg_list
## LR(1) items:
type_arg_list -> type_php TCOMMA type_arg_list . [ TGREATER ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production type_arg_list -> type_php TCOMMA type_arg_list

State 100:
## Known stack suffix:
## qualified_class_name
## LR(1) items:
qualified_class_name_or_array -> qualified_class_name . [ T_VARIABLE T_TYPE T_SUPER T_NEW T_METAVAR T_LOGICAL_AND T_LIST T_IDENT T_FROM T_ENUM T_ELLIPSIS T_DOUBLE_ARROW T_AS TSMALLER TSEMICOLON TOR TOBRACE TGREATER TEQ TCPAR TCOMMA TCOLCOL TAND EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production qualified_class_name_or_array -> qualified_class_name

State 101:
## Known stack suffix:
## primary_type_php
## LR(1) items:
type_php -> primary_type_php . [ T_VARIABLE T_TYPE T_SUPER T_NEW T_METAVAR T_LOGICAL_AND T_LIST T_IDENT T_FROM T_ENUM T_ELLIPSIS T_DOUBLE_ARROW T_AS TSEMICOLON TOBRACE TGREATER TEQ TCPAR TCOMMA TCOLCOL TAND EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production type_php -> primary_type_php

State 102:
## Known stack suffix:
## namespace_name
## LR(1) items:
namespace_name -> namespace_name . TANTISLASH ident_in_name [ T_XOR_EQUAL T_VARIABLE T_TYPE T_SUPER T_SR_EQUAL T_SR T_SL_EQUAL T_SL T_ROCKET T_PLUS_EQUAL T_OR_EQUAL T_OBJECT_OPERATOR T_NEW T_MUL_EQUAL T_MOD_EQUAL T_MINUS_EQUAL T_METAVAR T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LIST T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_IMPLEMENTS T_IDENT T_FROM T_ENUM T_ELLIPSIS T_DOUBLE_ARROW T_DIV_EQUAL T_DEC T_CONCAT_EQUAL T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW T_AND_EQUAL TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TOPAR TOBRACE TOBRA TMUL TMOD TMINUS TGREATER TEQ TDOT TDIV TCPAR TCOMMA TCOLON TCOLCOL TCBRACE TCBRA TANTISLASH TAND RDots EOF ]
qualified_name -> namespace_name . [ T_XOR_EQUAL T_VARIABLE T_TYPE T_SUPER T_SR_EQUAL T_SR T_SL_EQUAL T_SL T_ROCKET T_PLUS_EQUAL T_OR_EQUAL T_OBJECT_OPERATOR T_NEW T_MUL_EQUAL T_MOD_EQUAL T_MINUS_EQUAL T_METAVAR T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LIST T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_IMPLEMENTS T_IDENT T_FROM T_ENUM T_ELLIPSIS T_DOUBLE_ARROW T_DIV_EQUAL T_DEC T_CONCAT_EQUAL T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW T_AND_EQUAL TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TOPAR TOBRACE TOBRA TMUL TMOD TMINUS TGREATER TEQ TDOT TDIV TCPAR TCOMMA TCOLON TCOLCOL TCBRACE TCBRA TAND RDots EOF ]
## Transitions:
-- On TANTISLASH shift to state 54
## Reductions:
-- On T_XOR_EQUAL T_VARIABLE T_TYPE T_SUPER T_SR_EQUAL T_SR T_SL_EQUAL T_SL T_ROCKET T_PLUS_EQUAL T_OR_EQUAL T_OBJECT_OPERATOR T_NEW T_MUL_EQUAL T_MOD_EQUAL T_MINUS_EQUAL T_METAVAR T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LIST T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_IMPLEMENTS T_IDENT T_FROM T_ENUM T_ELLIPSIS T_DOUBLE_ARROW T_DIV_EQUAL T_DEC T_CONCAT_EQUAL T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW T_AND_EQUAL TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TOPAR TOBRACE TOBRA TMUL TMOD TMINUS TGREATER TEQ TDOT TDIV TCPAR TCOMMA TCOLON TCOLCOL TCBRACE TCBRA TAND RDots EOF
--   reduce production qualified_name -> namespace_name

State 103:
## Known stack suffix:
## class_name
## LR(1) items:
primary_type_php -> class_name . [ T_VARIABLE T_TYPE T_SUPER T_NEW T_METAVAR T_LOGICAL_AND T_LIST T_IDENT T_FROM T_ENUM T_ELLIPSIS T_DOUBLE_ARROW T_AS TSEMICOLON TOBRACE TGREATER TEQ TCPAR TCOMMA TCOLCOL TAND EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production primary_type_php -> class_name

State 104:
## Known stack suffix:
## TSMALLER type_arg_list
## LR(1) items:
type_arguments -> TSMALLER type_arg_list . TGREATER [ T_VARIABLE T_TYPE T_SUPER T_NEW T_METAVAR T_LOGICAL_AND T_LIST T_IMPLEMENTS T_IDENT T_FROM T_ENUM T_ELLIPSIS T_DOUBLE_ARROW T_AS TSEMICOLON TOR TOBRACE TGREATER TEQ TCPAR TCOMMA TCOLCOL TAND EOF ]
## Transitions:
-- On TGREATER shift to state 105
## Reductions:

State 105:
## Known stack suffix:
## TSMALLER type_arg_list TGREATER
## LR(1) items:
type_arguments -> TSMALLER type_arg_list TGREATER . [ T_VARIABLE T_TYPE T_SUPER T_NEW T_METAVAR T_LOGICAL_AND T_LIST T_IMPLEMENTS T_IDENT T_FROM T_ENUM T_ELLIPSIS T_DOUBLE_ARROW T_AS TSEMICOLON TOR TOBRACE TGREATER TEQ TCPAR TCOMMA TCOLCOL TAND EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production type_arguments -> TSMALLER type_arg_list TGREATER

State 106:
## Known stack suffix:
## qualified_class_name_or_array type_arguments
## LR(1) items:
class_name -> qualified_class_name_or_array type_arguments . [ T_VARIABLE T_TYPE T_SUPER T_NEW T_METAVAR T_LOGICAL_AND T_LIST T_IDENT T_FROM T_ENUM T_ELLIPSIS T_DOUBLE_ARROW T_AS TSEMICOLON TOR TOBRACE TGREATER TEQ TCPAR TCOMMA TCOLCOL TAND EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production class_name -> qualified_class_name_or_array type_arguments

State 107:
## Known stack suffix:
## type_php TCOLCOL primary_type_php
## LR(1) items:
type_php -> type_php TCOLCOL primary_type_php . [ T_VARIABLE T_TYPE T_SUPER T_NEW T_METAVAR T_LOGICAL_AND T_LIST T_IDENT T_FROM T_ENUM T_ELLIPSIS T_DOUBLE_ARROW T_AS TSEMICOLON TOBRACE TGREATER TEQ TCPAR TCOMMA TCOLCOL TAND EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production type_php -> type_php TCOLCOL primary_type_php

State 108:
## Known stack suffix:
## non_empty_type_php_or_dots_list
## LR(1) items:
non_empty_type_php_or_dots_list -> non_empty_type_php_or_dots_list . TCOMMA type_php_or_dots [ TCPAR TCOMMA ]
type_php_or_dots_list -> non_empty_type_php_or_dots_list . [ TCPAR ]
type_php_or_dots_list -> non_empty_type_php_or_dots_list . TCOMMA [ TCPAR ]
## Transitions:
-- On TCOMMA shift to state 109
## Reductions:
-- On TCPAR
--   reduce production type_php_or_dots_list -> non_empty_type_php_or_dots_list

State 109:
## Known stack suffix:
## non_empty_type_php_or_dots_list TCOMMA
## LR(1) items:
non_empty_type_php_or_dots_list -> non_empty_type_php_or_dots_list TCOMMA . type_php_or_dots [ TCPAR TCOMMA ]
type_php_or_dots_list -> non_empty_type_php_or_dots_list TCOMMA . [ TCPAR ]
## Transitions:
-- On T_TYPE shift to state 6
-- On T_SUPER shift to state 8
-- On T_SELF shift to state 77
-- On T_PARENT shift to state 78
-- On T_NAMESPACE shift to state 50
-- On T_METAVAR shift to state 17
-- On T_INSTANCEOF shift to state 52
-- On T_IDENT shift to state 18
-- On T_ENUM shift to state 19
-- On T_ELLIPSIS shift to state 84
-- On T_ARRAY shift to state 79
-- On TQUESTION shift to state 80
-- On TOPAR shift to state 81
-- On TANTISLASH shift to state 85
-- On type_php_or_dots shift to state 110
-- On type_php shift to state 92
-- On qualified_name shift to state 94
-- On qualified_class_name_or_array shift to state 95
-- On qualified_class_name shift to state 100
-- On primary_type_php shift to state 101
-- On namespace_name shift to state 102
-- On ident_in_name shift to state 57
-- On ident shift to state 56
-- On class_name shift to state 103
## Reductions:
-- On TCPAR
--   reduce production type_php_or_dots_list -> non_empty_type_php_or_dots_list TCOMMA

State 110:
## Known stack suffix:
## non_empty_type_php_or_dots_list TCOMMA type_php_or_dots
## LR(1) items:
non_empty_type_php_or_dots_list -> non_empty_type_php_or_dots_list TCOMMA type_php_or_dots . [ TCPAR TCOMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production non_empty_type_php_or_dots_list -> non_empty_type_php_or_dots_list TCOMMA type_php_or_dots

State 111:
## Known stack suffix:
## type_php
## LR(1) items:
list_sep(type_php,TCOMMA) -> type_php . [ TCPAR TCOMMA ]
type_php -> type_php . TCOLCOL primary_type_php [ TCPAR TCOMMA TCOLCOL ]
## Transitions:
-- On TCOLCOL shift to state 93
## Reductions:
-- On TCPAR TCOMMA
--   reduce production list_sep(type_php,TCOMMA) -> type_php

State 112:
## Known stack suffix:
## TOPAR non_empty_type_php_list
## LR(1) items:
primary_type_php -> TOPAR non_empty_type_php_list . TCPAR [ T_VARIABLE T_TYPE T_SUPER T_NEW T_METAVAR T_LOGICAL_AND T_LIST T_IDENT T_FROM T_ENUM T_ELLIPSIS T_DOUBLE_ARROW T_AS TSEMICOLON TOBRACE TGREATER TEQ TCPAR TCOMMA TCOLCOL TAND EOF ]
## Transitions:
-- On TCPAR shift to state 113
## Reductions:

State 113:
## Known stack suffix:
## TOPAR non_empty_type_php_list TCPAR
## LR(1) items:
primary_type_php -> TOPAR non_empty_type_php_list TCPAR . [ T_VARIABLE T_TYPE T_SUPER T_NEW T_METAVAR T_LOGICAL_AND T_LIST T_IDENT T_FROM T_ENUM T_ELLIPSIS T_DOUBLE_ARROW T_AS TSEMICOLON TOBRACE TGREATER TEQ TCPAR TCOMMA TCOLCOL TAND EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production primary_type_php -> TOPAR non_empty_type_php_list TCPAR

State 114:
## Known stack suffix:
## list_sep(type_php,TCOMMA)
## LR(1) items:
list_sep(type_php,TCOMMA) -> list_sep(type_php,TCOMMA) . TCOMMA type_php [ TCPAR TCOMMA ]
non_empty_type_php_list -> list_sep(type_php,TCOMMA) . [ TCPAR ]
non_empty_type_php_list -> list_sep(type_php,TCOMMA) . TCOMMA [ TCPAR ]
## Transitions:
-- On TCOMMA shift to state 115
## Reductions:
-- On TCPAR
--   reduce production non_empty_type_php_list -> list_sep(type_php,TCOMMA)

State 115:
## Known stack suffix:
## list_sep(type_php,TCOMMA) TCOMMA
## LR(1) items:
list_sep(type_php,TCOMMA) -> list_sep(type_php,TCOMMA) TCOMMA . type_php [ TCPAR TCOMMA ]
non_empty_type_php_list -> list_sep(type_php,TCOMMA) TCOMMA . [ TCPAR ]
## Transitions:
-- On T_TYPE shift to state 6
-- On T_SUPER shift to state 8
-- On T_SELF shift to state 77
-- On T_PARENT shift to state 78
-- On T_NAMESPACE shift to state 50
-- On T_METAVAR shift to state 17
-- On T_INSTANCEOF shift to state 52
-- On T_IDENT shift to state 18
-- On T_ENUM shift to state 19
-- On T_ARRAY shift to state 79
-- On TQUESTION shift to state 80
-- On TOPAR shift to state 81
-- On TANTISLASH shift to state 85
-- On type_php shift to state 116
-- On qualified_name shift to state 94
-- On qualified_class_name_or_array shift to state 95
-- On qualified_class_name shift to state 100
-- On primary_type_php shift to state 101
-- On namespace_name shift to state 102
-- On ident_in_name shift to state 57
-- On ident shift to state 56
-- On class_name shift to state 103
## Reductions:
-- On TCPAR
--   reduce production non_empty_type_php_list -> list_sep(type_php,TCOMMA) TCOMMA

State 116:
## Known stack suffix:
## list_sep(type_php,TCOMMA) TCOMMA type_php
## LR(1) items:
list_sep(type_php,TCOMMA) -> list_sep(type_php,TCOMMA) TCOMMA type_php . [ TCPAR TCOMMA ]
type_php -> type_php . TCOLCOL primary_type_php [ TCPAR TCOMMA TCOLCOL ]
## Transitions:
-- On TCOLCOL shift to state 93
## Reductions:
-- On TCPAR TCOMMA
--   reduce production list_sep(type_php,TCOMMA) -> list_sep(type_php,TCOMMA) TCOMMA type_php

State 117:
## Known stack suffix:
## TQUESTION type_php
## LR(1) items:
primary_type_php -> TQUESTION type_php . [ T_VARIABLE T_TYPE T_SUPER T_NEW T_METAVAR T_LOGICAL_AND T_LIST T_IDENT T_FROM T_ENUM T_ELLIPSIS T_DOUBLE_ARROW T_AS TSEMICOLON TOBRACE TGREATER TEQ TCPAR TCOMMA TCOLCOL TAND EOF ]
type_php -> type_php . TCOLCOL primary_type_php [ T_VARIABLE T_TYPE T_SUPER T_NEW T_METAVAR T_LOGICAL_AND T_LIST T_IDENT T_FROM T_ENUM T_ELLIPSIS T_DOUBLE_ARROW T_AS TSEMICOLON TOBRACE TGREATER TEQ TCPAR TCOMMA TCOLCOL TAND EOF ]
## Transitions:
-- On TCOLCOL shift to state 93
## Reductions:
-- On T_VARIABLE T_TYPE T_SUPER T_NEW T_METAVAR T_LOGICAL_AND T_LIST T_IDENT T_FROM T_ENUM T_ELLIPSIS T_DOUBLE_ARROW T_AS TSEMICOLON TOBRACE TGREATER TEQ TCPAR TCOMMA TAND EOF
--   reduce production primary_type_php -> TQUESTION type_php

State 118:
## Known stack suffix:
## TCOLON type_php
## LR(1) items:
return_type -> TCOLON type_php . [ T_DOUBLE_ARROW TSEMICOLON TOBRACE TCPAR ]
type_php -> type_php . TCOLCOL primary_type_php [ T_DOUBLE_ARROW TSEMICOLON TOBRACE TCPAR TCOLCOL ]
## Transitions:
-- On TCOLCOL shift to state 93
## Reductions:
-- On T_DOUBLE_ARROW TSEMICOLON TOBRACE TCPAR
--   reduce production return_type -> TCOLON type_php

State 119:
## Known stack suffix:
## return_type
## LR(1) items:
option(return_type) -> return_type . [ T_DOUBLE_ARROW TSEMICOLON TOBRACE ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production option(return_type) -> return_type

State 120:
## Known stack suffix:
## T_LAMBDA_OPAR parameter_list T_LAMBDA_CPAR option(return_type)
## LR(1) items:
lambda_expr -> T_LAMBDA_OPAR parameter_list T_LAMBDA_CPAR option(return_type) . lambda_body [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
## Transitions:
-- On T_DOUBLE_ARROW shift to state 4
-- On lambda_body shift to state 121
## Reductions:

State 121:
## Known stack suffix:
## T_LAMBDA_OPAR parameter_list T_LAMBDA_CPAR option(return_type) lambda_body
## LR(1) items:
lambda_expr -> T_LAMBDA_OPAR parameter_list T_LAMBDA_CPAR option(return_type) lambda_body . [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production lambda_expr -> T_LAMBDA_OPAR parameter_list T_LAMBDA_CPAR option(return_type) lambda_body

State 122:
## Known stack suffix:
## parameter
## LR(1) items:
parameter_list -> parameter . [ T_LAMBDA_CPAR TCPAR ]
parameter_list -> parameter . TCOMMA parameter_list [ T_LAMBDA_CPAR TCPAR ]
## Transitions:
-- On TCOMMA shift to state 123
## Reductions:
-- On T_LAMBDA_CPAR TCPAR
--   reduce production parameter_list -> parameter

State 123:
## Known stack suffix:
## parameter TCOMMA
## LR(1) items:
parameter_list -> parameter TCOMMA . parameter_list [ T_LAMBDA_CPAR TCPAR ]
## Transitions:
-- On T_SL shift to state 16
-- On parameter_list shift to state 124
-- On parameter shift to state 122
-- On option(attributes) shift to state 125
-- On attributes shift to state 181
## Reductions:
-- On T_VARIABLE T_TYPE T_SUPER T_SELF T_PUBLIC T_PROTECTED T_PRIVATE T_PARENT T_NAMESPACE T_METAVAR T_INSTANCEOF T_IDENT T_ENUM T_ELLIPSIS T_ARRAY TQUESTION TOPAR TANTISLASH TAND
--   reduce production option(attributes) ->
-- On T_LAMBDA_CPAR TCPAR
--   reduce production parameter_list ->

State 124:
## Known stack suffix:
## parameter TCOMMA parameter_list
## LR(1) items:
parameter_list -> parameter TCOMMA parameter_list . [ T_LAMBDA_CPAR TCPAR ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production parameter_list -> parameter TCOMMA parameter_list

State 125:
## Known stack suffix:
## option(attributes)
## LR(1) items:
parameter -> option(attributes) . option(ctor_modifier) parameter_bis [ T_LAMBDA_CPAR TCPAR TCOMMA ]
parameter -> option(attributes) . option(ctor_modifier) type_php parameter_bis [ T_LAMBDA_CPAR TCPAR TCOMMA ]
## Transitions:
-- On T_PUBLIC shift to state 126
-- On T_PROTECTED shift to state 127
-- On T_PRIVATE shift to state 128
-- On visibility_modifier shift to state 129
-- On option(ctor_modifier) shift to state 130
-- On ctor_modifier shift to state 945
## Reductions:
-- On T_VARIABLE T_TYPE T_SUPER T_SELF T_PARENT T_NAMESPACE T_METAVAR T_INSTANCEOF T_IDENT T_ENUM T_ELLIPSIS T_ARRAY TQUESTION TOPAR TANTISLASH TAND
--   reduce production option(ctor_modifier) ->

State 126:
## Known stack suffix:
## T_PUBLIC
## LR(1) items:
visibility_modifier -> T_PUBLIC . [ T_VARIABLE T_TYPE T_SUPER T_STATIC T_SELF T_PUBLIC T_PROTECTED T_PRIVATE T_PARENT T_NAMESPACE T_METAVAR T_INSTANCEOF T_IDENT T_FUNCTION T_FINAL T_ENUM T_ELLIPSIS T_CONST T_ASYNC T_ARRAY T_ABSTRACT TSEMICOLON TQUESTION TOPAR TANTISLASH TAND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production visibility_modifier -> T_PUBLIC

State 127:
## Known stack suffix:
## T_PROTECTED
## LR(1) items:
visibility_modifier -> T_PROTECTED . [ T_VARIABLE T_TYPE T_SUPER T_STATIC T_SELF T_PUBLIC T_PROTECTED T_PRIVATE T_PARENT T_NAMESPACE T_METAVAR T_INSTANCEOF T_IDENT T_FUNCTION T_FINAL T_ENUM T_ELLIPSIS T_CONST T_ASYNC T_ARRAY T_ABSTRACT TSEMICOLON TQUESTION TOPAR TANTISLASH TAND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production visibility_modifier -> T_PROTECTED

State 128:
## Known stack suffix:
## T_PRIVATE
## LR(1) items:
visibility_modifier -> T_PRIVATE . [ T_VARIABLE T_TYPE T_SUPER T_STATIC T_SELF T_PUBLIC T_PROTECTED T_PRIVATE T_PARENT T_NAMESPACE T_METAVAR T_INSTANCEOF T_IDENT T_FUNCTION T_FINAL T_ENUM T_ELLIPSIS T_CONST T_ASYNC T_ARRAY T_ABSTRACT TSEMICOLON TQUESTION TOPAR TANTISLASH TAND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production visibility_modifier -> T_PRIVATE

State 129:
## Known stack suffix:
## visibility_modifier
## LR(1) items:
ctor_modifier -> visibility_modifier . [ T_VARIABLE T_TYPE T_SUPER T_SELF T_PARENT T_NAMESPACE T_METAVAR T_INSTANCEOF T_IDENT T_ENUM T_ELLIPSIS T_ARRAY TQUESTION TOPAR TANTISLASH TAND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production ctor_modifier -> visibility_modifier

State 130:
## Known stack suffix:
## option(attributes) option(ctor_modifier)
## LR(1) items:
parameter -> option(attributes) option(ctor_modifier) . parameter_bis [ T_LAMBDA_CPAR TCPAR TCOMMA ]
parameter -> option(attributes) option(ctor_modifier) . type_php parameter_bis [ T_LAMBDA_CPAR TCPAR TCOMMA ]
## Transitions:
-- On T_VARIABLE shift to state 131
-- On T_TYPE shift to state 6
-- On T_SUPER shift to state 8
-- On T_SELF shift to state 77
-- On T_PARENT shift to state 78
-- On T_NAMESPACE shift to state 50
-- On T_METAVAR shift to state 927
-- On T_INSTANCEOF shift to state 52
-- On T_IDENT shift to state 18
-- On T_ENUM shift to state 19
-- On T_ELLIPSIS shift to state 930
-- On T_ARRAY shift to state 79
-- On TQUESTION shift to state 80
-- On TOPAR shift to state 81
-- On TANTISLASH shift to state 85
-- On TAND shift to state 932
-- On type_php shift to state 941
-- On qualified_name shift to state 94
-- On qualified_class_name_or_array shift to state 95
-- On qualified_class_name shift to state 100
-- On primary_type_php shift to state 101
-- On parameter_bis shift to state 944
-- On namespace_name shift to state 102
-- On ident_in_name shift to state 57
-- On ident shift to state 56
-- On class_name shift to state 103
## Reductions:

State 131:
## Known stack suffix:
## T_VARIABLE
## LR(1) items:
parameter_bis -> T_VARIABLE . [ T_LAMBDA_CPAR TCPAR TCOMMA ]
parameter_bis -> T_VARIABLE . TEQ static_scalar [ T_LAMBDA_CPAR TCPAR TCOMMA ]
## Transitions:
-- On TEQ shift to state 132
## Reductions:
-- On T_LAMBDA_CPAR TCPAR TCOMMA
--   reduce production parameter_bis -> T_VARIABLE

State 132:
## Known stack suffix:
## T_VARIABLE TEQ
## LR(1) items:
parameter_bis -> T_VARIABLE TEQ . static_scalar [ T_LAMBDA_CPAR TCPAR TCOMMA ]
## Transitions:
-- On T__AT shift to state 1
-- On T_YIELD shift to state 2
-- On T_VARIABLE shift to state 3
-- On T_UNSET_CAST shift to state 5
-- On T_TYPE shift to state 6
-- On T_TRAIT_C shift to state 7
-- On T_SUPER shift to state 8
-- On T_STRING_CAST shift to state 9
-- On T_STATIC shift to state 10
-- On T_START_HEREDOC shift to state 25
-- On T_SELF shift to state 40
-- On T_REQUIRE_ONCE shift to state 41
-- On T_REQUIRE shift to state 42
-- On T_PRINT shift to state 43
-- On T_PARENT shift to state 44
-- On T_OBJECT_CAST shift to state 45
-- On T_NEW shift to state 46
-- On T_NAMESPACE_C shift to state 49
-- On T_NAMESPACE shift to state 50
-- On T_METHOD_C shift to state 58
-- On T_METAVAR shift to state 17
-- On T_LNUMBER shift to state 59
-- On T_LIST shift to state 69
-- On T_LINE shift to state 60
-- On T_LAMBDA_OPAR shift to state 73
-- On T_ISSET shift to state 133
-- On T_INT_CAST shift to state 135
-- On T_INSTANCEOF shift to state 52
-- On T_INCLUDE_ONCE shift to state 136
-- On T_INCLUDE shift to state 137
-- On T_INC shift to state 138
-- On T_IDENT shift to state 18
-- On T_FUNC_C shift to state 61
-- On T_FUNCTION shift to state 139
-- On T_FILE shift to state 62
-- On T_EXIT shift to state 160
-- On T_EVAL shift to state 162
-- On T_ENUM shift to state 19
-- On T_EMPTY shift to state 164
-- On T_DOUBLE_CAST shift to state 168
-- On T_DNUMBER shift to state 63
-- On T_DIR shift to state 64
-- On T_DEC shift to state 169
-- On T_CONSTANT_ENCAPSED_STRING shift to state 65
-- On T_CLONE shift to state 170
-- On T_CLASS_C shift to state 66
-- On T_BOOL_CAST shift to state 171
-- On T_AWAIT shift to state 172
-- On T_ASYNC shift to state 173
-- On T_ARRAY_CAST shift to state 200
-- On T_ARRAY shift to state 201
-- On TTILDE shift to state 204
-- On TPLUS shift to state 205
-- On TOPAR shift to state 206
-- On TOBRA shift to state 209
-- On TMINUS shift to state 210
-- On TGUIL shift to state 211
-- On TDOLLARDOLLAR shift to state 213
-- On TDOLLAR shift to state 214
-- On TBANG shift to state 216
-- On TBACKQUOTE shift to state 217
-- On TANTISLASH shift to state 85
-- On LDots shift to state 222
-- On static_scalar shift to state 926
-- On simple_expr shift to state 223
-- On qualified_name shift to state 94
-- On qualified_class_name shift to state 225
-- On primary_expr shift to state 226
-- On new_expr shift to state 227
-- On namespace_name shift to state 102
-- On member_expr shift to state 228
-- On lambda_expr shift to state 231
-- On ident_in_name shift to state 57
-- On ident shift to state 56
-- On expr shift to state 465
-- On constant shift to state 239
-- On call_expr shift to state 240
## Reductions:

State 133:
## Known stack suffix:
## T_ISSET
## LR(1) items:
expr -> T_ISSET . TOPAR list_sep(expr_or_dots,TCOMMA) TCPAR [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
## Transitions:
-- On TOPAR shift to state 134
## Reductions:

State 134:
## Known stack suffix:
## T_ISSET TOPAR
## LR(1) items:
expr -> T_ISSET TOPAR . list_sep(expr_or_dots,TCOMMA) TCPAR [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
## Transitions:
-- On T__AT shift to state 1
-- On T_YIELD shift to state 2
-- On T_VARIABLE shift to state 3
-- On T_UNSET_CAST shift to state 5
-- On T_TYPE shift to state 6
-- On T_TRAIT_C shift to state 7
-- On T_SUPER shift to state 8
-- On T_STRING_CAST shift to state 9
-- On T_STATIC shift to state 10
-- On T_START_HEREDOC shift to state 25
-- On T_SELF shift to state 40
-- On T_REQUIRE_ONCE shift to state 41
-- On T_REQUIRE shift to state 42
-- On T_PRINT shift to state 43
-- On T_PARENT shift to state 44
-- On T_OBJECT_CAST shift to state 45
-- On T_NEW shift to state 46
-- On T_NAMESPACE_C shift to state 49
-- On T_NAMESPACE shift to state 50
-- On T_METHOD_C shift to state 58
-- On T_METAVAR shift to state 17
-- On T_LNUMBER shift to state 59
-- On T_LIST shift to state 69
-- On T_LINE shift to state 60
-- On T_LAMBDA_OPAR shift to state 73
-- On T_ISSET shift to state 133
-- On T_INT_CAST shift to state 135
-- On T_INSTANCEOF shift to state 52
-- On T_INCLUDE_ONCE shift to state 136
-- On T_INCLUDE shift to state 137
-- On T_INC shift to state 138
-- On T_IDENT shift to state 18
-- On T_FUNC_C shift to state 61
-- On T_FUNCTION shift to state 139
-- On T_FILE shift to state 62
-- On T_EXIT shift to state 160
-- On T_EVAL shift to state 162
-- On T_ENUM shift to state 19
-- On T_EMPTY shift to state 164
-- On T_ELLIPSIS shift to state 637
-- On T_DOUBLE_CAST shift to state 168
-- On T_DNUMBER shift to state 63
-- On T_DIR shift to state 64
-- On T_DEC shift to state 169
-- On T_CONSTANT_ENCAPSED_STRING shift to state 65
-- On T_CLONE shift to state 170
-- On T_CLASS_C shift to state 66
-- On T_BOOL_CAST shift to state 171
-- On T_AWAIT shift to state 172
-- On T_ASYNC shift to state 173
-- On T_ARRAY_CAST shift to state 200
-- On T_ARRAY shift to state 201
-- On TTILDE shift to state 204
-- On TPLUS shift to state 205
-- On TOPAR shift to state 206
-- On TOBRA shift to state 209
-- On TMINUS shift to state 210
-- On TGUIL shift to state 211
-- On TDOLLARDOLLAR shift to state 213
-- On TDOLLAR shift to state 214
-- On TBANG shift to state 216
-- On TBACKQUOTE shift to state 217
-- On TANTISLASH shift to state 85
-- On LDots shift to state 222
-- On simple_expr shift to state 223
-- On qualified_name shift to state 94
-- On qualified_class_name shift to state 225
-- On primary_expr shift to state 226
-- On new_expr shift to state 227
-- On namespace_name shift to state 102
-- On member_expr shift to state 228
-- On list_sep(expr_or_dots,TCOMMA) shift to state 924
-- On lambda_expr shift to state 231
-- On ident_in_name shift to state 57
-- On ident shift to state 56
-- On expr shift to state 643
-- On constant shift to state 239
-- On call_expr shift to state 240
## Reductions:

State 135:
## Known stack suffix:
## T_INT_CAST
## LR(1) items:
expr -> T_INT_CAST . expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
## Transitions:
-- On T__AT shift to state 1
-- On T_YIELD shift to state 2
-- On T_VARIABLE shift to state 3
-- On T_UNSET_CAST shift to state 5
-- On T_TYPE shift to state 6
-- On T_TRAIT_C shift to state 7
-- On T_SUPER shift to state 8
-- On T_STRING_CAST shift to state 9
-- On T_STATIC shift to state 10
-- On T_START_HEREDOC shift to state 25
-- On T_SELF shift to state 40
-- On T_REQUIRE_ONCE shift to state 41
-- On T_REQUIRE shift to state 42
-- On T_PRINT shift to state 43
-- On T_PARENT shift to state 44
-- On T_OBJECT_CAST shift to state 45
-- On T_NEW shift to state 46
-- On T_NAMESPACE_C shift to state 49
-- On T_NAMESPACE shift to state 50
-- On T_METHOD_C shift to state 58
-- On T_METAVAR shift to state 17
-- On T_LNUMBER shift to state 59
-- On T_LIST shift to state 69
-- On T_LINE shift to state 60
-- On T_LAMBDA_OPAR shift to state 73
-- On T_ISSET shift to state 133
-- On T_INT_CAST shift to state 135
-- On T_INSTANCEOF shift to state 52
-- On T_INCLUDE_ONCE shift to state 136
-- On T_INCLUDE shift to state 137
-- On T_INC shift to state 138
-- On T_IDENT shift to state 18
-- On T_FUNC_C shift to state 61
-- On T_FUNCTION shift to state 139
-- On T_FILE shift to state 62
-- On T_EXIT shift to state 160
-- On T_EVAL shift to state 162
-- On T_ENUM shift to state 19
-- On T_EMPTY shift to state 164
-- On T_DOUBLE_CAST shift to state 168
-- On T_DNUMBER shift to state 63
-- On T_DIR shift to state 64
-- On T_DEC shift to state 169
-- On T_CONSTANT_ENCAPSED_STRING shift to state 65
-- On T_CLONE shift to state 170
-- On T_CLASS_C shift to state 66
-- On T_BOOL_CAST shift to state 171
-- On T_AWAIT shift to state 172
-- On T_ASYNC shift to state 173
-- On T_ARRAY_CAST shift to state 200
-- On T_ARRAY shift to state 201
-- On TTILDE shift to state 204
-- On TPLUS shift to state 205
-- On TOPAR shift to state 206
-- On TOBRA shift to state 209
-- On TMINUS shift to state 210
-- On TGUIL shift to state 211
-- On TDOLLARDOLLAR shift to state 213
-- On TDOLLAR shift to state 214
-- On TBANG shift to state 216
-- On TBACKQUOTE shift to state 217
-- On TANTISLASH shift to state 85
-- On LDots shift to state 222
-- On simple_expr shift to state 223
-- On qualified_name shift to state 94
-- On qualified_class_name shift to state 225
-- On primary_expr shift to state 226
-- On new_expr shift to state 227
-- On namespace_name shift to state 102
-- On member_expr shift to state 228
-- On lambda_expr shift to state 231
-- On ident_in_name shift to state 57
-- On ident shift to state 56
-- On expr shift to state 923
-- On constant shift to state 239
-- On call_expr shift to state 240
## Reductions:

State 136:
## Known stack suffix:
## T_INCLUDE_ONCE
## LR(1) items:
expr -> T_INCLUDE_ONCE . expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> T_INCLUDE_ONCE . T_ELLIPSIS [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
## Transitions:
-- On T__AT shift to state 1
-- On T_YIELD shift to state 2
-- On T_VARIABLE shift to state 3
-- On T_UNSET_CAST shift to state 5
-- On T_TYPE shift to state 6
-- On T_TRAIT_C shift to state 7
-- On T_SUPER shift to state 8
-- On T_STRING_CAST shift to state 9
-- On T_STATIC shift to state 10
-- On T_START_HEREDOC shift to state 25
-- On T_SELF shift to state 40
-- On T_REQUIRE_ONCE shift to state 41
-- On T_REQUIRE shift to state 42
-- On T_PRINT shift to state 43
-- On T_PARENT shift to state 44
-- On T_OBJECT_CAST shift to state 45
-- On T_NEW shift to state 46
-- On T_NAMESPACE_C shift to state 49
-- On T_NAMESPACE shift to state 50
-- On T_METHOD_C shift to state 58
-- On T_METAVAR shift to state 17
-- On T_LNUMBER shift to state 59
-- On T_LIST shift to state 69
-- On T_LINE shift to state 60
-- On T_LAMBDA_OPAR shift to state 73
-- On T_ISSET shift to state 133
-- On T_INT_CAST shift to state 135
-- On T_INSTANCEOF shift to state 52
-- On T_INCLUDE_ONCE shift to state 136
-- On T_INCLUDE shift to state 137
-- On T_INC shift to state 138
-- On T_IDENT shift to state 18
-- On T_FUNC_C shift to state 61
-- On T_FUNCTION shift to state 139
-- On T_FILE shift to state 62
-- On T_EXIT shift to state 160
-- On T_EVAL shift to state 162
-- On T_ENUM shift to state 19
-- On T_EMPTY shift to state 164
-- On T_ELLIPSIS shift to state 921
-- On T_DOUBLE_CAST shift to state 168
-- On T_DNUMBER shift to state 63
-- On T_DIR shift to state 64
-- On T_DEC shift to state 169
-- On T_CONSTANT_ENCAPSED_STRING shift to state 65
-- On T_CLONE shift to state 170
-- On T_CLASS_C shift to state 66
-- On T_BOOL_CAST shift to state 171
-- On T_AWAIT shift to state 172
-- On T_ASYNC shift to state 173
-- On T_ARRAY_CAST shift to state 200
-- On T_ARRAY shift to state 201
-- On TTILDE shift to state 204
-- On TPLUS shift to state 205
-- On TOPAR shift to state 206
-- On TOBRA shift to state 209
-- On TMINUS shift to state 210
-- On TGUIL shift to state 211
-- On TDOLLARDOLLAR shift to state 213
-- On TDOLLAR shift to state 214
-- On TBANG shift to state 216
-- On TBACKQUOTE shift to state 217
-- On TANTISLASH shift to state 85
-- On LDots shift to state 222
-- On simple_expr shift to state 223
-- On qualified_name shift to state 94
-- On qualified_class_name shift to state 225
-- On primary_expr shift to state 226
-- On new_expr shift to state 227
-- On namespace_name shift to state 102
-- On member_expr shift to state 228
-- On lambda_expr shift to state 231
-- On ident_in_name shift to state 57
-- On ident shift to state 56
-- On expr shift to state 922
-- On constant shift to state 239
-- On call_expr shift to state 240
## Reductions:

State 137:
## Known stack suffix:
## T_INCLUDE
## LR(1) items:
expr -> T_INCLUDE . expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> T_INCLUDE . T_ELLIPSIS [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
## Transitions:
-- On T__AT shift to state 1
-- On T_YIELD shift to state 2
-- On T_VARIABLE shift to state 3
-- On T_UNSET_CAST shift to state 5
-- On T_TYPE shift to state 6
-- On T_TRAIT_C shift to state 7
-- On T_SUPER shift to state 8
-- On T_STRING_CAST shift to state 9
-- On T_STATIC shift to state 10
-- On T_START_HEREDOC shift to state 25
-- On T_SELF shift to state 40
-- On T_REQUIRE_ONCE shift to state 41
-- On T_REQUIRE shift to state 42
-- On T_PRINT shift to state 43
-- On T_PARENT shift to state 44
-- On T_OBJECT_CAST shift to state 45
-- On T_NEW shift to state 46
-- On T_NAMESPACE_C shift to state 49
-- On T_NAMESPACE shift to state 50
-- On T_METHOD_C shift to state 58
-- On T_METAVAR shift to state 17
-- On T_LNUMBER shift to state 59
-- On T_LIST shift to state 69
-- On T_LINE shift to state 60
-- On T_LAMBDA_OPAR shift to state 73
-- On T_ISSET shift to state 133
-- On T_INT_CAST shift to state 135
-- On T_INSTANCEOF shift to state 52
-- On T_INCLUDE_ONCE shift to state 136
-- On T_INCLUDE shift to state 137
-- On T_INC shift to state 138
-- On T_IDENT shift to state 18
-- On T_FUNC_C shift to state 61
-- On T_FUNCTION shift to state 139
-- On T_FILE shift to state 62
-- On T_EXIT shift to state 160
-- On T_EVAL shift to state 162
-- On T_ENUM shift to state 19
-- On T_EMPTY shift to state 164
-- On T_ELLIPSIS shift to state 919
-- On T_DOUBLE_CAST shift to state 168
-- On T_DNUMBER shift to state 63
-- On T_DIR shift to state 64
-- On T_DEC shift to state 169
-- On T_CONSTANT_ENCAPSED_STRING shift to state 65
-- On T_CLONE shift to state 170
-- On T_CLASS_C shift to state 66
-- On T_BOOL_CAST shift to state 171
-- On T_AWAIT shift to state 172
-- On T_ASYNC shift to state 173
-- On T_ARRAY_CAST shift to state 200
-- On T_ARRAY shift to state 201
-- On TTILDE shift to state 204
-- On TPLUS shift to state 205
-- On TOPAR shift to state 206
-- On TOBRA shift to state 209
-- On TMINUS shift to state 210
-- On TGUIL shift to state 211
-- On TDOLLARDOLLAR shift to state 213
-- On TDOLLAR shift to state 214
-- On TBANG shift to state 216
-- On TBACKQUOTE shift to state 217
-- On TANTISLASH shift to state 85
-- On LDots shift to state 222
-- On simple_expr shift to state 223
-- On qualified_name shift to state 94
-- On qualified_class_name shift to state 225
-- On primary_expr shift to state 226
-- On new_expr shift to state 227
-- On namespace_name shift to state 102
-- On member_expr shift to state 228
-- On lambda_expr shift to state 231
-- On ident_in_name shift to state 57
-- On ident shift to state 56
-- On expr shift to state 920
-- On constant shift to state 239
-- On call_expr shift to state 240
## Reductions:

State 138:
## Known stack suffix:
## T_INC
## LR(1) items:
expr -> T_INC . expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
## Transitions:
-- On T__AT shift to state 1
-- On T_YIELD shift to state 2
-- On T_VARIABLE shift to state 3
-- On T_UNSET_CAST shift to state 5
-- On T_TYPE shift to state 6
-- On T_TRAIT_C shift to state 7
-- On T_SUPER shift to state 8
-- On T_STRING_CAST shift to state 9
-- On T_STATIC shift to state 10
-- On T_START_HEREDOC shift to state 25
-- On T_SELF shift to state 40
-- On T_REQUIRE_ONCE shift to state 41
-- On T_REQUIRE shift to state 42
-- On T_PRINT shift to state 43
-- On T_PARENT shift to state 44
-- On T_OBJECT_CAST shift to state 45
-- On T_NEW shift to state 46
-- On T_NAMESPACE_C shift to state 49
-- On T_NAMESPACE shift to state 50
-- On T_METHOD_C shift to state 58
-- On T_METAVAR shift to state 17
-- On T_LNUMBER shift to state 59
-- On T_LIST shift to state 69
-- On T_LINE shift to state 60
-- On T_LAMBDA_OPAR shift to state 73
-- On T_ISSET shift to state 133
-- On T_INT_CAST shift to state 135
-- On T_INSTANCEOF shift to state 52
-- On T_INCLUDE_ONCE shift to state 136
-- On T_INCLUDE shift to state 137
-- On T_INC shift to state 138
-- On T_IDENT shift to state 18
-- On T_FUNC_C shift to state 61
-- On T_FUNCTION shift to state 139
-- On T_FILE shift to state 62
-- On T_EXIT shift to state 160
-- On T_EVAL shift to state 162
-- On T_ENUM shift to state 19
-- On T_EMPTY shift to state 164
-- On T_DOUBLE_CAST shift to state 168
-- On T_DNUMBER shift to state 63
-- On T_DIR shift to state 64
-- On T_DEC shift to state 169
-- On T_CONSTANT_ENCAPSED_STRING shift to state 65
-- On T_CLONE shift to state 170
-- On T_CLASS_C shift to state 66
-- On T_BOOL_CAST shift to state 171
-- On T_AWAIT shift to state 172
-- On T_ASYNC shift to state 173
-- On T_ARRAY_CAST shift to state 200
-- On T_ARRAY shift to state 201
-- On TTILDE shift to state 204
-- On TPLUS shift to state 205
-- On TOPAR shift to state 206
-- On TOBRA shift to state 209
-- On TMINUS shift to state 210
-- On TGUIL shift to state 211
-- On TDOLLARDOLLAR shift to state 213
-- On TDOLLAR shift to state 214
-- On TBANG shift to state 216
-- On TBACKQUOTE shift to state 217
-- On TANTISLASH shift to state 85
-- On LDots shift to state 222
-- On simple_expr shift to state 223
-- On qualified_name shift to state 94
-- On qualified_class_name shift to state 225
-- On primary_expr shift to state 226
-- On new_expr shift to state 227
-- On namespace_name shift to state 102
-- On member_expr shift to state 228
-- On lambda_expr shift to state 231
-- On ident_in_name shift to state 57
-- On ident shift to state 56
-- On expr shift to state 918
-- On constant shift to state 239
-- On call_expr shift to state 240
## Reductions:

State 139:
## Known stack suffix:
## T_FUNCTION
## LR(1) items:
expr -> T_FUNCTION . is_reference TOPAR parameter_list TCPAR lexical_vars option(return_type) TOBRACE list(inner_statement) TCBRACE [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
## Transitions:
-- On TAND shift to state 12
-- On option(TAND) shift to state 13
-- On is_reference shift to state 140
## Reductions:
-- On TOPAR
--   reduce production option(TAND) ->

State 140:
## Known stack suffix:
## T_FUNCTION is_reference
## LR(1) items:
expr -> T_FUNCTION is_reference . TOPAR parameter_list TCPAR lexical_vars option(return_type) TOBRACE list(inner_statement) TCBRACE [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
## Transitions:
-- On TOPAR shift to state 141
## Reductions:

State 141:
## Known stack suffix:
## T_FUNCTION is_reference TOPAR
## LR(1) items:
expr -> T_FUNCTION is_reference TOPAR . parameter_list TCPAR lexical_vars option(return_type) TOBRACE list(inner_statement) TCBRACE [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
## Transitions:
-- On T_SL shift to state 16
-- On parameter_list shift to state 142
-- On parameter shift to state 122
-- On option(attributes) shift to state 125
-- On attributes shift to state 181
## Reductions:
-- On T_VARIABLE T_TYPE T_SUPER T_SELF T_PUBLIC T_PROTECTED T_PRIVATE T_PARENT T_NAMESPACE T_METAVAR T_INSTANCEOF T_IDENT T_ENUM T_ELLIPSIS T_ARRAY TQUESTION TOPAR TANTISLASH TAND
--   reduce production option(attributes) ->
-- On TCPAR
--   reduce production parameter_list ->

State 142:
## Known stack suffix:
## T_FUNCTION is_reference TOPAR parameter_list
## LR(1) items:
expr -> T_FUNCTION is_reference TOPAR parameter_list . TCPAR lexical_vars option(return_type) TOBRACE list(inner_statement) TCBRACE [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
## Transitions:
-- On TCPAR shift to state 143
## Reductions:

State 143:
## Known stack suffix:
## T_FUNCTION is_reference TOPAR parameter_list TCPAR
## LR(1) items:
expr -> T_FUNCTION is_reference TOPAR parameter_list TCPAR . lexical_vars option(return_type) TOBRACE list(inner_statement) TCBRACE [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
## Transitions:
-- On T_USE shift to state 144
-- On lexical_vars shift to state 155
## Reductions:
-- On TOBRACE TCOLON
--   reduce production lexical_vars ->

State 144:
## Known stack suffix:
## T_USE
## LR(1) items:
lexical_vars -> T_USE . TOPAR non_empty_lexical_var_list TCPAR [ TOBRACE TCOLON ]
## Transitions:
-- On TOPAR shift to state 145
## Reductions:

State 145:
## Known stack suffix:
## T_USE TOPAR
## LR(1) items:
lexical_vars -> T_USE TOPAR . non_empty_lexical_var_list TCPAR [ TOBRACE TCOLON ]
## Transitions:
-- On TAND shift to state 12
-- On option(TAND) shift to state 146
-- On non_empty_lexical_var_list_bis shift to state 149
-- On non_empty_lexical_var_list shift to state 152
-- On lexical_var shift to state 154
## Reductions:
-- On T_VARIABLE T_METAVAR
--   reduce production option(TAND) ->

State 146:
## Known stack suffix:
## option(TAND)
## LR(1) items:
lexical_var -> option(TAND) . T_VARIABLE [ TCPAR TCOMMA ]
lexical_var -> option(TAND) . T_METAVAR [ TCPAR TCOMMA ]
## Transitions:
-- On T_VARIABLE shift to state 147
-- On T_METAVAR shift to state 148
## Reductions:

State 147:
## Known stack suffix:
## option(TAND) T_VARIABLE
## LR(1) items:
lexical_var -> option(TAND) T_VARIABLE . [ TCPAR TCOMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production lexical_var -> option(TAND) T_VARIABLE

State 148:
## Known stack suffix:
## option(TAND) T_METAVAR
## LR(1) items:
lexical_var -> option(TAND) T_METAVAR . [ TCPAR TCOMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production lexical_var -> option(TAND) T_METAVAR

State 149:
## Known stack suffix:
## non_empty_lexical_var_list_bis
## LR(1) items:
non_empty_lexical_var_list -> non_empty_lexical_var_list_bis . [ TCPAR ]
non_empty_lexical_var_list -> non_empty_lexical_var_list_bis . TCOMMA [ TCPAR ]
non_empty_lexical_var_list_bis -> non_empty_lexical_var_list_bis . TCOMMA lexical_var [ TCPAR TCOMMA ]
## Transitions:
-- On TCOMMA shift to state 150
## Reductions:
-- On TCPAR
--   reduce production non_empty_lexical_var_list -> non_empty_lexical_var_list_bis

State 150:
## Known stack suffix:
## non_empty_lexical_var_list_bis TCOMMA
## LR(1) items:
non_empty_lexical_var_list -> non_empty_lexical_var_list_bis TCOMMA . [ TCPAR ]
non_empty_lexical_var_list_bis -> non_empty_lexical_var_list_bis TCOMMA . lexical_var [ TCPAR TCOMMA ]
## Transitions:
-- On TAND shift to state 12
-- On option(TAND) shift to state 146
-- On lexical_var shift to state 151
## Reductions:
-- On TCPAR
--   reduce production non_empty_lexical_var_list -> non_empty_lexical_var_list_bis TCOMMA
-- On T_VARIABLE T_METAVAR
--   reduce production option(TAND) ->

State 151:
## Known stack suffix:
## non_empty_lexical_var_list_bis TCOMMA lexical_var
## LR(1) items:
non_empty_lexical_var_list_bis -> non_empty_lexical_var_list_bis TCOMMA lexical_var . [ TCPAR TCOMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production non_empty_lexical_var_list_bis -> non_empty_lexical_var_list_bis TCOMMA lexical_var

State 152:
## Known stack suffix:
## T_USE TOPAR non_empty_lexical_var_list
## LR(1) items:
lexical_vars -> T_USE TOPAR non_empty_lexical_var_list . TCPAR [ TOBRACE TCOLON ]
## Transitions:
-- On TCPAR shift to state 153
## Reductions:

State 153:
## Known stack suffix:
## T_USE TOPAR non_empty_lexical_var_list TCPAR
## LR(1) items:
lexical_vars -> T_USE TOPAR non_empty_lexical_var_list TCPAR . [ TOBRACE TCOLON ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production lexical_vars -> T_USE TOPAR non_empty_lexical_var_list TCPAR

State 154:
## Known stack suffix:
## lexical_var
## LR(1) items:
non_empty_lexical_var_list_bis -> lexical_var . [ TCPAR TCOMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production non_empty_lexical_var_list_bis -> lexical_var

State 155:
## Known stack suffix:
## T_FUNCTION is_reference TOPAR parameter_list TCPAR lexical_vars
## LR(1) items:
expr -> T_FUNCTION is_reference TOPAR parameter_list TCPAR lexical_vars . option(return_type) TOBRACE list(inner_statement) TCBRACE [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
## Transitions:
-- On TCOLON shift to state 76
-- On return_type shift to state 119
-- On option(return_type) shift to state 156
## Reductions:
-- On TOBRACE
--   reduce production option(return_type) ->

State 156:
## Known stack suffix:
## T_FUNCTION is_reference TOPAR parameter_list TCPAR lexical_vars option(return_type)
## LR(1) items:
expr -> T_FUNCTION is_reference TOPAR parameter_list TCPAR lexical_vars option(return_type) . TOBRACE list(inner_statement) TCBRACE [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
## Transitions:
-- On TOBRACE shift to state 157
## Reductions:

State 157:
## Known stack suffix:
## T_FUNCTION is_reference TOPAR parameter_list TCPAR lexical_vars option(return_type) TOBRACE
## LR(1) items:
expr -> T_FUNCTION is_reference TOPAR parameter_list TCPAR lexical_vars option(return_type) TOBRACE . list(inner_statement) TCBRACE [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
## Transitions:
-- On T__AT shift to state 1
-- On T_YIELD shift to state 2
-- On T_WHILE shift to state 158
-- On T_VARIABLE shift to state 3
-- On T_USE shift to state 190
-- On T_UNSET_CAST shift to state 5
-- On T_UNSET shift to state 197
-- On T_TYPE shift to state 6
-- On T_TRY shift to state 391
-- On T_TRAIT_C shift to state 7
-- On T_TRAIT shift to state 393
-- On T_THROW shift to state 520
-- On T_SWITCH shift to state 525
-- On T_SUPER shift to state 8
-- On T_STRING_CAST shift to state 9
-- On T_STATIC shift to state 536
-- On T_START_HEREDOC shift to state 25
-- On T_SL shift to state 16
-- On T_SELF shift to state 40
-- On T_RETURN shift to state 553
-- On T_REQUIRE_ONCE shift to state 41
-- On T_REQUIRE shift to state 42
-- On T_PRINT shift to state 43
-- On T_PARENT shift to state 44
-- On T_OPEN_TAG_WITH_ECHO shift to state 558
-- On T_OBJECT_CAST shift to state 45
-- On T_NEW shift to state 46
-- On T_NAMESPACE_C shift to state 49
-- On T_NAMESPACE shift to state 50
-- On T_METHOD_C shift to state 58
-- On T_METAVAR shift to state 17
-- On T_LNUMBER shift to state 59
-- On T_LIST shift to state 69
-- On T_LINE shift to state 60
-- On T_LAMBDA_OPAR shift to state 73
-- On T_ISSET shift to state 133
-- On T_INT_CAST shift to state 135
-- On T_INTERFACE shift to state 563
-- On T_INSTANCEOF shift to state 52
-- On T_INLINE_HTML shift to state 576
-- On T_INCLUDE_ONCE shift to state 136
-- On T_INCLUDE shift to state 137
-- On T_INC shift to state 138
-- On T_IF shift to state 577
-- On T_IDENT shift to state 18
-- On T_GLOBAL shift to state 587
-- On T_FUNC_C shift to state 61
-- On T_FUNCTION shift to state 657
-- On T_FOREACH shift to state 600
-- On T_FOR shift to state 624
-- On T_FINAL shift to state 666
-- On T_FILE shift to state 62
-- On T_EXIT shift to state 160
-- On T_EVAL shift to state 162
-- On T_ENUM shift to state 668
-- On T_EMPTY shift to state 164
-- On T_ELLIPSIS shift to state 635
-- On T_ECHO shift to state 636
-- On T_DOUBLE_CAST shift to state 168
-- On T_DO shift to state 644
-- On T_DNUMBER shift to state 63
-- On T_DIR shift to state 64
-- On T_DECLARE shift to state 645
-- On T_DEC shift to state 169
-- On T_CONTINUE shift to state 649
-- On T_CONSTANT_ENCAPSED_STRING shift to state 65
-- On T_CLONE shift to state 170
-- On T_CLASS_C shift to state 66
-- On T_CLASS shift to state 682
-- On T_BREAK shift to state 652
-- On T_BOOL_CAST shift to state 171
-- On T_AWAIT shift to state 172
-- On T_ASYNC shift to state 683
-- On T_ARRAY_CAST shift to state 200
-- On T_ARRAY shift to state 201
-- On T_ABSTRACT shift to state 694
-- On TTILDE shift to state 204
-- On TSEMICOLON shift to state 655
-- On TPLUS shift to state 205
-- On TOPAR shift to state 206
-- On TOBRACE shift to state 656
-- On TOBRA shift to state 209
-- On TMINUS shift to state 210
-- On TGUIL shift to state 211
-- On TDOLLARDOLLAR shift to state 213
-- On TDOLLAR shift to state 214
-- On TBANG shift to state 216
-- On TBACKQUOTE shift to state 217
-- On TANTISLASH shift to state 85
-- On LDots shift to state 222
-- On unticked_function_declaration shift to state 696
-- On unticked_class_declaration shift to state 697
-- On statement shift to state 698
-- On simple_expr shift to state 223
-- On qualified_name shift to state 94
-- On qualified_class_name shift to state 225
-- On primary_expr shift to state 226
-- On new_expr shift to state 227
-- On namespace_name shift to state 102
-- On member_expr shift to state 228
-- On list(inner_statement) shift to state 916
-- On lambda_expr shift to state 231
-- On inner_statement shift to state 701
-- On ident_in_name shift to state 57
-- On ident shift to state 56
-- On function_declaration shift to state 703
-- On expr shift to state 704
-- On constant shift to state 239
-- On class_entry_type shift to state 706
-- On class_declaration shift to state 716
-- On call_expr shift to state 240
-- On attributes shift to state 717
## Reductions:
-- On TCBRACE
--   reduce production list(inner_statement) ->

State 158:
## Known stack suffix:
## T_WHILE
## LR(1) items:
statement -> T_WHILE . TOPAR expr TCPAR while_statement [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_ENDWHILE T_ENDSWITCH T_ENDIF T_ENDFOREACH T_ENDFOR T_ENDDECLARE T_EMPTY T_ELSEIF T_ELSE T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DEFAULT T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_CASE T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
statement -> T_WHILE . TOPAR T_ELLIPSIS TCPAR while_statement [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_ENDWHILE T_ENDSWITCH T_ENDIF T_ENDFOREACH T_ENDFOR T_ENDDECLARE T_EMPTY T_ELSEIF T_ELSE T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DEFAULT T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_CASE T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
## Transitions:
-- On TOPAR shift to state 159
## Reductions:

State 159:
## Known stack suffix:
## T_WHILE TOPAR
## LR(1) items:
statement -> T_WHILE TOPAR . expr TCPAR while_statement [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_ENDWHILE T_ENDSWITCH T_ENDIF T_ENDFOREACH T_ENDFOR T_ENDDECLARE T_EMPTY T_ELSEIF T_ELSE T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DEFAULT T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_CASE T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
statement -> T_WHILE TOPAR . T_ELLIPSIS TCPAR while_statement [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_ENDWHILE T_ENDSWITCH T_ENDIF T_ENDFOREACH T_ENDFOR T_ENDDECLARE T_EMPTY T_ELSEIF T_ELSE T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DEFAULT T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_CASE T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
## Transitions:
-- On T__AT shift to state 1
-- On T_YIELD shift to state 2
-- On T_VARIABLE shift to state 3
-- On T_UNSET_CAST shift to state 5
-- On T_TYPE shift to state 6
-- On T_TRAIT_C shift to state 7
-- On T_SUPER shift to state 8
-- On T_STRING_CAST shift to state 9
-- On T_STATIC shift to state 10
-- On T_START_HEREDOC shift to state 25
-- On T_SELF shift to state 40
-- On T_REQUIRE_ONCE shift to state 41
-- On T_REQUIRE shift to state 42
-- On T_PRINT shift to state 43
-- On T_PARENT shift to state 44
-- On T_OBJECT_CAST shift to state 45
-- On T_NEW shift to state 46
-- On T_NAMESPACE_C shift to state 49
-- On T_NAMESPACE shift to state 50
-- On T_METHOD_C shift to state 58
-- On T_METAVAR shift to state 17
-- On T_LNUMBER shift to state 59
-- On T_LIST shift to state 69
-- On T_LINE shift to state 60
-- On T_LAMBDA_OPAR shift to state 73
-- On T_ISSET shift to state 133
-- On T_INT_CAST shift to state 135
-- On T_INSTANCEOF shift to state 52
-- On T_INCLUDE_ONCE shift to state 136
-- On T_INCLUDE shift to state 137
-- On T_INC shift to state 138
-- On T_IDENT shift to state 18
-- On T_FUNC_C shift to state 61
-- On T_FUNCTION shift to state 139
-- On T_FILE shift to state 62
-- On T_EXIT shift to state 160
-- On T_EVAL shift to state 162
-- On T_ENUM shift to state 19
-- On T_EMPTY shift to state 164
-- On T_ELLIPSIS shift to state 905
-- On T_DOUBLE_CAST shift to state 168
-- On T_DNUMBER shift to state 63
-- On T_DIR shift to state 64
-- On T_DEC shift to state 169
-- On T_CONSTANT_ENCAPSED_STRING shift to state 65
-- On T_CLONE shift to state 170
-- On T_CLASS_C shift to state 66
-- On T_BOOL_CAST shift to state 171
-- On T_AWAIT shift to state 172
-- On T_ASYNC shift to state 173
-- On T_ARRAY_CAST shift to state 200
-- On T_ARRAY shift to state 201
-- On TTILDE shift to state 204
-- On TPLUS shift to state 205
-- On TOPAR shift to state 206
-- On TOBRA shift to state 209
-- On TMINUS shift to state 210
-- On TGUIL shift to state 211
-- On TDOLLARDOLLAR shift to state 213
-- On TDOLLAR shift to state 214
-- On TBANG shift to state 216
-- On TBACKQUOTE shift to state 217
-- On TANTISLASH shift to state 85
-- On LDots shift to state 222
-- On simple_expr shift to state 223
-- On qualified_name shift to state 94
-- On qualified_class_name shift to state 225
-- On primary_expr shift to state 226
-- On new_expr shift to state 227
-- On namespace_name shift to state 102
-- On member_expr shift to state 228
-- On lambda_expr shift to state 231
-- On ident_in_name shift to state 57
-- On ident shift to state 56
-- On expr shift to state 913
-- On constant shift to state 239
-- On call_expr shift to state 240
## Reductions:

State 160:
## Known stack suffix:
## T_EXIT
## LR(1) items:
expr -> T_EXIT . exit_expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
## Transitions:
-- On TOPAR shift to state 161
-- On exit_expr shift to state 904
## Reductions:
-- On T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF
--   reduce production exit_expr ->

State 161:
## Known stack suffix:
## TOPAR
## LR(1) items:
exit_expr -> TOPAR . TCPAR [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
exit_expr -> TOPAR . expr TCPAR [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
exit_expr -> TOPAR . T_ELLIPSIS TCPAR [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
## Transitions:
-- On T__AT shift to state 1
-- On T_YIELD shift to state 2
-- On T_VARIABLE shift to state 3
-- On T_UNSET_CAST shift to state 5
-- On T_TYPE shift to state 6
-- On T_TRAIT_C shift to state 7
-- On T_SUPER shift to state 8
-- On T_STRING_CAST shift to state 9
-- On T_STATIC shift to state 10
-- On T_START_HEREDOC shift to state 25
-- On T_SELF shift to state 40
-- On T_REQUIRE_ONCE shift to state 41
-- On T_REQUIRE shift to state 42
-- On T_PRINT shift to state 43
-- On T_PARENT shift to state 44
-- On T_OBJECT_CAST shift to state 45
-- On T_NEW shift to state 46
-- On T_NAMESPACE_C shift to state 49
-- On T_NAMESPACE shift to state 50
-- On T_METHOD_C shift to state 58
-- On T_METAVAR shift to state 17
-- On T_LNUMBER shift to state 59
-- On T_LIST shift to state 69
-- On T_LINE shift to state 60
-- On T_LAMBDA_OPAR shift to state 73
-- On T_ISSET shift to state 133
-- On T_INT_CAST shift to state 135
-- On T_INSTANCEOF shift to state 52
-- On T_INCLUDE_ONCE shift to state 136
-- On T_INCLUDE shift to state 137
-- On T_INC shift to state 138
-- On T_IDENT shift to state 18
-- On T_FUNC_C shift to state 61
-- On T_FUNCTION shift to state 139
-- On T_FILE shift to state 62
-- On T_EXIT shift to state 160
-- On T_EVAL shift to state 162
-- On T_ENUM shift to state 19
-- On T_EMPTY shift to state 164
-- On T_ELLIPSIS shift to state 899
-- On T_DOUBLE_CAST shift to state 168
-- On T_DNUMBER shift to state 63
-- On T_DIR shift to state 64
-- On T_DEC shift to state 169
-- On T_CONSTANT_ENCAPSED_STRING shift to state 65
-- On T_CLONE shift to state 170
-- On T_CLASS_C shift to state 66
-- On T_BOOL_CAST shift to state 171
-- On T_AWAIT shift to state 172
-- On T_ASYNC shift to state 173
-- On T_ARRAY_CAST shift to state 200
-- On T_ARRAY shift to state 201
-- On TTILDE shift to state 204
-- On TPLUS shift to state 205
-- On TOPAR shift to state 206
-- On TOBRA shift to state 209
-- On TMINUS shift to state 210
-- On TGUIL shift to state 211
-- On TDOLLARDOLLAR shift to state 213
-- On TDOLLAR shift to state 214
-- On TCPAR shift to state 901
-- On TBANG shift to state 216
-- On TBACKQUOTE shift to state 217
-- On TANTISLASH shift to state 85
-- On LDots shift to state 222
-- On simple_expr shift to state 223
-- On qualified_name shift to state 94
-- On qualified_class_name shift to state 225
-- On primary_expr shift to state 226
-- On new_expr shift to state 227
-- On namespace_name shift to state 102
-- On member_expr shift to state 228
-- On lambda_expr shift to state 231
-- On ident_in_name shift to state 57
-- On ident shift to state 56
-- On expr shift to state 902
-- On constant shift to state 239
-- On call_expr shift to state 240
## Reductions:

State 162:
## Known stack suffix:
## T_EVAL
## LR(1) items:
expr -> T_EVAL . TOPAR expr TCPAR [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> T_EVAL . TOPAR T_ELLIPSIS TCPAR [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
## Transitions:
-- On TOPAR shift to state 163
## Reductions:

State 163:
## Known stack suffix:
## T_EVAL TOPAR
## LR(1) items:
expr -> T_EVAL TOPAR . expr TCPAR [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> T_EVAL TOPAR . T_ELLIPSIS TCPAR [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
## Transitions:
-- On T__AT shift to state 1
-- On T_YIELD shift to state 2
-- On T_VARIABLE shift to state 3
-- On T_UNSET_CAST shift to state 5
-- On T_TYPE shift to state 6
-- On T_TRAIT_C shift to state 7
-- On T_SUPER shift to state 8
-- On T_STRING_CAST shift to state 9
-- On T_STATIC shift to state 10
-- On T_START_HEREDOC shift to state 25
-- On T_SELF shift to state 40
-- On T_REQUIRE_ONCE shift to state 41
-- On T_REQUIRE shift to state 42
-- On T_PRINT shift to state 43
-- On T_PARENT shift to state 44
-- On T_OBJECT_CAST shift to state 45
-- On T_NEW shift to state 46
-- On T_NAMESPACE_C shift to state 49
-- On T_NAMESPACE shift to state 50
-- On T_METHOD_C shift to state 58
-- On T_METAVAR shift to state 17
-- On T_LNUMBER shift to state 59
-- On T_LIST shift to state 69
-- On T_LINE shift to state 60
-- On T_LAMBDA_OPAR shift to state 73
-- On T_ISSET shift to state 133
-- On T_INT_CAST shift to state 135
-- On T_INSTANCEOF shift to state 52
-- On T_INCLUDE_ONCE shift to state 136
-- On T_INCLUDE shift to state 137
-- On T_INC shift to state 138
-- On T_IDENT shift to state 18
-- On T_FUNC_C shift to state 61
-- On T_FUNCTION shift to state 139
-- On T_FILE shift to state 62
-- On T_EXIT shift to state 160
-- On T_EVAL shift to state 162
-- On T_ENUM shift to state 19
-- On T_EMPTY shift to state 164
-- On T_ELLIPSIS shift to state 895
-- On T_DOUBLE_CAST shift to state 168
-- On T_DNUMBER shift to state 63
-- On T_DIR shift to state 64
-- On T_DEC shift to state 169
-- On T_CONSTANT_ENCAPSED_STRING shift to state 65
-- On T_CLONE shift to state 170
-- On T_CLASS_C shift to state 66
-- On T_BOOL_CAST shift to state 171
-- On T_AWAIT shift to state 172
-- On T_ASYNC shift to state 173
-- On T_ARRAY_CAST shift to state 200
-- On T_ARRAY shift to state 201
-- On TTILDE shift to state 204
-- On TPLUS shift to state 205
-- On TOPAR shift to state 206
-- On TOBRA shift to state 209
-- On TMINUS shift to state 210
-- On TGUIL shift to state 211
-- On TDOLLARDOLLAR shift to state 213
-- On TDOLLAR shift to state 214
-- On TBANG shift to state 216
-- On TBACKQUOTE shift to state 217
-- On TANTISLASH shift to state 85
-- On LDots shift to state 222
-- On simple_expr shift to state 223
-- On qualified_name shift to state 94
-- On qualified_class_name shift to state 225
-- On primary_expr shift to state 226
-- On new_expr shift to state 227
-- On namespace_name shift to state 102
-- On member_expr shift to state 228
-- On lambda_expr shift to state 231
-- On ident_in_name shift to state 57
-- On ident shift to state 56
-- On expr shift to state 897
-- On constant shift to state 239
-- On call_expr shift to state 240
## Reductions:

State 164:
## Known stack suffix:
## T_EMPTY
## LR(1) items:
expr -> T_EMPTY . TOPAR expr TCPAR [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> T_EMPTY . TOPAR T_ELLIPSIS TCPAR [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
## Transitions:
-- On TOPAR shift to state 165
## Reductions:

State 165:
## Known stack suffix:
## T_EMPTY TOPAR
## LR(1) items:
expr -> T_EMPTY TOPAR . expr TCPAR [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> T_EMPTY TOPAR . T_ELLIPSIS TCPAR [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
## Transitions:
-- On T__AT shift to state 1
-- On T_YIELD shift to state 2
-- On T_VARIABLE shift to state 3
-- On T_UNSET_CAST shift to state 5
-- On T_TYPE shift to state 6
-- On T_TRAIT_C shift to state 7
-- On T_SUPER shift to state 8
-- On T_STRING_CAST shift to state 9
-- On T_STATIC shift to state 10
-- On T_START_HEREDOC shift to state 25
-- On T_SELF shift to state 40
-- On T_REQUIRE_ONCE shift to state 41
-- On T_REQUIRE shift to state 42
-- On T_PRINT shift to state 43
-- On T_PARENT shift to state 44
-- On T_OBJECT_CAST shift to state 45
-- On T_NEW shift to state 46
-- On T_NAMESPACE_C shift to state 49
-- On T_NAMESPACE shift to state 50
-- On T_METHOD_C shift to state 58
-- On T_METAVAR shift to state 17
-- On T_LNUMBER shift to state 59
-- On T_LIST shift to state 69
-- On T_LINE shift to state 60
-- On T_LAMBDA_OPAR shift to state 73
-- On T_ISSET shift to state 133
-- On T_INT_CAST shift to state 135
-- On T_INSTANCEOF shift to state 52
-- On T_INCLUDE_ONCE shift to state 136
-- On T_INCLUDE shift to state 137
-- On T_INC shift to state 138
-- On T_IDENT shift to state 18
-- On T_FUNC_C shift to state 61
-- On T_FUNCTION shift to state 139
-- On T_FILE shift to state 62
-- On T_EXIT shift to state 160
-- On T_EVAL shift to state 162
-- On T_ENUM shift to state 19
-- On T_EMPTY shift to state 164
-- On T_ELLIPSIS shift to state 166
-- On T_DOUBLE_CAST shift to state 168
-- On T_DNUMBER shift to state 63
-- On T_DIR shift to state 64
-- On T_DEC shift to state 169
-- On T_CONSTANT_ENCAPSED_STRING shift to state 65
-- On T_CLONE shift to state 170
-- On T_CLASS_C shift to state 66
-- On T_BOOL_CAST shift to state 171
-- On T_AWAIT shift to state 172
-- On T_ASYNC shift to state 173
-- On T_ARRAY_CAST shift to state 200
-- On T_ARRAY shift to state 201
-- On TTILDE shift to state 204
-- On TPLUS shift to state 205
-- On TOPAR shift to state 206
-- On TOBRA shift to state 209
-- On TMINUS shift to state 210
-- On TGUIL shift to state 211
-- On TDOLLARDOLLAR shift to state 213
-- On TDOLLAR shift to state 214
-- On TBANG shift to state 216
-- On TBACKQUOTE shift to state 217
-- On TANTISLASH shift to state 85
-- On LDots shift to state 222
-- On simple_expr shift to state 223
-- On qualified_name shift to state 94
-- On qualified_class_name shift to state 225
-- On primary_expr shift to state 226
-- On new_expr shift to state 227
-- On namespace_name shift to state 102
-- On member_expr shift to state 228
-- On lambda_expr shift to state 231
-- On ident_in_name shift to state 57
-- On ident shift to state 56
-- On expr shift to state 893
-- On constant shift to state 239
-- On call_expr shift to state 240
## Reductions:

State 166:
## Known stack suffix:
## T_EMPTY TOPAR T_ELLIPSIS
## LR(1) items:
expr -> T_EMPTY TOPAR T_ELLIPSIS . TCPAR [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
## Transitions:
-- On TCPAR shift to state 167
## Reductions:

State 167:
## Known stack suffix:
## T_EMPTY TOPAR T_ELLIPSIS TCPAR
## LR(1) items:
expr -> T_EMPTY TOPAR T_ELLIPSIS TCPAR . [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production expr -> T_EMPTY TOPAR T_ELLIPSIS TCPAR

State 168:
## Known stack suffix:
## T_DOUBLE_CAST
## LR(1) items:
expr -> T_DOUBLE_CAST . expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
## Transitions:
-- On T__AT shift to state 1
-- On T_YIELD shift to state 2
-- On T_VARIABLE shift to state 3
-- On T_UNSET_CAST shift to state 5
-- On T_TYPE shift to state 6
-- On T_TRAIT_C shift to state 7
-- On T_SUPER shift to state 8
-- On T_STRING_CAST shift to state 9
-- On T_STATIC shift to state 10
-- On T_START_HEREDOC shift to state 25
-- On T_SELF shift to state 40
-- On T_REQUIRE_ONCE shift to state 41
-- On T_REQUIRE shift to state 42
-- On T_PRINT shift to state 43
-- On T_PARENT shift to state 44
-- On T_OBJECT_CAST shift to state 45
-- On T_NEW shift to state 46
-- On T_NAMESPACE_C shift to state 49
-- On T_NAMESPACE shift to state 50
-- On T_METHOD_C shift to state 58
-- On T_METAVAR shift to state 17
-- On T_LNUMBER shift to state 59
-- On T_LIST shift to state 69
-- On T_LINE shift to state 60
-- On T_LAMBDA_OPAR shift to state 73
-- On T_ISSET shift to state 133
-- On T_INT_CAST shift to state 135
-- On T_INSTANCEOF shift to state 52
-- On T_INCLUDE_ONCE shift to state 136
-- On T_INCLUDE shift to state 137
-- On T_INC shift to state 138
-- On T_IDENT shift to state 18
-- On T_FUNC_C shift to state 61
-- On T_FUNCTION shift to state 139
-- On T_FILE shift to state 62
-- On T_EXIT shift to state 160
-- On T_EVAL shift to state 162
-- On T_ENUM shift to state 19
-- On T_EMPTY shift to state 164
-- On T_DOUBLE_CAST shift to state 168
-- On T_DNUMBER shift to state 63
-- On T_DIR shift to state 64
-- On T_DEC shift to state 169
-- On T_CONSTANT_ENCAPSED_STRING shift to state 65
-- On T_CLONE shift to state 170
-- On T_CLASS_C shift to state 66
-- On T_BOOL_CAST shift to state 171
-- On T_AWAIT shift to state 172
-- On T_ASYNC shift to state 173
-- On T_ARRAY_CAST shift to state 200
-- On T_ARRAY shift to state 201
-- On TTILDE shift to state 204
-- On TPLUS shift to state 205
-- On TOPAR shift to state 206
-- On TOBRA shift to state 209
-- On TMINUS shift to state 210
-- On TGUIL shift to state 211
-- On TDOLLARDOLLAR shift to state 213
-- On TDOLLAR shift to state 214
-- On TBANG shift to state 216
-- On TBACKQUOTE shift to state 217
-- On TANTISLASH shift to state 85
-- On LDots shift to state 222
-- On simple_expr shift to state 223
-- On qualified_name shift to state 94
-- On qualified_class_name shift to state 225
-- On primary_expr shift to state 226
-- On new_expr shift to state 227
-- On namespace_name shift to state 102
-- On member_expr shift to state 228
-- On lambda_expr shift to state 231
-- On ident_in_name shift to state 57
-- On ident shift to state 56
-- On expr shift to state 892
-- On constant shift to state 239
-- On call_expr shift to state 240
## Reductions:

State 169:
## Known stack suffix:
## T_DEC
## LR(1) items:
expr -> T_DEC . expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
## Transitions:
-- On T__AT shift to state 1
-- On T_YIELD shift to state 2
-- On T_VARIABLE shift to state 3
-- On T_UNSET_CAST shift to state 5
-- On T_TYPE shift to state 6
-- On T_TRAIT_C shift to state 7
-- On T_SUPER shift to state 8
-- On T_STRING_CAST shift to state 9
-- On T_STATIC shift to state 10
-- On T_START_HEREDOC shift to state 25
-- On T_SELF shift to state 40
-- On T_REQUIRE_ONCE shift to state 41
-- On T_REQUIRE shift to state 42
-- On T_PRINT shift to state 43
-- On T_PARENT shift to state 44
-- On T_OBJECT_CAST shift to state 45
-- On T_NEW shift to state 46
-- On T_NAMESPACE_C shift to state 49
-- On T_NAMESPACE shift to state 50
-- On T_METHOD_C shift to state 58
-- On T_METAVAR shift to state 17
-- On T_LNUMBER shift to state 59
-- On T_LIST shift to state 69
-- On T_LINE shift to state 60
-- On T_LAMBDA_OPAR shift to state 73
-- On T_ISSET shift to state 133
-- On T_INT_CAST shift to state 135
-- On T_INSTANCEOF shift to state 52
-- On T_INCLUDE_ONCE shift to state 136
-- On T_INCLUDE shift to state 137
-- On T_INC shift to state 138
-- On T_IDENT shift to state 18
-- On T_FUNC_C shift to state 61
-- On T_FUNCTION shift to state 139
-- On T_FILE shift to state 62
-- On T_EXIT shift to state 160
-- On T_EVAL shift to state 162
-- On T_ENUM shift to state 19
-- On T_EMPTY shift to state 164
-- On T_DOUBLE_CAST shift to state 168
-- On T_DNUMBER shift to state 63
-- On T_DIR shift to state 64
-- On T_DEC shift to state 169
-- On T_CONSTANT_ENCAPSED_STRING shift to state 65
-- On T_CLONE shift to state 170
-- On T_CLASS_C shift to state 66
-- On T_BOOL_CAST shift to state 171
-- On T_AWAIT shift to state 172
-- On T_ASYNC shift to state 173
-- On T_ARRAY_CAST shift to state 200
-- On T_ARRAY shift to state 201
-- On TTILDE shift to state 204
-- On TPLUS shift to state 205
-- On TOPAR shift to state 206
-- On TOBRA shift to state 209
-- On TMINUS shift to state 210
-- On TGUIL shift to state 211
-- On TDOLLARDOLLAR shift to state 213
-- On TDOLLAR shift to state 214
-- On TBANG shift to state 216
-- On TBACKQUOTE shift to state 217
-- On TANTISLASH shift to state 85
-- On LDots shift to state 222
-- On simple_expr shift to state 223
-- On qualified_name shift to state 94
-- On qualified_class_name shift to state 225
-- On primary_expr shift to state 226
-- On new_expr shift to state 227
-- On namespace_name shift to state 102
-- On member_expr shift to state 228
-- On lambda_expr shift to state 231
-- On ident_in_name shift to state 57
-- On ident shift to state 56
-- On expr shift to state 891
-- On constant shift to state 239
-- On call_expr shift to state 240
## Reductions:

State 170:
## Known stack suffix:
## T_CLONE
## LR(1) items:
expr -> T_CLONE . expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
## Transitions:
-- On T__AT shift to state 1
-- On T_YIELD shift to state 2
-- On T_VARIABLE shift to state 3
-- On T_UNSET_CAST shift to state 5
-- On T_TYPE shift to state 6
-- On T_TRAIT_C shift to state 7
-- On T_SUPER shift to state 8
-- On T_STRING_CAST shift to state 9
-- On T_STATIC shift to state 10
-- On T_START_HEREDOC shift to state 25
-- On T_SELF shift to state 40
-- On T_REQUIRE_ONCE shift to state 41
-- On T_REQUIRE shift to state 42
-- On T_PRINT shift to state 43
-- On T_PARENT shift to state 44
-- On T_OBJECT_CAST shift to state 45
-- On T_NEW shift to state 46
-- On T_NAMESPACE_C shift to state 49
-- On T_NAMESPACE shift to state 50
-- On T_METHOD_C shift to state 58
-- On T_METAVAR shift to state 17
-- On T_LNUMBER shift to state 59
-- On T_LIST shift to state 69
-- On T_LINE shift to state 60
-- On T_LAMBDA_OPAR shift to state 73
-- On T_ISSET shift to state 133
-- On T_INT_CAST shift to state 135
-- On T_INSTANCEOF shift to state 52
-- On T_INCLUDE_ONCE shift to state 136
-- On T_INCLUDE shift to state 137
-- On T_INC shift to state 138
-- On T_IDENT shift to state 18
-- On T_FUNC_C shift to state 61
-- On T_FUNCTION shift to state 139
-- On T_FILE shift to state 62
-- On T_EXIT shift to state 160
-- On T_EVAL shift to state 162
-- On T_ENUM shift to state 19
-- On T_EMPTY shift to state 164
-- On T_DOUBLE_CAST shift to state 168
-- On T_DNUMBER shift to state 63
-- On T_DIR shift to state 64
-- On T_DEC shift to state 169
-- On T_CONSTANT_ENCAPSED_STRING shift to state 65
-- On T_CLONE shift to state 170
-- On T_CLASS_C shift to state 66
-- On T_BOOL_CAST shift to state 171
-- On T_AWAIT shift to state 172
-- On T_ASYNC shift to state 173
-- On T_ARRAY_CAST shift to state 200
-- On T_ARRAY shift to state 201
-- On TTILDE shift to state 204
-- On TPLUS shift to state 205
-- On TOPAR shift to state 206
-- On TOBRA shift to state 209
-- On TMINUS shift to state 210
-- On TGUIL shift to state 211
-- On TDOLLARDOLLAR shift to state 213
-- On TDOLLAR shift to state 214
-- On TBANG shift to state 216
-- On TBACKQUOTE shift to state 217
-- On TANTISLASH shift to state 85
-- On LDots shift to state 222
-- On simple_expr shift to state 223
-- On qualified_name shift to state 94
-- On qualified_class_name shift to state 225
-- On primary_expr shift to state 226
-- On new_expr shift to state 227
-- On namespace_name shift to state 102
-- On member_expr shift to state 228
-- On lambda_expr shift to state 231
-- On ident_in_name shift to state 57
-- On ident shift to state 56
-- On expr shift to state 890
-- On constant shift to state 239
-- On call_expr shift to state 240
## Reductions:

State 171:
## Known stack suffix:
## T_BOOL_CAST
## LR(1) items:
expr -> T_BOOL_CAST . expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
## Transitions:
-- On T__AT shift to state 1
-- On T_YIELD shift to state 2
-- On T_VARIABLE shift to state 3
-- On T_UNSET_CAST shift to state 5
-- On T_TYPE shift to state 6
-- On T_TRAIT_C shift to state 7
-- On T_SUPER shift to state 8
-- On T_STRING_CAST shift to state 9
-- On T_STATIC shift to state 10
-- On T_START_HEREDOC shift to state 25
-- On T_SELF shift to state 40
-- On T_REQUIRE_ONCE shift to state 41
-- On T_REQUIRE shift to state 42
-- On T_PRINT shift to state 43
-- On T_PARENT shift to state 44
-- On T_OBJECT_CAST shift to state 45
-- On T_NEW shift to state 46
-- On T_NAMESPACE_C shift to state 49
-- On T_NAMESPACE shift to state 50
-- On T_METHOD_C shift to state 58
-- On T_METAVAR shift to state 17
-- On T_LNUMBER shift to state 59
-- On T_LIST shift to state 69
-- On T_LINE shift to state 60
-- On T_LAMBDA_OPAR shift to state 73
-- On T_ISSET shift to state 133
-- On T_INT_CAST shift to state 135
-- On T_INSTANCEOF shift to state 52
-- On T_INCLUDE_ONCE shift to state 136
-- On T_INCLUDE shift to state 137
-- On T_INC shift to state 138
-- On T_IDENT shift to state 18
-- On T_FUNC_C shift to state 61
-- On T_FUNCTION shift to state 139
-- On T_FILE shift to state 62
-- On T_EXIT shift to state 160
-- On T_EVAL shift to state 162
-- On T_ENUM shift to state 19
-- On T_EMPTY shift to state 164
-- On T_DOUBLE_CAST shift to state 168
-- On T_DNUMBER shift to state 63
-- On T_DIR shift to state 64
-- On T_DEC shift to state 169
-- On T_CONSTANT_ENCAPSED_STRING shift to state 65
-- On T_CLONE shift to state 170
-- On T_CLASS_C shift to state 66
-- On T_BOOL_CAST shift to state 171
-- On T_AWAIT shift to state 172
-- On T_ASYNC shift to state 173
-- On T_ARRAY_CAST shift to state 200
-- On T_ARRAY shift to state 201
-- On TTILDE shift to state 204
-- On TPLUS shift to state 205
-- On TOPAR shift to state 206
-- On TOBRA shift to state 209
-- On TMINUS shift to state 210
-- On TGUIL shift to state 211
-- On TDOLLARDOLLAR shift to state 213
-- On TDOLLAR shift to state 214
-- On TBANG shift to state 216
-- On TBACKQUOTE shift to state 217
-- On TANTISLASH shift to state 85
-- On LDots shift to state 222
-- On simple_expr shift to state 223
-- On qualified_name shift to state 94
-- On qualified_class_name shift to state 225
-- On primary_expr shift to state 226
-- On new_expr shift to state 227
-- On namespace_name shift to state 102
-- On member_expr shift to state 228
-- On lambda_expr shift to state 231
-- On ident_in_name shift to state 57
-- On ident shift to state 56
-- On expr shift to state 889
-- On constant shift to state 239
-- On call_expr shift to state 240
## Reductions:

State 172:
## Known stack suffix:
## T_AWAIT
## LR(1) items:
expr -> T_AWAIT . expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
## Transitions:
-- On T__AT shift to state 1
-- On T_YIELD shift to state 2
-- On T_VARIABLE shift to state 3
-- On T_UNSET_CAST shift to state 5
-- On T_TYPE shift to state 6
-- On T_TRAIT_C shift to state 7
-- On T_SUPER shift to state 8
-- On T_STRING_CAST shift to state 9
-- On T_STATIC shift to state 10
-- On T_START_HEREDOC shift to state 25
-- On T_SELF shift to state 40
-- On T_REQUIRE_ONCE shift to state 41
-- On T_REQUIRE shift to state 42
-- On T_PRINT shift to state 43
-- On T_PARENT shift to state 44
-- On T_OBJECT_CAST shift to state 45
-- On T_NEW shift to state 46
-- On T_NAMESPACE_C shift to state 49
-- On T_NAMESPACE shift to state 50
-- On T_METHOD_C shift to state 58
-- On T_METAVAR shift to state 17
-- On T_LNUMBER shift to state 59
-- On T_LIST shift to state 69
-- On T_LINE shift to state 60
-- On T_LAMBDA_OPAR shift to state 73
-- On T_ISSET shift to state 133
-- On T_INT_CAST shift to state 135
-- On T_INSTANCEOF shift to state 52
-- On T_INCLUDE_ONCE shift to state 136
-- On T_INCLUDE shift to state 137
-- On T_INC shift to state 138
-- On T_IDENT shift to state 18
-- On T_FUNC_C shift to state 61
-- On T_FUNCTION shift to state 139
-- On T_FILE shift to state 62
-- On T_EXIT shift to state 160
-- On T_EVAL shift to state 162
-- On T_ENUM shift to state 19
-- On T_EMPTY shift to state 164
-- On T_DOUBLE_CAST shift to state 168
-- On T_DNUMBER shift to state 63
-- On T_DIR shift to state 64
-- On T_DEC shift to state 169
-- On T_CONSTANT_ENCAPSED_STRING shift to state 65
-- On T_CLONE shift to state 170
-- On T_CLASS_C shift to state 66
-- On T_BOOL_CAST shift to state 171
-- On T_AWAIT shift to state 172
-- On T_ASYNC shift to state 173
-- On T_ARRAY_CAST shift to state 200
-- On T_ARRAY shift to state 201
-- On TTILDE shift to state 204
-- On TPLUS shift to state 205
-- On TOPAR shift to state 206
-- On TOBRA shift to state 209
-- On TMINUS shift to state 210
-- On TGUIL shift to state 211
-- On TDOLLARDOLLAR shift to state 213
-- On TDOLLAR shift to state 214
-- On TBANG shift to state 216
-- On TBACKQUOTE shift to state 217
-- On TANTISLASH shift to state 85
-- On LDots shift to state 222
-- On simple_expr shift to state 223
-- On qualified_name shift to state 94
-- On qualified_class_name shift to state 225
-- On primary_expr shift to state 226
-- On new_expr shift to state 227
-- On namespace_name shift to state 102
-- On member_expr shift to state 228
-- On lambda_expr shift to state 231
-- On ident_in_name shift to state 57
-- On ident shift to state 56
-- On expr shift to state 888
-- On constant shift to state 239
-- On call_expr shift to state 240
## Reductions:

State 173:
## Known stack suffix:
## T_ASYNC
## LR(1) items:
expr -> T_ASYNC . T_FUNCTION is_reference TOPAR parameter_list TCPAR lexical_vars option(return_type) TOBRACE list(inner_statement) TCBRACE [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
lambda_expr -> T_ASYNC . T_VARIABLE lambda_body [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
lambda_expr -> T_ASYNC . T_LAMBDA_OPAR parameter_list T_LAMBDA_CPAR option(return_type) lambda_body [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
lambda_expr -> T_ASYNC . TOBRACE list(inner_statement) TCBRACE [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
## Transitions:
-- On T_VARIABLE shift to state 174
-- On T_LAMBDA_OPAR shift to state 176
-- On T_FUNCTION shift to state 182
-- On TOBRACE shift to state 693
## Reductions:

State 174:
## Known stack suffix:
## T_ASYNC T_VARIABLE
## LR(1) items:
lambda_expr -> T_ASYNC T_VARIABLE . lambda_body [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
## Transitions:
-- On T_DOUBLE_ARROW shift to state 4
-- On lambda_body shift to state 175
## Reductions:

State 175:
## Known stack suffix:
## T_ASYNC T_VARIABLE lambda_body
## LR(1) items:
lambda_expr -> T_ASYNC T_VARIABLE lambda_body . [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production lambda_expr -> T_ASYNC T_VARIABLE lambda_body

State 176:
## Known stack suffix:
## T_ASYNC T_LAMBDA_OPAR
## LR(1) items:
lambda_expr -> T_ASYNC T_LAMBDA_OPAR . parameter_list T_LAMBDA_CPAR option(return_type) lambda_body [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
## Transitions:
-- On T_SL shift to state 16
-- On parameter_list shift to state 177
-- On parameter shift to state 122
-- On option(attributes) shift to state 125
-- On attributes shift to state 181
## Reductions:
-- On T_VARIABLE T_TYPE T_SUPER T_SELF T_PUBLIC T_PROTECTED T_PRIVATE T_PARENT T_NAMESPACE T_METAVAR T_INSTANCEOF T_IDENT T_ENUM T_ELLIPSIS T_ARRAY TQUESTION TOPAR TANTISLASH TAND
--   reduce production option(attributes) ->
-- On T_LAMBDA_CPAR
--   reduce production parameter_list ->

State 177:
## Known stack suffix:
## T_ASYNC T_LAMBDA_OPAR parameter_list
## LR(1) items:
lambda_expr -> T_ASYNC T_LAMBDA_OPAR parameter_list . T_LAMBDA_CPAR option(return_type) lambda_body [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
## Transitions:
-- On T_LAMBDA_CPAR shift to state 178
## Reductions:

State 178:
## Known stack suffix:
## T_ASYNC T_LAMBDA_OPAR parameter_list T_LAMBDA_CPAR
## LR(1) items:
lambda_expr -> T_ASYNC T_LAMBDA_OPAR parameter_list T_LAMBDA_CPAR . option(return_type) lambda_body [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
## Transitions:
-- On TCOLON shift to state 76
-- On return_type shift to state 119
-- On option(return_type) shift to state 179
## Reductions:
-- On T_DOUBLE_ARROW
--   reduce production option(return_type) ->

State 179:
## Known stack suffix:
## T_ASYNC T_LAMBDA_OPAR parameter_list T_LAMBDA_CPAR option(return_type)
## LR(1) items:
lambda_expr -> T_ASYNC T_LAMBDA_OPAR parameter_list T_LAMBDA_CPAR option(return_type) . lambda_body [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
## Transitions:
-- On T_DOUBLE_ARROW shift to state 4
-- On lambda_body shift to state 180
## Reductions:

State 180:
## Known stack suffix:
## T_ASYNC T_LAMBDA_OPAR parameter_list T_LAMBDA_CPAR option(return_type) lambda_body
## LR(1) items:
lambda_expr -> T_ASYNC T_LAMBDA_OPAR parameter_list T_LAMBDA_CPAR option(return_type) lambda_body . [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production lambda_expr -> T_ASYNC T_LAMBDA_OPAR parameter_list T_LAMBDA_CPAR option(return_type) lambda_body

State 181:
## Known stack suffix:
## attributes
## LR(1) items:
option(attributes) -> attributes . [ T_VARIABLE T_TYPE T_SUPER T_SELF T_PUBLIC T_PROTECTED T_PRIVATE T_PARENT T_NAMESPACE T_METAVAR T_INSTANCEOF T_IDENT T_ENUM T_ELLIPSIS T_ARRAY TQUESTION TOPAR TANTISLASH TAND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production option(attributes) -> attributes

State 182:
## Known stack suffix:
## T_ASYNC T_FUNCTION
## LR(1) items:
expr -> T_ASYNC T_FUNCTION . is_reference TOPAR parameter_list TCPAR lexical_vars option(return_type) TOBRACE list(inner_statement) TCBRACE [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
## Transitions:
-- On TAND shift to state 12
-- On option(TAND) shift to state 13
-- On is_reference shift to state 183
## Reductions:
-- On TOPAR
--   reduce production option(TAND) ->

State 183:
## Known stack suffix:
## T_ASYNC T_FUNCTION is_reference
## LR(1) items:
expr -> T_ASYNC T_FUNCTION is_reference . TOPAR parameter_list TCPAR lexical_vars option(return_type) TOBRACE list(inner_statement) TCBRACE [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
## Transitions:
-- On TOPAR shift to state 184
## Reductions:

State 184:
## Known stack suffix:
## T_ASYNC T_FUNCTION is_reference TOPAR
## LR(1) items:
expr -> T_ASYNC T_FUNCTION is_reference TOPAR . parameter_list TCPAR lexical_vars option(return_type) TOBRACE list(inner_statement) TCBRACE [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
## Transitions:
-- On T_SL shift to state 16
-- On parameter_list shift to state 185
-- On parameter shift to state 122
-- On option(attributes) shift to state 125
-- On attributes shift to state 181
## Reductions:
-- On T_VARIABLE T_TYPE T_SUPER T_SELF T_PUBLIC T_PROTECTED T_PRIVATE T_PARENT T_NAMESPACE T_METAVAR T_INSTANCEOF T_IDENT T_ENUM T_ELLIPSIS T_ARRAY TQUESTION TOPAR TANTISLASH TAND
--   reduce production option(attributes) ->
-- On TCPAR
--   reduce production parameter_list ->

State 185:
## Known stack suffix:
## T_ASYNC T_FUNCTION is_reference TOPAR parameter_list
## LR(1) items:
expr -> T_ASYNC T_FUNCTION is_reference TOPAR parameter_list . TCPAR lexical_vars option(return_type) TOBRACE list(inner_statement) TCBRACE [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
## Transitions:
-- On TCPAR shift to state 186
## Reductions:

State 186:
## Known stack suffix:
## T_ASYNC T_FUNCTION is_reference TOPAR parameter_list TCPAR
## LR(1) items:
expr -> T_ASYNC T_FUNCTION is_reference TOPAR parameter_list TCPAR . lexical_vars option(return_type) TOBRACE list(inner_statement) TCBRACE [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
## Transitions:
-- On T_USE shift to state 144
-- On lexical_vars shift to state 187
## Reductions:
-- On TOBRACE TCOLON
--   reduce production lexical_vars ->

State 187:
## Known stack suffix:
## T_ASYNC T_FUNCTION is_reference TOPAR parameter_list TCPAR lexical_vars
## LR(1) items:
expr -> T_ASYNC T_FUNCTION is_reference TOPAR parameter_list TCPAR lexical_vars . option(return_type) TOBRACE list(inner_statement) TCBRACE [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
## Transitions:
-- On TCOLON shift to state 76
-- On return_type shift to state 119
-- On option(return_type) shift to state 188
## Reductions:
-- On TOBRACE
--   reduce production option(return_type) ->

State 188:
## Known stack suffix:
## T_ASYNC T_FUNCTION is_reference TOPAR parameter_list TCPAR lexical_vars option(return_type)
## LR(1) items:
expr -> T_ASYNC T_FUNCTION is_reference TOPAR parameter_list TCPAR lexical_vars option(return_type) . TOBRACE list(inner_statement) TCBRACE [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
## Transitions:
-- On TOBRACE shift to state 189
## Reductions:

State 189:
## Known stack suffix:
## T_ASYNC T_FUNCTION is_reference TOPAR parameter_list TCPAR lexical_vars option(return_type) TOBRACE
## LR(1) items:
expr -> T_ASYNC T_FUNCTION is_reference TOPAR parameter_list TCPAR lexical_vars option(return_type) TOBRACE . list(inner_statement) TCBRACE [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
## Transitions:
-- On T__AT shift to state 1
-- On T_YIELD shift to state 2
-- On T_WHILE shift to state 158
-- On T_VARIABLE shift to state 3
-- On T_USE shift to state 190
-- On T_UNSET_CAST shift to state 5
-- On T_UNSET shift to state 197
-- On T_TYPE shift to state 6
-- On T_TRY shift to state 391
-- On T_TRAIT_C shift to state 7
-- On T_TRAIT shift to state 393
-- On T_THROW shift to state 520
-- On T_SWITCH shift to state 525
-- On T_SUPER shift to state 8
-- On T_STRING_CAST shift to state 9
-- On T_STATIC shift to state 536
-- On T_START_HEREDOC shift to state 25
-- On T_SL shift to state 16
-- On T_SELF shift to state 40
-- On T_RETURN shift to state 553
-- On T_REQUIRE_ONCE shift to state 41
-- On T_REQUIRE shift to state 42
-- On T_PRINT shift to state 43
-- On T_PARENT shift to state 44
-- On T_OPEN_TAG_WITH_ECHO shift to state 558
-- On T_OBJECT_CAST shift to state 45
-- On T_NEW shift to state 46
-- On T_NAMESPACE_C shift to state 49
-- On T_NAMESPACE shift to state 50
-- On T_METHOD_C shift to state 58
-- On T_METAVAR shift to state 17
-- On T_LNUMBER shift to state 59
-- On T_LIST shift to state 69
-- On T_LINE shift to state 60
-- On T_LAMBDA_OPAR shift to state 73
-- On T_ISSET shift to state 133
-- On T_INT_CAST shift to state 135
-- On T_INTERFACE shift to state 563
-- On T_INSTANCEOF shift to state 52
-- On T_INLINE_HTML shift to state 576
-- On T_INCLUDE_ONCE shift to state 136
-- On T_INCLUDE shift to state 137
-- On T_INC shift to state 138
-- On T_IF shift to state 577
-- On T_IDENT shift to state 18
-- On T_GLOBAL shift to state 587
-- On T_FUNC_C shift to state 61
-- On T_FUNCTION shift to state 657
-- On T_FOREACH shift to state 600
-- On T_FOR shift to state 624
-- On T_FINAL shift to state 666
-- On T_FILE shift to state 62
-- On T_EXIT shift to state 160
-- On T_EVAL shift to state 162
-- On T_ENUM shift to state 668
-- On T_EMPTY shift to state 164
-- On T_ELLIPSIS shift to state 635
-- On T_ECHO shift to state 636
-- On T_DOUBLE_CAST shift to state 168
-- On T_DO shift to state 644
-- On T_DNUMBER shift to state 63
-- On T_DIR shift to state 64
-- On T_DECLARE shift to state 645
-- On T_DEC shift to state 169
-- On T_CONTINUE shift to state 649
-- On T_CONSTANT_ENCAPSED_STRING shift to state 65
-- On T_CLONE shift to state 170
-- On T_CLASS_C shift to state 66
-- On T_CLASS shift to state 682
-- On T_BREAK shift to state 652
-- On T_BOOL_CAST shift to state 171
-- On T_AWAIT shift to state 172
-- On T_ASYNC shift to state 683
-- On T_ARRAY_CAST shift to state 200
-- On T_ARRAY shift to state 201
-- On T_ABSTRACT shift to state 694
-- On TTILDE shift to state 204
-- On TSEMICOLON shift to state 655
-- On TPLUS shift to state 205
-- On TOPAR shift to state 206
-- On TOBRACE shift to state 656
-- On TOBRA shift to state 209
-- On TMINUS shift to state 210
-- On TGUIL shift to state 211
-- On TDOLLARDOLLAR shift to state 213
-- On TDOLLAR shift to state 214
-- On TBANG shift to state 216
-- On TBACKQUOTE shift to state 217
-- On TANTISLASH shift to state 85
-- On LDots shift to state 222
-- On unticked_function_declaration shift to state 696
-- On unticked_class_declaration shift to state 697
-- On statement shift to state 698
-- On simple_expr shift to state 223
-- On qualified_name shift to state 94
-- On qualified_class_name shift to state 225
-- On primary_expr shift to state 226
-- On new_expr shift to state 227
-- On namespace_name shift to state 102
-- On member_expr shift to state 228
-- On list(inner_statement) shift to state 886
-- On lambda_expr shift to state 231
-- On inner_statement shift to state 701
-- On ident_in_name shift to state 57
-- On ident shift to state 56
-- On function_declaration shift to state 703
-- On expr shift to state 704
-- On constant shift to state 239
-- On class_entry_type shift to state 706
-- On class_declaration shift to state 716
-- On call_expr shift to state 240
-- On attributes shift to state 717
## Reductions:
-- On TCBRACE
--   reduce production list(inner_statement) ->

State 190:
## Known stack suffix:
## T_USE
## LR(1) items:
statement -> T_USE . use_filename TSEMICOLON [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_ENDWHILE T_ENDSWITCH T_ENDIF T_ENDFOREACH T_ENDFOR T_ENDDECLARE T_EMPTY T_ELSEIF T_ELSE T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DEFAULT T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_CASE T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
## Transitions:
-- On T_CONSTANT_ENCAPSED_STRING shift to state 191
-- On TOPAR shift to state 192
-- On use_filename shift to state 195
## Reductions:

State 191:
## Known stack suffix:
## T_CONSTANT_ENCAPSED_STRING
## LR(1) items:
use_filename -> T_CONSTANT_ENCAPSED_STRING . [ TSEMICOLON ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production use_filename -> T_CONSTANT_ENCAPSED_STRING

State 192:
## Known stack suffix:
## TOPAR
## LR(1) items:
use_filename -> TOPAR . T_CONSTANT_ENCAPSED_STRING TCPAR [ TSEMICOLON ]
## Transitions:
-- On T_CONSTANT_ENCAPSED_STRING shift to state 193
## Reductions:

State 193:
## Known stack suffix:
## TOPAR T_CONSTANT_ENCAPSED_STRING
## LR(1) items:
use_filename -> TOPAR T_CONSTANT_ENCAPSED_STRING . TCPAR [ TSEMICOLON ]
## Transitions:
-- On TCPAR shift to state 194
## Reductions:

State 194:
## Known stack suffix:
## TOPAR T_CONSTANT_ENCAPSED_STRING TCPAR
## LR(1) items:
use_filename -> TOPAR T_CONSTANT_ENCAPSED_STRING TCPAR . [ TSEMICOLON ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production use_filename -> TOPAR T_CONSTANT_ENCAPSED_STRING TCPAR

State 195:
## Known stack suffix:
## T_USE use_filename
## LR(1) items:
statement -> T_USE use_filename . TSEMICOLON [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_ENDWHILE T_ENDSWITCH T_ENDIF T_ENDFOREACH T_ENDFOR T_ENDDECLARE T_EMPTY T_ELSEIF T_ELSE T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DEFAULT T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_CASE T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
## Transitions:
-- On TSEMICOLON shift to state 196
## Reductions:

State 196:
## Known stack suffix:
## T_USE use_filename TSEMICOLON
## LR(1) items:
statement -> T_USE use_filename TSEMICOLON . [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_ENDWHILE T_ENDSWITCH T_ENDIF T_ENDFOREACH T_ENDFOR T_ENDDECLARE T_EMPTY T_ELSEIF T_ELSE T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DEFAULT T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_CASE T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production statement -> T_USE use_filename TSEMICOLON

State 197:
## Known stack suffix:
## T_UNSET
## LR(1) items:
statement -> T_UNSET . TOPAR list_sep(unset_variable,TCOMMA) TCPAR TSEMICOLON [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_ENDWHILE T_ENDSWITCH T_ENDIF T_ENDFOREACH T_ENDFOR T_ENDDECLARE T_EMPTY T_ELSEIF T_ELSE T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DEFAULT T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_CASE T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
## Transitions:
-- On TOPAR shift to state 198
## Reductions:

State 198:
## Known stack suffix:
## T_UNSET TOPAR
## LR(1) items:
statement -> T_UNSET TOPAR . list_sep(unset_variable,TCOMMA) TCPAR TSEMICOLON [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_ENDWHILE T_ENDSWITCH T_ENDIF T_ENDFOREACH T_ENDFOR T_ENDDECLARE T_EMPTY T_ELSEIF T_ELSE T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DEFAULT T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_CASE T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
## Transitions:
-- On T__AT shift to state 1
-- On T_YIELD shift to state 2
-- On T_VARIABLE shift to state 3
-- On T_UNSET_CAST shift to state 5
-- On T_TYPE shift to state 6
-- On T_TRAIT_C shift to state 7
-- On T_SUPER shift to state 8
-- On T_STRING_CAST shift to state 9
-- On T_STATIC shift to state 10
-- On T_START_HEREDOC shift to state 25
-- On T_SELF shift to state 40
-- On T_REQUIRE_ONCE shift to state 41
-- On T_REQUIRE shift to state 42
-- On T_PRINT shift to state 43
-- On T_PARENT shift to state 44
-- On T_OBJECT_CAST shift to state 45
-- On T_NEW shift to state 46
-- On T_NAMESPACE_C shift to state 49
-- On T_NAMESPACE shift to state 50
-- On T_METHOD_C shift to state 58
-- On T_METAVAR shift to state 17
-- On T_LNUMBER shift to state 59
-- On T_LIST shift to state 69
-- On T_LINE shift to state 60
-- On T_LAMBDA_OPAR shift to state 73
-- On T_ISSET shift to state 133
-- On T_INT_CAST shift to state 135
-- On T_INSTANCEOF shift to state 52
-- On T_INCLUDE_ONCE shift to state 136
-- On T_INCLUDE shift to state 137
-- On T_INC shift to state 138
-- On T_IDENT shift to state 18
-- On T_FUNC_C shift to state 61
-- On T_FUNCTION shift to state 139
-- On T_FILE shift to state 62
-- On T_EXIT shift to state 160
-- On T_EVAL shift to state 162
-- On T_ENUM shift to state 19
-- On T_EMPTY shift to state 164
-- On T_ELLIPSIS shift to state 199
-- On T_DOUBLE_CAST shift to state 168
-- On T_DNUMBER shift to state 63
-- On T_DIR shift to state 64
-- On T_DEC shift to state 169
-- On T_CONSTANT_ENCAPSED_STRING shift to state 65
-- On T_CLONE shift to state 170
-- On T_CLASS_C shift to state 66
-- On T_BOOL_CAST shift to state 171
-- On T_AWAIT shift to state 172
-- On T_ASYNC shift to state 173
-- On T_ARRAY_CAST shift to state 200
-- On T_ARRAY shift to state 201
-- On TTILDE shift to state 204
-- On TPLUS shift to state 205
-- On TOPAR shift to state 206
-- On TOBRA shift to state 209
-- On TMINUS shift to state 210
-- On TGUIL shift to state 211
-- On TDOLLARDOLLAR shift to state 213
-- On TDOLLAR shift to state 214
-- On TBANG shift to state 216
-- On TBACKQUOTE shift to state 217
-- On TANTISLASH shift to state 85
-- On LDots shift to state 222
-- On unset_variable shift to state 384
-- On simple_expr shift to state 223
-- On qualified_name shift to state 94
-- On qualified_class_name shift to state 225
-- On primary_expr shift to state 226
-- On new_expr shift to state 227
-- On namespace_name shift to state 102
-- On member_expr shift to state 228
-- On list_sep(unset_variable,TCOMMA) shift to state 385
-- On lambda_expr shift to state 231
-- On ident_in_name shift to state 57
-- On ident shift to state 56
-- On expr shift to state 390
-- On constant shift to state 239
-- On call_expr shift to state 240
## Reductions:

State 199:
## Known stack suffix:
## T_ELLIPSIS
## LR(1) items:
unset_variable -> T_ELLIPSIS . [ TCPAR TCOMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production unset_variable -> T_ELLIPSIS

State 200:
## Known stack suffix:
## T_ARRAY_CAST
## LR(1) items:
expr -> T_ARRAY_CAST . expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
## Transitions:
-- On T__AT shift to state 1
-- On T_YIELD shift to state 2
-- On T_VARIABLE shift to state 3
-- On T_UNSET_CAST shift to state 5
-- On T_TYPE shift to state 6
-- On T_TRAIT_C shift to state 7
-- On T_SUPER shift to state 8
-- On T_STRING_CAST shift to state 9
-- On T_STATIC shift to state 10
-- On T_START_HEREDOC shift to state 25
-- On T_SELF shift to state 40
-- On T_REQUIRE_ONCE shift to state 41
-- On T_REQUIRE shift to state 42
-- On T_PRINT shift to state 43
-- On T_PARENT shift to state 44
-- On T_OBJECT_CAST shift to state 45
-- On T_NEW shift to state 46
-- On T_NAMESPACE_C shift to state 49
-- On T_NAMESPACE shift to state 50
-- On T_METHOD_C shift to state 58
-- On T_METAVAR shift to state 17
-- On T_LNUMBER shift to state 59
-- On T_LIST shift to state 69
-- On T_LINE shift to state 60
-- On T_LAMBDA_OPAR shift to state 73
-- On T_ISSET shift to state 133
-- On T_INT_CAST shift to state 135
-- On T_INSTANCEOF shift to state 52
-- On T_INCLUDE_ONCE shift to state 136
-- On T_INCLUDE shift to state 137
-- On T_INC shift to state 138
-- On T_IDENT shift to state 18
-- On T_FUNC_C shift to state 61
-- On T_FUNCTION shift to state 139
-- On T_FILE shift to state 62
-- On T_EXIT shift to state 160
-- On T_EVAL shift to state 162
-- On T_ENUM shift to state 19
-- On T_EMPTY shift to state 164
-- On T_DOUBLE_CAST shift to state 168
-- On T_DNUMBER shift to state 63
-- On T_DIR shift to state 64
-- On T_DEC shift to state 169
-- On T_CONSTANT_ENCAPSED_STRING shift to state 65
-- On T_CLONE shift to state 170
-- On T_CLASS_C shift to state 66
-- On T_BOOL_CAST shift to state 171
-- On T_AWAIT shift to state 172
-- On T_ASYNC shift to state 173
-- On T_ARRAY_CAST shift to state 200
-- On T_ARRAY shift to state 201
-- On TTILDE shift to state 204
-- On TPLUS shift to state 205
-- On TOPAR shift to state 206
-- On TOBRA shift to state 209
-- On TMINUS shift to state 210
-- On TGUIL shift to state 211
-- On TDOLLARDOLLAR shift to state 213
-- On TDOLLAR shift to state 214
-- On TBANG shift to state 216
-- On TBACKQUOTE shift to state 217
-- On TANTISLASH shift to state 85
-- On LDots shift to state 222
-- On simple_expr shift to state 223
-- On qualified_name shift to state 94
-- On qualified_class_name shift to state 225
-- On primary_expr shift to state 226
-- On new_expr shift to state 227
-- On namespace_name shift to state 102
-- On member_expr shift to state 228
-- On lambda_expr shift to state 231
-- On ident_in_name shift to state 57
-- On ident shift to state 56
-- On expr shift to state 383
-- On constant shift to state 239
-- On call_expr shift to state 240
## Reductions:

State 201:
## Known stack suffix:
## T_ARRAY
## LR(1) items:
primary_expr -> T_ARRAY . TOPAR array_pair_list TCPAR [ T_XOR_EQUAL T_SR_EQUAL T_SR T_SL_EQUAL T_SL T_ROCKET T_PLUS_EQUAL T_OR_EQUAL T_OBJECT_OPERATOR T_MUL_EQUAL T_MOD_EQUAL T_MINUS_EQUAL T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DIV_EQUAL T_DEC T_CONCAT_EQUAL T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW T_AND_EQUAL TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TOPAR TOBRACE TOBRA TMUL TMOD TMINUS TGREATER TEQ TDOT TDIV TCPAR TCOMMA TCOLON TCOLCOL TCBRACE TCBRA TAND RDots EOF ]
## Transitions:
-- On TOPAR shift to state 202
## Reductions:

State 202:
## Known stack suffix:
## T_ARRAY TOPAR
## LR(1) items:
primary_expr -> T_ARRAY TOPAR . array_pair_list TCPAR [ T_XOR_EQUAL T_SR_EQUAL T_SR T_SL_EQUAL T_SL T_ROCKET T_PLUS_EQUAL T_OR_EQUAL T_OBJECT_OPERATOR T_MUL_EQUAL T_MOD_EQUAL T_MINUS_EQUAL T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DIV_EQUAL T_DEC T_CONCAT_EQUAL T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW T_AND_EQUAL TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TOPAR TOBRACE TOBRA TMUL TMOD TMINUS TGREATER TEQ TDOT TDIV TCPAR TCOMMA TCOLON TCOLCOL TCBRACE TCBRA TAND RDots EOF ]
## Transitions:
-- On T__AT shift to state 1
-- On T_YIELD shift to state 2
-- On T_VARIABLE shift to state 3
-- On T_UNSET_CAST shift to state 5
-- On T_TYPE shift to state 6
-- On T_TRAIT_C shift to state 7
-- On T_SUPER shift to state 8
-- On T_STRING_CAST shift to state 9
-- On T_STATIC shift to state 10
-- On T_START_HEREDOC shift to state 25
-- On T_SELF shift to state 40
-- On T_REQUIRE_ONCE shift to state 41
-- On T_REQUIRE shift to state 42
-- On T_PRINT shift to state 43
-- On T_PARENT shift to state 44
-- On T_OBJECT_CAST shift to state 45
-- On T_NEW shift to state 46
-- On T_NAMESPACE_C shift to state 49
-- On T_NAMESPACE shift to state 50
-- On T_METHOD_C shift to state 58
-- On T_METAVAR shift to state 17
-- On T_LNUMBER shift to state 59
-- On T_LIST shift to state 69
-- On T_LINE shift to state 60
-- On T_LAMBDA_OPAR shift to state 73
-- On T_ISSET shift to state 133
-- On T_INT_CAST shift to state 135
-- On T_INSTANCEOF shift to state 52
-- On T_INCLUDE_ONCE shift to state 136
-- On T_INCLUDE shift to state 137
-- On T_INC shift to state 138
-- On T_IDENT shift to state 18
-- On T_FUNC_C shift to state 61
-- On T_FUNCTION shift to state 139
-- On T_FILE shift to state 62
-- On T_EXIT shift to state 160
-- On T_EVAL shift to state 162
-- On T_ENUM shift to state 19
-- On T_EMPTY shift to state 164
-- On T_ELLIPSIS shift to state 203
-- On T_DOUBLE_CAST shift to state 168
-- On T_DNUMBER shift to state 63
-- On T_DIR shift to state 64
-- On T_DEC shift to state 169
-- On T_CONSTANT_ENCAPSED_STRING shift to state 65
-- On T_CLONE shift to state 170
-- On T_CLASS_C shift to state 66
-- On T_BOOL_CAST shift to state 171
-- On T_AWAIT shift to state 172
-- On T_ASYNC shift to state 173
-- On T_ARRAY_CAST shift to state 200
-- On T_ARRAY shift to state 201
-- On TTILDE shift to state 204
-- On TPLUS shift to state 205
-- On TOPAR shift to state 206
-- On TOBRA shift to state 209
-- On TMINUS shift to state 210
-- On TGUIL shift to state 211
-- On TDOLLARDOLLAR shift to state 213
-- On TDOLLAR shift to state 214
-- On TBANG shift to state 216
-- On TBACKQUOTE shift to state 217
-- On TANTISLASH shift to state 85
-- On TAND shift to state 362
-- On LDots shift to state 222
-- On simple_expr shift to state 223
-- On qualified_name shift to state 94
-- On qualified_class_name shift to state 225
-- On primary_expr shift to state 226
-- On non_empty_array_pair_list_rev shift to state 364
-- On new_expr shift to state 227
-- On namespace_name shift to state 102
-- On member_expr shift to state 228
-- On lambda_expr shift to state 231
-- On ident_in_name shift to state 57
-- On ident shift to state 56
-- On expr shift to state 366
-- On constant shift to state 239
-- On call_expr shift to state 240
-- On array_pair_list_rev shift to state 373
-- On array_pair_list shift to state 381
-- On array_pair shift to state 376
## Reductions:
-- On TCPAR
--   reduce production array_pair_list_rev ->

State 203:
## Known stack suffix:
## T_ELLIPSIS
## LR(1) items:
array_pair -> T_ELLIPSIS . [ TCPAR TCOMMA TCBRA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production array_pair -> T_ELLIPSIS

State 204:
## Known stack suffix:
## TTILDE
## LR(1) items:
expr -> TTILDE . expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
## Transitions:
-- On T__AT shift to state 1
-- On T_YIELD shift to state 2
-- On T_VARIABLE shift to state 3
-- On T_UNSET_CAST shift to state 5
-- On T_TYPE shift to state 6
-- On T_TRAIT_C shift to state 7
-- On T_SUPER shift to state 8
-- On T_STRING_CAST shift to state 9
-- On T_STATIC shift to state 10
-- On T_START_HEREDOC shift to state 25
-- On T_SELF shift to state 40
-- On T_REQUIRE_ONCE shift to state 41
-- On T_REQUIRE shift to state 42
-- On T_PRINT shift to state 43
-- On T_PARENT shift to state 44
-- On T_OBJECT_CAST shift to state 45
-- On T_NEW shift to state 46
-- On T_NAMESPACE_C shift to state 49
-- On T_NAMESPACE shift to state 50
-- On T_METHOD_C shift to state 58
-- On T_METAVAR shift to state 17
-- On T_LNUMBER shift to state 59
-- On T_LIST shift to state 69
-- On T_LINE shift to state 60
-- On T_LAMBDA_OPAR shift to state 73
-- On T_ISSET shift to state 133
-- On T_INT_CAST shift to state 135
-- On T_INSTANCEOF shift to state 52
-- On T_INCLUDE_ONCE shift to state 136
-- On T_INCLUDE shift to state 137
-- On T_INC shift to state 138
-- On T_IDENT shift to state 18
-- On T_FUNC_C shift to state 61
-- On T_FUNCTION shift to state 139
-- On T_FILE shift to state 62
-- On T_EXIT shift to state 160
-- On T_EVAL shift to state 162
-- On T_ENUM shift to state 19
-- On T_EMPTY shift to state 164
-- On T_DOUBLE_CAST shift to state 168
-- On T_DNUMBER shift to state 63
-- On T_DIR shift to state 64
-- On T_DEC shift to state 169
-- On T_CONSTANT_ENCAPSED_STRING shift to state 65
-- On T_CLONE shift to state 170
-- On T_CLASS_C shift to state 66
-- On T_BOOL_CAST shift to state 171
-- On T_AWAIT shift to state 172
-- On T_ASYNC shift to state 173
-- On T_ARRAY_CAST shift to state 200
-- On T_ARRAY shift to state 201
-- On TTILDE shift to state 204
-- On TPLUS shift to state 205
-- On TOPAR shift to state 206
-- On TOBRA shift to state 209
-- On TMINUS shift to state 210
-- On TGUIL shift to state 211
-- On TDOLLARDOLLAR shift to state 213
-- On TDOLLAR shift to state 214
-- On TBANG shift to state 216
-- On TBACKQUOTE shift to state 217
-- On TANTISLASH shift to state 85
-- On LDots shift to state 222
-- On simple_expr shift to state 223
-- On qualified_name shift to state 94
-- On qualified_class_name shift to state 225
-- On primary_expr shift to state 226
-- On new_expr shift to state 227
-- On namespace_name shift to state 102
-- On member_expr shift to state 228
-- On lambda_expr shift to state 231
-- On ident_in_name shift to state 57
-- On ident shift to state 56
-- On expr shift to state 380
-- On constant shift to state 239
-- On call_expr shift to state 240
## Reductions:

State 205:
## Known stack suffix:
## TPLUS
## LR(1) items:
expr -> TPLUS . expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
## Transitions:
-- On T__AT shift to state 1
-- On T_YIELD shift to state 2
-- On T_VARIABLE shift to state 3
-- On T_UNSET_CAST shift to state 5
-- On T_TYPE shift to state 6
-- On T_TRAIT_C shift to state 7
-- On T_SUPER shift to state 8
-- On T_STRING_CAST shift to state 9
-- On T_STATIC shift to state 10
-- On T_START_HEREDOC shift to state 25
-- On T_SELF shift to state 40
-- On T_REQUIRE_ONCE shift to state 41
-- On T_REQUIRE shift to state 42
-- On T_PRINT shift to state 43
-- On T_PARENT shift to state 44
-- On T_OBJECT_CAST shift to state 45
-- On T_NEW shift to state 46
-- On T_NAMESPACE_C shift to state 49
-- On T_NAMESPACE shift to state 50
-- On T_METHOD_C shift to state 58
-- On T_METAVAR shift to state 17
-- On T_LNUMBER shift to state 59
-- On T_LIST shift to state 69
-- On T_LINE shift to state 60
-- On T_LAMBDA_OPAR shift to state 73
-- On T_ISSET shift to state 133
-- On T_INT_CAST shift to state 135
-- On T_INSTANCEOF shift to state 52
-- On T_INCLUDE_ONCE shift to state 136
-- On T_INCLUDE shift to state 137
-- On T_INC shift to state 138
-- On T_IDENT shift to state 18
-- On T_FUNC_C shift to state 61
-- On T_FUNCTION shift to state 139
-- On T_FILE shift to state 62
-- On T_EXIT shift to state 160
-- On T_EVAL shift to state 162
-- On T_ENUM shift to state 19
-- On T_EMPTY shift to state 164
-- On T_DOUBLE_CAST shift to state 168
-- On T_DNUMBER shift to state 63
-- On T_DIR shift to state 64
-- On T_DEC shift to state 169
-- On T_CONSTANT_ENCAPSED_STRING shift to state 65
-- On T_CLONE shift to state 170
-- On T_CLASS_C shift to state 66
-- On T_BOOL_CAST shift to state 171
-- On T_AWAIT shift to state 172
-- On T_ASYNC shift to state 173
-- On T_ARRAY_CAST shift to state 200
-- On T_ARRAY shift to state 201
-- On TTILDE shift to state 204
-- On TPLUS shift to state 205
-- On TOPAR shift to state 206
-- On TOBRA shift to state 209
-- On TMINUS shift to state 210
-- On TGUIL shift to state 211
-- On TDOLLARDOLLAR shift to state 213
-- On TDOLLAR shift to state 214
-- On TBANG shift to state 216
-- On TBACKQUOTE shift to state 217
-- On TANTISLASH shift to state 85
-- On LDots shift to state 222
-- On simple_expr shift to state 223
-- On qualified_name shift to state 94
-- On qualified_class_name shift to state 225
-- On primary_expr shift to state 226
-- On new_expr shift to state 227
-- On namespace_name shift to state 102
-- On member_expr shift to state 228
-- On lambda_expr shift to state 231
-- On ident_in_name shift to state 57
-- On ident shift to state 56
-- On expr shift to state 379
-- On constant shift to state 239
-- On call_expr shift to state 240
## Reductions:

State 206:
## Known stack suffix:
## TOPAR
## LR(1) items:
primary_expr -> TOPAR . expr TCPAR [ T_XOR_EQUAL T_SR_EQUAL T_SR T_SL_EQUAL T_SL T_ROCKET T_PLUS_EQUAL T_OR_EQUAL T_OBJECT_OPERATOR T_MUL_EQUAL T_MOD_EQUAL T_MINUS_EQUAL T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DIV_EQUAL T_DEC T_CONCAT_EQUAL T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW T_AND_EQUAL TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TOPAR TOBRACE TOBRA TMUL TMOD TMINUS TGREATER TEQ TDOT TDIV TCPAR TCOMMA TCOLON TCOLCOL TCBRACE TCBRA TAND RDots EOF ]
primary_expr -> TOPAR . T_ELLIPSIS TCPAR [ T_XOR_EQUAL T_SR_EQUAL T_SR T_SL_EQUAL T_SL T_ROCKET T_PLUS_EQUAL T_OR_EQUAL T_OBJECT_OPERATOR T_MUL_EQUAL T_MOD_EQUAL T_MINUS_EQUAL T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DIV_EQUAL T_DEC T_CONCAT_EQUAL T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW T_AND_EQUAL TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TOPAR TOBRACE TOBRA TMUL TMOD TMINUS TGREATER TEQ TDOT TDIV TCPAR TCOMMA TCOLON TCOLCOL TCBRACE TCBRA TAND RDots EOF ]
## Transitions:
-- On T__AT shift to state 1
-- On T_YIELD shift to state 2
-- On T_VARIABLE shift to state 3
-- On T_UNSET_CAST shift to state 5
-- On T_TYPE shift to state 6
-- On T_TRAIT_C shift to state 7
-- On T_SUPER shift to state 8
-- On T_STRING_CAST shift to state 9
-- On T_STATIC shift to state 10
-- On T_START_HEREDOC shift to state 25
-- On T_SELF shift to state 40
-- On T_REQUIRE_ONCE shift to state 41
-- On T_REQUIRE shift to state 42
-- On T_PRINT shift to state 43
-- On T_PARENT shift to state 44
-- On T_OBJECT_CAST shift to state 45
-- On T_NEW shift to state 46
-- On T_NAMESPACE_C shift to state 49
-- On T_NAMESPACE shift to state 50
-- On T_METHOD_C shift to state 58
-- On T_METAVAR shift to state 17
-- On T_LNUMBER shift to state 59
-- On T_LIST shift to state 69
-- On T_LINE shift to state 60
-- On T_LAMBDA_OPAR shift to state 73
-- On T_ISSET shift to state 133
-- On T_INT_CAST shift to state 135
-- On T_INSTANCEOF shift to state 52
-- On T_INCLUDE_ONCE shift to state 136
-- On T_INCLUDE shift to state 137
-- On T_INC shift to state 138
-- On T_IDENT shift to state 18
-- On T_FUNC_C shift to state 61
-- On T_FUNCTION shift to state 139
-- On T_FILE shift to state 62
-- On T_EXIT shift to state 160
-- On T_EVAL shift to state 162
-- On T_ENUM shift to state 19
-- On T_EMPTY shift to state 164
-- On T_ELLIPSIS shift to state 207
-- On T_DOUBLE_CAST shift to state 168
-- On T_DNUMBER shift to state 63
-- On T_DIR shift to state 64
-- On T_DEC shift to state 169
-- On T_CONSTANT_ENCAPSED_STRING shift to state 65
-- On T_CLONE shift to state 170
-- On T_CLASS_C shift to state 66
-- On T_BOOL_CAST shift to state 171
-- On T_AWAIT shift to state 172
-- On T_ASYNC shift to state 173
-- On T_ARRAY_CAST shift to state 200
-- On T_ARRAY shift to state 201
-- On TTILDE shift to state 204
-- On TPLUS shift to state 205
-- On TOPAR shift to state 206
-- On TOBRA shift to state 209
-- On TMINUS shift to state 210
-- On TGUIL shift to state 211
-- On TDOLLARDOLLAR shift to state 213
-- On TDOLLAR shift to state 214
-- On TBANG shift to state 216
-- On TBACKQUOTE shift to state 217
-- On TANTISLASH shift to state 85
-- On LDots shift to state 222
-- On simple_expr shift to state 223
-- On qualified_name shift to state 94
-- On qualified_class_name shift to state 225
-- On primary_expr shift to state 226
-- On new_expr shift to state 227
-- On namespace_name shift to state 102
-- On member_expr shift to state 228
-- On lambda_expr shift to state 231
-- On ident_in_name shift to state 57
-- On ident shift to state 56
-- On expr shift to state 377
-- On constant shift to state 239
-- On call_expr shift to state 240
## Reductions:

State 207:
## Known stack suffix:
## TOPAR T_ELLIPSIS
## LR(1) items:
primary_expr -> TOPAR T_ELLIPSIS . TCPAR [ T_XOR_EQUAL T_SR_EQUAL T_SR T_SL_EQUAL T_SL T_ROCKET T_PLUS_EQUAL T_OR_EQUAL T_OBJECT_OPERATOR T_MUL_EQUAL T_MOD_EQUAL T_MINUS_EQUAL T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DIV_EQUAL T_DEC T_CONCAT_EQUAL T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW T_AND_EQUAL TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TOPAR TOBRACE TOBRA TMUL TMOD TMINUS TGREATER TEQ TDOT TDIV TCPAR TCOMMA TCOLON TCOLCOL TCBRACE TCBRA TAND RDots EOF ]
## Transitions:
-- On TCPAR shift to state 208
## Reductions:

State 208:
## Known stack suffix:
## TOPAR T_ELLIPSIS TCPAR
## LR(1) items:
primary_expr -> TOPAR T_ELLIPSIS TCPAR . [ T_XOR_EQUAL T_SR_EQUAL T_SR T_SL_EQUAL T_SL T_ROCKET T_PLUS_EQUAL T_OR_EQUAL T_OBJECT_OPERATOR T_MUL_EQUAL T_MOD_EQUAL T_MINUS_EQUAL T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DIV_EQUAL T_DEC T_CONCAT_EQUAL T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW T_AND_EQUAL TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TOPAR TOBRACE TOBRA TMUL TMOD TMINUS TGREATER TEQ TDOT TDIV TCPAR TCOMMA TCOLON TCOLCOL TCBRACE TCBRA TAND RDots EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production primary_expr -> TOPAR T_ELLIPSIS TCPAR

State 209:
## Known stack suffix:
## TOBRA
## LR(1) items:
primary_expr -> TOBRA . array_pair_list TCBRA [ T_XOR_EQUAL T_SR_EQUAL T_SR T_SL_EQUAL T_SL T_ROCKET T_PLUS_EQUAL T_OR_EQUAL T_OBJECT_OPERATOR T_MUL_EQUAL T_MOD_EQUAL T_MINUS_EQUAL T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DIV_EQUAL T_DEC T_CONCAT_EQUAL T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW T_AND_EQUAL TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TOPAR TOBRACE TOBRA TMUL TMOD TMINUS TGREATER TEQ TDOT TDIV TCPAR TCOMMA TCOLON TCOLCOL TCBRACE TCBRA TAND RDots EOF ]
## Transitions:
-- On T__AT shift to state 1
-- On T_YIELD shift to state 2
-- On T_VARIABLE shift to state 3
-- On T_UNSET_CAST shift to state 5
-- On T_TYPE shift to state 6
-- On T_TRAIT_C shift to state 7
-- On T_SUPER shift to state 8
-- On T_STRING_CAST shift to state 9
-- On T_STATIC shift to state 10
-- On T_START_HEREDOC shift to state 25
-- On T_SELF shift to state 40
-- On T_REQUIRE_ONCE shift to state 41
-- On T_REQUIRE shift to state 42
-- On T_PRINT shift to state 43
-- On T_PARENT shift to state 44
-- On T_OBJECT_CAST shift to state 45
-- On T_NEW shift to state 46
-- On T_NAMESPACE_C shift to state 49
-- On T_NAMESPACE shift to state 50
-- On T_METHOD_C shift to state 58
-- On T_METAVAR shift to state 17
-- On T_LNUMBER shift to state 59
-- On T_LIST shift to state 69
-- On T_LINE shift to state 60
-- On T_LAMBDA_OPAR shift to state 73
-- On T_ISSET shift to state 133
-- On T_INT_CAST shift to state 135
-- On T_INSTANCEOF shift to state 52
-- On T_INCLUDE_ONCE shift to state 136
-- On T_INCLUDE shift to state 137
-- On T_INC shift to state 138
-- On T_IDENT shift to state 18
-- On T_FUNC_C shift to state 61
-- On T_FUNCTION shift to state 139
-- On T_FILE shift to state 62
-- On T_EXIT shift to state 160
-- On T_EVAL shift to state 162
-- On T_ENUM shift to state 19
-- On T_EMPTY shift to state 164
-- On T_ELLIPSIS shift to state 203
-- On T_DOUBLE_CAST shift to state 168
-- On T_DNUMBER shift to state 63
-- On T_DIR shift to state 64
-- On T_DEC shift to state 169
-- On T_CONSTANT_ENCAPSED_STRING shift to state 65
-- On T_CLONE shift to state 170
-- On T_CLASS_C shift to state 66
-- On T_BOOL_CAST shift to state 171
-- On T_AWAIT shift to state 172
-- On T_ASYNC shift to state 173
-- On T_ARRAY_CAST shift to state 200
-- On T_ARRAY shift to state 201
-- On TTILDE shift to state 204
-- On TPLUS shift to state 205
-- On TOPAR shift to state 206
-- On TOBRA shift to state 209
-- On TMINUS shift to state 210
-- On TGUIL shift to state 211
-- On TDOLLARDOLLAR shift to state 213
-- On TDOLLAR shift to state 214
-- On TBANG shift to state 216
-- On TBACKQUOTE shift to state 217
-- On TANTISLASH shift to state 85
-- On TAND shift to state 362
-- On LDots shift to state 222
-- On simple_expr shift to state 223
-- On qualified_name shift to state 94
-- On qualified_class_name shift to state 225
-- On primary_expr shift to state 226
-- On non_empty_array_pair_list_rev shift to state 364
-- On new_expr shift to state 227
-- On namespace_name shift to state 102
-- On member_expr shift to state 228
-- On lambda_expr shift to state 231
-- On ident_in_name shift to state 57
-- On ident shift to state 56
-- On expr shift to state 366
-- On constant shift to state 239
-- On call_expr shift to state 240
-- On array_pair_list_rev shift to state 373
-- On array_pair_list shift to state 374
-- On array_pair shift to state 376
## Reductions:
-- On TCBRA
--   reduce production array_pair_list_rev ->

State 210:
## Known stack suffix:
## TMINUS
## LR(1) items:
expr -> TMINUS . expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
## Transitions:
-- On T__AT shift to state 1
-- On T_YIELD shift to state 2
-- On T_VARIABLE shift to state 3
-- On T_UNSET_CAST shift to state 5
-- On T_TYPE shift to state 6
-- On T_TRAIT_C shift to state 7
-- On T_SUPER shift to state 8
-- On T_STRING_CAST shift to state 9
-- On T_STATIC shift to state 10
-- On T_START_HEREDOC shift to state 25
-- On T_SELF shift to state 40
-- On T_REQUIRE_ONCE shift to state 41
-- On T_REQUIRE shift to state 42
-- On T_PRINT shift to state 43
-- On T_PARENT shift to state 44
-- On T_OBJECT_CAST shift to state 45
-- On T_NEW shift to state 46
-- On T_NAMESPACE_C shift to state 49
-- On T_NAMESPACE shift to state 50
-- On T_METHOD_C shift to state 58
-- On T_METAVAR shift to state 17
-- On T_LNUMBER shift to state 59
-- On T_LIST shift to state 69
-- On T_LINE shift to state 60
-- On T_LAMBDA_OPAR shift to state 73
-- On T_ISSET shift to state 133
-- On T_INT_CAST shift to state 135
-- On T_INSTANCEOF shift to state 52
-- On T_INCLUDE_ONCE shift to state 136
-- On T_INCLUDE shift to state 137
-- On T_INC shift to state 138
-- On T_IDENT shift to state 18
-- On T_FUNC_C shift to state 61
-- On T_FUNCTION shift to state 139
-- On T_FILE shift to state 62
-- On T_EXIT shift to state 160
-- On T_EVAL shift to state 162
-- On T_ENUM shift to state 19
-- On T_EMPTY shift to state 164
-- On T_DOUBLE_CAST shift to state 168
-- On T_DNUMBER shift to state 63
-- On T_DIR shift to state 64
-- On T_DEC shift to state 169
-- On T_CONSTANT_ENCAPSED_STRING shift to state 65
-- On T_CLONE shift to state 170
-- On T_CLASS_C shift to state 66
-- On T_BOOL_CAST shift to state 171
-- On T_AWAIT shift to state 172
-- On T_ASYNC shift to state 173
-- On T_ARRAY_CAST shift to state 200
-- On T_ARRAY shift to state 201
-- On TTILDE shift to state 204
-- On TPLUS shift to state 205
-- On TOPAR shift to state 206
-- On TOBRA shift to state 209
-- On TMINUS shift to state 210
-- On TGUIL shift to state 211
-- On TDOLLARDOLLAR shift to state 213
-- On TDOLLAR shift to state 214
-- On TBANG shift to state 216
-- On TBACKQUOTE shift to state 217
-- On TANTISLASH shift to state 85
-- On LDots shift to state 222
-- On simple_expr shift to state 223
-- On qualified_name shift to state 94
-- On qualified_class_name shift to state 225
-- On primary_expr shift to state 226
-- On new_expr shift to state 227
-- On namespace_name shift to state 102
-- On member_expr shift to state 228
-- On lambda_expr shift to state 231
-- On ident_in_name shift to state 57
-- On ident shift to state 56
-- On expr shift to state 361
-- On constant shift to state 239
-- On call_expr shift to state 240
## Reductions:

State 211:
## Known stack suffix:
## TGUIL
## LR(1) items:
primary_expr -> TGUIL . list(encaps) TGUIL [ T_XOR_EQUAL T_SR_EQUAL T_SR T_SL_EQUAL T_SL T_ROCKET T_PLUS_EQUAL T_OR_EQUAL T_OBJECT_OPERATOR T_MUL_EQUAL T_MOD_EQUAL T_MINUS_EQUAL T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DIV_EQUAL T_DEC T_CONCAT_EQUAL T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW T_AND_EQUAL TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TOPAR TOBRACE TOBRA TMUL TMOD TMINUS TGREATER TEQ TDOT TDIV TCPAR TCOMMA TCOLON TCOLCOL TCBRACE TCBRA TAND RDots EOF ]
## Transitions:
-- On T_VARIABLE shift to state 26
-- On T_ENCAPSED_AND_WHITESPACE shift to state 36
-- On T_DOLLAR_OPEN_CURLY_BRACES shift to state 37
-- On T_CURLY_OPEN shift to state 212
-- On list(encaps) shift to state 359
-- On encaps shift to state 220
## Reductions:
-- On TGUIL
--   reduce production list(encaps) ->

State 212:
## Known stack suffix:
## T_CURLY_OPEN
## LR(1) items:
encaps -> T_CURLY_OPEN . expr TCBRACE [ T_VARIABLE T_END_HEREDOC T_ENCAPSED_AND_WHITESPACE T_DOLLAR_OPEN_CURLY_BRACES T_CURLY_OPEN TGUIL TBACKQUOTE ]
## Transitions:
-- On T__AT shift to state 1
-- On T_YIELD shift to state 2
-- On T_VARIABLE shift to state 3
-- On T_UNSET_CAST shift to state 5
-- On T_TYPE shift to state 6
-- On T_TRAIT_C shift to state 7
-- On T_SUPER shift to state 8
-- On T_STRING_CAST shift to state 9
-- On T_STATIC shift to state 10
-- On T_START_HEREDOC shift to state 25
-- On T_SELF shift to state 40
-- On T_REQUIRE_ONCE shift to state 41
-- On T_REQUIRE shift to state 42
-- On T_PRINT shift to state 43
-- On T_PARENT shift to state 44
-- On T_OBJECT_CAST shift to state 45
-- On T_NEW shift to state 46
-- On T_NAMESPACE_C shift to state 49
-- On T_NAMESPACE shift to state 50
-- On T_METHOD_C shift to state 58
-- On T_METAVAR shift to state 17
-- On T_LNUMBER shift to state 59
-- On T_LIST shift to state 69
-- On T_LINE shift to state 60
-- On T_LAMBDA_OPAR shift to state 73
-- On T_ISSET shift to state 133
-- On T_INT_CAST shift to state 135
-- On T_INSTANCEOF shift to state 52
-- On T_INCLUDE_ONCE shift to state 136
-- On T_INCLUDE shift to state 137
-- On T_INC shift to state 138
-- On T_IDENT shift to state 18
-- On T_FUNC_C shift to state 61
-- On T_FUNCTION shift to state 139
-- On T_FILE shift to state 62
-- On T_EXIT shift to state 160
-- On T_EVAL shift to state 162
-- On T_ENUM shift to state 19
-- On T_EMPTY shift to state 164
-- On T_DOUBLE_CAST shift to state 168
-- On T_DNUMBER shift to state 63
-- On T_DIR shift to state 64
-- On T_DEC shift to state 169
-- On T_CONSTANT_ENCAPSED_STRING shift to state 65
-- On T_CLONE shift to state 170
-- On T_CLASS_C shift to state 66
-- On T_BOOL_CAST shift to state 171
-- On T_AWAIT shift to state 172
-- On T_ASYNC shift to state 173
-- On T_ARRAY_CAST shift to state 200
-- On T_ARRAY shift to state 201
-- On TTILDE shift to state 204
-- On TPLUS shift to state 205
-- On TOPAR shift to state 206
-- On TOBRA shift to state 209
-- On TMINUS shift to state 210
-- On TGUIL shift to state 211
-- On TDOLLARDOLLAR shift to state 213
-- On TDOLLAR shift to state 214
-- On TBANG shift to state 216
-- On TBACKQUOTE shift to state 217
-- On TANTISLASH shift to state 85
-- On LDots shift to state 222
-- On simple_expr shift to state 223
-- On qualified_name shift to state 94
-- On qualified_class_name shift to state 225
-- On primary_expr shift to state 226
-- On new_expr shift to state 227
-- On namespace_name shift to state 102
-- On member_expr shift to state 228
-- On lambda_expr shift to state 231
-- On ident_in_name shift to state 57
-- On ident shift to state 56
-- On expr shift to state 357
-- On constant shift to state 239
-- On call_expr shift to state 240
## Reductions:

State 213:
## Known stack suffix:
## TDOLLARDOLLAR
## LR(1) items:
primary_expr -> TDOLLARDOLLAR . [ T_XOR_EQUAL T_SR_EQUAL T_SR T_SL_EQUAL T_SL T_ROCKET T_PLUS_EQUAL T_OR_EQUAL T_OBJECT_OPERATOR T_MUL_EQUAL T_MOD_EQUAL T_MINUS_EQUAL T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DIV_EQUAL T_DEC T_CONCAT_EQUAL T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW T_AND_EQUAL TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TOPAR TOBRACE TOBRA TMUL TMOD TMINUS TGREATER TEQ TDOT TDIV TCPAR TCOMMA TCOLON TCOLCOL TCBRACE TCBRA TAND RDots EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production primary_expr -> TDOLLARDOLLAR

State 214:
## Known stack suffix:
## TDOLLAR
## LR(1) items:
primary_expr -> TDOLLAR . primary_expr [ T_XOR_EQUAL T_SR_EQUAL T_SR T_SL_EQUAL T_SL T_ROCKET T_PLUS_EQUAL T_OR_EQUAL T_OBJECT_OPERATOR T_MUL_EQUAL T_MOD_EQUAL T_MINUS_EQUAL T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DIV_EQUAL T_DEC T_CONCAT_EQUAL T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW T_AND_EQUAL TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TOPAR TOBRACE TOBRA TMUL TMOD TMINUS TGREATER TEQ TDOT TDIV TCPAR TCOMMA TCOLON TCOLCOL TCBRACE TCBRA TAND RDots EOF ]
primary_expr -> TDOLLAR . TOBRACE expr TCBRACE [ T_XOR_EQUAL T_SR_EQUAL T_SR T_SL_EQUAL T_SL T_ROCKET T_PLUS_EQUAL T_OR_EQUAL T_OBJECT_OPERATOR T_MUL_EQUAL T_MOD_EQUAL T_MINUS_EQUAL T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DIV_EQUAL T_DEC T_CONCAT_EQUAL T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW T_AND_EQUAL TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TOPAR TOBRACE TOBRA TMUL TMOD TMINUS TGREATER TEQ TDOT TDIV TCPAR TCOMMA TCOLON TCOLCOL TCBRACE TCBRA TAND RDots EOF ]
## Transitions:
-- On T_VARIABLE shift to state 47
-- On T_TYPE shift to state 6
-- On T_TRAIT_C shift to state 7
-- On T_SUPER shift to state 8
-- On T_STATIC shift to state 48
-- On T_START_HEREDOC shift to state 25
-- On T_SELF shift to state 40
-- On T_PARENT shift to state 44
-- On T_NAMESPACE_C shift to state 49
-- On T_NAMESPACE shift to state 50
-- On T_METHOD_C shift to state 58
-- On T_METAVAR shift to state 17
-- On T_LNUMBER shift to state 59
-- On T_LINE shift to state 60
-- On T_INSTANCEOF shift to state 52
-- On T_IDENT shift to state 18
-- On T_FUNC_C shift to state 61
-- On T_FILE shift to state 62
-- On T_ENUM shift to state 19
-- On T_DNUMBER shift to state 63
-- On T_DIR shift to state 64
-- On T_CONSTANT_ENCAPSED_STRING shift to state 65
-- On T_CLASS_C shift to state 66
-- On T_ARRAY shift to state 201
-- On TOPAR shift to state 206
-- On TOBRACE shift to state 215
-- On TOBRA shift to state 209
-- On TGUIL shift to state 211
-- On TDOLLARDOLLAR shift to state 213
-- On TDOLLAR shift to state 214
-- On TBACKQUOTE shift to state 217
-- On TANTISLASH shift to state 85
-- On LDots shift to state 222
-- On qualified_name shift to state 94
-- On qualified_class_name shift to state 225
-- On primary_expr shift to state 356
-- On namespace_name shift to state 102
-- On ident_in_name shift to state 57
-- On ident shift to state 56
-- On constant shift to state 239
## Reductions:

State 215:
## Known stack suffix:
## TDOLLAR TOBRACE
## LR(1) items:
primary_expr -> TDOLLAR TOBRACE . expr TCBRACE [ T_XOR_EQUAL T_SR_EQUAL T_SR T_SL_EQUAL T_SL T_ROCKET T_PLUS_EQUAL T_OR_EQUAL T_OBJECT_OPERATOR T_MUL_EQUAL T_MOD_EQUAL T_MINUS_EQUAL T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DIV_EQUAL T_DEC T_CONCAT_EQUAL T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW T_AND_EQUAL TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TOPAR TOBRACE TOBRA TMUL TMOD TMINUS TGREATER TEQ TDOT TDIV TCPAR TCOMMA TCOLON TCOLCOL TCBRACE TCBRA TAND RDots EOF ]
## Transitions:
-- On T__AT shift to state 1
-- On T_YIELD shift to state 2
-- On T_VARIABLE shift to state 3
-- On T_UNSET_CAST shift to state 5
-- On T_TYPE shift to state 6
-- On T_TRAIT_C shift to state 7
-- On T_SUPER shift to state 8
-- On T_STRING_CAST shift to state 9
-- On T_STATIC shift to state 10
-- On T_START_HEREDOC shift to state 25
-- On T_SELF shift to state 40
-- On T_REQUIRE_ONCE shift to state 41
-- On T_REQUIRE shift to state 42
-- On T_PRINT shift to state 43
-- On T_PARENT shift to state 44
-- On T_OBJECT_CAST shift to state 45
-- On T_NEW shift to state 46
-- On T_NAMESPACE_C shift to state 49
-- On T_NAMESPACE shift to state 50
-- On T_METHOD_C shift to state 58
-- On T_METAVAR shift to state 17
-- On T_LNUMBER shift to state 59
-- On T_LIST shift to state 69
-- On T_LINE shift to state 60
-- On T_LAMBDA_OPAR shift to state 73
-- On T_ISSET shift to state 133
-- On T_INT_CAST shift to state 135
-- On T_INSTANCEOF shift to state 52
-- On T_INCLUDE_ONCE shift to state 136
-- On T_INCLUDE shift to state 137
-- On T_INC shift to state 138
-- On T_IDENT shift to state 18
-- On T_FUNC_C shift to state 61
-- On T_FUNCTION shift to state 139
-- On T_FILE shift to state 62
-- On T_EXIT shift to state 160
-- On T_EVAL shift to state 162
-- On T_ENUM shift to state 19
-- On T_EMPTY shift to state 164
-- On T_DOUBLE_CAST shift to state 168
-- On T_DNUMBER shift to state 63
-- On T_DIR shift to state 64
-- On T_DEC shift to state 169
-- On T_CONSTANT_ENCAPSED_STRING shift to state 65
-- On T_CLONE shift to state 170
-- On T_CLASS_C shift to state 66
-- On T_BOOL_CAST shift to state 171
-- On T_AWAIT shift to state 172
-- On T_ASYNC shift to state 173
-- On T_ARRAY_CAST shift to state 200
-- On T_ARRAY shift to state 201
-- On TTILDE shift to state 204
-- On TPLUS shift to state 205
-- On TOPAR shift to state 206
-- On TOBRA shift to state 209
-- On TMINUS shift to state 210
-- On TGUIL shift to state 211
-- On TDOLLARDOLLAR shift to state 213
-- On TDOLLAR shift to state 214
-- On TBANG shift to state 216
-- On TBACKQUOTE shift to state 217
-- On TANTISLASH shift to state 85
-- On LDots shift to state 222
-- On simple_expr shift to state 223
-- On qualified_name shift to state 94
-- On qualified_class_name shift to state 225
-- On primary_expr shift to state 226
-- On new_expr shift to state 227
-- On namespace_name shift to state 102
-- On member_expr shift to state 228
-- On lambda_expr shift to state 231
-- On ident_in_name shift to state 57
-- On ident shift to state 56
-- On expr shift to state 354
-- On constant shift to state 239
-- On call_expr shift to state 240
## Reductions:

State 216:
## Known stack suffix:
## TBANG
## LR(1) items:
expr -> TBANG . expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
## Transitions:
-- On T__AT shift to state 1
-- On T_YIELD shift to state 2
-- On T_VARIABLE shift to state 3
-- On T_UNSET_CAST shift to state 5
-- On T_TYPE shift to state 6
-- On T_TRAIT_C shift to state 7
-- On T_SUPER shift to state 8
-- On T_STRING_CAST shift to state 9
-- On T_STATIC shift to state 10
-- On T_START_HEREDOC shift to state 25
-- On T_SELF shift to state 40
-- On T_REQUIRE_ONCE shift to state 41
-- On T_REQUIRE shift to state 42
-- On T_PRINT shift to state 43
-- On T_PARENT shift to state 44
-- On T_OBJECT_CAST shift to state 45
-- On T_NEW shift to state 46
-- On T_NAMESPACE_C shift to state 49
-- On T_NAMESPACE shift to state 50
-- On T_METHOD_C shift to state 58
-- On T_METAVAR shift to state 17
-- On T_LNUMBER shift to state 59
-- On T_LIST shift to state 69
-- On T_LINE shift to state 60
-- On T_LAMBDA_OPAR shift to state 73
-- On T_ISSET shift to state 133
-- On T_INT_CAST shift to state 135
-- On T_INSTANCEOF shift to state 52
-- On T_INCLUDE_ONCE shift to state 136
-- On T_INCLUDE shift to state 137
-- On T_INC shift to state 138
-- On T_IDENT shift to state 18
-- On T_FUNC_C shift to state 61
-- On T_FUNCTION shift to state 139
-- On T_FILE shift to state 62
-- On T_EXIT shift to state 160
-- On T_EVAL shift to state 162
-- On T_ENUM shift to state 19
-- On T_EMPTY shift to state 164
-- On T_DOUBLE_CAST shift to state 168
-- On T_DNUMBER shift to state 63
-- On T_DIR shift to state 64
-- On T_DEC shift to state 169
-- On T_CONSTANT_ENCAPSED_STRING shift to state 65
-- On T_CLONE shift to state 170
-- On T_CLASS_C shift to state 66
-- On T_BOOL_CAST shift to state 171
-- On T_AWAIT shift to state 172
-- On T_ASYNC shift to state 173
-- On T_ARRAY_CAST shift to state 200
-- On T_ARRAY shift to state 201
-- On TTILDE shift to state 204
-- On TPLUS shift to state 205
-- On TOPAR shift to state 206
-- On TOBRA shift to state 209
-- On TMINUS shift to state 210
-- On TGUIL shift to state 211
-- On TDOLLARDOLLAR shift to state 213
-- On TDOLLAR shift to state 214
-- On TBANG shift to state 216
-- On TBACKQUOTE shift to state 217
-- On TANTISLASH shift to state 85
-- On LDots shift to state 222
-- On simple_expr shift to state 223
-- On qualified_name shift to state 94
-- On qualified_class_name shift to state 225
-- On primary_expr shift to state 226
-- On new_expr shift to state 227
-- On namespace_name shift to state 102
-- On member_expr shift to state 228
-- On lambda_expr shift to state 231
-- On ident_in_name shift to state 57
-- On ident shift to state 56
-- On expr shift to state 353
-- On constant shift to state 239
-- On call_expr shift to state 240
## Reductions:

State 217:
## Known stack suffix:
## TBACKQUOTE
## LR(1) items:
primary_expr -> TBACKQUOTE . list(encaps) TBACKQUOTE [ T_XOR_EQUAL T_SR_EQUAL T_SR T_SL_EQUAL T_SL T_ROCKET T_PLUS_EQUAL T_OR_EQUAL T_OBJECT_OPERATOR T_MUL_EQUAL T_MOD_EQUAL T_MINUS_EQUAL T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DIV_EQUAL T_DEC T_CONCAT_EQUAL T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW T_AND_EQUAL TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TOPAR TOBRACE TOBRA TMUL TMOD TMINUS TGREATER TEQ TDOT TDIV TCPAR TCOMMA TCOLON TCOLCOL TCBRACE TCBRA TAND RDots EOF ]
## Transitions:
-- On T_VARIABLE shift to state 26
-- On T_ENCAPSED_AND_WHITESPACE shift to state 36
-- On T_DOLLAR_OPEN_CURLY_BRACES shift to state 37
-- On T_CURLY_OPEN shift to state 212
-- On list(encaps) shift to state 218
-- On encaps shift to state 220
## Reductions:
-- On TBACKQUOTE
--   reduce production list(encaps) ->

State 218:
## Known stack suffix:
## TBACKQUOTE list(encaps)
## LR(1) items:
primary_expr -> TBACKQUOTE list(encaps) . TBACKQUOTE [ T_XOR_EQUAL T_SR_EQUAL T_SR T_SL_EQUAL T_SL T_ROCKET T_PLUS_EQUAL T_OR_EQUAL T_OBJECT_OPERATOR T_MUL_EQUAL T_MOD_EQUAL T_MINUS_EQUAL T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DIV_EQUAL T_DEC T_CONCAT_EQUAL T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW T_AND_EQUAL TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TOPAR TOBRACE TOBRA TMUL TMOD TMINUS TGREATER TEQ TDOT TDIV TCPAR TCOMMA TCOLON TCOLCOL TCBRACE TCBRA TAND RDots EOF ]
## Transitions:
-- On TBACKQUOTE shift to state 219
## Reductions:

State 219:
## Known stack suffix:
## TBACKQUOTE list(encaps) TBACKQUOTE
## LR(1) items:
primary_expr -> TBACKQUOTE list(encaps) TBACKQUOTE . [ T_XOR_EQUAL T_SR_EQUAL T_SR T_SL_EQUAL T_SL T_ROCKET T_PLUS_EQUAL T_OR_EQUAL T_OBJECT_OPERATOR T_MUL_EQUAL T_MOD_EQUAL T_MINUS_EQUAL T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DIV_EQUAL T_DEC T_CONCAT_EQUAL T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW T_AND_EQUAL TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TOPAR TOBRACE TOBRA TMUL TMOD TMINUS TGREATER TEQ TDOT TDIV TCPAR TCOMMA TCOLON TCOLCOL TCBRACE TCBRA TAND RDots EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production primary_expr -> TBACKQUOTE list(encaps) TBACKQUOTE

State 220:
## Known stack suffix:
## encaps
## LR(1) items:
list(encaps) -> encaps . list(encaps) [ T_END_HEREDOC TGUIL TBACKQUOTE ]
## Transitions:
-- On T_VARIABLE shift to state 26
-- On T_ENCAPSED_AND_WHITESPACE shift to state 36
-- On T_DOLLAR_OPEN_CURLY_BRACES shift to state 37
-- On T_CURLY_OPEN shift to state 212
-- On list(encaps) shift to state 221
-- On encaps shift to state 220
## Reductions:
-- On T_END_HEREDOC TGUIL TBACKQUOTE
--   reduce production list(encaps) ->

State 221:
## Known stack suffix:
## encaps list(encaps)
## LR(1) items:
list(encaps) -> encaps list(encaps) . [ T_END_HEREDOC TGUIL TBACKQUOTE ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production list(encaps) -> encaps list(encaps)

State 222:
## Known stack suffix:
## LDots
## LR(1) items:
primary_expr -> LDots . expr RDots [ T_XOR_EQUAL T_SR_EQUAL T_SR T_SL_EQUAL T_SL T_ROCKET T_PLUS_EQUAL T_OR_EQUAL T_OBJECT_OPERATOR T_MUL_EQUAL T_MOD_EQUAL T_MINUS_EQUAL T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DIV_EQUAL T_DEC T_CONCAT_EQUAL T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW T_AND_EQUAL TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TOPAR TOBRACE TOBRA TMUL TMOD TMINUS TGREATER TEQ TDOT TDIV TCPAR TCOMMA TCOLON TCOLCOL TCBRACE TCBRA TAND RDots EOF ]
## Transitions:
-- On T__AT shift to state 1
-- On T_YIELD shift to state 2
-- On T_VARIABLE shift to state 3
-- On T_UNSET_CAST shift to state 5
-- On T_TYPE shift to state 6
-- On T_TRAIT_C shift to state 7
-- On T_SUPER shift to state 8
-- On T_STRING_CAST shift to state 9
-- On T_STATIC shift to state 10
-- On T_START_HEREDOC shift to state 25
-- On T_SELF shift to state 40
-- On T_REQUIRE_ONCE shift to state 41
-- On T_REQUIRE shift to state 42
-- On T_PRINT shift to state 43
-- On T_PARENT shift to state 44
-- On T_OBJECT_CAST shift to state 45
-- On T_NEW shift to state 46
-- On T_NAMESPACE_C shift to state 49
-- On T_NAMESPACE shift to state 50
-- On T_METHOD_C shift to state 58
-- On T_METAVAR shift to state 17
-- On T_LNUMBER shift to state 59
-- On T_LIST shift to state 69
-- On T_LINE shift to state 60
-- On T_LAMBDA_OPAR shift to state 73
-- On T_ISSET shift to state 133
-- On T_INT_CAST shift to state 135
-- On T_INSTANCEOF shift to state 52
-- On T_INCLUDE_ONCE shift to state 136
-- On T_INCLUDE shift to state 137
-- On T_INC shift to state 138
-- On T_IDENT shift to state 18
-- On T_FUNC_C shift to state 61
-- On T_FUNCTION shift to state 139
-- On T_FILE shift to state 62
-- On T_EXIT shift to state 160
-- On T_EVAL shift to state 162
-- On T_ENUM shift to state 19
-- On T_EMPTY shift to state 164
-- On T_DOUBLE_CAST shift to state 168
-- On T_DNUMBER shift to state 63
-- On T_DIR shift to state 64
-- On T_DEC shift to state 169
-- On T_CONSTANT_ENCAPSED_STRING shift to state 65
-- On T_CLONE shift to state 170
-- On T_CLASS_C shift to state 66
-- On T_BOOL_CAST shift to state 171
-- On T_AWAIT shift to state 172
-- On T_ASYNC shift to state 173
-- On T_ARRAY_CAST shift to state 200
-- On T_ARRAY shift to state 201
-- On TTILDE shift to state 204
-- On TPLUS shift to state 205
-- On TOPAR shift to state 206
-- On TOBRA shift to state 209
-- On TMINUS shift to state 210
-- On TGUIL shift to state 211
-- On TDOLLARDOLLAR shift to state 213
-- On TDOLLAR shift to state 214
-- On TBANG shift to state 216
-- On TBACKQUOTE shift to state 217
-- On TANTISLASH shift to state 85
-- On LDots shift to state 222
-- On simple_expr shift to state 223
-- On qualified_name shift to state 94
-- On qualified_class_name shift to state 225
-- On primary_expr shift to state 226
-- On new_expr shift to state 227
-- On namespace_name shift to state 102
-- On member_expr shift to state 228
-- On lambda_expr shift to state 231
-- On ident_in_name shift to state 57
-- On ident shift to state 56
-- On expr shift to state 351
-- On constant shift to state 239
-- On call_expr shift to state 240
## Reductions:

State 223:
## Known stack suffix:
## simple_expr
## LR(1) items:
expr -> simple_expr . [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> simple_expr . TEQ expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> simple_expr . TEQ TAND expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> simple_expr . T_PLUS_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> simple_expr . T_MINUS_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> simple_expr . T_MUL_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> simple_expr . T_DIV_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> simple_expr . T_MOD_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> simple_expr . T_AND_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> simple_expr . T_OR_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> simple_expr . T_XOR_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> simple_expr . T_SL_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> simple_expr . T_SR_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> simple_expr . T_CONCAT_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
## Transitions:
-- On T_XOR_EQUAL shift to state 224
-- On T_SR_EQUAL shift to state 327
-- On T_SL_EQUAL shift to state 329
-- On T_PLUS_EQUAL shift to state 331
-- On T_OR_EQUAL shift to state 333
-- On T_MUL_EQUAL shift to state 335
-- On T_MOD_EQUAL shift to state 337
-- On T_MINUS_EQUAL shift to state 339
-- On T_DIV_EQUAL shift to state 341
-- On T_CONCAT_EQUAL shift to state 343
-- On T_AND_EQUAL shift to state 345
-- On TEQ shift to state 347
## Reductions:
-- On T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF
--   reduce production expr -> simple_expr

State 224:
## Known stack suffix:
## simple_expr T_XOR_EQUAL
## LR(1) items:
expr -> simple_expr T_XOR_EQUAL . expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
## Transitions:
-- On T__AT shift to state 1
-- On T_YIELD shift to state 2
-- On T_VARIABLE shift to state 3
-- On T_UNSET_CAST shift to state 5
-- On T_TYPE shift to state 6
-- On T_TRAIT_C shift to state 7
-- On T_SUPER shift to state 8
-- On T_STRING_CAST shift to state 9
-- On T_STATIC shift to state 10
-- On T_START_HEREDOC shift to state 25
-- On T_SELF shift to state 40
-- On T_REQUIRE_ONCE shift to state 41
-- On T_REQUIRE shift to state 42
-- On T_PRINT shift to state 43
-- On T_PARENT shift to state 44
-- On T_OBJECT_CAST shift to state 45
-- On T_NEW shift to state 46
-- On T_NAMESPACE_C shift to state 49
-- On T_NAMESPACE shift to state 50
-- On T_METHOD_C shift to state 58
-- On T_METAVAR shift to state 17
-- On T_LNUMBER shift to state 59
-- On T_LIST shift to state 69
-- On T_LINE shift to state 60
-- On T_LAMBDA_OPAR shift to state 73
-- On T_ISSET shift to state 133
-- On T_INT_CAST shift to state 135
-- On T_INSTANCEOF shift to state 52
-- On T_INCLUDE_ONCE shift to state 136
-- On T_INCLUDE shift to state 137
-- On T_INC shift to state 138
-- On T_IDENT shift to state 18
-- On T_FUNC_C shift to state 61
-- On T_FUNCTION shift to state 139
-- On T_FILE shift to state 62
-- On T_EXIT shift to state 160
-- On T_EVAL shift to state 162
-- On T_ENUM shift to state 19
-- On T_EMPTY shift to state 164
-- On T_DOUBLE_CAST shift to state 168
-- On T_DNUMBER shift to state 63
-- On T_DIR shift to state 64
-- On T_DEC shift to state 169
-- On T_CONSTANT_ENCAPSED_STRING shift to state 65
-- On T_CLONE shift to state 170
-- On T_CLASS_C shift to state 66
-- On T_BOOL_CAST shift to state 171
-- On T_AWAIT shift to state 172
-- On T_ASYNC shift to state 173
-- On T_ARRAY_CAST shift to state 200
-- On T_ARRAY shift to state 201
-- On TTILDE shift to state 204
-- On TPLUS shift to state 205
-- On TOPAR shift to state 206
-- On TOBRA shift to state 209
-- On TMINUS shift to state 210
-- On TGUIL shift to state 211
-- On TDOLLARDOLLAR shift to state 213
-- On TDOLLAR shift to state 214
-- On TBANG shift to state 216
-- On TBACKQUOTE shift to state 217
-- On TANTISLASH shift to state 85
-- On LDots shift to state 222
-- On simple_expr shift to state 223
-- On qualified_name shift to state 94
-- On qualified_class_name shift to state 225
-- On primary_expr shift to state 226
-- On new_expr shift to state 227
-- On namespace_name shift to state 102
-- On member_expr shift to state 228
-- On lambda_expr shift to state 231
-- On ident_in_name shift to state 57
-- On ident shift to state 56
-- On expr shift to state 326
-- On constant shift to state 239
-- On call_expr shift to state 240
## Reductions:

State 225:
## Known stack suffix:
## qualified_class_name
## LR(1) items:
primary_expr -> qualified_class_name . [ T_XOR_EQUAL T_SR_EQUAL T_SR T_SL_EQUAL T_SL T_ROCKET T_PLUS_EQUAL T_OR_EQUAL T_OBJECT_OPERATOR T_MUL_EQUAL T_MOD_EQUAL T_MINUS_EQUAL T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DIV_EQUAL T_DEC T_CONCAT_EQUAL T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW T_AND_EQUAL TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TOPAR TOBRACE TOBRA TMUL TMOD TMINUS TGREATER TEQ TDOT TDIV TCPAR TCOMMA TCOLON TCOLCOL TCBRACE TCBRA TAND RDots EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production primary_expr -> qualified_class_name

State 226:
## Known stack suffix:
## primary_expr
## LR(1) items:
member_expr -> primary_expr . [ T_XOR_EQUAL T_SR_EQUAL T_SR T_SL_EQUAL T_SL T_ROCKET T_PLUS_EQUAL T_OR_EQUAL T_OBJECT_OPERATOR T_MUL_EQUAL T_MOD_EQUAL T_MINUS_EQUAL T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DIV_EQUAL T_DEC T_CONCAT_EQUAL T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW T_AND_EQUAL TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TOPAR TOBRACE TOBRA TMUL TMOD TMINUS TGREATER TEQ TDOT TDIV TCPAR TCOMMA TCOLON TCOLCOL TCBRACE TCBRA TAND RDots EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production member_expr -> primary_expr

State 227:
## Known stack suffix:
## new_expr
## LR(1) items:
simple_expr -> new_expr . [ T_XOR_EQUAL T_SR_EQUAL T_SR T_SL_EQUAL T_SL T_ROCKET T_PLUS_EQUAL T_OR_EQUAL T_MUL_EQUAL T_MOD_EQUAL T_MINUS_EQUAL T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DIV_EQUAL T_DEC T_CONCAT_EQUAL T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW T_AND_EQUAL TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TEQ TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production simple_expr -> new_expr

State 228:
## Known stack suffix:
## member_expr
## LR(1) items:
call_expr -> member_expr . arguments [ T_XOR_EQUAL T_SR_EQUAL T_SR T_SL_EQUAL T_SL T_ROCKET T_PLUS_EQUAL T_OR_EQUAL T_OBJECT_OPERATOR T_MUL_EQUAL T_MOD_EQUAL T_MINUS_EQUAL T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DIV_EQUAL T_DEC T_CONCAT_EQUAL T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW T_AND_EQUAL TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TOPAR TOBRACE TOBRA TMUL TMOD TMINUS TGREATER TEQ TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
member_expr -> member_expr . TOBRA dim_offset TCBRA [ T_XOR_EQUAL T_SR_EQUAL T_SR T_SL_EQUAL T_SL T_ROCKET T_PLUS_EQUAL T_OR_EQUAL T_OBJECT_OPERATOR T_MUL_EQUAL T_MOD_EQUAL T_MINUS_EQUAL T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DIV_EQUAL T_DEC T_CONCAT_EQUAL T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW T_AND_EQUAL TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TOPAR TOBRACE TOBRA TMUL TMOD TMINUS TGREATER TEQ TDOT TDIV TCPAR TCOMMA TCOLON TCOLCOL TCBRACE TCBRA TAND RDots EOF ]
member_expr -> member_expr . TOBRACE expr TCBRACE [ T_XOR_EQUAL T_SR_EQUAL T_SR T_SL_EQUAL T_SL T_ROCKET T_PLUS_EQUAL T_OR_EQUAL T_OBJECT_OPERATOR T_MUL_EQUAL T_MOD_EQUAL T_MINUS_EQUAL T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DIV_EQUAL T_DEC T_CONCAT_EQUAL T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW T_AND_EQUAL TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TOPAR TOBRACE TOBRA TMUL TMOD TMINUS TGREATER TEQ TDOT TDIV TCPAR TCOMMA TCOLON TCOLCOL TCBRACE TCBRA TAND RDots EOF ]
member_expr -> member_expr . T_OBJECT_OPERATOR primary_expr [ T_XOR_EQUAL T_SR_EQUAL T_SR T_SL_EQUAL T_SL T_ROCKET T_PLUS_EQUAL T_OR_EQUAL T_OBJECT_OPERATOR T_MUL_EQUAL T_MOD_EQUAL T_MINUS_EQUAL T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DIV_EQUAL T_DEC T_CONCAT_EQUAL T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW T_AND_EQUAL TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TOPAR TOBRACE TOBRA TMUL TMOD TMINUS TGREATER TEQ TDOT TDIV TCPAR TCOMMA TCOLON TCOLCOL TCBRACE TCBRA TAND RDots EOF ]
member_expr -> member_expr . T_OBJECT_OPERATOR TOBRACE expr TCBRACE [ T_XOR_EQUAL T_SR_EQUAL T_SR T_SL_EQUAL T_SL T_ROCKET T_PLUS_EQUAL T_OR_EQUAL T_OBJECT_OPERATOR T_MUL_EQUAL T_MOD_EQUAL T_MINUS_EQUAL T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DIV_EQUAL T_DEC T_CONCAT_EQUAL T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW T_AND_EQUAL TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TOPAR TOBRACE TOBRA TMUL TMOD TMINUS TGREATER TEQ TDOT TDIV TCPAR TCOMMA TCOLON TCOLCOL TCBRACE TCBRA TAND RDots EOF ]
member_expr -> member_expr . TCOLCOL primary_expr [ T_XOR_EQUAL T_SR_EQUAL T_SR T_SL_EQUAL T_SL T_ROCKET T_PLUS_EQUAL T_OR_EQUAL T_OBJECT_OPERATOR T_MUL_EQUAL T_MOD_EQUAL T_MINUS_EQUAL T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DIV_EQUAL T_DEC T_CONCAT_EQUAL T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW T_AND_EQUAL TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TOPAR TOBRACE TOBRA TMUL TMOD TMINUS TGREATER TEQ TDOT TDIV TCPAR TCOMMA TCOLON TCOLCOL TCBRACE TCBRA TAND RDots EOF ]
member_expr -> member_expr . TCOLCOL T_CLASS [ T_XOR_EQUAL T_SR_EQUAL T_SR T_SL_EQUAL T_SL T_ROCKET T_PLUS_EQUAL T_OR_EQUAL T_OBJECT_OPERATOR T_MUL_EQUAL T_MOD_EQUAL T_MINUS_EQUAL T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DIV_EQUAL T_DEC T_CONCAT_EQUAL T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW T_AND_EQUAL TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TOPAR TOBRACE TOBRA TMUL TMOD TMINUS TGREATER TEQ TDOT TDIV TCPAR TCOMMA TCOLON TCOLCOL TCBRACE TCBRA TAND RDots EOF ]
new_expr -> member_expr . [ T_XOR_EQUAL T_SR_EQUAL T_SR T_SL_EQUAL T_SL T_ROCKET T_PLUS_EQUAL T_OR_EQUAL T_MUL_EQUAL T_MOD_EQUAL T_MINUS_EQUAL T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DIV_EQUAL T_DEC T_CONCAT_EQUAL T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW T_AND_EQUAL TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TEQ TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
## Transitions:
-- On T_OBJECT_OPERATOR shift to state 229
-- On TOPAR shift to state 68
-- On TOBRACE shift to state 316
-- On TOBRA shift to state 319
-- On TCOLCOL shift to state 322
-- On arguments shift to state 325
## Reductions:
-- On T_XOR_EQUAL T_SR_EQUAL T_SR T_SL_EQUAL T_SL T_ROCKET T_PLUS_EQUAL T_OR_EQUAL T_MUL_EQUAL T_MOD_EQUAL T_MINUS_EQUAL T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DIV_EQUAL T_DEC T_CONCAT_EQUAL T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW T_AND_EQUAL TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TEQ TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF
--   reduce production new_expr -> member_expr

State 229:
## Known stack suffix:
## member_expr T_OBJECT_OPERATOR
## LR(1) items:
member_expr -> member_expr T_OBJECT_OPERATOR . primary_expr [ T_XOR_EQUAL T_SR_EQUAL T_SR T_SL_EQUAL T_SL T_ROCKET T_PLUS_EQUAL T_OR_EQUAL T_OBJECT_OPERATOR T_MUL_EQUAL T_MOD_EQUAL T_MINUS_EQUAL T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DIV_EQUAL T_DEC T_CONCAT_EQUAL T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW T_AND_EQUAL TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TOPAR TOBRACE TOBRA TMUL TMOD TMINUS TGREATER TEQ TDOT TDIV TCPAR TCOMMA TCOLON TCOLCOL TCBRACE TCBRA TAND RDots EOF ]
member_expr -> member_expr T_OBJECT_OPERATOR . TOBRACE expr TCBRACE [ T_XOR_EQUAL T_SR_EQUAL T_SR T_SL_EQUAL T_SL T_ROCKET T_PLUS_EQUAL T_OR_EQUAL T_OBJECT_OPERATOR T_MUL_EQUAL T_MOD_EQUAL T_MINUS_EQUAL T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DIV_EQUAL T_DEC T_CONCAT_EQUAL T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW T_AND_EQUAL TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TOPAR TOBRACE TOBRA TMUL TMOD TMINUS TGREATER TEQ TDOT TDIV TCPAR TCOMMA TCOLON TCOLCOL TCBRACE TCBRA TAND RDots EOF ]
## Transitions:
-- On T_VARIABLE shift to state 47
-- On T_TYPE shift to state 6
-- On T_TRAIT_C shift to state 7
-- On T_SUPER shift to state 8
-- On T_STATIC shift to state 48
-- On T_START_HEREDOC shift to state 25
-- On T_SELF shift to state 40
-- On T_PARENT shift to state 44
-- On T_NAMESPACE_C shift to state 49
-- On T_NAMESPACE shift to state 50
-- On T_METHOD_C shift to state 58
-- On T_METAVAR shift to state 17
-- On T_LNUMBER shift to state 59
-- On T_LINE shift to state 60
-- On T_INSTANCEOF shift to state 52
-- On T_IDENT shift to state 18
-- On T_FUNC_C shift to state 61
-- On T_FILE shift to state 62
-- On T_ENUM shift to state 19
-- On T_DNUMBER shift to state 63
-- On T_DIR shift to state 64
-- On T_CONSTANT_ENCAPSED_STRING shift to state 65
-- On T_CLASS_C shift to state 66
-- On T_ARRAY shift to state 201
-- On TOPAR shift to state 206
-- On TOBRACE shift to state 230
-- On TOBRA shift to state 209
-- On TGUIL shift to state 211
-- On TDOLLARDOLLAR shift to state 213
-- On TDOLLAR shift to state 214
-- On TBACKQUOTE shift to state 217
-- On TANTISLASH shift to state 85
-- On LDots shift to state 222
-- On qualified_name shift to state 94
-- On qualified_class_name shift to state 225
-- On primary_expr shift to state 315
-- On namespace_name shift to state 102
-- On ident_in_name shift to state 57
-- On ident shift to state 56
-- On constant shift to state 239
## Reductions:

State 230:
## Known stack suffix:
## member_expr T_OBJECT_OPERATOR TOBRACE
## LR(1) items:
member_expr -> member_expr T_OBJECT_OPERATOR TOBRACE . expr TCBRACE [ T_XOR_EQUAL T_SR_EQUAL T_SR T_SL_EQUAL T_SL T_ROCKET T_PLUS_EQUAL T_OR_EQUAL T_OBJECT_OPERATOR T_MUL_EQUAL T_MOD_EQUAL T_MINUS_EQUAL T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DIV_EQUAL T_DEC T_CONCAT_EQUAL T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW T_AND_EQUAL TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TOPAR TOBRACE TOBRA TMUL TMOD TMINUS TGREATER TEQ TDOT TDIV TCPAR TCOMMA TCOLON TCOLCOL TCBRACE TCBRA TAND RDots EOF ]
## Transitions:
-- On T__AT shift to state 1
-- On T_YIELD shift to state 2
-- On T_VARIABLE shift to state 3
-- On T_UNSET_CAST shift to state 5
-- On T_TYPE shift to state 6
-- On T_TRAIT_C shift to state 7
-- On T_SUPER shift to state 8
-- On T_STRING_CAST shift to state 9
-- On T_STATIC shift to state 10
-- On T_START_HEREDOC shift to state 25
-- On T_SELF shift to state 40
-- On T_REQUIRE_ONCE shift to state 41
-- On T_REQUIRE shift to state 42
-- On T_PRINT shift to state 43
-- On T_PARENT shift to state 44
-- On T_OBJECT_CAST shift to state 45
-- On T_NEW shift to state 46
-- On T_NAMESPACE_C shift to state 49
-- On T_NAMESPACE shift to state 50
-- On T_METHOD_C shift to state 58
-- On T_METAVAR shift to state 17
-- On T_LNUMBER shift to state 59
-- On T_LIST shift to state 69
-- On T_LINE shift to state 60
-- On T_LAMBDA_OPAR shift to state 73
-- On T_ISSET shift to state 133
-- On T_INT_CAST shift to state 135
-- On T_INSTANCEOF shift to state 52
-- On T_INCLUDE_ONCE shift to state 136
-- On T_INCLUDE shift to state 137
-- On T_INC shift to state 138
-- On T_IDENT shift to state 18
-- On T_FUNC_C shift to state 61
-- On T_FUNCTION shift to state 139
-- On T_FILE shift to state 62
-- On T_EXIT shift to state 160
-- On T_EVAL shift to state 162
-- On T_ENUM shift to state 19
-- On T_EMPTY shift to state 164
-- On T_DOUBLE_CAST shift to state 168
-- On T_DNUMBER shift to state 63
-- On T_DIR shift to state 64
-- On T_DEC shift to state 169
-- On T_CONSTANT_ENCAPSED_STRING shift to state 65
-- On T_CLONE shift to state 170
-- On T_CLASS_C shift to state 66
-- On T_BOOL_CAST shift to state 171
-- On T_AWAIT shift to state 172
-- On T_ASYNC shift to state 173
-- On T_ARRAY_CAST shift to state 200
-- On T_ARRAY shift to state 201
-- On TTILDE shift to state 204
-- On TPLUS shift to state 205
-- On TOPAR shift to state 206
-- On TOBRA shift to state 209
-- On TMINUS shift to state 210
-- On TGUIL shift to state 211
-- On TDOLLARDOLLAR shift to state 213
-- On TDOLLAR shift to state 214
-- On TBANG shift to state 216
-- On TBACKQUOTE shift to state 217
-- On TANTISLASH shift to state 85
-- On LDots shift to state 222
-- On simple_expr shift to state 223
-- On qualified_name shift to state 94
-- On qualified_class_name shift to state 225
-- On primary_expr shift to state 226
-- On new_expr shift to state 227
-- On namespace_name shift to state 102
-- On member_expr shift to state 228
-- On lambda_expr shift to state 231
-- On ident_in_name shift to state 57
-- On ident shift to state 56
-- On expr shift to state 232
-- On constant shift to state 239
-- On call_expr shift to state 240
## Reductions:

State 231:
## Known stack suffix:
## lambda_expr
## LR(1) items:
expr -> lambda_expr . [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production expr -> lambda_expr

State 232:
## Known stack suffix:
## member_expr T_OBJECT_OPERATOR TOBRACE expr
## LR(1) items:
expr -> expr . T_INC [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCBRACE TAND ]
expr -> expr . T_DEC [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCBRACE TAND ]
expr -> expr . T_BOOLEAN_OR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCBRACE TAND ]
expr -> expr . T_BOOLEAN_AND expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCBRACE TAND ]
expr -> expr . T_LOGICAL_OR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCBRACE TAND ]
expr -> expr . T_LOGICAL_AND expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCBRACE TAND ]
expr -> expr . T_LOGICAL_XOR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCBRACE TAND ]
expr -> expr . TPLUS expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCBRACE TAND ]
expr -> expr . TMINUS expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCBRACE TAND ]
expr -> expr . TMUL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCBRACE TAND ]
expr -> expr . TDIV expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCBRACE TAND ]
expr -> expr . TMOD expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCBRACE TAND ]
expr -> expr . TPOW expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCBRACE TAND ]
expr -> expr . TAND expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCBRACE TAND ]
expr -> expr . TOR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCBRACE TAND ]
expr -> expr . TXOR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCBRACE TAND ]
expr -> expr . T_SL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCBRACE TAND ]
expr -> expr . T_SR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCBRACE TAND ]
expr -> expr . TDOT expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCBRACE TAND ]
expr -> expr . T_IS_IDENTICAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCBRACE TAND ]
expr -> expr . T_IS_NOT_IDENTICAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCBRACE TAND ]
expr -> expr . T_IS_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCBRACE TAND ]
expr -> expr . T_IS_NOT_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCBRACE TAND ]
expr -> expr . TSMALLER expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCBRACE TAND ]
expr -> expr . T_IS_SMALLER_OR_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCBRACE TAND ]
expr -> expr . TGREATER expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCBRACE TAND ]
expr -> expr . T_IS_GREATER_OR_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCBRACE TAND ]
expr -> expr . T_ROCKET expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCBRACE TAND ]
expr -> expr . TQUESTION expr TCOLON expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCBRACE TAND ]
expr -> expr . TQUESTION TCOLON expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCBRACE TAND ]
expr -> expr . TQUESTION TQUESTION expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCBRACE TAND ]
expr -> expr . T_INSTANCEOF expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCBRACE TAND ]
member_expr -> member_expr T_OBJECT_OPERATOR TOBRACE expr . TCBRACE [ T_XOR_EQUAL T_SR_EQUAL T_SR T_SL_EQUAL T_SL T_ROCKET T_PLUS_EQUAL T_OR_EQUAL T_OBJECT_OPERATOR T_MUL_EQUAL T_MOD_EQUAL T_MINUS_EQUAL T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DIV_EQUAL T_DEC T_CONCAT_EQUAL T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW T_AND_EQUAL TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TOPAR TOBRACE TOBRA TMUL TMOD TMINUS TGREATER TEQ TDOT TDIV TCPAR TCOMMA TCOLON TCOLCOL TCBRACE TCBRA TAND RDots EOF ]
## Transitions:
-- On T_SR shift to state 233
-- On T_SL shift to state 244
-- On T_ROCKET shift to state 260
-- On T_LOGICAL_XOR shift to state 270
-- On T_LOGICAL_OR shift to state 298
-- On T_LOGICAL_AND shift to state 272
-- On T_IS_SMALLER_OR_EQUAL shift to state 262
-- On T_IS_NOT_IDENTICAL shift to state 274
-- On T_IS_NOT_EQUAL shift to state 276
-- On T_IS_IDENTICAL shift to state 278
-- On T_IS_GREATER_OR_EQUAL shift to state 264
-- On T_IS_EQUAL shift to state 280
-- On T_INSTANCEOF shift to state 235
-- On T_INC shift to state 237
-- On T_DEC shift to state 238
-- On T_BOOLEAN_OR shift to state 282
-- On T_BOOLEAN_AND shift to state 284
-- On TXOR shift to state 286
-- On TSMALLER shift to state 266
-- On TQUESTION shift to state 292
-- On TPOW shift to state 246
-- On TPLUS shift to state 248
-- On TOR shift to state 290
-- On TMUL shift to state 250
-- On TMOD shift to state 252
-- On TMINUS shift to state 256
-- On TGREATER shift to state 268
-- On TDOT shift to state 258
-- On TDIV shift to state 254
-- On TCBRACE shift to state 314
-- On TAND shift to state 288
## Reductions:

State 233:
## Known stack suffix:
## expr T_SR
## LR(1) items:
expr -> expr T_SR . expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
## Transitions:
-- On T__AT shift to state 1
-- On T_YIELD shift to state 2
-- On T_VARIABLE shift to state 3
-- On T_UNSET_CAST shift to state 5
-- On T_TYPE shift to state 6
-- On T_TRAIT_C shift to state 7
-- On T_SUPER shift to state 8
-- On T_STRING_CAST shift to state 9
-- On T_STATIC shift to state 10
-- On T_START_HEREDOC shift to state 25
-- On T_SELF shift to state 40
-- On T_REQUIRE_ONCE shift to state 41
-- On T_REQUIRE shift to state 42
-- On T_PRINT shift to state 43
-- On T_PARENT shift to state 44
-- On T_OBJECT_CAST shift to state 45
-- On T_NEW shift to state 46
-- On T_NAMESPACE_C shift to state 49
-- On T_NAMESPACE shift to state 50
-- On T_METHOD_C shift to state 58
-- On T_METAVAR shift to state 17
-- On T_LNUMBER shift to state 59
-- On T_LIST shift to state 69
-- On T_LINE shift to state 60
-- On T_LAMBDA_OPAR shift to state 73
-- On T_ISSET shift to state 133
-- On T_INT_CAST shift to state 135
-- On T_INSTANCEOF shift to state 52
-- On T_INCLUDE_ONCE shift to state 136
-- On T_INCLUDE shift to state 137
-- On T_INC shift to state 138
-- On T_IDENT shift to state 18
-- On T_FUNC_C shift to state 61
-- On T_FUNCTION shift to state 139
-- On T_FILE shift to state 62
-- On T_EXIT shift to state 160
-- On T_EVAL shift to state 162
-- On T_ENUM shift to state 19
-- On T_EMPTY shift to state 164
-- On T_DOUBLE_CAST shift to state 168
-- On T_DNUMBER shift to state 63
-- On T_DIR shift to state 64
-- On T_DEC shift to state 169
-- On T_CONSTANT_ENCAPSED_STRING shift to state 65
-- On T_CLONE shift to state 170
-- On T_CLASS_C shift to state 66
-- On T_BOOL_CAST shift to state 171
-- On T_AWAIT shift to state 172
-- On T_ASYNC shift to state 173
-- On T_ARRAY_CAST shift to state 200
-- On T_ARRAY shift to state 201
-- On TTILDE shift to state 204
-- On TPLUS shift to state 205
-- On TOPAR shift to state 206
-- On TOBRA shift to state 209
-- On TMINUS shift to state 210
-- On TGUIL shift to state 211
-- On TDOLLARDOLLAR shift to state 213
-- On TDOLLAR shift to state 214
-- On TBANG shift to state 216
-- On TBACKQUOTE shift to state 217
-- On TANTISLASH shift to state 85
-- On LDots shift to state 222
-- On simple_expr shift to state 223
-- On qualified_name shift to state 94
-- On qualified_class_name shift to state 225
-- On primary_expr shift to state 226
-- On new_expr shift to state 227
-- On namespace_name shift to state 102
-- On member_expr shift to state 228
-- On lambda_expr shift to state 231
-- On ident_in_name shift to state 57
-- On ident shift to state 56
-- On expr shift to state 234
-- On constant shift to state 239
-- On call_expr shift to state 240
## Reductions:

State 234:
## Known stack suffix:
## expr T_SR expr
## LR(1) items:
expr -> expr . T_INC [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_DEC [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_BOOLEAN_OR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_BOOLEAN_AND expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_LOGICAL_OR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_LOGICAL_AND expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_LOGICAL_XOR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TPLUS expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TMINUS expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TMUL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TDIV expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TMOD expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TPOW expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TAND expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TOR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TXOR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_SL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_SR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr T_SR expr . [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TDOT expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_IDENTICAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_NOT_IDENTICAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_NOT_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TSMALLER expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_SMALLER_OR_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TGREATER expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_GREATER_OR_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_ROCKET expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TQUESTION expr TCOLON expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TQUESTION TCOLON expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TQUESTION TQUESTION expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_INSTANCEOF expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
## Transitions:
-- On T_INSTANCEOF shift to state 235
-- On T_INC shift to state 237
-- On T_DEC shift to state 238
-- On TPOW shift to state 246
-- On TPLUS shift to state 248
-- On TMUL shift to state 250
-- On TMOD shift to state 252
-- On TMINUS shift to state 256
-- On TDOT shift to state 258
-- On TDIV shift to state 254
## Reductions:
-- On T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TOR TGREATER TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF
--   reduce production expr -> expr T_SR expr

State 235:
## Known stack suffix:
## expr T_INSTANCEOF
## LR(1) items:
expr -> expr T_INSTANCEOF . expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
## Transitions:
-- On T__AT shift to state 1
-- On T_YIELD shift to state 2
-- On T_VARIABLE shift to state 3
-- On T_UNSET_CAST shift to state 5
-- On T_TYPE shift to state 6
-- On T_TRAIT_C shift to state 7
-- On T_SUPER shift to state 8
-- On T_STRING_CAST shift to state 9
-- On T_STATIC shift to state 10
-- On T_START_HEREDOC shift to state 25
-- On T_SELF shift to state 40
-- On T_REQUIRE_ONCE shift to state 41
-- On T_REQUIRE shift to state 42
-- On T_PRINT shift to state 43
-- On T_PARENT shift to state 44
-- On T_OBJECT_CAST shift to state 45
-- On T_NEW shift to state 46
-- On T_NAMESPACE_C shift to state 49
-- On T_NAMESPACE shift to state 50
-- On T_METHOD_C shift to state 58
-- On T_METAVAR shift to state 17
-- On T_LNUMBER shift to state 59
-- On T_LIST shift to state 69
-- On T_LINE shift to state 60
-- On T_LAMBDA_OPAR shift to state 73
-- On T_ISSET shift to state 133
-- On T_INT_CAST shift to state 135
-- On T_INSTANCEOF shift to state 52
-- On T_INCLUDE_ONCE shift to state 136
-- On T_INCLUDE shift to state 137
-- On T_INC shift to state 138
-- On T_IDENT shift to state 18
-- On T_FUNC_C shift to state 61
-- On T_FUNCTION shift to state 139
-- On T_FILE shift to state 62
-- On T_EXIT shift to state 160
-- On T_EVAL shift to state 162
-- On T_ENUM shift to state 19
-- On T_EMPTY shift to state 164
-- On T_DOUBLE_CAST shift to state 168
-- On T_DNUMBER shift to state 63
-- On T_DIR shift to state 64
-- On T_DEC shift to state 169
-- On T_CONSTANT_ENCAPSED_STRING shift to state 65
-- On T_CLONE shift to state 170
-- On T_CLASS_C shift to state 66
-- On T_BOOL_CAST shift to state 171
-- On T_AWAIT shift to state 172
-- On T_ASYNC shift to state 173
-- On T_ARRAY_CAST shift to state 200
-- On T_ARRAY shift to state 201
-- On TTILDE shift to state 204
-- On TPLUS shift to state 205
-- On TOPAR shift to state 206
-- On TOBRA shift to state 209
-- On TMINUS shift to state 210
-- On TGUIL shift to state 211
-- On TDOLLARDOLLAR shift to state 213
-- On TDOLLAR shift to state 214
-- On TBANG shift to state 216
-- On TBACKQUOTE shift to state 217
-- On TANTISLASH shift to state 85
-- On LDots shift to state 222
-- On simple_expr shift to state 223
-- On qualified_name shift to state 94
-- On qualified_class_name shift to state 225
-- On primary_expr shift to state 226
-- On new_expr shift to state 227
-- On namespace_name shift to state 102
-- On member_expr shift to state 228
-- On lambda_expr shift to state 231
-- On ident_in_name shift to state 57
-- On ident shift to state 56
-- On expr shift to state 236
-- On constant shift to state 239
-- On call_expr shift to state 240
## Reductions:

State 236:
## Known stack suffix:
## expr T_INSTANCEOF expr
## LR(1) items:
expr -> expr . T_INC [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_DEC [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_BOOLEAN_OR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_BOOLEAN_AND expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_LOGICAL_OR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_LOGICAL_AND expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_LOGICAL_XOR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TPLUS expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TMINUS expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TMUL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TDIV expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TMOD expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TPOW expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TAND expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TOR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TXOR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_SL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_SR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TDOT expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_IDENTICAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_NOT_IDENTICAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_NOT_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TSMALLER expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_SMALLER_OR_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TGREATER expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_GREATER_OR_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_ROCKET expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TQUESTION expr TCOLON expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TQUESTION TCOLON expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TQUESTION TQUESTION expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_INSTANCEOF expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr T_INSTANCEOF expr . [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
## Transitions:
-- On T_INC shift to state 237
-- On T_DEC shift to state 238
## Reductions:
-- On T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF
--   reduce production expr -> expr T_INSTANCEOF expr

State 237:
## Known stack suffix:
## expr T_INC
## LR(1) items:
expr -> expr T_INC . [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production expr -> expr T_INC

State 238:
## Known stack suffix:
## expr T_DEC
## LR(1) items:
expr -> expr T_DEC . [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production expr -> expr T_DEC

State 239:
## Known stack suffix:
## constant
## LR(1) items:
primary_expr -> constant . [ T_XOR_EQUAL T_SR_EQUAL T_SR T_SL_EQUAL T_SL T_ROCKET T_PLUS_EQUAL T_OR_EQUAL T_OBJECT_OPERATOR T_MUL_EQUAL T_MOD_EQUAL T_MINUS_EQUAL T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DIV_EQUAL T_DEC T_CONCAT_EQUAL T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW T_AND_EQUAL TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TOPAR TOBRACE TOBRA TMUL TMOD TMINUS TGREATER TEQ TDOT TDIV TCPAR TCOMMA TCOLON TCOLCOL TCBRACE TCBRA TAND RDots EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production primary_expr -> constant

State 240:
## Known stack suffix:
## call_expr
## LR(1) items:
call_expr -> call_expr . arguments [ T_XOR_EQUAL T_SR_EQUAL T_SR T_SL_EQUAL T_SL T_ROCKET T_PLUS_EQUAL T_OR_EQUAL T_OBJECT_OPERATOR T_MUL_EQUAL T_MOD_EQUAL T_MINUS_EQUAL T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DIV_EQUAL T_DEC T_CONCAT_EQUAL T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW T_AND_EQUAL TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TOPAR TOBRACE TOBRA TMUL TMOD TMINUS TGREATER TEQ TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
call_expr -> call_expr . TOBRA dim_offset TCBRA [ T_XOR_EQUAL T_SR_EQUAL T_SR T_SL_EQUAL T_SL T_ROCKET T_PLUS_EQUAL T_OR_EQUAL T_OBJECT_OPERATOR T_MUL_EQUAL T_MOD_EQUAL T_MINUS_EQUAL T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DIV_EQUAL T_DEC T_CONCAT_EQUAL T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW T_AND_EQUAL TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TOPAR TOBRACE TOBRA TMUL TMOD TMINUS TGREATER TEQ TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
call_expr -> call_expr . TOBRACE expr TCBRACE [ T_XOR_EQUAL T_SR_EQUAL T_SR T_SL_EQUAL T_SL T_ROCKET T_PLUS_EQUAL T_OR_EQUAL T_OBJECT_OPERATOR T_MUL_EQUAL T_MOD_EQUAL T_MINUS_EQUAL T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DIV_EQUAL T_DEC T_CONCAT_EQUAL T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW T_AND_EQUAL TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TOPAR TOBRACE TOBRA TMUL TMOD TMINUS TGREATER TEQ TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
call_expr -> call_expr . T_OBJECT_OPERATOR primary_expr [ T_XOR_EQUAL T_SR_EQUAL T_SR T_SL_EQUAL T_SL T_ROCKET T_PLUS_EQUAL T_OR_EQUAL T_OBJECT_OPERATOR T_MUL_EQUAL T_MOD_EQUAL T_MINUS_EQUAL T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DIV_EQUAL T_DEC T_CONCAT_EQUAL T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW T_AND_EQUAL TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TOPAR TOBRACE TOBRA TMUL TMOD TMINUS TGREATER TEQ TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
call_expr -> call_expr . T_OBJECT_OPERATOR TOBRACE expr TCBRACE [ T_XOR_EQUAL T_SR_EQUAL T_SR T_SL_EQUAL T_SL T_ROCKET T_PLUS_EQUAL T_OR_EQUAL T_OBJECT_OPERATOR T_MUL_EQUAL T_MOD_EQUAL T_MINUS_EQUAL T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DIV_EQUAL T_DEC T_CONCAT_EQUAL T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW T_AND_EQUAL TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TOPAR TOBRACE TOBRA TMUL TMOD TMINUS TGREATER TEQ TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
simple_expr -> call_expr . [ T_XOR_EQUAL T_SR_EQUAL T_SR T_SL_EQUAL T_SL T_ROCKET T_PLUS_EQUAL T_OR_EQUAL T_MUL_EQUAL T_MOD_EQUAL T_MINUS_EQUAL T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DIV_EQUAL T_DEC T_CONCAT_EQUAL T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW T_AND_EQUAL TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TEQ TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
## Transitions:
-- On T_OBJECT_OPERATOR shift to state 241
-- On TOPAR shift to state 68
-- On TOBRACE shift to state 304
-- On TOBRA shift to state 307
-- On arguments shift to state 313
## Reductions:
-- On T_XOR_EQUAL T_SR_EQUAL T_SR T_SL_EQUAL T_SL T_ROCKET T_PLUS_EQUAL T_OR_EQUAL T_MUL_EQUAL T_MOD_EQUAL T_MINUS_EQUAL T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DIV_EQUAL T_DEC T_CONCAT_EQUAL T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW T_AND_EQUAL TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TEQ TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF
--   reduce production simple_expr -> call_expr

State 241:
## Known stack suffix:
## call_expr T_OBJECT_OPERATOR
## LR(1) items:
call_expr -> call_expr T_OBJECT_OPERATOR . primary_expr [ T_XOR_EQUAL T_SR_EQUAL T_SR T_SL_EQUAL T_SL T_ROCKET T_PLUS_EQUAL T_OR_EQUAL T_OBJECT_OPERATOR T_MUL_EQUAL T_MOD_EQUAL T_MINUS_EQUAL T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DIV_EQUAL T_DEC T_CONCAT_EQUAL T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW T_AND_EQUAL TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TOPAR TOBRACE TOBRA TMUL TMOD TMINUS TGREATER TEQ TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
call_expr -> call_expr T_OBJECT_OPERATOR . TOBRACE expr TCBRACE [ T_XOR_EQUAL T_SR_EQUAL T_SR T_SL_EQUAL T_SL T_ROCKET T_PLUS_EQUAL T_OR_EQUAL T_OBJECT_OPERATOR T_MUL_EQUAL T_MOD_EQUAL T_MINUS_EQUAL T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DIV_EQUAL T_DEC T_CONCAT_EQUAL T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW T_AND_EQUAL TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TOPAR TOBRACE TOBRA TMUL TMOD TMINUS TGREATER TEQ TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
## Transitions:
-- On T_VARIABLE shift to state 47
-- On T_TYPE shift to state 6
-- On T_TRAIT_C shift to state 7
-- On T_SUPER shift to state 8
-- On T_STATIC shift to state 48
-- On T_START_HEREDOC shift to state 25
-- On T_SELF shift to state 40
-- On T_PARENT shift to state 44
-- On T_NAMESPACE_C shift to state 49
-- On T_NAMESPACE shift to state 50
-- On T_METHOD_C shift to state 58
-- On T_METAVAR shift to state 17
-- On T_LNUMBER shift to state 59
-- On T_LINE shift to state 60
-- On T_INSTANCEOF shift to state 52
-- On T_IDENT shift to state 18
-- On T_FUNC_C shift to state 61
-- On T_FILE shift to state 62
-- On T_ENUM shift to state 19
-- On T_DNUMBER shift to state 63
-- On T_DIR shift to state 64
-- On T_CONSTANT_ENCAPSED_STRING shift to state 65
-- On T_CLASS_C shift to state 66
-- On T_ARRAY shift to state 201
-- On TOPAR shift to state 206
-- On TOBRACE shift to state 242
-- On TOBRA shift to state 209
-- On TGUIL shift to state 211
-- On TDOLLARDOLLAR shift to state 213
-- On TDOLLAR shift to state 214
-- On TBACKQUOTE shift to state 217
-- On TANTISLASH shift to state 85
-- On LDots shift to state 222
-- On qualified_name shift to state 94
-- On qualified_class_name shift to state 225
-- On primary_expr shift to state 303
-- On namespace_name shift to state 102
-- On ident_in_name shift to state 57
-- On ident shift to state 56
-- On constant shift to state 239
## Reductions:

State 242:
## Known stack suffix:
## call_expr T_OBJECT_OPERATOR TOBRACE
## LR(1) items:
call_expr -> call_expr T_OBJECT_OPERATOR TOBRACE . expr TCBRACE [ T_XOR_EQUAL T_SR_EQUAL T_SR T_SL_EQUAL T_SL T_ROCKET T_PLUS_EQUAL T_OR_EQUAL T_OBJECT_OPERATOR T_MUL_EQUAL T_MOD_EQUAL T_MINUS_EQUAL T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DIV_EQUAL T_DEC T_CONCAT_EQUAL T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW T_AND_EQUAL TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TOPAR TOBRACE TOBRA TMUL TMOD TMINUS TGREATER TEQ TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
## Transitions:
-- On T__AT shift to state 1
-- On T_YIELD shift to state 2
-- On T_VARIABLE shift to state 3
-- On T_UNSET_CAST shift to state 5
-- On T_TYPE shift to state 6
-- On T_TRAIT_C shift to state 7
-- On T_SUPER shift to state 8
-- On T_STRING_CAST shift to state 9
-- On T_STATIC shift to state 10
-- On T_START_HEREDOC shift to state 25
-- On T_SELF shift to state 40
-- On T_REQUIRE_ONCE shift to state 41
-- On T_REQUIRE shift to state 42
-- On T_PRINT shift to state 43
-- On T_PARENT shift to state 44
-- On T_OBJECT_CAST shift to state 45
-- On T_NEW shift to state 46
-- On T_NAMESPACE_C shift to state 49
-- On T_NAMESPACE shift to state 50
-- On T_METHOD_C shift to state 58
-- On T_METAVAR shift to state 17
-- On T_LNUMBER shift to state 59
-- On T_LIST shift to state 69
-- On T_LINE shift to state 60
-- On T_LAMBDA_OPAR shift to state 73
-- On T_ISSET shift to state 133
-- On T_INT_CAST shift to state 135
-- On T_INSTANCEOF shift to state 52
-- On T_INCLUDE_ONCE shift to state 136
-- On T_INCLUDE shift to state 137
-- On T_INC shift to state 138
-- On T_IDENT shift to state 18
-- On T_FUNC_C shift to state 61
-- On T_FUNCTION shift to state 139
-- On T_FILE shift to state 62
-- On T_EXIT shift to state 160
-- On T_EVAL shift to state 162
-- On T_ENUM shift to state 19
-- On T_EMPTY shift to state 164
-- On T_DOUBLE_CAST shift to state 168
-- On T_DNUMBER shift to state 63
-- On T_DIR shift to state 64
-- On T_DEC shift to state 169
-- On T_CONSTANT_ENCAPSED_STRING shift to state 65
-- On T_CLONE shift to state 170
-- On T_CLASS_C shift to state 66
-- On T_BOOL_CAST shift to state 171
-- On T_AWAIT shift to state 172
-- On T_ASYNC shift to state 173
-- On T_ARRAY_CAST shift to state 200
-- On T_ARRAY shift to state 201
-- On TTILDE shift to state 204
-- On TPLUS shift to state 205
-- On TOPAR shift to state 206
-- On TOBRA shift to state 209
-- On TMINUS shift to state 210
-- On TGUIL shift to state 211
-- On TDOLLARDOLLAR shift to state 213
-- On TDOLLAR shift to state 214
-- On TBANG shift to state 216
-- On TBACKQUOTE shift to state 217
-- On TANTISLASH shift to state 85
-- On LDots shift to state 222
-- On simple_expr shift to state 223
-- On qualified_name shift to state 94
-- On qualified_class_name shift to state 225
-- On primary_expr shift to state 226
-- On new_expr shift to state 227
-- On namespace_name shift to state 102
-- On member_expr shift to state 228
-- On lambda_expr shift to state 231
-- On ident_in_name shift to state 57
-- On ident shift to state 56
-- On expr shift to state 243
-- On constant shift to state 239
-- On call_expr shift to state 240
## Reductions:

State 243:
## Known stack suffix:
## call_expr T_OBJECT_OPERATOR TOBRACE expr
## LR(1) items:
call_expr -> call_expr T_OBJECT_OPERATOR TOBRACE expr . TCBRACE [ T_XOR_EQUAL T_SR_EQUAL T_SR T_SL_EQUAL T_SL T_ROCKET T_PLUS_EQUAL T_OR_EQUAL T_OBJECT_OPERATOR T_MUL_EQUAL T_MOD_EQUAL T_MINUS_EQUAL T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DIV_EQUAL T_DEC T_CONCAT_EQUAL T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW T_AND_EQUAL TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TOPAR TOBRACE TOBRA TMUL TMOD TMINUS TGREATER TEQ TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_INC [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCBRACE TAND ]
expr -> expr . T_DEC [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCBRACE TAND ]
expr -> expr . T_BOOLEAN_OR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCBRACE TAND ]
expr -> expr . T_BOOLEAN_AND expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCBRACE TAND ]
expr -> expr . T_LOGICAL_OR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCBRACE TAND ]
expr -> expr . T_LOGICAL_AND expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCBRACE TAND ]
expr -> expr . T_LOGICAL_XOR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCBRACE TAND ]
expr -> expr . TPLUS expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCBRACE TAND ]
expr -> expr . TMINUS expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCBRACE TAND ]
expr -> expr . TMUL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCBRACE TAND ]
expr -> expr . TDIV expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCBRACE TAND ]
expr -> expr . TMOD expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCBRACE TAND ]
expr -> expr . TPOW expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCBRACE TAND ]
expr -> expr . TAND expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCBRACE TAND ]
expr -> expr . TOR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCBRACE TAND ]
expr -> expr . TXOR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCBRACE TAND ]
expr -> expr . T_SL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCBRACE TAND ]
expr -> expr . T_SR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCBRACE TAND ]
expr -> expr . TDOT expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCBRACE TAND ]
expr -> expr . T_IS_IDENTICAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCBRACE TAND ]
expr -> expr . T_IS_NOT_IDENTICAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCBRACE TAND ]
expr -> expr . T_IS_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCBRACE TAND ]
expr -> expr . T_IS_NOT_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCBRACE TAND ]
expr -> expr . TSMALLER expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCBRACE TAND ]
expr -> expr . T_IS_SMALLER_OR_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCBRACE TAND ]
expr -> expr . TGREATER expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCBRACE TAND ]
expr -> expr . T_IS_GREATER_OR_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCBRACE TAND ]
expr -> expr . T_ROCKET expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCBRACE TAND ]
expr -> expr . TQUESTION expr TCOLON expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCBRACE TAND ]
expr -> expr . TQUESTION TCOLON expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCBRACE TAND ]
expr -> expr . TQUESTION TQUESTION expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCBRACE TAND ]
expr -> expr . T_INSTANCEOF expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCBRACE TAND ]
## Transitions:
-- On T_SR shift to state 233
-- On T_SL shift to state 244
-- On T_ROCKET shift to state 260
-- On T_LOGICAL_XOR shift to state 270
-- On T_LOGICAL_OR shift to state 298
-- On T_LOGICAL_AND shift to state 272
-- On T_IS_SMALLER_OR_EQUAL shift to state 262
-- On T_IS_NOT_IDENTICAL shift to state 274
-- On T_IS_NOT_EQUAL shift to state 276
-- On T_IS_IDENTICAL shift to state 278
-- On T_IS_GREATER_OR_EQUAL shift to state 264
-- On T_IS_EQUAL shift to state 280
-- On T_INSTANCEOF shift to state 235
-- On T_INC shift to state 237
-- On T_DEC shift to state 238
-- On T_BOOLEAN_OR shift to state 282
-- On T_BOOLEAN_AND shift to state 284
-- On TXOR shift to state 286
-- On TSMALLER shift to state 266
-- On TQUESTION shift to state 292
-- On TPOW shift to state 246
-- On TPLUS shift to state 248
-- On TOR shift to state 290
-- On TMUL shift to state 250
-- On TMOD shift to state 252
-- On TMINUS shift to state 256
-- On TGREATER shift to state 268
-- On TDOT shift to state 258
-- On TDIV shift to state 254
-- On TCBRACE shift to state 302
-- On TAND shift to state 288
## Reductions:

State 244:
## Known stack suffix:
## expr T_SL
## LR(1) items:
expr -> expr T_SL . expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
## Transitions:
-- On T__AT shift to state 1
-- On T_YIELD shift to state 2
-- On T_VARIABLE shift to state 3
-- On T_UNSET_CAST shift to state 5
-- On T_TYPE shift to state 6
-- On T_TRAIT_C shift to state 7
-- On T_SUPER shift to state 8
-- On T_STRING_CAST shift to state 9
-- On T_STATIC shift to state 10
-- On T_START_HEREDOC shift to state 25
-- On T_SELF shift to state 40
-- On T_REQUIRE_ONCE shift to state 41
-- On T_REQUIRE shift to state 42
-- On T_PRINT shift to state 43
-- On T_PARENT shift to state 44
-- On T_OBJECT_CAST shift to state 45
-- On T_NEW shift to state 46
-- On T_NAMESPACE_C shift to state 49
-- On T_NAMESPACE shift to state 50
-- On T_METHOD_C shift to state 58
-- On T_METAVAR shift to state 17
-- On T_LNUMBER shift to state 59
-- On T_LIST shift to state 69
-- On T_LINE shift to state 60
-- On T_LAMBDA_OPAR shift to state 73
-- On T_ISSET shift to state 133
-- On T_INT_CAST shift to state 135
-- On T_INSTANCEOF shift to state 52
-- On T_INCLUDE_ONCE shift to state 136
-- On T_INCLUDE shift to state 137
-- On T_INC shift to state 138
-- On T_IDENT shift to state 18
-- On T_FUNC_C shift to state 61
-- On T_FUNCTION shift to state 139
-- On T_FILE shift to state 62
-- On T_EXIT shift to state 160
-- On T_EVAL shift to state 162
-- On T_ENUM shift to state 19
-- On T_EMPTY shift to state 164
-- On T_DOUBLE_CAST shift to state 168
-- On T_DNUMBER shift to state 63
-- On T_DIR shift to state 64
-- On T_DEC shift to state 169
-- On T_CONSTANT_ENCAPSED_STRING shift to state 65
-- On T_CLONE shift to state 170
-- On T_CLASS_C shift to state 66
-- On T_BOOL_CAST shift to state 171
-- On T_AWAIT shift to state 172
-- On T_ASYNC shift to state 173
-- On T_ARRAY_CAST shift to state 200
-- On T_ARRAY shift to state 201
-- On TTILDE shift to state 204
-- On TPLUS shift to state 205
-- On TOPAR shift to state 206
-- On TOBRA shift to state 209
-- On TMINUS shift to state 210
-- On TGUIL shift to state 211
-- On TDOLLARDOLLAR shift to state 213
-- On TDOLLAR shift to state 214
-- On TBANG shift to state 216
-- On TBACKQUOTE shift to state 217
-- On TANTISLASH shift to state 85
-- On LDots shift to state 222
-- On simple_expr shift to state 223
-- On qualified_name shift to state 94
-- On qualified_class_name shift to state 225
-- On primary_expr shift to state 226
-- On new_expr shift to state 227
-- On namespace_name shift to state 102
-- On member_expr shift to state 228
-- On lambda_expr shift to state 231
-- On ident_in_name shift to state 57
-- On ident shift to state 56
-- On expr shift to state 245
-- On constant shift to state 239
-- On call_expr shift to state 240
## Reductions:

State 245:
## Known stack suffix:
## expr T_SL expr
## LR(1) items:
expr -> expr . T_INC [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_DEC [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_BOOLEAN_OR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_BOOLEAN_AND expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_LOGICAL_OR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_LOGICAL_AND expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_LOGICAL_XOR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TPLUS expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TMINUS expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TMUL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TDIV expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TMOD expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TPOW expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TAND expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TOR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TXOR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_SL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr T_SL expr . [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_SR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TDOT expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_IDENTICAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_NOT_IDENTICAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_NOT_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TSMALLER expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_SMALLER_OR_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TGREATER expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_GREATER_OR_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_ROCKET expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TQUESTION expr TCOLON expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TQUESTION TCOLON expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TQUESTION TQUESTION expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_INSTANCEOF expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
## Transitions:
-- On T_INSTANCEOF shift to state 235
-- On T_INC shift to state 237
-- On T_DEC shift to state 238
-- On TPOW shift to state 246
-- On TPLUS shift to state 248
-- On TMUL shift to state 250
-- On TMOD shift to state 252
-- On TMINUS shift to state 256
-- On TDOT shift to state 258
-- On TDIV shift to state 254
## Reductions:
-- On T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TOR TGREATER TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF
--   reduce production expr -> expr T_SL expr

State 246:
## Known stack suffix:
## expr TPOW
## LR(1) items:
expr -> expr TPOW . expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
## Transitions:
-- On T__AT shift to state 1
-- On T_YIELD shift to state 2
-- On T_VARIABLE shift to state 3
-- On T_UNSET_CAST shift to state 5
-- On T_TYPE shift to state 6
-- On T_TRAIT_C shift to state 7
-- On T_SUPER shift to state 8
-- On T_STRING_CAST shift to state 9
-- On T_STATIC shift to state 10
-- On T_START_HEREDOC shift to state 25
-- On T_SELF shift to state 40
-- On T_REQUIRE_ONCE shift to state 41
-- On T_REQUIRE shift to state 42
-- On T_PRINT shift to state 43
-- On T_PARENT shift to state 44
-- On T_OBJECT_CAST shift to state 45
-- On T_NEW shift to state 46
-- On T_NAMESPACE_C shift to state 49
-- On T_NAMESPACE shift to state 50
-- On T_METHOD_C shift to state 58
-- On T_METAVAR shift to state 17
-- On T_LNUMBER shift to state 59
-- On T_LIST shift to state 69
-- On T_LINE shift to state 60
-- On T_LAMBDA_OPAR shift to state 73
-- On T_ISSET shift to state 133
-- On T_INT_CAST shift to state 135
-- On T_INSTANCEOF shift to state 52
-- On T_INCLUDE_ONCE shift to state 136
-- On T_INCLUDE shift to state 137
-- On T_INC shift to state 138
-- On T_IDENT shift to state 18
-- On T_FUNC_C shift to state 61
-- On T_FUNCTION shift to state 139
-- On T_FILE shift to state 62
-- On T_EXIT shift to state 160
-- On T_EVAL shift to state 162
-- On T_ENUM shift to state 19
-- On T_EMPTY shift to state 164
-- On T_DOUBLE_CAST shift to state 168
-- On T_DNUMBER shift to state 63
-- On T_DIR shift to state 64
-- On T_DEC shift to state 169
-- On T_CONSTANT_ENCAPSED_STRING shift to state 65
-- On T_CLONE shift to state 170
-- On T_CLASS_C shift to state 66
-- On T_BOOL_CAST shift to state 171
-- On T_AWAIT shift to state 172
-- On T_ASYNC shift to state 173
-- On T_ARRAY_CAST shift to state 200
-- On T_ARRAY shift to state 201
-- On TTILDE shift to state 204
-- On TPLUS shift to state 205
-- On TOPAR shift to state 206
-- On TOBRA shift to state 209
-- On TMINUS shift to state 210
-- On TGUIL shift to state 211
-- On TDOLLARDOLLAR shift to state 213
-- On TDOLLAR shift to state 214
-- On TBANG shift to state 216
-- On TBACKQUOTE shift to state 217
-- On TANTISLASH shift to state 85
-- On LDots shift to state 222
-- On simple_expr shift to state 223
-- On qualified_name shift to state 94
-- On qualified_class_name shift to state 225
-- On primary_expr shift to state 226
-- On new_expr shift to state 227
-- On namespace_name shift to state 102
-- On member_expr shift to state 228
-- On lambda_expr shift to state 231
-- On ident_in_name shift to state 57
-- On ident shift to state 56
-- On expr shift to state 247
-- On constant shift to state 239
-- On call_expr shift to state 240
## Reductions:

State 247:
## Known stack suffix:
## expr TPOW expr
## LR(1) items:
expr -> expr . T_INC [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_DEC [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_BOOLEAN_OR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_BOOLEAN_AND expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_LOGICAL_OR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_LOGICAL_AND expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_LOGICAL_XOR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TPLUS expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TMINUS expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TMUL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TDIV expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TMOD expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TPOW expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr TPOW expr . [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TAND expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TOR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TXOR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_SL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_SR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TDOT expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_IDENTICAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_NOT_IDENTICAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_NOT_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TSMALLER expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_SMALLER_OR_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TGREATER expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_GREATER_OR_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_ROCKET expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TQUESTION expr TCOLON expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TQUESTION TCOLON expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TQUESTION TQUESTION expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_INSTANCEOF expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
## Transitions:
-- On T_INSTANCEOF shift to state 235
-- On T_INC shift to state 237
-- On T_DEC shift to state 238
-- On TPOW shift to state 246
## Reductions:
-- On T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF
--   reduce production expr -> expr TPOW expr

State 248:
## Known stack suffix:
## expr TPLUS
## LR(1) items:
expr -> expr TPLUS . expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
## Transitions:
-- On T__AT shift to state 1
-- On T_YIELD shift to state 2
-- On T_VARIABLE shift to state 3
-- On T_UNSET_CAST shift to state 5
-- On T_TYPE shift to state 6
-- On T_TRAIT_C shift to state 7
-- On T_SUPER shift to state 8
-- On T_STRING_CAST shift to state 9
-- On T_STATIC shift to state 10
-- On T_START_HEREDOC shift to state 25
-- On T_SELF shift to state 40
-- On T_REQUIRE_ONCE shift to state 41
-- On T_REQUIRE shift to state 42
-- On T_PRINT shift to state 43
-- On T_PARENT shift to state 44
-- On T_OBJECT_CAST shift to state 45
-- On T_NEW shift to state 46
-- On T_NAMESPACE_C shift to state 49
-- On T_NAMESPACE shift to state 50
-- On T_METHOD_C shift to state 58
-- On T_METAVAR shift to state 17
-- On T_LNUMBER shift to state 59
-- On T_LIST shift to state 69
-- On T_LINE shift to state 60
-- On T_LAMBDA_OPAR shift to state 73
-- On T_ISSET shift to state 133
-- On T_INT_CAST shift to state 135
-- On T_INSTANCEOF shift to state 52
-- On T_INCLUDE_ONCE shift to state 136
-- On T_INCLUDE shift to state 137
-- On T_INC shift to state 138
-- On T_IDENT shift to state 18
-- On T_FUNC_C shift to state 61
-- On T_FUNCTION shift to state 139
-- On T_FILE shift to state 62
-- On T_EXIT shift to state 160
-- On T_EVAL shift to state 162
-- On T_ENUM shift to state 19
-- On T_EMPTY shift to state 164
-- On T_DOUBLE_CAST shift to state 168
-- On T_DNUMBER shift to state 63
-- On T_DIR shift to state 64
-- On T_DEC shift to state 169
-- On T_CONSTANT_ENCAPSED_STRING shift to state 65
-- On T_CLONE shift to state 170
-- On T_CLASS_C shift to state 66
-- On T_BOOL_CAST shift to state 171
-- On T_AWAIT shift to state 172
-- On T_ASYNC shift to state 173
-- On T_ARRAY_CAST shift to state 200
-- On T_ARRAY shift to state 201
-- On TTILDE shift to state 204
-- On TPLUS shift to state 205
-- On TOPAR shift to state 206
-- On TOBRA shift to state 209
-- On TMINUS shift to state 210
-- On TGUIL shift to state 211
-- On TDOLLARDOLLAR shift to state 213
-- On TDOLLAR shift to state 214
-- On TBANG shift to state 216
-- On TBACKQUOTE shift to state 217
-- On TANTISLASH shift to state 85
-- On LDots shift to state 222
-- On simple_expr shift to state 223
-- On qualified_name shift to state 94
-- On qualified_class_name shift to state 225
-- On primary_expr shift to state 226
-- On new_expr shift to state 227
-- On namespace_name shift to state 102
-- On member_expr shift to state 228
-- On lambda_expr shift to state 231
-- On ident_in_name shift to state 57
-- On ident shift to state 56
-- On expr shift to state 249
-- On constant shift to state 239
-- On call_expr shift to state 240
## Reductions:

State 249:
## Known stack suffix:
## expr TPLUS expr
## LR(1) items:
expr -> expr . T_INC [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_DEC [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_BOOLEAN_OR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_BOOLEAN_AND expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_LOGICAL_OR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_LOGICAL_AND expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_LOGICAL_XOR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TPLUS expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr TPLUS expr . [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TMINUS expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TMUL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TDIV expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TMOD expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TPOW expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TAND expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TOR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TXOR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_SL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_SR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TDOT expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_IDENTICAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_NOT_IDENTICAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_NOT_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TSMALLER expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_SMALLER_OR_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TGREATER expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_GREATER_OR_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_ROCKET expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TQUESTION expr TCOLON expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TQUESTION TCOLON expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TQUESTION TQUESTION expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_INSTANCEOF expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
## Transitions:
-- On T_INSTANCEOF shift to state 235
-- On T_INC shift to state 237
-- On T_DEC shift to state 238
-- On TPOW shift to state 246
-- On TMUL shift to state 250
-- On TMOD shift to state 252
-- On TDIV shift to state 254
## Reductions:
-- On T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPLUS TOR TMINUS TGREATER TDOT TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF
--   reduce production expr -> expr TPLUS expr

State 250:
## Known stack suffix:
## expr TMUL
## LR(1) items:
expr -> expr TMUL . expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
## Transitions:
-- On T__AT shift to state 1
-- On T_YIELD shift to state 2
-- On T_VARIABLE shift to state 3
-- On T_UNSET_CAST shift to state 5
-- On T_TYPE shift to state 6
-- On T_TRAIT_C shift to state 7
-- On T_SUPER shift to state 8
-- On T_STRING_CAST shift to state 9
-- On T_STATIC shift to state 10
-- On T_START_HEREDOC shift to state 25
-- On T_SELF shift to state 40
-- On T_REQUIRE_ONCE shift to state 41
-- On T_REQUIRE shift to state 42
-- On T_PRINT shift to state 43
-- On T_PARENT shift to state 44
-- On T_OBJECT_CAST shift to state 45
-- On T_NEW shift to state 46
-- On T_NAMESPACE_C shift to state 49
-- On T_NAMESPACE shift to state 50
-- On T_METHOD_C shift to state 58
-- On T_METAVAR shift to state 17
-- On T_LNUMBER shift to state 59
-- On T_LIST shift to state 69
-- On T_LINE shift to state 60
-- On T_LAMBDA_OPAR shift to state 73
-- On T_ISSET shift to state 133
-- On T_INT_CAST shift to state 135
-- On T_INSTANCEOF shift to state 52
-- On T_INCLUDE_ONCE shift to state 136
-- On T_INCLUDE shift to state 137
-- On T_INC shift to state 138
-- On T_IDENT shift to state 18
-- On T_FUNC_C shift to state 61
-- On T_FUNCTION shift to state 139
-- On T_FILE shift to state 62
-- On T_EXIT shift to state 160
-- On T_EVAL shift to state 162
-- On T_ENUM shift to state 19
-- On T_EMPTY shift to state 164
-- On T_DOUBLE_CAST shift to state 168
-- On T_DNUMBER shift to state 63
-- On T_DIR shift to state 64
-- On T_DEC shift to state 169
-- On T_CONSTANT_ENCAPSED_STRING shift to state 65
-- On T_CLONE shift to state 170
-- On T_CLASS_C shift to state 66
-- On T_BOOL_CAST shift to state 171
-- On T_AWAIT shift to state 172
-- On T_ASYNC shift to state 173
-- On T_ARRAY_CAST shift to state 200
-- On T_ARRAY shift to state 201
-- On TTILDE shift to state 204
-- On TPLUS shift to state 205
-- On TOPAR shift to state 206
-- On TOBRA shift to state 209
-- On TMINUS shift to state 210
-- On TGUIL shift to state 211
-- On TDOLLARDOLLAR shift to state 213
-- On TDOLLAR shift to state 214
-- On TBANG shift to state 216
-- On TBACKQUOTE shift to state 217
-- On TANTISLASH shift to state 85
-- On LDots shift to state 222
-- On simple_expr shift to state 223
-- On qualified_name shift to state 94
-- On qualified_class_name shift to state 225
-- On primary_expr shift to state 226
-- On new_expr shift to state 227
-- On namespace_name shift to state 102
-- On member_expr shift to state 228
-- On lambda_expr shift to state 231
-- On ident_in_name shift to state 57
-- On ident shift to state 56
-- On expr shift to state 251
-- On constant shift to state 239
-- On call_expr shift to state 240
## Reductions:

State 251:
## Known stack suffix:
## expr TMUL expr
## LR(1) items:
expr -> expr . T_INC [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_DEC [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_BOOLEAN_OR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_BOOLEAN_AND expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_LOGICAL_OR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_LOGICAL_AND expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_LOGICAL_XOR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TPLUS expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TMINUS expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TMUL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr TMUL expr . [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TDIV expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TMOD expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TPOW expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TAND expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TOR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TXOR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_SL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_SR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TDOT expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_IDENTICAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_NOT_IDENTICAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_NOT_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TSMALLER expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_SMALLER_OR_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TGREATER expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_GREATER_OR_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_ROCKET expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TQUESTION expr TCOLON expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TQUESTION TCOLON expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TQUESTION TQUESTION expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_INSTANCEOF expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
## Transitions:
-- On T_INSTANCEOF shift to state 235
-- On T_INC shift to state 237
-- On T_DEC shift to state 238
-- On TPOW shift to state 246
## Reductions:
-- On T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF
--   reduce production expr -> expr TMUL expr

State 252:
## Known stack suffix:
## expr TMOD
## LR(1) items:
expr -> expr TMOD . expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
## Transitions:
-- On T__AT shift to state 1
-- On T_YIELD shift to state 2
-- On T_VARIABLE shift to state 3
-- On T_UNSET_CAST shift to state 5
-- On T_TYPE shift to state 6
-- On T_TRAIT_C shift to state 7
-- On T_SUPER shift to state 8
-- On T_STRING_CAST shift to state 9
-- On T_STATIC shift to state 10
-- On T_START_HEREDOC shift to state 25
-- On T_SELF shift to state 40
-- On T_REQUIRE_ONCE shift to state 41
-- On T_REQUIRE shift to state 42
-- On T_PRINT shift to state 43
-- On T_PARENT shift to state 44
-- On T_OBJECT_CAST shift to state 45
-- On T_NEW shift to state 46
-- On T_NAMESPACE_C shift to state 49
-- On T_NAMESPACE shift to state 50
-- On T_METHOD_C shift to state 58
-- On T_METAVAR shift to state 17
-- On T_LNUMBER shift to state 59
-- On T_LIST shift to state 69
-- On T_LINE shift to state 60
-- On T_LAMBDA_OPAR shift to state 73
-- On T_ISSET shift to state 133
-- On T_INT_CAST shift to state 135
-- On T_INSTANCEOF shift to state 52
-- On T_INCLUDE_ONCE shift to state 136
-- On T_INCLUDE shift to state 137
-- On T_INC shift to state 138
-- On T_IDENT shift to state 18
-- On T_FUNC_C shift to state 61
-- On T_FUNCTION shift to state 139
-- On T_FILE shift to state 62
-- On T_EXIT shift to state 160
-- On T_EVAL shift to state 162
-- On T_ENUM shift to state 19
-- On T_EMPTY shift to state 164
-- On T_DOUBLE_CAST shift to state 168
-- On T_DNUMBER shift to state 63
-- On T_DIR shift to state 64
-- On T_DEC shift to state 169
-- On T_CONSTANT_ENCAPSED_STRING shift to state 65
-- On T_CLONE shift to state 170
-- On T_CLASS_C shift to state 66
-- On T_BOOL_CAST shift to state 171
-- On T_AWAIT shift to state 172
-- On T_ASYNC shift to state 173
-- On T_ARRAY_CAST shift to state 200
-- On T_ARRAY shift to state 201
-- On TTILDE shift to state 204
-- On TPLUS shift to state 205
-- On TOPAR shift to state 206
-- On TOBRA shift to state 209
-- On TMINUS shift to state 210
-- On TGUIL shift to state 211
-- On TDOLLARDOLLAR shift to state 213
-- On TDOLLAR shift to state 214
-- On TBANG shift to state 216
-- On TBACKQUOTE shift to state 217
-- On TANTISLASH shift to state 85
-- On LDots shift to state 222
-- On simple_expr shift to state 223
-- On qualified_name shift to state 94
-- On qualified_class_name shift to state 225
-- On primary_expr shift to state 226
-- On new_expr shift to state 227
-- On namespace_name shift to state 102
-- On member_expr shift to state 228
-- On lambda_expr shift to state 231
-- On ident_in_name shift to state 57
-- On ident shift to state 56
-- On expr shift to state 253
-- On constant shift to state 239
-- On call_expr shift to state 240
## Reductions:

State 253:
## Known stack suffix:
## expr TMOD expr
## LR(1) items:
expr -> expr . T_INC [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_DEC [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_BOOLEAN_OR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_BOOLEAN_AND expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_LOGICAL_OR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_LOGICAL_AND expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_LOGICAL_XOR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TPLUS expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TMINUS expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TMUL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TDIV expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TMOD expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr TMOD expr . [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TPOW expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TAND expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TOR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TXOR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_SL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_SR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TDOT expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_IDENTICAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_NOT_IDENTICAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_NOT_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TSMALLER expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_SMALLER_OR_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TGREATER expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_GREATER_OR_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_ROCKET expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TQUESTION expr TCOLON expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TQUESTION TCOLON expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TQUESTION TQUESTION expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_INSTANCEOF expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
## Transitions:
-- On T_INSTANCEOF shift to state 235
-- On T_INC shift to state 237
-- On T_DEC shift to state 238
-- On TPOW shift to state 246
## Reductions:
-- On T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF
--   reduce production expr -> expr TMOD expr

State 254:
## Known stack suffix:
## expr TDIV
## LR(1) items:
expr -> expr TDIV . expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
## Transitions:
-- On T__AT shift to state 1
-- On T_YIELD shift to state 2
-- On T_VARIABLE shift to state 3
-- On T_UNSET_CAST shift to state 5
-- On T_TYPE shift to state 6
-- On T_TRAIT_C shift to state 7
-- On T_SUPER shift to state 8
-- On T_STRING_CAST shift to state 9
-- On T_STATIC shift to state 10
-- On T_START_HEREDOC shift to state 25
-- On T_SELF shift to state 40
-- On T_REQUIRE_ONCE shift to state 41
-- On T_REQUIRE shift to state 42
-- On T_PRINT shift to state 43
-- On T_PARENT shift to state 44
-- On T_OBJECT_CAST shift to state 45
-- On T_NEW shift to state 46
-- On T_NAMESPACE_C shift to state 49
-- On T_NAMESPACE shift to state 50
-- On T_METHOD_C shift to state 58
-- On T_METAVAR shift to state 17
-- On T_LNUMBER shift to state 59
-- On T_LIST shift to state 69
-- On T_LINE shift to state 60
-- On T_LAMBDA_OPAR shift to state 73
-- On T_ISSET shift to state 133
-- On T_INT_CAST shift to state 135
-- On T_INSTANCEOF shift to state 52
-- On T_INCLUDE_ONCE shift to state 136
-- On T_INCLUDE shift to state 137
-- On T_INC shift to state 138
-- On T_IDENT shift to state 18
-- On T_FUNC_C shift to state 61
-- On T_FUNCTION shift to state 139
-- On T_FILE shift to state 62
-- On T_EXIT shift to state 160
-- On T_EVAL shift to state 162
-- On T_ENUM shift to state 19
-- On T_EMPTY shift to state 164
-- On T_DOUBLE_CAST shift to state 168
-- On T_DNUMBER shift to state 63
-- On T_DIR shift to state 64
-- On T_DEC shift to state 169
-- On T_CONSTANT_ENCAPSED_STRING shift to state 65
-- On T_CLONE shift to state 170
-- On T_CLASS_C shift to state 66
-- On T_BOOL_CAST shift to state 171
-- On T_AWAIT shift to state 172
-- On T_ASYNC shift to state 173
-- On T_ARRAY_CAST shift to state 200
-- On T_ARRAY shift to state 201
-- On TTILDE shift to state 204
-- On TPLUS shift to state 205
-- On TOPAR shift to state 206
-- On TOBRA shift to state 209
-- On TMINUS shift to state 210
-- On TGUIL shift to state 211
-- On TDOLLARDOLLAR shift to state 213
-- On TDOLLAR shift to state 214
-- On TBANG shift to state 216
-- On TBACKQUOTE shift to state 217
-- On TANTISLASH shift to state 85
-- On LDots shift to state 222
-- On simple_expr shift to state 223
-- On qualified_name shift to state 94
-- On qualified_class_name shift to state 225
-- On primary_expr shift to state 226
-- On new_expr shift to state 227
-- On namespace_name shift to state 102
-- On member_expr shift to state 228
-- On lambda_expr shift to state 231
-- On ident_in_name shift to state 57
-- On ident shift to state 56
-- On expr shift to state 255
-- On constant shift to state 239
-- On call_expr shift to state 240
## Reductions:

State 255:
## Known stack suffix:
## expr TDIV expr
## LR(1) items:
expr -> expr . T_INC [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_DEC [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_BOOLEAN_OR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_BOOLEAN_AND expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_LOGICAL_OR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_LOGICAL_AND expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_LOGICAL_XOR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TPLUS expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TMINUS expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TMUL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TDIV expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr TDIV expr . [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TMOD expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TPOW expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TAND expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TOR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TXOR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_SL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_SR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TDOT expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_IDENTICAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_NOT_IDENTICAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_NOT_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TSMALLER expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_SMALLER_OR_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TGREATER expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_GREATER_OR_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_ROCKET expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TQUESTION expr TCOLON expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TQUESTION TCOLON expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TQUESTION TQUESTION expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_INSTANCEOF expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
## Transitions:
-- On T_INSTANCEOF shift to state 235
-- On T_INC shift to state 237
-- On T_DEC shift to state 238
-- On TPOW shift to state 246
## Reductions:
-- On T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF
--   reduce production expr -> expr TDIV expr

State 256:
## Known stack suffix:
## expr TMINUS
## LR(1) items:
expr -> expr TMINUS . expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
## Transitions:
-- On T__AT shift to state 1
-- On T_YIELD shift to state 2
-- On T_VARIABLE shift to state 3
-- On T_UNSET_CAST shift to state 5
-- On T_TYPE shift to state 6
-- On T_TRAIT_C shift to state 7
-- On T_SUPER shift to state 8
-- On T_STRING_CAST shift to state 9
-- On T_STATIC shift to state 10
-- On T_START_HEREDOC shift to state 25
-- On T_SELF shift to state 40
-- On T_REQUIRE_ONCE shift to state 41
-- On T_REQUIRE shift to state 42
-- On T_PRINT shift to state 43
-- On T_PARENT shift to state 44
-- On T_OBJECT_CAST shift to state 45
-- On T_NEW shift to state 46
-- On T_NAMESPACE_C shift to state 49
-- On T_NAMESPACE shift to state 50
-- On T_METHOD_C shift to state 58
-- On T_METAVAR shift to state 17
-- On T_LNUMBER shift to state 59
-- On T_LIST shift to state 69
-- On T_LINE shift to state 60
-- On T_LAMBDA_OPAR shift to state 73
-- On T_ISSET shift to state 133
-- On T_INT_CAST shift to state 135
-- On T_INSTANCEOF shift to state 52
-- On T_INCLUDE_ONCE shift to state 136
-- On T_INCLUDE shift to state 137
-- On T_INC shift to state 138
-- On T_IDENT shift to state 18
-- On T_FUNC_C shift to state 61
-- On T_FUNCTION shift to state 139
-- On T_FILE shift to state 62
-- On T_EXIT shift to state 160
-- On T_EVAL shift to state 162
-- On T_ENUM shift to state 19
-- On T_EMPTY shift to state 164
-- On T_DOUBLE_CAST shift to state 168
-- On T_DNUMBER shift to state 63
-- On T_DIR shift to state 64
-- On T_DEC shift to state 169
-- On T_CONSTANT_ENCAPSED_STRING shift to state 65
-- On T_CLONE shift to state 170
-- On T_CLASS_C shift to state 66
-- On T_BOOL_CAST shift to state 171
-- On T_AWAIT shift to state 172
-- On T_ASYNC shift to state 173
-- On T_ARRAY_CAST shift to state 200
-- On T_ARRAY shift to state 201
-- On TTILDE shift to state 204
-- On TPLUS shift to state 205
-- On TOPAR shift to state 206
-- On TOBRA shift to state 209
-- On TMINUS shift to state 210
-- On TGUIL shift to state 211
-- On TDOLLARDOLLAR shift to state 213
-- On TDOLLAR shift to state 214
-- On TBANG shift to state 216
-- On TBACKQUOTE shift to state 217
-- On TANTISLASH shift to state 85
-- On LDots shift to state 222
-- On simple_expr shift to state 223
-- On qualified_name shift to state 94
-- On qualified_class_name shift to state 225
-- On primary_expr shift to state 226
-- On new_expr shift to state 227
-- On namespace_name shift to state 102
-- On member_expr shift to state 228
-- On lambda_expr shift to state 231
-- On ident_in_name shift to state 57
-- On ident shift to state 56
-- On expr shift to state 257
-- On constant shift to state 239
-- On call_expr shift to state 240
## Reductions:

State 257:
## Known stack suffix:
## expr TMINUS expr
## LR(1) items:
expr -> expr . T_INC [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_DEC [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_BOOLEAN_OR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_BOOLEAN_AND expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_LOGICAL_OR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_LOGICAL_AND expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_LOGICAL_XOR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TPLUS expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TMINUS expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr TMINUS expr . [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TMUL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TDIV expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TMOD expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TPOW expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TAND expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TOR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TXOR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_SL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_SR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TDOT expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_IDENTICAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_NOT_IDENTICAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_NOT_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TSMALLER expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_SMALLER_OR_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TGREATER expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_GREATER_OR_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_ROCKET expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TQUESTION expr TCOLON expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TQUESTION TCOLON expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TQUESTION TQUESTION expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_INSTANCEOF expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
## Transitions:
-- On T_INSTANCEOF shift to state 235
-- On T_INC shift to state 237
-- On T_DEC shift to state 238
-- On TPOW shift to state 246
-- On TMUL shift to state 250
-- On TMOD shift to state 252
-- On TDIV shift to state 254
## Reductions:
-- On T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPLUS TOR TMINUS TGREATER TDOT TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF
--   reduce production expr -> expr TMINUS expr

State 258:
## Known stack suffix:
## expr TDOT
## LR(1) items:
expr -> expr TDOT . expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
## Transitions:
-- On T__AT shift to state 1
-- On T_YIELD shift to state 2
-- On T_VARIABLE shift to state 3
-- On T_UNSET_CAST shift to state 5
-- On T_TYPE shift to state 6
-- On T_TRAIT_C shift to state 7
-- On T_SUPER shift to state 8
-- On T_STRING_CAST shift to state 9
-- On T_STATIC shift to state 10
-- On T_START_HEREDOC shift to state 25
-- On T_SELF shift to state 40
-- On T_REQUIRE_ONCE shift to state 41
-- On T_REQUIRE shift to state 42
-- On T_PRINT shift to state 43
-- On T_PARENT shift to state 44
-- On T_OBJECT_CAST shift to state 45
-- On T_NEW shift to state 46
-- On T_NAMESPACE_C shift to state 49
-- On T_NAMESPACE shift to state 50
-- On T_METHOD_C shift to state 58
-- On T_METAVAR shift to state 17
-- On T_LNUMBER shift to state 59
-- On T_LIST shift to state 69
-- On T_LINE shift to state 60
-- On T_LAMBDA_OPAR shift to state 73
-- On T_ISSET shift to state 133
-- On T_INT_CAST shift to state 135
-- On T_INSTANCEOF shift to state 52
-- On T_INCLUDE_ONCE shift to state 136
-- On T_INCLUDE shift to state 137
-- On T_INC shift to state 138
-- On T_IDENT shift to state 18
-- On T_FUNC_C shift to state 61
-- On T_FUNCTION shift to state 139
-- On T_FILE shift to state 62
-- On T_EXIT shift to state 160
-- On T_EVAL shift to state 162
-- On T_ENUM shift to state 19
-- On T_EMPTY shift to state 164
-- On T_DOUBLE_CAST shift to state 168
-- On T_DNUMBER shift to state 63
-- On T_DIR shift to state 64
-- On T_DEC shift to state 169
-- On T_CONSTANT_ENCAPSED_STRING shift to state 65
-- On T_CLONE shift to state 170
-- On T_CLASS_C shift to state 66
-- On T_BOOL_CAST shift to state 171
-- On T_AWAIT shift to state 172
-- On T_ASYNC shift to state 173
-- On T_ARRAY_CAST shift to state 200
-- On T_ARRAY shift to state 201
-- On TTILDE shift to state 204
-- On TPLUS shift to state 205
-- On TOPAR shift to state 206
-- On TOBRA shift to state 209
-- On TMINUS shift to state 210
-- On TGUIL shift to state 211
-- On TDOLLARDOLLAR shift to state 213
-- On TDOLLAR shift to state 214
-- On TBANG shift to state 216
-- On TBACKQUOTE shift to state 217
-- On TANTISLASH shift to state 85
-- On LDots shift to state 222
-- On simple_expr shift to state 223
-- On qualified_name shift to state 94
-- On qualified_class_name shift to state 225
-- On primary_expr shift to state 226
-- On new_expr shift to state 227
-- On namespace_name shift to state 102
-- On member_expr shift to state 228
-- On lambda_expr shift to state 231
-- On ident_in_name shift to state 57
-- On ident shift to state 56
-- On expr shift to state 259
-- On constant shift to state 239
-- On call_expr shift to state 240
## Reductions:

State 259:
## Known stack suffix:
## expr TDOT expr
## LR(1) items:
expr -> expr . T_INC [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_DEC [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_BOOLEAN_OR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_BOOLEAN_AND expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_LOGICAL_OR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_LOGICAL_AND expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_LOGICAL_XOR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TPLUS expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TMINUS expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TMUL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TDIV expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TMOD expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TPOW expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TAND expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TOR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TXOR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_SL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_SR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TDOT expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr TDOT expr . [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_IDENTICAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_NOT_IDENTICAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_NOT_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TSMALLER expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_SMALLER_OR_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TGREATER expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_GREATER_OR_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_ROCKET expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TQUESTION expr TCOLON expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TQUESTION TCOLON expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TQUESTION TQUESTION expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_INSTANCEOF expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
## Transitions:
-- On T_INSTANCEOF shift to state 235
-- On T_INC shift to state 237
-- On T_DEC shift to state 238
-- On TPOW shift to state 246
-- On TMUL shift to state 250
-- On TMOD shift to state 252
-- On TDIV shift to state 254
## Reductions:
-- On T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPLUS TOR TMINUS TGREATER TDOT TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF
--   reduce production expr -> expr TDOT expr

State 260:
## Known stack suffix:
## expr T_ROCKET
## LR(1) items:
expr -> expr T_ROCKET . expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
## Transitions:
-- On T__AT shift to state 1
-- On T_YIELD shift to state 2
-- On T_VARIABLE shift to state 3
-- On T_UNSET_CAST shift to state 5
-- On T_TYPE shift to state 6
-- On T_TRAIT_C shift to state 7
-- On T_SUPER shift to state 8
-- On T_STRING_CAST shift to state 9
-- On T_STATIC shift to state 10
-- On T_START_HEREDOC shift to state 25
-- On T_SELF shift to state 40
-- On T_REQUIRE_ONCE shift to state 41
-- On T_REQUIRE shift to state 42
-- On T_PRINT shift to state 43
-- On T_PARENT shift to state 44
-- On T_OBJECT_CAST shift to state 45
-- On T_NEW shift to state 46
-- On T_NAMESPACE_C shift to state 49
-- On T_NAMESPACE shift to state 50
-- On T_METHOD_C shift to state 58
-- On T_METAVAR shift to state 17
-- On T_LNUMBER shift to state 59
-- On T_LIST shift to state 69
-- On T_LINE shift to state 60
-- On T_LAMBDA_OPAR shift to state 73
-- On T_ISSET shift to state 133
-- On T_INT_CAST shift to state 135
-- On T_INSTANCEOF shift to state 52
-- On T_INCLUDE_ONCE shift to state 136
-- On T_INCLUDE shift to state 137
-- On T_INC shift to state 138
-- On T_IDENT shift to state 18
-- On T_FUNC_C shift to state 61
-- On T_FUNCTION shift to state 139
-- On T_FILE shift to state 62
-- On T_EXIT shift to state 160
-- On T_EVAL shift to state 162
-- On T_ENUM shift to state 19
-- On T_EMPTY shift to state 164
-- On T_DOUBLE_CAST shift to state 168
-- On T_DNUMBER shift to state 63
-- On T_DIR shift to state 64
-- On T_DEC shift to state 169
-- On T_CONSTANT_ENCAPSED_STRING shift to state 65
-- On T_CLONE shift to state 170
-- On T_CLASS_C shift to state 66
-- On T_BOOL_CAST shift to state 171
-- On T_AWAIT shift to state 172
-- On T_ASYNC shift to state 173
-- On T_ARRAY_CAST shift to state 200
-- On T_ARRAY shift to state 201
-- On TTILDE shift to state 204
-- On TPLUS shift to state 205
-- On TOPAR shift to state 206
-- On TOBRA shift to state 209
-- On TMINUS shift to state 210
-- On TGUIL shift to state 211
-- On TDOLLARDOLLAR shift to state 213
-- On TDOLLAR shift to state 214
-- On TBANG shift to state 216
-- On TBACKQUOTE shift to state 217
-- On TANTISLASH shift to state 85
-- On LDots shift to state 222
-- On simple_expr shift to state 223
-- On qualified_name shift to state 94
-- On qualified_class_name shift to state 225
-- On primary_expr shift to state 226
-- On new_expr shift to state 227
-- On namespace_name shift to state 102
-- On member_expr shift to state 228
-- On lambda_expr shift to state 231
-- On ident_in_name shift to state 57
-- On ident shift to state 56
-- On expr shift to state 261
-- On constant shift to state 239
-- On call_expr shift to state 240
## Reductions:

State 261:
## Known stack suffix:
## expr T_ROCKET expr
## LR(1) items:
expr -> expr . T_INC [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_DEC [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_BOOLEAN_OR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_BOOLEAN_AND expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_LOGICAL_OR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_LOGICAL_AND expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_LOGICAL_XOR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TPLUS expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TMINUS expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TMUL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TDIV expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TMOD expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TPOW expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TAND expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TOR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TXOR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_SL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_SR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TDOT expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_IDENTICAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_NOT_IDENTICAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_NOT_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TSMALLER expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_SMALLER_OR_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TGREATER expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_GREATER_OR_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_ROCKET expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr T_ROCKET expr . [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TQUESTION expr TCOLON expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TQUESTION TCOLON expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TQUESTION TQUESTION expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_INSTANCEOF expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
## Transitions:
-- On T_SR shift to state 233
-- On T_SL shift to state 244
-- On T_IS_SMALLER_OR_EQUAL shift to state 262
-- On T_IS_GREATER_OR_EQUAL shift to state 264
-- On T_INSTANCEOF shift to state 235
-- On T_INC shift to state 237
-- On T_DEC shift to state 238
-- On TSMALLER shift to state 266
-- On TPOW shift to state 246
-- On TPLUS shift to state 248
-- On TMUL shift to state 250
-- On TMOD shift to state 252
-- On TMINUS shift to state 256
-- On TGREATER shift to state 268
-- On TDOT shift to state 258
-- On TDIV shift to state 254
## Reductions:
-- On T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSEMICOLON TQUESTION TOR TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF
--   reduce production expr -> expr T_ROCKET expr

State 262:
## Known stack suffix:
## expr T_IS_SMALLER_OR_EQUAL
## LR(1) items:
expr -> expr T_IS_SMALLER_OR_EQUAL . expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
## Transitions:
-- On T__AT shift to state 1
-- On T_YIELD shift to state 2
-- On T_VARIABLE shift to state 3
-- On T_UNSET_CAST shift to state 5
-- On T_TYPE shift to state 6
-- On T_TRAIT_C shift to state 7
-- On T_SUPER shift to state 8
-- On T_STRING_CAST shift to state 9
-- On T_STATIC shift to state 10
-- On T_START_HEREDOC shift to state 25
-- On T_SELF shift to state 40
-- On T_REQUIRE_ONCE shift to state 41
-- On T_REQUIRE shift to state 42
-- On T_PRINT shift to state 43
-- On T_PARENT shift to state 44
-- On T_OBJECT_CAST shift to state 45
-- On T_NEW shift to state 46
-- On T_NAMESPACE_C shift to state 49
-- On T_NAMESPACE shift to state 50
-- On T_METHOD_C shift to state 58
-- On T_METAVAR shift to state 17
-- On T_LNUMBER shift to state 59
-- On T_LIST shift to state 69
-- On T_LINE shift to state 60
-- On T_LAMBDA_OPAR shift to state 73
-- On T_ISSET shift to state 133
-- On T_INT_CAST shift to state 135
-- On T_INSTANCEOF shift to state 52
-- On T_INCLUDE_ONCE shift to state 136
-- On T_INCLUDE shift to state 137
-- On T_INC shift to state 138
-- On T_IDENT shift to state 18
-- On T_FUNC_C shift to state 61
-- On T_FUNCTION shift to state 139
-- On T_FILE shift to state 62
-- On T_EXIT shift to state 160
-- On T_EVAL shift to state 162
-- On T_ENUM shift to state 19
-- On T_EMPTY shift to state 164
-- On T_DOUBLE_CAST shift to state 168
-- On T_DNUMBER shift to state 63
-- On T_DIR shift to state 64
-- On T_DEC shift to state 169
-- On T_CONSTANT_ENCAPSED_STRING shift to state 65
-- On T_CLONE shift to state 170
-- On T_CLASS_C shift to state 66
-- On T_BOOL_CAST shift to state 171
-- On T_AWAIT shift to state 172
-- On T_ASYNC shift to state 173
-- On T_ARRAY_CAST shift to state 200
-- On T_ARRAY shift to state 201
-- On TTILDE shift to state 204
-- On TPLUS shift to state 205
-- On TOPAR shift to state 206
-- On TOBRA shift to state 209
-- On TMINUS shift to state 210
-- On TGUIL shift to state 211
-- On TDOLLARDOLLAR shift to state 213
-- On TDOLLAR shift to state 214
-- On TBANG shift to state 216
-- On TBACKQUOTE shift to state 217
-- On TANTISLASH shift to state 85
-- On LDots shift to state 222
-- On simple_expr shift to state 223
-- On qualified_name shift to state 94
-- On qualified_class_name shift to state 225
-- On primary_expr shift to state 226
-- On new_expr shift to state 227
-- On namespace_name shift to state 102
-- On member_expr shift to state 228
-- On lambda_expr shift to state 231
-- On ident_in_name shift to state 57
-- On ident shift to state 56
-- On expr shift to state 263
-- On constant shift to state 239
-- On call_expr shift to state 240
## Reductions:

State 263:
## Known stack suffix:
## expr T_IS_SMALLER_OR_EQUAL expr
## LR(1) items:
expr -> expr . T_INC [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_DEC [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_BOOLEAN_OR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_BOOLEAN_AND expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_LOGICAL_OR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_LOGICAL_AND expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_LOGICAL_XOR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TPLUS expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TMINUS expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TMUL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TDIV expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TMOD expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TPOW expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TAND expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TOR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TXOR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_SL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_SR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TDOT expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_IDENTICAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_NOT_IDENTICAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_NOT_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TSMALLER expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_SMALLER_OR_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr T_IS_SMALLER_OR_EQUAL expr . [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TGREATER expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_GREATER_OR_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_ROCKET expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TQUESTION expr TCOLON expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TQUESTION TCOLON expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TQUESTION TQUESTION expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_INSTANCEOF expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
## Transitions:
-- On T_SR shift to state 233
-- On T_SL shift to state 244
-- On T_INSTANCEOF shift to state 235
-- On T_INC shift to state 237
-- On T_DEC shift to state 238
-- On TPOW shift to state 246
-- On TPLUS shift to state 248
-- On TMUL shift to state 250
-- On TMOD shift to state 252
-- On TMINUS shift to state 256
-- On TDOT shift to state 258
-- On TDIV shift to state 254
## Reductions:
-- On T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_EQUAL T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSEMICOLON TQUESTION TOR TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF
--   reduce production expr -> expr T_IS_SMALLER_OR_EQUAL expr

State 264:
## Known stack suffix:
## expr T_IS_GREATER_OR_EQUAL
## LR(1) items:
expr -> expr T_IS_GREATER_OR_EQUAL . expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
## Transitions:
-- On T__AT shift to state 1
-- On T_YIELD shift to state 2
-- On T_VARIABLE shift to state 3
-- On T_UNSET_CAST shift to state 5
-- On T_TYPE shift to state 6
-- On T_TRAIT_C shift to state 7
-- On T_SUPER shift to state 8
-- On T_STRING_CAST shift to state 9
-- On T_STATIC shift to state 10
-- On T_START_HEREDOC shift to state 25
-- On T_SELF shift to state 40
-- On T_REQUIRE_ONCE shift to state 41
-- On T_REQUIRE shift to state 42
-- On T_PRINT shift to state 43
-- On T_PARENT shift to state 44
-- On T_OBJECT_CAST shift to state 45
-- On T_NEW shift to state 46
-- On T_NAMESPACE_C shift to state 49
-- On T_NAMESPACE shift to state 50
-- On T_METHOD_C shift to state 58
-- On T_METAVAR shift to state 17
-- On T_LNUMBER shift to state 59
-- On T_LIST shift to state 69
-- On T_LINE shift to state 60
-- On T_LAMBDA_OPAR shift to state 73
-- On T_ISSET shift to state 133
-- On T_INT_CAST shift to state 135
-- On T_INSTANCEOF shift to state 52
-- On T_INCLUDE_ONCE shift to state 136
-- On T_INCLUDE shift to state 137
-- On T_INC shift to state 138
-- On T_IDENT shift to state 18
-- On T_FUNC_C shift to state 61
-- On T_FUNCTION shift to state 139
-- On T_FILE shift to state 62
-- On T_EXIT shift to state 160
-- On T_EVAL shift to state 162
-- On T_ENUM shift to state 19
-- On T_EMPTY shift to state 164
-- On T_DOUBLE_CAST shift to state 168
-- On T_DNUMBER shift to state 63
-- On T_DIR shift to state 64
-- On T_DEC shift to state 169
-- On T_CONSTANT_ENCAPSED_STRING shift to state 65
-- On T_CLONE shift to state 170
-- On T_CLASS_C shift to state 66
-- On T_BOOL_CAST shift to state 171
-- On T_AWAIT shift to state 172
-- On T_ASYNC shift to state 173
-- On T_ARRAY_CAST shift to state 200
-- On T_ARRAY shift to state 201
-- On TTILDE shift to state 204
-- On TPLUS shift to state 205
-- On TOPAR shift to state 206
-- On TOBRA shift to state 209
-- On TMINUS shift to state 210
-- On TGUIL shift to state 211
-- On TDOLLARDOLLAR shift to state 213
-- On TDOLLAR shift to state 214
-- On TBANG shift to state 216
-- On TBACKQUOTE shift to state 217
-- On TANTISLASH shift to state 85
-- On LDots shift to state 222
-- On simple_expr shift to state 223
-- On qualified_name shift to state 94
-- On qualified_class_name shift to state 225
-- On primary_expr shift to state 226
-- On new_expr shift to state 227
-- On namespace_name shift to state 102
-- On member_expr shift to state 228
-- On lambda_expr shift to state 231
-- On ident_in_name shift to state 57
-- On ident shift to state 56
-- On expr shift to state 265
-- On constant shift to state 239
-- On call_expr shift to state 240
## Reductions:

State 265:
## Known stack suffix:
## expr T_IS_GREATER_OR_EQUAL expr
## LR(1) items:
expr -> expr . T_INC [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_DEC [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_BOOLEAN_OR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_BOOLEAN_AND expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_LOGICAL_OR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_LOGICAL_AND expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_LOGICAL_XOR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TPLUS expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TMINUS expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TMUL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TDIV expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TMOD expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TPOW expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TAND expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TOR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TXOR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_SL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_SR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TDOT expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_IDENTICAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_NOT_IDENTICAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_NOT_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TSMALLER expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_SMALLER_OR_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TGREATER expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_GREATER_OR_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr T_IS_GREATER_OR_EQUAL expr . [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_ROCKET expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TQUESTION expr TCOLON expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TQUESTION TCOLON expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TQUESTION TQUESTION expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_INSTANCEOF expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
## Transitions:
-- On T_SR shift to state 233
-- On T_SL shift to state 244
-- On T_INSTANCEOF shift to state 235
-- On T_INC shift to state 237
-- On T_DEC shift to state 238
-- On TPOW shift to state 246
-- On TPLUS shift to state 248
-- On TMUL shift to state 250
-- On TMOD shift to state 252
-- On TMINUS shift to state 256
-- On TDOT shift to state 258
-- On TDIV shift to state 254
## Reductions:
-- On T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_EQUAL T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSEMICOLON TQUESTION TOR TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF
--   reduce production expr -> expr T_IS_GREATER_OR_EQUAL expr

State 266:
## Known stack suffix:
## expr TSMALLER
## LR(1) items:
expr -> expr TSMALLER . expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
## Transitions:
-- On T__AT shift to state 1
-- On T_YIELD shift to state 2
-- On T_VARIABLE shift to state 3
-- On T_UNSET_CAST shift to state 5
-- On T_TYPE shift to state 6
-- On T_TRAIT_C shift to state 7
-- On T_SUPER shift to state 8
-- On T_STRING_CAST shift to state 9
-- On T_STATIC shift to state 10
-- On T_START_HEREDOC shift to state 25
-- On T_SELF shift to state 40
-- On T_REQUIRE_ONCE shift to state 41
-- On T_REQUIRE shift to state 42
-- On T_PRINT shift to state 43
-- On T_PARENT shift to state 44
-- On T_OBJECT_CAST shift to state 45
-- On T_NEW shift to state 46
-- On T_NAMESPACE_C shift to state 49
-- On T_NAMESPACE shift to state 50
-- On T_METHOD_C shift to state 58
-- On T_METAVAR shift to state 17
-- On T_LNUMBER shift to state 59
-- On T_LIST shift to state 69
-- On T_LINE shift to state 60
-- On T_LAMBDA_OPAR shift to state 73
-- On T_ISSET shift to state 133
-- On T_INT_CAST shift to state 135
-- On T_INSTANCEOF shift to state 52
-- On T_INCLUDE_ONCE shift to state 136
-- On T_INCLUDE shift to state 137
-- On T_INC shift to state 138
-- On T_IDENT shift to state 18
-- On T_FUNC_C shift to state 61
-- On T_FUNCTION shift to state 139
-- On T_FILE shift to state 62
-- On T_EXIT shift to state 160
-- On T_EVAL shift to state 162
-- On T_ENUM shift to state 19
-- On T_EMPTY shift to state 164
-- On T_DOUBLE_CAST shift to state 168
-- On T_DNUMBER shift to state 63
-- On T_DIR shift to state 64
-- On T_DEC shift to state 169
-- On T_CONSTANT_ENCAPSED_STRING shift to state 65
-- On T_CLONE shift to state 170
-- On T_CLASS_C shift to state 66
-- On T_BOOL_CAST shift to state 171
-- On T_AWAIT shift to state 172
-- On T_ASYNC shift to state 173
-- On T_ARRAY_CAST shift to state 200
-- On T_ARRAY shift to state 201
-- On TTILDE shift to state 204
-- On TPLUS shift to state 205
-- On TOPAR shift to state 206
-- On TOBRA shift to state 209
-- On TMINUS shift to state 210
-- On TGUIL shift to state 211
-- On TDOLLARDOLLAR shift to state 213
-- On TDOLLAR shift to state 214
-- On TBANG shift to state 216
-- On TBACKQUOTE shift to state 217
-- On TANTISLASH shift to state 85
-- On LDots shift to state 222
-- On simple_expr shift to state 223
-- On qualified_name shift to state 94
-- On qualified_class_name shift to state 225
-- On primary_expr shift to state 226
-- On new_expr shift to state 227
-- On namespace_name shift to state 102
-- On member_expr shift to state 228
-- On lambda_expr shift to state 231
-- On ident_in_name shift to state 57
-- On ident shift to state 56
-- On expr shift to state 267
-- On constant shift to state 239
-- On call_expr shift to state 240
## Reductions:

State 267:
## Known stack suffix:
## expr TSMALLER expr
## LR(1) items:
expr -> expr . T_INC [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_DEC [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_BOOLEAN_OR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_BOOLEAN_AND expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_LOGICAL_OR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_LOGICAL_AND expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_LOGICAL_XOR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TPLUS expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TMINUS expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TMUL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TDIV expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TMOD expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TPOW expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TAND expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TOR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TXOR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_SL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_SR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TDOT expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_IDENTICAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_NOT_IDENTICAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_NOT_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TSMALLER expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr TSMALLER expr . [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_SMALLER_OR_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TGREATER expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_GREATER_OR_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_ROCKET expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TQUESTION expr TCOLON expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TQUESTION TCOLON expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TQUESTION TQUESTION expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_INSTANCEOF expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
## Transitions:
-- On T_SR shift to state 233
-- On T_SL shift to state 244
-- On T_INSTANCEOF shift to state 235
-- On T_INC shift to state 237
-- On T_DEC shift to state 238
-- On TPOW shift to state 246
-- On TPLUS shift to state 248
-- On TMUL shift to state 250
-- On TMOD shift to state 252
-- On TMINUS shift to state 256
-- On TDOT shift to state 258
-- On TDIV shift to state 254
## Reductions:
-- On T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_EQUAL T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSEMICOLON TQUESTION TOR TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF
--   reduce production expr -> expr TSMALLER expr

State 268:
## Known stack suffix:
## expr TGREATER
## LR(1) items:
expr -> expr TGREATER . expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
## Transitions:
-- On T__AT shift to state 1
-- On T_YIELD shift to state 2
-- On T_VARIABLE shift to state 3
-- On T_UNSET_CAST shift to state 5
-- On T_TYPE shift to state 6
-- On T_TRAIT_C shift to state 7
-- On T_SUPER shift to state 8
-- On T_STRING_CAST shift to state 9
-- On T_STATIC shift to state 10
-- On T_START_HEREDOC shift to state 25
-- On T_SELF shift to state 40
-- On T_REQUIRE_ONCE shift to state 41
-- On T_REQUIRE shift to state 42
-- On T_PRINT shift to state 43
-- On T_PARENT shift to state 44
-- On T_OBJECT_CAST shift to state 45
-- On T_NEW shift to state 46
-- On T_NAMESPACE_C shift to state 49
-- On T_NAMESPACE shift to state 50
-- On T_METHOD_C shift to state 58
-- On T_METAVAR shift to state 17
-- On T_LNUMBER shift to state 59
-- On T_LIST shift to state 69
-- On T_LINE shift to state 60
-- On T_LAMBDA_OPAR shift to state 73
-- On T_ISSET shift to state 133
-- On T_INT_CAST shift to state 135
-- On T_INSTANCEOF shift to state 52
-- On T_INCLUDE_ONCE shift to state 136
-- On T_INCLUDE shift to state 137
-- On T_INC shift to state 138
-- On T_IDENT shift to state 18
-- On T_FUNC_C shift to state 61
-- On T_FUNCTION shift to state 139
-- On T_FILE shift to state 62
-- On T_EXIT shift to state 160
-- On T_EVAL shift to state 162
-- On T_ENUM shift to state 19
-- On T_EMPTY shift to state 164
-- On T_DOUBLE_CAST shift to state 168
-- On T_DNUMBER shift to state 63
-- On T_DIR shift to state 64
-- On T_DEC shift to state 169
-- On T_CONSTANT_ENCAPSED_STRING shift to state 65
-- On T_CLONE shift to state 170
-- On T_CLASS_C shift to state 66
-- On T_BOOL_CAST shift to state 171
-- On T_AWAIT shift to state 172
-- On T_ASYNC shift to state 173
-- On T_ARRAY_CAST shift to state 200
-- On T_ARRAY shift to state 201
-- On TTILDE shift to state 204
-- On TPLUS shift to state 205
-- On TOPAR shift to state 206
-- On TOBRA shift to state 209
-- On TMINUS shift to state 210
-- On TGUIL shift to state 211
-- On TDOLLARDOLLAR shift to state 213
-- On TDOLLAR shift to state 214
-- On TBANG shift to state 216
-- On TBACKQUOTE shift to state 217
-- On TANTISLASH shift to state 85
-- On LDots shift to state 222
-- On simple_expr shift to state 223
-- On qualified_name shift to state 94
-- On qualified_class_name shift to state 225
-- On primary_expr shift to state 226
-- On new_expr shift to state 227
-- On namespace_name shift to state 102
-- On member_expr shift to state 228
-- On lambda_expr shift to state 231
-- On ident_in_name shift to state 57
-- On ident shift to state 56
-- On expr shift to state 269
-- On constant shift to state 239
-- On call_expr shift to state 240
## Reductions:

State 269:
## Known stack suffix:
## expr TGREATER expr
## LR(1) items:
expr -> expr . T_INC [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_DEC [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_BOOLEAN_OR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_BOOLEAN_AND expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_LOGICAL_OR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_LOGICAL_AND expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_LOGICAL_XOR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TPLUS expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TMINUS expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TMUL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TDIV expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TMOD expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TPOW expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TAND expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TOR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TXOR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_SL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_SR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TDOT expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_IDENTICAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_NOT_IDENTICAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_NOT_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TSMALLER expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_SMALLER_OR_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TGREATER expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr TGREATER expr . [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_GREATER_OR_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_ROCKET expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TQUESTION expr TCOLON expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TQUESTION TCOLON expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TQUESTION TQUESTION expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_INSTANCEOF expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
## Transitions:
-- On T_SR shift to state 233
-- On T_SL shift to state 244
-- On T_INSTANCEOF shift to state 235
-- On T_INC shift to state 237
-- On T_DEC shift to state 238
-- On TPOW shift to state 246
-- On TPLUS shift to state 248
-- On TMUL shift to state 250
-- On TMOD shift to state 252
-- On TMINUS shift to state 256
-- On TDOT shift to state 258
-- On TDIV shift to state 254
## Reductions:
-- On T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_EQUAL T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSEMICOLON TQUESTION TOR TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF
--   reduce production expr -> expr TGREATER expr

State 270:
## Known stack suffix:
## expr T_LOGICAL_XOR
## LR(1) items:
expr -> expr T_LOGICAL_XOR . expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
## Transitions:
-- On T__AT shift to state 1
-- On T_YIELD shift to state 2
-- On T_VARIABLE shift to state 3
-- On T_UNSET_CAST shift to state 5
-- On T_TYPE shift to state 6
-- On T_TRAIT_C shift to state 7
-- On T_SUPER shift to state 8
-- On T_STRING_CAST shift to state 9
-- On T_STATIC shift to state 10
-- On T_START_HEREDOC shift to state 25
-- On T_SELF shift to state 40
-- On T_REQUIRE_ONCE shift to state 41
-- On T_REQUIRE shift to state 42
-- On T_PRINT shift to state 43
-- On T_PARENT shift to state 44
-- On T_OBJECT_CAST shift to state 45
-- On T_NEW shift to state 46
-- On T_NAMESPACE_C shift to state 49
-- On T_NAMESPACE shift to state 50
-- On T_METHOD_C shift to state 58
-- On T_METAVAR shift to state 17
-- On T_LNUMBER shift to state 59
-- On T_LIST shift to state 69
-- On T_LINE shift to state 60
-- On T_LAMBDA_OPAR shift to state 73
-- On T_ISSET shift to state 133
-- On T_INT_CAST shift to state 135
-- On T_INSTANCEOF shift to state 52
-- On T_INCLUDE_ONCE shift to state 136
-- On T_INCLUDE shift to state 137
-- On T_INC shift to state 138
-- On T_IDENT shift to state 18
-- On T_FUNC_C shift to state 61
-- On T_FUNCTION shift to state 139
-- On T_FILE shift to state 62
-- On T_EXIT shift to state 160
-- On T_EVAL shift to state 162
-- On T_ENUM shift to state 19
-- On T_EMPTY shift to state 164
-- On T_DOUBLE_CAST shift to state 168
-- On T_DNUMBER shift to state 63
-- On T_DIR shift to state 64
-- On T_DEC shift to state 169
-- On T_CONSTANT_ENCAPSED_STRING shift to state 65
-- On T_CLONE shift to state 170
-- On T_CLASS_C shift to state 66
-- On T_BOOL_CAST shift to state 171
-- On T_AWAIT shift to state 172
-- On T_ASYNC shift to state 173
-- On T_ARRAY_CAST shift to state 200
-- On T_ARRAY shift to state 201
-- On TTILDE shift to state 204
-- On TPLUS shift to state 205
-- On TOPAR shift to state 206
-- On TOBRA shift to state 209
-- On TMINUS shift to state 210
-- On TGUIL shift to state 211
-- On TDOLLARDOLLAR shift to state 213
-- On TDOLLAR shift to state 214
-- On TBANG shift to state 216
-- On TBACKQUOTE shift to state 217
-- On TANTISLASH shift to state 85
-- On LDots shift to state 222
-- On simple_expr shift to state 223
-- On qualified_name shift to state 94
-- On qualified_class_name shift to state 225
-- On primary_expr shift to state 226
-- On new_expr shift to state 227
-- On namespace_name shift to state 102
-- On member_expr shift to state 228
-- On lambda_expr shift to state 231
-- On ident_in_name shift to state 57
-- On ident shift to state 56
-- On expr shift to state 271
-- On constant shift to state 239
-- On call_expr shift to state 240
## Reductions:

State 271:
## Known stack suffix:
## expr T_LOGICAL_XOR expr
## LR(1) items:
expr -> expr . T_INC [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_DEC [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_BOOLEAN_OR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_BOOLEAN_AND expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_LOGICAL_OR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_LOGICAL_AND expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_LOGICAL_XOR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr T_LOGICAL_XOR expr . [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TPLUS expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TMINUS expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TMUL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TDIV expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TMOD expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TPOW expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TAND expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TOR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TXOR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_SL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_SR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TDOT expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_IDENTICAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_NOT_IDENTICAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_NOT_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TSMALLER expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_SMALLER_OR_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TGREATER expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_GREATER_OR_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_ROCKET expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TQUESTION expr TCOLON expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TQUESTION TCOLON expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TQUESTION TQUESTION expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_INSTANCEOF expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
## Transitions:
-- On T_SR shift to state 233
-- On T_SL shift to state 244
-- On T_ROCKET shift to state 260
-- On T_LOGICAL_AND shift to state 272
-- On T_IS_SMALLER_OR_EQUAL shift to state 262
-- On T_IS_NOT_IDENTICAL shift to state 274
-- On T_IS_NOT_EQUAL shift to state 276
-- On T_IS_IDENTICAL shift to state 278
-- On T_IS_GREATER_OR_EQUAL shift to state 264
-- On T_IS_EQUAL shift to state 280
-- On T_INSTANCEOF shift to state 235
-- On T_INC shift to state 237
-- On T_DEC shift to state 238
-- On T_BOOLEAN_OR shift to state 282
-- On T_BOOLEAN_AND shift to state 284
-- On TXOR shift to state 286
-- On TSMALLER shift to state 266
-- On TQUESTION shift to state 292
-- On TPOW shift to state 246
-- On TPLUS shift to state 248
-- On TOR shift to state 290
-- On TMUL shift to state 250
-- On TMOD shift to state 252
-- On TMINUS shift to state 256
-- On TGREATER shift to state 268
-- On TDOT shift to state 258
-- On TDIV shift to state 254
-- On TAND shift to state 288
## Reductions:
-- On T_LOGICAL_XOR T_LOGICAL_OR T_LAMBDA_CPAR T_CLOSE_TAG_OF_ECHO T_AWAIT T_AS T_ARROW TSEMICOLON TCPAR TCOMMA TCOLON TCBRACE TCBRA RDots EOF
--   reduce production expr -> expr T_LOGICAL_XOR expr

State 272:
## Known stack suffix:
## expr T_LOGICAL_AND
## LR(1) items:
expr -> expr T_LOGICAL_AND . expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
## Transitions:
-- On T__AT shift to state 1
-- On T_YIELD shift to state 2
-- On T_VARIABLE shift to state 3
-- On T_UNSET_CAST shift to state 5
-- On T_TYPE shift to state 6
-- On T_TRAIT_C shift to state 7
-- On T_SUPER shift to state 8
-- On T_STRING_CAST shift to state 9
-- On T_STATIC shift to state 10
-- On T_START_HEREDOC shift to state 25
-- On T_SELF shift to state 40
-- On T_REQUIRE_ONCE shift to state 41
-- On T_REQUIRE shift to state 42
-- On T_PRINT shift to state 43
-- On T_PARENT shift to state 44
-- On T_OBJECT_CAST shift to state 45
-- On T_NEW shift to state 46
-- On T_NAMESPACE_C shift to state 49
-- On T_NAMESPACE shift to state 50
-- On T_METHOD_C shift to state 58
-- On T_METAVAR shift to state 17
-- On T_LNUMBER shift to state 59
-- On T_LIST shift to state 69
-- On T_LINE shift to state 60
-- On T_LAMBDA_OPAR shift to state 73
-- On T_ISSET shift to state 133
-- On T_INT_CAST shift to state 135
-- On T_INSTANCEOF shift to state 52
-- On T_INCLUDE_ONCE shift to state 136
-- On T_INCLUDE shift to state 137
-- On T_INC shift to state 138
-- On T_IDENT shift to state 18
-- On T_FUNC_C shift to state 61
-- On T_FUNCTION shift to state 139
-- On T_FILE shift to state 62
-- On T_EXIT shift to state 160
-- On T_EVAL shift to state 162
-- On T_ENUM shift to state 19
-- On T_EMPTY shift to state 164
-- On T_DOUBLE_CAST shift to state 168
-- On T_DNUMBER shift to state 63
-- On T_DIR shift to state 64
-- On T_DEC shift to state 169
-- On T_CONSTANT_ENCAPSED_STRING shift to state 65
-- On T_CLONE shift to state 170
-- On T_CLASS_C shift to state 66
-- On T_BOOL_CAST shift to state 171
-- On T_AWAIT shift to state 172
-- On T_ASYNC shift to state 173
-- On T_ARRAY_CAST shift to state 200
-- On T_ARRAY shift to state 201
-- On TTILDE shift to state 204
-- On TPLUS shift to state 205
-- On TOPAR shift to state 206
-- On TOBRA shift to state 209
-- On TMINUS shift to state 210
-- On TGUIL shift to state 211
-- On TDOLLARDOLLAR shift to state 213
-- On TDOLLAR shift to state 214
-- On TBANG shift to state 216
-- On TBACKQUOTE shift to state 217
-- On TANTISLASH shift to state 85
-- On LDots shift to state 222
-- On simple_expr shift to state 223
-- On qualified_name shift to state 94
-- On qualified_class_name shift to state 225
-- On primary_expr shift to state 226
-- On new_expr shift to state 227
-- On namespace_name shift to state 102
-- On member_expr shift to state 228
-- On lambda_expr shift to state 231
-- On ident_in_name shift to state 57
-- On ident shift to state 56
-- On expr shift to state 273
-- On constant shift to state 239
-- On call_expr shift to state 240
## Reductions:

State 273:
## Known stack suffix:
## expr T_LOGICAL_AND expr
## LR(1) items:
expr -> expr . T_INC [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_DEC [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_BOOLEAN_OR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_BOOLEAN_AND expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_LOGICAL_OR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_LOGICAL_AND expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr T_LOGICAL_AND expr . [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_LOGICAL_XOR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TPLUS expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TMINUS expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TMUL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TDIV expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TMOD expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TPOW expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TAND expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TOR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TXOR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_SL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_SR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TDOT expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_IDENTICAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_NOT_IDENTICAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_NOT_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TSMALLER expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_SMALLER_OR_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TGREATER expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_GREATER_OR_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_ROCKET expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TQUESTION expr TCOLON expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TQUESTION TCOLON expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TQUESTION TQUESTION expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_INSTANCEOF expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
## Transitions:
-- On T_SR shift to state 233
-- On T_SL shift to state 244
-- On T_ROCKET shift to state 260
-- On T_IS_SMALLER_OR_EQUAL shift to state 262
-- On T_IS_NOT_IDENTICAL shift to state 274
-- On T_IS_NOT_EQUAL shift to state 276
-- On T_IS_IDENTICAL shift to state 278
-- On T_IS_GREATER_OR_EQUAL shift to state 264
-- On T_IS_EQUAL shift to state 280
-- On T_INSTANCEOF shift to state 235
-- On T_INC shift to state 237
-- On T_DEC shift to state 238
-- On T_BOOLEAN_OR shift to state 282
-- On T_BOOLEAN_AND shift to state 284
-- On TXOR shift to state 286
-- On TSMALLER shift to state 266
-- On TQUESTION shift to state 292
-- On TPOW shift to state 246
-- On TPLUS shift to state 248
-- On TOR shift to state 290
-- On TMUL shift to state 250
-- On TMOD shift to state 252
-- On TMINUS shift to state 256
-- On TGREATER shift to state 268
-- On TDOT shift to state 258
-- On TDIV shift to state 254
-- On TAND shift to state 288
## Reductions:
-- On T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_CLOSE_TAG_OF_ECHO T_AWAIT T_AS T_ARROW TSEMICOLON TCPAR TCOMMA TCOLON TCBRACE TCBRA RDots EOF
--   reduce production expr -> expr T_LOGICAL_AND expr

State 274:
## Known stack suffix:
## expr T_IS_NOT_IDENTICAL
## LR(1) items:
expr -> expr T_IS_NOT_IDENTICAL . expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
## Transitions:
-- On T__AT shift to state 1
-- On T_YIELD shift to state 2
-- On T_VARIABLE shift to state 3
-- On T_UNSET_CAST shift to state 5
-- On T_TYPE shift to state 6
-- On T_TRAIT_C shift to state 7
-- On T_SUPER shift to state 8
-- On T_STRING_CAST shift to state 9
-- On T_STATIC shift to state 10
-- On T_START_HEREDOC shift to state 25
-- On T_SELF shift to state 40
-- On T_REQUIRE_ONCE shift to state 41
-- On T_REQUIRE shift to state 42
-- On T_PRINT shift to state 43
-- On T_PARENT shift to state 44
-- On T_OBJECT_CAST shift to state 45
-- On T_NEW shift to state 46
-- On T_NAMESPACE_C shift to state 49
-- On T_NAMESPACE shift to state 50
-- On T_METHOD_C shift to state 58
-- On T_METAVAR shift to state 17
-- On T_LNUMBER shift to state 59
-- On T_LIST shift to state 69
-- On T_LINE shift to state 60
-- On T_LAMBDA_OPAR shift to state 73
-- On T_ISSET shift to state 133
-- On T_INT_CAST shift to state 135
-- On T_INSTANCEOF shift to state 52
-- On T_INCLUDE_ONCE shift to state 136
-- On T_INCLUDE shift to state 137
-- On T_INC shift to state 138
-- On T_IDENT shift to state 18
-- On T_FUNC_C shift to state 61
-- On T_FUNCTION shift to state 139
-- On T_FILE shift to state 62
-- On T_EXIT shift to state 160
-- On T_EVAL shift to state 162
-- On T_ENUM shift to state 19
-- On T_EMPTY shift to state 164
-- On T_DOUBLE_CAST shift to state 168
-- On T_DNUMBER shift to state 63
-- On T_DIR shift to state 64
-- On T_DEC shift to state 169
-- On T_CONSTANT_ENCAPSED_STRING shift to state 65
-- On T_CLONE shift to state 170
-- On T_CLASS_C shift to state 66
-- On T_BOOL_CAST shift to state 171
-- On T_AWAIT shift to state 172
-- On T_ASYNC shift to state 173
-- On T_ARRAY_CAST shift to state 200
-- On T_ARRAY shift to state 201
-- On TTILDE shift to state 204
-- On TPLUS shift to state 205
-- On TOPAR shift to state 206
-- On TOBRA shift to state 209
-- On TMINUS shift to state 210
-- On TGUIL shift to state 211
-- On TDOLLARDOLLAR shift to state 213
-- On TDOLLAR shift to state 214
-- On TBANG shift to state 216
-- On TBACKQUOTE shift to state 217
-- On TANTISLASH shift to state 85
-- On LDots shift to state 222
-- On simple_expr shift to state 223
-- On qualified_name shift to state 94
-- On qualified_class_name shift to state 225
-- On primary_expr shift to state 226
-- On new_expr shift to state 227
-- On namespace_name shift to state 102
-- On member_expr shift to state 228
-- On lambda_expr shift to state 231
-- On ident_in_name shift to state 57
-- On ident shift to state 56
-- On expr shift to state 275
-- On constant shift to state 239
-- On call_expr shift to state 240
## Reductions:

State 275:
## Known stack suffix:
## expr T_IS_NOT_IDENTICAL expr
## LR(1) items:
expr -> expr . T_INC [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_DEC [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_BOOLEAN_OR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_BOOLEAN_AND expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_LOGICAL_OR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_LOGICAL_AND expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_LOGICAL_XOR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TPLUS expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TMINUS expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TMUL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TDIV expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TMOD expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TPOW expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TAND expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TOR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TXOR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_SL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_SR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TDOT expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_IDENTICAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_NOT_IDENTICAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr T_IS_NOT_IDENTICAL expr . [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_NOT_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TSMALLER expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_SMALLER_OR_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TGREATER expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_GREATER_OR_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_ROCKET expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TQUESTION expr TCOLON expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TQUESTION TCOLON expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TQUESTION TQUESTION expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_INSTANCEOF expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
## Transitions:
-- On T_SR shift to state 233
-- On T_SL shift to state 244
-- On T_IS_SMALLER_OR_EQUAL shift to state 262
-- On T_IS_GREATER_OR_EQUAL shift to state 264
-- On T_INSTANCEOF shift to state 235
-- On T_INC shift to state 237
-- On T_DEC shift to state 238
-- On TSMALLER shift to state 266
-- On TPOW shift to state 246
-- On TPLUS shift to state 248
-- On TMUL shift to state 250
-- On TMOD shift to state 252
-- On TMINUS shift to state 256
-- On TGREATER shift to state 268
-- On TDOT shift to state 258
-- On TDIV shift to state 254
## Reductions:
-- On T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSEMICOLON TQUESTION TOR TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF
--   reduce production expr -> expr T_IS_NOT_IDENTICAL expr

State 276:
## Known stack suffix:
## expr T_IS_NOT_EQUAL
## LR(1) items:
expr -> expr T_IS_NOT_EQUAL . expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
## Transitions:
-- On T__AT shift to state 1
-- On T_YIELD shift to state 2
-- On T_VARIABLE shift to state 3
-- On T_UNSET_CAST shift to state 5
-- On T_TYPE shift to state 6
-- On T_TRAIT_C shift to state 7
-- On T_SUPER shift to state 8
-- On T_STRING_CAST shift to state 9
-- On T_STATIC shift to state 10
-- On T_START_HEREDOC shift to state 25
-- On T_SELF shift to state 40
-- On T_REQUIRE_ONCE shift to state 41
-- On T_REQUIRE shift to state 42
-- On T_PRINT shift to state 43
-- On T_PARENT shift to state 44
-- On T_OBJECT_CAST shift to state 45
-- On T_NEW shift to state 46
-- On T_NAMESPACE_C shift to state 49
-- On T_NAMESPACE shift to state 50
-- On T_METHOD_C shift to state 58
-- On T_METAVAR shift to state 17
-- On T_LNUMBER shift to state 59
-- On T_LIST shift to state 69
-- On T_LINE shift to state 60
-- On T_LAMBDA_OPAR shift to state 73
-- On T_ISSET shift to state 133
-- On T_INT_CAST shift to state 135
-- On T_INSTANCEOF shift to state 52
-- On T_INCLUDE_ONCE shift to state 136
-- On T_INCLUDE shift to state 137
-- On T_INC shift to state 138
-- On T_IDENT shift to state 18
-- On T_FUNC_C shift to state 61
-- On T_FUNCTION shift to state 139
-- On T_FILE shift to state 62
-- On T_EXIT shift to state 160
-- On T_EVAL shift to state 162
-- On T_ENUM shift to state 19
-- On T_EMPTY shift to state 164
-- On T_DOUBLE_CAST shift to state 168
-- On T_DNUMBER shift to state 63
-- On T_DIR shift to state 64
-- On T_DEC shift to state 169
-- On T_CONSTANT_ENCAPSED_STRING shift to state 65
-- On T_CLONE shift to state 170
-- On T_CLASS_C shift to state 66
-- On T_BOOL_CAST shift to state 171
-- On T_AWAIT shift to state 172
-- On T_ASYNC shift to state 173
-- On T_ARRAY_CAST shift to state 200
-- On T_ARRAY shift to state 201
-- On TTILDE shift to state 204
-- On TPLUS shift to state 205
-- On TOPAR shift to state 206
-- On TOBRA shift to state 209
-- On TMINUS shift to state 210
-- On TGUIL shift to state 211
-- On TDOLLARDOLLAR shift to state 213
-- On TDOLLAR shift to state 214
-- On TBANG shift to state 216
-- On TBACKQUOTE shift to state 217
-- On TANTISLASH shift to state 85
-- On LDots shift to state 222
-- On simple_expr shift to state 223
-- On qualified_name shift to state 94
-- On qualified_class_name shift to state 225
-- On primary_expr shift to state 226
-- On new_expr shift to state 227
-- On namespace_name shift to state 102
-- On member_expr shift to state 228
-- On lambda_expr shift to state 231
-- On ident_in_name shift to state 57
-- On ident shift to state 56
-- On expr shift to state 277
-- On constant shift to state 239
-- On call_expr shift to state 240
## Reductions:

State 277:
## Known stack suffix:
## expr T_IS_NOT_EQUAL expr
## LR(1) items:
expr -> expr . T_INC [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_DEC [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_BOOLEAN_OR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_BOOLEAN_AND expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_LOGICAL_OR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_LOGICAL_AND expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_LOGICAL_XOR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TPLUS expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TMINUS expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TMUL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TDIV expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TMOD expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TPOW expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TAND expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TOR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TXOR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_SL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_SR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TDOT expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_IDENTICAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_NOT_IDENTICAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_NOT_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr T_IS_NOT_EQUAL expr . [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TSMALLER expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_SMALLER_OR_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TGREATER expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_GREATER_OR_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_ROCKET expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TQUESTION expr TCOLON expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TQUESTION TCOLON expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TQUESTION TQUESTION expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_INSTANCEOF expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
## Transitions:
-- On T_SR shift to state 233
-- On T_SL shift to state 244
-- On T_IS_SMALLER_OR_EQUAL shift to state 262
-- On T_IS_GREATER_OR_EQUAL shift to state 264
-- On T_INSTANCEOF shift to state 235
-- On T_INC shift to state 237
-- On T_DEC shift to state 238
-- On TSMALLER shift to state 266
-- On TPOW shift to state 246
-- On TPLUS shift to state 248
-- On TMUL shift to state 250
-- On TMOD shift to state 252
-- On TMINUS shift to state 256
-- On TGREATER shift to state 268
-- On TDOT shift to state 258
-- On TDIV shift to state 254
## Reductions:
-- On T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSEMICOLON TQUESTION TOR TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF
--   reduce production expr -> expr T_IS_NOT_EQUAL expr

State 278:
## Known stack suffix:
## expr T_IS_IDENTICAL
## LR(1) items:
expr -> expr T_IS_IDENTICAL . expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
## Transitions:
-- On T__AT shift to state 1
-- On T_YIELD shift to state 2
-- On T_VARIABLE shift to state 3
-- On T_UNSET_CAST shift to state 5
-- On T_TYPE shift to state 6
-- On T_TRAIT_C shift to state 7
-- On T_SUPER shift to state 8
-- On T_STRING_CAST shift to state 9
-- On T_STATIC shift to state 10
-- On T_START_HEREDOC shift to state 25
-- On T_SELF shift to state 40
-- On T_REQUIRE_ONCE shift to state 41
-- On T_REQUIRE shift to state 42
-- On T_PRINT shift to state 43
-- On T_PARENT shift to state 44
-- On T_OBJECT_CAST shift to state 45
-- On T_NEW shift to state 46
-- On T_NAMESPACE_C shift to state 49
-- On T_NAMESPACE shift to state 50
-- On T_METHOD_C shift to state 58
-- On T_METAVAR shift to state 17
-- On T_LNUMBER shift to state 59
-- On T_LIST shift to state 69
-- On T_LINE shift to state 60
-- On T_LAMBDA_OPAR shift to state 73
-- On T_ISSET shift to state 133
-- On T_INT_CAST shift to state 135
-- On T_INSTANCEOF shift to state 52
-- On T_INCLUDE_ONCE shift to state 136
-- On T_INCLUDE shift to state 137
-- On T_INC shift to state 138
-- On T_IDENT shift to state 18
-- On T_FUNC_C shift to state 61
-- On T_FUNCTION shift to state 139
-- On T_FILE shift to state 62
-- On T_EXIT shift to state 160
-- On T_EVAL shift to state 162
-- On T_ENUM shift to state 19
-- On T_EMPTY shift to state 164
-- On T_DOUBLE_CAST shift to state 168
-- On T_DNUMBER shift to state 63
-- On T_DIR shift to state 64
-- On T_DEC shift to state 169
-- On T_CONSTANT_ENCAPSED_STRING shift to state 65
-- On T_CLONE shift to state 170
-- On T_CLASS_C shift to state 66
-- On T_BOOL_CAST shift to state 171
-- On T_AWAIT shift to state 172
-- On T_ASYNC shift to state 173
-- On T_ARRAY_CAST shift to state 200
-- On T_ARRAY shift to state 201
-- On TTILDE shift to state 204
-- On TPLUS shift to state 205
-- On TOPAR shift to state 206
-- On TOBRA shift to state 209
-- On TMINUS shift to state 210
-- On TGUIL shift to state 211
-- On TDOLLARDOLLAR shift to state 213
-- On TDOLLAR shift to state 214
-- On TBANG shift to state 216
-- On TBACKQUOTE shift to state 217
-- On TANTISLASH shift to state 85
-- On LDots shift to state 222
-- On simple_expr shift to state 223
-- On qualified_name shift to state 94
-- On qualified_class_name shift to state 225
-- On primary_expr shift to state 226
-- On new_expr shift to state 227
-- On namespace_name shift to state 102
-- On member_expr shift to state 228
-- On lambda_expr shift to state 231
-- On ident_in_name shift to state 57
-- On ident shift to state 56
-- On expr shift to state 279
-- On constant shift to state 239
-- On call_expr shift to state 240
## Reductions:

State 279:
## Known stack suffix:
## expr T_IS_IDENTICAL expr
## LR(1) items:
expr -> expr . T_INC [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_DEC [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_BOOLEAN_OR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_BOOLEAN_AND expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_LOGICAL_OR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_LOGICAL_AND expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_LOGICAL_XOR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TPLUS expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TMINUS expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TMUL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TDIV expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TMOD expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TPOW expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TAND expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TOR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TXOR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_SL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_SR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TDOT expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_IDENTICAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr T_IS_IDENTICAL expr . [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_NOT_IDENTICAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_NOT_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TSMALLER expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_SMALLER_OR_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TGREATER expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_GREATER_OR_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_ROCKET expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TQUESTION expr TCOLON expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TQUESTION TCOLON expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TQUESTION TQUESTION expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_INSTANCEOF expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
## Transitions:
-- On T_SR shift to state 233
-- On T_SL shift to state 244
-- On T_IS_SMALLER_OR_EQUAL shift to state 262
-- On T_IS_GREATER_OR_EQUAL shift to state 264
-- On T_INSTANCEOF shift to state 235
-- On T_INC shift to state 237
-- On T_DEC shift to state 238
-- On TSMALLER shift to state 266
-- On TPOW shift to state 246
-- On TPLUS shift to state 248
-- On TMUL shift to state 250
-- On TMOD shift to state 252
-- On TMINUS shift to state 256
-- On TGREATER shift to state 268
-- On TDOT shift to state 258
-- On TDIV shift to state 254
## Reductions:
-- On T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSEMICOLON TQUESTION TOR TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF
--   reduce production expr -> expr T_IS_IDENTICAL expr

State 280:
## Known stack suffix:
## expr T_IS_EQUAL
## LR(1) items:
expr -> expr T_IS_EQUAL . expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
## Transitions:
-- On T__AT shift to state 1
-- On T_YIELD shift to state 2
-- On T_VARIABLE shift to state 3
-- On T_UNSET_CAST shift to state 5
-- On T_TYPE shift to state 6
-- On T_TRAIT_C shift to state 7
-- On T_SUPER shift to state 8
-- On T_STRING_CAST shift to state 9
-- On T_STATIC shift to state 10
-- On T_START_HEREDOC shift to state 25
-- On T_SELF shift to state 40
-- On T_REQUIRE_ONCE shift to state 41
-- On T_REQUIRE shift to state 42
-- On T_PRINT shift to state 43
-- On T_PARENT shift to state 44
-- On T_OBJECT_CAST shift to state 45
-- On T_NEW shift to state 46
-- On T_NAMESPACE_C shift to state 49
-- On T_NAMESPACE shift to state 50
-- On T_METHOD_C shift to state 58
-- On T_METAVAR shift to state 17
-- On T_LNUMBER shift to state 59
-- On T_LIST shift to state 69
-- On T_LINE shift to state 60
-- On T_LAMBDA_OPAR shift to state 73
-- On T_ISSET shift to state 133
-- On T_INT_CAST shift to state 135
-- On T_INSTANCEOF shift to state 52
-- On T_INCLUDE_ONCE shift to state 136
-- On T_INCLUDE shift to state 137
-- On T_INC shift to state 138
-- On T_IDENT shift to state 18
-- On T_FUNC_C shift to state 61
-- On T_FUNCTION shift to state 139
-- On T_FILE shift to state 62
-- On T_EXIT shift to state 160
-- On T_EVAL shift to state 162
-- On T_ENUM shift to state 19
-- On T_EMPTY shift to state 164
-- On T_DOUBLE_CAST shift to state 168
-- On T_DNUMBER shift to state 63
-- On T_DIR shift to state 64
-- On T_DEC shift to state 169
-- On T_CONSTANT_ENCAPSED_STRING shift to state 65
-- On T_CLONE shift to state 170
-- On T_CLASS_C shift to state 66
-- On T_BOOL_CAST shift to state 171
-- On T_AWAIT shift to state 172
-- On T_ASYNC shift to state 173
-- On T_ARRAY_CAST shift to state 200
-- On T_ARRAY shift to state 201
-- On TTILDE shift to state 204
-- On TPLUS shift to state 205
-- On TOPAR shift to state 206
-- On TOBRA shift to state 209
-- On TMINUS shift to state 210
-- On TGUIL shift to state 211
-- On TDOLLARDOLLAR shift to state 213
-- On TDOLLAR shift to state 214
-- On TBANG shift to state 216
-- On TBACKQUOTE shift to state 217
-- On TANTISLASH shift to state 85
-- On LDots shift to state 222
-- On simple_expr shift to state 223
-- On qualified_name shift to state 94
-- On qualified_class_name shift to state 225
-- On primary_expr shift to state 226
-- On new_expr shift to state 227
-- On namespace_name shift to state 102
-- On member_expr shift to state 228
-- On lambda_expr shift to state 231
-- On ident_in_name shift to state 57
-- On ident shift to state 56
-- On expr shift to state 281
-- On constant shift to state 239
-- On call_expr shift to state 240
## Reductions:

State 281:
## Known stack suffix:
## expr T_IS_EQUAL expr
## LR(1) items:
expr -> expr . T_INC [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_DEC [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_BOOLEAN_OR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_BOOLEAN_AND expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_LOGICAL_OR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_LOGICAL_AND expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_LOGICAL_XOR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TPLUS expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TMINUS expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TMUL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TDIV expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TMOD expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TPOW expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TAND expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TOR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TXOR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_SL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_SR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TDOT expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_IDENTICAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_NOT_IDENTICAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr T_IS_EQUAL expr . [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_NOT_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TSMALLER expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_SMALLER_OR_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TGREATER expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_GREATER_OR_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_ROCKET expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TQUESTION expr TCOLON expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TQUESTION TCOLON expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TQUESTION TQUESTION expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_INSTANCEOF expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
## Transitions:
-- On T_SR shift to state 233
-- On T_SL shift to state 244
-- On T_IS_SMALLER_OR_EQUAL shift to state 262
-- On T_IS_GREATER_OR_EQUAL shift to state 264
-- On T_INSTANCEOF shift to state 235
-- On T_INC shift to state 237
-- On T_DEC shift to state 238
-- On TSMALLER shift to state 266
-- On TPOW shift to state 246
-- On TPLUS shift to state 248
-- On TMUL shift to state 250
-- On TMOD shift to state 252
-- On TMINUS shift to state 256
-- On TGREATER shift to state 268
-- On TDOT shift to state 258
-- On TDIV shift to state 254
## Reductions:
-- On T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSEMICOLON TQUESTION TOR TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF
--   reduce production expr -> expr T_IS_EQUAL expr

State 282:
## Known stack suffix:
## expr T_BOOLEAN_OR
## LR(1) items:
expr -> expr T_BOOLEAN_OR . expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
## Transitions:
-- On T__AT shift to state 1
-- On T_YIELD shift to state 2
-- On T_VARIABLE shift to state 3
-- On T_UNSET_CAST shift to state 5
-- On T_TYPE shift to state 6
-- On T_TRAIT_C shift to state 7
-- On T_SUPER shift to state 8
-- On T_STRING_CAST shift to state 9
-- On T_STATIC shift to state 10
-- On T_START_HEREDOC shift to state 25
-- On T_SELF shift to state 40
-- On T_REQUIRE_ONCE shift to state 41
-- On T_REQUIRE shift to state 42
-- On T_PRINT shift to state 43
-- On T_PARENT shift to state 44
-- On T_OBJECT_CAST shift to state 45
-- On T_NEW shift to state 46
-- On T_NAMESPACE_C shift to state 49
-- On T_NAMESPACE shift to state 50
-- On T_METHOD_C shift to state 58
-- On T_METAVAR shift to state 17
-- On T_LNUMBER shift to state 59
-- On T_LIST shift to state 69
-- On T_LINE shift to state 60
-- On T_LAMBDA_OPAR shift to state 73
-- On T_ISSET shift to state 133
-- On T_INT_CAST shift to state 135
-- On T_INSTANCEOF shift to state 52
-- On T_INCLUDE_ONCE shift to state 136
-- On T_INCLUDE shift to state 137
-- On T_INC shift to state 138
-- On T_IDENT shift to state 18
-- On T_FUNC_C shift to state 61
-- On T_FUNCTION shift to state 139
-- On T_FILE shift to state 62
-- On T_EXIT shift to state 160
-- On T_EVAL shift to state 162
-- On T_ENUM shift to state 19
-- On T_EMPTY shift to state 164
-- On T_DOUBLE_CAST shift to state 168
-- On T_DNUMBER shift to state 63
-- On T_DIR shift to state 64
-- On T_DEC shift to state 169
-- On T_CONSTANT_ENCAPSED_STRING shift to state 65
-- On T_CLONE shift to state 170
-- On T_CLASS_C shift to state 66
-- On T_BOOL_CAST shift to state 171
-- On T_AWAIT shift to state 172
-- On T_ASYNC shift to state 173
-- On T_ARRAY_CAST shift to state 200
-- On T_ARRAY shift to state 201
-- On TTILDE shift to state 204
-- On TPLUS shift to state 205
-- On TOPAR shift to state 206
-- On TOBRA shift to state 209
-- On TMINUS shift to state 210
-- On TGUIL shift to state 211
-- On TDOLLARDOLLAR shift to state 213
-- On TDOLLAR shift to state 214
-- On TBANG shift to state 216
-- On TBACKQUOTE shift to state 217
-- On TANTISLASH shift to state 85
-- On LDots shift to state 222
-- On simple_expr shift to state 223
-- On qualified_name shift to state 94
-- On qualified_class_name shift to state 225
-- On primary_expr shift to state 226
-- On new_expr shift to state 227
-- On namespace_name shift to state 102
-- On member_expr shift to state 228
-- On lambda_expr shift to state 231
-- On ident_in_name shift to state 57
-- On ident shift to state 56
-- On expr shift to state 283
-- On constant shift to state 239
-- On call_expr shift to state 240
## Reductions:

State 283:
## Known stack suffix:
## expr T_BOOLEAN_OR expr
## LR(1) items:
expr -> expr . T_INC [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_DEC [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_BOOLEAN_OR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr T_BOOLEAN_OR expr . [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_BOOLEAN_AND expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_LOGICAL_OR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_LOGICAL_AND expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_LOGICAL_XOR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TPLUS expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TMINUS expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TMUL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TDIV expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TMOD expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TPOW expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TAND expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TOR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TXOR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_SL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_SR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TDOT expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_IDENTICAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_NOT_IDENTICAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_NOT_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TSMALLER expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_SMALLER_OR_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TGREATER expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_GREATER_OR_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_ROCKET expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TQUESTION expr TCOLON expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TQUESTION TCOLON expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TQUESTION TQUESTION expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_INSTANCEOF expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
## Transitions:
-- On T_SR shift to state 233
-- On T_SL shift to state 244
-- On T_ROCKET shift to state 260
-- On T_IS_SMALLER_OR_EQUAL shift to state 262
-- On T_IS_NOT_IDENTICAL shift to state 274
-- On T_IS_NOT_EQUAL shift to state 276
-- On T_IS_IDENTICAL shift to state 278
-- On T_IS_GREATER_OR_EQUAL shift to state 264
-- On T_IS_EQUAL shift to state 280
-- On T_INSTANCEOF shift to state 235
-- On T_INC shift to state 237
-- On T_DEC shift to state 238
-- On T_BOOLEAN_AND shift to state 284
-- On TXOR shift to state 286
-- On TSMALLER shift to state 266
-- On TPOW shift to state 246
-- On TPLUS shift to state 248
-- On TOR shift to state 290
-- On TMUL shift to state 250
-- On TMOD shift to state 252
-- On TMINUS shift to state 256
-- On TGREATER shift to state 268
-- On TDOT shift to state 258
-- On TDIV shift to state 254
-- On TAND shift to state 288
## Reductions:
-- On T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_AWAIT T_AS T_ARROW TSEMICOLON TQUESTION TCPAR TCOMMA TCOLON TCBRACE TCBRA RDots EOF
--   reduce production expr -> expr T_BOOLEAN_OR expr

State 284:
## Known stack suffix:
## expr T_BOOLEAN_AND
## LR(1) items:
expr -> expr T_BOOLEAN_AND . expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
## Transitions:
-- On T__AT shift to state 1
-- On T_YIELD shift to state 2
-- On T_VARIABLE shift to state 3
-- On T_UNSET_CAST shift to state 5
-- On T_TYPE shift to state 6
-- On T_TRAIT_C shift to state 7
-- On T_SUPER shift to state 8
-- On T_STRING_CAST shift to state 9
-- On T_STATIC shift to state 10
-- On T_START_HEREDOC shift to state 25
-- On T_SELF shift to state 40
-- On T_REQUIRE_ONCE shift to state 41
-- On T_REQUIRE shift to state 42
-- On T_PRINT shift to state 43
-- On T_PARENT shift to state 44
-- On T_OBJECT_CAST shift to state 45
-- On T_NEW shift to state 46
-- On T_NAMESPACE_C shift to state 49
-- On T_NAMESPACE shift to state 50
-- On T_METHOD_C shift to state 58
-- On T_METAVAR shift to state 17
-- On T_LNUMBER shift to state 59
-- On T_LIST shift to state 69
-- On T_LINE shift to state 60
-- On T_LAMBDA_OPAR shift to state 73
-- On T_ISSET shift to state 133
-- On T_INT_CAST shift to state 135
-- On T_INSTANCEOF shift to state 52
-- On T_INCLUDE_ONCE shift to state 136
-- On T_INCLUDE shift to state 137
-- On T_INC shift to state 138
-- On T_IDENT shift to state 18
-- On T_FUNC_C shift to state 61
-- On T_FUNCTION shift to state 139
-- On T_FILE shift to state 62
-- On T_EXIT shift to state 160
-- On T_EVAL shift to state 162
-- On T_ENUM shift to state 19
-- On T_EMPTY shift to state 164
-- On T_DOUBLE_CAST shift to state 168
-- On T_DNUMBER shift to state 63
-- On T_DIR shift to state 64
-- On T_DEC shift to state 169
-- On T_CONSTANT_ENCAPSED_STRING shift to state 65
-- On T_CLONE shift to state 170
-- On T_CLASS_C shift to state 66
-- On T_BOOL_CAST shift to state 171
-- On T_AWAIT shift to state 172
-- On T_ASYNC shift to state 173
-- On T_ARRAY_CAST shift to state 200
-- On T_ARRAY shift to state 201
-- On TTILDE shift to state 204
-- On TPLUS shift to state 205
-- On TOPAR shift to state 206
-- On TOBRA shift to state 209
-- On TMINUS shift to state 210
-- On TGUIL shift to state 211
-- On TDOLLARDOLLAR shift to state 213
-- On TDOLLAR shift to state 214
-- On TBANG shift to state 216
-- On TBACKQUOTE shift to state 217
-- On TANTISLASH shift to state 85
-- On LDots shift to state 222
-- On simple_expr shift to state 223
-- On qualified_name shift to state 94
-- On qualified_class_name shift to state 225
-- On primary_expr shift to state 226
-- On new_expr shift to state 227
-- On namespace_name shift to state 102
-- On member_expr shift to state 228
-- On lambda_expr shift to state 231
-- On ident_in_name shift to state 57
-- On ident shift to state 56
-- On expr shift to state 285
-- On constant shift to state 239
-- On call_expr shift to state 240
## Reductions:

State 285:
## Known stack suffix:
## expr T_BOOLEAN_AND expr
## LR(1) items:
expr -> expr . T_INC [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_DEC [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_BOOLEAN_OR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_BOOLEAN_AND expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr T_BOOLEAN_AND expr . [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_LOGICAL_OR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_LOGICAL_AND expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_LOGICAL_XOR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TPLUS expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TMINUS expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TMUL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TDIV expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TMOD expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TPOW expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TAND expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TOR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TXOR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_SL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_SR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TDOT expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_IDENTICAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_NOT_IDENTICAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_NOT_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TSMALLER expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_SMALLER_OR_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TGREATER expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_GREATER_OR_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_ROCKET expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TQUESTION expr TCOLON expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TQUESTION TCOLON expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TQUESTION TQUESTION expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_INSTANCEOF expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
## Transitions:
-- On T_SR shift to state 233
-- On T_SL shift to state 244
-- On T_ROCKET shift to state 260
-- On T_IS_SMALLER_OR_EQUAL shift to state 262
-- On T_IS_NOT_IDENTICAL shift to state 274
-- On T_IS_NOT_EQUAL shift to state 276
-- On T_IS_IDENTICAL shift to state 278
-- On T_IS_GREATER_OR_EQUAL shift to state 264
-- On T_IS_EQUAL shift to state 280
-- On T_INSTANCEOF shift to state 235
-- On T_INC shift to state 237
-- On T_DEC shift to state 238
-- On TXOR shift to state 286
-- On TSMALLER shift to state 266
-- On TPOW shift to state 246
-- On TPLUS shift to state 248
-- On TOR shift to state 290
-- On TMUL shift to state 250
-- On TMOD shift to state 252
-- On TMINUS shift to state 256
-- On TGREATER shift to state 268
-- On TDOT shift to state 258
-- On TDIV shift to state 254
-- On TAND shift to state 288
## Reductions:
-- On T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TSEMICOLON TQUESTION TCPAR TCOMMA TCOLON TCBRACE TCBRA RDots EOF
--   reduce production expr -> expr T_BOOLEAN_AND expr

State 286:
## Known stack suffix:
## expr TXOR
## LR(1) items:
expr -> expr TXOR . expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
## Transitions:
-- On T__AT shift to state 1
-- On T_YIELD shift to state 2
-- On T_VARIABLE shift to state 3
-- On T_UNSET_CAST shift to state 5
-- On T_TYPE shift to state 6
-- On T_TRAIT_C shift to state 7
-- On T_SUPER shift to state 8
-- On T_STRING_CAST shift to state 9
-- On T_STATIC shift to state 10
-- On T_START_HEREDOC shift to state 25
-- On T_SELF shift to state 40
-- On T_REQUIRE_ONCE shift to state 41
-- On T_REQUIRE shift to state 42
-- On T_PRINT shift to state 43
-- On T_PARENT shift to state 44
-- On T_OBJECT_CAST shift to state 45
-- On T_NEW shift to state 46
-- On T_NAMESPACE_C shift to state 49
-- On T_NAMESPACE shift to state 50
-- On T_METHOD_C shift to state 58
-- On T_METAVAR shift to state 17
-- On T_LNUMBER shift to state 59
-- On T_LIST shift to state 69
-- On T_LINE shift to state 60
-- On T_LAMBDA_OPAR shift to state 73
-- On T_ISSET shift to state 133
-- On T_INT_CAST shift to state 135
-- On T_INSTANCEOF shift to state 52
-- On T_INCLUDE_ONCE shift to state 136
-- On T_INCLUDE shift to state 137
-- On T_INC shift to state 138
-- On T_IDENT shift to state 18
-- On T_FUNC_C shift to state 61
-- On T_FUNCTION shift to state 139
-- On T_FILE shift to state 62
-- On T_EXIT shift to state 160
-- On T_EVAL shift to state 162
-- On T_ENUM shift to state 19
-- On T_EMPTY shift to state 164
-- On T_DOUBLE_CAST shift to state 168
-- On T_DNUMBER shift to state 63
-- On T_DIR shift to state 64
-- On T_DEC shift to state 169
-- On T_CONSTANT_ENCAPSED_STRING shift to state 65
-- On T_CLONE shift to state 170
-- On T_CLASS_C shift to state 66
-- On T_BOOL_CAST shift to state 171
-- On T_AWAIT shift to state 172
-- On T_ASYNC shift to state 173
-- On T_ARRAY_CAST shift to state 200
-- On T_ARRAY shift to state 201
-- On TTILDE shift to state 204
-- On TPLUS shift to state 205
-- On TOPAR shift to state 206
-- On TOBRA shift to state 209
-- On TMINUS shift to state 210
-- On TGUIL shift to state 211
-- On TDOLLARDOLLAR shift to state 213
-- On TDOLLAR shift to state 214
-- On TBANG shift to state 216
-- On TBACKQUOTE shift to state 217
-- On TANTISLASH shift to state 85
-- On LDots shift to state 222
-- On simple_expr shift to state 223
-- On qualified_name shift to state 94
-- On qualified_class_name shift to state 225
-- On primary_expr shift to state 226
-- On new_expr shift to state 227
-- On namespace_name shift to state 102
-- On member_expr shift to state 228
-- On lambda_expr shift to state 231
-- On ident_in_name shift to state 57
-- On ident shift to state 56
-- On expr shift to state 287
-- On constant shift to state 239
-- On call_expr shift to state 240
## Reductions:

State 287:
## Known stack suffix:
## expr TXOR expr
## LR(1) items:
expr -> expr . T_INC [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_DEC [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_BOOLEAN_OR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_BOOLEAN_AND expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_LOGICAL_OR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_LOGICAL_AND expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_LOGICAL_XOR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TPLUS expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TMINUS expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TMUL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TDIV expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TMOD expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TPOW expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TAND expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TOR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TXOR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr TXOR expr . [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_SL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_SR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TDOT expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_IDENTICAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_NOT_IDENTICAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_NOT_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TSMALLER expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_SMALLER_OR_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TGREATER expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_GREATER_OR_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_ROCKET expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TQUESTION expr TCOLON expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TQUESTION TCOLON expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TQUESTION TQUESTION expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_INSTANCEOF expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
## Transitions:
-- On T_SR shift to state 233
-- On T_SL shift to state 244
-- On T_ROCKET shift to state 260
-- On T_IS_SMALLER_OR_EQUAL shift to state 262
-- On T_IS_NOT_IDENTICAL shift to state 274
-- On T_IS_NOT_EQUAL shift to state 276
-- On T_IS_IDENTICAL shift to state 278
-- On T_IS_GREATER_OR_EQUAL shift to state 264
-- On T_IS_EQUAL shift to state 280
-- On T_INSTANCEOF shift to state 235
-- On T_INC shift to state 237
-- On T_DEC shift to state 238
-- On TSMALLER shift to state 266
-- On TPOW shift to state 246
-- On TPLUS shift to state 248
-- On TMUL shift to state 250
-- On TMOD shift to state 252
-- On TMINUS shift to state 256
-- On TGREATER shift to state 268
-- On TDOT shift to state 258
-- On TDIV shift to state 254
-- On TAND shift to state 288
## Reductions:
-- On T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSEMICOLON TQUESTION TOR TCPAR TCOMMA TCOLON TCBRACE TCBRA RDots EOF
--   reduce production expr -> expr TXOR expr

State 288:
## Known stack suffix:
## expr TAND
## LR(1) items:
expr -> expr TAND . expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
## Transitions:
-- On T__AT shift to state 1
-- On T_YIELD shift to state 2
-- On T_VARIABLE shift to state 3
-- On T_UNSET_CAST shift to state 5
-- On T_TYPE shift to state 6
-- On T_TRAIT_C shift to state 7
-- On T_SUPER shift to state 8
-- On T_STRING_CAST shift to state 9
-- On T_STATIC shift to state 10
-- On T_START_HEREDOC shift to state 25
-- On T_SELF shift to state 40
-- On T_REQUIRE_ONCE shift to state 41
-- On T_REQUIRE shift to state 42
-- On T_PRINT shift to state 43
-- On T_PARENT shift to state 44
-- On T_OBJECT_CAST shift to state 45
-- On T_NEW shift to state 46
-- On T_NAMESPACE_C shift to state 49
-- On T_NAMESPACE shift to state 50
-- On T_METHOD_C shift to state 58
-- On T_METAVAR shift to state 17
-- On T_LNUMBER shift to state 59
-- On T_LIST shift to state 69
-- On T_LINE shift to state 60
-- On T_LAMBDA_OPAR shift to state 73
-- On T_ISSET shift to state 133
-- On T_INT_CAST shift to state 135
-- On T_INSTANCEOF shift to state 52
-- On T_INCLUDE_ONCE shift to state 136
-- On T_INCLUDE shift to state 137
-- On T_INC shift to state 138
-- On T_IDENT shift to state 18
-- On T_FUNC_C shift to state 61
-- On T_FUNCTION shift to state 139
-- On T_FILE shift to state 62
-- On T_EXIT shift to state 160
-- On T_EVAL shift to state 162
-- On T_ENUM shift to state 19
-- On T_EMPTY shift to state 164
-- On T_DOUBLE_CAST shift to state 168
-- On T_DNUMBER shift to state 63
-- On T_DIR shift to state 64
-- On T_DEC shift to state 169
-- On T_CONSTANT_ENCAPSED_STRING shift to state 65
-- On T_CLONE shift to state 170
-- On T_CLASS_C shift to state 66
-- On T_BOOL_CAST shift to state 171
-- On T_AWAIT shift to state 172
-- On T_ASYNC shift to state 173
-- On T_ARRAY_CAST shift to state 200
-- On T_ARRAY shift to state 201
-- On TTILDE shift to state 204
-- On TPLUS shift to state 205
-- On TOPAR shift to state 206
-- On TOBRA shift to state 209
-- On TMINUS shift to state 210
-- On TGUIL shift to state 211
-- On TDOLLARDOLLAR shift to state 213
-- On TDOLLAR shift to state 214
-- On TBANG shift to state 216
-- On TBACKQUOTE shift to state 217
-- On TANTISLASH shift to state 85
-- On LDots shift to state 222
-- On simple_expr shift to state 223
-- On qualified_name shift to state 94
-- On qualified_class_name shift to state 225
-- On primary_expr shift to state 226
-- On new_expr shift to state 227
-- On namespace_name shift to state 102
-- On member_expr shift to state 228
-- On lambda_expr shift to state 231
-- On ident_in_name shift to state 57
-- On ident shift to state 56
-- On expr shift to state 289
-- On constant shift to state 239
-- On call_expr shift to state 240
## Reductions:

State 289:
## Known stack suffix:
## expr TAND expr
## LR(1) items:
expr -> expr . T_INC [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_DEC [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_BOOLEAN_OR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_BOOLEAN_AND expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_LOGICAL_OR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_LOGICAL_AND expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_LOGICAL_XOR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TPLUS expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TMINUS expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TMUL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TDIV expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TMOD expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TPOW expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TAND expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr TAND expr . [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TOR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TXOR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_SL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_SR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TDOT expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_IDENTICAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_NOT_IDENTICAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_NOT_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TSMALLER expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_SMALLER_OR_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TGREATER expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_GREATER_OR_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_ROCKET expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TQUESTION expr TCOLON expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TQUESTION TCOLON expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TQUESTION TQUESTION expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_INSTANCEOF expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
## Transitions:
-- On T_SR shift to state 233
-- On T_SL shift to state 244
-- On T_ROCKET shift to state 260
-- On T_IS_SMALLER_OR_EQUAL shift to state 262
-- On T_IS_NOT_IDENTICAL shift to state 274
-- On T_IS_NOT_EQUAL shift to state 276
-- On T_IS_IDENTICAL shift to state 278
-- On T_IS_GREATER_OR_EQUAL shift to state 264
-- On T_IS_EQUAL shift to state 280
-- On T_INSTANCEOF shift to state 235
-- On T_INC shift to state 237
-- On T_DEC shift to state 238
-- On TSMALLER shift to state 266
-- On TPOW shift to state 246
-- On TPLUS shift to state 248
-- On TMUL shift to state 250
-- On TMOD shift to state 252
-- On TMINUS shift to state 256
-- On TGREATER shift to state 268
-- On TDOT shift to state 258
-- On TDIV shift to state 254
## Reductions:
-- On T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSEMICOLON TQUESTION TOR TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF
--   reduce production expr -> expr TAND expr

State 290:
## Known stack suffix:
## expr TOR
## LR(1) items:
expr -> expr TOR . expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
## Transitions:
-- On T__AT shift to state 1
-- On T_YIELD shift to state 2
-- On T_VARIABLE shift to state 3
-- On T_UNSET_CAST shift to state 5
-- On T_TYPE shift to state 6
-- On T_TRAIT_C shift to state 7
-- On T_SUPER shift to state 8
-- On T_STRING_CAST shift to state 9
-- On T_STATIC shift to state 10
-- On T_START_HEREDOC shift to state 25
-- On T_SELF shift to state 40
-- On T_REQUIRE_ONCE shift to state 41
-- On T_REQUIRE shift to state 42
-- On T_PRINT shift to state 43
-- On T_PARENT shift to state 44
-- On T_OBJECT_CAST shift to state 45
-- On T_NEW shift to state 46
-- On T_NAMESPACE_C shift to state 49
-- On T_NAMESPACE shift to state 50
-- On T_METHOD_C shift to state 58
-- On T_METAVAR shift to state 17
-- On T_LNUMBER shift to state 59
-- On T_LIST shift to state 69
-- On T_LINE shift to state 60
-- On T_LAMBDA_OPAR shift to state 73
-- On T_ISSET shift to state 133
-- On T_INT_CAST shift to state 135
-- On T_INSTANCEOF shift to state 52
-- On T_INCLUDE_ONCE shift to state 136
-- On T_INCLUDE shift to state 137
-- On T_INC shift to state 138
-- On T_IDENT shift to state 18
-- On T_FUNC_C shift to state 61
-- On T_FUNCTION shift to state 139
-- On T_FILE shift to state 62
-- On T_EXIT shift to state 160
-- On T_EVAL shift to state 162
-- On T_ENUM shift to state 19
-- On T_EMPTY shift to state 164
-- On T_DOUBLE_CAST shift to state 168
-- On T_DNUMBER shift to state 63
-- On T_DIR shift to state 64
-- On T_DEC shift to state 169
-- On T_CONSTANT_ENCAPSED_STRING shift to state 65
-- On T_CLONE shift to state 170
-- On T_CLASS_C shift to state 66
-- On T_BOOL_CAST shift to state 171
-- On T_AWAIT shift to state 172
-- On T_ASYNC shift to state 173
-- On T_ARRAY_CAST shift to state 200
-- On T_ARRAY shift to state 201
-- On TTILDE shift to state 204
-- On TPLUS shift to state 205
-- On TOPAR shift to state 206
-- On TOBRA shift to state 209
-- On TMINUS shift to state 210
-- On TGUIL shift to state 211
-- On TDOLLARDOLLAR shift to state 213
-- On TDOLLAR shift to state 214
-- On TBANG shift to state 216
-- On TBACKQUOTE shift to state 217
-- On TANTISLASH shift to state 85
-- On LDots shift to state 222
-- On simple_expr shift to state 223
-- On qualified_name shift to state 94
-- On qualified_class_name shift to state 225
-- On primary_expr shift to state 226
-- On new_expr shift to state 227
-- On namespace_name shift to state 102
-- On member_expr shift to state 228
-- On lambda_expr shift to state 231
-- On ident_in_name shift to state 57
-- On ident shift to state 56
-- On expr shift to state 291
-- On constant shift to state 239
-- On call_expr shift to state 240
## Reductions:

State 291:
## Known stack suffix:
## expr TOR expr
## LR(1) items:
expr -> expr . T_INC [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_DEC [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_BOOLEAN_OR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_BOOLEAN_AND expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_LOGICAL_OR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_LOGICAL_AND expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_LOGICAL_XOR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TPLUS expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TMINUS expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TMUL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TDIV expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TMOD expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TPOW expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TAND expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TOR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr TOR expr . [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TXOR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_SL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_SR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TDOT expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_IDENTICAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_NOT_IDENTICAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_NOT_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TSMALLER expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_SMALLER_OR_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TGREATER expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_GREATER_OR_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_ROCKET expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TQUESTION expr TCOLON expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TQUESTION TCOLON expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TQUESTION TQUESTION expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_INSTANCEOF expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
## Transitions:
-- On T_SR shift to state 233
-- On T_SL shift to state 244
-- On T_ROCKET shift to state 260
-- On T_IS_SMALLER_OR_EQUAL shift to state 262
-- On T_IS_NOT_IDENTICAL shift to state 274
-- On T_IS_NOT_EQUAL shift to state 276
-- On T_IS_IDENTICAL shift to state 278
-- On T_IS_GREATER_OR_EQUAL shift to state 264
-- On T_IS_EQUAL shift to state 280
-- On T_INSTANCEOF shift to state 235
-- On T_INC shift to state 237
-- On T_DEC shift to state 238
-- On TXOR shift to state 286
-- On TSMALLER shift to state 266
-- On TPOW shift to state 246
-- On TPLUS shift to state 248
-- On TMUL shift to state 250
-- On TMOD shift to state 252
-- On TMINUS shift to state 256
-- On TGREATER shift to state 268
-- On TDOT shift to state 258
-- On TDIV shift to state 254
-- On TAND shift to state 288
## Reductions:
-- On T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TSEMICOLON TQUESTION TOR TCPAR TCOMMA TCOLON TCBRACE TCBRA RDots EOF
--   reduce production expr -> expr TOR expr

State 292:
## Known stack suffix:
## expr TQUESTION
## LR(1) items:
expr -> expr TQUESTION . expr TCOLON expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr TQUESTION . TCOLON expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr TQUESTION . TQUESTION expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
## Transitions:
-- On T__AT shift to state 1
-- On T_YIELD shift to state 2
-- On T_VARIABLE shift to state 3
-- On T_UNSET_CAST shift to state 5
-- On T_TYPE shift to state 6
-- On T_TRAIT_C shift to state 7
-- On T_SUPER shift to state 8
-- On T_STRING_CAST shift to state 9
-- On T_STATIC shift to state 10
-- On T_START_HEREDOC shift to state 25
-- On T_SELF shift to state 40
-- On T_REQUIRE_ONCE shift to state 41
-- On T_REQUIRE shift to state 42
-- On T_PRINT shift to state 43
-- On T_PARENT shift to state 44
-- On T_OBJECT_CAST shift to state 45
-- On T_NEW shift to state 46
-- On T_NAMESPACE_C shift to state 49
-- On T_NAMESPACE shift to state 50
-- On T_METHOD_C shift to state 58
-- On T_METAVAR shift to state 17
-- On T_LNUMBER shift to state 59
-- On T_LIST shift to state 69
-- On T_LINE shift to state 60
-- On T_LAMBDA_OPAR shift to state 73
-- On T_ISSET shift to state 133
-- On T_INT_CAST shift to state 135
-- On T_INSTANCEOF shift to state 52
-- On T_INCLUDE_ONCE shift to state 136
-- On T_INCLUDE shift to state 137
-- On T_INC shift to state 138
-- On T_IDENT shift to state 18
-- On T_FUNC_C shift to state 61
-- On T_FUNCTION shift to state 139
-- On T_FILE shift to state 62
-- On T_EXIT shift to state 160
-- On T_EVAL shift to state 162
-- On T_ENUM shift to state 19
-- On T_EMPTY shift to state 164
-- On T_DOUBLE_CAST shift to state 168
-- On T_DNUMBER shift to state 63
-- On T_DIR shift to state 64
-- On T_DEC shift to state 169
-- On T_CONSTANT_ENCAPSED_STRING shift to state 65
-- On T_CLONE shift to state 170
-- On T_CLASS_C shift to state 66
-- On T_BOOL_CAST shift to state 171
-- On T_AWAIT shift to state 172
-- On T_ASYNC shift to state 173
-- On T_ARRAY_CAST shift to state 200
-- On T_ARRAY shift to state 201
-- On TTILDE shift to state 204
-- On TQUESTION shift to state 293
-- On TPLUS shift to state 205
-- On TOPAR shift to state 206
-- On TOBRA shift to state 209
-- On TMINUS shift to state 210
-- On TGUIL shift to state 211
-- On TDOLLARDOLLAR shift to state 213
-- On TDOLLAR shift to state 214
-- On TCOLON shift to state 295
-- On TBANG shift to state 216
-- On TBACKQUOTE shift to state 217
-- On TANTISLASH shift to state 85
-- On LDots shift to state 222
-- On simple_expr shift to state 223
-- On qualified_name shift to state 94
-- On qualified_class_name shift to state 225
-- On primary_expr shift to state 226
-- On new_expr shift to state 227
-- On namespace_name shift to state 102
-- On member_expr shift to state 228
-- On lambda_expr shift to state 231
-- On ident_in_name shift to state 57
-- On ident shift to state 56
-- On expr shift to state 297
-- On constant shift to state 239
-- On call_expr shift to state 240
## Reductions:

State 293:
## Known stack suffix:
## expr TQUESTION TQUESTION
## LR(1) items:
expr -> expr TQUESTION TQUESTION . expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
## Transitions:
-- On T__AT shift to state 1
-- On T_YIELD shift to state 2
-- On T_VARIABLE shift to state 3
-- On T_UNSET_CAST shift to state 5
-- On T_TYPE shift to state 6
-- On T_TRAIT_C shift to state 7
-- On T_SUPER shift to state 8
-- On T_STRING_CAST shift to state 9
-- On T_STATIC shift to state 10
-- On T_START_HEREDOC shift to state 25
-- On T_SELF shift to state 40
-- On T_REQUIRE_ONCE shift to state 41
-- On T_REQUIRE shift to state 42
-- On T_PRINT shift to state 43
-- On T_PARENT shift to state 44
-- On T_OBJECT_CAST shift to state 45
-- On T_NEW shift to state 46
-- On T_NAMESPACE_C shift to state 49
-- On T_NAMESPACE shift to state 50
-- On T_METHOD_C shift to state 58
-- On T_METAVAR shift to state 17
-- On T_LNUMBER shift to state 59
-- On T_LIST shift to state 69
-- On T_LINE shift to state 60
-- On T_LAMBDA_OPAR shift to state 73
-- On T_ISSET shift to state 133
-- On T_INT_CAST shift to state 135
-- On T_INSTANCEOF shift to state 52
-- On T_INCLUDE_ONCE shift to state 136
-- On T_INCLUDE shift to state 137
-- On T_INC shift to state 138
-- On T_IDENT shift to state 18
-- On T_FUNC_C shift to state 61
-- On T_FUNCTION shift to state 139
-- On T_FILE shift to state 62
-- On T_EXIT shift to state 160
-- On T_EVAL shift to state 162
-- On T_ENUM shift to state 19
-- On T_EMPTY shift to state 164
-- On T_DOUBLE_CAST shift to state 168
-- On T_DNUMBER shift to state 63
-- On T_DIR shift to state 64
-- On T_DEC shift to state 169
-- On T_CONSTANT_ENCAPSED_STRING shift to state 65
-- On T_CLONE shift to state 170
-- On T_CLASS_C shift to state 66
-- On T_BOOL_CAST shift to state 171
-- On T_AWAIT shift to state 172
-- On T_ASYNC shift to state 173
-- On T_ARRAY_CAST shift to state 200
-- On T_ARRAY shift to state 201
-- On TTILDE shift to state 204
-- On TPLUS shift to state 205
-- On TOPAR shift to state 206
-- On TOBRA shift to state 209
-- On TMINUS shift to state 210
-- On TGUIL shift to state 211
-- On TDOLLARDOLLAR shift to state 213
-- On TDOLLAR shift to state 214
-- On TBANG shift to state 216
-- On TBACKQUOTE shift to state 217
-- On TANTISLASH shift to state 85
-- On LDots shift to state 222
-- On simple_expr shift to state 223
-- On qualified_name shift to state 94
-- On qualified_class_name shift to state 225
-- On primary_expr shift to state 226
-- On new_expr shift to state 227
-- On namespace_name shift to state 102
-- On member_expr shift to state 228
-- On lambda_expr shift to state 231
-- On ident_in_name shift to state 57
-- On ident shift to state 56
-- On expr shift to state 294
-- On constant shift to state 239
-- On call_expr shift to state 240
## Reductions:

State 294:
## Known stack suffix:
## expr TQUESTION TQUESTION expr
## LR(1) items:
expr -> expr . T_INC [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_DEC [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_BOOLEAN_OR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_BOOLEAN_AND expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_LOGICAL_OR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_LOGICAL_AND expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_LOGICAL_XOR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TPLUS expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TMINUS expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TMUL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TDIV expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TMOD expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TPOW expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TAND expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TOR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TXOR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_SL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_SR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TDOT expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_IDENTICAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_NOT_IDENTICAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_NOT_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TSMALLER expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_SMALLER_OR_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TGREATER expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_GREATER_OR_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_ROCKET expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TQUESTION expr TCOLON expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TQUESTION TCOLON expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TQUESTION TQUESTION expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr TQUESTION TQUESTION expr . [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_INSTANCEOF expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
## Transitions:
-- On T_SR shift to state 233
-- On T_SL shift to state 244
-- On T_ROCKET shift to state 260
-- On T_IS_SMALLER_OR_EQUAL shift to state 262
-- On T_IS_NOT_IDENTICAL shift to state 274
-- On T_IS_NOT_EQUAL shift to state 276
-- On T_IS_IDENTICAL shift to state 278
-- On T_IS_GREATER_OR_EQUAL shift to state 264
-- On T_IS_EQUAL shift to state 280
-- On T_INSTANCEOF shift to state 235
-- On T_INC shift to state 237
-- On T_DEC shift to state 238
-- On T_BOOLEAN_OR shift to state 282
-- On T_BOOLEAN_AND shift to state 284
-- On TXOR shift to state 286
-- On TSMALLER shift to state 266
-- On TPOW shift to state 246
-- On TPLUS shift to state 248
-- On TOR shift to state 290
-- On TMUL shift to state 250
-- On TMOD shift to state 252
-- On TMINUS shift to state 256
-- On TGREATER shift to state 268
-- On TDOT shift to state 258
-- On TDIV shift to state 254
-- On TAND shift to state 288
## Reductions:
-- On T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_CLOSE_TAG_OF_ECHO T_AWAIT T_AS T_ARROW TSEMICOLON TQUESTION TCPAR TCOMMA TCOLON TCBRACE TCBRA RDots EOF
--   reduce production expr -> expr TQUESTION TQUESTION expr

State 295:
## Known stack suffix:
## expr TQUESTION TCOLON
## LR(1) items:
expr -> expr TQUESTION TCOLON . expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
## Transitions:
-- On T__AT shift to state 1
-- On T_YIELD shift to state 2
-- On T_VARIABLE shift to state 3
-- On T_UNSET_CAST shift to state 5
-- On T_TYPE shift to state 6
-- On T_TRAIT_C shift to state 7
-- On T_SUPER shift to state 8
-- On T_STRING_CAST shift to state 9
-- On T_STATIC shift to state 10
-- On T_START_HEREDOC shift to state 25
-- On T_SELF shift to state 40
-- On T_REQUIRE_ONCE shift to state 41
-- On T_REQUIRE shift to state 42
-- On T_PRINT shift to state 43
-- On T_PARENT shift to state 44
-- On T_OBJECT_CAST shift to state 45
-- On T_NEW shift to state 46
-- On T_NAMESPACE_C shift to state 49
-- On T_NAMESPACE shift to state 50
-- On T_METHOD_C shift to state 58
-- On T_METAVAR shift to state 17
-- On T_LNUMBER shift to state 59
-- On T_LIST shift to state 69
-- On T_LINE shift to state 60
-- On T_LAMBDA_OPAR shift to state 73
-- On T_ISSET shift to state 133
-- On T_INT_CAST shift to state 135
-- On T_INSTANCEOF shift to state 52
-- On T_INCLUDE_ONCE shift to state 136
-- On T_INCLUDE shift to state 137
-- On T_INC shift to state 138
-- On T_IDENT shift to state 18
-- On T_FUNC_C shift to state 61
-- On T_FUNCTION shift to state 139
-- On T_FILE shift to state 62
-- On T_EXIT shift to state 160
-- On T_EVAL shift to state 162
-- On T_ENUM shift to state 19
-- On T_EMPTY shift to state 164
-- On T_DOUBLE_CAST shift to state 168
-- On T_DNUMBER shift to state 63
-- On T_DIR shift to state 64
-- On T_DEC shift to state 169
-- On T_CONSTANT_ENCAPSED_STRING shift to state 65
-- On T_CLONE shift to state 170
-- On T_CLASS_C shift to state 66
-- On T_BOOL_CAST shift to state 171
-- On T_AWAIT shift to state 172
-- On T_ASYNC shift to state 173
-- On T_ARRAY_CAST shift to state 200
-- On T_ARRAY shift to state 201
-- On TTILDE shift to state 204
-- On TPLUS shift to state 205
-- On TOPAR shift to state 206
-- On TOBRA shift to state 209
-- On TMINUS shift to state 210
-- On TGUIL shift to state 211
-- On TDOLLARDOLLAR shift to state 213
-- On TDOLLAR shift to state 214
-- On TBANG shift to state 216
-- On TBACKQUOTE shift to state 217
-- On TANTISLASH shift to state 85
-- On LDots shift to state 222
-- On simple_expr shift to state 223
-- On qualified_name shift to state 94
-- On qualified_class_name shift to state 225
-- On primary_expr shift to state 226
-- On new_expr shift to state 227
-- On namespace_name shift to state 102
-- On member_expr shift to state 228
-- On lambda_expr shift to state 231
-- On ident_in_name shift to state 57
-- On ident shift to state 56
-- On expr shift to state 296
-- On constant shift to state 239
-- On call_expr shift to state 240
## Reductions:

State 296:
## Known stack suffix:
## expr TQUESTION TCOLON expr
## LR(1) items:
expr -> expr . T_INC [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_DEC [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_BOOLEAN_OR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_BOOLEAN_AND expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_LOGICAL_OR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_LOGICAL_AND expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_LOGICAL_XOR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TPLUS expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TMINUS expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TMUL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TDIV expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TMOD expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TPOW expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TAND expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TOR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TXOR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_SL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_SR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TDOT expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_IDENTICAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_NOT_IDENTICAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_NOT_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TSMALLER expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_SMALLER_OR_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TGREATER expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_GREATER_OR_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_ROCKET expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TQUESTION expr TCOLON expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TQUESTION TCOLON expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr TQUESTION TCOLON expr . [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TQUESTION TQUESTION expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_INSTANCEOF expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
## Transitions:
-- On T_SR shift to state 233
-- On T_SL shift to state 244
-- On T_ROCKET shift to state 260
-- On T_IS_SMALLER_OR_EQUAL shift to state 262
-- On T_IS_NOT_IDENTICAL shift to state 274
-- On T_IS_NOT_EQUAL shift to state 276
-- On T_IS_IDENTICAL shift to state 278
-- On T_IS_GREATER_OR_EQUAL shift to state 264
-- On T_IS_EQUAL shift to state 280
-- On T_INSTANCEOF shift to state 235
-- On T_INC shift to state 237
-- On T_DEC shift to state 238
-- On T_BOOLEAN_OR shift to state 282
-- On T_BOOLEAN_AND shift to state 284
-- On TXOR shift to state 286
-- On TSMALLER shift to state 266
-- On TPOW shift to state 246
-- On TPLUS shift to state 248
-- On TOR shift to state 290
-- On TMUL shift to state 250
-- On TMOD shift to state 252
-- On TMINUS shift to state 256
-- On TGREATER shift to state 268
-- On TDOT shift to state 258
-- On TDIV shift to state 254
-- On TAND shift to state 288
## Reductions:
-- On T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_CLOSE_TAG_OF_ECHO T_AWAIT T_AS T_ARROW TSEMICOLON TQUESTION TCPAR TCOMMA TCOLON TCBRACE TCBRA RDots EOF
--   reduce production expr -> expr TQUESTION TCOLON expr

State 297:
## Known stack suffix:
## expr TQUESTION expr
## LR(1) items:
expr -> expr . T_INC [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCOLON TAND ]
expr -> expr . T_DEC [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCOLON TAND ]
expr -> expr . T_BOOLEAN_OR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCOLON TAND ]
expr -> expr . T_BOOLEAN_AND expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCOLON TAND ]
expr -> expr . T_LOGICAL_OR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCOLON TAND ]
expr -> expr . T_LOGICAL_AND expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCOLON TAND ]
expr -> expr . T_LOGICAL_XOR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCOLON TAND ]
expr -> expr . TPLUS expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCOLON TAND ]
expr -> expr . TMINUS expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCOLON TAND ]
expr -> expr . TMUL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCOLON TAND ]
expr -> expr . TDIV expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCOLON TAND ]
expr -> expr . TMOD expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCOLON TAND ]
expr -> expr . TPOW expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCOLON TAND ]
expr -> expr . TAND expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCOLON TAND ]
expr -> expr . TOR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCOLON TAND ]
expr -> expr . TXOR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCOLON TAND ]
expr -> expr . T_SL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCOLON TAND ]
expr -> expr . T_SR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCOLON TAND ]
expr -> expr . TDOT expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCOLON TAND ]
expr -> expr . T_IS_IDENTICAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCOLON TAND ]
expr -> expr . T_IS_NOT_IDENTICAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCOLON TAND ]
expr -> expr . T_IS_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCOLON TAND ]
expr -> expr . T_IS_NOT_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCOLON TAND ]
expr -> expr . TSMALLER expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCOLON TAND ]
expr -> expr . T_IS_SMALLER_OR_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCOLON TAND ]
expr -> expr . TGREATER expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCOLON TAND ]
expr -> expr . T_IS_GREATER_OR_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCOLON TAND ]
expr -> expr . T_ROCKET expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCOLON TAND ]
expr -> expr . TQUESTION expr TCOLON expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCOLON TAND ]
expr -> expr TQUESTION expr . TCOLON expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TQUESTION TCOLON expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCOLON TAND ]
expr -> expr . TQUESTION TQUESTION expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCOLON TAND ]
expr -> expr . T_INSTANCEOF expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCOLON TAND ]
## Transitions:
-- On T_SR shift to state 233
-- On T_SL shift to state 244
-- On T_ROCKET shift to state 260
-- On T_LOGICAL_XOR shift to state 270
-- On T_LOGICAL_OR shift to state 298
-- On T_LOGICAL_AND shift to state 272
-- On T_IS_SMALLER_OR_EQUAL shift to state 262
-- On T_IS_NOT_IDENTICAL shift to state 274
-- On T_IS_NOT_EQUAL shift to state 276
-- On T_IS_IDENTICAL shift to state 278
-- On T_IS_GREATER_OR_EQUAL shift to state 264
-- On T_IS_EQUAL shift to state 280
-- On T_INSTANCEOF shift to state 235
-- On T_INC shift to state 237
-- On T_DEC shift to state 238
-- On T_BOOLEAN_OR shift to state 282
-- On T_BOOLEAN_AND shift to state 284
-- On TXOR shift to state 286
-- On TSMALLER shift to state 266
-- On TQUESTION shift to state 292
-- On TPOW shift to state 246
-- On TPLUS shift to state 248
-- On TOR shift to state 290
-- On TMUL shift to state 250
-- On TMOD shift to state 252
-- On TMINUS shift to state 256
-- On TGREATER shift to state 268
-- On TDOT shift to state 258
-- On TDIV shift to state 254
-- On TCOLON shift to state 300
-- On TAND shift to state 288
## Reductions:

State 298:
## Known stack suffix:
## expr T_LOGICAL_OR
## LR(1) items:
expr -> expr T_LOGICAL_OR . expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
## Transitions:
-- On T__AT shift to state 1
-- On T_YIELD shift to state 2
-- On T_VARIABLE shift to state 3
-- On T_UNSET_CAST shift to state 5
-- On T_TYPE shift to state 6
-- On T_TRAIT_C shift to state 7
-- On T_SUPER shift to state 8
-- On T_STRING_CAST shift to state 9
-- On T_STATIC shift to state 10
-- On T_START_HEREDOC shift to state 25
-- On T_SELF shift to state 40
-- On T_REQUIRE_ONCE shift to state 41
-- On T_REQUIRE shift to state 42
-- On T_PRINT shift to state 43
-- On T_PARENT shift to state 44
-- On T_OBJECT_CAST shift to state 45
-- On T_NEW shift to state 46
-- On T_NAMESPACE_C shift to state 49
-- On T_NAMESPACE shift to state 50
-- On T_METHOD_C shift to state 58
-- On T_METAVAR shift to state 17
-- On T_LNUMBER shift to state 59
-- On T_LIST shift to state 69
-- On T_LINE shift to state 60
-- On T_LAMBDA_OPAR shift to state 73
-- On T_ISSET shift to state 133
-- On T_INT_CAST shift to state 135
-- On T_INSTANCEOF shift to state 52
-- On T_INCLUDE_ONCE shift to state 136
-- On T_INCLUDE shift to state 137
-- On T_INC shift to state 138
-- On T_IDENT shift to state 18
-- On T_FUNC_C shift to state 61
-- On T_FUNCTION shift to state 139
-- On T_FILE shift to state 62
-- On T_EXIT shift to state 160
-- On T_EVAL shift to state 162
-- On T_ENUM shift to state 19
-- On T_EMPTY shift to state 164
-- On T_DOUBLE_CAST shift to state 168
-- On T_DNUMBER shift to state 63
-- On T_DIR shift to state 64
-- On T_DEC shift to state 169
-- On T_CONSTANT_ENCAPSED_STRING shift to state 65
-- On T_CLONE shift to state 170
-- On T_CLASS_C shift to state 66
-- On T_BOOL_CAST shift to state 171
-- On T_AWAIT shift to state 172
-- On T_ASYNC shift to state 173
-- On T_ARRAY_CAST shift to state 200
-- On T_ARRAY shift to state 201
-- On TTILDE shift to state 204
-- On TPLUS shift to state 205
-- On TOPAR shift to state 206
-- On TOBRA shift to state 209
-- On TMINUS shift to state 210
-- On TGUIL shift to state 211
-- On TDOLLARDOLLAR shift to state 213
-- On TDOLLAR shift to state 214
-- On TBANG shift to state 216
-- On TBACKQUOTE shift to state 217
-- On TANTISLASH shift to state 85
-- On LDots shift to state 222
-- On simple_expr shift to state 223
-- On qualified_name shift to state 94
-- On qualified_class_name shift to state 225
-- On primary_expr shift to state 226
-- On new_expr shift to state 227
-- On namespace_name shift to state 102
-- On member_expr shift to state 228
-- On lambda_expr shift to state 231
-- On ident_in_name shift to state 57
-- On ident shift to state 56
-- On expr shift to state 299
-- On constant shift to state 239
-- On call_expr shift to state 240
## Reductions:

State 299:
## Known stack suffix:
## expr T_LOGICAL_OR expr
## LR(1) items:
expr -> expr . T_INC [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_DEC [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_BOOLEAN_OR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_BOOLEAN_AND expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_LOGICAL_OR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr T_LOGICAL_OR expr . [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_LOGICAL_AND expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_LOGICAL_XOR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TPLUS expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TMINUS expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TMUL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TDIV expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TMOD expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TPOW expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TAND expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TOR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TXOR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_SL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_SR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TDOT expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_IDENTICAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_NOT_IDENTICAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_NOT_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TSMALLER expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_SMALLER_OR_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TGREATER expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_GREATER_OR_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_ROCKET expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TQUESTION expr TCOLON expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TQUESTION TCOLON expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TQUESTION TQUESTION expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_INSTANCEOF expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
## Transitions:
-- On T_SR shift to state 233
-- On T_SL shift to state 244
-- On T_ROCKET shift to state 260
-- On T_LOGICAL_XOR shift to state 270
-- On T_LOGICAL_AND shift to state 272
-- On T_IS_SMALLER_OR_EQUAL shift to state 262
-- On T_IS_NOT_IDENTICAL shift to state 274
-- On T_IS_NOT_EQUAL shift to state 276
-- On T_IS_IDENTICAL shift to state 278
-- On T_IS_GREATER_OR_EQUAL shift to state 264
-- On T_IS_EQUAL shift to state 280
-- On T_INSTANCEOF shift to state 235
-- On T_INC shift to state 237
-- On T_DEC shift to state 238
-- On T_BOOLEAN_OR shift to state 282
-- On T_BOOLEAN_AND shift to state 284
-- On TXOR shift to state 286
-- On TSMALLER shift to state 266
-- On TQUESTION shift to state 292
-- On TPOW shift to state 246
-- On TPLUS shift to state 248
-- On TOR shift to state 290
-- On TMUL shift to state 250
-- On TMOD shift to state 252
-- On TMINUS shift to state 256
-- On TGREATER shift to state 268
-- On TDOT shift to state 258
-- On TDIV shift to state 254
-- On TAND shift to state 288
## Reductions:
-- On T_LOGICAL_OR T_LAMBDA_CPAR T_CLOSE_TAG_OF_ECHO T_AWAIT T_AS T_ARROW TSEMICOLON TCPAR TCOMMA TCOLON TCBRACE TCBRA RDots EOF
--   reduce production expr -> expr T_LOGICAL_OR expr

State 300:
## Known stack suffix:
## expr TQUESTION expr TCOLON
## LR(1) items:
expr -> expr TQUESTION expr TCOLON . expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
## Transitions:
-- On T__AT shift to state 1
-- On T_YIELD shift to state 2
-- On T_VARIABLE shift to state 3
-- On T_UNSET_CAST shift to state 5
-- On T_TYPE shift to state 6
-- On T_TRAIT_C shift to state 7
-- On T_SUPER shift to state 8
-- On T_STRING_CAST shift to state 9
-- On T_STATIC shift to state 10
-- On T_START_HEREDOC shift to state 25
-- On T_SELF shift to state 40
-- On T_REQUIRE_ONCE shift to state 41
-- On T_REQUIRE shift to state 42
-- On T_PRINT shift to state 43
-- On T_PARENT shift to state 44
-- On T_OBJECT_CAST shift to state 45
-- On T_NEW shift to state 46
-- On T_NAMESPACE_C shift to state 49
-- On T_NAMESPACE shift to state 50
-- On T_METHOD_C shift to state 58
-- On T_METAVAR shift to state 17
-- On T_LNUMBER shift to state 59
-- On T_LIST shift to state 69
-- On T_LINE shift to state 60
-- On T_LAMBDA_OPAR shift to state 73
-- On T_ISSET shift to state 133
-- On T_INT_CAST shift to state 135
-- On T_INSTANCEOF shift to state 52
-- On T_INCLUDE_ONCE shift to state 136
-- On T_INCLUDE shift to state 137
-- On T_INC shift to state 138
-- On T_IDENT shift to state 18
-- On T_FUNC_C shift to state 61
-- On T_FUNCTION shift to state 139
-- On T_FILE shift to state 62
-- On T_EXIT shift to state 160
-- On T_EVAL shift to state 162
-- On T_ENUM shift to state 19
-- On T_EMPTY shift to state 164
-- On T_DOUBLE_CAST shift to state 168
-- On T_DNUMBER shift to state 63
-- On T_DIR shift to state 64
-- On T_DEC shift to state 169
-- On T_CONSTANT_ENCAPSED_STRING shift to state 65
-- On T_CLONE shift to state 170
-- On T_CLASS_C shift to state 66
-- On T_BOOL_CAST shift to state 171
-- On T_AWAIT shift to state 172
-- On T_ASYNC shift to state 173
-- On T_ARRAY_CAST shift to state 200
-- On T_ARRAY shift to state 201
-- On TTILDE shift to state 204
-- On TPLUS shift to state 205
-- On TOPAR shift to state 206
-- On TOBRA shift to state 209
-- On TMINUS shift to state 210
-- On TGUIL shift to state 211
-- On TDOLLARDOLLAR shift to state 213
-- On TDOLLAR shift to state 214
-- On TBANG shift to state 216
-- On TBACKQUOTE shift to state 217
-- On TANTISLASH shift to state 85
-- On LDots shift to state 222
-- On simple_expr shift to state 223
-- On qualified_name shift to state 94
-- On qualified_class_name shift to state 225
-- On primary_expr shift to state 226
-- On new_expr shift to state 227
-- On namespace_name shift to state 102
-- On member_expr shift to state 228
-- On lambda_expr shift to state 231
-- On ident_in_name shift to state 57
-- On ident shift to state 56
-- On expr shift to state 301
-- On constant shift to state 239
-- On call_expr shift to state 240
## Reductions:

State 301:
## Known stack suffix:
## expr TQUESTION expr TCOLON expr
## LR(1) items:
expr -> expr . T_INC [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_DEC [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_BOOLEAN_OR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_BOOLEAN_AND expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_LOGICAL_OR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_LOGICAL_AND expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_LOGICAL_XOR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TPLUS expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TMINUS expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TMUL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TDIV expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TMOD expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TPOW expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TAND expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TOR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TXOR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_SL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_SR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TDOT expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_IDENTICAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_NOT_IDENTICAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_NOT_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TSMALLER expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_SMALLER_OR_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TGREATER expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_GREATER_OR_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_ROCKET expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TQUESTION expr TCOLON expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr TQUESTION expr TCOLON expr . [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TQUESTION TCOLON expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TQUESTION TQUESTION expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_INSTANCEOF expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
## Transitions:
-- On T_SR shift to state 233
-- On T_SL shift to state 244
-- On T_ROCKET shift to state 260
-- On T_IS_SMALLER_OR_EQUAL shift to state 262
-- On T_IS_NOT_IDENTICAL shift to state 274
-- On T_IS_NOT_EQUAL shift to state 276
-- On T_IS_IDENTICAL shift to state 278
-- On T_IS_GREATER_OR_EQUAL shift to state 264
-- On T_IS_EQUAL shift to state 280
-- On T_INSTANCEOF shift to state 235
-- On T_INC shift to state 237
-- On T_DEC shift to state 238
-- On T_BOOLEAN_OR shift to state 282
-- On T_BOOLEAN_AND shift to state 284
-- On TXOR shift to state 286
-- On TSMALLER shift to state 266
-- On TPOW shift to state 246
-- On TPLUS shift to state 248
-- On TOR shift to state 290
-- On TMUL shift to state 250
-- On TMOD shift to state 252
-- On TMINUS shift to state 256
-- On TGREATER shift to state 268
-- On TDOT shift to state 258
-- On TDIV shift to state 254
-- On TAND shift to state 288
## Reductions:
-- On T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_CLOSE_TAG_OF_ECHO T_AWAIT T_AS T_ARROW TSEMICOLON TQUESTION TCPAR TCOMMA TCOLON TCBRACE TCBRA RDots EOF
--   reduce production expr -> expr TQUESTION expr TCOLON expr

State 302:
## Known stack suffix:
## call_expr T_OBJECT_OPERATOR TOBRACE expr TCBRACE
## LR(1) items:
call_expr -> call_expr T_OBJECT_OPERATOR TOBRACE expr TCBRACE . [ T_XOR_EQUAL T_SR_EQUAL T_SR T_SL_EQUAL T_SL T_ROCKET T_PLUS_EQUAL T_OR_EQUAL T_OBJECT_OPERATOR T_MUL_EQUAL T_MOD_EQUAL T_MINUS_EQUAL T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DIV_EQUAL T_DEC T_CONCAT_EQUAL T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW T_AND_EQUAL TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TOPAR TOBRACE TOBRA TMUL TMOD TMINUS TGREATER TEQ TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production call_expr -> call_expr T_OBJECT_OPERATOR TOBRACE expr TCBRACE

State 303:
## Known stack suffix:
## call_expr T_OBJECT_OPERATOR primary_expr
## LR(1) items:
call_expr -> call_expr T_OBJECT_OPERATOR primary_expr . [ T_XOR_EQUAL T_SR_EQUAL T_SR T_SL_EQUAL T_SL T_ROCKET T_PLUS_EQUAL T_OR_EQUAL T_OBJECT_OPERATOR T_MUL_EQUAL T_MOD_EQUAL T_MINUS_EQUAL T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DIV_EQUAL T_DEC T_CONCAT_EQUAL T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW T_AND_EQUAL TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TOPAR TOBRACE TOBRA TMUL TMOD TMINUS TGREATER TEQ TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production call_expr -> call_expr T_OBJECT_OPERATOR primary_expr

State 304:
## Known stack suffix:
## call_expr TOBRACE
## LR(1) items:
call_expr -> call_expr TOBRACE . expr TCBRACE [ T_XOR_EQUAL T_SR_EQUAL T_SR T_SL_EQUAL T_SL T_ROCKET T_PLUS_EQUAL T_OR_EQUAL T_OBJECT_OPERATOR T_MUL_EQUAL T_MOD_EQUAL T_MINUS_EQUAL T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DIV_EQUAL T_DEC T_CONCAT_EQUAL T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW T_AND_EQUAL TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TOPAR TOBRACE TOBRA TMUL TMOD TMINUS TGREATER TEQ TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
## Transitions:
-- On T__AT shift to state 1
-- On T_YIELD shift to state 2
-- On T_VARIABLE shift to state 3
-- On T_UNSET_CAST shift to state 5
-- On T_TYPE shift to state 6
-- On T_TRAIT_C shift to state 7
-- On T_SUPER shift to state 8
-- On T_STRING_CAST shift to state 9
-- On T_STATIC shift to state 10
-- On T_START_HEREDOC shift to state 25
-- On T_SELF shift to state 40
-- On T_REQUIRE_ONCE shift to state 41
-- On T_REQUIRE shift to state 42
-- On T_PRINT shift to state 43
-- On T_PARENT shift to state 44
-- On T_OBJECT_CAST shift to state 45
-- On T_NEW shift to state 46
-- On T_NAMESPACE_C shift to state 49
-- On T_NAMESPACE shift to state 50
-- On T_METHOD_C shift to state 58
-- On T_METAVAR shift to state 17
-- On T_LNUMBER shift to state 59
-- On T_LIST shift to state 69
-- On T_LINE shift to state 60
-- On T_LAMBDA_OPAR shift to state 73
-- On T_ISSET shift to state 133
-- On T_INT_CAST shift to state 135
-- On T_INSTANCEOF shift to state 52
-- On T_INCLUDE_ONCE shift to state 136
-- On T_INCLUDE shift to state 137
-- On T_INC shift to state 138
-- On T_IDENT shift to state 18
-- On T_FUNC_C shift to state 61
-- On T_FUNCTION shift to state 139
-- On T_FILE shift to state 62
-- On T_EXIT shift to state 160
-- On T_EVAL shift to state 162
-- On T_ENUM shift to state 19
-- On T_EMPTY shift to state 164
-- On T_DOUBLE_CAST shift to state 168
-- On T_DNUMBER shift to state 63
-- On T_DIR shift to state 64
-- On T_DEC shift to state 169
-- On T_CONSTANT_ENCAPSED_STRING shift to state 65
-- On T_CLONE shift to state 170
-- On T_CLASS_C shift to state 66
-- On T_BOOL_CAST shift to state 171
-- On T_AWAIT shift to state 172
-- On T_ASYNC shift to state 173
-- On T_ARRAY_CAST shift to state 200
-- On T_ARRAY shift to state 201
-- On TTILDE shift to state 204
-- On TPLUS shift to state 205
-- On TOPAR shift to state 206
-- On TOBRA shift to state 209
-- On TMINUS shift to state 210
-- On TGUIL shift to state 211
-- On TDOLLARDOLLAR shift to state 213
-- On TDOLLAR shift to state 214
-- On TBANG shift to state 216
-- On TBACKQUOTE shift to state 217
-- On TANTISLASH shift to state 85
-- On LDots shift to state 222
-- On simple_expr shift to state 223
-- On qualified_name shift to state 94
-- On qualified_class_name shift to state 225
-- On primary_expr shift to state 226
-- On new_expr shift to state 227
-- On namespace_name shift to state 102
-- On member_expr shift to state 228
-- On lambda_expr shift to state 231
-- On ident_in_name shift to state 57
-- On ident shift to state 56
-- On expr shift to state 305
-- On constant shift to state 239
-- On call_expr shift to state 240
## Reductions:

State 305:
## Known stack suffix:
## call_expr TOBRACE expr
## LR(1) items:
call_expr -> call_expr TOBRACE expr . TCBRACE [ T_XOR_EQUAL T_SR_EQUAL T_SR T_SL_EQUAL T_SL T_ROCKET T_PLUS_EQUAL T_OR_EQUAL T_OBJECT_OPERATOR T_MUL_EQUAL T_MOD_EQUAL T_MINUS_EQUAL T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DIV_EQUAL T_DEC T_CONCAT_EQUAL T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW T_AND_EQUAL TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TOPAR TOBRACE TOBRA TMUL TMOD TMINUS TGREATER TEQ TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_INC [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCBRACE TAND ]
expr -> expr . T_DEC [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCBRACE TAND ]
expr -> expr . T_BOOLEAN_OR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCBRACE TAND ]
expr -> expr . T_BOOLEAN_AND expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCBRACE TAND ]
expr -> expr . T_LOGICAL_OR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCBRACE TAND ]
expr -> expr . T_LOGICAL_AND expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCBRACE TAND ]
expr -> expr . T_LOGICAL_XOR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCBRACE TAND ]
expr -> expr . TPLUS expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCBRACE TAND ]
expr -> expr . TMINUS expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCBRACE TAND ]
expr -> expr . TMUL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCBRACE TAND ]
expr -> expr . TDIV expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCBRACE TAND ]
expr -> expr . TMOD expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCBRACE TAND ]
expr -> expr . TPOW expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCBRACE TAND ]
expr -> expr . TAND expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCBRACE TAND ]
expr -> expr . TOR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCBRACE TAND ]
expr -> expr . TXOR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCBRACE TAND ]
expr -> expr . T_SL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCBRACE TAND ]
expr -> expr . T_SR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCBRACE TAND ]
expr -> expr . TDOT expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCBRACE TAND ]
expr -> expr . T_IS_IDENTICAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCBRACE TAND ]
expr -> expr . T_IS_NOT_IDENTICAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCBRACE TAND ]
expr -> expr . T_IS_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCBRACE TAND ]
expr -> expr . T_IS_NOT_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCBRACE TAND ]
expr -> expr . TSMALLER expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCBRACE TAND ]
expr -> expr . T_IS_SMALLER_OR_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCBRACE TAND ]
expr -> expr . TGREATER expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCBRACE TAND ]
expr -> expr . T_IS_GREATER_OR_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCBRACE TAND ]
expr -> expr . T_ROCKET expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCBRACE TAND ]
expr -> expr . TQUESTION expr TCOLON expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCBRACE TAND ]
expr -> expr . TQUESTION TCOLON expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCBRACE TAND ]
expr -> expr . TQUESTION TQUESTION expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCBRACE TAND ]
expr -> expr . T_INSTANCEOF expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCBRACE TAND ]
## Transitions:
-- On T_SR shift to state 233
-- On T_SL shift to state 244
-- On T_ROCKET shift to state 260
-- On T_LOGICAL_XOR shift to state 270
-- On T_LOGICAL_OR shift to state 298
-- On T_LOGICAL_AND shift to state 272
-- On T_IS_SMALLER_OR_EQUAL shift to state 262
-- On T_IS_NOT_IDENTICAL shift to state 274
-- On T_IS_NOT_EQUAL shift to state 276
-- On T_IS_IDENTICAL shift to state 278
-- On T_IS_GREATER_OR_EQUAL shift to state 264
-- On T_IS_EQUAL shift to state 280
-- On T_INSTANCEOF shift to state 235
-- On T_INC shift to state 237
-- On T_DEC shift to state 238
-- On T_BOOLEAN_OR shift to state 282
-- On T_BOOLEAN_AND shift to state 284
-- On TXOR shift to state 286
-- On TSMALLER shift to state 266
-- On TQUESTION shift to state 292
-- On TPOW shift to state 246
-- On TPLUS shift to state 248
-- On TOR shift to state 290
-- On TMUL shift to state 250
-- On TMOD shift to state 252
-- On TMINUS shift to state 256
-- On TGREATER shift to state 268
-- On TDOT shift to state 258
-- On TDIV shift to state 254
-- On TCBRACE shift to state 306
-- On TAND shift to state 288
## Reductions:

State 306:
## Known stack suffix:
## call_expr TOBRACE expr TCBRACE
## LR(1) items:
call_expr -> call_expr TOBRACE expr TCBRACE . [ T_XOR_EQUAL T_SR_EQUAL T_SR T_SL_EQUAL T_SL T_ROCKET T_PLUS_EQUAL T_OR_EQUAL T_OBJECT_OPERATOR T_MUL_EQUAL T_MOD_EQUAL T_MINUS_EQUAL T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DIV_EQUAL T_DEC T_CONCAT_EQUAL T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW T_AND_EQUAL TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TOPAR TOBRACE TOBRA TMUL TMOD TMINUS TGREATER TEQ TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production call_expr -> call_expr TOBRACE expr TCBRACE

State 307:
## Known stack suffix:
## call_expr TOBRA
## LR(1) items:
call_expr -> call_expr TOBRA . dim_offset TCBRA [ T_XOR_EQUAL T_SR_EQUAL T_SR T_SL_EQUAL T_SL T_ROCKET T_PLUS_EQUAL T_OR_EQUAL T_OBJECT_OPERATOR T_MUL_EQUAL T_MOD_EQUAL T_MINUS_EQUAL T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DIV_EQUAL T_DEC T_CONCAT_EQUAL T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW T_AND_EQUAL TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TOPAR TOBRACE TOBRA TMUL TMOD TMINUS TGREATER TEQ TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
## Transitions:
-- On T__AT shift to state 1
-- On T_YIELD shift to state 2
-- On T_VARIABLE shift to state 3
-- On T_UNSET_CAST shift to state 5
-- On T_TYPE shift to state 6
-- On T_TRAIT_C shift to state 7
-- On T_SUPER shift to state 8
-- On T_STRING_CAST shift to state 9
-- On T_STATIC shift to state 10
-- On T_START_HEREDOC shift to state 25
-- On T_SELF shift to state 40
-- On T_REQUIRE_ONCE shift to state 41
-- On T_REQUIRE shift to state 42
-- On T_PRINT shift to state 43
-- On T_PARENT shift to state 44
-- On T_OBJECT_CAST shift to state 45
-- On T_NEW shift to state 46
-- On T_NAMESPACE_C shift to state 49
-- On T_NAMESPACE shift to state 50
-- On T_METHOD_C shift to state 58
-- On T_METAVAR shift to state 17
-- On T_LNUMBER shift to state 59
-- On T_LIST shift to state 69
-- On T_LINE shift to state 60
-- On T_LAMBDA_OPAR shift to state 73
-- On T_ISSET shift to state 133
-- On T_INT_CAST shift to state 135
-- On T_INSTANCEOF shift to state 52
-- On T_INCLUDE_ONCE shift to state 136
-- On T_INCLUDE shift to state 137
-- On T_INC shift to state 138
-- On T_IDENT shift to state 18
-- On T_FUNC_C shift to state 61
-- On T_FUNCTION shift to state 139
-- On T_FILE shift to state 62
-- On T_EXIT shift to state 160
-- On T_EVAL shift to state 162
-- On T_ENUM shift to state 19
-- On T_EMPTY shift to state 164
-- On T_ELLIPSIS shift to state 308
-- On T_DOUBLE_CAST shift to state 168
-- On T_DNUMBER shift to state 63
-- On T_DIR shift to state 64
-- On T_DEC shift to state 169
-- On T_CONSTANT_ENCAPSED_STRING shift to state 65
-- On T_CLONE shift to state 170
-- On T_CLASS_C shift to state 66
-- On T_BOOL_CAST shift to state 171
-- On T_AWAIT shift to state 172
-- On T_ASYNC shift to state 173
-- On T_ARRAY_CAST shift to state 200
-- On T_ARRAY shift to state 201
-- On TTILDE shift to state 204
-- On TPLUS shift to state 205
-- On TOPAR shift to state 206
-- On TOBRA shift to state 209
-- On TMINUS shift to state 210
-- On TGUIL shift to state 211
-- On TDOLLARDOLLAR shift to state 213
-- On TDOLLAR shift to state 214
-- On TBANG shift to state 216
-- On TBACKQUOTE shift to state 217
-- On TANTISLASH shift to state 85
-- On LDots shift to state 222
-- On simple_expr shift to state 223
-- On qualified_name shift to state 94
-- On qualified_class_name shift to state 225
-- On primary_expr shift to state 226
-- On option(expr) shift to state 309
-- On new_expr shift to state 227
-- On namespace_name shift to state 102
-- On member_expr shift to state 228
-- On lambda_expr shift to state 231
-- On ident_in_name shift to state 57
-- On ident shift to state 56
-- On expr shift to state 310
-- On dim_offset shift to state 311
-- On constant shift to state 239
-- On call_expr shift to state 240
## Reductions:
-- On TCBRA
--   reduce production option(expr) ->

State 308:
## Known stack suffix:
## T_ELLIPSIS
## LR(1) items:
dim_offset -> T_ELLIPSIS . [ TCBRA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production dim_offset -> T_ELLIPSIS

State 309:
## Known stack suffix:
## option(expr)
## LR(1) items:
dim_offset -> option(expr) . [ TCBRA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production dim_offset -> option(expr)

State 310:
## Known stack suffix:
## expr
## LR(1) items:
expr -> expr . T_INC [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCBRA TAND ]
expr -> expr . T_DEC [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCBRA TAND ]
expr -> expr . T_BOOLEAN_OR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCBRA TAND ]
expr -> expr . T_BOOLEAN_AND expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCBRA TAND ]
expr -> expr . T_LOGICAL_OR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCBRA TAND ]
expr -> expr . T_LOGICAL_AND expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCBRA TAND ]
expr -> expr . T_LOGICAL_XOR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCBRA TAND ]
expr -> expr . TPLUS expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCBRA TAND ]
expr -> expr . TMINUS expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCBRA TAND ]
expr -> expr . TMUL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCBRA TAND ]
expr -> expr . TDIV expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCBRA TAND ]
expr -> expr . TMOD expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCBRA TAND ]
expr -> expr . TPOW expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCBRA TAND ]
expr -> expr . TAND expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCBRA TAND ]
expr -> expr . TOR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCBRA TAND ]
expr -> expr . TXOR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCBRA TAND ]
expr -> expr . T_SL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCBRA TAND ]
expr -> expr . T_SR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCBRA TAND ]
expr -> expr . TDOT expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCBRA TAND ]
expr -> expr . T_IS_IDENTICAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCBRA TAND ]
expr -> expr . T_IS_NOT_IDENTICAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCBRA TAND ]
expr -> expr . T_IS_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCBRA TAND ]
expr -> expr . T_IS_NOT_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCBRA TAND ]
expr -> expr . TSMALLER expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCBRA TAND ]
expr -> expr . T_IS_SMALLER_OR_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCBRA TAND ]
expr -> expr . TGREATER expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCBRA TAND ]
expr -> expr . T_IS_GREATER_OR_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCBRA TAND ]
expr -> expr . T_ROCKET expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCBRA TAND ]
expr -> expr . TQUESTION expr TCOLON expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCBRA TAND ]
expr -> expr . TQUESTION TCOLON expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCBRA TAND ]
expr -> expr . TQUESTION TQUESTION expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCBRA TAND ]
expr -> expr . T_INSTANCEOF expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCBRA TAND ]
option(expr) -> expr . [ TSEMICOLON TCBRA ]
## Transitions:
-- On T_SR shift to state 233
-- On T_SL shift to state 244
-- On T_ROCKET shift to state 260
-- On T_LOGICAL_XOR shift to state 270
-- On T_LOGICAL_OR shift to state 298
-- On T_LOGICAL_AND shift to state 272
-- On T_IS_SMALLER_OR_EQUAL shift to state 262
-- On T_IS_NOT_IDENTICAL shift to state 274
-- On T_IS_NOT_EQUAL shift to state 276
-- On T_IS_IDENTICAL shift to state 278
-- On T_IS_GREATER_OR_EQUAL shift to state 264
-- On T_IS_EQUAL shift to state 280
-- On T_INSTANCEOF shift to state 235
-- On T_INC shift to state 237
-- On T_DEC shift to state 238
-- On T_BOOLEAN_OR shift to state 282
-- On T_BOOLEAN_AND shift to state 284
-- On TXOR shift to state 286
-- On TSMALLER shift to state 266
-- On TQUESTION shift to state 292
-- On TPOW shift to state 246
-- On TPLUS shift to state 248
-- On TOR shift to state 290
-- On TMUL shift to state 250
-- On TMOD shift to state 252
-- On TMINUS shift to state 256
-- On TGREATER shift to state 268
-- On TDOT shift to state 258
-- On TDIV shift to state 254
-- On TAND shift to state 288
## Reductions:
-- On TSEMICOLON TCBRA
--   reduce production option(expr) -> expr

State 311:
## Known stack suffix:
## call_expr TOBRA dim_offset
## LR(1) items:
call_expr -> call_expr TOBRA dim_offset . TCBRA [ T_XOR_EQUAL T_SR_EQUAL T_SR T_SL_EQUAL T_SL T_ROCKET T_PLUS_EQUAL T_OR_EQUAL T_OBJECT_OPERATOR T_MUL_EQUAL T_MOD_EQUAL T_MINUS_EQUAL T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DIV_EQUAL T_DEC T_CONCAT_EQUAL T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW T_AND_EQUAL TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TOPAR TOBRACE TOBRA TMUL TMOD TMINUS TGREATER TEQ TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
## Transitions:
-- On TCBRA shift to state 312
## Reductions:

State 312:
## Known stack suffix:
## call_expr TOBRA dim_offset TCBRA
## LR(1) items:
call_expr -> call_expr TOBRA dim_offset TCBRA . [ T_XOR_EQUAL T_SR_EQUAL T_SR T_SL_EQUAL T_SL T_ROCKET T_PLUS_EQUAL T_OR_EQUAL T_OBJECT_OPERATOR T_MUL_EQUAL T_MOD_EQUAL T_MINUS_EQUAL T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DIV_EQUAL T_DEC T_CONCAT_EQUAL T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW T_AND_EQUAL TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TOPAR TOBRACE TOBRA TMUL TMOD TMINUS TGREATER TEQ TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production call_expr -> call_expr TOBRA dim_offset TCBRA

State 313:
## Known stack suffix:
## call_expr arguments
## LR(1) items:
call_expr -> call_expr arguments . [ T_XOR_EQUAL T_SR_EQUAL T_SR T_SL_EQUAL T_SL T_ROCKET T_PLUS_EQUAL T_OR_EQUAL T_OBJECT_OPERATOR T_MUL_EQUAL T_MOD_EQUAL T_MINUS_EQUAL T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DIV_EQUAL T_DEC T_CONCAT_EQUAL T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW T_AND_EQUAL TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TOPAR TOBRACE TOBRA TMUL TMOD TMINUS TGREATER TEQ TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production call_expr -> call_expr arguments

State 314:
## Known stack suffix:
## member_expr T_OBJECT_OPERATOR TOBRACE expr TCBRACE
## LR(1) items:
member_expr -> member_expr T_OBJECT_OPERATOR TOBRACE expr TCBRACE . [ T_XOR_EQUAL T_SR_EQUAL T_SR T_SL_EQUAL T_SL T_ROCKET T_PLUS_EQUAL T_OR_EQUAL T_OBJECT_OPERATOR T_MUL_EQUAL T_MOD_EQUAL T_MINUS_EQUAL T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DIV_EQUAL T_DEC T_CONCAT_EQUAL T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW T_AND_EQUAL TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TOPAR TOBRACE TOBRA TMUL TMOD TMINUS TGREATER TEQ TDOT TDIV TCPAR TCOMMA TCOLON TCOLCOL TCBRACE TCBRA TAND RDots EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production member_expr -> member_expr T_OBJECT_OPERATOR TOBRACE expr TCBRACE

State 315:
## Known stack suffix:
## member_expr T_OBJECT_OPERATOR primary_expr
## LR(1) items:
member_expr -> member_expr T_OBJECT_OPERATOR primary_expr . [ T_XOR_EQUAL T_SR_EQUAL T_SR T_SL_EQUAL T_SL T_ROCKET T_PLUS_EQUAL T_OR_EQUAL T_OBJECT_OPERATOR T_MUL_EQUAL T_MOD_EQUAL T_MINUS_EQUAL T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DIV_EQUAL T_DEC T_CONCAT_EQUAL T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW T_AND_EQUAL TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TOPAR TOBRACE TOBRA TMUL TMOD TMINUS TGREATER TEQ TDOT TDIV TCPAR TCOMMA TCOLON TCOLCOL TCBRACE TCBRA TAND RDots EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production member_expr -> member_expr T_OBJECT_OPERATOR primary_expr

State 316:
## Known stack suffix:
## member_expr TOBRACE
## LR(1) items:
member_expr -> member_expr TOBRACE . expr TCBRACE [ T_XOR_EQUAL T_SR_EQUAL T_SR T_SL_EQUAL T_SL T_ROCKET T_PLUS_EQUAL T_OR_EQUAL T_OBJECT_OPERATOR T_MUL_EQUAL T_MOD_EQUAL T_MINUS_EQUAL T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DIV_EQUAL T_DEC T_CONCAT_EQUAL T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW T_AND_EQUAL TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TOPAR TOBRACE TOBRA TMUL TMOD TMINUS TGREATER TEQ TDOT TDIV TCPAR TCOMMA TCOLON TCOLCOL TCBRACE TCBRA TAND RDots EOF ]
## Transitions:
-- On T__AT shift to state 1
-- On T_YIELD shift to state 2
-- On T_VARIABLE shift to state 3
-- On T_UNSET_CAST shift to state 5
-- On T_TYPE shift to state 6
-- On T_TRAIT_C shift to state 7
-- On T_SUPER shift to state 8
-- On T_STRING_CAST shift to state 9
-- On T_STATIC shift to state 10
-- On T_START_HEREDOC shift to state 25
-- On T_SELF shift to state 40
-- On T_REQUIRE_ONCE shift to state 41
-- On T_REQUIRE shift to state 42
-- On T_PRINT shift to state 43
-- On T_PARENT shift to state 44
-- On T_OBJECT_CAST shift to state 45
-- On T_NEW shift to state 46
-- On T_NAMESPACE_C shift to state 49
-- On T_NAMESPACE shift to state 50
-- On T_METHOD_C shift to state 58
-- On T_METAVAR shift to state 17
-- On T_LNUMBER shift to state 59
-- On T_LIST shift to state 69
-- On T_LINE shift to state 60
-- On T_LAMBDA_OPAR shift to state 73
-- On T_ISSET shift to state 133
-- On T_INT_CAST shift to state 135
-- On T_INSTANCEOF shift to state 52
-- On T_INCLUDE_ONCE shift to state 136
-- On T_INCLUDE shift to state 137
-- On T_INC shift to state 138
-- On T_IDENT shift to state 18
-- On T_FUNC_C shift to state 61
-- On T_FUNCTION shift to state 139
-- On T_FILE shift to state 62
-- On T_EXIT shift to state 160
-- On T_EVAL shift to state 162
-- On T_ENUM shift to state 19
-- On T_EMPTY shift to state 164
-- On T_DOUBLE_CAST shift to state 168
-- On T_DNUMBER shift to state 63
-- On T_DIR shift to state 64
-- On T_DEC shift to state 169
-- On T_CONSTANT_ENCAPSED_STRING shift to state 65
-- On T_CLONE shift to state 170
-- On T_CLASS_C shift to state 66
-- On T_BOOL_CAST shift to state 171
-- On T_AWAIT shift to state 172
-- On T_ASYNC shift to state 173
-- On T_ARRAY_CAST shift to state 200
-- On T_ARRAY shift to state 201
-- On TTILDE shift to state 204
-- On TPLUS shift to state 205
-- On TOPAR shift to state 206
-- On TOBRA shift to state 209
-- On TMINUS shift to state 210
-- On TGUIL shift to state 211
-- On TDOLLARDOLLAR shift to state 213
-- On TDOLLAR shift to state 214
-- On TBANG shift to state 216
-- On TBACKQUOTE shift to state 217
-- On TANTISLASH shift to state 85
-- On LDots shift to state 222
-- On simple_expr shift to state 223
-- On qualified_name shift to state 94
-- On qualified_class_name shift to state 225
-- On primary_expr shift to state 226
-- On new_expr shift to state 227
-- On namespace_name shift to state 102
-- On member_expr shift to state 228
-- On lambda_expr shift to state 231
-- On ident_in_name shift to state 57
-- On ident shift to state 56
-- On expr shift to state 317
-- On constant shift to state 239
-- On call_expr shift to state 240
## Reductions:

State 317:
## Known stack suffix:
## member_expr TOBRACE expr
## LR(1) items:
expr -> expr . T_INC [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCBRACE TAND ]
expr -> expr . T_DEC [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCBRACE TAND ]
expr -> expr . T_BOOLEAN_OR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCBRACE TAND ]
expr -> expr . T_BOOLEAN_AND expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCBRACE TAND ]
expr -> expr . T_LOGICAL_OR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCBRACE TAND ]
expr -> expr . T_LOGICAL_AND expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCBRACE TAND ]
expr -> expr . T_LOGICAL_XOR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCBRACE TAND ]
expr -> expr . TPLUS expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCBRACE TAND ]
expr -> expr . TMINUS expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCBRACE TAND ]
expr -> expr . TMUL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCBRACE TAND ]
expr -> expr . TDIV expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCBRACE TAND ]
expr -> expr . TMOD expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCBRACE TAND ]
expr -> expr . TPOW expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCBRACE TAND ]
expr -> expr . TAND expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCBRACE TAND ]
expr -> expr . TOR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCBRACE TAND ]
expr -> expr . TXOR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCBRACE TAND ]
expr -> expr . T_SL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCBRACE TAND ]
expr -> expr . T_SR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCBRACE TAND ]
expr -> expr . TDOT expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCBRACE TAND ]
expr -> expr . T_IS_IDENTICAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCBRACE TAND ]
expr -> expr . T_IS_NOT_IDENTICAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCBRACE TAND ]
expr -> expr . T_IS_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCBRACE TAND ]
expr -> expr . T_IS_NOT_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCBRACE TAND ]
expr -> expr . TSMALLER expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCBRACE TAND ]
expr -> expr . T_IS_SMALLER_OR_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCBRACE TAND ]
expr -> expr . TGREATER expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCBRACE TAND ]
expr -> expr . T_IS_GREATER_OR_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCBRACE TAND ]
expr -> expr . T_ROCKET expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCBRACE TAND ]
expr -> expr . TQUESTION expr TCOLON expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCBRACE TAND ]
expr -> expr . TQUESTION TCOLON expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCBRACE TAND ]
expr -> expr . TQUESTION TQUESTION expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCBRACE TAND ]
expr -> expr . T_INSTANCEOF expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCBRACE TAND ]
member_expr -> member_expr TOBRACE expr . TCBRACE [ T_XOR_EQUAL T_SR_EQUAL T_SR T_SL_EQUAL T_SL T_ROCKET T_PLUS_EQUAL T_OR_EQUAL T_OBJECT_OPERATOR T_MUL_EQUAL T_MOD_EQUAL T_MINUS_EQUAL T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DIV_EQUAL T_DEC T_CONCAT_EQUAL T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW T_AND_EQUAL TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TOPAR TOBRACE TOBRA TMUL TMOD TMINUS TGREATER TEQ TDOT TDIV TCPAR TCOMMA TCOLON TCOLCOL TCBRACE TCBRA TAND RDots EOF ]
## Transitions:
-- On T_SR shift to state 233
-- On T_SL shift to state 244
-- On T_ROCKET shift to state 260
-- On T_LOGICAL_XOR shift to state 270
-- On T_LOGICAL_OR shift to state 298
-- On T_LOGICAL_AND shift to state 272
-- On T_IS_SMALLER_OR_EQUAL shift to state 262
-- On T_IS_NOT_IDENTICAL shift to state 274
-- On T_IS_NOT_EQUAL shift to state 276
-- On T_IS_IDENTICAL shift to state 278
-- On T_IS_GREATER_OR_EQUAL shift to state 264
-- On T_IS_EQUAL shift to state 280
-- On T_INSTANCEOF shift to state 235
-- On T_INC shift to state 237
-- On T_DEC shift to state 238
-- On T_BOOLEAN_OR shift to state 282
-- On T_BOOLEAN_AND shift to state 284
-- On TXOR shift to state 286
-- On TSMALLER shift to state 266
-- On TQUESTION shift to state 292
-- On TPOW shift to state 246
-- On TPLUS shift to state 248
-- On TOR shift to state 290
-- On TMUL shift to state 250
-- On TMOD shift to state 252
-- On TMINUS shift to state 256
-- On TGREATER shift to state 268
-- On TDOT shift to state 258
-- On TDIV shift to state 254
-- On TCBRACE shift to state 318
-- On TAND shift to state 288
## Reductions:

State 318:
## Known stack suffix:
## member_expr TOBRACE expr TCBRACE
## LR(1) items:
member_expr -> member_expr TOBRACE expr TCBRACE . [ T_XOR_EQUAL T_SR_EQUAL T_SR T_SL_EQUAL T_SL T_ROCKET T_PLUS_EQUAL T_OR_EQUAL T_OBJECT_OPERATOR T_MUL_EQUAL T_MOD_EQUAL T_MINUS_EQUAL T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DIV_EQUAL T_DEC T_CONCAT_EQUAL T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW T_AND_EQUAL TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TOPAR TOBRACE TOBRA TMUL TMOD TMINUS TGREATER TEQ TDOT TDIV TCPAR TCOMMA TCOLON TCOLCOL TCBRACE TCBRA TAND RDots EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production member_expr -> member_expr TOBRACE expr TCBRACE

State 319:
## Known stack suffix:
## member_expr TOBRA
## LR(1) items:
member_expr -> member_expr TOBRA . dim_offset TCBRA [ T_XOR_EQUAL T_SR_EQUAL T_SR T_SL_EQUAL T_SL T_ROCKET T_PLUS_EQUAL T_OR_EQUAL T_OBJECT_OPERATOR T_MUL_EQUAL T_MOD_EQUAL T_MINUS_EQUAL T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DIV_EQUAL T_DEC T_CONCAT_EQUAL T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW T_AND_EQUAL TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TOPAR TOBRACE TOBRA TMUL TMOD TMINUS TGREATER TEQ TDOT TDIV TCPAR TCOMMA TCOLON TCOLCOL TCBRACE TCBRA TAND RDots EOF ]
## Transitions:
-- On T__AT shift to state 1
-- On T_YIELD shift to state 2
-- On T_VARIABLE shift to state 3
-- On T_UNSET_CAST shift to state 5
-- On T_TYPE shift to state 6
-- On T_TRAIT_C shift to state 7
-- On T_SUPER shift to state 8
-- On T_STRING_CAST shift to state 9
-- On T_STATIC shift to state 10
-- On T_START_HEREDOC shift to state 25
-- On T_SELF shift to state 40
-- On T_REQUIRE_ONCE shift to state 41
-- On T_REQUIRE shift to state 42
-- On T_PRINT shift to state 43
-- On T_PARENT shift to state 44
-- On T_OBJECT_CAST shift to state 45
-- On T_NEW shift to state 46
-- On T_NAMESPACE_C shift to state 49
-- On T_NAMESPACE shift to state 50
-- On T_METHOD_C shift to state 58
-- On T_METAVAR shift to state 17
-- On T_LNUMBER shift to state 59
-- On T_LIST shift to state 69
-- On T_LINE shift to state 60
-- On T_LAMBDA_OPAR shift to state 73
-- On T_ISSET shift to state 133
-- On T_INT_CAST shift to state 135
-- On T_INSTANCEOF shift to state 52
-- On T_INCLUDE_ONCE shift to state 136
-- On T_INCLUDE shift to state 137
-- On T_INC shift to state 138
-- On T_IDENT shift to state 18
-- On T_FUNC_C shift to state 61
-- On T_FUNCTION shift to state 139
-- On T_FILE shift to state 62
-- On T_EXIT shift to state 160
-- On T_EVAL shift to state 162
-- On T_ENUM shift to state 19
-- On T_EMPTY shift to state 164
-- On T_ELLIPSIS shift to state 308
-- On T_DOUBLE_CAST shift to state 168
-- On T_DNUMBER shift to state 63
-- On T_DIR shift to state 64
-- On T_DEC shift to state 169
-- On T_CONSTANT_ENCAPSED_STRING shift to state 65
-- On T_CLONE shift to state 170
-- On T_CLASS_C shift to state 66
-- On T_BOOL_CAST shift to state 171
-- On T_AWAIT shift to state 172
-- On T_ASYNC shift to state 173
-- On T_ARRAY_CAST shift to state 200
-- On T_ARRAY shift to state 201
-- On TTILDE shift to state 204
-- On TPLUS shift to state 205
-- On TOPAR shift to state 206
-- On TOBRA shift to state 209
-- On TMINUS shift to state 210
-- On TGUIL shift to state 211
-- On TDOLLARDOLLAR shift to state 213
-- On TDOLLAR shift to state 214
-- On TBANG shift to state 216
-- On TBACKQUOTE shift to state 217
-- On TANTISLASH shift to state 85
-- On LDots shift to state 222
-- On simple_expr shift to state 223
-- On qualified_name shift to state 94
-- On qualified_class_name shift to state 225
-- On primary_expr shift to state 226
-- On option(expr) shift to state 309
-- On new_expr shift to state 227
-- On namespace_name shift to state 102
-- On member_expr shift to state 228
-- On lambda_expr shift to state 231
-- On ident_in_name shift to state 57
-- On ident shift to state 56
-- On expr shift to state 310
-- On dim_offset shift to state 320
-- On constant shift to state 239
-- On call_expr shift to state 240
## Reductions:
-- On TCBRA
--   reduce production option(expr) ->

State 320:
## Known stack suffix:
## member_expr TOBRA dim_offset
## LR(1) items:
member_expr -> member_expr TOBRA dim_offset . TCBRA [ T_XOR_EQUAL T_SR_EQUAL T_SR T_SL_EQUAL T_SL T_ROCKET T_PLUS_EQUAL T_OR_EQUAL T_OBJECT_OPERATOR T_MUL_EQUAL T_MOD_EQUAL T_MINUS_EQUAL T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DIV_EQUAL T_DEC T_CONCAT_EQUAL T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW T_AND_EQUAL TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TOPAR TOBRACE TOBRA TMUL TMOD TMINUS TGREATER TEQ TDOT TDIV TCPAR TCOMMA TCOLON TCOLCOL TCBRACE TCBRA TAND RDots EOF ]
## Transitions:
-- On TCBRA shift to state 321
## Reductions:

State 321:
## Known stack suffix:
## member_expr TOBRA dim_offset TCBRA
## LR(1) items:
member_expr -> member_expr TOBRA dim_offset TCBRA . [ T_XOR_EQUAL T_SR_EQUAL T_SR T_SL_EQUAL T_SL T_ROCKET T_PLUS_EQUAL T_OR_EQUAL T_OBJECT_OPERATOR T_MUL_EQUAL T_MOD_EQUAL T_MINUS_EQUAL T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DIV_EQUAL T_DEC T_CONCAT_EQUAL T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW T_AND_EQUAL TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TOPAR TOBRACE TOBRA TMUL TMOD TMINUS TGREATER TEQ TDOT TDIV TCPAR TCOMMA TCOLON TCOLCOL TCBRACE TCBRA TAND RDots EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production member_expr -> member_expr TOBRA dim_offset TCBRA

State 322:
## Known stack suffix:
## member_expr TCOLCOL
## LR(1) items:
member_expr -> member_expr TCOLCOL . primary_expr [ T_XOR_EQUAL T_SR_EQUAL T_SR T_SL_EQUAL T_SL T_ROCKET T_PLUS_EQUAL T_OR_EQUAL T_OBJECT_OPERATOR T_MUL_EQUAL T_MOD_EQUAL T_MINUS_EQUAL T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DIV_EQUAL T_DEC T_CONCAT_EQUAL T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW T_AND_EQUAL TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TOPAR TOBRACE TOBRA TMUL TMOD TMINUS TGREATER TEQ TDOT TDIV TCPAR TCOMMA TCOLON TCOLCOL TCBRACE TCBRA TAND RDots EOF ]
member_expr -> member_expr TCOLCOL . T_CLASS [ T_XOR_EQUAL T_SR_EQUAL T_SR T_SL_EQUAL T_SL T_ROCKET T_PLUS_EQUAL T_OR_EQUAL T_OBJECT_OPERATOR T_MUL_EQUAL T_MOD_EQUAL T_MINUS_EQUAL T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DIV_EQUAL T_DEC T_CONCAT_EQUAL T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW T_AND_EQUAL TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TOPAR TOBRACE TOBRA TMUL TMOD TMINUS TGREATER TEQ TDOT TDIV TCPAR TCOMMA TCOLON TCOLCOL TCBRACE TCBRA TAND RDots EOF ]
## Transitions:
-- On T_VARIABLE shift to state 47
-- On T_TYPE shift to state 6
-- On T_TRAIT_C shift to state 7
-- On T_SUPER shift to state 8
-- On T_STATIC shift to state 48
-- On T_START_HEREDOC shift to state 25
-- On T_SELF shift to state 40
-- On T_PARENT shift to state 44
-- On T_NAMESPACE_C shift to state 49
-- On T_NAMESPACE shift to state 50
-- On T_METHOD_C shift to state 58
-- On T_METAVAR shift to state 17
-- On T_LNUMBER shift to state 59
-- On T_LINE shift to state 60
-- On T_INSTANCEOF shift to state 52
-- On T_IDENT shift to state 18
-- On T_FUNC_C shift to state 61
-- On T_FILE shift to state 62
-- On T_ENUM shift to state 19
-- On T_DNUMBER shift to state 63
-- On T_DIR shift to state 64
-- On T_CONSTANT_ENCAPSED_STRING shift to state 65
-- On T_CLASS_C shift to state 66
-- On T_CLASS shift to state 323
-- On T_ARRAY shift to state 201
-- On TOPAR shift to state 206
-- On TOBRA shift to state 209
-- On TGUIL shift to state 211
-- On TDOLLARDOLLAR shift to state 213
-- On TDOLLAR shift to state 214
-- On TBACKQUOTE shift to state 217
-- On TANTISLASH shift to state 85
-- On LDots shift to state 222
-- On qualified_name shift to state 94
-- On qualified_class_name shift to state 225
-- On primary_expr shift to state 324
-- On namespace_name shift to state 102
-- On ident_in_name shift to state 57
-- On ident shift to state 56
-- On constant shift to state 239
## Reductions:

State 323:
## Known stack suffix:
## member_expr TCOLCOL T_CLASS
## LR(1) items:
member_expr -> member_expr TCOLCOL T_CLASS . [ T_XOR_EQUAL T_SR_EQUAL T_SR T_SL_EQUAL T_SL T_ROCKET T_PLUS_EQUAL T_OR_EQUAL T_OBJECT_OPERATOR T_MUL_EQUAL T_MOD_EQUAL T_MINUS_EQUAL T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DIV_EQUAL T_DEC T_CONCAT_EQUAL T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW T_AND_EQUAL TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TOPAR TOBRACE TOBRA TMUL TMOD TMINUS TGREATER TEQ TDOT TDIV TCPAR TCOMMA TCOLON TCOLCOL TCBRACE TCBRA TAND RDots EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production member_expr -> member_expr TCOLCOL T_CLASS

State 324:
## Known stack suffix:
## member_expr TCOLCOL primary_expr
## LR(1) items:
member_expr -> member_expr TCOLCOL primary_expr . [ T_XOR_EQUAL T_SR_EQUAL T_SR T_SL_EQUAL T_SL T_ROCKET T_PLUS_EQUAL T_OR_EQUAL T_OBJECT_OPERATOR T_MUL_EQUAL T_MOD_EQUAL T_MINUS_EQUAL T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DIV_EQUAL T_DEC T_CONCAT_EQUAL T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW T_AND_EQUAL TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TOPAR TOBRACE TOBRA TMUL TMOD TMINUS TGREATER TEQ TDOT TDIV TCPAR TCOMMA TCOLON TCOLCOL TCBRACE TCBRA TAND RDots EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production member_expr -> member_expr TCOLCOL primary_expr

State 325:
## Known stack suffix:
## member_expr arguments
## LR(1) items:
call_expr -> member_expr arguments . [ T_XOR_EQUAL T_SR_EQUAL T_SR T_SL_EQUAL T_SL T_ROCKET T_PLUS_EQUAL T_OR_EQUAL T_OBJECT_OPERATOR T_MUL_EQUAL T_MOD_EQUAL T_MINUS_EQUAL T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DIV_EQUAL T_DEC T_CONCAT_EQUAL T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW T_AND_EQUAL TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TOPAR TOBRACE TOBRA TMUL TMOD TMINUS TGREATER TEQ TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production call_expr -> member_expr arguments

State 326:
## Known stack suffix:
## simple_expr T_XOR_EQUAL expr
## LR(1) items:
expr -> simple_expr T_XOR_EQUAL expr . [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_INC [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_DEC [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_BOOLEAN_OR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_BOOLEAN_AND expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_LOGICAL_OR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_LOGICAL_AND expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_LOGICAL_XOR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TPLUS expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TMINUS expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TMUL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TDIV expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TMOD expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TPOW expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TAND expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TOR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TXOR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_SL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_SR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TDOT expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_IDENTICAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_NOT_IDENTICAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_NOT_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TSMALLER expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_SMALLER_OR_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TGREATER expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_GREATER_OR_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_ROCKET expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TQUESTION expr TCOLON expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TQUESTION TCOLON expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TQUESTION TQUESTION expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_INSTANCEOF expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
## Transitions:
-- On T_SR shift to state 233
-- On T_SL shift to state 244
-- On T_ROCKET shift to state 260
-- On T_IS_SMALLER_OR_EQUAL shift to state 262
-- On T_IS_NOT_IDENTICAL shift to state 274
-- On T_IS_NOT_EQUAL shift to state 276
-- On T_IS_IDENTICAL shift to state 278
-- On T_IS_GREATER_OR_EQUAL shift to state 264
-- On T_IS_EQUAL shift to state 280
-- On T_INSTANCEOF shift to state 235
-- On T_INC shift to state 237
-- On T_DEC shift to state 238
-- On T_BOOLEAN_OR shift to state 282
-- On T_BOOLEAN_AND shift to state 284
-- On TXOR shift to state 286
-- On TSMALLER shift to state 266
-- On TQUESTION shift to state 292
-- On TPOW shift to state 246
-- On TPLUS shift to state 248
-- On TOR shift to state 290
-- On TMUL shift to state 250
-- On TMOD shift to state 252
-- On TMINUS shift to state 256
-- On TGREATER shift to state 268
-- On TDOT shift to state 258
-- On TDIV shift to state 254
-- On TAND shift to state 288
## Reductions:
-- On T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_CLOSE_TAG_OF_ECHO T_AWAIT T_AS T_ARROW TSEMICOLON TCPAR TCOMMA TCOLON TCBRACE TCBRA RDots EOF
--   reduce production expr -> simple_expr T_XOR_EQUAL expr

State 327:
## Known stack suffix:
## simple_expr T_SR_EQUAL
## LR(1) items:
expr -> simple_expr T_SR_EQUAL . expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
## Transitions:
-- On T__AT shift to state 1
-- On T_YIELD shift to state 2
-- On T_VARIABLE shift to state 3
-- On T_UNSET_CAST shift to state 5
-- On T_TYPE shift to state 6
-- On T_TRAIT_C shift to state 7
-- On T_SUPER shift to state 8
-- On T_STRING_CAST shift to state 9
-- On T_STATIC shift to state 10
-- On T_START_HEREDOC shift to state 25
-- On T_SELF shift to state 40
-- On T_REQUIRE_ONCE shift to state 41
-- On T_REQUIRE shift to state 42
-- On T_PRINT shift to state 43
-- On T_PARENT shift to state 44
-- On T_OBJECT_CAST shift to state 45
-- On T_NEW shift to state 46
-- On T_NAMESPACE_C shift to state 49
-- On T_NAMESPACE shift to state 50
-- On T_METHOD_C shift to state 58
-- On T_METAVAR shift to state 17
-- On T_LNUMBER shift to state 59
-- On T_LIST shift to state 69
-- On T_LINE shift to state 60
-- On T_LAMBDA_OPAR shift to state 73
-- On T_ISSET shift to state 133
-- On T_INT_CAST shift to state 135
-- On T_INSTANCEOF shift to state 52
-- On T_INCLUDE_ONCE shift to state 136
-- On T_INCLUDE shift to state 137
-- On T_INC shift to state 138
-- On T_IDENT shift to state 18
-- On T_FUNC_C shift to state 61
-- On T_FUNCTION shift to state 139
-- On T_FILE shift to state 62
-- On T_EXIT shift to state 160
-- On T_EVAL shift to state 162
-- On T_ENUM shift to state 19
-- On T_EMPTY shift to state 164
-- On T_DOUBLE_CAST shift to state 168
-- On T_DNUMBER shift to state 63
-- On T_DIR shift to state 64
-- On T_DEC shift to state 169
-- On T_CONSTANT_ENCAPSED_STRING shift to state 65
-- On T_CLONE shift to state 170
-- On T_CLASS_C shift to state 66
-- On T_BOOL_CAST shift to state 171
-- On T_AWAIT shift to state 172
-- On T_ASYNC shift to state 173
-- On T_ARRAY_CAST shift to state 200
-- On T_ARRAY shift to state 201
-- On TTILDE shift to state 204
-- On TPLUS shift to state 205
-- On TOPAR shift to state 206
-- On TOBRA shift to state 209
-- On TMINUS shift to state 210
-- On TGUIL shift to state 211
-- On TDOLLARDOLLAR shift to state 213
-- On TDOLLAR shift to state 214
-- On TBANG shift to state 216
-- On TBACKQUOTE shift to state 217
-- On TANTISLASH shift to state 85
-- On LDots shift to state 222
-- On simple_expr shift to state 223
-- On qualified_name shift to state 94
-- On qualified_class_name shift to state 225
-- On primary_expr shift to state 226
-- On new_expr shift to state 227
-- On namespace_name shift to state 102
-- On member_expr shift to state 228
-- On lambda_expr shift to state 231
-- On ident_in_name shift to state 57
-- On ident shift to state 56
-- On expr shift to state 328
-- On constant shift to state 239
-- On call_expr shift to state 240
## Reductions:

State 328:
## Known stack suffix:
## simple_expr T_SR_EQUAL expr
## LR(1) items:
expr -> simple_expr T_SR_EQUAL expr . [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_INC [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_DEC [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_BOOLEAN_OR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_BOOLEAN_AND expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_LOGICAL_OR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_LOGICAL_AND expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_LOGICAL_XOR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TPLUS expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TMINUS expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TMUL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TDIV expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TMOD expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TPOW expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TAND expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TOR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TXOR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_SL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_SR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TDOT expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_IDENTICAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_NOT_IDENTICAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_NOT_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TSMALLER expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_SMALLER_OR_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TGREATER expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_GREATER_OR_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_ROCKET expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TQUESTION expr TCOLON expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TQUESTION TCOLON expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TQUESTION TQUESTION expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_INSTANCEOF expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
## Transitions:
-- On T_SR shift to state 233
-- On T_SL shift to state 244
-- On T_ROCKET shift to state 260
-- On T_IS_SMALLER_OR_EQUAL shift to state 262
-- On T_IS_NOT_IDENTICAL shift to state 274
-- On T_IS_NOT_EQUAL shift to state 276
-- On T_IS_IDENTICAL shift to state 278
-- On T_IS_GREATER_OR_EQUAL shift to state 264
-- On T_IS_EQUAL shift to state 280
-- On T_INSTANCEOF shift to state 235
-- On T_INC shift to state 237
-- On T_DEC shift to state 238
-- On T_BOOLEAN_OR shift to state 282
-- On T_BOOLEAN_AND shift to state 284
-- On TXOR shift to state 286
-- On TSMALLER shift to state 266
-- On TQUESTION shift to state 292
-- On TPOW shift to state 246
-- On TPLUS shift to state 248
-- On TOR shift to state 290
-- On TMUL shift to state 250
-- On TMOD shift to state 252
-- On TMINUS shift to state 256
-- On TGREATER shift to state 268
-- On TDOT shift to state 258
-- On TDIV shift to state 254
-- On TAND shift to state 288
## Reductions:
-- On T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_CLOSE_TAG_OF_ECHO T_AWAIT T_AS T_ARROW TSEMICOLON TCPAR TCOMMA TCOLON TCBRACE TCBRA RDots EOF
--   reduce production expr -> simple_expr T_SR_EQUAL expr

State 329:
## Known stack suffix:
## simple_expr T_SL_EQUAL
## LR(1) items:
expr -> simple_expr T_SL_EQUAL . expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
## Transitions:
-- On T__AT shift to state 1
-- On T_YIELD shift to state 2
-- On T_VARIABLE shift to state 3
-- On T_UNSET_CAST shift to state 5
-- On T_TYPE shift to state 6
-- On T_TRAIT_C shift to state 7
-- On T_SUPER shift to state 8
-- On T_STRING_CAST shift to state 9
-- On T_STATIC shift to state 10
-- On T_START_HEREDOC shift to state 25
-- On T_SELF shift to state 40
-- On T_REQUIRE_ONCE shift to state 41
-- On T_REQUIRE shift to state 42
-- On T_PRINT shift to state 43
-- On T_PARENT shift to state 44
-- On T_OBJECT_CAST shift to state 45
-- On T_NEW shift to state 46
-- On T_NAMESPACE_C shift to state 49
-- On T_NAMESPACE shift to state 50
-- On T_METHOD_C shift to state 58
-- On T_METAVAR shift to state 17
-- On T_LNUMBER shift to state 59
-- On T_LIST shift to state 69
-- On T_LINE shift to state 60
-- On T_LAMBDA_OPAR shift to state 73
-- On T_ISSET shift to state 133
-- On T_INT_CAST shift to state 135
-- On T_INSTANCEOF shift to state 52
-- On T_INCLUDE_ONCE shift to state 136
-- On T_INCLUDE shift to state 137
-- On T_INC shift to state 138
-- On T_IDENT shift to state 18
-- On T_FUNC_C shift to state 61
-- On T_FUNCTION shift to state 139
-- On T_FILE shift to state 62
-- On T_EXIT shift to state 160
-- On T_EVAL shift to state 162
-- On T_ENUM shift to state 19
-- On T_EMPTY shift to state 164
-- On T_DOUBLE_CAST shift to state 168
-- On T_DNUMBER shift to state 63
-- On T_DIR shift to state 64
-- On T_DEC shift to state 169
-- On T_CONSTANT_ENCAPSED_STRING shift to state 65
-- On T_CLONE shift to state 170
-- On T_CLASS_C shift to state 66
-- On T_BOOL_CAST shift to state 171
-- On T_AWAIT shift to state 172
-- On T_ASYNC shift to state 173
-- On T_ARRAY_CAST shift to state 200
-- On T_ARRAY shift to state 201
-- On TTILDE shift to state 204
-- On TPLUS shift to state 205
-- On TOPAR shift to state 206
-- On TOBRA shift to state 209
-- On TMINUS shift to state 210
-- On TGUIL shift to state 211
-- On TDOLLARDOLLAR shift to state 213
-- On TDOLLAR shift to state 214
-- On TBANG shift to state 216
-- On TBACKQUOTE shift to state 217
-- On TANTISLASH shift to state 85
-- On LDots shift to state 222
-- On simple_expr shift to state 223
-- On qualified_name shift to state 94
-- On qualified_class_name shift to state 225
-- On primary_expr shift to state 226
-- On new_expr shift to state 227
-- On namespace_name shift to state 102
-- On member_expr shift to state 228
-- On lambda_expr shift to state 231
-- On ident_in_name shift to state 57
-- On ident shift to state 56
-- On expr shift to state 330
-- On constant shift to state 239
-- On call_expr shift to state 240
## Reductions:

State 330:
## Known stack suffix:
## simple_expr T_SL_EQUAL expr
## LR(1) items:
expr -> simple_expr T_SL_EQUAL expr . [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_INC [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_DEC [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_BOOLEAN_OR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_BOOLEAN_AND expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_LOGICAL_OR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_LOGICAL_AND expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_LOGICAL_XOR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TPLUS expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TMINUS expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TMUL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TDIV expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TMOD expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TPOW expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TAND expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TOR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TXOR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_SL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_SR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TDOT expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_IDENTICAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_NOT_IDENTICAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_NOT_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TSMALLER expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_SMALLER_OR_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TGREATER expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_GREATER_OR_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_ROCKET expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TQUESTION expr TCOLON expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TQUESTION TCOLON expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TQUESTION TQUESTION expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_INSTANCEOF expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
## Transitions:
-- On T_SR shift to state 233
-- On T_SL shift to state 244
-- On T_ROCKET shift to state 260
-- On T_IS_SMALLER_OR_EQUAL shift to state 262
-- On T_IS_NOT_IDENTICAL shift to state 274
-- On T_IS_NOT_EQUAL shift to state 276
-- On T_IS_IDENTICAL shift to state 278
-- On T_IS_GREATER_OR_EQUAL shift to state 264
-- On T_IS_EQUAL shift to state 280
-- On T_INSTANCEOF shift to state 235
-- On T_INC shift to state 237
-- On T_DEC shift to state 238
-- On T_BOOLEAN_OR shift to state 282
-- On T_BOOLEAN_AND shift to state 284
-- On TXOR shift to state 286
-- On TSMALLER shift to state 266
-- On TQUESTION shift to state 292
-- On TPOW shift to state 246
-- On TPLUS shift to state 248
-- On TOR shift to state 290
-- On TMUL shift to state 250
-- On TMOD shift to state 252
-- On TMINUS shift to state 256
-- On TGREATER shift to state 268
-- On TDOT shift to state 258
-- On TDIV shift to state 254
-- On TAND shift to state 288
## Reductions:
-- On T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_CLOSE_TAG_OF_ECHO T_AWAIT T_AS T_ARROW TSEMICOLON TCPAR TCOMMA TCOLON TCBRACE TCBRA RDots EOF
--   reduce production expr -> simple_expr T_SL_EQUAL expr

State 331:
## Known stack suffix:
## simple_expr T_PLUS_EQUAL
## LR(1) items:
expr -> simple_expr T_PLUS_EQUAL . expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
## Transitions:
-- On T__AT shift to state 1
-- On T_YIELD shift to state 2
-- On T_VARIABLE shift to state 3
-- On T_UNSET_CAST shift to state 5
-- On T_TYPE shift to state 6
-- On T_TRAIT_C shift to state 7
-- On T_SUPER shift to state 8
-- On T_STRING_CAST shift to state 9
-- On T_STATIC shift to state 10
-- On T_START_HEREDOC shift to state 25
-- On T_SELF shift to state 40
-- On T_REQUIRE_ONCE shift to state 41
-- On T_REQUIRE shift to state 42
-- On T_PRINT shift to state 43
-- On T_PARENT shift to state 44
-- On T_OBJECT_CAST shift to state 45
-- On T_NEW shift to state 46
-- On T_NAMESPACE_C shift to state 49
-- On T_NAMESPACE shift to state 50
-- On T_METHOD_C shift to state 58
-- On T_METAVAR shift to state 17
-- On T_LNUMBER shift to state 59
-- On T_LIST shift to state 69
-- On T_LINE shift to state 60
-- On T_LAMBDA_OPAR shift to state 73
-- On T_ISSET shift to state 133
-- On T_INT_CAST shift to state 135
-- On T_INSTANCEOF shift to state 52
-- On T_INCLUDE_ONCE shift to state 136
-- On T_INCLUDE shift to state 137
-- On T_INC shift to state 138
-- On T_IDENT shift to state 18
-- On T_FUNC_C shift to state 61
-- On T_FUNCTION shift to state 139
-- On T_FILE shift to state 62
-- On T_EXIT shift to state 160
-- On T_EVAL shift to state 162
-- On T_ENUM shift to state 19
-- On T_EMPTY shift to state 164
-- On T_DOUBLE_CAST shift to state 168
-- On T_DNUMBER shift to state 63
-- On T_DIR shift to state 64
-- On T_DEC shift to state 169
-- On T_CONSTANT_ENCAPSED_STRING shift to state 65
-- On T_CLONE shift to state 170
-- On T_CLASS_C shift to state 66
-- On T_BOOL_CAST shift to state 171
-- On T_AWAIT shift to state 172
-- On T_ASYNC shift to state 173
-- On T_ARRAY_CAST shift to state 200
-- On T_ARRAY shift to state 201
-- On TTILDE shift to state 204
-- On TPLUS shift to state 205
-- On TOPAR shift to state 206
-- On TOBRA shift to state 209
-- On TMINUS shift to state 210
-- On TGUIL shift to state 211
-- On TDOLLARDOLLAR shift to state 213
-- On TDOLLAR shift to state 214
-- On TBANG shift to state 216
-- On TBACKQUOTE shift to state 217
-- On TANTISLASH shift to state 85
-- On LDots shift to state 222
-- On simple_expr shift to state 223
-- On qualified_name shift to state 94
-- On qualified_class_name shift to state 225
-- On primary_expr shift to state 226
-- On new_expr shift to state 227
-- On namespace_name shift to state 102
-- On member_expr shift to state 228
-- On lambda_expr shift to state 231
-- On ident_in_name shift to state 57
-- On ident shift to state 56
-- On expr shift to state 332
-- On constant shift to state 239
-- On call_expr shift to state 240
## Reductions:

State 332:
## Known stack suffix:
## simple_expr T_PLUS_EQUAL expr
## LR(1) items:
expr -> simple_expr T_PLUS_EQUAL expr . [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_INC [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_DEC [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_BOOLEAN_OR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_BOOLEAN_AND expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_LOGICAL_OR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_LOGICAL_AND expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_LOGICAL_XOR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TPLUS expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TMINUS expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TMUL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TDIV expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TMOD expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TPOW expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TAND expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TOR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TXOR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_SL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_SR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TDOT expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_IDENTICAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_NOT_IDENTICAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_NOT_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TSMALLER expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_SMALLER_OR_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TGREATER expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_GREATER_OR_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_ROCKET expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TQUESTION expr TCOLON expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TQUESTION TCOLON expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TQUESTION TQUESTION expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_INSTANCEOF expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
## Transitions:
-- On T_SR shift to state 233
-- On T_SL shift to state 244
-- On T_ROCKET shift to state 260
-- On T_IS_SMALLER_OR_EQUAL shift to state 262
-- On T_IS_NOT_IDENTICAL shift to state 274
-- On T_IS_NOT_EQUAL shift to state 276
-- On T_IS_IDENTICAL shift to state 278
-- On T_IS_GREATER_OR_EQUAL shift to state 264
-- On T_IS_EQUAL shift to state 280
-- On T_INSTANCEOF shift to state 235
-- On T_INC shift to state 237
-- On T_DEC shift to state 238
-- On T_BOOLEAN_OR shift to state 282
-- On T_BOOLEAN_AND shift to state 284
-- On TXOR shift to state 286
-- On TSMALLER shift to state 266
-- On TQUESTION shift to state 292
-- On TPOW shift to state 246
-- On TPLUS shift to state 248
-- On TOR shift to state 290
-- On TMUL shift to state 250
-- On TMOD shift to state 252
-- On TMINUS shift to state 256
-- On TGREATER shift to state 268
-- On TDOT shift to state 258
-- On TDIV shift to state 254
-- On TAND shift to state 288
## Reductions:
-- On T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_CLOSE_TAG_OF_ECHO T_AWAIT T_AS T_ARROW TSEMICOLON TCPAR TCOMMA TCOLON TCBRACE TCBRA RDots EOF
--   reduce production expr -> simple_expr T_PLUS_EQUAL expr

State 333:
## Known stack suffix:
## simple_expr T_OR_EQUAL
## LR(1) items:
expr -> simple_expr T_OR_EQUAL . expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
## Transitions:
-- On T__AT shift to state 1
-- On T_YIELD shift to state 2
-- On T_VARIABLE shift to state 3
-- On T_UNSET_CAST shift to state 5
-- On T_TYPE shift to state 6
-- On T_TRAIT_C shift to state 7
-- On T_SUPER shift to state 8
-- On T_STRING_CAST shift to state 9
-- On T_STATIC shift to state 10
-- On T_START_HEREDOC shift to state 25
-- On T_SELF shift to state 40
-- On T_REQUIRE_ONCE shift to state 41
-- On T_REQUIRE shift to state 42
-- On T_PRINT shift to state 43
-- On T_PARENT shift to state 44
-- On T_OBJECT_CAST shift to state 45
-- On T_NEW shift to state 46
-- On T_NAMESPACE_C shift to state 49
-- On T_NAMESPACE shift to state 50
-- On T_METHOD_C shift to state 58
-- On T_METAVAR shift to state 17
-- On T_LNUMBER shift to state 59
-- On T_LIST shift to state 69
-- On T_LINE shift to state 60
-- On T_LAMBDA_OPAR shift to state 73
-- On T_ISSET shift to state 133
-- On T_INT_CAST shift to state 135
-- On T_INSTANCEOF shift to state 52
-- On T_INCLUDE_ONCE shift to state 136
-- On T_INCLUDE shift to state 137
-- On T_INC shift to state 138
-- On T_IDENT shift to state 18
-- On T_FUNC_C shift to state 61
-- On T_FUNCTION shift to state 139
-- On T_FILE shift to state 62
-- On T_EXIT shift to state 160
-- On T_EVAL shift to state 162
-- On T_ENUM shift to state 19
-- On T_EMPTY shift to state 164
-- On T_DOUBLE_CAST shift to state 168
-- On T_DNUMBER shift to state 63
-- On T_DIR shift to state 64
-- On T_DEC shift to state 169
-- On T_CONSTANT_ENCAPSED_STRING shift to state 65
-- On T_CLONE shift to state 170
-- On T_CLASS_C shift to state 66
-- On T_BOOL_CAST shift to state 171
-- On T_AWAIT shift to state 172
-- On T_ASYNC shift to state 173
-- On T_ARRAY_CAST shift to state 200
-- On T_ARRAY shift to state 201
-- On TTILDE shift to state 204
-- On TPLUS shift to state 205
-- On TOPAR shift to state 206
-- On TOBRA shift to state 209
-- On TMINUS shift to state 210
-- On TGUIL shift to state 211
-- On TDOLLARDOLLAR shift to state 213
-- On TDOLLAR shift to state 214
-- On TBANG shift to state 216
-- On TBACKQUOTE shift to state 217
-- On TANTISLASH shift to state 85
-- On LDots shift to state 222
-- On simple_expr shift to state 223
-- On qualified_name shift to state 94
-- On qualified_class_name shift to state 225
-- On primary_expr shift to state 226
-- On new_expr shift to state 227
-- On namespace_name shift to state 102
-- On member_expr shift to state 228
-- On lambda_expr shift to state 231
-- On ident_in_name shift to state 57
-- On ident shift to state 56
-- On expr shift to state 334
-- On constant shift to state 239
-- On call_expr shift to state 240
## Reductions:

State 334:
## Known stack suffix:
## simple_expr T_OR_EQUAL expr
## LR(1) items:
expr -> simple_expr T_OR_EQUAL expr . [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_INC [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_DEC [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_BOOLEAN_OR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_BOOLEAN_AND expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_LOGICAL_OR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_LOGICAL_AND expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_LOGICAL_XOR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TPLUS expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TMINUS expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TMUL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TDIV expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TMOD expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TPOW expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TAND expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TOR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TXOR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_SL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_SR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TDOT expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_IDENTICAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_NOT_IDENTICAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_NOT_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TSMALLER expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_SMALLER_OR_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TGREATER expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_GREATER_OR_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_ROCKET expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TQUESTION expr TCOLON expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TQUESTION TCOLON expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TQUESTION TQUESTION expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_INSTANCEOF expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
## Transitions:
-- On T_SR shift to state 233
-- On T_SL shift to state 244
-- On T_ROCKET shift to state 260
-- On T_IS_SMALLER_OR_EQUAL shift to state 262
-- On T_IS_NOT_IDENTICAL shift to state 274
-- On T_IS_NOT_EQUAL shift to state 276
-- On T_IS_IDENTICAL shift to state 278
-- On T_IS_GREATER_OR_EQUAL shift to state 264
-- On T_IS_EQUAL shift to state 280
-- On T_INSTANCEOF shift to state 235
-- On T_INC shift to state 237
-- On T_DEC shift to state 238
-- On T_BOOLEAN_OR shift to state 282
-- On T_BOOLEAN_AND shift to state 284
-- On TXOR shift to state 286
-- On TSMALLER shift to state 266
-- On TQUESTION shift to state 292
-- On TPOW shift to state 246
-- On TPLUS shift to state 248
-- On TOR shift to state 290
-- On TMUL shift to state 250
-- On TMOD shift to state 252
-- On TMINUS shift to state 256
-- On TGREATER shift to state 268
-- On TDOT shift to state 258
-- On TDIV shift to state 254
-- On TAND shift to state 288
## Reductions:
-- On T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_CLOSE_TAG_OF_ECHO T_AWAIT T_AS T_ARROW TSEMICOLON TCPAR TCOMMA TCOLON TCBRACE TCBRA RDots EOF
--   reduce production expr -> simple_expr T_OR_EQUAL expr

State 335:
## Known stack suffix:
## simple_expr T_MUL_EQUAL
## LR(1) items:
expr -> simple_expr T_MUL_EQUAL . expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
## Transitions:
-- On T__AT shift to state 1
-- On T_YIELD shift to state 2
-- On T_VARIABLE shift to state 3
-- On T_UNSET_CAST shift to state 5
-- On T_TYPE shift to state 6
-- On T_TRAIT_C shift to state 7
-- On T_SUPER shift to state 8
-- On T_STRING_CAST shift to state 9
-- On T_STATIC shift to state 10
-- On T_START_HEREDOC shift to state 25
-- On T_SELF shift to state 40
-- On T_REQUIRE_ONCE shift to state 41
-- On T_REQUIRE shift to state 42
-- On T_PRINT shift to state 43
-- On T_PARENT shift to state 44
-- On T_OBJECT_CAST shift to state 45
-- On T_NEW shift to state 46
-- On T_NAMESPACE_C shift to state 49
-- On T_NAMESPACE shift to state 50
-- On T_METHOD_C shift to state 58
-- On T_METAVAR shift to state 17
-- On T_LNUMBER shift to state 59
-- On T_LIST shift to state 69
-- On T_LINE shift to state 60
-- On T_LAMBDA_OPAR shift to state 73
-- On T_ISSET shift to state 133
-- On T_INT_CAST shift to state 135
-- On T_INSTANCEOF shift to state 52
-- On T_INCLUDE_ONCE shift to state 136
-- On T_INCLUDE shift to state 137
-- On T_INC shift to state 138
-- On T_IDENT shift to state 18
-- On T_FUNC_C shift to state 61
-- On T_FUNCTION shift to state 139
-- On T_FILE shift to state 62
-- On T_EXIT shift to state 160
-- On T_EVAL shift to state 162
-- On T_ENUM shift to state 19
-- On T_EMPTY shift to state 164
-- On T_DOUBLE_CAST shift to state 168
-- On T_DNUMBER shift to state 63
-- On T_DIR shift to state 64
-- On T_DEC shift to state 169
-- On T_CONSTANT_ENCAPSED_STRING shift to state 65
-- On T_CLONE shift to state 170
-- On T_CLASS_C shift to state 66
-- On T_BOOL_CAST shift to state 171
-- On T_AWAIT shift to state 172
-- On T_ASYNC shift to state 173
-- On T_ARRAY_CAST shift to state 200
-- On T_ARRAY shift to state 201
-- On TTILDE shift to state 204
-- On TPLUS shift to state 205
-- On TOPAR shift to state 206
-- On TOBRA shift to state 209
-- On TMINUS shift to state 210
-- On TGUIL shift to state 211
-- On TDOLLARDOLLAR shift to state 213
-- On TDOLLAR shift to state 214
-- On TBANG shift to state 216
-- On TBACKQUOTE shift to state 217
-- On TANTISLASH shift to state 85
-- On LDots shift to state 222
-- On simple_expr shift to state 223
-- On qualified_name shift to state 94
-- On qualified_class_name shift to state 225
-- On primary_expr shift to state 226
-- On new_expr shift to state 227
-- On namespace_name shift to state 102
-- On member_expr shift to state 228
-- On lambda_expr shift to state 231
-- On ident_in_name shift to state 57
-- On ident shift to state 56
-- On expr shift to state 336
-- On constant shift to state 239
-- On call_expr shift to state 240
## Reductions:

State 336:
## Known stack suffix:
## simple_expr T_MUL_EQUAL expr
## LR(1) items:
expr -> simple_expr T_MUL_EQUAL expr . [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_INC [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_DEC [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_BOOLEAN_OR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_BOOLEAN_AND expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_LOGICAL_OR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_LOGICAL_AND expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_LOGICAL_XOR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TPLUS expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TMINUS expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TMUL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TDIV expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TMOD expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TPOW expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TAND expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TOR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TXOR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_SL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_SR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TDOT expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_IDENTICAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_NOT_IDENTICAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_NOT_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TSMALLER expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_SMALLER_OR_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TGREATER expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_GREATER_OR_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_ROCKET expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TQUESTION expr TCOLON expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TQUESTION TCOLON expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TQUESTION TQUESTION expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_INSTANCEOF expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
## Transitions:
-- On T_SR shift to state 233
-- On T_SL shift to state 244
-- On T_ROCKET shift to state 260
-- On T_IS_SMALLER_OR_EQUAL shift to state 262
-- On T_IS_NOT_IDENTICAL shift to state 274
-- On T_IS_NOT_EQUAL shift to state 276
-- On T_IS_IDENTICAL shift to state 278
-- On T_IS_GREATER_OR_EQUAL shift to state 264
-- On T_IS_EQUAL shift to state 280
-- On T_INSTANCEOF shift to state 235
-- On T_INC shift to state 237
-- On T_DEC shift to state 238
-- On T_BOOLEAN_OR shift to state 282
-- On T_BOOLEAN_AND shift to state 284
-- On TXOR shift to state 286
-- On TSMALLER shift to state 266
-- On TQUESTION shift to state 292
-- On TPOW shift to state 246
-- On TPLUS shift to state 248
-- On TOR shift to state 290
-- On TMUL shift to state 250
-- On TMOD shift to state 252
-- On TMINUS shift to state 256
-- On TGREATER shift to state 268
-- On TDOT shift to state 258
-- On TDIV shift to state 254
-- On TAND shift to state 288
## Reductions:
-- On T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_CLOSE_TAG_OF_ECHO T_AWAIT T_AS T_ARROW TSEMICOLON TCPAR TCOMMA TCOLON TCBRACE TCBRA RDots EOF
--   reduce production expr -> simple_expr T_MUL_EQUAL expr

State 337:
## Known stack suffix:
## simple_expr T_MOD_EQUAL
## LR(1) items:
expr -> simple_expr T_MOD_EQUAL . expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
## Transitions:
-- On T__AT shift to state 1
-- On T_YIELD shift to state 2
-- On T_VARIABLE shift to state 3
-- On T_UNSET_CAST shift to state 5
-- On T_TYPE shift to state 6
-- On T_TRAIT_C shift to state 7
-- On T_SUPER shift to state 8
-- On T_STRING_CAST shift to state 9
-- On T_STATIC shift to state 10
-- On T_START_HEREDOC shift to state 25
-- On T_SELF shift to state 40
-- On T_REQUIRE_ONCE shift to state 41
-- On T_REQUIRE shift to state 42
-- On T_PRINT shift to state 43
-- On T_PARENT shift to state 44
-- On T_OBJECT_CAST shift to state 45
-- On T_NEW shift to state 46
-- On T_NAMESPACE_C shift to state 49
-- On T_NAMESPACE shift to state 50
-- On T_METHOD_C shift to state 58
-- On T_METAVAR shift to state 17
-- On T_LNUMBER shift to state 59
-- On T_LIST shift to state 69
-- On T_LINE shift to state 60
-- On T_LAMBDA_OPAR shift to state 73
-- On T_ISSET shift to state 133
-- On T_INT_CAST shift to state 135
-- On T_INSTANCEOF shift to state 52
-- On T_INCLUDE_ONCE shift to state 136
-- On T_INCLUDE shift to state 137
-- On T_INC shift to state 138
-- On T_IDENT shift to state 18
-- On T_FUNC_C shift to state 61
-- On T_FUNCTION shift to state 139
-- On T_FILE shift to state 62
-- On T_EXIT shift to state 160
-- On T_EVAL shift to state 162
-- On T_ENUM shift to state 19
-- On T_EMPTY shift to state 164
-- On T_DOUBLE_CAST shift to state 168
-- On T_DNUMBER shift to state 63
-- On T_DIR shift to state 64
-- On T_DEC shift to state 169
-- On T_CONSTANT_ENCAPSED_STRING shift to state 65
-- On T_CLONE shift to state 170
-- On T_CLASS_C shift to state 66
-- On T_BOOL_CAST shift to state 171
-- On T_AWAIT shift to state 172
-- On T_ASYNC shift to state 173
-- On T_ARRAY_CAST shift to state 200
-- On T_ARRAY shift to state 201
-- On TTILDE shift to state 204
-- On TPLUS shift to state 205
-- On TOPAR shift to state 206
-- On TOBRA shift to state 209
-- On TMINUS shift to state 210
-- On TGUIL shift to state 211
-- On TDOLLARDOLLAR shift to state 213
-- On TDOLLAR shift to state 214
-- On TBANG shift to state 216
-- On TBACKQUOTE shift to state 217
-- On TANTISLASH shift to state 85
-- On LDots shift to state 222
-- On simple_expr shift to state 223
-- On qualified_name shift to state 94
-- On qualified_class_name shift to state 225
-- On primary_expr shift to state 226
-- On new_expr shift to state 227
-- On namespace_name shift to state 102
-- On member_expr shift to state 228
-- On lambda_expr shift to state 231
-- On ident_in_name shift to state 57
-- On ident shift to state 56
-- On expr shift to state 338
-- On constant shift to state 239
-- On call_expr shift to state 240
## Reductions:

State 338:
## Known stack suffix:
## simple_expr T_MOD_EQUAL expr
## LR(1) items:
expr -> simple_expr T_MOD_EQUAL expr . [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_INC [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_DEC [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_BOOLEAN_OR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_BOOLEAN_AND expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_LOGICAL_OR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_LOGICAL_AND expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_LOGICAL_XOR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TPLUS expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TMINUS expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TMUL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TDIV expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TMOD expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TPOW expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TAND expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TOR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TXOR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_SL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_SR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TDOT expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_IDENTICAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_NOT_IDENTICAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_NOT_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TSMALLER expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_SMALLER_OR_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TGREATER expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_GREATER_OR_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_ROCKET expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TQUESTION expr TCOLON expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TQUESTION TCOLON expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TQUESTION TQUESTION expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_INSTANCEOF expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
## Transitions:
-- On T_SR shift to state 233
-- On T_SL shift to state 244
-- On T_ROCKET shift to state 260
-- On T_IS_SMALLER_OR_EQUAL shift to state 262
-- On T_IS_NOT_IDENTICAL shift to state 274
-- On T_IS_NOT_EQUAL shift to state 276
-- On T_IS_IDENTICAL shift to state 278
-- On T_IS_GREATER_OR_EQUAL shift to state 264
-- On T_IS_EQUAL shift to state 280
-- On T_INSTANCEOF shift to state 235
-- On T_INC shift to state 237
-- On T_DEC shift to state 238
-- On T_BOOLEAN_OR shift to state 282
-- On T_BOOLEAN_AND shift to state 284
-- On TXOR shift to state 286
-- On TSMALLER shift to state 266
-- On TQUESTION shift to state 292
-- On TPOW shift to state 246
-- On TPLUS shift to state 248
-- On TOR shift to state 290
-- On TMUL shift to state 250
-- On TMOD shift to state 252
-- On TMINUS shift to state 256
-- On TGREATER shift to state 268
-- On TDOT shift to state 258
-- On TDIV shift to state 254
-- On TAND shift to state 288
## Reductions:
-- On T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_CLOSE_TAG_OF_ECHO T_AWAIT T_AS T_ARROW TSEMICOLON TCPAR TCOMMA TCOLON TCBRACE TCBRA RDots EOF
--   reduce production expr -> simple_expr T_MOD_EQUAL expr

State 339:
## Known stack suffix:
## simple_expr T_MINUS_EQUAL
## LR(1) items:
expr -> simple_expr T_MINUS_EQUAL . expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
## Transitions:
-- On T__AT shift to state 1
-- On T_YIELD shift to state 2
-- On T_VARIABLE shift to state 3
-- On T_UNSET_CAST shift to state 5
-- On T_TYPE shift to state 6
-- On T_TRAIT_C shift to state 7
-- On T_SUPER shift to state 8
-- On T_STRING_CAST shift to state 9
-- On T_STATIC shift to state 10
-- On T_START_HEREDOC shift to state 25
-- On T_SELF shift to state 40
-- On T_REQUIRE_ONCE shift to state 41
-- On T_REQUIRE shift to state 42
-- On T_PRINT shift to state 43
-- On T_PARENT shift to state 44
-- On T_OBJECT_CAST shift to state 45
-- On T_NEW shift to state 46
-- On T_NAMESPACE_C shift to state 49
-- On T_NAMESPACE shift to state 50
-- On T_METHOD_C shift to state 58
-- On T_METAVAR shift to state 17
-- On T_LNUMBER shift to state 59
-- On T_LIST shift to state 69
-- On T_LINE shift to state 60
-- On T_LAMBDA_OPAR shift to state 73
-- On T_ISSET shift to state 133
-- On T_INT_CAST shift to state 135
-- On T_INSTANCEOF shift to state 52
-- On T_INCLUDE_ONCE shift to state 136
-- On T_INCLUDE shift to state 137
-- On T_INC shift to state 138
-- On T_IDENT shift to state 18
-- On T_FUNC_C shift to state 61
-- On T_FUNCTION shift to state 139
-- On T_FILE shift to state 62
-- On T_EXIT shift to state 160
-- On T_EVAL shift to state 162
-- On T_ENUM shift to state 19
-- On T_EMPTY shift to state 164
-- On T_DOUBLE_CAST shift to state 168
-- On T_DNUMBER shift to state 63
-- On T_DIR shift to state 64
-- On T_DEC shift to state 169
-- On T_CONSTANT_ENCAPSED_STRING shift to state 65
-- On T_CLONE shift to state 170
-- On T_CLASS_C shift to state 66
-- On T_BOOL_CAST shift to state 171
-- On T_AWAIT shift to state 172
-- On T_ASYNC shift to state 173
-- On T_ARRAY_CAST shift to state 200
-- On T_ARRAY shift to state 201
-- On TTILDE shift to state 204
-- On TPLUS shift to state 205
-- On TOPAR shift to state 206
-- On TOBRA shift to state 209
-- On TMINUS shift to state 210
-- On TGUIL shift to state 211
-- On TDOLLARDOLLAR shift to state 213
-- On TDOLLAR shift to state 214
-- On TBANG shift to state 216
-- On TBACKQUOTE shift to state 217
-- On TANTISLASH shift to state 85
-- On LDots shift to state 222
-- On simple_expr shift to state 223
-- On qualified_name shift to state 94
-- On qualified_class_name shift to state 225
-- On primary_expr shift to state 226
-- On new_expr shift to state 227
-- On namespace_name shift to state 102
-- On member_expr shift to state 228
-- On lambda_expr shift to state 231
-- On ident_in_name shift to state 57
-- On ident shift to state 56
-- On expr shift to state 340
-- On constant shift to state 239
-- On call_expr shift to state 240
## Reductions:

State 340:
## Known stack suffix:
## simple_expr T_MINUS_EQUAL expr
## LR(1) items:
expr -> simple_expr T_MINUS_EQUAL expr . [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_INC [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_DEC [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_BOOLEAN_OR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_BOOLEAN_AND expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_LOGICAL_OR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_LOGICAL_AND expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_LOGICAL_XOR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TPLUS expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TMINUS expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TMUL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TDIV expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TMOD expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TPOW expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TAND expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TOR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TXOR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_SL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_SR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TDOT expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_IDENTICAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_NOT_IDENTICAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_NOT_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TSMALLER expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_SMALLER_OR_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TGREATER expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_GREATER_OR_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_ROCKET expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TQUESTION expr TCOLON expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TQUESTION TCOLON expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TQUESTION TQUESTION expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_INSTANCEOF expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
## Transitions:
-- On T_SR shift to state 233
-- On T_SL shift to state 244
-- On T_ROCKET shift to state 260
-- On T_IS_SMALLER_OR_EQUAL shift to state 262
-- On T_IS_NOT_IDENTICAL shift to state 274
-- On T_IS_NOT_EQUAL shift to state 276
-- On T_IS_IDENTICAL shift to state 278
-- On T_IS_GREATER_OR_EQUAL shift to state 264
-- On T_IS_EQUAL shift to state 280
-- On T_INSTANCEOF shift to state 235
-- On T_INC shift to state 237
-- On T_DEC shift to state 238
-- On T_BOOLEAN_OR shift to state 282
-- On T_BOOLEAN_AND shift to state 284
-- On TXOR shift to state 286
-- On TSMALLER shift to state 266
-- On TQUESTION shift to state 292
-- On TPOW shift to state 246
-- On TPLUS shift to state 248
-- On TOR shift to state 290
-- On TMUL shift to state 250
-- On TMOD shift to state 252
-- On TMINUS shift to state 256
-- On TGREATER shift to state 268
-- On TDOT shift to state 258
-- On TDIV shift to state 254
-- On TAND shift to state 288
## Reductions:
-- On T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_CLOSE_TAG_OF_ECHO T_AWAIT T_AS T_ARROW TSEMICOLON TCPAR TCOMMA TCOLON TCBRACE TCBRA RDots EOF
--   reduce production expr -> simple_expr T_MINUS_EQUAL expr

State 341:
## Known stack suffix:
## simple_expr T_DIV_EQUAL
## LR(1) items:
expr -> simple_expr T_DIV_EQUAL . expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
## Transitions:
-- On T__AT shift to state 1
-- On T_YIELD shift to state 2
-- On T_VARIABLE shift to state 3
-- On T_UNSET_CAST shift to state 5
-- On T_TYPE shift to state 6
-- On T_TRAIT_C shift to state 7
-- On T_SUPER shift to state 8
-- On T_STRING_CAST shift to state 9
-- On T_STATIC shift to state 10
-- On T_START_HEREDOC shift to state 25
-- On T_SELF shift to state 40
-- On T_REQUIRE_ONCE shift to state 41
-- On T_REQUIRE shift to state 42
-- On T_PRINT shift to state 43
-- On T_PARENT shift to state 44
-- On T_OBJECT_CAST shift to state 45
-- On T_NEW shift to state 46
-- On T_NAMESPACE_C shift to state 49
-- On T_NAMESPACE shift to state 50
-- On T_METHOD_C shift to state 58
-- On T_METAVAR shift to state 17
-- On T_LNUMBER shift to state 59
-- On T_LIST shift to state 69
-- On T_LINE shift to state 60
-- On T_LAMBDA_OPAR shift to state 73
-- On T_ISSET shift to state 133
-- On T_INT_CAST shift to state 135
-- On T_INSTANCEOF shift to state 52
-- On T_INCLUDE_ONCE shift to state 136
-- On T_INCLUDE shift to state 137
-- On T_INC shift to state 138
-- On T_IDENT shift to state 18
-- On T_FUNC_C shift to state 61
-- On T_FUNCTION shift to state 139
-- On T_FILE shift to state 62
-- On T_EXIT shift to state 160
-- On T_EVAL shift to state 162
-- On T_ENUM shift to state 19
-- On T_EMPTY shift to state 164
-- On T_DOUBLE_CAST shift to state 168
-- On T_DNUMBER shift to state 63
-- On T_DIR shift to state 64
-- On T_DEC shift to state 169
-- On T_CONSTANT_ENCAPSED_STRING shift to state 65
-- On T_CLONE shift to state 170
-- On T_CLASS_C shift to state 66
-- On T_BOOL_CAST shift to state 171
-- On T_AWAIT shift to state 172
-- On T_ASYNC shift to state 173
-- On T_ARRAY_CAST shift to state 200
-- On T_ARRAY shift to state 201
-- On TTILDE shift to state 204
-- On TPLUS shift to state 205
-- On TOPAR shift to state 206
-- On TOBRA shift to state 209
-- On TMINUS shift to state 210
-- On TGUIL shift to state 211
-- On TDOLLARDOLLAR shift to state 213
-- On TDOLLAR shift to state 214
-- On TBANG shift to state 216
-- On TBACKQUOTE shift to state 217
-- On TANTISLASH shift to state 85
-- On LDots shift to state 222
-- On simple_expr shift to state 223
-- On qualified_name shift to state 94
-- On qualified_class_name shift to state 225
-- On primary_expr shift to state 226
-- On new_expr shift to state 227
-- On namespace_name shift to state 102
-- On member_expr shift to state 228
-- On lambda_expr shift to state 231
-- On ident_in_name shift to state 57
-- On ident shift to state 56
-- On expr shift to state 342
-- On constant shift to state 239
-- On call_expr shift to state 240
## Reductions:

State 342:
## Known stack suffix:
## simple_expr T_DIV_EQUAL expr
## LR(1) items:
expr -> simple_expr T_DIV_EQUAL expr . [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_INC [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_DEC [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_BOOLEAN_OR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_BOOLEAN_AND expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_LOGICAL_OR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_LOGICAL_AND expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_LOGICAL_XOR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TPLUS expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TMINUS expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TMUL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TDIV expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TMOD expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TPOW expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TAND expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TOR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TXOR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_SL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_SR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TDOT expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_IDENTICAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_NOT_IDENTICAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_NOT_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TSMALLER expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_SMALLER_OR_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TGREATER expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_GREATER_OR_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_ROCKET expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TQUESTION expr TCOLON expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TQUESTION TCOLON expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TQUESTION TQUESTION expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_INSTANCEOF expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
## Transitions:
-- On T_SR shift to state 233
-- On T_SL shift to state 244
-- On T_ROCKET shift to state 260
-- On T_IS_SMALLER_OR_EQUAL shift to state 262
-- On T_IS_NOT_IDENTICAL shift to state 274
-- On T_IS_NOT_EQUAL shift to state 276
-- On T_IS_IDENTICAL shift to state 278
-- On T_IS_GREATER_OR_EQUAL shift to state 264
-- On T_IS_EQUAL shift to state 280
-- On T_INSTANCEOF shift to state 235
-- On T_INC shift to state 237
-- On T_DEC shift to state 238
-- On T_BOOLEAN_OR shift to state 282
-- On T_BOOLEAN_AND shift to state 284
-- On TXOR shift to state 286
-- On TSMALLER shift to state 266
-- On TQUESTION shift to state 292
-- On TPOW shift to state 246
-- On TPLUS shift to state 248
-- On TOR shift to state 290
-- On TMUL shift to state 250
-- On TMOD shift to state 252
-- On TMINUS shift to state 256
-- On TGREATER shift to state 268
-- On TDOT shift to state 258
-- On TDIV shift to state 254
-- On TAND shift to state 288
## Reductions:
-- On T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_CLOSE_TAG_OF_ECHO T_AWAIT T_AS T_ARROW TSEMICOLON TCPAR TCOMMA TCOLON TCBRACE TCBRA RDots EOF
--   reduce production expr -> simple_expr T_DIV_EQUAL expr

State 343:
## Known stack suffix:
## simple_expr T_CONCAT_EQUAL
## LR(1) items:
expr -> simple_expr T_CONCAT_EQUAL . expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
## Transitions:
-- On T__AT shift to state 1
-- On T_YIELD shift to state 2
-- On T_VARIABLE shift to state 3
-- On T_UNSET_CAST shift to state 5
-- On T_TYPE shift to state 6
-- On T_TRAIT_C shift to state 7
-- On T_SUPER shift to state 8
-- On T_STRING_CAST shift to state 9
-- On T_STATIC shift to state 10
-- On T_START_HEREDOC shift to state 25
-- On T_SELF shift to state 40
-- On T_REQUIRE_ONCE shift to state 41
-- On T_REQUIRE shift to state 42
-- On T_PRINT shift to state 43
-- On T_PARENT shift to state 44
-- On T_OBJECT_CAST shift to state 45
-- On T_NEW shift to state 46
-- On T_NAMESPACE_C shift to state 49
-- On T_NAMESPACE shift to state 50
-- On T_METHOD_C shift to state 58
-- On T_METAVAR shift to state 17
-- On T_LNUMBER shift to state 59
-- On T_LIST shift to state 69
-- On T_LINE shift to state 60
-- On T_LAMBDA_OPAR shift to state 73
-- On T_ISSET shift to state 133
-- On T_INT_CAST shift to state 135
-- On T_INSTANCEOF shift to state 52
-- On T_INCLUDE_ONCE shift to state 136
-- On T_INCLUDE shift to state 137
-- On T_INC shift to state 138
-- On T_IDENT shift to state 18
-- On T_FUNC_C shift to state 61
-- On T_FUNCTION shift to state 139
-- On T_FILE shift to state 62
-- On T_EXIT shift to state 160
-- On T_EVAL shift to state 162
-- On T_ENUM shift to state 19
-- On T_EMPTY shift to state 164
-- On T_DOUBLE_CAST shift to state 168
-- On T_DNUMBER shift to state 63
-- On T_DIR shift to state 64
-- On T_DEC shift to state 169
-- On T_CONSTANT_ENCAPSED_STRING shift to state 65
-- On T_CLONE shift to state 170
-- On T_CLASS_C shift to state 66
-- On T_BOOL_CAST shift to state 171
-- On T_AWAIT shift to state 172
-- On T_ASYNC shift to state 173
-- On T_ARRAY_CAST shift to state 200
-- On T_ARRAY shift to state 201
-- On TTILDE shift to state 204
-- On TPLUS shift to state 205
-- On TOPAR shift to state 206
-- On TOBRA shift to state 209
-- On TMINUS shift to state 210
-- On TGUIL shift to state 211
-- On TDOLLARDOLLAR shift to state 213
-- On TDOLLAR shift to state 214
-- On TBANG shift to state 216
-- On TBACKQUOTE shift to state 217
-- On TANTISLASH shift to state 85
-- On LDots shift to state 222
-- On simple_expr shift to state 223
-- On qualified_name shift to state 94
-- On qualified_class_name shift to state 225
-- On primary_expr shift to state 226
-- On new_expr shift to state 227
-- On namespace_name shift to state 102
-- On member_expr shift to state 228
-- On lambda_expr shift to state 231
-- On ident_in_name shift to state 57
-- On ident shift to state 56
-- On expr shift to state 344
-- On constant shift to state 239
-- On call_expr shift to state 240
## Reductions:

State 344:
## Known stack suffix:
## simple_expr T_CONCAT_EQUAL expr
## LR(1) items:
expr -> simple_expr T_CONCAT_EQUAL expr . [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_INC [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_DEC [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_BOOLEAN_OR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_BOOLEAN_AND expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_LOGICAL_OR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_LOGICAL_AND expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_LOGICAL_XOR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TPLUS expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TMINUS expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TMUL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TDIV expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TMOD expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TPOW expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TAND expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TOR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TXOR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_SL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_SR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TDOT expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_IDENTICAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_NOT_IDENTICAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_NOT_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TSMALLER expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_SMALLER_OR_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TGREATER expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_GREATER_OR_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_ROCKET expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TQUESTION expr TCOLON expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TQUESTION TCOLON expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TQUESTION TQUESTION expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_INSTANCEOF expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
## Transitions:
-- On T_SR shift to state 233
-- On T_SL shift to state 244
-- On T_ROCKET shift to state 260
-- On T_IS_SMALLER_OR_EQUAL shift to state 262
-- On T_IS_NOT_IDENTICAL shift to state 274
-- On T_IS_NOT_EQUAL shift to state 276
-- On T_IS_IDENTICAL shift to state 278
-- On T_IS_GREATER_OR_EQUAL shift to state 264
-- On T_IS_EQUAL shift to state 280
-- On T_INSTANCEOF shift to state 235
-- On T_INC shift to state 237
-- On T_DEC shift to state 238
-- On T_BOOLEAN_OR shift to state 282
-- On T_BOOLEAN_AND shift to state 284
-- On TXOR shift to state 286
-- On TSMALLER shift to state 266
-- On TQUESTION shift to state 292
-- On TPOW shift to state 246
-- On TPLUS shift to state 248
-- On TOR shift to state 290
-- On TMUL shift to state 250
-- On TMOD shift to state 252
-- On TMINUS shift to state 256
-- On TGREATER shift to state 268
-- On TDOT shift to state 258
-- On TDIV shift to state 254
-- On TAND shift to state 288
## Reductions:
-- On T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_CLOSE_TAG_OF_ECHO T_AWAIT T_AS T_ARROW TSEMICOLON TCPAR TCOMMA TCOLON TCBRACE TCBRA RDots EOF
--   reduce production expr -> simple_expr T_CONCAT_EQUAL expr

State 345:
## Known stack suffix:
## simple_expr T_AND_EQUAL
## LR(1) items:
expr -> simple_expr T_AND_EQUAL . expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
## Transitions:
-- On T__AT shift to state 1
-- On T_YIELD shift to state 2
-- On T_VARIABLE shift to state 3
-- On T_UNSET_CAST shift to state 5
-- On T_TYPE shift to state 6
-- On T_TRAIT_C shift to state 7
-- On T_SUPER shift to state 8
-- On T_STRING_CAST shift to state 9
-- On T_STATIC shift to state 10
-- On T_START_HEREDOC shift to state 25
-- On T_SELF shift to state 40
-- On T_REQUIRE_ONCE shift to state 41
-- On T_REQUIRE shift to state 42
-- On T_PRINT shift to state 43
-- On T_PARENT shift to state 44
-- On T_OBJECT_CAST shift to state 45
-- On T_NEW shift to state 46
-- On T_NAMESPACE_C shift to state 49
-- On T_NAMESPACE shift to state 50
-- On T_METHOD_C shift to state 58
-- On T_METAVAR shift to state 17
-- On T_LNUMBER shift to state 59
-- On T_LIST shift to state 69
-- On T_LINE shift to state 60
-- On T_LAMBDA_OPAR shift to state 73
-- On T_ISSET shift to state 133
-- On T_INT_CAST shift to state 135
-- On T_INSTANCEOF shift to state 52
-- On T_INCLUDE_ONCE shift to state 136
-- On T_INCLUDE shift to state 137
-- On T_INC shift to state 138
-- On T_IDENT shift to state 18
-- On T_FUNC_C shift to state 61
-- On T_FUNCTION shift to state 139
-- On T_FILE shift to state 62
-- On T_EXIT shift to state 160
-- On T_EVAL shift to state 162
-- On T_ENUM shift to state 19
-- On T_EMPTY shift to state 164
-- On T_DOUBLE_CAST shift to state 168
-- On T_DNUMBER shift to state 63
-- On T_DIR shift to state 64
-- On T_DEC shift to state 169
-- On T_CONSTANT_ENCAPSED_STRING shift to state 65
-- On T_CLONE shift to state 170
-- On T_CLASS_C shift to state 66
-- On T_BOOL_CAST shift to state 171
-- On T_AWAIT shift to state 172
-- On T_ASYNC shift to state 173
-- On T_ARRAY_CAST shift to state 200
-- On T_ARRAY shift to state 201
-- On TTILDE shift to state 204
-- On TPLUS shift to state 205
-- On TOPAR shift to state 206
-- On TOBRA shift to state 209
-- On TMINUS shift to state 210
-- On TGUIL shift to state 211
-- On TDOLLARDOLLAR shift to state 213
-- On TDOLLAR shift to state 214
-- On TBANG shift to state 216
-- On TBACKQUOTE shift to state 217
-- On TANTISLASH shift to state 85
-- On LDots shift to state 222
-- On simple_expr shift to state 223
-- On qualified_name shift to state 94
-- On qualified_class_name shift to state 225
-- On primary_expr shift to state 226
-- On new_expr shift to state 227
-- On namespace_name shift to state 102
-- On member_expr shift to state 228
-- On lambda_expr shift to state 231
-- On ident_in_name shift to state 57
-- On ident shift to state 56
-- On expr shift to state 346
-- On constant shift to state 239
-- On call_expr shift to state 240
## Reductions:

State 346:
## Known stack suffix:
## simple_expr T_AND_EQUAL expr
## LR(1) items:
expr -> simple_expr T_AND_EQUAL expr . [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_INC [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_DEC [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_BOOLEAN_OR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_BOOLEAN_AND expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_LOGICAL_OR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_LOGICAL_AND expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_LOGICAL_XOR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TPLUS expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TMINUS expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TMUL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TDIV expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TMOD expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TPOW expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TAND expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TOR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TXOR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_SL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_SR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TDOT expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_IDENTICAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_NOT_IDENTICAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_NOT_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TSMALLER expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_SMALLER_OR_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TGREATER expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_GREATER_OR_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_ROCKET expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TQUESTION expr TCOLON expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TQUESTION TCOLON expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TQUESTION TQUESTION expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_INSTANCEOF expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
## Transitions:
-- On T_SR shift to state 233
-- On T_SL shift to state 244
-- On T_ROCKET shift to state 260
-- On T_IS_SMALLER_OR_EQUAL shift to state 262
-- On T_IS_NOT_IDENTICAL shift to state 274
-- On T_IS_NOT_EQUAL shift to state 276
-- On T_IS_IDENTICAL shift to state 278
-- On T_IS_GREATER_OR_EQUAL shift to state 264
-- On T_IS_EQUAL shift to state 280
-- On T_INSTANCEOF shift to state 235
-- On T_INC shift to state 237
-- On T_DEC shift to state 238
-- On T_BOOLEAN_OR shift to state 282
-- On T_BOOLEAN_AND shift to state 284
-- On TXOR shift to state 286
-- On TSMALLER shift to state 266
-- On TQUESTION shift to state 292
-- On TPOW shift to state 246
-- On TPLUS shift to state 248
-- On TOR shift to state 290
-- On TMUL shift to state 250
-- On TMOD shift to state 252
-- On TMINUS shift to state 256
-- On TGREATER shift to state 268
-- On TDOT shift to state 258
-- On TDIV shift to state 254
-- On TAND shift to state 288
## Reductions:
-- On T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_CLOSE_TAG_OF_ECHO T_AWAIT T_AS T_ARROW TSEMICOLON TCPAR TCOMMA TCOLON TCBRACE TCBRA RDots EOF
--   reduce production expr -> simple_expr T_AND_EQUAL expr

State 347:
## Known stack suffix:
## simple_expr TEQ
## LR(1) items:
expr -> simple_expr TEQ . expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> simple_expr TEQ . TAND expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
## Transitions:
-- On T__AT shift to state 1
-- On T_YIELD shift to state 2
-- On T_VARIABLE shift to state 3
-- On T_UNSET_CAST shift to state 5
-- On T_TYPE shift to state 6
-- On T_TRAIT_C shift to state 7
-- On T_SUPER shift to state 8
-- On T_STRING_CAST shift to state 9
-- On T_STATIC shift to state 10
-- On T_START_HEREDOC shift to state 25
-- On T_SELF shift to state 40
-- On T_REQUIRE_ONCE shift to state 41
-- On T_REQUIRE shift to state 42
-- On T_PRINT shift to state 43
-- On T_PARENT shift to state 44
-- On T_OBJECT_CAST shift to state 45
-- On T_NEW shift to state 46
-- On T_NAMESPACE_C shift to state 49
-- On T_NAMESPACE shift to state 50
-- On T_METHOD_C shift to state 58
-- On T_METAVAR shift to state 17
-- On T_LNUMBER shift to state 59
-- On T_LIST shift to state 69
-- On T_LINE shift to state 60
-- On T_LAMBDA_OPAR shift to state 73
-- On T_ISSET shift to state 133
-- On T_INT_CAST shift to state 135
-- On T_INSTANCEOF shift to state 52
-- On T_INCLUDE_ONCE shift to state 136
-- On T_INCLUDE shift to state 137
-- On T_INC shift to state 138
-- On T_IDENT shift to state 18
-- On T_FUNC_C shift to state 61
-- On T_FUNCTION shift to state 139
-- On T_FILE shift to state 62
-- On T_EXIT shift to state 160
-- On T_EVAL shift to state 162
-- On T_ENUM shift to state 19
-- On T_EMPTY shift to state 164
-- On T_DOUBLE_CAST shift to state 168
-- On T_DNUMBER shift to state 63
-- On T_DIR shift to state 64
-- On T_DEC shift to state 169
-- On T_CONSTANT_ENCAPSED_STRING shift to state 65
-- On T_CLONE shift to state 170
-- On T_CLASS_C shift to state 66
-- On T_BOOL_CAST shift to state 171
-- On T_AWAIT shift to state 172
-- On T_ASYNC shift to state 173
-- On T_ARRAY_CAST shift to state 200
-- On T_ARRAY shift to state 201
-- On TTILDE shift to state 204
-- On TPLUS shift to state 205
-- On TOPAR shift to state 206
-- On TOBRA shift to state 209
-- On TMINUS shift to state 210
-- On TGUIL shift to state 211
-- On TDOLLARDOLLAR shift to state 213
-- On TDOLLAR shift to state 214
-- On TBANG shift to state 216
-- On TBACKQUOTE shift to state 217
-- On TANTISLASH shift to state 85
-- On TAND shift to state 348
-- On LDots shift to state 222
-- On simple_expr shift to state 223
-- On qualified_name shift to state 94
-- On qualified_class_name shift to state 225
-- On primary_expr shift to state 226
-- On new_expr shift to state 227
-- On namespace_name shift to state 102
-- On member_expr shift to state 228
-- On lambda_expr shift to state 231
-- On ident_in_name shift to state 57
-- On ident shift to state 56
-- On expr shift to state 350
-- On constant shift to state 239
-- On call_expr shift to state 240
## Reductions:

State 348:
## Known stack suffix:
## simple_expr TEQ TAND
## LR(1) items:
expr -> simple_expr TEQ TAND . expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
## Transitions:
-- On T__AT shift to state 1
-- On T_YIELD shift to state 2
-- On T_VARIABLE shift to state 3
-- On T_UNSET_CAST shift to state 5
-- On T_TYPE shift to state 6
-- On T_TRAIT_C shift to state 7
-- On T_SUPER shift to state 8
-- On T_STRING_CAST shift to state 9
-- On T_STATIC shift to state 10
-- On T_START_HEREDOC shift to state 25
-- On T_SELF shift to state 40
-- On T_REQUIRE_ONCE shift to state 41
-- On T_REQUIRE shift to state 42
-- On T_PRINT shift to state 43
-- On T_PARENT shift to state 44
-- On T_OBJECT_CAST shift to state 45
-- On T_NEW shift to state 46
-- On T_NAMESPACE_C shift to state 49
-- On T_NAMESPACE shift to state 50
-- On T_METHOD_C shift to state 58
-- On T_METAVAR shift to state 17
-- On T_LNUMBER shift to state 59
-- On T_LIST shift to state 69
-- On T_LINE shift to state 60
-- On T_LAMBDA_OPAR shift to state 73
-- On T_ISSET shift to state 133
-- On T_INT_CAST shift to state 135
-- On T_INSTANCEOF shift to state 52
-- On T_INCLUDE_ONCE shift to state 136
-- On T_INCLUDE shift to state 137
-- On T_INC shift to state 138
-- On T_IDENT shift to state 18
-- On T_FUNC_C shift to state 61
-- On T_FUNCTION shift to state 139
-- On T_FILE shift to state 62
-- On T_EXIT shift to state 160
-- On T_EVAL shift to state 162
-- On T_ENUM shift to state 19
-- On T_EMPTY shift to state 164
-- On T_DOUBLE_CAST shift to state 168
-- On T_DNUMBER shift to state 63
-- On T_DIR shift to state 64
-- On T_DEC shift to state 169
-- On T_CONSTANT_ENCAPSED_STRING shift to state 65
-- On T_CLONE shift to state 170
-- On T_CLASS_C shift to state 66
-- On T_BOOL_CAST shift to state 171
-- On T_AWAIT shift to state 172
-- On T_ASYNC shift to state 173
-- On T_ARRAY_CAST shift to state 200
-- On T_ARRAY shift to state 201
-- On TTILDE shift to state 204
-- On TPLUS shift to state 205
-- On TOPAR shift to state 206
-- On TOBRA shift to state 209
-- On TMINUS shift to state 210
-- On TGUIL shift to state 211
-- On TDOLLARDOLLAR shift to state 213
-- On TDOLLAR shift to state 214
-- On TBANG shift to state 216
-- On TBACKQUOTE shift to state 217
-- On TANTISLASH shift to state 85
-- On LDots shift to state 222
-- On simple_expr shift to state 223
-- On qualified_name shift to state 94
-- On qualified_class_name shift to state 225
-- On primary_expr shift to state 226
-- On new_expr shift to state 227
-- On namespace_name shift to state 102
-- On member_expr shift to state 228
-- On lambda_expr shift to state 231
-- On ident_in_name shift to state 57
-- On ident shift to state 56
-- On expr shift to state 349
-- On constant shift to state 239
-- On call_expr shift to state 240
## Reductions:

State 349:
## Known stack suffix:
## simple_expr TEQ TAND expr
## LR(1) items:
expr -> simple_expr TEQ TAND expr . [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_INC [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_DEC [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_BOOLEAN_OR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_BOOLEAN_AND expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_LOGICAL_OR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_LOGICAL_AND expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_LOGICAL_XOR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TPLUS expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TMINUS expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TMUL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TDIV expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TMOD expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TPOW expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TAND expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TOR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TXOR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_SL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_SR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TDOT expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_IDENTICAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_NOT_IDENTICAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_NOT_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TSMALLER expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_SMALLER_OR_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TGREATER expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_GREATER_OR_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_ROCKET expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TQUESTION expr TCOLON expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TQUESTION TCOLON expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TQUESTION TQUESTION expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_INSTANCEOF expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
## Transitions:
-- On T_SR shift to state 233
-- On T_SL shift to state 244
-- On T_ROCKET shift to state 260
-- On T_IS_SMALLER_OR_EQUAL shift to state 262
-- On T_IS_NOT_IDENTICAL shift to state 274
-- On T_IS_NOT_EQUAL shift to state 276
-- On T_IS_IDENTICAL shift to state 278
-- On T_IS_GREATER_OR_EQUAL shift to state 264
-- On T_IS_EQUAL shift to state 280
-- On T_INSTANCEOF shift to state 235
-- On T_INC shift to state 237
-- On T_DEC shift to state 238
-- On TSMALLER shift to state 266
-- On TPOW shift to state 246
-- On TPLUS shift to state 248
-- On TMUL shift to state 250
-- On TMOD shift to state 252
-- On TMINUS shift to state 256
-- On TGREATER shift to state 268
-- On TDOT shift to state 258
-- On TDIV shift to state 254
## Reductions:
-- On T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSEMICOLON TQUESTION TOR TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF
--   reduce production expr -> simple_expr TEQ TAND expr

State 350:
## Known stack suffix:
## simple_expr TEQ expr
## LR(1) items:
expr -> simple_expr TEQ expr . [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_INC [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_DEC [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_BOOLEAN_OR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_BOOLEAN_AND expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_LOGICAL_OR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_LOGICAL_AND expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_LOGICAL_XOR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TPLUS expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TMINUS expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TMUL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TDIV expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TMOD expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TPOW expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TAND expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TOR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TXOR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_SL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_SR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TDOT expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_IDENTICAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_NOT_IDENTICAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_NOT_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TSMALLER expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_SMALLER_OR_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TGREATER expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_GREATER_OR_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_ROCKET expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TQUESTION expr TCOLON expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TQUESTION TCOLON expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TQUESTION TQUESTION expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_INSTANCEOF expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
## Transitions:
-- On T_SR shift to state 233
-- On T_SL shift to state 244
-- On T_ROCKET shift to state 260
-- On T_IS_SMALLER_OR_EQUAL shift to state 262
-- On T_IS_NOT_IDENTICAL shift to state 274
-- On T_IS_NOT_EQUAL shift to state 276
-- On T_IS_IDENTICAL shift to state 278
-- On T_IS_GREATER_OR_EQUAL shift to state 264
-- On T_IS_EQUAL shift to state 280
-- On T_INSTANCEOF shift to state 235
-- On T_INC shift to state 237
-- On T_DEC shift to state 238
-- On T_BOOLEAN_OR shift to state 282
-- On T_BOOLEAN_AND shift to state 284
-- On TXOR shift to state 286
-- On TSMALLER shift to state 266
-- On TQUESTION shift to state 292
-- On TPOW shift to state 246
-- On TPLUS shift to state 248
-- On TOR shift to state 290
-- On TMUL shift to state 250
-- On TMOD shift to state 252
-- On TMINUS shift to state 256
-- On TGREATER shift to state 268
-- On TDOT shift to state 258
-- On TDIV shift to state 254
-- On TAND shift to state 288
## Reductions:
-- On T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_CLOSE_TAG_OF_ECHO T_AWAIT T_AS T_ARROW TSEMICOLON TCPAR TCOMMA TCOLON TCBRACE TCBRA RDots EOF
--   reduce production expr -> simple_expr TEQ expr

State 351:
## Known stack suffix:
## LDots expr
## LR(1) items:
expr -> expr . T_INC [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TAND RDots ]
expr -> expr . T_DEC [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TAND RDots ]
expr -> expr . T_BOOLEAN_OR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TAND RDots ]
expr -> expr . T_BOOLEAN_AND expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TAND RDots ]
expr -> expr . T_LOGICAL_OR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TAND RDots ]
expr -> expr . T_LOGICAL_AND expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TAND RDots ]
expr -> expr . T_LOGICAL_XOR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TAND RDots ]
expr -> expr . TPLUS expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TAND RDots ]
expr -> expr . TMINUS expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TAND RDots ]
expr -> expr . TMUL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TAND RDots ]
expr -> expr . TDIV expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TAND RDots ]
expr -> expr . TMOD expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TAND RDots ]
expr -> expr . TPOW expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TAND RDots ]
expr -> expr . TAND expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TAND RDots ]
expr -> expr . TOR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TAND RDots ]
expr -> expr . TXOR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TAND RDots ]
expr -> expr . T_SL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TAND RDots ]
expr -> expr . T_SR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TAND RDots ]
expr -> expr . TDOT expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TAND RDots ]
expr -> expr . T_IS_IDENTICAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TAND RDots ]
expr -> expr . T_IS_NOT_IDENTICAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TAND RDots ]
expr -> expr . T_IS_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TAND RDots ]
expr -> expr . T_IS_NOT_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TAND RDots ]
expr -> expr . TSMALLER expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TAND RDots ]
expr -> expr . T_IS_SMALLER_OR_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TAND RDots ]
expr -> expr . TGREATER expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TAND RDots ]
expr -> expr . T_IS_GREATER_OR_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TAND RDots ]
expr -> expr . T_ROCKET expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TAND RDots ]
expr -> expr . TQUESTION expr TCOLON expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TAND RDots ]
expr -> expr . TQUESTION TCOLON expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TAND RDots ]
expr -> expr . TQUESTION TQUESTION expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TAND RDots ]
expr -> expr . T_INSTANCEOF expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TAND RDots ]
primary_expr -> LDots expr . RDots [ T_XOR_EQUAL T_SR_EQUAL T_SR T_SL_EQUAL T_SL T_ROCKET T_PLUS_EQUAL T_OR_EQUAL T_OBJECT_OPERATOR T_MUL_EQUAL T_MOD_EQUAL T_MINUS_EQUAL T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DIV_EQUAL T_DEC T_CONCAT_EQUAL T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW T_AND_EQUAL TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TOPAR TOBRACE TOBRA TMUL TMOD TMINUS TGREATER TEQ TDOT TDIV TCPAR TCOMMA TCOLON TCOLCOL TCBRACE TCBRA TAND RDots EOF ]
## Transitions:
-- On T_SR shift to state 233
-- On T_SL shift to state 244
-- On T_ROCKET shift to state 260
-- On T_LOGICAL_XOR shift to state 270
-- On T_LOGICAL_OR shift to state 298
-- On T_LOGICAL_AND shift to state 272
-- On T_IS_SMALLER_OR_EQUAL shift to state 262
-- On T_IS_NOT_IDENTICAL shift to state 274
-- On T_IS_NOT_EQUAL shift to state 276
-- On T_IS_IDENTICAL shift to state 278
-- On T_IS_GREATER_OR_EQUAL shift to state 264
-- On T_IS_EQUAL shift to state 280
-- On T_INSTANCEOF shift to state 235
-- On T_INC shift to state 237
-- On T_DEC shift to state 238
-- On T_BOOLEAN_OR shift to state 282
-- On T_BOOLEAN_AND shift to state 284
-- On TXOR shift to state 286
-- On TSMALLER shift to state 266
-- On TQUESTION shift to state 292
-- On TPOW shift to state 246
-- On TPLUS shift to state 248
-- On TOR shift to state 290
-- On TMUL shift to state 250
-- On TMOD shift to state 252
-- On TMINUS shift to state 256
-- On TGREATER shift to state 268
-- On TDOT shift to state 258
-- On TDIV shift to state 254
-- On TAND shift to state 288
-- On RDots shift to state 352
## Reductions:

State 352:
## Known stack suffix:
## LDots expr RDots
## LR(1) items:
primary_expr -> LDots expr RDots . [ T_XOR_EQUAL T_SR_EQUAL T_SR T_SL_EQUAL T_SL T_ROCKET T_PLUS_EQUAL T_OR_EQUAL T_OBJECT_OPERATOR T_MUL_EQUAL T_MOD_EQUAL T_MINUS_EQUAL T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DIV_EQUAL T_DEC T_CONCAT_EQUAL T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW T_AND_EQUAL TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TOPAR TOBRACE TOBRA TMUL TMOD TMINUS TGREATER TEQ TDOT TDIV TCPAR TCOMMA TCOLON TCOLCOL TCBRACE TCBRA TAND RDots EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production primary_expr -> LDots expr RDots

State 353:
## Known stack suffix:
## TBANG expr
## LR(1) items:
expr -> expr . T_INC [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_DEC [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_BOOLEAN_OR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_BOOLEAN_AND expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_LOGICAL_OR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_LOGICAL_AND expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_LOGICAL_XOR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TPLUS expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TMINUS expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TMUL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TDIV expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TMOD expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TPOW expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TAND expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TOR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TXOR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_SL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_SR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TDOT expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_IDENTICAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_NOT_IDENTICAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_NOT_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TSMALLER expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_SMALLER_OR_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TGREATER expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_GREATER_OR_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_ROCKET expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> TBANG expr . [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TQUESTION expr TCOLON expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TQUESTION TCOLON expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TQUESTION TQUESTION expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_INSTANCEOF expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
## Transitions:
-- On T_INSTANCEOF shift to state 235
-- On T_INC shift to state 237
-- On T_DEC shift to state 238
## Reductions:
-- On T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF
--   reduce production expr -> TBANG expr

State 354:
## Known stack suffix:
## TDOLLAR TOBRACE expr
## LR(1) items:
expr -> expr . T_INC [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCBRACE TAND ]
expr -> expr . T_DEC [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCBRACE TAND ]
expr -> expr . T_BOOLEAN_OR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCBRACE TAND ]
expr -> expr . T_BOOLEAN_AND expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCBRACE TAND ]
expr -> expr . T_LOGICAL_OR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCBRACE TAND ]
expr -> expr . T_LOGICAL_AND expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCBRACE TAND ]
expr -> expr . T_LOGICAL_XOR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCBRACE TAND ]
expr -> expr . TPLUS expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCBRACE TAND ]
expr -> expr . TMINUS expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCBRACE TAND ]
expr -> expr . TMUL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCBRACE TAND ]
expr -> expr . TDIV expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCBRACE TAND ]
expr -> expr . TMOD expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCBRACE TAND ]
expr -> expr . TPOW expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCBRACE TAND ]
expr -> expr . TAND expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCBRACE TAND ]
expr -> expr . TOR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCBRACE TAND ]
expr -> expr . TXOR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCBRACE TAND ]
expr -> expr . T_SL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCBRACE TAND ]
expr -> expr . T_SR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCBRACE TAND ]
expr -> expr . TDOT expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCBRACE TAND ]
expr -> expr . T_IS_IDENTICAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCBRACE TAND ]
expr -> expr . T_IS_NOT_IDENTICAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCBRACE TAND ]
expr -> expr . T_IS_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCBRACE TAND ]
expr -> expr . T_IS_NOT_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCBRACE TAND ]
expr -> expr . TSMALLER expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCBRACE TAND ]
expr -> expr . T_IS_SMALLER_OR_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCBRACE TAND ]
expr -> expr . TGREATER expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCBRACE TAND ]
expr -> expr . T_IS_GREATER_OR_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCBRACE TAND ]
expr -> expr . T_ROCKET expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCBRACE TAND ]
expr -> expr . TQUESTION expr TCOLON expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCBRACE TAND ]
expr -> expr . TQUESTION TCOLON expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCBRACE TAND ]
expr -> expr . TQUESTION TQUESTION expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCBRACE TAND ]
expr -> expr . T_INSTANCEOF expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCBRACE TAND ]
primary_expr -> TDOLLAR TOBRACE expr . TCBRACE [ T_XOR_EQUAL T_SR_EQUAL T_SR T_SL_EQUAL T_SL T_ROCKET T_PLUS_EQUAL T_OR_EQUAL T_OBJECT_OPERATOR T_MUL_EQUAL T_MOD_EQUAL T_MINUS_EQUAL T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DIV_EQUAL T_DEC T_CONCAT_EQUAL T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW T_AND_EQUAL TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TOPAR TOBRACE TOBRA TMUL TMOD TMINUS TGREATER TEQ TDOT TDIV TCPAR TCOMMA TCOLON TCOLCOL TCBRACE TCBRA TAND RDots EOF ]
## Transitions:
-- On T_SR shift to state 233
-- On T_SL shift to state 244
-- On T_ROCKET shift to state 260
-- On T_LOGICAL_XOR shift to state 270
-- On T_LOGICAL_OR shift to state 298
-- On T_LOGICAL_AND shift to state 272
-- On T_IS_SMALLER_OR_EQUAL shift to state 262
-- On T_IS_NOT_IDENTICAL shift to state 274
-- On T_IS_NOT_EQUAL shift to state 276
-- On T_IS_IDENTICAL shift to state 278
-- On T_IS_GREATER_OR_EQUAL shift to state 264
-- On T_IS_EQUAL shift to state 280
-- On T_INSTANCEOF shift to state 235
-- On T_INC shift to state 237
-- On T_DEC shift to state 238
-- On T_BOOLEAN_OR shift to state 282
-- On T_BOOLEAN_AND shift to state 284
-- On TXOR shift to state 286
-- On TSMALLER shift to state 266
-- On TQUESTION shift to state 292
-- On TPOW shift to state 246
-- On TPLUS shift to state 248
-- On TOR shift to state 290
-- On TMUL shift to state 250
-- On TMOD shift to state 252
-- On TMINUS shift to state 256
-- On TGREATER shift to state 268
-- On TDOT shift to state 258
-- On TDIV shift to state 254
-- On TCBRACE shift to state 355
-- On TAND shift to state 288
## Reductions:

State 355:
## Known stack suffix:
## TDOLLAR TOBRACE expr TCBRACE
## LR(1) items:
primary_expr -> TDOLLAR TOBRACE expr TCBRACE . [ T_XOR_EQUAL T_SR_EQUAL T_SR T_SL_EQUAL T_SL T_ROCKET T_PLUS_EQUAL T_OR_EQUAL T_OBJECT_OPERATOR T_MUL_EQUAL T_MOD_EQUAL T_MINUS_EQUAL T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DIV_EQUAL T_DEC T_CONCAT_EQUAL T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW T_AND_EQUAL TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TOPAR TOBRACE TOBRA TMUL TMOD TMINUS TGREATER TEQ TDOT TDIV TCPAR TCOMMA TCOLON TCOLCOL TCBRACE TCBRA TAND RDots EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production primary_expr -> TDOLLAR TOBRACE expr TCBRACE

State 356:
## Known stack suffix:
## TDOLLAR primary_expr
## LR(1) items:
primary_expr -> TDOLLAR primary_expr . [ T_XOR_EQUAL T_SR_EQUAL T_SR T_SL_EQUAL T_SL T_ROCKET T_PLUS_EQUAL T_OR_EQUAL T_OBJECT_OPERATOR T_MUL_EQUAL T_MOD_EQUAL T_MINUS_EQUAL T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DIV_EQUAL T_DEC T_CONCAT_EQUAL T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW T_AND_EQUAL TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TOPAR TOBRACE TOBRA TMUL TMOD TMINUS TGREATER TEQ TDOT TDIV TCPAR TCOMMA TCOLON TCOLCOL TCBRACE TCBRA TAND RDots EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production primary_expr -> TDOLLAR primary_expr

State 357:
## Known stack suffix:
## T_CURLY_OPEN expr
## LR(1) items:
encaps -> T_CURLY_OPEN expr . TCBRACE [ T_VARIABLE T_END_HEREDOC T_ENCAPSED_AND_WHITESPACE T_DOLLAR_OPEN_CURLY_BRACES T_CURLY_OPEN TGUIL TBACKQUOTE ]
expr -> expr . T_INC [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCBRACE TAND ]
expr -> expr . T_DEC [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCBRACE TAND ]
expr -> expr . T_BOOLEAN_OR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCBRACE TAND ]
expr -> expr . T_BOOLEAN_AND expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCBRACE TAND ]
expr -> expr . T_LOGICAL_OR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCBRACE TAND ]
expr -> expr . T_LOGICAL_AND expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCBRACE TAND ]
expr -> expr . T_LOGICAL_XOR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCBRACE TAND ]
expr -> expr . TPLUS expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCBRACE TAND ]
expr -> expr . TMINUS expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCBRACE TAND ]
expr -> expr . TMUL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCBRACE TAND ]
expr -> expr . TDIV expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCBRACE TAND ]
expr -> expr . TMOD expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCBRACE TAND ]
expr -> expr . TPOW expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCBRACE TAND ]
expr -> expr . TAND expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCBRACE TAND ]
expr -> expr . TOR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCBRACE TAND ]
expr -> expr . TXOR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCBRACE TAND ]
expr -> expr . T_SL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCBRACE TAND ]
expr -> expr . T_SR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCBRACE TAND ]
expr -> expr . TDOT expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCBRACE TAND ]
expr -> expr . T_IS_IDENTICAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCBRACE TAND ]
expr -> expr . T_IS_NOT_IDENTICAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCBRACE TAND ]
expr -> expr . T_IS_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCBRACE TAND ]
expr -> expr . T_IS_NOT_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCBRACE TAND ]
expr -> expr . TSMALLER expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCBRACE TAND ]
expr -> expr . T_IS_SMALLER_OR_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCBRACE TAND ]
expr -> expr . TGREATER expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCBRACE TAND ]
expr -> expr . T_IS_GREATER_OR_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCBRACE TAND ]
expr -> expr . T_ROCKET expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCBRACE TAND ]
expr -> expr . TQUESTION expr TCOLON expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCBRACE TAND ]
expr -> expr . TQUESTION TCOLON expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCBRACE TAND ]
expr -> expr . TQUESTION TQUESTION expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCBRACE TAND ]
expr -> expr . T_INSTANCEOF expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCBRACE TAND ]
## Transitions:
-- On T_SR shift to state 233
-- On T_SL shift to state 244
-- On T_ROCKET shift to state 260
-- On T_LOGICAL_XOR shift to state 270
-- On T_LOGICAL_OR shift to state 298
-- On T_LOGICAL_AND shift to state 272
-- On T_IS_SMALLER_OR_EQUAL shift to state 262
-- On T_IS_NOT_IDENTICAL shift to state 274
-- On T_IS_NOT_EQUAL shift to state 276
-- On T_IS_IDENTICAL shift to state 278
-- On T_IS_GREATER_OR_EQUAL shift to state 264
-- On T_IS_EQUAL shift to state 280
-- On T_INSTANCEOF shift to state 235
-- On T_INC shift to state 237
-- On T_DEC shift to state 238
-- On T_BOOLEAN_OR shift to state 282
-- On T_BOOLEAN_AND shift to state 284
-- On TXOR shift to state 286
-- On TSMALLER shift to state 266
-- On TQUESTION shift to state 292
-- On TPOW shift to state 246
-- On TPLUS shift to state 248
-- On TOR shift to state 290
-- On TMUL shift to state 250
-- On TMOD shift to state 252
-- On TMINUS shift to state 256
-- On TGREATER shift to state 268
-- On TDOT shift to state 258
-- On TDIV shift to state 254
-- On TCBRACE shift to state 358
-- On TAND shift to state 288
## Reductions:

State 358:
## Known stack suffix:
## T_CURLY_OPEN expr TCBRACE
## LR(1) items:
encaps -> T_CURLY_OPEN expr TCBRACE . [ T_VARIABLE T_END_HEREDOC T_ENCAPSED_AND_WHITESPACE T_DOLLAR_OPEN_CURLY_BRACES T_CURLY_OPEN TGUIL TBACKQUOTE ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production encaps -> T_CURLY_OPEN expr TCBRACE

State 359:
## Known stack suffix:
## TGUIL list(encaps)
## LR(1) items:
primary_expr -> TGUIL list(encaps) . TGUIL [ T_XOR_EQUAL T_SR_EQUAL T_SR T_SL_EQUAL T_SL T_ROCKET T_PLUS_EQUAL T_OR_EQUAL T_OBJECT_OPERATOR T_MUL_EQUAL T_MOD_EQUAL T_MINUS_EQUAL T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DIV_EQUAL T_DEC T_CONCAT_EQUAL T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW T_AND_EQUAL TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TOPAR TOBRACE TOBRA TMUL TMOD TMINUS TGREATER TEQ TDOT TDIV TCPAR TCOMMA TCOLON TCOLCOL TCBRACE TCBRA TAND RDots EOF ]
## Transitions:
-- On TGUIL shift to state 360
## Reductions:

State 360:
## Known stack suffix:
## TGUIL list(encaps) TGUIL
## LR(1) items:
primary_expr -> TGUIL list(encaps) TGUIL . [ T_XOR_EQUAL T_SR_EQUAL T_SR T_SL_EQUAL T_SL T_ROCKET T_PLUS_EQUAL T_OR_EQUAL T_OBJECT_OPERATOR T_MUL_EQUAL T_MOD_EQUAL T_MINUS_EQUAL T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DIV_EQUAL T_DEC T_CONCAT_EQUAL T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW T_AND_EQUAL TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TOPAR TOBRACE TOBRA TMUL TMOD TMINUS TGREATER TEQ TDOT TDIV TCPAR TCOMMA TCOLON TCOLCOL TCBRACE TCBRA TAND RDots EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production primary_expr -> TGUIL list(encaps) TGUIL

State 361:
## Known stack suffix:
## TMINUS expr
## LR(1) items:
expr -> expr . T_INC [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_DEC [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_BOOLEAN_OR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_BOOLEAN_AND expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_LOGICAL_OR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_LOGICAL_AND expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_LOGICAL_XOR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TPLUS expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TMINUS expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TMUL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TDIV expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TMOD expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TPOW expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TAND expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TOR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TXOR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_SL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_SR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TDOT expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_IDENTICAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_NOT_IDENTICAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_NOT_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TSMALLER expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_SMALLER_OR_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TGREATER expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_GREATER_OR_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_ROCKET expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> TMINUS expr . [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TQUESTION expr TCOLON expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TQUESTION TCOLON expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TQUESTION TQUESTION expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_INSTANCEOF expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
## Transitions:
-- On T_INC shift to state 237
-- On T_DEC shift to state 238
## Reductions:
-- On T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF
--   reduce production expr -> TMINUS expr

State 362:
## Known stack suffix:
## TAND
## LR(1) items:
array_pair -> TAND . expr [ TCPAR TCOMMA TCBRA ]
## Transitions:
-- On T__AT shift to state 1
-- On T_YIELD shift to state 2
-- On T_VARIABLE shift to state 3
-- On T_UNSET_CAST shift to state 5
-- On T_TYPE shift to state 6
-- On T_TRAIT_C shift to state 7
-- On T_SUPER shift to state 8
-- On T_STRING_CAST shift to state 9
-- On T_STATIC shift to state 10
-- On T_START_HEREDOC shift to state 25
-- On T_SELF shift to state 40
-- On T_REQUIRE_ONCE shift to state 41
-- On T_REQUIRE shift to state 42
-- On T_PRINT shift to state 43
-- On T_PARENT shift to state 44
-- On T_OBJECT_CAST shift to state 45
-- On T_NEW shift to state 46
-- On T_NAMESPACE_C shift to state 49
-- On T_NAMESPACE shift to state 50
-- On T_METHOD_C shift to state 58
-- On T_METAVAR shift to state 17
-- On T_LNUMBER shift to state 59
-- On T_LIST shift to state 69
-- On T_LINE shift to state 60
-- On T_LAMBDA_OPAR shift to state 73
-- On T_ISSET shift to state 133
-- On T_INT_CAST shift to state 135
-- On T_INSTANCEOF shift to state 52
-- On T_INCLUDE_ONCE shift to state 136
-- On T_INCLUDE shift to state 137
-- On T_INC shift to state 138
-- On T_IDENT shift to state 18
-- On T_FUNC_C shift to state 61
-- On T_FUNCTION shift to state 139
-- On T_FILE shift to state 62
-- On T_EXIT shift to state 160
-- On T_EVAL shift to state 162
-- On T_ENUM shift to state 19
-- On T_EMPTY shift to state 164
-- On T_DOUBLE_CAST shift to state 168
-- On T_DNUMBER shift to state 63
-- On T_DIR shift to state 64
-- On T_DEC shift to state 169
-- On T_CONSTANT_ENCAPSED_STRING shift to state 65
-- On T_CLONE shift to state 170
-- On T_CLASS_C shift to state 66
-- On T_BOOL_CAST shift to state 171
-- On T_AWAIT shift to state 172
-- On T_ASYNC shift to state 173
-- On T_ARRAY_CAST shift to state 200
-- On T_ARRAY shift to state 201
-- On TTILDE shift to state 204
-- On TPLUS shift to state 205
-- On TOPAR shift to state 206
-- On TOBRA shift to state 209
-- On TMINUS shift to state 210
-- On TGUIL shift to state 211
-- On TDOLLARDOLLAR shift to state 213
-- On TDOLLAR shift to state 214
-- On TBANG shift to state 216
-- On TBACKQUOTE shift to state 217
-- On TANTISLASH shift to state 85
-- On LDots shift to state 222
-- On simple_expr shift to state 223
-- On qualified_name shift to state 94
-- On qualified_class_name shift to state 225
-- On primary_expr shift to state 226
-- On new_expr shift to state 227
-- On namespace_name shift to state 102
-- On member_expr shift to state 228
-- On lambda_expr shift to state 231
-- On ident_in_name shift to state 57
-- On ident shift to state 56
-- On expr shift to state 363
-- On constant shift to state 239
-- On call_expr shift to state 240
## Reductions:

State 363:
## Known stack suffix:
## TAND expr
## LR(1) items:
array_pair -> TAND expr . [ TCPAR TCOMMA TCBRA ]
expr -> expr . T_INC [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCBRA TAND ]
expr -> expr . T_DEC [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCBRA TAND ]
expr -> expr . T_BOOLEAN_OR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCBRA TAND ]
expr -> expr . T_BOOLEAN_AND expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCBRA TAND ]
expr -> expr . T_LOGICAL_OR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCBRA TAND ]
expr -> expr . T_LOGICAL_AND expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCBRA TAND ]
expr -> expr . T_LOGICAL_XOR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCBRA TAND ]
expr -> expr . TPLUS expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCBRA TAND ]
expr -> expr . TMINUS expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCBRA TAND ]
expr -> expr . TMUL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCBRA TAND ]
expr -> expr . TDIV expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCBRA TAND ]
expr -> expr . TMOD expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCBRA TAND ]
expr -> expr . TPOW expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCBRA TAND ]
expr -> expr . TAND expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCBRA TAND ]
expr -> expr . TOR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCBRA TAND ]
expr -> expr . TXOR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCBRA TAND ]
expr -> expr . T_SL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCBRA TAND ]
expr -> expr . T_SR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCBRA TAND ]
expr -> expr . TDOT expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCBRA TAND ]
expr -> expr . T_IS_IDENTICAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCBRA TAND ]
expr -> expr . T_IS_NOT_IDENTICAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCBRA TAND ]
expr -> expr . T_IS_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCBRA TAND ]
expr -> expr . T_IS_NOT_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCBRA TAND ]
expr -> expr . TSMALLER expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCBRA TAND ]
expr -> expr . T_IS_SMALLER_OR_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCBRA TAND ]
expr -> expr . TGREATER expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCBRA TAND ]
expr -> expr . T_IS_GREATER_OR_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCBRA TAND ]
expr -> expr . T_ROCKET expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCBRA TAND ]
expr -> expr . TQUESTION expr TCOLON expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCBRA TAND ]
expr -> expr . TQUESTION TCOLON expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCBRA TAND ]
expr -> expr . TQUESTION TQUESTION expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCBRA TAND ]
expr -> expr . T_INSTANCEOF expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCBRA TAND ]
## Transitions:
-- On T_SR shift to state 233
-- On T_SL shift to state 244
-- On T_ROCKET shift to state 260
-- On T_LOGICAL_XOR shift to state 270
-- On T_LOGICAL_OR shift to state 298
-- On T_LOGICAL_AND shift to state 272
-- On T_IS_SMALLER_OR_EQUAL shift to state 262
-- On T_IS_NOT_IDENTICAL shift to state 274
-- On T_IS_NOT_EQUAL shift to state 276
-- On T_IS_IDENTICAL shift to state 278
-- On T_IS_GREATER_OR_EQUAL shift to state 264
-- On T_IS_EQUAL shift to state 280
-- On T_INSTANCEOF shift to state 235
-- On T_INC shift to state 237
-- On T_DEC shift to state 238
-- On T_BOOLEAN_OR shift to state 282
-- On T_BOOLEAN_AND shift to state 284
-- On TXOR shift to state 286
-- On TSMALLER shift to state 266
-- On TQUESTION shift to state 292
-- On TPOW shift to state 246
-- On TPLUS shift to state 248
-- On TOR shift to state 290
-- On TMUL shift to state 250
-- On TMOD shift to state 252
-- On TMINUS shift to state 256
-- On TGREATER shift to state 268
-- On TDOT shift to state 258
-- On TDIV shift to state 254
-- On TAND shift to state 288
## Reductions:
-- On TCPAR TCOMMA TCBRA
--   reduce production array_pair -> TAND expr

State 364:
## Known stack suffix:
## non_empty_array_pair_list_rev
## LR(1) items:
array_pair_list_rev -> non_empty_array_pair_list_rev . possible_comma [ TCPAR TCBRA ]
non_empty_array_pair_list_rev -> non_empty_array_pair_list_rev . TCOMMA array_pair [ TCPAR TCOMMA TCBRA ]
## Transitions:
-- On TCOMMA shift to state 365
-- On possible_comma shift to state 372
## Reductions:
-- On TCPAR TCBRA
--   reduce production possible_comma ->

State 365:
## Known stack suffix:
## non_empty_array_pair_list_rev TCOMMA
## LR(1) items:
non_empty_array_pair_list_rev -> non_empty_array_pair_list_rev TCOMMA . array_pair [ TCPAR TCOMMA TCBRA ]
possible_comma -> TCOMMA . [ TCPAR TCBRA ]
## Transitions:
-- On T__AT shift to state 1
-- On T_YIELD shift to state 2
-- On T_VARIABLE shift to state 3
-- On T_UNSET_CAST shift to state 5
-- On T_TYPE shift to state 6
-- On T_TRAIT_C shift to state 7
-- On T_SUPER shift to state 8
-- On T_STRING_CAST shift to state 9
-- On T_STATIC shift to state 10
-- On T_START_HEREDOC shift to state 25
-- On T_SELF shift to state 40
-- On T_REQUIRE_ONCE shift to state 41
-- On T_REQUIRE shift to state 42
-- On T_PRINT shift to state 43
-- On T_PARENT shift to state 44
-- On T_OBJECT_CAST shift to state 45
-- On T_NEW shift to state 46
-- On T_NAMESPACE_C shift to state 49
-- On T_NAMESPACE shift to state 50
-- On T_METHOD_C shift to state 58
-- On T_METAVAR shift to state 17
-- On T_LNUMBER shift to state 59
-- On T_LIST shift to state 69
-- On T_LINE shift to state 60
-- On T_LAMBDA_OPAR shift to state 73
-- On T_ISSET shift to state 133
-- On T_INT_CAST shift to state 135
-- On T_INSTANCEOF shift to state 52
-- On T_INCLUDE_ONCE shift to state 136
-- On T_INCLUDE shift to state 137
-- On T_INC shift to state 138
-- On T_IDENT shift to state 18
-- On T_FUNC_C shift to state 61
-- On T_FUNCTION shift to state 139
-- On T_FILE shift to state 62
-- On T_EXIT shift to state 160
-- On T_EVAL shift to state 162
-- On T_ENUM shift to state 19
-- On T_EMPTY shift to state 164
-- On T_ELLIPSIS shift to state 203
-- On T_DOUBLE_CAST shift to state 168
-- On T_DNUMBER shift to state 63
-- On T_DIR shift to state 64
-- On T_DEC shift to state 169
-- On T_CONSTANT_ENCAPSED_STRING shift to state 65
-- On T_CLONE shift to state 170
-- On T_CLASS_C shift to state 66
-- On T_BOOL_CAST shift to state 171
-- On T_AWAIT shift to state 172
-- On T_ASYNC shift to state 173
-- On T_ARRAY_CAST shift to state 200
-- On T_ARRAY shift to state 201
-- On TTILDE shift to state 204
-- On TPLUS shift to state 205
-- On TOPAR shift to state 206
-- On TOBRA shift to state 209
-- On TMINUS shift to state 210
-- On TGUIL shift to state 211
-- On TDOLLARDOLLAR shift to state 213
-- On TDOLLAR shift to state 214
-- On TBANG shift to state 216
-- On TBACKQUOTE shift to state 217
-- On TANTISLASH shift to state 85
-- On TAND shift to state 362
-- On LDots shift to state 222
-- On simple_expr shift to state 223
-- On qualified_name shift to state 94
-- On qualified_class_name shift to state 225
-- On primary_expr shift to state 226
-- On new_expr shift to state 227
-- On namespace_name shift to state 102
-- On member_expr shift to state 228
-- On lambda_expr shift to state 231
-- On ident_in_name shift to state 57
-- On ident shift to state 56
-- On expr shift to state 366
-- On constant shift to state 239
-- On call_expr shift to state 240
-- On array_pair shift to state 371
## Reductions:
-- On TCPAR TCBRA
--   reduce production possible_comma -> TCOMMA

State 366:
## Known stack suffix:
## expr
## LR(1) items:
array_pair -> expr . [ TCPAR TCOMMA TCBRA ]
array_pair -> expr . T_ARROW expr [ TCPAR TCOMMA TCBRA ]
array_pair -> expr . T_ARROW TAND expr [ TCPAR TCOMMA TCBRA ]
expr -> expr . T_INC [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND T_ARROW TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCBRA TAND ]
expr -> expr . T_DEC [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND T_ARROW TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCBRA TAND ]
expr -> expr . T_BOOLEAN_OR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND T_ARROW TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCBRA TAND ]
expr -> expr . T_BOOLEAN_AND expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND T_ARROW TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCBRA TAND ]
expr -> expr . T_LOGICAL_OR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND T_ARROW TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCBRA TAND ]
expr -> expr . T_LOGICAL_AND expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND T_ARROW TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCBRA TAND ]
expr -> expr . T_LOGICAL_XOR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND T_ARROW TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCBRA TAND ]
expr -> expr . TPLUS expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND T_ARROW TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCBRA TAND ]
expr -> expr . TMINUS expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND T_ARROW TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCBRA TAND ]
expr -> expr . TMUL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND T_ARROW TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCBRA TAND ]
expr -> expr . TDIV expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND T_ARROW TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCBRA TAND ]
expr -> expr . TMOD expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND T_ARROW TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCBRA TAND ]
expr -> expr . TPOW expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND T_ARROW TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCBRA TAND ]
expr -> expr . TAND expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND T_ARROW TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCBRA TAND ]
expr -> expr . TOR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND T_ARROW TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCBRA TAND ]
expr -> expr . TXOR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND T_ARROW TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCBRA TAND ]
expr -> expr . T_SL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND T_ARROW TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCBRA TAND ]
expr -> expr . T_SR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND T_ARROW TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCBRA TAND ]
expr -> expr . TDOT expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND T_ARROW TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCBRA TAND ]
expr -> expr . T_IS_IDENTICAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND T_ARROW TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCBRA TAND ]
expr -> expr . T_IS_NOT_IDENTICAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND T_ARROW TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCBRA TAND ]
expr -> expr . T_IS_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND T_ARROW TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCBRA TAND ]
expr -> expr . T_IS_NOT_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND T_ARROW TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCBRA TAND ]
expr -> expr . TSMALLER expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND T_ARROW TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCBRA TAND ]
expr -> expr . T_IS_SMALLER_OR_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND T_ARROW TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCBRA TAND ]
expr -> expr . TGREATER expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND T_ARROW TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCBRA TAND ]
expr -> expr . T_IS_GREATER_OR_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND T_ARROW TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCBRA TAND ]
expr -> expr . T_ROCKET expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND T_ARROW TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCBRA TAND ]
expr -> expr . TQUESTION expr TCOLON expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND T_ARROW TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCBRA TAND ]
expr -> expr . TQUESTION TCOLON expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND T_ARROW TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCBRA TAND ]
expr -> expr . TQUESTION TQUESTION expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND T_ARROW TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCBRA TAND ]
expr -> expr . T_INSTANCEOF expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND T_ARROW TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCBRA TAND ]
## Transitions:
-- On T_SR shift to state 233
-- On T_SL shift to state 244
-- On T_ROCKET shift to state 260
-- On T_LOGICAL_XOR shift to state 270
-- On T_LOGICAL_OR shift to state 298
-- On T_LOGICAL_AND shift to state 272
-- On T_IS_SMALLER_OR_EQUAL shift to state 262
-- On T_IS_NOT_IDENTICAL shift to state 274
-- On T_IS_NOT_EQUAL shift to state 276
-- On T_IS_IDENTICAL shift to state 278
-- On T_IS_GREATER_OR_EQUAL shift to state 264
-- On T_IS_EQUAL shift to state 280
-- On T_INSTANCEOF shift to state 235
-- On T_INC shift to state 237
-- On T_DEC shift to state 238
-- On T_BOOLEAN_OR shift to state 282
-- On T_BOOLEAN_AND shift to state 284
-- On T_ARROW shift to state 367
-- On TXOR shift to state 286
-- On TSMALLER shift to state 266
-- On TQUESTION shift to state 292
-- On TPOW shift to state 246
-- On TPLUS shift to state 248
-- On TOR shift to state 290
-- On TMUL shift to state 250
-- On TMOD shift to state 252
-- On TMINUS shift to state 256
-- On TGREATER shift to state 268
-- On TDOT shift to state 258
-- On TDIV shift to state 254
-- On TAND shift to state 288
## Reductions:
-- On TCPAR TCOMMA TCBRA
--   reduce production array_pair -> expr

State 367:
## Known stack suffix:
## expr T_ARROW
## LR(1) items:
array_pair -> expr T_ARROW . expr [ TCPAR TCOMMA TCBRA ]
array_pair -> expr T_ARROW . TAND expr [ TCPAR TCOMMA TCBRA ]
## Transitions:
-- On T__AT shift to state 1
-- On T_YIELD shift to state 2
-- On T_VARIABLE shift to state 3
-- On T_UNSET_CAST shift to state 5
-- On T_TYPE shift to state 6
-- On T_TRAIT_C shift to state 7
-- On T_SUPER shift to state 8
-- On T_STRING_CAST shift to state 9
-- On T_STATIC shift to state 10
-- On T_START_HEREDOC shift to state 25
-- On T_SELF shift to state 40
-- On T_REQUIRE_ONCE shift to state 41
-- On T_REQUIRE shift to state 42
-- On T_PRINT shift to state 43
-- On T_PARENT shift to state 44
-- On T_OBJECT_CAST shift to state 45
-- On T_NEW shift to state 46
-- On T_NAMESPACE_C shift to state 49
-- On T_NAMESPACE shift to state 50
-- On T_METHOD_C shift to state 58
-- On T_METAVAR shift to state 17
-- On T_LNUMBER shift to state 59
-- On T_LIST shift to state 69
-- On T_LINE shift to state 60
-- On T_LAMBDA_OPAR shift to state 73
-- On T_ISSET shift to state 133
-- On T_INT_CAST shift to state 135
-- On T_INSTANCEOF shift to state 52
-- On T_INCLUDE_ONCE shift to state 136
-- On T_INCLUDE shift to state 137
-- On T_INC shift to state 138
-- On T_IDENT shift to state 18
-- On T_FUNC_C shift to state 61
-- On T_FUNCTION shift to state 139
-- On T_FILE shift to state 62
-- On T_EXIT shift to state 160
-- On T_EVAL shift to state 162
-- On T_ENUM shift to state 19
-- On T_EMPTY shift to state 164
-- On T_DOUBLE_CAST shift to state 168
-- On T_DNUMBER shift to state 63
-- On T_DIR shift to state 64
-- On T_DEC shift to state 169
-- On T_CONSTANT_ENCAPSED_STRING shift to state 65
-- On T_CLONE shift to state 170
-- On T_CLASS_C shift to state 66
-- On T_BOOL_CAST shift to state 171
-- On T_AWAIT shift to state 172
-- On T_ASYNC shift to state 173
-- On T_ARRAY_CAST shift to state 200
-- On T_ARRAY shift to state 201
-- On TTILDE shift to state 204
-- On TPLUS shift to state 205
-- On TOPAR shift to state 206
-- On TOBRA shift to state 209
-- On TMINUS shift to state 210
-- On TGUIL shift to state 211
-- On TDOLLARDOLLAR shift to state 213
-- On TDOLLAR shift to state 214
-- On TBANG shift to state 216
-- On TBACKQUOTE shift to state 217
-- On TANTISLASH shift to state 85
-- On TAND shift to state 368
-- On LDots shift to state 222
-- On simple_expr shift to state 223
-- On qualified_name shift to state 94
-- On qualified_class_name shift to state 225
-- On primary_expr shift to state 226
-- On new_expr shift to state 227
-- On namespace_name shift to state 102
-- On member_expr shift to state 228
-- On lambda_expr shift to state 231
-- On ident_in_name shift to state 57
-- On ident shift to state 56
-- On expr shift to state 370
-- On constant shift to state 239
-- On call_expr shift to state 240
## Reductions:

State 368:
## Known stack suffix:
## expr T_ARROW TAND
## LR(1) items:
array_pair -> expr T_ARROW TAND . expr [ TCPAR TCOMMA TCBRA ]
## Transitions:
-- On T__AT shift to state 1
-- On T_YIELD shift to state 2
-- On T_VARIABLE shift to state 3
-- On T_UNSET_CAST shift to state 5
-- On T_TYPE shift to state 6
-- On T_TRAIT_C shift to state 7
-- On T_SUPER shift to state 8
-- On T_STRING_CAST shift to state 9
-- On T_STATIC shift to state 10
-- On T_START_HEREDOC shift to state 25
-- On T_SELF shift to state 40
-- On T_REQUIRE_ONCE shift to state 41
-- On T_REQUIRE shift to state 42
-- On T_PRINT shift to state 43
-- On T_PARENT shift to state 44
-- On T_OBJECT_CAST shift to state 45
-- On T_NEW shift to state 46
-- On T_NAMESPACE_C shift to state 49
-- On T_NAMESPACE shift to state 50
-- On T_METHOD_C shift to state 58
-- On T_METAVAR shift to state 17
-- On T_LNUMBER shift to state 59
-- On T_LIST shift to state 69
-- On T_LINE shift to state 60
-- On T_LAMBDA_OPAR shift to state 73
-- On T_ISSET shift to state 133
-- On T_INT_CAST shift to state 135
-- On T_INSTANCEOF shift to state 52
-- On T_INCLUDE_ONCE shift to state 136
-- On T_INCLUDE shift to state 137
-- On T_INC shift to state 138
-- On T_IDENT shift to state 18
-- On T_FUNC_C shift to state 61
-- On T_FUNCTION shift to state 139
-- On T_FILE shift to state 62
-- On T_EXIT shift to state 160
-- On T_EVAL shift to state 162
-- On T_ENUM shift to state 19
-- On T_EMPTY shift to state 164
-- On T_DOUBLE_CAST shift to state 168
-- On T_DNUMBER shift to state 63
-- On T_DIR shift to state 64
-- On T_DEC shift to state 169
-- On T_CONSTANT_ENCAPSED_STRING shift to state 65
-- On T_CLONE shift to state 170
-- On T_CLASS_C shift to state 66
-- On T_BOOL_CAST shift to state 171
-- On T_AWAIT shift to state 172
-- On T_ASYNC shift to state 173
-- On T_ARRAY_CAST shift to state 200
-- On T_ARRAY shift to state 201
-- On TTILDE shift to state 204
-- On TPLUS shift to state 205
-- On TOPAR shift to state 206
-- On TOBRA shift to state 209
-- On TMINUS shift to state 210
-- On TGUIL shift to state 211
-- On TDOLLARDOLLAR shift to state 213
-- On TDOLLAR shift to state 214
-- On TBANG shift to state 216
-- On TBACKQUOTE shift to state 217
-- On TANTISLASH shift to state 85
-- On LDots shift to state 222
-- On simple_expr shift to state 223
-- On qualified_name shift to state 94
-- On qualified_class_name shift to state 225
-- On primary_expr shift to state 226
-- On new_expr shift to state 227
-- On namespace_name shift to state 102
-- On member_expr shift to state 228
-- On lambda_expr shift to state 231
-- On ident_in_name shift to state 57
-- On ident shift to state 56
-- On expr shift to state 369
-- On constant shift to state 239
-- On call_expr shift to state 240
## Reductions:

State 369:
## Known stack suffix:
## expr T_ARROW TAND expr
## LR(1) items:
array_pair -> expr T_ARROW TAND expr . [ TCPAR TCOMMA TCBRA ]
expr -> expr . T_INC [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCBRA TAND ]
expr -> expr . T_DEC [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCBRA TAND ]
expr -> expr . T_BOOLEAN_OR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCBRA TAND ]
expr -> expr . T_BOOLEAN_AND expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCBRA TAND ]
expr -> expr . T_LOGICAL_OR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCBRA TAND ]
expr -> expr . T_LOGICAL_AND expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCBRA TAND ]
expr -> expr . T_LOGICAL_XOR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCBRA TAND ]
expr -> expr . TPLUS expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCBRA TAND ]
expr -> expr . TMINUS expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCBRA TAND ]
expr -> expr . TMUL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCBRA TAND ]
expr -> expr . TDIV expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCBRA TAND ]
expr -> expr . TMOD expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCBRA TAND ]
expr -> expr . TPOW expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCBRA TAND ]
expr -> expr . TAND expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCBRA TAND ]
expr -> expr . TOR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCBRA TAND ]
expr -> expr . TXOR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCBRA TAND ]
expr -> expr . T_SL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCBRA TAND ]
expr -> expr . T_SR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCBRA TAND ]
expr -> expr . TDOT expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCBRA TAND ]
expr -> expr . T_IS_IDENTICAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCBRA TAND ]
expr -> expr . T_IS_NOT_IDENTICAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCBRA TAND ]
expr -> expr . T_IS_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCBRA TAND ]
expr -> expr . T_IS_NOT_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCBRA TAND ]
expr -> expr . TSMALLER expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCBRA TAND ]
expr -> expr . T_IS_SMALLER_OR_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCBRA TAND ]
expr -> expr . TGREATER expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCBRA TAND ]
expr -> expr . T_IS_GREATER_OR_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCBRA TAND ]
expr -> expr . T_ROCKET expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCBRA TAND ]
expr -> expr . TQUESTION expr TCOLON expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCBRA TAND ]
expr -> expr . TQUESTION TCOLON expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCBRA TAND ]
expr -> expr . TQUESTION TQUESTION expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCBRA TAND ]
expr -> expr . T_INSTANCEOF expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCBRA TAND ]
## Transitions:
-- On T_SR shift to state 233
-- On T_SL shift to state 244
-- On T_ROCKET shift to state 260
-- On T_LOGICAL_XOR shift to state 270
-- On T_LOGICAL_OR shift to state 298
-- On T_LOGICAL_AND shift to state 272
-- On T_IS_SMALLER_OR_EQUAL shift to state 262
-- On T_IS_NOT_IDENTICAL shift to state 274
-- On T_IS_NOT_EQUAL shift to state 276
-- On T_IS_IDENTICAL shift to state 278
-- On T_IS_GREATER_OR_EQUAL shift to state 264
-- On T_IS_EQUAL shift to state 280
-- On T_INSTANCEOF shift to state 235
-- On T_INC shift to state 237
-- On T_DEC shift to state 238
-- On T_BOOLEAN_OR shift to state 282
-- On T_BOOLEAN_AND shift to state 284
-- On TXOR shift to state 286
-- On TSMALLER shift to state 266
-- On TQUESTION shift to state 292
-- On TPOW shift to state 246
-- On TPLUS shift to state 248
-- On TOR shift to state 290
-- On TMUL shift to state 250
-- On TMOD shift to state 252
-- On TMINUS shift to state 256
-- On TGREATER shift to state 268
-- On TDOT shift to state 258
-- On TDIV shift to state 254
-- On TAND shift to state 288
## Reductions:
-- On TCPAR TCOMMA TCBRA
--   reduce production array_pair -> expr T_ARROW TAND expr

State 370:
## Known stack suffix:
## expr T_ARROW expr
## LR(1) items:
array_pair -> expr T_ARROW expr . [ TCPAR TCOMMA TCBRA ]
expr -> expr . T_INC [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCBRA TAND ]
expr -> expr . T_DEC [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCBRA TAND ]
expr -> expr . T_BOOLEAN_OR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCBRA TAND ]
expr -> expr . T_BOOLEAN_AND expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCBRA TAND ]
expr -> expr . T_LOGICAL_OR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCBRA TAND ]
expr -> expr . T_LOGICAL_AND expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCBRA TAND ]
expr -> expr . T_LOGICAL_XOR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCBRA TAND ]
expr -> expr . TPLUS expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCBRA TAND ]
expr -> expr . TMINUS expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCBRA TAND ]
expr -> expr . TMUL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCBRA TAND ]
expr -> expr . TDIV expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCBRA TAND ]
expr -> expr . TMOD expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCBRA TAND ]
expr -> expr . TPOW expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCBRA TAND ]
expr -> expr . TAND expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCBRA TAND ]
expr -> expr . TOR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCBRA TAND ]
expr -> expr . TXOR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCBRA TAND ]
expr -> expr . T_SL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCBRA TAND ]
expr -> expr . T_SR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCBRA TAND ]
expr -> expr . TDOT expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCBRA TAND ]
expr -> expr . T_IS_IDENTICAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCBRA TAND ]
expr -> expr . T_IS_NOT_IDENTICAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCBRA TAND ]
expr -> expr . T_IS_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCBRA TAND ]
expr -> expr . T_IS_NOT_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCBRA TAND ]
expr -> expr . TSMALLER expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCBRA TAND ]
expr -> expr . T_IS_SMALLER_OR_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCBRA TAND ]
expr -> expr . TGREATER expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCBRA TAND ]
expr -> expr . T_IS_GREATER_OR_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCBRA TAND ]
expr -> expr . T_ROCKET expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCBRA TAND ]
expr -> expr . TQUESTION expr TCOLON expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCBRA TAND ]
expr -> expr . TQUESTION TCOLON expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCBRA TAND ]
expr -> expr . TQUESTION TQUESTION expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCBRA TAND ]
expr -> expr . T_INSTANCEOF expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCBRA TAND ]
## Transitions:
-- On T_SR shift to state 233
-- On T_SL shift to state 244
-- On T_ROCKET shift to state 260
-- On T_LOGICAL_XOR shift to state 270
-- On T_LOGICAL_OR shift to state 298
-- On T_LOGICAL_AND shift to state 272
-- On T_IS_SMALLER_OR_EQUAL shift to state 262
-- On T_IS_NOT_IDENTICAL shift to state 274
-- On T_IS_NOT_EQUAL shift to state 276
-- On T_IS_IDENTICAL shift to state 278
-- On T_IS_GREATER_OR_EQUAL shift to state 264
-- On T_IS_EQUAL shift to state 280
-- On T_INSTANCEOF shift to state 235
-- On T_INC shift to state 237
-- On T_DEC shift to state 238
-- On T_BOOLEAN_OR shift to state 282
-- On T_BOOLEAN_AND shift to state 284
-- On TXOR shift to state 286
-- On TSMALLER shift to state 266
-- On TQUESTION shift to state 292
-- On TPOW shift to state 246
-- On TPLUS shift to state 248
-- On TOR shift to state 290
-- On TMUL shift to state 250
-- On TMOD shift to state 252
-- On TMINUS shift to state 256
-- On TGREATER shift to state 268
-- On TDOT shift to state 258
-- On TDIV shift to state 254
-- On TAND shift to state 288
## Reductions:
-- On TCPAR TCOMMA TCBRA
--   reduce production array_pair -> expr T_ARROW expr

State 371:
## Known stack suffix:
## non_empty_array_pair_list_rev TCOMMA array_pair
## LR(1) items:
non_empty_array_pair_list_rev -> non_empty_array_pair_list_rev TCOMMA array_pair . [ TCPAR TCOMMA TCBRA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production non_empty_array_pair_list_rev -> non_empty_array_pair_list_rev TCOMMA array_pair

State 372:
## Known stack suffix:
## non_empty_array_pair_list_rev possible_comma
## LR(1) items:
array_pair_list_rev -> non_empty_array_pair_list_rev possible_comma . [ TCPAR TCBRA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production array_pair_list_rev -> non_empty_array_pair_list_rev possible_comma

State 373:
## Known stack suffix:
## array_pair_list_rev
## LR(1) items:
array_pair_list -> array_pair_list_rev . [ TCPAR TCBRA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production array_pair_list -> array_pair_list_rev

State 374:
## Known stack suffix:
## TOBRA array_pair_list
## LR(1) items:
primary_expr -> TOBRA array_pair_list . TCBRA [ T_XOR_EQUAL T_SR_EQUAL T_SR T_SL_EQUAL T_SL T_ROCKET T_PLUS_EQUAL T_OR_EQUAL T_OBJECT_OPERATOR T_MUL_EQUAL T_MOD_EQUAL T_MINUS_EQUAL T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DIV_EQUAL T_DEC T_CONCAT_EQUAL T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW T_AND_EQUAL TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TOPAR TOBRACE TOBRA TMUL TMOD TMINUS TGREATER TEQ TDOT TDIV TCPAR TCOMMA TCOLON TCOLCOL TCBRACE TCBRA TAND RDots EOF ]
## Transitions:
-- On TCBRA shift to state 375
## Reductions:

State 375:
## Known stack suffix:
## TOBRA array_pair_list TCBRA
## LR(1) items:
primary_expr -> TOBRA array_pair_list TCBRA . [ T_XOR_EQUAL T_SR_EQUAL T_SR T_SL_EQUAL T_SL T_ROCKET T_PLUS_EQUAL T_OR_EQUAL T_OBJECT_OPERATOR T_MUL_EQUAL T_MOD_EQUAL T_MINUS_EQUAL T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DIV_EQUAL T_DEC T_CONCAT_EQUAL T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW T_AND_EQUAL TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TOPAR TOBRACE TOBRA TMUL TMOD TMINUS TGREATER TEQ TDOT TDIV TCPAR TCOMMA TCOLON TCOLCOL TCBRACE TCBRA TAND RDots EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production primary_expr -> TOBRA array_pair_list TCBRA

State 376:
## Known stack suffix:
## array_pair
## LR(1) items:
non_empty_array_pair_list_rev -> array_pair . [ TCPAR TCOMMA TCBRA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production non_empty_array_pair_list_rev -> array_pair

State 377:
## Known stack suffix:
## TOPAR expr
## LR(1) items:
expr -> expr . T_INC [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . T_DEC [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . T_BOOLEAN_OR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . T_BOOLEAN_AND expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . T_LOGICAL_OR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . T_LOGICAL_AND expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . T_LOGICAL_XOR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . TPLUS expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . TMINUS expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . TMUL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . TDIV expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . TMOD expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . TPOW expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . TAND expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . TOR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . TXOR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . T_SL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . T_SR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . TDOT expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . T_IS_IDENTICAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . T_IS_NOT_IDENTICAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . T_IS_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . T_IS_NOT_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . TSMALLER expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . T_IS_SMALLER_OR_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . TGREATER expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . T_IS_GREATER_OR_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . T_ROCKET expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . TQUESTION expr TCOLON expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . TQUESTION TCOLON expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . TQUESTION TQUESTION expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . T_INSTANCEOF expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
primary_expr -> TOPAR expr . TCPAR [ T_XOR_EQUAL T_SR_EQUAL T_SR T_SL_EQUAL T_SL T_ROCKET T_PLUS_EQUAL T_OR_EQUAL T_OBJECT_OPERATOR T_MUL_EQUAL T_MOD_EQUAL T_MINUS_EQUAL T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DIV_EQUAL T_DEC T_CONCAT_EQUAL T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW T_AND_EQUAL TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TOPAR TOBRACE TOBRA TMUL TMOD TMINUS TGREATER TEQ TDOT TDIV TCPAR TCOMMA TCOLON TCOLCOL TCBRACE TCBRA TAND RDots EOF ]
## Transitions:
-- On T_SR shift to state 233
-- On T_SL shift to state 244
-- On T_ROCKET shift to state 260
-- On T_LOGICAL_XOR shift to state 270
-- On T_LOGICAL_OR shift to state 298
-- On T_LOGICAL_AND shift to state 272
-- On T_IS_SMALLER_OR_EQUAL shift to state 262
-- On T_IS_NOT_IDENTICAL shift to state 274
-- On T_IS_NOT_EQUAL shift to state 276
-- On T_IS_IDENTICAL shift to state 278
-- On T_IS_GREATER_OR_EQUAL shift to state 264
-- On T_IS_EQUAL shift to state 280
-- On T_INSTANCEOF shift to state 235
-- On T_INC shift to state 237
-- On T_DEC shift to state 238
-- On T_BOOLEAN_OR shift to state 282
-- On T_BOOLEAN_AND shift to state 284
-- On TXOR shift to state 286
-- On TSMALLER shift to state 266
-- On TQUESTION shift to state 292
-- On TPOW shift to state 246
-- On TPLUS shift to state 248
-- On TOR shift to state 290
-- On TMUL shift to state 250
-- On TMOD shift to state 252
-- On TMINUS shift to state 256
-- On TGREATER shift to state 268
-- On TDOT shift to state 258
-- On TDIV shift to state 254
-- On TCPAR shift to state 378
-- On TAND shift to state 288
## Reductions:

State 378:
## Known stack suffix:
## TOPAR expr TCPAR
## LR(1) items:
primary_expr -> TOPAR expr TCPAR . [ T_XOR_EQUAL T_SR_EQUAL T_SR T_SL_EQUAL T_SL T_ROCKET T_PLUS_EQUAL T_OR_EQUAL T_OBJECT_OPERATOR T_MUL_EQUAL T_MOD_EQUAL T_MINUS_EQUAL T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DIV_EQUAL T_DEC T_CONCAT_EQUAL T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW T_AND_EQUAL TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TOPAR TOBRACE TOBRA TMUL TMOD TMINUS TGREATER TEQ TDOT TDIV TCPAR TCOMMA TCOLON TCOLCOL TCBRACE TCBRA TAND RDots EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production primary_expr -> TOPAR expr TCPAR

State 379:
## Known stack suffix:
## TPLUS expr
## LR(1) items:
expr -> expr . T_INC [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_DEC [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_BOOLEAN_OR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_BOOLEAN_AND expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_LOGICAL_OR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_LOGICAL_AND expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_LOGICAL_XOR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TPLUS expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TMINUS expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TMUL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TDIV expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TMOD expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TPOW expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TAND expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TOR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TXOR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_SL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_SR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TDOT expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_IDENTICAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_NOT_IDENTICAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_NOT_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TSMALLER expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_SMALLER_OR_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TGREATER expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_GREATER_OR_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_ROCKET expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> TPLUS expr . [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TQUESTION expr TCOLON expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TQUESTION TCOLON expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TQUESTION TQUESTION expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_INSTANCEOF expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
## Transitions:
-- On T_INC shift to state 237
-- On T_DEC shift to state 238
## Reductions:
-- On T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF
--   reduce production expr -> TPLUS expr

State 380:
## Known stack suffix:
## TTILDE expr
## LR(1) items:
expr -> expr . T_INC [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_DEC [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_BOOLEAN_OR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_BOOLEAN_AND expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_LOGICAL_OR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_LOGICAL_AND expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_LOGICAL_XOR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TPLUS expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TMINUS expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TMUL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TDIV expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TMOD expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TPOW expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TAND expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TOR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TXOR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_SL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_SR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TDOT expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_IDENTICAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_NOT_IDENTICAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_NOT_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TSMALLER expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_SMALLER_OR_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TGREATER expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_GREATER_OR_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_ROCKET expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> TTILDE expr . [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TQUESTION expr TCOLON expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TQUESTION TCOLON expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TQUESTION TQUESTION expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_INSTANCEOF expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
## Transitions:
-- On T_INC shift to state 237
-- On T_DEC shift to state 238
## Reductions:
-- On T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF
--   reduce production expr -> TTILDE expr

State 381:
## Known stack suffix:
## T_ARRAY TOPAR array_pair_list
## LR(1) items:
primary_expr -> T_ARRAY TOPAR array_pair_list . TCPAR [ T_XOR_EQUAL T_SR_EQUAL T_SR T_SL_EQUAL T_SL T_ROCKET T_PLUS_EQUAL T_OR_EQUAL T_OBJECT_OPERATOR T_MUL_EQUAL T_MOD_EQUAL T_MINUS_EQUAL T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DIV_EQUAL T_DEC T_CONCAT_EQUAL T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW T_AND_EQUAL TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TOPAR TOBRACE TOBRA TMUL TMOD TMINUS TGREATER TEQ TDOT TDIV TCPAR TCOMMA TCOLON TCOLCOL TCBRACE TCBRA TAND RDots EOF ]
## Transitions:
-- On TCPAR shift to state 382
## Reductions:

State 382:
## Known stack suffix:
## T_ARRAY TOPAR array_pair_list TCPAR
## LR(1) items:
primary_expr -> T_ARRAY TOPAR array_pair_list TCPAR . [ T_XOR_EQUAL T_SR_EQUAL T_SR T_SL_EQUAL T_SL T_ROCKET T_PLUS_EQUAL T_OR_EQUAL T_OBJECT_OPERATOR T_MUL_EQUAL T_MOD_EQUAL T_MINUS_EQUAL T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DIV_EQUAL T_DEC T_CONCAT_EQUAL T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW T_AND_EQUAL TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TOPAR TOBRACE TOBRA TMUL TMOD TMINUS TGREATER TEQ TDOT TDIV TCPAR TCOMMA TCOLON TCOLCOL TCBRACE TCBRA TAND RDots EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production primary_expr -> T_ARRAY TOPAR array_pair_list TCPAR

State 383:
## Known stack suffix:
## T_ARRAY_CAST expr
## LR(1) items:
expr -> expr . T_INC [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_DEC [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_BOOLEAN_OR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_BOOLEAN_AND expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_LOGICAL_OR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_LOGICAL_AND expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_LOGICAL_XOR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TPLUS expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TMINUS expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TMUL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TDIV expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TMOD expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TPOW expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TAND expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TOR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TXOR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_SL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_SR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TDOT expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_IDENTICAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_NOT_IDENTICAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_NOT_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TSMALLER expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_SMALLER_OR_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TGREATER expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_GREATER_OR_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_ROCKET expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TQUESTION expr TCOLON expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TQUESTION TCOLON expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TQUESTION TQUESTION expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_INSTANCEOF expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> T_ARRAY_CAST expr . [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
## Transitions:
-- On T_INC shift to state 237
-- On T_DEC shift to state 238
## Reductions:
-- On T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF
--   reduce production expr -> T_ARRAY_CAST expr

State 384:
## Known stack suffix:
## unset_variable
## LR(1) items:
list_sep(unset_variable,TCOMMA) -> unset_variable . [ TCPAR TCOMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production list_sep(unset_variable,TCOMMA) -> unset_variable

State 385:
## Known stack suffix:
## T_UNSET TOPAR list_sep(unset_variable,TCOMMA)
## LR(1) items:
list_sep(unset_variable,TCOMMA) -> list_sep(unset_variable,TCOMMA) . TCOMMA unset_variable [ TCPAR TCOMMA ]
statement -> T_UNSET TOPAR list_sep(unset_variable,TCOMMA) . TCPAR TSEMICOLON [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_ENDWHILE T_ENDSWITCH T_ENDIF T_ENDFOREACH T_ENDFOR T_ENDDECLARE T_EMPTY T_ELSEIF T_ELSE T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DEFAULT T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_CASE T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
## Transitions:
-- On TCPAR shift to state 386
-- On TCOMMA shift to state 388
## Reductions:

State 386:
## Known stack suffix:
## T_UNSET TOPAR list_sep(unset_variable,TCOMMA) TCPAR
## LR(1) items:
statement -> T_UNSET TOPAR list_sep(unset_variable,TCOMMA) TCPAR . TSEMICOLON [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_ENDWHILE T_ENDSWITCH T_ENDIF T_ENDFOREACH T_ENDFOR T_ENDDECLARE T_EMPTY T_ELSEIF T_ELSE T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DEFAULT T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_CASE T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
## Transitions:
-- On TSEMICOLON shift to state 387
## Reductions:

State 387:
## Known stack suffix:
## T_UNSET TOPAR list_sep(unset_variable,TCOMMA) TCPAR TSEMICOLON
## LR(1) items:
statement -> T_UNSET TOPAR list_sep(unset_variable,TCOMMA) TCPAR TSEMICOLON . [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_ENDWHILE T_ENDSWITCH T_ENDIF T_ENDFOREACH T_ENDFOR T_ENDDECLARE T_EMPTY T_ELSEIF T_ELSE T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DEFAULT T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_CASE T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production statement -> T_UNSET TOPAR list_sep(unset_variable,TCOMMA) TCPAR TSEMICOLON

State 388:
## Known stack suffix:
## list_sep(unset_variable,TCOMMA) TCOMMA
## LR(1) items:
list_sep(unset_variable,TCOMMA) -> list_sep(unset_variable,TCOMMA) TCOMMA . unset_variable [ TCPAR TCOMMA ]
## Transitions:
-- On T__AT shift to state 1
-- On T_YIELD shift to state 2
-- On T_VARIABLE shift to state 3
-- On T_UNSET_CAST shift to state 5
-- On T_TYPE shift to state 6
-- On T_TRAIT_C shift to state 7
-- On T_SUPER shift to state 8
-- On T_STRING_CAST shift to state 9
-- On T_STATIC shift to state 10
-- On T_START_HEREDOC shift to state 25
-- On T_SELF shift to state 40
-- On T_REQUIRE_ONCE shift to state 41
-- On T_REQUIRE shift to state 42
-- On T_PRINT shift to state 43
-- On T_PARENT shift to state 44
-- On T_OBJECT_CAST shift to state 45
-- On T_NEW shift to state 46
-- On T_NAMESPACE_C shift to state 49
-- On T_NAMESPACE shift to state 50
-- On T_METHOD_C shift to state 58
-- On T_METAVAR shift to state 17
-- On T_LNUMBER shift to state 59
-- On T_LIST shift to state 69
-- On T_LINE shift to state 60
-- On T_LAMBDA_OPAR shift to state 73
-- On T_ISSET shift to state 133
-- On T_INT_CAST shift to state 135
-- On T_INSTANCEOF shift to state 52
-- On T_INCLUDE_ONCE shift to state 136
-- On T_INCLUDE shift to state 137
-- On T_INC shift to state 138
-- On T_IDENT shift to state 18
-- On T_FUNC_C shift to state 61
-- On T_FUNCTION shift to state 139
-- On T_FILE shift to state 62
-- On T_EXIT shift to state 160
-- On T_EVAL shift to state 162
-- On T_ENUM shift to state 19
-- On T_EMPTY shift to state 164
-- On T_ELLIPSIS shift to state 199
-- On T_DOUBLE_CAST shift to state 168
-- On T_DNUMBER shift to state 63
-- On T_DIR shift to state 64
-- On T_DEC shift to state 169
-- On T_CONSTANT_ENCAPSED_STRING shift to state 65
-- On T_CLONE shift to state 170
-- On T_CLASS_C shift to state 66
-- On T_BOOL_CAST shift to state 171
-- On T_AWAIT shift to state 172
-- On T_ASYNC shift to state 173
-- On T_ARRAY_CAST shift to state 200
-- On T_ARRAY shift to state 201
-- On TTILDE shift to state 204
-- On TPLUS shift to state 205
-- On TOPAR shift to state 206
-- On TOBRA shift to state 209
-- On TMINUS shift to state 210
-- On TGUIL shift to state 211
-- On TDOLLARDOLLAR shift to state 213
-- On TDOLLAR shift to state 214
-- On TBANG shift to state 216
-- On TBACKQUOTE shift to state 217
-- On TANTISLASH shift to state 85
-- On LDots shift to state 222
-- On unset_variable shift to state 389
-- On simple_expr shift to state 223
-- On qualified_name shift to state 94
-- On qualified_class_name shift to state 225
-- On primary_expr shift to state 226
-- On new_expr shift to state 227
-- On namespace_name shift to state 102
-- On member_expr shift to state 228
-- On lambda_expr shift to state 231
-- On ident_in_name shift to state 57
-- On ident shift to state 56
-- On expr shift to state 390
-- On constant shift to state 239
-- On call_expr shift to state 240
## Reductions:

State 389:
## Known stack suffix:
## list_sep(unset_variable,TCOMMA) TCOMMA unset_variable
## LR(1) items:
list_sep(unset_variable,TCOMMA) -> list_sep(unset_variable,TCOMMA) TCOMMA unset_variable . [ TCPAR TCOMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production list_sep(unset_variable,TCOMMA) -> list_sep(unset_variable,TCOMMA) TCOMMA unset_variable

State 390:
## Known stack suffix:
## expr
## LR(1) items:
expr -> expr . T_INC [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TAND ]
expr -> expr . T_DEC [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TAND ]
expr -> expr . T_BOOLEAN_OR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TAND ]
expr -> expr . T_BOOLEAN_AND expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TAND ]
expr -> expr . T_LOGICAL_OR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TAND ]
expr -> expr . T_LOGICAL_AND expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TAND ]
expr -> expr . T_LOGICAL_XOR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TAND ]
expr -> expr . TPLUS expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TAND ]
expr -> expr . TMINUS expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TAND ]
expr -> expr . TMUL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TAND ]
expr -> expr . TDIV expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TAND ]
expr -> expr . TMOD expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TAND ]
expr -> expr . TPOW expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TAND ]
expr -> expr . TAND expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TAND ]
expr -> expr . TOR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TAND ]
expr -> expr . TXOR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TAND ]
expr -> expr . T_SL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TAND ]
expr -> expr . T_SR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TAND ]
expr -> expr . TDOT expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TAND ]
expr -> expr . T_IS_IDENTICAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TAND ]
expr -> expr . T_IS_NOT_IDENTICAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TAND ]
expr -> expr . T_IS_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TAND ]
expr -> expr . T_IS_NOT_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TAND ]
expr -> expr . TSMALLER expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TAND ]
expr -> expr . T_IS_SMALLER_OR_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TAND ]
expr -> expr . TGREATER expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TAND ]
expr -> expr . T_IS_GREATER_OR_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TAND ]
expr -> expr . T_ROCKET expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TAND ]
expr -> expr . TQUESTION expr TCOLON expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TAND ]
expr -> expr . TQUESTION TCOLON expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TAND ]
expr -> expr . TQUESTION TQUESTION expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TAND ]
expr -> expr . T_INSTANCEOF expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TAND ]
unset_variable -> expr . [ TCPAR TCOMMA ]
## Transitions:
-- On T_SR shift to state 233
-- On T_SL shift to state 244
-- On T_ROCKET shift to state 260
-- On T_LOGICAL_XOR shift to state 270
-- On T_LOGICAL_OR shift to state 298
-- On T_LOGICAL_AND shift to state 272
-- On T_IS_SMALLER_OR_EQUAL shift to state 262
-- On T_IS_NOT_IDENTICAL shift to state 274
-- On T_IS_NOT_EQUAL shift to state 276
-- On T_IS_IDENTICAL shift to state 278
-- On T_IS_GREATER_OR_EQUAL shift to state 264
-- On T_IS_EQUAL shift to state 280
-- On T_INSTANCEOF shift to state 235
-- On T_INC shift to state 237
-- On T_DEC shift to state 238
-- On T_BOOLEAN_OR shift to state 282
-- On T_BOOLEAN_AND shift to state 284
-- On TXOR shift to state 286
-- On TSMALLER shift to state 266
-- On TQUESTION shift to state 292
-- On TPOW shift to state 246
-- On TPLUS shift to state 248
-- On TOR shift to state 290
-- On TMUL shift to state 250
-- On TMOD shift to state 252
-- On TMINUS shift to state 256
-- On TGREATER shift to state 268
-- On TDOT shift to state 258
-- On TDIV shift to state 254
-- On TAND shift to state 288
## Reductions:
-- On TCPAR TCOMMA
--   reduce production unset_variable -> expr

State 391:
## Known stack suffix:
## T_TRY
## LR(1) items:
statement -> T_TRY . TOBRACE list(inner_statement) TCBRACE T_CATCH TOPAR list_sep2(class_name,TOR) T_VARIABLE TCPAR TOBRACE list(inner_statement) TCBRACE list(additional_catch) option(finally_clause) [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_ENDWHILE T_ENDSWITCH T_ENDIF T_ENDFOREACH T_ENDFOR T_ENDDECLARE T_EMPTY T_ELSEIF T_ELSE T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DEFAULT T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_CASE T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
statement -> T_TRY . TOBRACE list(inner_statement) TCBRACE T_CATCH TOPAR list_sep2(class_name,TOR) T_METAVAR TCPAR TOBRACE list(inner_statement) TCBRACE list(additional_catch) option(finally_clause) [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_ENDWHILE T_ENDSWITCH T_ENDIF T_ENDFOREACH T_ENDFOR T_ENDDECLARE T_EMPTY T_ELSEIF T_ELSE T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DEFAULT T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_CASE T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
statement -> T_TRY . TOBRACE list(inner_statement) TCBRACE finally_clause [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_ENDWHILE T_ENDSWITCH T_ENDIF T_ENDFOREACH T_ENDFOR T_ENDDECLARE T_EMPTY T_ELSEIF T_ELSE T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DEFAULT T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_CASE T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
## Transitions:
-- On TOBRACE shift to state 392
## Reductions:

State 392:
## Known stack suffix:
## T_TRY TOBRACE
## LR(1) items:
statement -> T_TRY TOBRACE . list(inner_statement) TCBRACE T_CATCH TOPAR list_sep2(class_name,TOR) T_VARIABLE TCPAR TOBRACE list(inner_statement) TCBRACE list(additional_catch) option(finally_clause) [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_ENDWHILE T_ENDSWITCH T_ENDIF T_ENDFOREACH T_ENDFOR T_ENDDECLARE T_EMPTY T_ELSEIF T_ELSE T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DEFAULT T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_CASE T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
statement -> T_TRY TOBRACE . list(inner_statement) TCBRACE T_CATCH TOPAR list_sep2(class_name,TOR) T_METAVAR TCPAR TOBRACE list(inner_statement) TCBRACE list(additional_catch) option(finally_clause) [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_ENDWHILE T_ENDSWITCH T_ENDIF T_ENDFOREACH T_ENDFOR T_ENDDECLARE T_EMPTY T_ELSEIF T_ELSE T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DEFAULT T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_CASE T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
statement -> T_TRY TOBRACE . list(inner_statement) TCBRACE finally_clause [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_ENDWHILE T_ENDSWITCH T_ENDIF T_ENDFOREACH T_ENDFOR T_ENDDECLARE T_EMPTY T_ELSEIF T_ELSE T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DEFAULT T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_CASE T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
## Transitions:
-- On T__AT shift to state 1
-- On T_YIELD shift to state 2
-- On T_WHILE shift to state 158
-- On T_VARIABLE shift to state 3
-- On T_USE shift to state 190
-- On T_UNSET_CAST shift to state 5
-- On T_UNSET shift to state 197
-- On T_TYPE shift to state 6
-- On T_TRY shift to state 391
-- On T_TRAIT_C shift to state 7
-- On T_TRAIT shift to state 393
-- On T_THROW shift to state 520
-- On T_SWITCH shift to state 525
-- On T_SUPER shift to state 8
-- On T_STRING_CAST shift to state 9
-- On T_STATIC shift to state 536
-- On T_START_HEREDOC shift to state 25
-- On T_SL shift to state 16
-- On T_SELF shift to state 40
-- On T_RETURN shift to state 553
-- On T_REQUIRE_ONCE shift to state 41
-- On T_REQUIRE shift to state 42
-- On T_PRINT shift to state 43
-- On T_PARENT shift to state 44
-- On T_OPEN_TAG_WITH_ECHO shift to state 558
-- On T_OBJECT_CAST shift to state 45
-- On T_NEW shift to state 46
-- On T_NAMESPACE_C shift to state 49
-- On T_NAMESPACE shift to state 50
-- On T_METHOD_C shift to state 58
-- On T_METAVAR shift to state 17
-- On T_LNUMBER shift to state 59
-- On T_LIST shift to state 69
-- On T_LINE shift to state 60
-- On T_LAMBDA_OPAR shift to state 73
-- On T_ISSET shift to state 133
-- On T_INT_CAST shift to state 135
-- On T_INTERFACE shift to state 563
-- On T_INSTANCEOF shift to state 52
-- On T_INLINE_HTML shift to state 576
-- On T_INCLUDE_ONCE shift to state 136
-- On T_INCLUDE shift to state 137
-- On T_INC shift to state 138
-- On T_IF shift to state 577
-- On T_IDENT shift to state 18
-- On T_GLOBAL shift to state 587
-- On T_FUNC_C shift to state 61
-- On T_FUNCTION shift to state 657
-- On T_FOREACH shift to state 600
-- On T_FOR shift to state 624
-- On T_FINAL shift to state 666
-- On T_FILE shift to state 62
-- On T_EXIT shift to state 160
-- On T_EVAL shift to state 162
-- On T_ENUM shift to state 668
-- On T_EMPTY shift to state 164
-- On T_ELLIPSIS shift to state 635
-- On T_ECHO shift to state 636
-- On T_DOUBLE_CAST shift to state 168
-- On T_DO shift to state 644
-- On T_DNUMBER shift to state 63
-- On T_DIR shift to state 64
-- On T_DECLARE shift to state 645
-- On T_DEC shift to state 169
-- On T_CONTINUE shift to state 649
-- On T_CONSTANT_ENCAPSED_STRING shift to state 65
-- On T_CLONE shift to state 170
-- On T_CLASS_C shift to state 66
-- On T_CLASS shift to state 682
-- On T_BREAK shift to state 652
-- On T_BOOL_CAST shift to state 171
-- On T_AWAIT shift to state 172
-- On T_ASYNC shift to state 683
-- On T_ARRAY_CAST shift to state 200
-- On T_ARRAY shift to state 201
-- On T_ABSTRACT shift to state 694
-- On TTILDE shift to state 204
-- On TSEMICOLON shift to state 655
-- On TPLUS shift to state 205
-- On TOPAR shift to state 206
-- On TOBRACE shift to state 656
-- On TOBRA shift to state 209
-- On TMINUS shift to state 210
-- On TGUIL shift to state 211
-- On TDOLLARDOLLAR shift to state 213
-- On TDOLLAR shift to state 214
-- On TBANG shift to state 216
-- On TBACKQUOTE shift to state 217
-- On TANTISLASH shift to state 85
-- On LDots shift to state 222
-- On unticked_function_declaration shift to state 696
-- On unticked_class_declaration shift to state 697
-- On statement shift to state 698
-- On simple_expr shift to state 223
-- On qualified_name shift to state 94
-- On qualified_class_name shift to state 225
-- On primary_expr shift to state 226
-- On new_expr shift to state 227
-- On namespace_name shift to state 102
-- On member_expr shift to state 228
-- On list(inner_statement) shift to state 843
-- On lambda_expr shift to state 231
-- On inner_statement shift to state 701
-- On ident_in_name shift to state 57
-- On ident shift to state 56
-- On function_declaration shift to state 703
-- On expr shift to state 704
-- On constant shift to state 239
-- On class_entry_type shift to state 706
-- On class_declaration shift to state 716
-- On call_expr shift to state 240
-- On attributes shift to state 717
## Reductions:
-- On TCBRACE
--   reduce production list(inner_statement) ->

State 393:
## Known stack suffix:
## T_TRAIT
## LR(1) items:
unticked_class_declaration -> T_TRAIT . ident_class_name type_params_opt implements_list TOBRACE list(member_declaration) TCBRACE [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_ENDWHILE T_ENDSWITCH T_ENDIF T_ENDFOREACH T_ENDFOR T_ENDDECLARE T_EMPTY T_ELSEIF T_ELSE T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DEFAULT T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_CASE T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
## Transitions:
-- On T_TYPE shift to state 6
-- On T_SUPER shift to state 8
-- On T_METAVAR shift to state 17
-- On T_IDENT shift to state 18
-- On T_ENUM shift to state 19
-- On ident_class_name shift to state 394
-- On ident shift to state 575
## Reductions:

State 394:
## Known stack suffix:
## T_TRAIT ident_class_name
## LR(1) items:
unticked_class_declaration -> T_TRAIT ident_class_name . type_params_opt implements_list TOBRACE list(member_declaration) TCBRACE [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_ENDWHILE T_ENDSWITCH T_ENDIF T_ENDFOREACH T_ENDFOR T_ENDDECLARE T_EMPTY T_ELSEIF T_ELSE T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DEFAULT T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_CASE T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
## Transitions:
-- On TSMALLER shift to state 395
-- On type_params_opt shift to state 413
## Reductions:
-- On T_IMPLEMENTS TOBRACE
--   reduce production type_params_opt ->

State 395:
## Known stack suffix:
## TSMALLER
## LR(1) items:
type_params_opt -> TSMALLER . type_params_list TGREATER [ T_IMPLEMENTS T_EXTENDS T_AS TOPAR TOBRACE TEQ ]
## Transitions:
-- On TPLUS shift to state 396
-- On TMINUS shift to state 397
-- On variance_opt shift to state 398
-- On type_params_list shift to state 408
-- On type_param shift to state 410
## Reductions:
-- On T_TYPE T_SUPER T_METAVAR T_IDENT T_ENUM
--   reduce production variance_opt ->

State 396:
## Known stack suffix:
## TPLUS
## LR(1) items:
variance_opt -> TPLUS . [ T_TYPE T_SUPER T_METAVAR T_IDENT T_ENUM ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production variance_opt -> TPLUS

State 397:
## Known stack suffix:
## TMINUS
## LR(1) items:
variance_opt -> TMINUS . [ T_TYPE T_SUPER T_METAVAR T_IDENT T_ENUM ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production variance_opt -> TMINUS

State 398:
## Known stack suffix:
## variance_opt
## LR(1) items:
type_param -> variance_opt . ident [ TGREATER TCOMMA ]
type_param -> variance_opt . ident T_AS TQUESTION class_name [ TGREATER TCOMMA ]
type_param -> variance_opt . ident T_AS class_name [ TGREATER TCOMMA ]
type_param -> variance_opt . ident T_SUPER TQUESTION class_name [ TGREATER TCOMMA ]
type_param -> variance_opt . ident T_SUPER class_name [ TGREATER TCOMMA ]
## Transitions:
-- On T_TYPE shift to state 6
-- On T_SUPER shift to state 8
-- On T_METAVAR shift to state 17
-- On T_IDENT shift to state 18
-- On T_ENUM shift to state 19
-- On ident shift to state 399
## Reductions:

State 399:
## Known stack suffix:
## variance_opt ident
## LR(1) items:
type_param -> variance_opt ident . [ TGREATER TCOMMA ]
type_param -> variance_opt ident . T_AS TQUESTION class_name [ TGREATER TCOMMA ]
type_param -> variance_opt ident . T_AS class_name [ TGREATER TCOMMA ]
type_param -> variance_opt ident . T_SUPER TQUESTION class_name [ TGREATER TCOMMA ]
type_param -> variance_opt ident . T_SUPER class_name [ TGREATER TCOMMA ]
## Transitions:
-- On T_SUPER shift to state 400
-- On T_AS shift to state 404
## Reductions:
-- On TGREATER TCOMMA
--   reduce production type_param -> variance_opt ident

State 400:
## Known stack suffix:
## variance_opt ident T_SUPER
## LR(1) items:
type_param -> variance_opt ident T_SUPER . TQUESTION class_name [ TGREATER TCOMMA ]
type_param -> variance_opt ident T_SUPER . class_name [ TGREATER TCOMMA ]
## Transitions:
-- On T_TYPE shift to state 6
-- On T_SUPER shift to state 8
-- On T_NAMESPACE shift to state 50
-- On T_METAVAR shift to state 17
-- On T_INSTANCEOF shift to state 52
-- On T_IDENT shift to state 18
-- On T_ENUM shift to state 19
-- On T_ARRAY shift to state 79
-- On TQUESTION shift to state 401
-- On TANTISLASH shift to state 85
-- On qualified_name shift to state 94
-- On qualified_class_name_or_array shift to state 95
-- On qualified_class_name shift to state 100
-- On namespace_name shift to state 102
-- On ident_in_name shift to state 57
-- On ident shift to state 56
-- On class_name shift to state 403
## Reductions:

State 401:
## Known stack suffix:
## variance_opt ident T_SUPER TQUESTION
## LR(1) items:
type_param -> variance_opt ident T_SUPER TQUESTION . class_name [ TGREATER TCOMMA ]
## Transitions:
-- On T_TYPE shift to state 6
-- On T_SUPER shift to state 8
-- On T_NAMESPACE shift to state 50
-- On T_METAVAR shift to state 17
-- On T_INSTANCEOF shift to state 52
-- On T_IDENT shift to state 18
-- On T_ENUM shift to state 19
-- On T_ARRAY shift to state 79
-- On TANTISLASH shift to state 85
-- On qualified_name shift to state 94
-- On qualified_class_name_or_array shift to state 95
-- On qualified_class_name shift to state 100
-- On namespace_name shift to state 102
-- On ident_in_name shift to state 57
-- On ident shift to state 56
-- On class_name shift to state 402
## Reductions:

State 402:
## Known stack suffix:
## variance_opt ident T_SUPER TQUESTION class_name
## LR(1) items:
type_param -> variance_opt ident T_SUPER TQUESTION class_name . [ TGREATER TCOMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production type_param -> variance_opt ident T_SUPER TQUESTION class_name

State 403:
## Known stack suffix:
## variance_opt ident T_SUPER class_name
## LR(1) items:
type_param -> variance_opt ident T_SUPER class_name . [ TGREATER TCOMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production type_param -> variance_opt ident T_SUPER class_name

State 404:
## Known stack suffix:
## variance_opt ident T_AS
## LR(1) items:
type_param -> variance_opt ident T_AS . TQUESTION class_name [ TGREATER TCOMMA ]
type_param -> variance_opt ident T_AS . class_name [ TGREATER TCOMMA ]
## Transitions:
-- On T_TYPE shift to state 6
-- On T_SUPER shift to state 8
-- On T_NAMESPACE shift to state 50
-- On T_METAVAR shift to state 17
-- On T_INSTANCEOF shift to state 52
-- On T_IDENT shift to state 18
-- On T_ENUM shift to state 19
-- On T_ARRAY shift to state 79
-- On TQUESTION shift to state 405
-- On TANTISLASH shift to state 85
-- On qualified_name shift to state 94
-- On qualified_class_name_or_array shift to state 95
-- On qualified_class_name shift to state 100
-- On namespace_name shift to state 102
-- On ident_in_name shift to state 57
-- On ident shift to state 56
-- On class_name shift to state 407
## Reductions:

State 405:
## Known stack suffix:
## variance_opt ident T_AS TQUESTION
## LR(1) items:
type_param -> variance_opt ident T_AS TQUESTION . class_name [ TGREATER TCOMMA ]
## Transitions:
-- On T_TYPE shift to state 6
-- On T_SUPER shift to state 8
-- On T_NAMESPACE shift to state 50
-- On T_METAVAR shift to state 17
-- On T_INSTANCEOF shift to state 52
-- On T_IDENT shift to state 18
-- On T_ENUM shift to state 19
-- On T_ARRAY shift to state 79
-- On TANTISLASH shift to state 85
-- On qualified_name shift to state 94
-- On qualified_class_name_or_array shift to state 95
-- On qualified_class_name shift to state 100
-- On namespace_name shift to state 102
-- On ident_in_name shift to state 57
-- On ident shift to state 56
-- On class_name shift to state 406
## Reductions:

State 406:
## Known stack suffix:
## variance_opt ident T_AS TQUESTION class_name
## LR(1) items:
type_param -> variance_opt ident T_AS TQUESTION class_name . [ TGREATER TCOMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production type_param -> variance_opt ident T_AS TQUESTION class_name

State 407:
## Known stack suffix:
## variance_opt ident T_AS class_name
## LR(1) items:
type_param -> variance_opt ident T_AS class_name . [ TGREATER TCOMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production type_param -> variance_opt ident T_AS class_name

State 408:
## Known stack suffix:
## TSMALLER type_params_list
## LR(1) items:
type_params_opt -> TSMALLER type_params_list . TGREATER [ T_IMPLEMENTS T_EXTENDS T_AS TOPAR TOBRACE TEQ ]
## Transitions:
-- On TGREATER shift to state 409
## Reductions:

State 409:
## Known stack suffix:
## TSMALLER type_params_list TGREATER
## LR(1) items:
type_params_opt -> TSMALLER type_params_list TGREATER . [ T_IMPLEMENTS T_EXTENDS T_AS TOPAR TOBRACE TEQ ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production type_params_opt -> TSMALLER type_params_list TGREATER

State 410:
## Known stack suffix:
## type_param
## LR(1) items:
type_params_list -> type_param . [ TGREATER ]
type_params_list -> type_param . TCOMMA type_params_list [ TGREATER ]
## Transitions:
-- On TCOMMA shift to state 411
## Reductions:
-- On TGREATER
--   reduce production type_params_list -> type_param

State 411:
## Known stack suffix:
## type_param TCOMMA
## LR(1) items:
type_params_list -> type_param TCOMMA . type_params_list [ TGREATER ]
## Transitions:
-- On TPLUS shift to state 396
-- On TMINUS shift to state 397
-- On variance_opt shift to state 398
-- On type_params_list shift to state 412
-- On type_param shift to state 410
## Reductions:
-- On T_TYPE T_SUPER T_METAVAR T_IDENT T_ENUM
--   reduce production variance_opt ->

State 412:
## Known stack suffix:
## type_param TCOMMA type_params_list
## LR(1) items:
type_params_list -> type_param TCOMMA type_params_list . [ TGREATER ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production type_params_list -> type_param TCOMMA type_params_list

State 413:
## Known stack suffix:
## T_TRAIT ident_class_name type_params_opt
## LR(1) items:
unticked_class_declaration -> T_TRAIT ident_class_name type_params_opt . implements_list TOBRACE list(member_declaration) TCBRACE [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_ENDWHILE T_ENDSWITCH T_ENDIF T_ENDFOREACH T_ENDFOR T_ENDDECLARE T_EMPTY T_ELSEIF T_ELSE T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DEFAULT T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_CASE T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
## Transitions:
-- On T_IMPLEMENTS shift to state 414
-- On implements_list shift to state 422
## Reductions:
-- On TOBRACE
--   reduce production implements_list ->

State 414:
## Known stack suffix:
## T_IMPLEMENTS
## LR(1) items:
implements_list -> T_IMPLEMENTS . class_name_list [ TOBRACE ]
## Transitions:
-- On T_TYPE shift to state 6
-- On T_SUPER shift to state 8
-- On T_NAMESPACE shift to state 50
-- On T_METAVAR shift to state 17
-- On T_INSTANCEOF shift to state 52
-- On T_IDENT shift to state 18
-- On T_ENUM shift to state 19
-- On TANTISLASH shift to state 85
-- On qualified_name shift to state 94
-- On qualified_class_name shift to state 415
-- On namespace_name shift to state 102
-- On list_sep(class_name_no_array,TCOMMA) shift to state 417
-- On ident_in_name shift to state 57
-- On ident shift to state 56
-- On class_name_no_array shift to state 420
-- On class_name_list shift to state 421
## Reductions:

State 415:
## Known stack suffix:
## qualified_class_name
## LR(1) items:
class_name_no_array -> qualified_class_name . type_arguments [ T_IMPLEMENTS TSEMICOLON TOBRACE TCOMMA ]
## Transitions:
-- On TSMALLER shift to state 96
-- On type_arguments shift to state 416
## Reductions:
-- On T_IMPLEMENTS TSEMICOLON TOBRACE TCOMMA
--   reduce production type_arguments ->

State 416:
## Known stack suffix:
## qualified_class_name type_arguments
## LR(1) items:
class_name_no_array -> qualified_class_name type_arguments . [ T_IMPLEMENTS TSEMICOLON TOBRACE TCOMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production class_name_no_array -> qualified_class_name type_arguments

State 417:
## Known stack suffix:
## list_sep(class_name_no_array,TCOMMA)
## LR(1) items:
class_name_list -> list_sep(class_name_no_array,TCOMMA) . [ TSEMICOLON TOBRACE ]
list_sep(class_name_no_array,TCOMMA) -> list_sep(class_name_no_array,TCOMMA) . TCOMMA class_name_no_array [ TSEMICOLON TOBRACE TCOMMA ]
## Transitions:
-- On TCOMMA shift to state 418
## Reductions:
-- On TSEMICOLON TOBRACE
--   reduce production class_name_list -> list_sep(class_name_no_array,TCOMMA)

State 418:
## Known stack suffix:
## list_sep(class_name_no_array,TCOMMA) TCOMMA
## LR(1) items:
list_sep(class_name_no_array,TCOMMA) -> list_sep(class_name_no_array,TCOMMA) TCOMMA . class_name_no_array [ TSEMICOLON TOBRACE TCOMMA ]
## Transitions:
-- On T_TYPE shift to state 6
-- On T_SUPER shift to state 8
-- On T_NAMESPACE shift to state 50
-- On T_METAVAR shift to state 17
-- On T_INSTANCEOF shift to state 52
-- On T_IDENT shift to state 18
-- On T_ENUM shift to state 19
-- On TANTISLASH shift to state 85
-- On qualified_name shift to state 94
-- On qualified_class_name shift to state 415
-- On namespace_name shift to state 102
-- On ident_in_name shift to state 57
-- On ident shift to state 56
-- On class_name_no_array shift to state 419
## Reductions:

State 419:
## Known stack suffix:
## list_sep(class_name_no_array,TCOMMA) TCOMMA class_name_no_array
## LR(1) items:
list_sep(class_name_no_array,TCOMMA) -> list_sep(class_name_no_array,TCOMMA) TCOMMA class_name_no_array . [ TSEMICOLON TOBRACE TCOMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production list_sep(class_name_no_array,TCOMMA) -> list_sep(class_name_no_array,TCOMMA) TCOMMA class_name_no_array

State 420:
## Known stack suffix:
## class_name_no_array
## LR(1) items:
list_sep(class_name_no_array,TCOMMA) -> class_name_no_array . [ TSEMICOLON TOBRACE TCOMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production list_sep(class_name_no_array,TCOMMA) -> class_name_no_array

State 421:
## Known stack suffix:
## T_IMPLEMENTS class_name_list
## LR(1) items:
implements_list -> T_IMPLEMENTS class_name_list . [ TOBRACE ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production implements_list -> T_IMPLEMENTS class_name_list

State 422:
## Known stack suffix:
## T_TRAIT ident_class_name type_params_opt implements_list
## LR(1) items:
unticked_class_declaration -> T_TRAIT ident_class_name type_params_opt implements_list . TOBRACE list(member_declaration) TCBRACE [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_ENDWHILE T_ENDSWITCH T_ENDIF T_ENDFOREACH T_ENDFOR T_ENDDECLARE T_EMPTY T_ELSEIF T_ELSE T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DEFAULT T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_CASE T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
## Transitions:
-- On TOBRACE shift to state 423
## Reductions:

State 423:
## Known stack suffix:
## T_TRAIT ident_class_name type_params_opt implements_list TOBRACE
## LR(1) items:
unticked_class_declaration -> T_TRAIT ident_class_name type_params_opt implements_list TOBRACE . list(member_declaration) TCBRACE [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_ENDWHILE T_ENDSWITCH T_ENDIF T_ENDFOREACH T_ENDFOR T_ENDDECLARE T_EMPTY T_ELSEIF T_ELSE T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DEFAULT T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_CASE T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
## Transitions:
-- On T_VAR shift to state 424
-- On T_USE shift to state 425
-- On T_STATIC shift to state 434
-- On T_SL shift to state 16
-- On T_PUBLIC shift to state 126
-- On T_PROTECTED shift to state 127
-- On T_PRIVATE shift to state 128
-- On T_FINAL shift to state 435
-- On T_ELLIPSIS shift to state 459
-- On T_ASYNC shift to state 436
-- On T_ABSTRACT shift to state 437
-- On visibility_modifier shift to state 460
-- On variable_modifiers shift to state 461
-- On option(visibility_modifier) shift to state 478
-- On nonempty_list(member_modifier) shift to state 497
-- On method_declaration shift to state 498
-- On member_modifier shift to state 499
-- On member_declaration shift to state 500
-- On list(member_modifier) shift to state 501
-- On list(member_declaration) shift to state 841
-- On class_modifier shift to state 444
-- On attributes shift to state 572
## Reductions:
-- On TCBRACE
--   reduce production list(member_declaration) ->
-- On T_FUNCTION
--   reduce production list(member_modifier) ->
-- On T_CONST
--   reduce production option(visibility_modifier) ->

State 424:
## Known stack suffix:
## T_VAR
## LR(1) items:
variable_modifiers -> T_VAR . [ T_VARIABLE T_TYPE T_SUPER T_SELF T_PARENT T_NAMESPACE T_METAVAR T_INSTANCEOF T_IDENT T_ENUM T_ARRAY TQUESTION TOPAR TANTISLASH ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production variable_modifiers -> T_VAR

State 425:
## Known stack suffix:
## T_USE
## LR(1) items:
member_declaration -> T_USE . class_name_list TSEMICOLON [ T_VAR T_USE T_STATIC T_SL T_PUBLIC T_PROTECTED T_PRIVATE T_FUNCTION T_FINAL T_ELLIPSIS T_CONST T_ASYNC T_ABSTRACT TCBRACE ]
member_declaration -> T_USE . class_name_list TOBRACE list(trait_rule) TCBRACE [ T_VAR T_USE T_STATIC T_SL T_PUBLIC T_PROTECTED T_PRIVATE T_FUNCTION T_FINAL T_ELLIPSIS T_CONST T_ASYNC T_ABSTRACT TCBRACE ]
## Transitions:
-- On T_TYPE shift to state 6
-- On T_SUPER shift to state 8
-- On T_NAMESPACE shift to state 50
-- On T_METAVAR shift to state 17
-- On T_INSTANCEOF shift to state 52
-- On T_IDENT shift to state 18
-- On T_ENUM shift to state 19
-- On TANTISLASH shift to state 85
-- On qualified_name shift to state 94
-- On qualified_class_name shift to state 415
-- On namespace_name shift to state 102
-- On list_sep(class_name_no_array,TCOMMA) shift to state 417
-- On ident_in_name shift to state 57
-- On ident shift to state 56
-- On class_name_no_array shift to state 420
-- On class_name_list shift to state 426
## Reductions:

State 426:
## Known stack suffix:
## T_USE class_name_list
## LR(1) items:
member_declaration -> T_USE class_name_list . TSEMICOLON [ T_VAR T_USE T_STATIC T_SL T_PUBLIC T_PROTECTED T_PRIVATE T_FUNCTION T_FINAL T_ELLIPSIS T_CONST T_ASYNC T_ABSTRACT TCBRACE ]
member_declaration -> T_USE class_name_list . TOBRACE list(trait_rule) TCBRACE [ T_VAR T_USE T_STATIC T_SL T_PUBLIC T_PROTECTED T_PRIVATE T_FUNCTION T_FINAL T_ELLIPSIS T_CONST T_ASYNC T_ABSTRACT TCBRACE ]
## Transitions:
-- On TSEMICOLON shift to state 427
-- On TOBRACE shift to state 428
## Reductions:

State 427:
## Known stack suffix:
## T_USE class_name_list TSEMICOLON
## LR(1) items:
member_declaration -> T_USE class_name_list TSEMICOLON . [ T_VAR T_USE T_STATIC T_SL T_PUBLIC T_PROTECTED T_PRIVATE T_FUNCTION T_FINAL T_ELLIPSIS T_CONST T_ASYNC T_ABSTRACT TCBRACE ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production member_declaration -> T_USE class_name_list TSEMICOLON

State 428:
## Known stack suffix:
## T_USE class_name_list TOBRACE
## LR(1) items:
member_declaration -> T_USE class_name_list TOBRACE . list(trait_rule) TCBRACE [ T_VAR T_USE T_STATIC T_SL T_PUBLIC T_PROTECTED T_PRIVATE T_FUNCTION T_FINAL T_ELLIPSIS T_CONST T_ASYNC T_ABSTRACT TCBRACE ]
## Transitions:
-- On T_TYPE shift to state 6
-- On T_SUPER shift to state 8
-- On T_NAMESPACE shift to state 50
-- On T_METAVAR shift to state 17
-- On T_INSTANCEOF shift to state 52
-- On T_IDENT shift to state 429
-- On T_ENUM shift to state 19
-- On TANTISLASH shift to state 85
-- On trait_rule shift to state 430
-- On trait_precedence_rule shift to state 431
-- On trait_alias_rule_method shift to state 432
-- On trait_alias_rule shift to state 448
-- On qualified_name_for_traits shift to state 449
-- On qualified_name shift to state 94
-- On qualified_class_name shift to state 455
-- On namespace_name shift to state 102
-- On list(trait_rule) shift to state 457
-- On ident_in_name shift to state 57
-- On ident shift to state 56
## Reductions:
-- On TCBRACE
--   reduce production list(trait_rule) ->

State 429:
## Known stack suffix:
## T_IDENT
## LR(1) items:
ident -> T_IDENT . [ TCOLCOL TANTISLASH ]
trait_alias_rule_method -> T_IDENT . [ T_AS ]
## Transitions:
## Reductions:
-- On TCOLCOL TANTISLASH
--   reduce production ident -> T_IDENT
-- On T_AS
--   reduce production trait_alias_rule_method -> T_IDENT

State 430:
## Known stack suffix:
## trait_rule
## LR(1) items:
list(trait_rule) -> trait_rule . list(trait_rule) [ TCBRACE ]
## Transitions:
-- On T_TYPE shift to state 6
-- On T_SUPER shift to state 8
-- On T_NAMESPACE shift to state 50
-- On T_METAVAR shift to state 17
-- On T_INSTANCEOF shift to state 52
-- On T_IDENT shift to state 429
-- On T_ENUM shift to state 19
-- On TANTISLASH shift to state 85
-- On trait_rule shift to state 430
-- On trait_precedence_rule shift to state 431
-- On trait_alias_rule_method shift to state 432
-- On trait_alias_rule shift to state 448
-- On qualified_name_for_traits shift to state 449
-- On qualified_name shift to state 94
-- On qualified_class_name shift to state 455
-- On namespace_name shift to state 102
-- On list(trait_rule) shift to state 456
-- On ident_in_name shift to state 57
-- On ident shift to state 56
## Reductions:
-- On TCBRACE
--   reduce production list(trait_rule) ->

State 431:
## Known stack suffix:
## trait_precedence_rule
## LR(1) items:
trait_rule -> trait_precedence_rule . [ T_TYPE T_SUPER T_NAMESPACE T_METAVAR T_INSTANCEOF T_IDENT T_ENUM TCBRACE TANTISLASH ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production trait_rule -> trait_precedence_rule

State 432:
## Known stack suffix:
## trait_alias_rule_method
## LR(1) items:
trait_alias_rule -> trait_alias_rule_method . T_AS list(member_modifier) T_IDENT TSEMICOLON [ T_TYPE T_SUPER T_NAMESPACE T_METAVAR T_INSTANCEOF T_IDENT T_ENUM TCBRACE TANTISLASH ]
trait_alias_rule -> trait_alias_rule_method . T_AS nonempty_list(member_modifier) TSEMICOLON [ T_TYPE T_SUPER T_NAMESPACE T_METAVAR T_INSTANCEOF T_IDENT T_ENUM TCBRACE TANTISLASH ]
## Transitions:
-- On T_AS shift to state 433
## Reductions:

State 433:
## Known stack suffix:
## trait_alias_rule_method T_AS
## LR(1) items:
trait_alias_rule -> trait_alias_rule_method T_AS . list(member_modifier) T_IDENT TSEMICOLON [ T_TYPE T_SUPER T_NAMESPACE T_METAVAR T_INSTANCEOF T_IDENT T_ENUM TCBRACE TANTISLASH ]
trait_alias_rule -> trait_alias_rule_method T_AS . nonempty_list(member_modifier) TSEMICOLON [ T_TYPE T_SUPER T_NAMESPACE T_METAVAR T_INSTANCEOF T_IDENT T_ENUM TCBRACE TANTISLASH ]
## Transitions:
-- On T_STATIC shift to state 434
-- On T_PUBLIC shift to state 126
-- On T_PROTECTED shift to state 127
-- On T_PRIVATE shift to state 128
-- On T_FINAL shift to state 435
-- On T_ASYNC shift to state 436
-- On T_ABSTRACT shift to state 437
-- On visibility_modifier shift to state 438
-- On nonempty_list(member_modifier) shift to state 439
-- On member_modifier shift to state 441
-- On list(member_modifier) shift to state 445
-- On class_modifier shift to state 444
## Reductions:
-- On T_IDENT
--   reduce production list(member_modifier) ->

State 434:
## Known stack suffix:
## T_STATIC
## LR(1) items:
member_modifier -> T_STATIC . [ T_VARIABLE T_TYPE T_SUPER T_STATIC T_SELF T_PUBLIC T_PROTECTED T_PRIVATE T_PARENT T_NAMESPACE T_METAVAR T_INSTANCEOF T_IDENT T_FUNCTION T_FINAL T_ENUM T_ASYNC T_ARRAY T_ABSTRACT TSEMICOLON TQUESTION TOPAR TANTISLASH ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production member_modifier -> T_STATIC

State 435:
## Known stack suffix:
## T_FINAL
## LR(1) items:
class_modifier -> T_FINAL . [ T_VARIABLE T_TYPE T_SUPER T_STATIC T_SELF T_PUBLIC T_PROTECTED T_PRIVATE T_PARENT T_NAMESPACE T_METAVAR T_INSTANCEOF T_IDENT T_FUNCTION T_FINAL T_ENUM T_ASYNC T_ARRAY T_ABSTRACT TSEMICOLON TQUESTION TOPAR TANTISLASH ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production class_modifier -> T_FINAL

State 436:
## Known stack suffix:
## T_ASYNC
## LR(1) items:
member_modifier -> T_ASYNC . [ T_VARIABLE T_TYPE T_SUPER T_STATIC T_SELF T_PUBLIC T_PROTECTED T_PRIVATE T_PARENT T_NAMESPACE T_METAVAR T_INSTANCEOF T_IDENT T_FUNCTION T_FINAL T_ENUM T_ASYNC T_ARRAY T_ABSTRACT TSEMICOLON TQUESTION TOPAR TANTISLASH ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production member_modifier -> T_ASYNC

State 437:
## Known stack suffix:
## T_ABSTRACT
## LR(1) items:
class_modifier -> T_ABSTRACT . [ T_VARIABLE T_TYPE T_SUPER T_STATIC T_SELF T_PUBLIC T_PROTECTED T_PRIVATE T_PARENT T_NAMESPACE T_METAVAR T_INSTANCEOF T_IDENT T_FUNCTION T_FINAL T_ENUM T_ASYNC T_ARRAY T_ABSTRACT TSEMICOLON TQUESTION TOPAR TANTISLASH ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production class_modifier -> T_ABSTRACT

State 438:
## Known stack suffix:
## visibility_modifier
## LR(1) items:
member_modifier -> visibility_modifier . [ T_VARIABLE T_TYPE T_SUPER T_STATIC T_SELF T_PUBLIC T_PROTECTED T_PRIVATE T_PARENT T_NAMESPACE T_METAVAR T_INSTANCEOF T_IDENT T_FUNCTION T_FINAL T_ENUM T_ASYNC T_ARRAY T_ABSTRACT TSEMICOLON TQUESTION TOPAR TANTISLASH ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production member_modifier -> visibility_modifier

State 439:
## Known stack suffix:
## trait_alias_rule_method T_AS nonempty_list(member_modifier)
## LR(1) items:
trait_alias_rule -> trait_alias_rule_method T_AS nonempty_list(member_modifier) . TSEMICOLON [ T_TYPE T_SUPER T_NAMESPACE T_METAVAR T_INSTANCEOF T_IDENT T_ENUM TCBRACE TANTISLASH ]
## Transitions:
-- On TSEMICOLON shift to state 440
## Reductions:

State 440:
## Known stack suffix:
## trait_alias_rule_method T_AS nonempty_list(member_modifier) TSEMICOLON
## LR(1) items:
trait_alias_rule -> trait_alias_rule_method T_AS nonempty_list(member_modifier) TSEMICOLON . [ T_TYPE T_SUPER T_NAMESPACE T_METAVAR T_INSTANCEOF T_IDENT T_ENUM TCBRACE TANTISLASH ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production trait_alias_rule -> trait_alias_rule_method T_AS nonempty_list(member_modifier) TSEMICOLON

State 441:
## Known stack suffix:
## member_modifier
## LR(1) items:
list(member_modifier) -> member_modifier . list(member_modifier) [ T_IDENT ]
nonempty_list(member_modifier) -> member_modifier . [ TSEMICOLON ]
nonempty_list(member_modifier) -> member_modifier . nonempty_list(member_modifier) [ TSEMICOLON ]
## Transitions:
-- On T_STATIC shift to state 434
-- On T_PUBLIC shift to state 126
-- On T_PROTECTED shift to state 127
-- On T_PRIVATE shift to state 128
-- On T_FINAL shift to state 435
-- On T_ASYNC shift to state 436
-- On T_ABSTRACT shift to state 437
-- On visibility_modifier shift to state 438
-- On nonempty_list(member_modifier) shift to state 442
-- On member_modifier shift to state 441
-- On list(member_modifier) shift to state 443
-- On class_modifier shift to state 444
## Reductions:
-- On T_IDENT
--   reduce production list(member_modifier) ->
-- On TSEMICOLON
--   reduce production nonempty_list(member_modifier) -> member_modifier

State 442:
## Known stack suffix:
## member_modifier nonempty_list(member_modifier)
## LR(1) items:
nonempty_list(member_modifier) -> member_modifier nonempty_list(member_modifier) . [ T_VARIABLE T_TYPE T_SUPER T_SELF T_PARENT T_NAMESPACE T_METAVAR T_INSTANCEOF T_IDENT T_ENUM T_ARRAY TSEMICOLON TQUESTION TOPAR TANTISLASH ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production nonempty_list(member_modifier) -> member_modifier nonempty_list(member_modifier)

State 443:
## Known stack suffix:
## member_modifier list(member_modifier)
## LR(1) items:
list(member_modifier) -> member_modifier list(member_modifier) . [ T_IDENT T_FUNCTION ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production list(member_modifier) -> member_modifier list(member_modifier)

State 444:
## Known stack suffix:
## class_modifier
## LR(1) items:
member_modifier -> class_modifier . [ T_VARIABLE T_TYPE T_SUPER T_STATIC T_SELF T_PUBLIC T_PROTECTED T_PRIVATE T_PARENT T_NAMESPACE T_METAVAR T_INSTANCEOF T_IDENT T_FUNCTION T_FINAL T_ENUM T_ASYNC T_ARRAY T_ABSTRACT TSEMICOLON TQUESTION TOPAR TANTISLASH ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production member_modifier -> class_modifier

State 445:
## Known stack suffix:
## trait_alias_rule_method T_AS list(member_modifier)
## LR(1) items:
trait_alias_rule -> trait_alias_rule_method T_AS list(member_modifier) . T_IDENT TSEMICOLON [ T_TYPE T_SUPER T_NAMESPACE T_METAVAR T_INSTANCEOF T_IDENT T_ENUM TCBRACE TANTISLASH ]
## Transitions:
-- On T_IDENT shift to state 446
## Reductions:

State 446:
## Known stack suffix:
## trait_alias_rule_method T_AS list(member_modifier) T_IDENT
## LR(1) items:
trait_alias_rule -> trait_alias_rule_method T_AS list(member_modifier) T_IDENT . TSEMICOLON [ T_TYPE T_SUPER T_NAMESPACE T_METAVAR T_INSTANCEOF T_IDENT T_ENUM TCBRACE TANTISLASH ]
## Transitions:
-- On TSEMICOLON shift to state 447
## Reductions:

State 447:
## Known stack suffix:
## trait_alias_rule_method T_AS list(member_modifier) T_IDENT TSEMICOLON
## LR(1) items:
trait_alias_rule -> trait_alias_rule_method T_AS list(member_modifier) T_IDENT TSEMICOLON . [ T_TYPE T_SUPER T_NAMESPACE T_METAVAR T_INSTANCEOF T_IDENT T_ENUM TCBRACE TANTISLASH ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production trait_alias_rule -> trait_alias_rule_method T_AS list(member_modifier) T_IDENT TSEMICOLON

State 448:
## Known stack suffix:
## trait_alias_rule
## LR(1) items:
trait_rule -> trait_alias_rule . [ T_TYPE T_SUPER T_NAMESPACE T_METAVAR T_INSTANCEOF T_IDENT T_ENUM TCBRACE TANTISLASH ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production trait_rule -> trait_alias_rule

State 449:
## Known stack suffix:
## qualified_name_for_traits
## LR(1) items:
trait_alias_rule_method -> qualified_name_for_traits . TCOLCOL T_IDENT [ T_AS ]
trait_precedence_rule -> qualified_name_for_traits . TCOLCOL T_IDENT T_INSTEADOF class_name_list TSEMICOLON [ T_TYPE T_SUPER T_NAMESPACE T_METAVAR T_INSTANCEOF T_IDENT T_ENUM TCBRACE TANTISLASH ]
## Transitions:
-- On TCOLCOL shift to state 450
## Reductions:

State 450:
## Known stack suffix:
## qualified_name_for_traits TCOLCOL
## LR(1) items:
trait_alias_rule_method -> qualified_name_for_traits TCOLCOL . T_IDENT [ T_AS ]
trait_precedence_rule -> qualified_name_for_traits TCOLCOL . T_IDENT T_INSTEADOF class_name_list TSEMICOLON [ T_TYPE T_SUPER T_NAMESPACE T_METAVAR T_INSTANCEOF T_IDENT T_ENUM TCBRACE TANTISLASH ]
## Transitions:
-- On T_IDENT shift to state 451
## Reductions:

State 451:
## Known stack suffix:
## qualified_name_for_traits TCOLCOL T_IDENT
## LR(1) items:
trait_alias_rule_method -> qualified_name_for_traits TCOLCOL T_IDENT . [ T_AS ]
trait_precedence_rule -> qualified_name_for_traits TCOLCOL T_IDENT . T_INSTEADOF class_name_list TSEMICOLON [ T_TYPE T_SUPER T_NAMESPACE T_METAVAR T_INSTANCEOF T_IDENT T_ENUM TCBRACE TANTISLASH ]
## Transitions:
-- On T_INSTEADOF shift to state 452
## Reductions:
-- On T_AS
--   reduce production trait_alias_rule_method -> qualified_name_for_traits TCOLCOL T_IDENT

State 452:
## Known stack suffix:
## qualified_name_for_traits TCOLCOL T_IDENT T_INSTEADOF
## LR(1) items:
trait_precedence_rule -> qualified_name_for_traits TCOLCOL T_IDENT T_INSTEADOF . class_name_list TSEMICOLON [ T_TYPE T_SUPER T_NAMESPACE T_METAVAR T_INSTANCEOF T_IDENT T_ENUM TCBRACE TANTISLASH ]
## Transitions:
-- On T_TYPE shift to state 6
-- On T_SUPER shift to state 8
-- On T_NAMESPACE shift to state 50
-- On T_METAVAR shift to state 17
-- On T_INSTANCEOF shift to state 52
-- On T_IDENT shift to state 18
-- On T_ENUM shift to state 19
-- On TANTISLASH shift to state 85
-- On qualified_name shift to state 94
-- On qualified_class_name shift to state 415
-- On namespace_name shift to state 102
-- On list_sep(class_name_no_array,TCOMMA) shift to state 417
-- On ident_in_name shift to state 57
-- On ident shift to state 56
-- On class_name_no_array shift to state 420
-- On class_name_list shift to state 453
## Reductions:

State 453:
## Known stack suffix:
## qualified_name_for_traits TCOLCOL T_IDENT T_INSTEADOF class_name_list
## LR(1) items:
trait_precedence_rule -> qualified_name_for_traits TCOLCOL T_IDENT T_INSTEADOF class_name_list . TSEMICOLON [ T_TYPE T_SUPER T_NAMESPACE T_METAVAR T_INSTANCEOF T_IDENT T_ENUM TCBRACE TANTISLASH ]
## Transitions:
-- On TSEMICOLON shift to state 454
## Reductions:

State 454:
## Known stack suffix:
## qualified_name_for_traits TCOLCOL T_IDENT T_INSTEADOF class_name_list TSEMICOLON
## LR(1) items:
trait_precedence_rule -> qualified_name_for_traits TCOLCOL T_IDENT T_INSTEADOF class_name_list TSEMICOLON . [ T_TYPE T_SUPER T_NAMESPACE T_METAVAR T_INSTANCEOF T_IDENT T_ENUM TCBRACE TANTISLASH ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production trait_precedence_rule -> qualified_name_for_traits TCOLCOL T_IDENT T_INSTEADOF class_name_list TSEMICOLON

State 455:
## Known stack suffix:
## qualified_class_name
## LR(1) items:
qualified_name_for_traits -> qualified_class_name . [ TCOLCOL ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production qualified_name_for_traits -> qualified_class_name

State 456:
## Known stack suffix:
## trait_rule list(trait_rule)
## LR(1) items:
list(trait_rule) -> trait_rule list(trait_rule) . [ TCBRACE ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production list(trait_rule) -> trait_rule list(trait_rule)

State 457:
## Known stack suffix:
## T_USE class_name_list TOBRACE list(trait_rule)
## LR(1) items:
member_declaration -> T_USE class_name_list TOBRACE list(trait_rule) . TCBRACE [ T_VAR T_USE T_STATIC T_SL T_PUBLIC T_PROTECTED T_PRIVATE T_FUNCTION T_FINAL T_ELLIPSIS T_CONST T_ASYNC T_ABSTRACT TCBRACE ]
## Transitions:
-- On TCBRACE shift to state 458
## Reductions:

State 458:
## Known stack suffix:
## T_USE class_name_list TOBRACE list(trait_rule) TCBRACE
## LR(1) items:
member_declaration -> T_USE class_name_list TOBRACE list(trait_rule) TCBRACE . [ T_VAR T_USE T_STATIC T_SL T_PUBLIC T_PROTECTED T_PRIVATE T_FUNCTION T_FINAL T_ELLIPSIS T_CONST T_ASYNC T_ABSTRACT TCBRACE ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production member_declaration -> T_USE class_name_list TOBRACE list(trait_rule) TCBRACE

State 459:
## Known stack suffix:
## T_ELLIPSIS
## LR(1) items:
member_declaration -> T_ELLIPSIS . [ T_VAR T_USE T_STATIC T_SL T_PUBLIC T_PROTECTED T_PRIVATE T_FUNCTION T_FINAL T_ELLIPSIS T_CONST T_ASYNC T_ABSTRACT TCBRACE ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production member_declaration -> T_ELLIPSIS

State 460:
## Known stack suffix:
## visibility_modifier
## LR(1) items:
member_modifier -> visibility_modifier . [ T_VARIABLE T_TYPE T_SUPER T_STATIC T_SELF T_PUBLIC T_PROTECTED T_PRIVATE T_PARENT T_NAMESPACE T_METAVAR T_INSTANCEOF T_IDENT T_FUNCTION T_FINAL T_ENUM T_ASYNC T_ARRAY T_ABSTRACT TQUESTION TOPAR TANTISLASH ]
option(visibility_modifier) -> visibility_modifier . [ T_CONST ]
## Transitions:
## Reductions:
-- On T_VARIABLE T_TYPE T_SUPER T_STATIC T_SELF T_PUBLIC T_PROTECTED T_PRIVATE T_PARENT T_NAMESPACE T_METAVAR T_INSTANCEOF T_IDENT T_FUNCTION T_FINAL T_ENUM T_ASYNC T_ARRAY T_ABSTRACT TQUESTION TOPAR TANTISLASH
--   reduce production member_modifier -> visibility_modifier
-- On T_CONST
--   reduce production option(visibility_modifier) -> visibility_modifier

State 461:
## Known stack suffix:
## variable_modifiers
## LR(1) items:
member_declaration -> variable_modifiers . list_sep(class_variable,TCOMMA) TSEMICOLON [ T_VAR T_USE T_STATIC T_SL T_PUBLIC T_PROTECTED T_PRIVATE T_FUNCTION T_FINAL T_ELLIPSIS T_CONST T_ASYNC T_ABSTRACT TCBRACE ]
member_declaration -> variable_modifiers . type_php list_sep(class_variable,TCOMMA) TSEMICOLON [ T_VAR T_USE T_STATIC T_SL T_PUBLIC T_PROTECTED T_PRIVATE T_FUNCTION T_FINAL T_ELLIPSIS T_CONST T_ASYNC T_ABSTRACT TCBRACE ]
## Transitions:
-- On T_VARIABLE shift to state 462
-- On T_TYPE shift to state 6
-- On T_SUPER shift to state 8
-- On T_SELF shift to state 77
-- On T_PARENT shift to state 78
-- On T_NAMESPACE shift to state 50
-- On T_METAVAR shift to state 466
-- On T_INSTANCEOF shift to state 52
-- On T_IDENT shift to state 18
-- On T_ENUM shift to state 19
-- On T_ARRAY shift to state 79
-- On TQUESTION shift to state 80
-- On TOPAR shift to state 81
-- On TANTISLASH shift to state 85
-- On type_php shift to state 469
-- On qualified_name shift to state 94
-- On qualified_class_name_or_array shift to state 95
-- On qualified_class_name shift to state 100
-- On primary_type_php shift to state 101
-- On namespace_name shift to state 102
-- On list_sep(class_variable,TCOMMA) shift to state 476
-- On ident_in_name shift to state 57
-- On ident shift to state 56
-- On class_variable shift to state 475
-- On class_name shift to state 103
## Reductions:

State 462:
## Known stack suffix:
## T_VARIABLE
## LR(1) items:
class_variable -> T_VARIABLE . [ TSEMICOLON TCOMMA ]
class_variable -> T_VARIABLE . TEQ static_scalar [ TSEMICOLON TCOMMA ]
## Transitions:
-- On TEQ shift to state 463
## Reductions:
-- On TSEMICOLON TCOMMA
--   reduce production class_variable -> T_VARIABLE

State 463:
## Known stack suffix:
## T_VARIABLE TEQ
## LR(1) items:
class_variable -> T_VARIABLE TEQ . static_scalar [ TSEMICOLON TCOMMA ]
## Transitions:
-- On T__AT shift to state 1
-- On T_YIELD shift to state 2
-- On T_VARIABLE shift to state 3
-- On T_UNSET_CAST shift to state 5
-- On T_TYPE shift to state 6
-- On T_TRAIT_C shift to state 7
-- On T_SUPER shift to state 8
-- On T_STRING_CAST shift to state 9
-- On T_STATIC shift to state 10
-- On T_START_HEREDOC shift to state 25
-- On T_SELF shift to state 40
-- On T_REQUIRE_ONCE shift to state 41
-- On T_REQUIRE shift to state 42
-- On T_PRINT shift to state 43
-- On T_PARENT shift to state 44
-- On T_OBJECT_CAST shift to state 45
-- On T_NEW shift to state 46
-- On T_NAMESPACE_C shift to state 49
-- On T_NAMESPACE shift to state 50
-- On T_METHOD_C shift to state 58
-- On T_METAVAR shift to state 17
-- On T_LNUMBER shift to state 59
-- On T_LIST shift to state 69
-- On T_LINE shift to state 60
-- On T_LAMBDA_OPAR shift to state 73
-- On T_ISSET shift to state 133
-- On T_INT_CAST shift to state 135
-- On T_INSTANCEOF shift to state 52
-- On T_INCLUDE_ONCE shift to state 136
-- On T_INCLUDE shift to state 137
-- On T_INC shift to state 138
-- On T_IDENT shift to state 18
-- On T_FUNC_C shift to state 61
-- On T_FUNCTION shift to state 139
-- On T_FILE shift to state 62
-- On T_EXIT shift to state 160
-- On T_EVAL shift to state 162
-- On T_ENUM shift to state 19
-- On T_EMPTY shift to state 164
-- On T_DOUBLE_CAST shift to state 168
-- On T_DNUMBER shift to state 63
-- On T_DIR shift to state 64
-- On T_DEC shift to state 169
-- On T_CONSTANT_ENCAPSED_STRING shift to state 65
-- On T_CLONE shift to state 170
-- On T_CLASS_C shift to state 66
-- On T_BOOL_CAST shift to state 171
-- On T_AWAIT shift to state 172
-- On T_ASYNC shift to state 173
-- On T_ARRAY_CAST shift to state 200
-- On T_ARRAY shift to state 201
-- On TTILDE shift to state 204
-- On TPLUS shift to state 205
-- On TOPAR shift to state 206
-- On TOBRA shift to state 209
-- On TMINUS shift to state 210
-- On TGUIL shift to state 211
-- On TDOLLARDOLLAR shift to state 213
-- On TDOLLAR shift to state 214
-- On TBANG shift to state 216
-- On TBACKQUOTE shift to state 217
-- On TANTISLASH shift to state 85
-- On LDots shift to state 222
-- On static_scalar shift to state 464
-- On simple_expr shift to state 223
-- On qualified_name shift to state 94
-- On qualified_class_name shift to state 225
-- On primary_expr shift to state 226
-- On new_expr shift to state 227
-- On namespace_name shift to state 102
-- On member_expr shift to state 228
-- On lambda_expr shift to state 231
-- On ident_in_name shift to state 57
-- On ident shift to state 56
-- On expr shift to state 465
-- On constant shift to state 239
-- On call_expr shift to state 240
## Reductions:

State 464:
## Known stack suffix:
## T_VARIABLE TEQ static_scalar
## LR(1) items:
class_variable -> T_VARIABLE TEQ static_scalar . [ TSEMICOLON TCOMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production class_variable -> T_VARIABLE TEQ static_scalar

State 465:
## Known stack suffix:
## expr
## LR(1) items:
expr -> expr . T_INC [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TAND ]
expr -> expr . T_DEC [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TAND ]
expr -> expr . T_BOOLEAN_OR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TAND ]
expr -> expr . T_BOOLEAN_AND expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TAND ]
expr -> expr . T_LOGICAL_OR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TAND ]
expr -> expr . T_LOGICAL_AND expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TAND ]
expr -> expr . T_LOGICAL_XOR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TAND ]
expr -> expr . TPLUS expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TAND ]
expr -> expr . TMINUS expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TAND ]
expr -> expr . TMUL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TAND ]
expr -> expr . TDIV expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TAND ]
expr -> expr . TMOD expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TAND ]
expr -> expr . TPOW expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TAND ]
expr -> expr . TAND expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TAND ]
expr -> expr . TOR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TAND ]
expr -> expr . TXOR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TAND ]
expr -> expr . T_SL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TAND ]
expr -> expr . T_SR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TAND ]
expr -> expr . TDOT expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TAND ]
expr -> expr . T_IS_IDENTICAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TAND ]
expr -> expr . T_IS_NOT_IDENTICAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TAND ]
expr -> expr . T_IS_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TAND ]
expr -> expr . T_IS_NOT_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TAND ]
expr -> expr . TSMALLER expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TAND ]
expr -> expr . T_IS_SMALLER_OR_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TAND ]
expr -> expr . TGREATER expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TAND ]
expr -> expr . T_IS_GREATER_OR_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TAND ]
expr -> expr . T_ROCKET expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TAND ]
expr -> expr . TQUESTION expr TCOLON expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TAND ]
expr -> expr . TQUESTION TCOLON expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TAND ]
expr -> expr . TQUESTION TQUESTION expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TAND ]
expr -> expr . T_INSTANCEOF expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TAND ]
static_scalar -> expr . [ T_LAMBDA_CPAR TSEMICOLON TCPAR TCOMMA ]
## Transitions:
-- On T_SR shift to state 233
-- On T_SL shift to state 244
-- On T_ROCKET shift to state 260
-- On T_LOGICAL_XOR shift to state 270
-- On T_LOGICAL_OR shift to state 298
-- On T_LOGICAL_AND shift to state 272
-- On T_IS_SMALLER_OR_EQUAL shift to state 262
-- On T_IS_NOT_IDENTICAL shift to state 274
-- On T_IS_NOT_EQUAL shift to state 276
-- On T_IS_IDENTICAL shift to state 278
-- On T_IS_GREATER_OR_EQUAL shift to state 264
-- On T_IS_EQUAL shift to state 280
-- On T_INSTANCEOF shift to state 235
-- On T_INC shift to state 237
-- On T_DEC shift to state 238
-- On T_BOOLEAN_OR shift to state 282
-- On T_BOOLEAN_AND shift to state 284
-- On TXOR shift to state 286
-- On TSMALLER shift to state 266
-- On TQUESTION shift to state 292
-- On TPOW shift to state 246
-- On TPLUS shift to state 248
-- On TOR shift to state 290
-- On TMUL shift to state 250
-- On TMOD shift to state 252
-- On TMINUS shift to state 256
-- On TGREATER shift to state 268
-- On TDOT shift to state 258
-- On TDIV shift to state 254
-- On TAND shift to state 288
## Reductions:
-- On T_LAMBDA_CPAR TSEMICOLON TCPAR TCOMMA
--   reduce production static_scalar -> expr

State 466:
## Known stack suffix:
## T_METAVAR
## LR(1) items:
class_variable -> T_METAVAR . [ TSEMICOLON TCOMMA ]
class_variable -> T_METAVAR . TEQ static_scalar [ TSEMICOLON TCOMMA ]
ident -> T_METAVAR . [ T_VARIABLE T_METAVAR TSMALLER TCOLCOL TANTISLASH ]
## Transitions:
-- On TEQ shift to state 467
## Reductions:
-- On TSEMICOLON TCOMMA
--   reduce production class_variable -> T_METAVAR
-- On T_VARIABLE T_METAVAR TSMALLER TCOLCOL TANTISLASH
--   reduce production ident -> T_METAVAR

State 467:
## Known stack suffix:
## T_METAVAR TEQ
## LR(1) items:
class_variable -> T_METAVAR TEQ . static_scalar [ TSEMICOLON TCOMMA ]
## Transitions:
-- On T__AT shift to state 1
-- On T_YIELD shift to state 2
-- On T_VARIABLE shift to state 3
-- On T_UNSET_CAST shift to state 5
-- On T_TYPE shift to state 6
-- On T_TRAIT_C shift to state 7
-- On T_SUPER shift to state 8
-- On T_STRING_CAST shift to state 9
-- On T_STATIC shift to state 10
-- On T_START_HEREDOC shift to state 25
-- On T_SELF shift to state 40
-- On T_REQUIRE_ONCE shift to state 41
-- On T_REQUIRE shift to state 42
-- On T_PRINT shift to state 43
-- On T_PARENT shift to state 44
-- On T_OBJECT_CAST shift to state 45
-- On T_NEW shift to state 46
-- On T_NAMESPACE_C shift to state 49
-- On T_NAMESPACE shift to state 50
-- On T_METHOD_C shift to state 58
-- On T_METAVAR shift to state 17
-- On T_LNUMBER shift to state 59
-- On T_LIST shift to state 69
-- On T_LINE shift to state 60
-- On T_LAMBDA_OPAR shift to state 73
-- On T_ISSET shift to state 133
-- On T_INT_CAST shift to state 135
-- On T_INSTANCEOF shift to state 52
-- On T_INCLUDE_ONCE shift to state 136
-- On T_INCLUDE shift to state 137
-- On T_INC shift to state 138
-- On T_IDENT shift to state 18
-- On T_FUNC_C shift to state 61
-- On T_FUNCTION shift to state 139
-- On T_FILE shift to state 62
-- On T_EXIT shift to state 160
-- On T_EVAL shift to state 162
-- On T_ENUM shift to state 19
-- On T_EMPTY shift to state 164
-- On T_DOUBLE_CAST shift to state 168
-- On T_DNUMBER shift to state 63
-- On T_DIR shift to state 64
-- On T_DEC shift to state 169
-- On T_CONSTANT_ENCAPSED_STRING shift to state 65
-- On T_CLONE shift to state 170
-- On T_CLASS_C shift to state 66
-- On T_BOOL_CAST shift to state 171
-- On T_AWAIT shift to state 172
-- On T_ASYNC shift to state 173
-- On T_ARRAY_CAST shift to state 200
-- On T_ARRAY shift to state 201
-- On TTILDE shift to state 204
-- On TPLUS shift to state 205
-- On TOPAR shift to state 206
-- On TOBRA shift to state 209
-- On TMINUS shift to state 210
-- On TGUIL shift to state 211
-- On TDOLLARDOLLAR shift to state 213
-- On TDOLLAR shift to state 214
-- On TBANG shift to state 216
-- On TBACKQUOTE shift to state 217
-- On TANTISLASH shift to state 85
-- On LDots shift to state 222
-- On static_scalar shift to state 468
-- On simple_expr shift to state 223
-- On qualified_name shift to state 94
-- On qualified_class_name shift to state 225
-- On primary_expr shift to state 226
-- On new_expr shift to state 227
-- On namespace_name shift to state 102
-- On member_expr shift to state 228
-- On lambda_expr shift to state 231
-- On ident_in_name shift to state 57
-- On ident shift to state 56
-- On expr shift to state 465
-- On constant shift to state 239
-- On call_expr shift to state 240
## Reductions:

State 468:
## Known stack suffix:
## T_METAVAR TEQ static_scalar
## LR(1) items:
class_variable -> T_METAVAR TEQ static_scalar . [ TSEMICOLON TCOMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production class_variable -> T_METAVAR TEQ static_scalar

State 469:
## Known stack suffix:
## variable_modifiers type_php
## LR(1) items:
member_declaration -> variable_modifiers type_php . list_sep(class_variable,TCOMMA) TSEMICOLON [ T_VAR T_USE T_STATIC T_SL T_PUBLIC T_PROTECTED T_PRIVATE T_FUNCTION T_FINAL T_ELLIPSIS T_CONST T_ASYNC T_ABSTRACT TCBRACE ]
type_php -> type_php . TCOLCOL primary_type_php [ T_VARIABLE T_METAVAR TCOLCOL ]
## Transitions:
-- On T_VARIABLE shift to state 462
-- On T_METAVAR shift to state 470
-- On TCOLCOL shift to state 93
-- On list_sep(class_variable,TCOMMA) shift to state 471
-- On class_variable shift to state 475
## Reductions:

State 470:
## Known stack suffix:
## T_METAVAR
## LR(1) items:
class_variable -> T_METAVAR . [ TSEMICOLON TCOMMA ]
class_variable -> T_METAVAR . TEQ static_scalar [ TSEMICOLON TCOMMA ]
## Transitions:
-- On TEQ shift to state 467
## Reductions:
-- On TSEMICOLON TCOMMA
--   reduce production class_variable -> T_METAVAR

State 471:
## Known stack suffix:
## variable_modifiers type_php list_sep(class_variable,TCOMMA)
## LR(1) items:
list_sep(class_variable,TCOMMA) -> list_sep(class_variable,TCOMMA) . TCOMMA class_variable [ TSEMICOLON TCOMMA ]
member_declaration -> variable_modifiers type_php list_sep(class_variable,TCOMMA) . TSEMICOLON [ T_VAR T_USE T_STATIC T_SL T_PUBLIC T_PROTECTED T_PRIVATE T_FUNCTION T_FINAL T_ELLIPSIS T_CONST T_ASYNC T_ABSTRACT TCBRACE ]
## Transitions:
-- On TSEMICOLON shift to state 472
-- On TCOMMA shift to state 473
## Reductions:

State 472:
## Known stack suffix:
## variable_modifiers type_php list_sep(class_variable,TCOMMA) TSEMICOLON
## LR(1) items:
member_declaration -> variable_modifiers type_php list_sep(class_variable,TCOMMA) TSEMICOLON . [ T_VAR T_USE T_STATIC T_SL T_PUBLIC T_PROTECTED T_PRIVATE T_FUNCTION T_FINAL T_ELLIPSIS T_CONST T_ASYNC T_ABSTRACT TCBRACE ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production member_declaration -> variable_modifiers type_php list_sep(class_variable,TCOMMA) TSEMICOLON

State 473:
## Known stack suffix:
## list_sep(class_variable,TCOMMA) TCOMMA
## LR(1) items:
list_sep(class_variable,TCOMMA) -> list_sep(class_variable,TCOMMA) TCOMMA . class_variable [ TSEMICOLON TCOMMA ]
## Transitions:
-- On T_VARIABLE shift to state 462
-- On T_METAVAR shift to state 470
-- On class_variable shift to state 474
## Reductions:

State 474:
## Known stack suffix:
## list_sep(class_variable,TCOMMA) TCOMMA class_variable
## LR(1) items:
list_sep(class_variable,TCOMMA) -> list_sep(class_variable,TCOMMA) TCOMMA class_variable . [ TSEMICOLON TCOMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production list_sep(class_variable,TCOMMA) -> list_sep(class_variable,TCOMMA) TCOMMA class_variable

State 475:
## Known stack suffix:
## class_variable
## LR(1) items:
list_sep(class_variable,TCOMMA) -> class_variable . [ TSEMICOLON TCOMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production list_sep(class_variable,TCOMMA) -> class_variable

State 476:
## Known stack suffix:
## variable_modifiers list_sep(class_variable,TCOMMA)
## LR(1) items:
list_sep(class_variable,TCOMMA) -> list_sep(class_variable,TCOMMA) . TCOMMA class_variable [ TSEMICOLON TCOMMA ]
member_declaration -> variable_modifiers list_sep(class_variable,TCOMMA) . TSEMICOLON [ T_VAR T_USE T_STATIC T_SL T_PUBLIC T_PROTECTED T_PRIVATE T_FUNCTION T_FINAL T_ELLIPSIS T_CONST T_ASYNC T_ABSTRACT TCBRACE ]
## Transitions:
-- On TSEMICOLON shift to state 477
-- On TCOMMA shift to state 473
## Reductions:

State 477:
## Known stack suffix:
## variable_modifiers list_sep(class_variable,TCOMMA) TSEMICOLON
## LR(1) items:
member_declaration -> variable_modifiers list_sep(class_variable,TCOMMA) TSEMICOLON . [ T_VAR T_USE T_STATIC T_SL T_PUBLIC T_PROTECTED T_PRIVATE T_FUNCTION T_FINAL T_ELLIPSIS T_CONST T_ASYNC T_ABSTRACT TCBRACE ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production member_declaration -> variable_modifiers list_sep(class_variable,TCOMMA) TSEMICOLON

State 478:
## Known stack suffix:
## option(visibility_modifier)
## LR(1) items:
member_declaration -> option(visibility_modifier) . T_CONST list_sep(class_constant_declaration,TCOMMA) TSEMICOLON [ T_VAR T_USE T_STATIC T_SL T_PUBLIC T_PROTECTED T_PRIVATE T_FUNCTION T_FINAL T_ELLIPSIS T_CONST T_ASYNC T_ABSTRACT TCBRACE ]
member_declaration -> option(visibility_modifier) . T_CONST type_php list_sep(class_constant_declaration,TCOMMA) TSEMICOLON [ T_VAR T_USE T_STATIC T_SL T_PUBLIC T_PROTECTED T_PRIVATE T_FUNCTION T_FINAL T_ELLIPSIS T_CONST T_ASYNC T_ABSTRACT TCBRACE ]
## Transitions:
-- On T_CONST shift to state 479
## Reductions:

State 479:
## Known stack suffix:
## option(visibility_modifier) T_CONST
## LR(1) items:
member_declaration -> option(visibility_modifier) T_CONST . list_sep(class_constant_declaration,TCOMMA) TSEMICOLON [ T_VAR T_USE T_STATIC T_SL T_PUBLIC T_PROTECTED T_PRIVATE T_FUNCTION T_FINAL T_ELLIPSIS T_CONST T_ASYNC T_ABSTRACT TCBRACE ]
member_declaration -> option(visibility_modifier) T_CONST . type_php list_sep(class_constant_declaration,TCOMMA) TSEMICOLON [ T_VAR T_USE T_STATIC T_SL T_PUBLIC T_PROTECTED T_PRIVATE T_FUNCTION T_FINAL T_ELLIPSIS T_CONST T_ASYNC T_ABSTRACT TCBRACE ]
## Transitions:
-- On T_TYPE shift to state 6
-- On T_SUPER shift to state 8
-- On T_SELF shift to state 77
-- On T_PARENT shift to state 78
-- On T_NEW shift to state 480
-- On T_NAMESPACE shift to state 50
-- On T_METAVAR shift to state 17
-- On T_LOGICAL_AND shift to state 481
-- On T_LIST shift to state 482
-- On T_INSTANCEOF shift to state 52
-- On T_IDENT shift to state 18
-- On T_FROM shift to state 483
-- On T_ENUM shift to state 19
-- On T_ARRAY shift to state 79
-- On TQUESTION shift to state 80
-- On TOPAR shift to state 81
-- On TANTISLASH shift to state 85
-- On type_php shift to state 484
-- On qualified_name shift to state 94
-- On qualified_class_name_or_array shift to state 95
-- On qualified_class_name shift to state 100
-- On primary_type_php shift to state 101
-- On namespace_name shift to state 102
-- On list_sep(class_constant_declaration,TCOMMA) shift to state 494
-- On ident_in_name shift to state 57
-- On ident_constant_name shift to state 488
-- On ident shift to state 496
-- On class_name shift to state 103
-- On class_constant_declaration shift to state 493
## Reductions:

State 480:
## Known stack suffix:
## T_NEW
## LR(1) items:
ident_constant_name -> T_NEW . [ TEQ ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production ident_constant_name -> T_NEW

State 481:
## Known stack suffix:
## T_LOGICAL_AND
## LR(1) items:
ident_constant_name -> T_LOGICAL_AND . [ TEQ ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production ident_constant_name -> T_LOGICAL_AND

State 482:
## Known stack suffix:
## T_LIST
## LR(1) items:
ident_constant_name -> T_LIST . [ TEQ ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production ident_constant_name -> T_LIST

State 483:
## Known stack suffix:
## T_FROM
## LR(1) items:
ident_constant_name -> T_FROM . [ TEQ ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production ident_constant_name -> T_FROM

State 484:
## Known stack suffix:
## option(visibility_modifier) T_CONST type_php
## LR(1) items:
member_declaration -> option(visibility_modifier) T_CONST type_php . list_sep(class_constant_declaration,TCOMMA) TSEMICOLON [ T_VAR T_USE T_STATIC T_SL T_PUBLIC T_PROTECTED T_PRIVATE T_FUNCTION T_FINAL T_ELLIPSIS T_CONST T_ASYNC T_ABSTRACT TCBRACE ]
type_php -> type_php . TCOLCOL primary_type_php [ T_TYPE T_SUPER T_NEW T_METAVAR T_LOGICAL_AND T_LIST T_IDENT T_FROM T_ENUM TCOLCOL ]
## Transitions:
-- On T_TYPE shift to state 6
-- On T_SUPER shift to state 8
-- On T_NEW shift to state 480
-- On T_METAVAR shift to state 17
-- On T_LOGICAL_AND shift to state 481
-- On T_LIST shift to state 482
-- On T_IDENT shift to state 18
-- On T_FROM shift to state 483
-- On T_ENUM shift to state 19
-- On TCOLCOL shift to state 93
-- On list_sep(class_constant_declaration,TCOMMA) shift to state 485
-- On ident_constant_name shift to state 488
-- On ident shift to state 491
-- On class_constant_declaration shift to state 493
## Reductions:

State 485:
## Known stack suffix:
## option(visibility_modifier) T_CONST type_php list_sep(class_constant_declaration,TCOMMA)
## LR(1) items:
list_sep(class_constant_declaration,TCOMMA) -> list_sep(class_constant_declaration,TCOMMA) . TCOMMA class_constant_declaration [ TSEMICOLON TCOMMA ]
member_declaration -> option(visibility_modifier) T_CONST type_php list_sep(class_constant_declaration,TCOMMA) . TSEMICOLON [ T_VAR T_USE T_STATIC T_SL T_PUBLIC T_PROTECTED T_PRIVATE T_FUNCTION T_FINAL T_ELLIPSIS T_CONST T_ASYNC T_ABSTRACT TCBRACE ]
## Transitions:
-- On TSEMICOLON shift to state 486
-- On TCOMMA shift to state 487
## Reductions:

State 486:
## Known stack suffix:
## option(visibility_modifier) T_CONST type_php list_sep(class_constant_declaration,TCOMMA) TSEMICOLON
## LR(1) items:
member_declaration -> option(visibility_modifier) T_CONST type_php list_sep(class_constant_declaration,TCOMMA) TSEMICOLON . [ T_VAR T_USE T_STATIC T_SL T_PUBLIC T_PROTECTED T_PRIVATE T_FUNCTION T_FINAL T_ELLIPSIS T_CONST T_ASYNC T_ABSTRACT TCBRACE ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production member_declaration -> option(visibility_modifier) T_CONST type_php list_sep(class_constant_declaration,TCOMMA) TSEMICOLON

State 487:
## Known stack suffix:
## list_sep(class_constant_declaration,TCOMMA) TCOMMA
## LR(1) items:
list_sep(class_constant_declaration,TCOMMA) -> list_sep(class_constant_declaration,TCOMMA) TCOMMA . class_constant_declaration [ TSEMICOLON TCOMMA ]
## Transitions:
-- On T_TYPE shift to state 6
-- On T_SUPER shift to state 8
-- On T_NEW shift to state 480
-- On T_METAVAR shift to state 17
-- On T_LOGICAL_AND shift to state 481
-- On T_LIST shift to state 482
-- On T_IDENT shift to state 18
-- On T_FROM shift to state 483
-- On T_ENUM shift to state 19
-- On ident_constant_name shift to state 488
-- On ident shift to state 491
-- On class_constant_declaration shift to state 492
## Reductions:

State 488:
## Known stack suffix:
## ident_constant_name
## LR(1) items:
class_constant_declaration -> ident_constant_name . TEQ static_scalar [ TSEMICOLON TCOMMA ]
## Transitions:
-- On TEQ shift to state 489
## Reductions:

State 489:
## Known stack suffix:
## ident_constant_name TEQ
## LR(1) items:
class_constant_declaration -> ident_constant_name TEQ . static_scalar [ TSEMICOLON TCOMMA ]
## Transitions:
-- On T__AT shift to state 1
-- On T_YIELD shift to state 2
-- On T_VARIABLE shift to state 3
-- On T_UNSET_CAST shift to state 5
-- On T_TYPE shift to state 6
-- On T_TRAIT_C shift to state 7
-- On T_SUPER shift to state 8
-- On T_STRING_CAST shift to state 9
-- On T_STATIC shift to state 10
-- On T_START_HEREDOC shift to state 25
-- On T_SELF shift to state 40
-- On T_REQUIRE_ONCE shift to state 41
-- On T_REQUIRE shift to state 42
-- On T_PRINT shift to state 43
-- On T_PARENT shift to state 44
-- On T_OBJECT_CAST shift to state 45
-- On T_NEW shift to state 46
-- On T_NAMESPACE_C shift to state 49
-- On T_NAMESPACE shift to state 50
-- On T_METHOD_C shift to state 58
-- On T_METAVAR shift to state 17
-- On T_LNUMBER shift to state 59
-- On T_LIST shift to state 69
-- On T_LINE shift to state 60
-- On T_LAMBDA_OPAR shift to state 73
-- On T_ISSET shift to state 133
-- On T_INT_CAST shift to state 135
-- On T_INSTANCEOF shift to state 52
-- On T_INCLUDE_ONCE shift to state 136
-- On T_INCLUDE shift to state 137
-- On T_INC shift to state 138
-- On T_IDENT shift to state 18
-- On T_FUNC_C shift to state 61
-- On T_FUNCTION shift to state 139
-- On T_FILE shift to state 62
-- On T_EXIT shift to state 160
-- On T_EVAL shift to state 162
-- On T_ENUM shift to state 19
-- On T_EMPTY shift to state 164
-- On T_DOUBLE_CAST shift to state 168
-- On T_DNUMBER shift to state 63
-- On T_DIR shift to state 64
-- On T_DEC shift to state 169
-- On T_CONSTANT_ENCAPSED_STRING shift to state 65
-- On T_CLONE shift to state 170
-- On T_CLASS_C shift to state 66
-- On T_BOOL_CAST shift to state 171
-- On T_AWAIT shift to state 172
-- On T_ASYNC shift to state 173
-- On T_ARRAY_CAST shift to state 200
-- On T_ARRAY shift to state 201
-- On TTILDE shift to state 204
-- On TPLUS shift to state 205
-- On TOPAR shift to state 206
-- On TOBRA shift to state 209
-- On TMINUS shift to state 210
-- On TGUIL shift to state 211
-- On TDOLLARDOLLAR shift to state 213
-- On TDOLLAR shift to state 214
-- On TBANG shift to state 216
-- On TBACKQUOTE shift to state 217
-- On TANTISLASH shift to state 85
-- On LDots shift to state 222
-- On static_scalar shift to state 490
-- On simple_expr shift to state 223
-- On qualified_name shift to state 94
-- On qualified_class_name shift to state 225
-- On primary_expr shift to state 226
-- On new_expr shift to state 227
-- On namespace_name shift to state 102
-- On member_expr shift to state 228
-- On lambda_expr shift to state 231
-- On ident_in_name shift to state 57
-- On ident shift to state 56
-- On expr shift to state 465
-- On constant shift to state 239
-- On call_expr shift to state 240
## Reductions:

State 490:
## Known stack suffix:
## ident_constant_name TEQ static_scalar
## LR(1) items:
class_constant_declaration -> ident_constant_name TEQ static_scalar . [ TSEMICOLON TCOMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production class_constant_declaration -> ident_constant_name TEQ static_scalar

State 491:
## Known stack suffix:
## ident
## LR(1) items:
ident_constant_name -> ident . [ TEQ ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production ident_constant_name -> ident

State 492:
## Known stack suffix:
## list_sep(class_constant_declaration,TCOMMA) TCOMMA class_constant_declaration
## LR(1) items:
list_sep(class_constant_declaration,TCOMMA) -> list_sep(class_constant_declaration,TCOMMA) TCOMMA class_constant_declaration . [ TSEMICOLON TCOMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production list_sep(class_constant_declaration,TCOMMA) -> list_sep(class_constant_declaration,TCOMMA) TCOMMA class_constant_declaration

State 493:
## Known stack suffix:
## class_constant_declaration
## LR(1) items:
list_sep(class_constant_declaration,TCOMMA) -> class_constant_declaration . [ TSEMICOLON TCOMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production list_sep(class_constant_declaration,TCOMMA) -> class_constant_declaration

State 494:
## Known stack suffix:
## option(visibility_modifier) T_CONST list_sep(class_constant_declaration,TCOMMA)
## LR(1) items:
list_sep(class_constant_declaration,TCOMMA) -> list_sep(class_constant_declaration,TCOMMA) . TCOMMA class_constant_declaration [ TSEMICOLON TCOMMA ]
member_declaration -> option(visibility_modifier) T_CONST list_sep(class_constant_declaration,TCOMMA) . TSEMICOLON [ T_VAR T_USE T_STATIC T_SL T_PUBLIC T_PROTECTED T_PRIVATE T_FUNCTION T_FINAL T_ELLIPSIS T_CONST T_ASYNC T_ABSTRACT TCBRACE ]
## Transitions:
-- On TSEMICOLON shift to state 495
-- On TCOMMA shift to state 487
## Reductions:

State 495:
## Known stack suffix:
## option(visibility_modifier) T_CONST list_sep(class_constant_declaration,TCOMMA) TSEMICOLON
## LR(1) items:
member_declaration -> option(visibility_modifier) T_CONST list_sep(class_constant_declaration,TCOMMA) TSEMICOLON . [ T_VAR T_USE T_STATIC T_SL T_PUBLIC T_PROTECTED T_PRIVATE T_FUNCTION T_FINAL T_ELLIPSIS T_CONST T_ASYNC T_ABSTRACT TCBRACE ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production member_declaration -> option(visibility_modifier) T_CONST list_sep(class_constant_declaration,TCOMMA) TSEMICOLON

State 496:
## Known stack suffix:
## ident
## LR(1) items:
ident_constant_name -> ident . [ TEQ ]
ident_in_name -> ident . [ T_TYPE T_SUPER T_NEW T_METAVAR T_LOGICAL_AND T_LIST T_IDENT T_FROM T_ENUM TSMALLER TCOLCOL TANTISLASH ]
## Transitions:
## Reductions:
-- On TEQ
--   reduce production ident_constant_name -> ident
-- On T_TYPE T_SUPER T_NEW T_METAVAR T_LOGICAL_AND T_LIST T_IDENT T_FROM T_ENUM TSMALLER TCOLCOL TANTISLASH
--   reduce production ident_in_name -> ident

State 497:
## Known stack suffix:
## nonempty_list(member_modifier)
## LR(1) items:
variable_modifiers -> nonempty_list(member_modifier) . [ T_VARIABLE T_TYPE T_SUPER T_SELF T_PARENT T_NAMESPACE T_METAVAR T_INSTANCEOF T_IDENT T_ENUM T_ARRAY TQUESTION TOPAR TANTISLASH ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production variable_modifiers -> nonempty_list(member_modifier)

State 498:
## Known stack suffix:
## method_declaration
## LR(1) items:
member_declaration -> method_declaration . [ T_VAR T_USE T_STATIC T_SL T_PUBLIC T_PROTECTED T_PRIVATE T_FUNCTION T_FINAL T_ELLIPSIS T_CONST T_ASYNC T_ABSTRACT TCBRACE ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production member_declaration -> method_declaration

State 499:
## Known stack suffix:
## member_modifier
## LR(1) items:
list(member_modifier) -> member_modifier . list(member_modifier) [ T_FUNCTION ]
nonempty_list(member_modifier) -> member_modifier . [ T_VARIABLE T_TYPE T_SUPER T_SELF T_PARENT T_NAMESPACE T_METAVAR T_INSTANCEOF T_IDENT T_ENUM T_ARRAY TQUESTION TOPAR TANTISLASH ]
nonempty_list(member_modifier) -> member_modifier . nonempty_list(member_modifier) [ T_VARIABLE T_TYPE T_SUPER T_SELF T_PARENT T_NAMESPACE T_METAVAR T_INSTANCEOF T_IDENT T_ENUM T_ARRAY TQUESTION TOPAR TANTISLASH ]
## Transitions:
-- On T_STATIC shift to state 434
-- On T_PUBLIC shift to state 126
-- On T_PROTECTED shift to state 127
-- On T_PRIVATE shift to state 128
-- On T_FINAL shift to state 435
-- On T_ASYNC shift to state 436
-- On T_ABSTRACT shift to state 437
-- On visibility_modifier shift to state 438
-- On nonempty_list(member_modifier) shift to state 442
-- On member_modifier shift to state 499
-- On list(member_modifier) shift to state 443
-- On class_modifier shift to state 444
## Reductions:
-- On T_FUNCTION
--   reduce production list(member_modifier) ->
-- On T_VARIABLE T_TYPE T_SUPER T_SELF T_PARENT T_NAMESPACE T_METAVAR T_INSTANCEOF T_IDENT T_ENUM T_ARRAY TQUESTION TOPAR TANTISLASH
--   reduce production nonempty_list(member_modifier) -> member_modifier

State 500:
## Known stack suffix:
## member_declaration
## LR(1) items:
list(member_declaration) -> member_declaration . list(member_declaration) [ TCBRACE ]
## Transitions:
-- On T_VAR shift to state 424
-- On T_USE shift to state 425
-- On T_STATIC shift to state 434
-- On T_SL shift to state 16
-- On T_PUBLIC shift to state 126
-- On T_PROTECTED shift to state 127
-- On T_PRIVATE shift to state 128
-- On T_FINAL shift to state 435
-- On T_ELLIPSIS shift to state 459
-- On T_ASYNC shift to state 436
-- On T_ABSTRACT shift to state 437
-- On visibility_modifier shift to state 460
-- On variable_modifiers shift to state 461
-- On option(visibility_modifier) shift to state 478
-- On nonempty_list(member_modifier) shift to state 497
-- On method_declaration shift to state 498
-- On member_modifier shift to state 499
-- On member_declaration shift to state 500
-- On list(member_modifier) shift to state 501
-- On list(member_declaration) shift to state 840
-- On class_modifier shift to state 444
-- On attributes shift to state 572
## Reductions:
-- On TCBRACE
--   reduce production list(member_declaration) ->
-- On T_FUNCTION
--   reduce production list(member_modifier) ->
-- On T_CONST
--   reduce production option(visibility_modifier) ->

State 501:
## Known stack suffix:
## list(member_modifier)
## LR(1) items:
method_declaration -> list(member_modifier) . T_FUNCTION is_reference ident_method_name type_params_opt TOPAR parameter_list TCPAR option(return_type) method_body [ T_VAR T_USE T_STATIC T_SL T_PUBLIC T_PROTECTED T_PRIVATE T_FUNCTION T_FINAL T_ELLIPSIS T_CONST T_ASYNC T_ABSTRACT TCBRACE ]
## Transitions:
-- On T_FUNCTION shift to state 502
## Reductions:

State 502:
## Known stack suffix:
## list(member_modifier) T_FUNCTION
## LR(1) items:
method_declaration -> list(member_modifier) T_FUNCTION . is_reference ident_method_name type_params_opt TOPAR parameter_list TCPAR option(return_type) method_body [ T_VAR T_USE T_STATIC T_SL T_PUBLIC T_PROTECTED T_PRIVATE T_FUNCTION T_FINAL T_ELLIPSIS T_CONST T_ASYNC T_ABSTRACT TCBRACE ]
## Transitions:
-- On TAND shift to state 12
-- On option(TAND) shift to state 13
-- On is_reference shift to state 503
## Reductions:
-- On T_TYPE T_SUPER T_SELF T_PUBLIC T_PARENT T_METAVAR T_INSTANCEOF T_INCLUDE T_IDENT T_FROM T_ENUM T_DEFAULT T_ASYNC
--   reduce production option(TAND) ->

State 503:
## Known stack suffix:
## list(member_modifier) T_FUNCTION is_reference
## LR(1) items:
method_declaration -> list(member_modifier) T_FUNCTION is_reference . ident_method_name type_params_opt TOPAR parameter_list TCPAR option(return_type) method_body [ T_VAR T_USE T_STATIC T_SL T_PUBLIC T_PROTECTED T_PRIVATE T_FUNCTION T_FINAL T_ELLIPSIS T_CONST T_ASYNC T_ABSTRACT TCBRACE ]
## Transitions:
-- On T_TYPE shift to state 6
-- On T_SUPER shift to state 8
-- On T_SELF shift to state 504
-- On T_PUBLIC shift to state 505
-- On T_PARENT shift to state 506
-- On T_METAVAR shift to state 17
-- On T_INSTANCEOF shift to state 507
-- On T_INCLUDE shift to state 508
-- On T_IDENT shift to state 18
-- On T_FROM shift to state 509
-- On T_ENUM shift to state 19
-- On T_DEFAULT shift to state 510
-- On T_ASYNC shift to state 511
-- On ident_method_name shift to state 512
-- On ident shift to state 839
## Reductions:

State 504:
## Known stack suffix:
## T_SELF
## LR(1) items:
ident_method_name -> T_SELF . [ TSMALLER TOPAR ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production ident_method_name -> T_SELF

State 505:
## Known stack suffix:
## T_PUBLIC
## LR(1) items:
ident_method_name -> T_PUBLIC . [ TSMALLER TOPAR ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production ident_method_name -> T_PUBLIC

State 506:
## Known stack suffix:
## T_PARENT
## LR(1) items:
ident_method_name -> T_PARENT . [ TSMALLER TOPAR ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production ident_method_name -> T_PARENT

State 507:
## Known stack suffix:
## T_INSTANCEOF
## LR(1) items:
ident_method_name -> T_INSTANCEOF . [ TSMALLER TOPAR ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production ident_method_name -> T_INSTANCEOF

State 508:
## Known stack suffix:
## T_INCLUDE
## LR(1) items:
ident_method_name -> T_INCLUDE . [ TSMALLER TOPAR ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production ident_method_name -> T_INCLUDE

State 509:
## Known stack suffix:
## T_FROM
## LR(1) items:
ident_method_name -> T_FROM . [ TSMALLER TOPAR ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production ident_method_name -> T_FROM

State 510:
## Known stack suffix:
## T_DEFAULT
## LR(1) items:
ident_method_name -> T_DEFAULT . [ TSMALLER TOPAR ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production ident_method_name -> T_DEFAULT

State 511:
## Known stack suffix:
## T_ASYNC
## LR(1) items:
ident_method_name -> T_ASYNC . [ TSMALLER TOPAR ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production ident_method_name -> T_ASYNC

State 512:
## Known stack suffix:
## list(member_modifier) T_FUNCTION is_reference ident_method_name
## LR(1) items:
method_declaration -> list(member_modifier) T_FUNCTION is_reference ident_method_name . type_params_opt TOPAR parameter_list TCPAR option(return_type) method_body [ T_VAR T_USE T_STATIC T_SL T_PUBLIC T_PROTECTED T_PRIVATE T_FUNCTION T_FINAL T_ELLIPSIS T_CONST T_ASYNC T_ABSTRACT TCBRACE ]
## Transitions:
-- On TSMALLER shift to state 395
-- On type_params_opt shift to state 513
## Reductions:
-- On TOPAR
--   reduce production type_params_opt ->

State 513:
## Known stack suffix:
## list(member_modifier) T_FUNCTION is_reference ident_method_name type_params_opt
## LR(1) items:
method_declaration -> list(member_modifier) T_FUNCTION is_reference ident_method_name type_params_opt . TOPAR parameter_list TCPAR option(return_type) method_body [ T_VAR T_USE T_STATIC T_SL T_PUBLIC T_PROTECTED T_PRIVATE T_FUNCTION T_FINAL T_ELLIPSIS T_CONST T_ASYNC T_ABSTRACT TCBRACE ]
## Transitions:
-- On TOPAR shift to state 514
## Reductions:

State 514:
## Known stack suffix:
## list(member_modifier) T_FUNCTION is_reference ident_method_name type_params_opt TOPAR
## LR(1) items:
method_declaration -> list(member_modifier) T_FUNCTION is_reference ident_method_name type_params_opt TOPAR . parameter_list TCPAR option(return_type) method_body [ T_VAR T_USE T_STATIC T_SL T_PUBLIC T_PROTECTED T_PRIVATE T_FUNCTION T_FINAL T_ELLIPSIS T_CONST T_ASYNC T_ABSTRACT TCBRACE ]
## Transitions:
-- On T_SL shift to state 16
-- On parameter_list shift to state 515
-- On parameter shift to state 122
-- On option(attributes) shift to state 125
-- On attributes shift to state 181
## Reductions:
-- On T_VARIABLE T_TYPE T_SUPER T_SELF T_PUBLIC T_PROTECTED T_PRIVATE T_PARENT T_NAMESPACE T_METAVAR T_INSTANCEOF T_IDENT T_ENUM T_ELLIPSIS T_ARRAY TQUESTION TOPAR TANTISLASH TAND
--   reduce production option(attributes) ->
-- On TCPAR
--   reduce production parameter_list ->

State 515:
## Known stack suffix:
## list(member_modifier) T_FUNCTION is_reference ident_method_name type_params_opt TOPAR parameter_list
## LR(1) items:
method_declaration -> list(member_modifier) T_FUNCTION is_reference ident_method_name type_params_opt TOPAR parameter_list . TCPAR option(return_type) method_body [ T_VAR T_USE T_STATIC T_SL T_PUBLIC T_PROTECTED T_PRIVATE T_FUNCTION T_FINAL T_ELLIPSIS T_CONST T_ASYNC T_ABSTRACT TCBRACE ]
## Transitions:
-- On TCPAR shift to state 516
## Reductions:

State 516:
## Known stack suffix:
## list(member_modifier) T_FUNCTION is_reference ident_method_name type_params_opt TOPAR parameter_list TCPAR
## LR(1) items:
method_declaration -> list(member_modifier) T_FUNCTION is_reference ident_method_name type_params_opt TOPAR parameter_list TCPAR . option(return_type) method_body [ T_VAR T_USE T_STATIC T_SL T_PUBLIC T_PROTECTED T_PRIVATE T_FUNCTION T_FINAL T_ELLIPSIS T_CONST T_ASYNC T_ABSTRACT TCBRACE ]
## Transitions:
-- On TCOLON shift to state 76
-- On return_type shift to state 119
-- On option(return_type) shift to state 517
## Reductions:
-- On TSEMICOLON TOBRACE
--   reduce production option(return_type) ->

State 517:
## Known stack suffix:
## list(member_modifier) T_FUNCTION is_reference ident_method_name type_params_opt TOPAR parameter_list TCPAR option(return_type)
## LR(1) items:
method_declaration -> list(member_modifier) T_FUNCTION is_reference ident_method_name type_params_opt TOPAR parameter_list TCPAR option(return_type) . method_body [ T_VAR T_USE T_STATIC T_SL T_PUBLIC T_PROTECTED T_PRIVATE T_FUNCTION T_FINAL T_ELLIPSIS T_CONST T_ASYNC T_ABSTRACT TCBRACE ]
## Transitions:
-- On TSEMICOLON shift to state 518
-- On TOBRACE shift to state 519
-- On method_body shift to state 838
## Reductions:

State 518:
## Known stack suffix:
## TSEMICOLON
## LR(1) items:
method_body -> TSEMICOLON . [ T_VAR T_USE T_STATIC T_SL T_PUBLIC T_PROTECTED T_PRIVATE T_FUNCTION T_FINAL T_ELLIPSIS T_CONST T_ASYNC T_ABSTRACT TCBRACE ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production method_body -> TSEMICOLON

State 519:
## Known stack suffix:
## TOBRACE
## LR(1) items:
method_body -> TOBRACE . list(inner_statement) TCBRACE [ T_VAR T_USE T_STATIC T_SL T_PUBLIC T_PROTECTED T_PRIVATE T_FUNCTION T_FINAL T_ELLIPSIS T_CONST T_ASYNC T_ABSTRACT TCBRACE ]
## Transitions:
-- On T__AT shift to state 1
-- On T_YIELD shift to state 2
-- On T_WHILE shift to state 158
-- On T_VARIABLE shift to state 3
-- On T_USE shift to state 190
-- On T_UNSET_CAST shift to state 5
-- On T_UNSET shift to state 197
-- On T_TYPE shift to state 6
-- On T_TRY shift to state 391
-- On T_TRAIT_C shift to state 7
-- On T_TRAIT shift to state 393
-- On T_THROW shift to state 520
-- On T_SWITCH shift to state 525
-- On T_SUPER shift to state 8
-- On T_STRING_CAST shift to state 9
-- On T_STATIC shift to state 536
-- On T_START_HEREDOC shift to state 25
-- On T_SL shift to state 16
-- On T_SELF shift to state 40
-- On T_RETURN shift to state 553
-- On T_REQUIRE_ONCE shift to state 41
-- On T_REQUIRE shift to state 42
-- On T_PRINT shift to state 43
-- On T_PARENT shift to state 44
-- On T_OPEN_TAG_WITH_ECHO shift to state 558
-- On T_OBJECT_CAST shift to state 45
-- On T_NEW shift to state 46
-- On T_NAMESPACE_C shift to state 49
-- On T_NAMESPACE shift to state 50
-- On T_METHOD_C shift to state 58
-- On T_METAVAR shift to state 17
-- On T_LNUMBER shift to state 59
-- On T_LIST shift to state 69
-- On T_LINE shift to state 60
-- On T_LAMBDA_OPAR shift to state 73
-- On T_ISSET shift to state 133
-- On T_INT_CAST shift to state 135
-- On T_INTERFACE shift to state 563
-- On T_INSTANCEOF shift to state 52
-- On T_INLINE_HTML shift to state 576
-- On T_INCLUDE_ONCE shift to state 136
-- On T_INCLUDE shift to state 137
-- On T_INC shift to state 138
-- On T_IF shift to state 577
-- On T_IDENT shift to state 18
-- On T_GLOBAL shift to state 587
-- On T_FUNC_C shift to state 61
-- On T_FUNCTION shift to state 657
-- On T_FOREACH shift to state 600
-- On T_FOR shift to state 624
-- On T_FINAL shift to state 666
-- On T_FILE shift to state 62
-- On T_EXIT shift to state 160
-- On T_EVAL shift to state 162
-- On T_ENUM shift to state 668
-- On T_EMPTY shift to state 164
-- On T_ELLIPSIS shift to state 635
-- On T_ECHO shift to state 636
-- On T_DOUBLE_CAST shift to state 168
-- On T_DO shift to state 644
-- On T_DNUMBER shift to state 63
-- On T_DIR shift to state 64
-- On T_DECLARE shift to state 645
-- On T_DEC shift to state 169
-- On T_CONTINUE shift to state 649
-- On T_CONSTANT_ENCAPSED_STRING shift to state 65
-- On T_CLONE shift to state 170
-- On T_CLASS_C shift to state 66
-- On T_CLASS shift to state 682
-- On T_BREAK shift to state 652
-- On T_BOOL_CAST shift to state 171
-- On T_AWAIT shift to state 172
-- On T_ASYNC shift to state 683
-- On T_ARRAY_CAST shift to state 200
-- On T_ARRAY shift to state 201
-- On T_ABSTRACT shift to state 694
-- On TTILDE shift to state 204
-- On TSEMICOLON shift to state 655
-- On TPLUS shift to state 205
-- On TOPAR shift to state 206
-- On TOBRACE shift to state 656
-- On TOBRA shift to state 209
-- On TMINUS shift to state 210
-- On TGUIL shift to state 211
-- On TDOLLARDOLLAR shift to state 213
-- On TDOLLAR shift to state 214
-- On TBANG shift to state 216
-- On TBACKQUOTE shift to state 217
-- On TANTISLASH shift to state 85
-- On LDots shift to state 222
-- On unticked_function_declaration shift to state 696
-- On unticked_class_declaration shift to state 697
-- On statement shift to state 698
-- On simple_expr shift to state 223
-- On qualified_name shift to state 94
-- On qualified_class_name shift to state 225
-- On primary_expr shift to state 226
-- On new_expr shift to state 227
-- On namespace_name shift to state 102
-- On member_expr shift to state 228
-- On list(inner_statement) shift to state 836
-- On lambda_expr shift to state 231
-- On inner_statement shift to state 701
-- On ident_in_name shift to state 57
-- On ident shift to state 56
-- On function_declaration shift to state 703
-- On expr shift to state 704
-- On constant shift to state 239
-- On class_entry_type shift to state 706
-- On class_declaration shift to state 716
-- On call_expr shift to state 240
-- On attributes shift to state 717
## Reductions:
-- On TCBRACE
--   reduce production list(inner_statement) ->

State 520:
## Known stack suffix:
## T_THROW
## LR(1) items:
statement -> T_THROW . expr TSEMICOLON [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_ENDWHILE T_ENDSWITCH T_ENDIF T_ENDFOREACH T_ENDFOR T_ENDDECLARE T_EMPTY T_ELSEIF T_ELSE T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DEFAULT T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_CASE T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
statement -> T_THROW . T_ELLIPSIS TSEMICOLON [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_ENDWHILE T_ENDSWITCH T_ENDIF T_ENDFOREACH T_ENDFOR T_ENDDECLARE T_EMPTY T_ELSEIF T_ELSE T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DEFAULT T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_CASE T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
## Transitions:
-- On T__AT shift to state 1
-- On T_YIELD shift to state 2
-- On T_VARIABLE shift to state 3
-- On T_UNSET_CAST shift to state 5
-- On T_TYPE shift to state 6
-- On T_TRAIT_C shift to state 7
-- On T_SUPER shift to state 8
-- On T_STRING_CAST shift to state 9
-- On T_STATIC shift to state 10
-- On T_START_HEREDOC shift to state 25
-- On T_SELF shift to state 40
-- On T_REQUIRE_ONCE shift to state 41
-- On T_REQUIRE shift to state 42
-- On T_PRINT shift to state 43
-- On T_PARENT shift to state 44
-- On T_OBJECT_CAST shift to state 45
-- On T_NEW shift to state 46
-- On T_NAMESPACE_C shift to state 49
-- On T_NAMESPACE shift to state 50
-- On T_METHOD_C shift to state 58
-- On T_METAVAR shift to state 17
-- On T_LNUMBER shift to state 59
-- On T_LIST shift to state 69
-- On T_LINE shift to state 60
-- On T_LAMBDA_OPAR shift to state 73
-- On T_ISSET shift to state 133
-- On T_INT_CAST shift to state 135
-- On T_INSTANCEOF shift to state 52
-- On T_INCLUDE_ONCE shift to state 136
-- On T_INCLUDE shift to state 137
-- On T_INC shift to state 138
-- On T_IDENT shift to state 18
-- On T_FUNC_C shift to state 61
-- On T_FUNCTION shift to state 139
-- On T_FILE shift to state 62
-- On T_EXIT shift to state 160
-- On T_EVAL shift to state 162
-- On T_ENUM shift to state 19
-- On T_EMPTY shift to state 164
-- On T_ELLIPSIS shift to state 521
-- On T_DOUBLE_CAST shift to state 168
-- On T_DNUMBER shift to state 63
-- On T_DIR shift to state 64
-- On T_DEC shift to state 169
-- On T_CONSTANT_ENCAPSED_STRING shift to state 65
-- On T_CLONE shift to state 170
-- On T_CLASS_C shift to state 66
-- On T_BOOL_CAST shift to state 171
-- On T_AWAIT shift to state 172
-- On T_ASYNC shift to state 173
-- On T_ARRAY_CAST shift to state 200
-- On T_ARRAY shift to state 201
-- On TTILDE shift to state 204
-- On TPLUS shift to state 205
-- On TOPAR shift to state 206
-- On TOBRA shift to state 209
-- On TMINUS shift to state 210
-- On TGUIL shift to state 211
-- On TDOLLARDOLLAR shift to state 213
-- On TDOLLAR shift to state 214
-- On TBANG shift to state 216
-- On TBACKQUOTE shift to state 217
-- On TANTISLASH shift to state 85
-- On LDots shift to state 222
-- On simple_expr shift to state 223
-- On qualified_name shift to state 94
-- On qualified_class_name shift to state 225
-- On primary_expr shift to state 226
-- On new_expr shift to state 227
-- On namespace_name shift to state 102
-- On member_expr shift to state 228
-- On lambda_expr shift to state 231
-- On ident_in_name shift to state 57
-- On ident shift to state 56
-- On expr shift to state 523
-- On constant shift to state 239
-- On call_expr shift to state 240
## Reductions:

State 521:
## Known stack suffix:
## T_THROW T_ELLIPSIS
## LR(1) items:
statement -> T_THROW T_ELLIPSIS . TSEMICOLON [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_ENDWHILE T_ENDSWITCH T_ENDIF T_ENDFOREACH T_ENDFOR T_ENDDECLARE T_EMPTY T_ELSEIF T_ELSE T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DEFAULT T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_CASE T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
## Transitions:
-- On TSEMICOLON shift to state 522
## Reductions:

State 522:
## Known stack suffix:
## T_THROW T_ELLIPSIS TSEMICOLON
## LR(1) items:
statement -> T_THROW T_ELLIPSIS TSEMICOLON . [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_ENDWHILE T_ENDSWITCH T_ENDIF T_ENDFOREACH T_ENDFOR T_ENDDECLARE T_EMPTY T_ELSEIF T_ELSE T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DEFAULT T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_CASE T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production statement -> T_THROW T_ELLIPSIS TSEMICOLON

State 523:
## Known stack suffix:
## T_THROW expr
## LR(1) items:
expr -> expr . T_INC [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TAND ]
expr -> expr . T_DEC [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TAND ]
expr -> expr . T_BOOLEAN_OR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TAND ]
expr -> expr . T_BOOLEAN_AND expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TAND ]
expr -> expr . T_LOGICAL_OR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TAND ]
expr -> expr . T_LOGICAL_AND expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TAND ]
expr -> expr . T_LOGICAL_XOR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TAND ]
expr -> expr . TPLUS expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TAND ]
expr -> expr . TMINUS expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TAND ]
expr -> expr . TMUL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TAND ]
expr -> expr . TDIV expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TAND ]
expr -> expr . TMOD expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TAND ]
expr -> expr . TPOW expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TAND ]
expr -> expr . TAND expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TAND ]
expr -> expr . TOR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TAND ]
expr -> expr . TXOR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TAND ]
expr -> expr . T_SL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TAND ]
expr -> expr . T_SR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TAND ]
expr -> expr . TDOT expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TAND ]
expr -> expr . T_IS_IDENTICAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TAND ]
expr -> expr . T_IS_NOT_IDENTICAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TAND ]
expr -> expr . T_IS_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TAND ]
expr -> expr . T_IS_NOT_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TAND ]
expr -> expr . TSMALLER expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TAND ]
expr -> expr . T_IS_SMALLER_OR_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TAND ]
expr -> expr . TGREATER expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TAND ]
expr -> expr . T_IS_GREATER_OR_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TAND ]
expr -> expr . T_ROCKET expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TAND ]
expr -> expr . TQUESTION expr TCOLON expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TAND ]
expr -> expr . TQUESTION TCOLON expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TAND ]
expr -> expr . TQUESTION TQUESTION expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TAND ]
expr -> expr . T_INSTANCEOF expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TAND ]
statement -> T_THROW expr . TSEMICOLON [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_ENDWHILE T_ENDSWITCH T_ENDIF T_ENDFOREACH T_ENDFOR T_ENDDECLARE T_EMPTY T_ELSEIF T_ELSE T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DEFAULT T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_CASE T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
## Transitions:
-- On T_SR shift to state 233
-- On T_SL shift to state 244
-- On T_ROCKET shift to state 260
-- On T_LOGICAL_XOR shift to state 270
-- On T_LOGICAL_OR shift to state 298
-- On T_LOGICAL_AND shift to state 272
-- On T_IS_SMALLER_OR_EQUAL shift to state 262
-- On T_IS_NOT_IDENTICAL shift to state 274
-- On T_IS_NOT_EQUAL shift to state 276
-- On T_IS_IDENTICAL shift to state 278
-- On T_IS_GREATER_OR_EQUAL shift to state 264
-- On T_IS_EQUAL shift to state 280
-- On T_INSTANCEOF shift to state 235
-- On T_INC shift to state 237
-- On T_DEC shift to state 238
-- On T_BOOLEAN_OR shift to state 282
-- On T_BOOLEAN_AND shift to state 284
-- On TXOR shift to state 286
-- On TSMALLER shift to state 266
-- On TSEMICOLON shift to state 524
-- On TQUESTION shift to state 292
-- On TPOW shift to state 246
-- On TPLUS shift to state 248
-- On TOR shift to state 290
-- On TMUL shift to state 250
-- On TMOD shift to state 252
-- On TMINUS shift to state 256
-- On TGREATER shift to state 268
-- On TDOT shift to state 258
-- On TDIV shift to state 254
-- On TAND shift to state 288
## Reductions:

State 524:
## Known stack suffix:
## T_THROW expr TSEMICOLON
## LR(1) items:
statement -> T_THROW expr TSEMICOLON . [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_ENDWHILE T_ENDSWITCH T_ENDIF T_ENDFOREACH T_ENDFOR T_ENDDECLARE T_EMPTY T_ELSEIF T_ELSE T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DEFAULT T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_CASE T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production statement -> T_THROW expr TSEMICOLON

State 525:
## Known stack suffix:
## T_SWITCH
## LR(1) items:
statement -> T_SWITCH . TOPAR expr TCPAR switch_case_list [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_ENDWHILE T_ENDSWITCH T_ENDIF T_ENDFOREACH T_ENDFOR T_ENDDECLARE T_EMPTY T_ELSEIF T_ELSE T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DEFAULT T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_CASE T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
statement -> T_SWITCH . TOPAR T_ELLIPSIS TCPAR switch_case_list [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_ENDWHILE T_ENDSWITCH T_ENDIF T_ENDFOREACH T_ENDFOR T_ENDDECLARE T_EMPTY T_ELSEIF T_ELSE T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DEFAULT T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_CASE T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
## Transitions:
-- On TOPAR shift to state 526
## Reductions:

State 526:
## Known stack suffix:
## T_SWITCH TOPAR
## LR(1) items:
statement -> T_SWITCH TOPAR . expr TCPAR switch_case_list [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_ENDWHILE T_ENDSWITCH T_ENDIF T_ENDFOREACH T_ENDFOR T_ENDDECLARE T_EMPTY T_ELSEIF T_ELSE T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DEFAULT T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_CASE T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
statement -> T_SWITCH TOPAR . T_ELLIPSIS TCPAR switch_case_list [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_ENDWHILE T_ENDSWITCH T_ENDIF T_ENDFOREACH T_ENDFOR T_ENDDECLARE T_EMPTY T_ELSEIF T_ELSE T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DEFAULT T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_CASE T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
## Transitions:
-- On T__AT shift to state 1
-- On T_YIELD shift to state 2
-- On T_VARIABLE shift to state 3
-- On T_UNSET_CAST shift to state 5
-- On T_TYPE shift to state 6
-- On T_TRAIT_C shift to state 7
-- On T_SUPER shift to state 8
-- On T_STRING_CAST shift to state 9
-- On T_STATIC shift to state 10
-- On T_START_HEREDOC shift to state 25
-- On T_SELF shift to state 40
-- On T_REQUIRE_ONCE shift to state 41
-- On T_REQUIRE shift to state 42
-- On T_PRINT shift to state 43
-- On T_PARENT shift to state 44
-- On T_OBJECT_CAST shift to state 45
-- On T_NEW shift to state 46
-- On T_NAMESPACE_C shift to state 49
-- On T_NAMESPACE shift to state 50
-- On T_METHOD_C shift to state 58
-- On T_METAVAR shift to state 17
-- On T_LNUMBER shift to state 59
-- On T_LIST shift to state 69
-- On T_LINE shift to state 60
-- On T_LAMBDA_OPAR shift to state 73
-- On T_ISSET shift to state 133
-- On T_INT_CAST shift to state 135
-- On T_INSTANCEOF shift to state 52
-- On T_INCLUDE_ONCE shift to state 136
-- On T_INCLUDE shift to state 137
-- On T_INC shift to state 138
-- On T_IDENT shift to state 18
-- On T_FUNC_C shift to state 61
-- On T_FUNCTION shift to state 139
-- On T_FILE shift to state 62
-- On T_EXIT shift to state 160
-- On T_EVAL shift to state 162
-- On T_ENUM shift to state 19
-- On T_EMPTY shift to state 164
-- On T_ELLIPSIS shift to state 527
-- On T_DOUBLE_CAST shift to state 168
-- On T_DNUMBER shift to state 63
-- On T_DIR shift to state 64
-- On T_DEC shift to state 169
-- On T_CONSTANT_ENCAPSED_STRING shift to state 65
-- On T_CLONE shift to state 170
-- On T_CLASS_C shift to state 66
-- On T_BOOL_CAST shift to state 171
-- On T_AWAIT shift to state 172
-- On T_ASYNC shift to state 173
-- On T_ARRAY_CAST shift to state 200
-- On T_ARRAY shift to state 201
-- On TTILDE shift to state 204
-- On TPLUS shift to state 205
-- On TOPAR shift to state 206
-- On TOBRA shift to state 209
-- On TMINUS shift to state 210
-- On TGUIL shift to state 211
-- On TDOLLARDOLLAR shift to state 213
-- On TDOLLAR shift to state 214
-- On TBANG shift to state 216
-- On TBACKQUOTE shift to state 217
-- On TANTISLASH shift to state 85
-- On LDots shift to state 222
-- On simple_expr shift to state 223
-- On qualified_name shift to state 94
-- On qualified_class_name shift to state 225
-- On primary_expr shift to state 226
-- On new_expr shift to state 227
-- On namespace_name shift to state 102
-- On member_expr shift to state 228
-- On lambda_expr shift to state 231
-- On ident_in_name shift to state 57
-- On ident shift to state 56
-- On expr shift to state 833
-- On constant shift to state 239
-- On call_expr shift to state 240
## Reductions:

State 527:
## Known stack suffix:
## T_SWITCH TOPAR T_ELLIPSIS
## LR(1) items:
statement -> T_SWITCH TOPAR T_ELLIPSIS . TCPAR switch_case_list [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_ENDWHILE T_ENDSWITCH T_ENDIF T_ENDFOREACH T_ENDFOR T_ENDDECLARE T_EMPTY T_ELSEIF T_ELSE T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DEFAULT T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_CASE T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
## Transitions:
-- On TCPAR shift to state 528
## Reductions:

State 528:
## Known stack suffix:
## T_SWITCH TOPAR T_ELLIPSIS TCPAR
## LR(1) items:
statement -> T_SWITCH TOPAR T_ELLIPSIS TCPAR . switch_case_list [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_ENDWHILE T_ENDSWITCH T_ENDIF T_ENDFOREACH T_ENDFOR T_ENDDECLARE T_EMPTY T_ELSEIF T_ELSE T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DEFAULT T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_CASE T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
## Transitions:
-- On TOBRACE shift to state 529
-- On TCOLON shift to state 824
-- On switch_case_list shift to state 832
## Reductions:

State 529:
## Known stack suffix:
## TOBRACE
## LR(1) items:
switch_case_list -> TOBRACE . case_list TCBRACE [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_ENDWHILE T_ENDSWITCH T_ENDIF T_ENDFOREACH T_ENDFOR T_ENDDECLARE T_EMPTY T_ELSEIF T_ELSE T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DEFAULT T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_CASE T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
switch_case_list -> TOBRACE . TSEMICOLON case_list TCBRACE [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_ENDWHILE T_ENDSWITCH T_ENDIF T_ENDFOREACH T_ENDFOR T_ENDDECLARE T_EMPTY T_ELSEIF T_ELSE T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DEFAULT T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_CASE T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
## Transitions:
-- On TSEMICOLON shift to state 530
-- On case_list_rev shift to state 531
-- On case_list shift to state 822
## Reductions:
-- On T_DEFAULT T_CASE TCBRACE
--   reduce production case_list_rev ->

State 530:
## Known stack suffix:
## TOBRACE TSEMICOLON
## LR(1) items:
switch_case_list -> TOBRACE TSEMICOLON . case_list TCBRACE [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_ENDWHILE T_ENDSWITCH T_ENDIF T_ENDFOREACH T_ENDFOR T_ENDDECLARE T_EMPTY T_ELSEIF T_ELSE T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DEFAULT T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_CASE T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
## Transitions:
-- On case_list_rev shift to state 531
-- On case_list shift to state 820
## Default reduction:
-- After reading the next token, reduce production case_list_rev ->

State 531:
## Known stack suffix:
## case_list_rev
## LR(1) items:
case_list -> case_list_rev . [ T_ENDSWITCH TCBRACE ]
case_list_rev -> case_list_rev . T_CASE expr case_separator list(inner_statement) [ T_ENDSWITCH T_DEFAULT T_CASE TCBRACE ]
case_list_rev -> case_list_rev . T_DEFAULT case_separator list(inner_statement) [ T_ENDSWITCH T_DEFAULT T_CASE TCBRACE ]
## Transitions:
-- On T_DEFAULT shift to state 532
-- On T_CASE shift to state 816
## Reductions:
-- On T_ENDSWITCH TCBRACE
--   reduce production case_list -> case_list_rev

State 532:
## Known stack suffix:
## case_list_rev T_DEFAULT
## LR(1) items:
case_list_rev -> case_list_rev T_DEFAULT . case_separator list(inner_statement) [ T_ENDSWITCH T_DEFAULT T_CASE TCBRACE ]
## Transitions:
-- On TSEMICOLON shift to state 533
-- On TCOLON shift to state 534
-- On case_separator shift to state 535
## Reductions:

State 533:
## Known stack suffix:
## TSEMICOLON
## LR(1) items:
case_separator -> TSEMICOLON . [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_ENDSWITCH T_EMPTY T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DEFAULT T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CLONE T_CLASS_C T_CLASS T_CASE T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production case_separator -> TSEMICOLON

State 534:
## Known stack suffix:
## TCOLON
## LR(1) items:
case_separator -> TCOLON . [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_ENDSWITCH T_EMPTY T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DEFAULT T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CLONE T_CLASS_C T_CLASS T_CASE T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production case_separator -> TCOLON

State 535:
## Known stack suffix:
## case_list_rev T_DEFAULT case_separator
## LR(1) items:
case_list_rev -> case_list_rev T_DEFAULT case_separator . list(inner_statement) [ T_ENDSWITCH T_DEFAULT T_CASE TCBRACE ]
## Transitions:
-- On T__AT shift to state 1
-- On T_YIELD shift to state 2
-- On T_WHILE shift to state 158
-- On T_VARIABLE shift to state 3
-- On T_USE shift to state 190
-- On T_UNSET_CAST shift to state 5
-- On T_UNSET shift to state 197
-- On T_TYPE shift to state 6
-- On T_TRY shift to state 391
-- On T_TRAIT_C shift to state 7
-- On T_TRAIT shift to state 393
-- On T_THROW shift to state 520
-- On T_SWITCH shift to state 525
-- On T_SUPER shift to state 8
-- On T_STRING_CAST shift to state 9
-- On T_STATIC shift to state 536
-- On T_START_HEREDOC shift to state 25
-- On T_SL shift to state 16
-- On T_SELF shift to state 40
-- On T_RETURN shift to state 553
-- On T_REQUIRE_ONCE shift to state 41
-- On T_REQUIRE shift to state 42
-- On T_PRINT shift to state 43
-- On T_PARENT shift to state 44
-- On T_OPEN_TAG_WITH_ECHO shift to state 558
-- On T_OBJECT_CAST shift to state 45
-- On T_NEW shift to state 46
-- On T_NAMESPACE_C shift to state 49
-- On T_NAMESPACE shift to state 50
-- On T_METHOD_C shift to state 58
-- On T_METAVAR shift to state 17
-- On T_LNUMBER shift to state 59
-- On T_LIST shift to state 69
-- On T_LINE shift to state 60
-- On T_LAMBDA_OPAR shift to state 73
-- On T_ISSET shift to state 133
-- On T_INT_CAST shift to state 135
-- On T_INTERFACE shift to state 563
-- On T_INSTANCEOF shift to state 52
-- On T_INLINE_HTML shift to state 576
-- On T_INCLUDE_ONCE shift to state 136
-- On T_INCLUDE shift to state 137
-- On T_INC shift to state 138
-- On T_IF shift to state 577
-- On T_IDENT shift to state 18
-- On T_GLOBAL shift to state 587
-- On T_FUNC_C shift to state 61
-- On T_FUNCTION shift to state 657
-- On T_FOREACH shift to state 600
-- On T_FOR shift to state 624
-- On T_FINAL shift to state 666
-- On T_FILE shift to state 62
-- On T_EXIT shift to state 160
-- On T_EVAL shift to state 162
-- On T_ENUM shift to state 668
-- On T_EMPTY shift to state 164
-- On T_ELLIPSIS shift to state 635
-- On T_ECHO shift to state 636
-- On T_DOUBLE_CAST shift to state 168
-- On T_DO shift to state 644
-- On T_DNUMBER shift to state 63
-- On T_DIR shift to state 64
-- On T_DECLARE shift to state 645
-- On T_DEC shift to state 169
-- On T_CONTINUE shift to state 649
-- On T_CONSTANT_ENCAPSED_STRING shift to state 65
-- On T_CLONE shift to state 170
-- On T_CLASS_C shift to state 66
-- On T_CLASS shift to state 682
-- On T_BREAK shift to state 652
-- On T_BOOL_CAST shift to state 171
-- On T_AWAIT shift to state 172
-- On T_ASYNC shift to state 683
-- On T_ARRAY_CAST shift to state 200
-- On T_ARRAY shift to state 201
-- On T_ABSTRACT shift to state 694
-- On TTILDE shift to state 204
-- On TSEMICOLON shift to state 655
-- On TPLUS shift to state 205
-- On TOPAR shift to state 206
-- On TOBRACE shift to state 656
-- On TOBRA shift to state 209
-- On TMINUS shift to state 210
-- On TGUIL shift to state 211
-- On TDOLLARDOLLAR shift to state 213
-- On TDOLLAR shift to state 214
-- On TBANG shift to state 216
-- On TBACKQUOTE shift to state 217
-- On TANTISLASH shift to state 85
-- On LDots shift to state 222
-- On unticked_function_declaration shift to state 696
-- On unticked_class_declaration shift to state 697
-- On statement shift to state 698
-- On simple_expr shift to state 223
-- On qualified_name shift to state 94
-- On qualified_class_name shift to state 225
-- On primary_expr shift to state 226
-- On new_expr shift to state 227
-- On namespace_name shift to state 102
-- On member_expr shift to state 228
-- On list(inner_statement) shift to state 815
-- On lambda_expr shift to state 231
-- On inner_statement shift to state 701
-- On ident_in_name shift to state 57
-- On ident shift to state 56
-- On function_declaration shift to state 703
-- On expr shift to state 704
-- On constant shift to state 239
-- On class_entry_type shift to state 706
-- On class_declaration shift to state 716
-- On call_expr shift to state 240
-- On attributes shift to state 717
## Reductions:
-- On T_ENDSWITCH T_DEFAULT T_CASE TCBRACE
--   reduce production list(inner_statement) ->

State 536:
## Known stack suffix:
## T_STATIC
## LR(1) items:
expr -> T_STATIC . T_FUNCTION is_reference TOPAR parameter_list TCPAR lexical_vars option(return_type) TOBRACE list(inner_statement) TCBRACE [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TAND EOF ]
primary_expr -> T_STATIC . [ T_XOR_EQUAL T_SR_EQUAL T_SR T_SL_EQUAL T_SL T_ROCKET T_PLUS_EQUAL T_OR_EQUAL T_OBJECT_OPERATOR T_MUL_EQUAL T_MOD_EQUAL T_MINUS_EQUAL T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DIV_EQUAL T_DEC T_CONCAT_EQUAL T_BOOLEAN_OR T_BOOLEAN_AND T_AND_EQUAL TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TOPAR TOBRACE TOBRA TMUL TMOD TMINUS TGREATER TEQ TDOT TDIV TCOLCOL TAND EOF ]
statement -> T_STATIC . list_sep(static_var,TCOMMA) TSEMICOLON [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_ENDWHILE T_ENDSWITCH T_ENDIF T_ENDFOREACH T_ENDFOR T_ENDDECLARE T_EMPTY T_ELSEIF T_ELSE T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DEFAULT T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_CASE T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
unticked_function_declaration -> T_STATIC . T_FUNCTION is_reference ident type_params_opt TOPAR parameter_list TCPAR option(return_type) function_body [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_ENDWHILE T_ENDSWITCH T_ENDIF T_ENDFOREACH T_ENDFOR T_ENDDECLARE T_EMPTY T_ELSEIF T_ELSE T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DEFAULT T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_CASE T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
## Transitions:
-- On T_VARIABLE shift to state 537
-- On T_METAVAR shift to state 540
-- On T_FUNCTION shift to state 543
-- On static_var shift to state 582
-- On list_sep(static_var,TCOMMA) shift to state 583
## Reductions:
-- On T_XOR_EQUAL T_SR_EQUAL T_SR T_SL_EQUAL T_SL T_ROCKET T_PLUS_EQUAL T_OR_EQUAL T_OBJECT_OPERATOR T_MUL_EQUAL T_MOD_EQUAL T_MINUS_EQUAL T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DIV_EQUAL T_DEC T_CONCAT_EQUAL T_BOOLEAN_OR T_BOOLEAN_AND T_AND_EQUAL TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TOPAR TOBRACE TOBRA TMUL TMOD TMINUS TGREATER TEQ TDOT TDIV TCOLCOL TAND EOF
--   reduce production primary_expr -> T_STATIC

State 537:
## Known stack suffix:
## T_VARIABLE
## LR(1) items:
static_var -> T_VARIABLE . [ TSEMICOLON TCOMMA ]
static_var -> T_VARIABLE . TEQ static_scalar [ TSEMICOLON TCOMMA ]
## Transitions:
-- On TEQ shift to state 538
## Reductions:
-- On TSEMICOLON TCOMMA
--   reduce production static_var -> T_VARIABLE

State 538:
## Known stack suffix:
## T_VARIABLE TEQ
## LR(1) items:
static_var -> T_VARIABLE TEQ . static_scalar [ TSEMICOLON TCOMMA ]
## Transitions:
-- On T__AT shift to state 1
-- On T_YIELD shift to state 2
-- On T_VARIABLE shift to state 3
-- On T_UNSET_CAST shift to state 5
-- On T_TYPE shift to state 6
-- On T_TRAIT_C shift to state 7
-- On T_SUPER shift to state 8
-- On T_STRING_CAST shift to state 9
-- On T_STATIC shift to state 10
-- On T_START_HEREDOC shift to state 25
-- On T_SELF shift to state 40
-- On T_REQUIRE_ONCE shift to state 41
-- On T_REQUIRE shift to state 42
-- On T_PRINT shift to state 43
-- On T_PARENT shift to state 44
-- On T_OBJECT_CAST shift to state 45
-- On T_NEW shift to state 46
-- On T_NAMESPACE_C shift to state 49
-- On T_NAMESPACE shift to state 50
-- On T_METHOD_C shift to state 58
-- On T_METAVAR shift to state 17
-- On T_LNUMBER shift to state 59
-- On T_LIST shift to state 69
-- On T_LINE shift to state 60
-- On T_LAMBDA_OPAR shift to state 73
-- On T_ISSET shift to state 133
-- On T_INT_CAST shift to state 135
-- On T_INSTANCEOF shift to state 52
-- On T_INCLUDE_ONCE shift to state 136
-- On T_INCLUDE shift to state 137
-- On T_INC shift to state 138
-- On T_IDENT shift to state 18
-- On T_FUNC_C shift to state 61
-- On T_FUNCTION shift to state 139
-- On T_FILE shift to state 62
-- On T_EXIT shift to state 160
-- On T_EVAL shift to state 162
-- On T_ENUM shift to state 19
-- On T_EMPTY shift to state 164
-- On T_DOUBLE_CAST shift to state 168
-- On T_DNUMBER shift to state 63
-- On T_DIR shift to state 64
-- On T_DEC shift to state 169
-- On T_CONSTANT_ENCAPSED_STRING shift to state 65
-- On T_CLONE shift to state 170
-- On T_CLASS_C shift to state 66
-- On T_BOOL_CAST shift to state 171
-- On T_AWAIT shift to state 172
-- On T_ASYNC shift to state 173
-- On T_ARRAY_CAST shift to state 200
-- On T_ARRAY shift to state 201
-- On TTILDE shift to state 204
-- On TPLUS shift to state 205
-- On TOPAR shift to state 206
-- On TOBRA shift to state 209
-- On TMINUS shift to state 210
-- On TGUIL shift to state 211
-- On TDOLLARDOLLAR shift to state 213
-- On TDOLLAR shift to state 214
-- On TBANG shift to state 216
-- On TBACKQUOTE shift to state 217
-- On TANTISLASH shift to state 85
-- On LDots shift to state 222
-- On static_scalar shift to state 539
-- On simple_expr shift to state 223
-- On qualified_name shift to state 94
-- On qualified_class_name shift to state 225
-- On primary_expr shift to state 226
-- On new_expr shift to state 227
-- On namespace_name shift to state 102
-- On member_expr shift to state 228
-- On lambda_expr shift to state 231
-- On ident_in_name shift to state 57
-- On ident shift to state 56
-- On expr shift to state 465
-- On constant shift to state 239
-- On call_expr shift to state 240
## Reductions:

State 539:
## Known stack suffix:
## T_VARIABLE TEQ static_scalar
## LR(1) items:
static_var -> T_VARIABLE TEQ static_scalar . [ TSEMICOLON TCOMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production static_var -> T_VARIABLE TEQ static_scalar

State 540:
## Known stack suffix:
## T_METAVAR
## LR(1) items:
static_var -> T_METAVAR . [ TSEMICOLON TCOMMA ]
static_var -> T_METAVAR . TEQ static_scalar [ TSEMICOLON TCOMMA ]
## Transitions:
-- On TEQ shift to state 541
## Reductions:
-- On TSEMICOLON TCOMMA
--   reduce production static_var -> T_METAVAR

State 541:
## Known stack suffix:
## T_METAVAR TEQ
## LR(1) items:
static_var -> T_METAVAR TEQ . static_scalar [ TSEMICOLON TCOMMA ]
## Transitions:
-- On T__AT shift to state 1
-- On T_YIELD shift to state 2
-- On T_VARIABLE shift to state 3
-- On T_UNSET_CAST shift to state 5
-- On T_TYPE shift to state 6
-- On T_TRAIT_C shift to state 7
-- On T_SUPER shift to state 8
-- On T_STRING_CAST shift to state 9
-- On T_STATIC shift to state 10
-- On T_START_HEREDOC shift to state 25
-- On T_SELF shift to state 40
-- On T_REQUIRE_ONCE shift to state 41
-- On T_REQUIRE shift to state 42
-- On T_PRINT shift to state 43
-- On T_PARENT shift to state 44
-- On T_OBJECT_CAST shift to state 45
-- On T_NEW shift to state 46
-- On T_NAMESPACE_C shift to state 49
-- On T_NAMESPACE shift to state 50
-- On T_METHOD_C shift to state 58
-- On T_METAVAR shift to state 17
-- On T_LNUMBER shift to state 59
-- On T_LIST shift to state 69
-- On T_LINE shift to state 60
-- On T_LAMBDA_OPAR shift to state 73
-- On T_ISSET shift to state 133
-- On T_INT_CAST shift to state 135
-- On T_INSTANCEOF shift to state 52
-- On T_INCLUDE_ONCE shift to state 136
-- On T_INCLUDE shift to state 137
-- On T_INC shift to state 138
-- On T_IDENT shift to state 18
-- On T_FUNC_C shift to state 61
-- On T_FUNCTION shift to state 139
-- On T_FILE shift to state 62
-- On T_EXIT shift to state 160
-- On T_EVAL shift to state 162
-- On T_ENUM shift to state 19
-- On T_EMPTY shift to state 164
-- On T_DOUBLE_CAST shift to state 168
-- On T_DNUMBER shift to state 63
-- On T_DIR shift to state 64
-- On T_DEC shift to state 169
-- On T_CONSTANT_ENCAPSED_STRING shift to state 65
-- On T_CLONE shift to state 170
-- On T_CLASS_C shift to state 66
-- On T_BOOL_CAST shift to state 171
-- On T_AWAIT shift to state 172
-- On T_ASYNC shift to state 173
-- On T_ARRAY_CAST shift to state 200
-- On T_ARRAY shift to state 201
-- On TTILDE shift to state 204
-- On TPLUS shift to state 205
-- On TOPAR shift to state 206
-- On TOBRA shift to state 209
-- On TMINUS shift to state 210
-- On TGUIL shift to state 211
-- On TDOLLARDOLLAR shift to state 213
-- On TDOLLAR shift to state 214
-- On TBANG shift to state 216
-- On TBACKQUOTE shift to state 217
-- On TANTISLASH shift to state 85
-- On LDots shift to state 222
-- On static_scalar shift to state 542
-- On simple_expr shift to state 223
-- On qualified_name shift to state 94
-- On qualified_class_name shift to state 225
-- On primary_expr shift to state 226
-- On new_expr shift to state 227
-- On namespace_name shift to state 102
-- On member_expr shift to state 228
-- On lambda_expr shift to state 231
-- On ident_in_name shift to state 57
-- On ident shift to state 56
-- On expr shift to state 465
-- On constant shift to state 239
-- On call_expr shift to state 240
## Reductions:

State 542:
## Known stack suffix:
## T_METAVAR TEQ static_scalar
## LR(1) items:
static_var -> T_METAVAR TEQ static_scalar . [ TSEMICOLON TCOMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production static_var -> T_METAVAR TEQ static_scalar

State 543:
## Known stack suffix:
## T_STATIC T_FUNCTION
## LR(1) items:
expr -> T_STATIC T_FUNCTION . is_reference TOPAR parameter_list TCPAR lexical_vars option(return_type) TOBRACE list(inner_statement) TCBRACE [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TAND EOF ]
unticked_function_declaration -> T_STATIC T_FUNCTION . is_reference ident type_params_opt TOPAR parameter_list TCPAR option(return_type) function_body [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_ENDWHILE T_ENDSWITCH T_ENDIF T_ENDFOREACH T_ENDFOR T_ENDDECLARE T_EMPTY T_ELSEIF T_ELSE T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DEFAULT T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_CASE T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
## Transitions:
-- On TAND shift to state 12
-- On option(TAND) shift to state 13
-- On is_reference shift to state 544
## Reductions:
-- On T_TYPE T_SUPER T_METAVAR T_IDENT T_ENUM TOPAR
--   reduce production option(TAND) ->

State 544:
## Known stack suffix:
## T_STATIC T_FUNCTION is_reference
## LR(1) items:
expr -> T_STATIC T_FUNCTION is_reference . TOPAR parameter_list TCPAR lexical_vars option(return_type) TOBRACE list(inner_statement) TCBRACE [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TAND EOF ]
unticked_function_declaration -> T_STATIC T_FUNCTION is_reference . ident type_params_opt TOPAR parameter_list TCPAR option(return_type) function_body [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_ENDWHILE T_ENDSWITCH T_ENDIF T_ENDFOREACH T_ENDFOR T_ENDDECLARE T_EMPTY T_ELSEIF T_ELSE T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DEFAULT T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_CASE T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
## Transitions:
-- On T_TYPE shift to state 6
-- On T_SUPER shift to state 8
-- On T_METAVAR shift to state 17
-- On T_IDENT shift to state 18
-- On T_ENUM shift to state 19
-- On TOPAR shift to state 15
-- On ident shift to state 545
## Reductions:

State 545:
## Known stack suffix:
## T_STATIC T_FUNCTION is_reference ident
## LR(1) items:
unticked_function_declaration -> T_STATIC T_FUNCTION is_reference ident . type_params_opt TOPAR parameter_list TCPAR option(return_type) function_body [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_ENDWHILE T_ENDSWITCH T_ENDIF T_ENDFOREACH T_ENDFOR T_ENDDECLARE T_EMPTY T_ELSEIF T_ELSE T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DEFAULT T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_CASE T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
## Transitions:
-- On TSMALLER shift to state 395
-- On type_params_opt shift to state 546
## Reductions:
-- On TOPAR
--   reduce production type_params_opt ->

State 546:
## Known stack suffix:
## T_STATIC T_FUNCTION is_reference ident type_params_opt
## LR(1) items:
unticked_function_declaration -> T_STATIC T_FUNCTION is_reference ident type_params_opt . TOPAR parameter_list TCPAR option(return_type) function_body [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_ENDWHILE T_ENDSWITCH T_ENDIF T_ENDFOREACH T_ENDFOR T_ENDDECLARE T_EMPTY T_ELSEIF T_ELSE T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DEFAULT T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_CASE T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
## Transitions:
-- On TOPAR shift to state 547
## Reductions:

State 547:
## Known stack suffix:
## T_STATIC T_FUNCTION is_reference ident type_params_opt TOPAR
## LR(1) items:
unticked_function_declaration -> T_STATIC T_FUNCTION is_reference ident type_params_opt TOPAR . parameter_list TCPAR option(return_type) function_body [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_ENDWHILE T_ENDSWITCH T_ENDIF T_ENDFOREACH T_ENDFOR T_ENDDECLARE T_EMPTY T_ELSEIF T_ELSE T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DEFAULT T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_CASE T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
## Transitions:
-- On T_SL shift to state 16
-- On parameter_list shift to state 548
-- On parameter shift to state 122
-- On option(attributes) shift to state 125
-- On attributes shift to state 181
## Reductions:
-- On T_VARIABLE T_TYPE T_SUPER T_SELF T_PUBLIC T_PROTECTED T_PRIVATE T_PARENT T_NAMESPACE T_METAVAR T_INSTANCEOF T_IDENT T_ENUM T_ELLIPSIS T_ARRAY TQUESTION TOPAR TANTISLASH TAND
--   reduce production option(attributes) ->
-- On TCPAR
--   reduce production parameter_list ->

State 548:
## Known stack suffix:
## T_STATIC T_FUNCTION is_reference ident type_params_opt TOPAR parameter_list
## LR(1) items:
unticked_function_declaration -> T_STATIC T_FUNCTION is_reference ident type_params_opt TOPAR parameter_list . TCPAR option(return_type) function_body [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_ENDWHILE T_ENDSWITCH T_ENDIF T_ENDFOREACH T_ENDFOR T_ENDDECLARE T_EMPTY T_ELSEIF T_ELSE T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DEFAULT T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_CASE T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
## Transitions:
-- On TCPAR shift to state 549
## Reductions:

State 549:
## Known stack suffix:
## T_STATIC T_FUNCTION is_reference ident type_params_opt TOPAR parameter_list TCPAR
## LR(1) items:
unticked_function_declaration -> T_STATIC T_FUNCTION is_reference ident type_params_opt TOPAR parameter_list TCPAR . option(return_type) function_body [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_ENDWHILE T_ENDSWITCH T_ENDIF T_ENDFOREACH T_ENDFOR T_ENDDECLARE T_EMPTY T_ELSEIF T_ELSE T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DEFAULT T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_CASE T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
## Transitions:
-- On TCOLON shift to state 76
-- On return_type shift to state 119
-- On option(return_type) shift to state 550
## Reductions:
-- On TSEMICOLON TOBRACE
--   reduce production option(return_type) ->

State 550:
## Known stack suffix:
## T_STATIC T_FUNCTION is_reference ident type_params_opt TOPAR parameter_list TCPAR option(return_type)
## LR(1) items:
unticked_function_declaration -> T_STATIC T_FUNCTION is_reference ident type_params_opt TOPAR parameter_list TCPAR option(return_type) . function_body [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_ENDWHILE T_ENDSWITCH T_ENDIF T_ENDFOREACH T_ENDFOR T_ENDDECLARE T_EMPTY T_ELSEIF T_ELSE T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DEFAULT T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_CASE T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
## Transitions:
-- On TSEMICOLON shift to state 551
-- On TOBRACE shift to state 552
-- On function_body shift to state 814
## Reductions:

State 551:
## Known stack suffix:
## TSEMICOLON
## LR(1) items:
function_body -> TSEMICOLON . [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_ENDWHILE T_ENDSWITCH T_ENDIF T_ENDFOREACH T_ENDFOR T_ENDDECLARE T_EMPTY T_ELSEIF T_ELSE T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DEFAULT T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_CASE T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production function_body -> TSEMICOLON

State 552:
## Known stack suffix:
## TOBRACE
## LR(1) items:
function_body -> TOBRACE . list(inner_statement) TCBRACE [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_ENDWHILE T_ENDSWITCH T_ENDIF T_ENDFOREACH T_ENDFOR T_ENDDECLARE T_EMPTY T_ELSEIF T_ELSE T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DEFAULT T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_CASE T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
## Transitions:
-- On T__AT shift to state 1
-- On T_YIELD shift to state 2
-- On T_WHILE shift to state 158
-- On T_VARIABLE shift to state 3
-- On T_USE shift to state 190
-- On T_UNSET_CAST shift to state 5
-- On T_UNSET shift to state 197
-- On T_TYPE shift to state 6
-- On T_TRY shift to state 391
-- On T_TRAIT_C shift to state 7
-- On T_TRAIT shift to state 393
-- On T_THROW shift to state 520
-- On T_SWITCH shift to state 525
-- On T_SUPER shift to state 8
-- On T_STRING_CAST shift to state 9
-- On T_STATIC shift to state 536
-- On T_START_HEREDOC shift to state 25
-- On T_SL shift to state 16
-- On T_SELF shift to state 40
-- On T_RETURN shift to state 553
-- On T_REQUIRE_ONCE shift to state 41
-- On T_REQUIRE shift to state 42
-- On T_PRINT shift to state 43
-- On T_PARENT shift to state 44
-- On T_OPEN_TAG_WITH_ECHO shift to state 558
-- On T_OBJECT_CAST shift to state 45
-- On T_NEW shift to state 46
-- On T_NAMESPACE_C shift to state 49
-- On T_NAMESPACE shift to state 50
-- On T_METHOD_C shift to state 58
-- On T_METAVAR shift to state 17
-- On T_LNUMBER shift to state 59
-- On T_LIST shift to state 69
-- On T_LINE shift to state 60
-- On T_LAMBDA_OPAR shift to state 73
-- On T_ISSET shift to state 133
-- On T_INT_CAST shift to state 135
-- On T_INTERFACE shift to state 563
-- On T_INSTANCEOF shift to state 52
-- On T_INLINE_HTML shift to state 576
-- On T_INCLUDE_ONCE shift to state 136
-- On T_INCLUDE shift to state 137
-- On T_INC shift to state 138
-- On T_IF shift to state 577
-- On T_IDENT shift to state 18
-- On T_GLOBAL shift to state 587
-- On T_FUNC_C shift to state 61
-- On T_FUNCTION shift to state 657
-- On T_FOREACH shift to state 600
-- On T_FOR shift to state 624
-- On T_FINAL shift to state 666
-- On T_FILE shift to state 62
-- On T_EXIT shift to state 160
-- On T_EVAL shift to state 162
-- On T_ENUM shift to state 668
-- On T_EMPTY shift to state 164
-- On T_ELLIPSIS shift to state 635
-- On T_ECHO shift to state 636
-- On T_DOUBLE_CAST shift to state 168
-- On T_DO shift to state 644
-- On T_DNUMBER shift to state 63
-- On T_DIR shift to state 64
-- On T_DECLARE shift to state 645
-- On T_DEC shift to state 169
-- On T_CONTINUE shift to state 649
-- On T_CONSTANT_ENCAPSED_STRING shift to state 65
-- On T_CLONE shift to state 170
-- On T_CLASS_C shift to state 66
-- On T_CLASS shift to state 682
-- On T_BREAK shift to state 652
-- On T_BOOL_CAST shift to state 171
-- On T_AWAIT shift to state 172
-- On T_ASYNC shift to state 683
-- On T_ARRAY_CAST shift to state 200
-- On T_ARRAY shift to state 201
-- On T_ABSTRACT shift to state 694
-- On TTILDE shift to state 204
-- On TSEMICOLON shift to state 655
-- On TPLUS shift to state 205
-- On TOPAR shift to state 206
-- On TOBRACE shift to state 656
-- On TOBRA shift to state 209
-- On TMINUS shift to state 210
-- On TGUIL shift to state 211
-- On TDOLLARDOLLAR shift to state 213
-- On TDOLLAR shift to state 214
-- On TBANG shift to state 216
-- On TBACKQUOTE shift to state 217
-- On TANTISLASH shift to state 85
-- On LDots shift to state 222
-- On unticked_function_declaration shift to state 696
-- On unticked_class_declaration shift to state 697
-- On statement shift to state 698
-- On simple_expr shift to state 223
-- On qualified_name shift to state 94
-- On qualified_class_name shift to state 225
-- On primary_expr shift to state 226
-- On new_expr shift to state 227
-- On namespace_name shift to state 102
-- On member_expr shift to state 228
-- On list(inner_statement) shift to state 812
-- On lambda_expr shift to state 231
-- On inner_statement shift to state 701
-- On ident_in_name shift to state 57
-- On ident shift to state 56
-- On function_declaration shift to state 703
-- On expr shift to state 704
-- On constant shift to state 239
-- On class_entry_type shift to state 706
-- On class_declaration shift to state 716
-- On call_expr shift to state 240
-- On attributes shift to state 717
## Reductions:
-- On TCBRACE
--   reduce production list(inner_statement) ->

State 553:
## Known stack suffix:
## T_RETURN
## LR(1) items:
statement -> T_RETURN . option(expr_or_dots) TSEMICOLON [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_ENDWHILE T_ENDSWITCH T_ENDIF T_ENDFOREACH T_ENDFOR T_ENDDECLARE T_EMPTY T_ELSEIF T_ELSE T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DEFAULT T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_CASE T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
## Transitions:
-- On T__AT shift to state 1
-- On T_YIELD shift to state 2
-- On T_VARIABLE shift to state 3
-- On T_UNSET_CAST shift to state 5
-- On T_TYPE shift to state 6
-- On T_TRAIT_C shift to state 7
-- On T_SUPER shift to state 8
-- On T_STRING_CAST shift to state 9
-- On T_STATIC shift to state 10
-- On T_START_HEREDOC shift to state 25
-- On T_SELF shift to state 40
-- On T_REQUIRE_ONCE shift to state 41
-- On T_REQUIRE shift to state 42
-- On T_PRINT shift to state 43
-- On T_PARENT shift to state 44
-- On T_OBJECT_CAST shift to state 45
-- On T_NEW shift to state 46
-- On T_NAMESPACE_C shift to state 49
-- On T_NAMESPACE shift to state 50
-- On T_METHOD_C shift to state 58
-- On T_METAVAR shift to state 17
-- On T_LNUMBER shift to state 59
-- On T_LIST shift to state 69
-- On T_LINE shift to state 60
-- On T_LAMBDA_OPAR shift to state 73
-- On T_ISSET shift to state 133
-- On T_INT_CAST shift to state 135
-- On T_INSTANCEOF shift to state 52
-- On T_INCLUDE_ONCE shift to state 136
-- On T_INCLUDE shift to state 137
-- On T_INC shift to state 138
-- On T_IDENT shift to state 18
-- On T_FUNC_C shift to state 61
-- On T_FUNCTION shift to state 139
-- On T_FILE shift to state 62
-- On T_EXIT shift to state 160
-- On T_EVAL shift to state 162
-- On T_ENUM shift to state 19
-- On T_EMPTY shift to state 164
-- On T_ELLIPSIS shift to state 554
-- On T_DOUBLE_CAST shift to state 168
-- On T_DNUMBER shift to state 63
-- On T_DIR shift to state 64
-- On T_DEC shift to state 169
-- On T_CONSTANT_ENCAPSED_STRING shift to state 65
-- On T_CLONE shift to state 170
-- On T_CLASS_C shift to state 66
-- On T_BOOL_CAST shift to state 171
-- On T_AWAIT shift to state 172
-- On T_ASYNC shift to state 173
-- On T_ARRAY_CAST shift to state 200
-- On T_ARRAY shift to state 201
-- On TTILDE shift to state 204
-- On TPLUS shift to state 205
-- On TOPAR shift to state 206
-- On TOBRA shift to state 209
-- On TMINUS shift to state 210
-- On TGUIL shift to state 211
-- On TDOLLARDOLLAR shift to state 213
-- On TDOLLAR shift to state 214
-- On TBANG shift to state 216
-- On TBACKQUOTE shift to state 217
-- On TANTISLASH shift to state 85
-- On LDots shift to state 222
-- On simple_expr shift to state 223
-- On qualified_name shift to state 94
-- On qualified_class_name shift to state 225
-- On primary_expr shift to state 226
-- On option(expr_or_dots) shift to state 555
-- On new_expr shift to state 227
-- On namespace_name shift to state 102
-- On member_expr shift to state 228
-- On lambda_expr shift to state 231
-- On ident_in_name shift to state 57
-- On ident shift to state 56
-- On expr shift to state 557
-- On constant shift to state 239
-- On call_expr shift to state 240
## Reductions:
-- On TSEMICOLON
--   reduce production option(expr_or_dots) ->

State 554:
## Known stack suffix:
## T_ELLIPSIS
## LR(1) items:
option(expr_or_dots) -> T_ELLIPSIS . [ TSEMICOLON ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production option(expr_or_dots) -> T_ELLIPSIS

State 555:
## Known stack suffix:
## T_RETURN option(expr_or_dots)
## LR(1) items:
statement -> T_RETURN option(expr_or_dots) . TSEMICOLON [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_ENDWHILE T_ENDSWITCH T_ENDIF T_ENDFOREACH T_ENDFOR T_ENDDECLARE T_EMPTY T_ELSEIF T_ELSE T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DEFAULT T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_CASE T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
## Transitions:
-- On TSEMICOLON shift to state 556
## Reductions:

State 556:
## Known stack suffix:
## T_RETURN option(expr_or_dots) TSEMICOLON
## LR(1) items:
statement -> T_RETURN option(expr_or_dots) TSEMICOLON . [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_ENDWHILE T_ENDSWITCH T_ENDIF T_ENDFOREACH T_ENDFOR T_ENDDECLARE T_EMPTY T_ELSEIF T_ELSE T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DEFAULT T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_CASE T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production statement -> T_RETURN option(expr_or_dots) TSEMICOLON

State 557:
## Known stack suffix:
## expr
## LR(1) items:
expr -> expr . T_INC [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TAND ]
expr -> expr . T_DEC [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TAND ]
expr -> expr . T_BOOLEAN_OR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TAND ]
expr -> expr . T_BOOLEAN_AND expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TAND ]
expr -> expr . T_LOGICAL_OR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TAND ]
expr -> expr . T_LOGICAL_AND expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TAND ]
expr -> expr . T_LOGICAL_XOR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TAND ]
expr -> expr . TPLUS expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TAND ]
expr -> expr . TMINUS expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TAND ]
expr -> expr . TMUL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TAND ]
expr -> expr . TDIV expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TAND ]
expr -> expr . TMOD expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TAND ]
expr -> expr . TPOW expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TAND ]
expr -> expr . TAND expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TAND ]
expr -> expr . TOR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TAND ]
expr -> expr . TXOR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TAND ]
expr -> expr . T_SL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TAND ]
expr -> expr . T_SR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TAND ]
expr -> expr . TDOT expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TAND ]
expr -> expr . T_IS_IDENTICAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TAND ]
expr -> expr . T_IS_NOT_IDENTICAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TAND ]
expr -> expr . T_IS_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TAND ]
expr -> expr . T_IS_NOT_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TAND ]
expr -> expr . TSMALLER expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TAND ]
expr -> expr . T_IS_SMALLER_OR_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TAND ]
expr -> expr . TGREATER expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TAND ]
expr -> expr . T_IS_GREATER_OR_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TAND ]
expr -> expr . T_ROCKET expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TAND ]
expr -> expr . TQUESTION expr TCOLON expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TAND ]
expr -> expr . TQUESTION TCOLON expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TAND ]
expr -> expr . TQUESTION TQUESTION expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TAND ]
expr -> expr . T_INSTANCEOF expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TAND ]
option(expr_or_dots) -> expr . [ TSEMICOLON ]
## Transitions:
-- On T_SR shift to state 233
-- On T_SL shift to state 244
-- On T_ROCKET shift to state 260
-- On T_LOGICAL_XOR shift to state 270
-- On T_LOGICAL_OR shift to state 298
-- On T_LOGICAL_AND shift to state 272
-- On T_IS_SMALLER_OR_EQUAL shift to state 262
-- On T_IS_NOT_IDENTICAL shift to state 274
-- On T_IS_NOT_EQUAL shift to state 276
-- On T_IS_IDENTICAL shift to state 278
-- On T_IS_GREATER_OR_EQUAL shift to state 264
-- On T_IS_EQUAL shift to state 280
-- On T_INSTANCEOF shift to state 235
-- On T_INC shift to state 237
-- On T_DEC shift to state 238
-- On T_BOOLEAN_OR shift to state 282
-- On T_BOOLEAN_AND shift to state 284
-- On TXOR shift to state 286
-- On TSMALLER shift to state 266
-- On TQUESTION shift to state 292
-- On TPOW shift to state 246
-- On TPLUS shift to state 248
-- On TOR shift to state 290
-- On TMUL shift to state 250
-- On TMOD shift to state 252
-- On TMINUS shift to state 256
-- On TGREATER shift to state 268
-- On TDOT shift to state 258
-- On TDIV shift to state 254
-- On TAND shift to state 288
## Reductions:
-- On TSEMICOLON
--   reduce production option(expr_or_dots) -> expr

State 558:
## Known stack suffix:
## T_OPEN_TAG_WITH_ECHO
## LR(1) items:
statement -> T_OPEN_TAG_WITH_ECHO . expr T_CLOSE_TAG_OF_ECHO [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_ENDWHILE T_ENDSWITCH T_ENDIF T_ENDFOREACH T_ENDFOR T_ENDDECLARE T_EMPTY T_ELSEIF T_ELSE T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DEFAULT T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_CASE T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
statement -> T_OPEN_TAG_WITH_ECHO . expr TSEMICOLON T_CLOSE_TAG_OF_ECHO [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_ENDWHILE T_ENDSWITCH T_ENDIF T_ENDFOREACH T_ENDFOR T_ENDDECLARE T_EMPTY T_ELSEIF T_ELSE T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DEFAULT T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_CASE T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
## Transitions:
-- On T__AT shift to state 1
-- On T_YIELD shift to state 2
-- On T_VARIABLE shift to state 3
-- On T_UNSET_CAST shift to state 5
-- On T_TYPE shift to state 6
-- On T_TRAIT_C shift to state 7
-- On T_SUPER shift to state 8
-- On T_STRING_CAST shift to state 9
-- On T_STATIC shift to state 10
-- On T_START_HEREDOC shift to state 25
-- On T_SELF shift to state 40
-- On T_REQUIRE_ONCE shift to state 41
-- On T_REQUIRE shift to state 42
-- On T_PRINT shift to state 43
-- On T_PARENT shift to state 44
-- On T_OBJECT_CAST shift to state 45
-- On T_NEW shift to state 46
-- On T_NAMESPACE_C shift to state 49
-- On T_NAMESPACE shift to state 50
-- On T_METHOD_C shift to state 58
-- On T_METAVAR shift to state 17
-- On T_LNUMBER shift to state 59
-- On T_LIST shift to state 69
-- On T_LINE shift to state 60
-- On T_LAMBDA_OPAR shift to state 73
-- On T_ISSET shift to state 133
-- On T_INT_CAST shift to state 135
-- On T_INSTANCEOF shift to state 52
-- On T_INCLUDE_ONCE shift to state 136
-- On T_INCLUDE shift to state 137
-- On T_INC shift to state 138
-- On T_IDENT shift to state 18
-- On T_FUNC_C shift to state 61
-- On T_FUNCTION shift to state 139
-- On T_FILE shift to state 62
-- On T_EXIT shift to state 160
-- On T_EVAL shift to state 162
-- On T_ENUM shift to state 19
-- On T_EMPTY shift to state 164
-- On T_DOUBLE_CAST shift to state 168
-- On T_DNUMBER shift to state 63
-- On T_DIR shift to state 64
-- On T_DEC shift to state 169
-- On T_CONSTANT_ENCAPSED_STRING shift to state 65
-- On T_CLONE shift to state 170
-- On T_CLASS_C shift to state 66
-- On T_BOOL_CAST shift to state 171
-- On T_AWAIT shift to state 172
-- On T_ASYNC shift to state 173
-- On T_ARRAY_CAST shift to state 200
-- On T_ARRAY shift to state 201
-- On TTILDE shift to state 204
-- On TPLUS shift to state 205
-- On TOPAR shift to state 206
-- On TOBRA shift to state 209
-- On TMINUS shift to state 210
-- On TGUIL shift to state 211
-- On TDOLLARDOLLAR shift to state 213
-- On TDOLLAR shift to state 214
-- On TBANG shift to state 216
-- On TBACKQUOTE shift to state 217
-- On TANTISLASH shift to state 85
-- On LDots shift to state 222
-- On simple_expr shift to state 223
-- On qualified_name shift to state 94
-- On qualified_class_name shift to state 225
-- On primary_expr shift to state 226
-- On new_expr shift to state 227
-- On namespace_name shift to state 102
-- On member_expr shift to state 228
-- On lambda_expr shift to state 231
-- On ident_in_name shift to state 57
-- On ident shift to state 56
-- On expr shift to state 559
-- On constant shift to state 239
-- On call_expr shift to state 240
## Reductions:

State 559:
## Known stack suffix:
## T_OPEN_TAG_WITH_ECHO expr
## LR(1) items:
expr -> expr . T_INC [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TAND ]
expr -> expr . T_DEC [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TAND ]
expr -> expr . T_BOOLEAN_OR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TAND ]
expr -> expr . T_BOOLEAN_AND expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TAND ]
expr -> expr . T_LOGICAL_OR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TAND ]
expr -> expr . T_LOGICAL_AND expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TAND ]
expr -> expr . T_LOGICAL_XOR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TAND ]
expr -> expr . TPLUS expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TAND ]
expr -> expr . TMINUS expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TAND ]
expr -> expr . TMUL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TAND ]
expr -> expr . TDIV expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TAND ]
expr -> expr . TMOD expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TAND ]
expr -> expr . TPOW expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TAND ]
expr -> expr . TAND expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TAND ]
expr -> expr . TOR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TAND ]
expr -> expr . TXOR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TAND ]
expr -> expr . T_SL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TAND ]
expr -> expr . T_SR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TAND ]
expr -> expr . TDOT expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TAND ]
expr -> expr . T_IS_IDENTICAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TAND ]
expr -> expr . T_IS_NOT_IDENTICAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TAND ]
expr -> expr . T_IS_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TAND ]
expr -> expr . T_IS_NOT_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TAND ]
expr -> expr . TSMALLER expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TAND ]
expr -> expr . T_IS_SMALLER_OR_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TAND ]
expr -> expr . TGREATER expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TAND ]
expr -> expr . T_IS_GREATER_OR_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TAND ]
expr -> expr . T_ROCKET expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TAND ]
expr -> expr . TQUESTION expr TCOLON expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TAND ]
expr -> expr . TQUESTION TCOLON expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TAND ]
expr -> expr . TQUESTION TQUESTION expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TAND ]
expr -> expr . T_INSTANCEOF expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TAND ]
statement -> T_OPEN_TAG_WITH_ECHO expr . T_CLOSE_TAG_OF_ECHO [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_ENDWHILE T_ENDSWITCH T_ENDIF T_ENDFOREACH T_ENDFOR T_ENDDECLARE T_EMPTY T_ELSEIF T_ELSE T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DEFAULT T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_CASE T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
statement -> T_OPEN_TAG_WITH_ECHO expr . TSEMICOLON T_CLOSE_TAG_OF_ECHO [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_ENDWHILE T_ENDSWITCH T_ENDIF T_ENDFOREACH T_ENDFOR T_ENDDECLARE T_EMPTY T_ELSEIF T_ELSE T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DEFAULT T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_CASE T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
## Transitions:
-- On T_SR shift to state 233
-- On T_SL shift to state 244
-- On T_ROCKET shift to state 260
-- On T_LOGICAL_XOR shift to state 270
-- On T_LOGICAL_OR shift to state 298
-- On T_LOGICAL_AND shift to state 272
-- On T_IS_SMALLER_OR_EQUAL shift to state 262
-- On T_IS_NOT_IDENTICAL shift to state 274
-- On T_IS_NOT_EQUAL shift to state 276
-- On T_IS_IDENTICAL shift to state 278
-- On T_IS_GREATER_OR_EQUAL shift to state 264
-- On T_IS_EQUAL shift to state 280
-- On T_INSTANCEOF shift to state 235
-- On T_INC shift to state 237
-- On T_DEC shift to state 238
-- On T_CLOSE_TAG_OF_ECHO shift to state 560
-- On T_BOOLEAN_OR shift to state 282
-- On T_BOOLEAN_AND shift to state 284
-- On TXOR shift to state 286
-- On TSMALLER shift to state 266
-- On TSEMICOLON shift to state 561
-- On TQUESTION shift to state 292
-- On TPOW shift to state 246
-- On TPLUS shift to state 248
-- On TOR shift to state 290
-- On TMUL shift to state 250
-- On TMOD shift to state 252
-- On TMINUS shift to state 256
-- On TGREATER shift to state 268
-- On TDOT shift to state 258
-- On TDIV shift to state 254
-- On TAND shift to state 288
## Reductions:

State 560:
## Known stack suffix:
## T_OPEN_TAG_WITH_ECHO expr T_CLOSE_TAG_OF_ECHO
## LR(1) items:
statement -> T_OPEN_TAG_WITH_ECHO expr T_CLOSE_TAG_OF_ECHO . [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_ENDWHILE T_ENDSWITCH T_ENDIF T_ENDFOREACH T_ENDFOR T_ENDDECLARE T_EMPTY T_ELSEIF T_ELSE T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DEFAULT T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_CASE T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production statement -> T_OPEN_TAG_WITH_ECHO expr T_CLOSE_TAG_OF_ECHO

State 561:
## Known stack suffix:
## T_OPEN_TAG_WITH_ECHO expr TSEMICOLON
## LR(1) items:
statement -> T_OPEN_TAG_WITH_ECHO expr TSEMICOLON . T_CLOSE_TAG_OF_ECHO [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_ENDWHILE T_ENDSWITCH T_ENDIF T_ENDFOREACH T_ENDFOR T_ENDDECLARE T_EMPTY T_ELSEIF T_ELSE T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DEFAULT T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_CASE T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
## Transitions:
-- On T_CLOSE_TAG_OF_ECHO shift to state 562
## Reductions:

State 562:
## Known stack suffix:
## T_OPEN_TAG_WITH_ECHO expr TSEMICOLON T_CLOSE_TAG_OF_ECHO
## LR(1) items:
statement -> T_OPEN_TAG_WITH_ECHO expr TSEMICOLON T_CLOSE_TAG_OF_ECHO . [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_ENDWHILE T_ENDSWITCH T_ENDIF T_ENDFOREACH T_ENDFOR T_ENDDECLARE T_EMPTY T_ELSEIF T_ELSE T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DEFAULT T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_CASE T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production statement -> T_OPEN_TAG_WITH_ECHO expr TSEMICOLON T_CLOSE_TAG_OF_ECHO

State 563:
## Known stack suffix:
## T_INTERFACE
## LR(1) items:
unticked_class_declaration -> T_INTERFACE . ident_class_name type_params_opt interface_extends_list TOBRACE list(member_declaration) TCBRACE [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_ENDWHILE T_ENDSWITCH T_ENDIF T_ENDFOREACH T_ENDFOR T_ENDDECLARE T_EMPTY T_ELSEIF T_ELSE T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DEFAULT T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_CASE T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
## Transitions:
-- On T_TYPE shift to state 6
-- On T_SUPER shift to state 8
-- On T_METAVAR shift to state 17
-- On T_IDENT shift to state 18
-- On T_ENUM shift to state 19
-- On ident_class_name shift to state 564
-- On ident shift to state 575
## Reductions:

State 564:
## Known stack suffix:
## T_INTERFACE ident_class_name
## LR(1) items:
unticked_class_declaration -> T_INTERFACE ident_class_name . type_params_opt interface_extends_list TOBRACE list(member_declaration) TCBRACE [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_ENDWHILE T_ENDSWITCH T_ENDIF T_ENDFOREACH T_ENDFOR T_ENDDECLARE T_EMPTY T_ELSEIF T_ELSE T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DEFAULT T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_CASE T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
## Transitions:
-- On TSMALLER shift to state 395
-- On type_params_opt shift to state 565
## Reductions:
-- On T_EXTENDS TOBRACE
--   reduce production type_params_opt ->

State 565:
## Known stack suffix:
## T_INTERFACE ident_class_name type_params_opt
## LR(1) items:
unticked_class_declaration -> T_INTERFACE ident_class_name type_params_opt . interface_extends_list TOBRACE list(member_declaration) TCBRACE [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_ENDWHILE T_ENDSWITCH T_ENDIF T_ENDFOREACH T_ENDFOR T_ENDDECLARE T_EMPTY T_ELSEIF T_ELSE T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DEFAULT T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_CASE T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
## Transitions:
-- On T_EXTENDS shift to state 566
-- On interface_extends_list shift to state 568
## Reductions:
-- On TOBRACE
--   reduce production interface_extends_list ->

State 566:
## Known stack suffix:
## T_EXTENDS
## LR(1) items:
interface_extends_list -> T_EXTENDS . class_name_list [ TOBRACE ]
## Transitions:
-- On T_TYPE shift to state 6
-- On T_SUPER shift to state 8
-- On T_NAMESPACE shift to state 50
-- On T_METAVAR shift to state 17
-- On T_INSTANCEOF shift to state 52
-- On T_IDENT shift to state 18
-- On T_ENUM shift to state 19
-- On TANTISLASH shift to state 85
-- On qualified_name shift to state 94
-- On qualified_class_name shift to state 415
-- On namespace_name shift to state 102
-- On list_sep(class_name_no_array,TCOMMA) shift to state 417
-- On ident_in_name shift to state 57
-- On ident shift to state 56
-- On class_name_no_array shift to state 420
-- On class_name_list shift to state 567
## Reductions:

State 567:
## Known stack suffix:
## T_EXTENDS class_name_list
## LR(1) items:
interface_extends_list -> T_EXTENDS class_name_list . [ TOBRACE ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production interface_extends_list -> T_EXTENDS class_name_list

State 568:
## Known stack suffix:
## T_INTERFACE ident_class_name type_params_opt interface_extends_list
## LR(1) items:
unticked_class_declaration -> T_INTERFACE ident_class_name type_params_opt interface_extends_list . TOBRACE list(member_declaration) TCBRACE [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_ENDWHILE T_ENDSWITCH T_ENDIF T_ENDFOREACH T_ENDFOR T_ENDDECLARE T_EMPTY T_ELSEIF T_ELSE T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DEFAULT T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_CASE T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
## Transitions:
-- On TOBRACE shift to state 569
## Reductions:

State 569:
## Known stack suffix:
## T_INTERFACE ident_class_name type_params_opt interface_extends_list TOBRACE
## LR(1) items:
unticked_class_declaration -> T_INTERFACE ident_class_name type_params_opt interface_extends_list TOBRACE . list(member_declaration) TCBRACE [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_ENDWHILE T_ENDSWITCH T_ENDIF T_ENDFOREACH T_ENDFOR T_ENDDECLARE T_EMPTY T_ELSEIF T_ELSE T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DEFAULT T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_CASE T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
## Transitions:
-- On T_VAR shift to state 424
-- On T_USE shift to state 425
-- On T_STATIC shift to state 434
-- On T_SL shift to state 16
-- On T_PUBLIC shift to state 126
-- On T_PROTECTED shift to state 127
-- On T_PRIVATE shift to state 128
-- On T_FINAL shift to state 435
-- On T_ELLIPSIS shift to state 459
-- On T_ASYNC shift to state 436
-- On T_ABSTRACT shift to state 437
-- On visibility_modifier shift to state 460
-- On variable_modifiers shift to state 461
-- On option(visibility_modifier) shift to state 478
-- On nonempty_list(member_modifier) shift to state 497
-- On method_declaration shift to state 498
-- On member_modifier shift to state 499
-- On member_declaration shift to state 500
-- On list(member_modifier) shift to state 501
-- On list(member_declaration) shift to state 570
-- On class_modifier shift to state 444
-- On attributes shift to state 572
## Reductions:
-- On TCBRACE
--   reduce production list(member_declaration) ->
-- On T_FUNCTION
--   reduce production list(member_modifier) ->
-- On T_CONST
--   reduce production option(visibility_modifier) ->

State 570:
## Known stack suffix:
## T_INTERFACE ident_class_name type_params_opt interface_extends_list TOBRACE list(member_declaration)
## LR(1) items:
unticked_class_declaration -> T_INTERFACE ident_class_name type_params_opt interface_extends_list TOBRACE list(member_declaration) . TCBRACE [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_ENDWHILE T_ENDSWITCH T_ENDIF T_ENDFOREACH T_ENDFOR T_ENDDECLARE T_EMPTY T_ELSEIF T_ELSE T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DEFAULT T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_CASE T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
## Transitions:
-- On TCBRACE shift to state 571
## Reductions:

State 571:
## Known stack suffix:
## T_INTERFACE ident_class_name type_params_opt interface_extends_list TOBRACE list(member_declaration) TCBRACE
## LR(1) items:
unticked_class_declaration -> T_INTERFACE ident_class_name type_params_opt interface_extends_list TOBRACE list(member_declaration) TCBRACE . [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_ENDWHILE T_ENDSWITCH T_ENDIF T_ENDFOREACH T_ENDFOR T_ENDDECLARE T_EMPTY T_ELSEIF T_ELSE T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DEFAULT T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_CASE T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production unticked_class_declaration -> T_INTERFACE ident_class_name type_params_opt interface_extends_list TOBRACE list(member_declaration) TCBRACE

State 572:
## Known stack suffix:
## attributes
## LR(1) items:
member_declaration -> attributes . method_declaration [ T_VAR T_USE T_STATIC T_SL T_PUBLIC T_PROTECTED T_PRIVATE T_FUNCTION T_FINAL T_ELLIPSIS T_CONST T_ASYNC T_ABSTRACT TCBRACE ]
## Transitions:
-- On T_STATIC shift to state 434
-- On T_PUBLIC shift to state 126
-- On T_PROTECTED shift to state 127
-- On T_PRIVATE shift to state 128
-- On T_FINAL shift to state 435
-- On T_ASYNC shift to state 436
-- On T_ABSTRACT shift to state 437
-- On visibility_modifier shift to state 438
-- On method_declaration shift to state 573
-- On member_modifier shift to state 574
-- On list(member_modifier) shift to state 501
-- On class_modifier shift to state 444
## Reductions:
-- On T_FUNCTION
--   reduce production list(member_modifier) ->

State 573:
## Known stack suffix:
## attributes method_declaration
## LR(1) items:
member_declaration -> attributes method_declaration . [ T_VAR T_USE T_STATIC T_SL T_PUBLIC T_PROTECTED T_PRIVATE T_FUNCTION T_FINAL T_ELLIPSIS T_CONST T_ASYNC T_ABSTRACT TCBRACE ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production member_declaration -> attributes method_declaration

State 574:
## Known stack suffix:
## member_modifier
## LR(1) items:
list(member_modifier) -> member_modifier . list(member_modifier) [ T_FUNCTION ]
## Transitions:
-- On T_STATIC shift to state 434
-- On T_PUBLIC shift to state 126
-- On T_PROTECTED shift to state 127
-- On T_PRIVATE shift to state 128
-- On T_FINAL shift to state 435
-- On T_ASYNC shift to state 436
-- On T_ABSTRACT shift to state 437
-- On visibility_modifier shift to state 438
-- On member_modifier shift to state 574
-- On list(member_modifier) shift to state 443
-- On class_modifier shift to state 444
## Reductions:
-- On T_FUNCTION
--   reduce production list(member_modifier) ->

State 575:
## Known stack suffix:
## ident
## LR(1) items:
ident_class_name -> ident . [ T_IMPLEMENTS T_EXTENDS TSMALLER TOBRACE TCOLON ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production ident_class_name -> ident

State 576:
## Known stack suffix:
## T_INLINE_HTML
## LR(1) items:
statement -> T_INLINE_HTML . [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_ENDWHILE T_ENDSWITCH T_ENDIF T_ENDFOREACH T_ENDFOR T_ENDDECLARE T_EMPTY T_ELSEIF T_ELSE T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DEFAULT T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_CASE T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production statement -> T_INLINE_HTML

State 577:
## Known stack suffix:
## T_IF
## LR(1) items:
statement -> T_IF . TOPAR expr TCPAR statement elseif_list else_single [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_ENDWHILE T_ENDSWITCH T_ENDIF T_ENDFOREACH T_ENDFOR T_ENDDECLARE T_EMPTY T_ELSEIF T_ELSE T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DEFAULT T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_CASE T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
statement -> T_IF . TOPAR T_ELLIPSIS TCPAR statement elseif_list else_single [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_ENDWHILE T_ENDSWITCH T_ENDIF T_ENDFOREACH T_ENDFOR T_ENDDECLARE T_EMPTY T_ELSEIF T_ELSE T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DEFAULT T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_CASE T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
statement -> T_IF . TOPAR expr TCPAR TCOLON list(inner_statement) new_elseif_list new_else_single T_ENDIF TSEMICOLON [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_ENDWHILE T_ENDSWITCH T_ENDIF T_ENDFOREACH T_ENDFOR T_ENDDECLARE T_EMPTY T_ELSEIF T_ELSE T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DEFAULT T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_CASE T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
statement -> T_IF . TOPAR T_ELLIPSIS TCPAR TCOLON list(inner_statement) new_elseif_list new_else_single T_ENDIF TSEMICOLON [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_ENDWHILE T_ENDSWITCH T_ENDIF T_ENDFOREACH T_ENDFOR T_ENDDECLARE T_EMPTY T_ELSEIF T_ELSE T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DEFAULT T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_CASE T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
## Transitions:
-- On TOPAR shift to state 578
## Reductions:

State 578:
## Known stack suffix:
## T_IF TOPAR
## LR(1) items:
statement -> T_IF TOPAR . expr TCPAR statement elseif_list else_single [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_ENDWHILE T_ENDSWITCH T_ENDIF T_ENDFOREACH T_ENDFOR T_ENDDECLARE T_EMPTY T_ELSEIF T_ELSE T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DEFAULT T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_CASE T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
statement -> T_IF TOPAR . T_ELLIPSIS TCPAR statement elseif_list else_single [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_ENDWHILE T_ENDSWITCH T_ENDIF T_ENDFOREACH T_ENDFOR T_ENDDECLARE T_EMPTY T_ELSEIF T_ELSE T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DEFAULT T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_CASE T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
statement -> T_IF TOPAR . expr TCPAR TCOLON list(inner_statement) new_elseif_list new_else_single T_ENDIF TSEMICOLON [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_ENDWHILE T_ENDSWITCH T_ENDIF T_ENDFOREACH T_ENDFOR T_ENDDECLARE T_EMPTY T_ELSEIF T_ELSE T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DEFAULT T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_CASE T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
statement -> T_IF TOPAR . T_ELLIPSIS TCPAR TCOLON list(inner_statement) new_elseif_list new_else_single T_ENDIF TSEMICOLON [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_ENDWHILE T_ENDSWITCH T_ENDIF T_ENDFOREACH T_ENDFOR T_ENDDECLARE T_EMPTY T_ELSEIF T_ELSE T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DEFAULT T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_CASE T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
## Transitions:
-- On T__AT shift to state 1
-- On T_YIELD shift to state 2
-- On T_VARIABLE shift to state 3
-- On T_UNSET_CAST shift to state 5
-- On T_TYPE shift to state 6
-- On T_TRAIT_C shift to state 7
-- On T_SUPER shift to state 8
-- On T_STRING_CAST shift to state 9
-- On T_STATIC shift to state 10
-- On T_START_HEREDOC shift to state 25
-- On T_SELF shift to state 40
-- On T_REQUIRE_ONCE shift to state 41
-- On T_REQUIRE shift to state 42
-- On T_PRINT shift to state 43
-- On T_PARENT shift to state 44
-- On T_OBJECT_CAST shift to state 45
-- On T_NEW shift to state 46
-- On T_NAMESPACE_C shift to state 49
-- On T_NAMESPACE shift to state 50
-- On T_METHOD_C shift to state 58
-- On T_METAVAR shift to state 17
-- On T_LNUMBER shift to state 59
-- On T_LIST shift to state 69
-- On T_LINE shift to state 60
-- On T_LAMBDA_OPAR shift to state 73
-- On T_ISSET shift to state 133
-- On T_INT_CAST shift to state 135
-- On T_INSTANCEOF shift to state 52
-- On T_INCLUDE_ONCE shift to state 136
-- On T_INCLUDE shift to state 137
-- On T_INC shift to state 138
-- On T_IDENT shift to state 18
-- On T_FUNC_C shift to state 61
-- On T_FUNCTION shift to state 139
-- On T_FILE shift to state 62
-- On T_EXIT shift to state 160
-- On T_EVAL shift to state 162
-- On T_ENUM shift to state 19
-- On T_EMPTY shift to state 164
-- On T_ELLIPSIS shift to state 579
-- On T_DOUBLE_CAST shift to state 168
-- On T_DNUMBER shift to state 63
-- On T_DIR shift to state 64
-- On T_DEC shift to state 169
-- On T_CONSTANT_ENCAPSED_STRING shift to state 65
-- On T_CLONE shift to state 170
-- On T_CLASS_C shift to state 66
-- On T_BOOL_CAST shift to state 171
-- On T_AWAIT shift to state 172
-- On T_ASYNC shift to state 173
-- On T_ARRAY_CAST shift to state 200
-- On T_ARRAY shift to state 201
-- On TTILDE shift to state 204
-- On TPLUS shift to state 205
-- On TOPAR shift to state 206
-- On TOBRA shift to state 209
-- On TMINUS shift to state 210
-- On TGUIL shift to state 211
-- On TDOLLARDOLLAR shift to state 213
-- On TDOLLAR shift to state 214
-- On TBANG shift to state 216
-- On TBACKQUOTE shift to state 217
-- On TANTISLASH shift to state 85
-- On LDots shift to state 222
-- On simple_expr shift to state 223
-- On qualified_name shift to state 94
-- On qualified_class_name shift to state 225
-- On primary_expr shift to state 226
-- On new_expr shift to state 227
-- On namespace_name shift to state 102
-- On member_expr shift to state 228
-- On lambda_expr shift to state 231
-- On ident_in_name shift to state 57
-- On ident shift to state 56
-- On expr shift to state 801
-- On constant shift to state 239
-- On call_expr shift to state 240
## Reductions:

State 579:
## Known stack suffix:
## T_IF TOPAR T_ELLIPSIS
## LR(1) items:
statement -> T_IF TOPAR T_ELLIPSIS . TCPAR statement elseif_list else_single [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_ENDWHILE T_ENDSWITCH T_ENDIF T_ENDFOREACH T_ENDFOR T_ENDDECLARE T_EMPTY T_ELSEIF T_ELSE T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DEFAULT T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_CASE T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
statement -> T_IF TOPAR T_ELLIPSIS . TCPAR TCOLON list(inner_statement) new_elseif_list new_else_single T_ENDIF TSEMICOLON [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_ENDWHILE T_ENDSWITCH T_ENDIF T_ENDFOREACH T_ENDFOR T_ENDDECLARE T_EMPTY T_ELSEIF T_ELSE T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DEFAULT T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_CASE T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
## Transitions:
-- On TCPAR shift to state 580
## Reductions:

State 580:
## Known stack suffix:
## T_IF TOPAR T_ELLIPSIS TCPAR
## LR(1) items:
statement -> T_IF TOPAR T_ELLIPSIS TCPAR . statement elseif_list else_single [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_ENDWHILE T_ENDSWITCH T_ENDIF T_ENDFOREACH T_ENDFOR T_ENDDECLARE T_EMPTY T_ELSEIF T_ELSE T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DEFAULT T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_CASE T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
statement -> T_IF TOPAR T_ELLIPSIS TCPAR . TCOLON list(inner_statement) new_elseif_list new_else_single T_ENDIF TSEMICOLON [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_ENDWHILE T_ENDSWITCH T_ENDIF T_ENDFOREACH T_ENDFOR T_ENDDECLARE T_EMPTY T_ELSEIF T_ELSE T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DEFAULT T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_CASE T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
## Transitions:
-- On T__AT shift to state 1
-- On T_YIELD shift to state 2
-- On T_WHILE shift to state 158
-- On T_VARIABLE shift to state 3
-- On T_USE shift to state 190
-- On T_UNSET_CAST shift to state 5
-- On T_UNSET shift to state 197
-- On T_TYPE shift to state 6
-- On T_TRY shift to state 391
-- On T_TRAIT_C shift to state 7
-- On T_THROW shift to state 520
-- On T_SWITCH shift to state 525
-- On T_SUPER shift to state 8
-- On T_STRING_CAST shift to state 9
-- On T_STATIC shift to state 581
-- On T_START_HEREDOC shift to state 25
-- On T_SELF shift to state 40
-- On T_RETURN shift to state 553
-- On T_REQUIRE_ONCE shift to state 41
-- On T_REQUIRE shift to state 42
-- On T_PRINT shift to state 43
-- On T_PARENT shift to state 44
-- On T_OPEN_TAG_WITH_ECHO shift to state 558
-- On T_OBJECT_CAST shift to state 45
-- On T_NEW shift to state 46
-- On T_NAMESPACE_C shift to state 49
-- On T_NAMESPACE shift to state 50
-- On T_METHOD_C shift to state 58
-- On T_METAVAR shift to state 17
-- On T_LNUMBER shift to state 59
-- On T_LIST shift to state 69
-- On T_LINE shift to state 60
-- On T_LAMBDA_OPAR shift to state 73
-- On T_ISSET shift to state 133
-- On T_INT_CAST shift to state 135
-- On T_INSTANCEOF shift to state 52
-- On T_INLINE_HTML shift to state 576
-- On T_INCLUDE_ONCE shift to state 136
-- On T_INCLUDE shift to state 137
-- On T_INC shift to state 138
-- On T_IF shift to state 577
-- On T_IDENT shift to state 18
-- On T_GLOBAL shift to state 587
-- On T_FUNC_C shift to state 61
-- On T_FUNCTION shift to state 139
-- On T_FOREACH shift to state 600
-- On T_FOR shift to state 624
-- On T_FILE shift to state 62
-- On T_EXIT shift to state 160
-- On T_EVAL shift to state 162
-- On T_ENUM shift to state 19
-- On T_EMPTY shift to state 164
-- On T_ELLIPSIS shift to state 635
-- On T_ECHO shift to state 636
-- On T_DOUBLE_CAST shift to state 168
-- On T_DO shift to state 644
-- On T_DNUMBER shift to state 63
-- On T_DIR shift to state 64
-- On T_DECLARE shift to state 645
-- On T_DEC shift to state 169
-- On T_CONTINUE shift to state 649
-- On T_CONSTANT_ENCAPSED_STRING shift to state 65
-- On T_CLONE shift to state 170
-- On T_CLASS_C shift to state 66
-- On T_BREAK shift to state 652
-- On T_BOOL_CAST shift to state 171
-- On T_AWAIT shift to state 172
-- On T_ASYNC shift to state 173
-- On T_ARRAY_CAST shift to state 200
-- On T_ARRAY shift to state 201
-- On TTILDE shift to state 204
-- On TSEMICOLON shift to state 655
-- On TPLUS shift to state 205
-- On TOPAR shift to state 206
-- On TOBRACE shift to state 656
-- On TOBRA shift to state 209
-- On TMINUS shift to state 210
-- On TGUIL shift to state 211
-- On TDOLLARDOLLAR shift to state 213
-- On TDOLLAR shift to state 214
-- On TCOLON shift to state 769
-- On TBANG shift to state 216
-- On TBACKQUOTE shift to state 217
-- On TANTISLASH shift to state 85
-- On LDots shift to state 222
-- On statement shift to state 788
-- On simple_expr shift to state 223
-- On qualified_name shift to state 94
-- On qualified_class_name shift to state 225
-- On primary_expr shift to state 226
-- On new_expr shift to state 227
-- On namespace_name shift to state 102
-- On member_expr shift to state 228
-- On lambda_expr shift to state 231
-- On ident_in_name shift to state 57
-- On ident shift to state 56
-- On expr shift to state 704
-- On constant shift to state 239
-- On call_expr shift to state 240
## Reductions:

State 581:
## Known stack suffix:
## T_STATIC
## LR(1) items:
expr -> T_STATIC . T_FUNCTION is_reference TOPAR parameter_list TCPAR lexical_vars option(return_type) TOBRACE list(inner_statement) TCBRACE [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TAND ]
primary_expr -> T_STATIC . [ T_XOR_EQUAL T_SR_EQUAL T_SR T_SL_EQUAL T_SL T_ROCKET T_PLUS_EQUAL T_OR_EQUAL T_OBJECT_OPERATOR T_MUL_EQUAL T_MOD_EQUAL T_MINUS_EQUAL T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DIV_EQUAL T_DEC T_CONCAT_EQUAL T_BOOLEAN_OR T_BOOLEAN_AND T_AND_EQUAL TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TOPAR TOBRACE TOBRA TMUL TMOD TMINUS TGREATER TEQ TDOT TDIV TCOLCOL TAND ]
statement -> T_STATIC . list_sep(static_var,TCOMMA) TSEMICOLON [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_ENDWHILE T_ENDSWITCH T_ENDIF T_ENDFOREACH T_ENDFOR T_ENDDECLARE T_EMPTY T_ELSEIF T_ELSE T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DEFAULT T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_CASE T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
## Transitions:
-- On T_VARIABLE shift to state 537
-- On T_METAVAR shift to state 540
-- On T_FUNCTION shift to state 11
-- On static_var shift to state 582
-- On list_sep(static_var,TCOMMA) shift to state 583
## Reductions:
-- On T_XOR_EQUAL T_SR_EQUAL T_SR T_SL_EQUAL T_SL T_ROCKET T_PLUS_EQUAL T_OR_EQUAL T_OBJECT_OPERATOR T_MUL_EQUAL T_MOD_EQUAL T_MINUS_EQUAL T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DIV_EQUAL T_DEC T_CONCAT_EQUAL T_BOOLEAN_OR T_BOOLEAN_AND T_AND_EQUAL TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TOPAR TOBRACE TOBRA TMUL TMOD TMINUS TGREATER TEQ TDOT TDIV TCOLCOL TAND
--   reduce production primary_expr -> T_STATIC

State 582:
## Known stack suffix:
## static_var
## LR(1) items:
list_sep(static_var,TCOMMA) -> static_var . [ TSEMICOLON TCOMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production list_sep(static_var,TCOMMA) -> static_var

State 583:
## Known stack suffix:
## T_STATIC list_sep(static_var,TCOMMA)
## LR(1) items:
list_sep(static_var,TCOMMA) -> list_sep(static_var,TCOMMA) . TCOMMA static_var [ TSEMICOLON TCOMMA ]
statement -> T_STATIC list_sep(static_var,TCOMMA) . TSEMICOLON [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_ENDWHILE T_ENDSWITCH T_ENDIF T_ENDFOREACH T_ENDFOR T_ENDDECLARE T_EMPTY T_ELSEIF T_ELSE T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DEFAULT T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_CASE T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
## Transitions:
-- On TSEMICOLON shift to state 584
-- On TCOMMA shift to state 585
## Reductions:

State 584:
## Known stack suffix:
## T_STATIC list_sep(static_var,TCOMMA) TSEMICOLON
## LR(1) items:
statement -> T_STATIC list_sep(static_var,TCOMMA) TSEMICOLON . [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_ENDWHILE T_ENDSWITCH T_ENDIF T_ENDFOREACH T_ENDFOR T_ENDDECLARE T_EMPTY T_ELSEIF T_ELSE T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DEFAULT T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_CASE T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production statement -> T_STATIC list_sep(static_var,TCOMMA) TSEMICOLON

State 585:
## Known stack suffix:
## list_sep(static_var,TCOMMA) TCOMMA
## LR(1) items:
list_sep(static_var,TCOMMA) -> list_sep(static_var,TCOMMA) TCOMMA . static_var [ TSEMICOLON TCOMMA ]
## Transitions:
-- On T_VARIABLE shift to state 537
-- On T_METAVAR shift to state 540
-- On static_var shift to state 586
## Reductions:

State 586:
## Known stack suffix:
## list_sep(static_var,TCOMMA) TCOMMA static_var
## LR(1) items:
list_sep(static_var,TCOMMA) -> list_sep(static_var,TCOMMA) TCOMMA static_var . [ TSEMICOLON TCOMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production list_sep(static_var,TCOMMA) -> list_sep(static_var,TCOMMA) TCOMMA static_var

State 587:
## Known stack suffix:
## T_GLOBAL
## LR(1) items:
statement -> T_GLOBAL . list_sep(global_var,TCOMMA) TSEMICOLON [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_ENDWHILE T_ENDSWITCH T_ENDIF T_ENDFOREACH T_ENDFOR T_ENDDECLARE T_EMPTY T_ELSEIF T_ELSE T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DEFAULT T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_CASE T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
## Transitions:
-- On T_VARIABLE shift to state 588
-- On T_METAVAR shift to state 589
-- On TDOLLAR shift to state 590
-- On list_sep(global_var,TCOMMA) shift to state 595
-- On global_var shift to state 599
## Reductions:

State 588:
## Known stack suffix:
## T_VARIABLE
## LR(1) items:
global_var -> T_VARIABLE . [ TSEMICOLON TCOMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production global_var -> T_VARIABLE

State 589:
## Known stack suffix:
## T_METAVAR
## LR(1) items:
global_var -> T_METAVAR . [ TSEMICOLON TCOMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production global_var -> T_METAVAR

State 590:
## Known stack suffix:
## TDOLLAR
## LR(1) items:
global_var -> TDOLLAR . expr [ TSEMICOLON TCOMMA ]
global_var -> TDOLLAR . TOBRACE expr TCBRACE [ TSEMICOLON TCOMMA ]
## Transitions:
-- On T__AT shift to state 1
-- On T_YIELD shift to state 2
-- On T_VARIABLE shift to state 3
-- On T_UNSET_CAST shift to state 5
-- On T_TYPE shift to state 6
-- On T_TRAIT_C shift to state 7
-- On T_SUPER shift to state 8
-- On T_STRING_CAST shift to state 9
-- On T_STATIC shift to state 10
-- On T_START_HEREDOC shift to state 25
-- On T_SELF shift to state 40
-- On T_REQUIRE_ONCE shift to state 41
-- On T_REQUIRE shift to state 42
-- On T_PRINT shift to state 43
-- On T_PARENT shift to state 44
-- On T_OBJECT_CAST shift to state 45
-- On T_NEW shift to state 46
-- On T_NAMESPACE_C shift to state 49
-- On T_NAMESPACE shift to state 50
-- On T_METHOD_C shift to state 58
-- On T_METAVAR shift to state 17
-- On T_LNUMBER shift to state 59
-- On T_LIST shift to state 69
-- On T_LINE shift to state 60
-- On T_LAMBDA_OPAR shift to state 73
-- On T_ISSET shift to state 133
-- On T_INT_CAST shift to state 135
-- On T_INSTANCEOF shift to state 52
-- On T_INCLUDE_ONCE shift to state 136
-- On T_INCLUDE shift to state 137
-- On T_INC shift to state 138
-- On T_IDENT shift to state 18
-- On T_FUNC_C shift to state 61
-- On T_FUNCTION shift to state 139
-- On T_FILE shift to state 62
-- On T_EXIT shift to state 160
-- On T_EVAL shift to state 162
-- On T_ENUM shift to state 19
-- On T_EMPTY shift to state 164
-- On T_DOUBLE_CAST shift to state 168
-- On T_DNUMBER shift to state 63
-- On T_DIR shift to state 64
-- On T_DEC shift to state 169
-- On T_CONSTANT_ENCAPSED_STRING shift to state 65
-- On T_CLONE shift to state 170
-- On T_CLASS_C shift to state 66
-- On T_BOOL_CAST shift to state 171
-- On T_AWAIT shift to state 172
-- On T_ASYNC shift to state 173
-- On T_ARRAY_CAST shift to state 200
-- On T_ARRAY shift to state 201
-- On TTILDE shift to state 204
-- On TPLUS shift to state 205
-- On TOPAR shift to state 206
-- On TOBRACE shift to state 591
-- On TOBRA shift to state 209
-- On TMINUS shift to state 210
-- On TGUIL shift to state 211
-- On TDOLLARDOLLAR shift to state 213
-- On TDOLLAR shift to state 214
-- On TBANG shift to state 216
-- On TBACKQUOTE shift to state 217
-- On TANTISLASH shift to state 85
-- On LDots shift to state 222
-- On simple_expr shift to state 223
-- On qualified_name shift to state 94
-- On qualified_class_name shift to state 225
-- On primary_expr shift to state 226
-- On new_expr shift to state 227
-- On namespace_name shift to state 102
-- On member_expr shift to state 228
-- On lambda_expr shift to state 231
-- On ident_in_name shift to state 57
-- On ident shift to state 56
-- On expr shift to state 594
-- On constant shift to state 239
-- On call_expr shift to state 240
## Reductions:

State 591:
## Known stack suffix:
## TDOLLAR TOBRACE
## LR(1) items:
global_var -> TDOLLAR TOBRACE . expr TCBRACE [ TSEMICOLON TCOMMA ]
## Transitions:
-- On T__AT shift to state 1
-- On T_YIELD shift to state 2
-- On T_VARIABLE shift to state 3
-- On T_UNSET_CAST shift to state 5
-- On T_TYPE shift to state 6
-- On T_TRAIT_C shift to state 7
-- On T_SUPER shift to state 8
-- On T_STRING_CAST shift to state 9
-- On T_STATIC shift to state 10
-- On T_START_HEREDOC shift to state 25
-- On T_SELF shift to state 40
-- On T_REQUIRE_ONCE shift to state 41
-- On T_REQUIRE shift to state 42
-- On T_PRINT shift to state 43
-- On T_PARENT shift to state 44
-- On T_OBJECT_CAST shift to state 45
-- On T_NEW shift to state 46
-- On T_NAMESPACE_C shift to state 49
-- On T_NAMESPACE shift to state 50
-- On T_METHOD_C shift to state 58
-- On T_METAVAR shift to state 17
-- On T_LNUMBER shift to state 59
-- On T_LIST shift to state 69
-- On T_LINE shift to state 60
-- On T_LAMBDA_OPAR shift to state 73
-- On T_ISSET shift to state 133
-- On T_INT_CAST shift to state 135
-- On T_INSTANCEOF shift to state 52
-- On T_INCLUDE_ONCE shift to state 136
-- On T_INCLUDE shift to state 137
-- On T_INC shift to state 138
-- On T_IDENT shift to state 18
-- On T_FUNC_C shift to state 61
-- On T_FUNCTION shift to state 139
-- On T_FILE shift to state 62
-- On T_EXIT shift to state 160
-- On T_EVAL shift to state 162
-- On T_ENUM shift to state 19
-- On T_EMPTY shift to state 164
-- On T_DOUBLE_CAST shift to state 168
-- On T_DNUMBER shift to state 63
-- On T_DIR shift to state 64
-- On T_DEC shift to state 169
-- On T_CONSTANT_ENCAPSED_STRING shift to state 65
-- On T_CLONE shift to state 170
-- On T_CLASS_C shift to state 66
-- On T_BOOL_CAST shift to state 171
-- On T_AWAIT shift to state 172
-- On T_ASYNC shift to state 173
-- On T_ARRAY_CAST shift to state 200
-- On T_ARRAY shift to state 201
-- On TTILDE shift to state 204
-- On TPLUS shift to state 205
-- On TOPAR shift to state 206
-- On TOBRA shift to state 209
-- On TMINUS shift to state 210
-- On TGUIL shift to state 211
-- On TDOLLARDOLLAR shift to state 213
-- On TDOLLAR shift to state 214
-- On TBANG shift to state 216
-- On TBACKQUOTE shift to state 217
-- On TANTISLASH shift to state 85
-- On LDots shift to state 222
-- On simple_expr shift to state 223
-- On qualified_name shift to state 94
-- On qualified_class_name shift to state 225
-- On primary_expr shift to state 226
-- On new_expr shift to state 227
-- On namespace_name shift to state 102
-- On member_expr shift to state 228
-- On lambda_expr shift to state 231
-- On ident_in_name shift to state 57
-- On ident shift to state 56
-- On expr shift to state 592
-- On constant shift to state 239
-- On call_expr shift to state 240
## Reductions:

State 592:
## Known stack suffix:
## TDOLLAR TOBRACE expr
## LR(1) items:
expr -> expr . T_INC [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCBRACE TAND ]
expr -> expr . T_DEC [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCBRACE TAND ]
expr -> expr . T_BOOLEAN_OR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCBRACE TAND ]
expr -> expr . T_BOOLEAN_AND expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCBRACE TAND ]
expr -> expr . T_LOGICAL_OR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCBRACE TAND ]
expr -> expr . T_LOGICAL_AND expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCBRACE TAND ]
expr -> expr . T_LOGICAL_XOR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCBRACE TAND ]
expr -> expr . TPLUS expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCBRACE TAND ]
expr -> expr . TMINUS expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCBRACE TAND ]
expr -> expr . TMUL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCBRACE TAND ]
expr -> expr . TDIV expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCBRACE TAND ]
expr -> expr . TMOD expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCBRACE TAND ]
expr -> expr . TPOW expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCBRACE TAND ]
expr -> expr . TAND expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCBRACE TAND ]
expr -> expr . TOR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCBRACE TAND ]
expr -> expr . TXOR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCBRACE TAND ]
expr -> expr . T_SL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCBRACE TAND ]
expr -> expr . T_SR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCBRACE TAND ]
expr -> expr . TDOT expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCBRACE TAND ]
expr -> expr . T_IS_IDENTICAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCBRACE TAND ]
expr -> expr . T_IS_NOT_IDENTICAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCBRACE TAND ]
expr -> expr . T_IS_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCBRACE TAND ]
expr -> expr . T_IS_NOT_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCBRACE TAND ]
expr -> expr . TSMALLER expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCBRACE TAND ]
expr -> expr . T_IS_SMALLER_OR_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCBRACE TAND ]
expr -> expr . TGREATER expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCBRACE TAND ]
expr -> expr . T_IS_GREATER_OR_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCBRACE TAND ]
expr -> expr . T_ROCKET expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCBRACE TAND ]
expr -> expr . TQUESTION expr TCOLON expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCBRACE TAND ]
expr -> expr . TQUESTION TCOLON expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCBRACE TAND ]
expr -> expr . TQUESTION TQUESTION expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCBRACE TAND ]
expr -> expr . T_INSTANCEOF expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCBRACE TAND ]
global_var -> TDOLLAR TOBRACE expr . TCBRACE [ TSEMICOLON TCOMMA ]
## Transitions:
-- On T_SR shift to state 233
-- On T_SL shift to state 244
-- On T_ROCKET shift to state 260
-- On T_LOGICAL_XOR shift to state 270
-- On T_LOGICAL_OR shift to state 298
-- On T_LOGICAL_AND shift to state 272
-- On T_IS_SMALLER_OR_EQUAL shift to state 262
-- On T_IS_NOT_IDENTICAL shift to state 274
-- On T_IS_NOT_EQUAL shift to state 276
-- On T_IS_IDENTICAL shift to state 278
-- On T_IS_GREATER_OR_EQUAL shift to state 264
-- On T_IS_EQUAL shift to state 280
-- On T_INSTANCEOF shift to state 235
-- On T_INC shift to state 237
-- On T_DEC shift to state 238
-- On T_BOOLEAN_OR shift to state 282
-- On T_BOOLEAN_AND shift to state 284
-- On TXOR shift to state 286
-- On TSMALLER shift to state 266
-- On TQUESTION shift to state 292
-- On TPOW shift to state 246
-- On TPLUS shift to state 248
-- On TOR shift to state 290
-- On TMUL shift to state 250
-- On TMOD shift to state 252
-- On TMINUS shift to state 256
-- On TGREATER shift to state 268
-- On TDOT shift to state 258
-- On TDIV shift to state 254
-- On TCBRACE shift to state 593
-- On TAND shift to state 288
## Reductions:

State 593:
## Known stack suffix:
## TDOLLAR TOBRACE expr TCBRACE
## LR(1) items:
global_var -> TDOLLAR TOBRACE expr TCBRACE . [ TSEMICOLON TCOMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production global_var -> TDOLLAR TOBRACE expr TCBRACE

State 594:
## Known stack suffix:
## TDOLLAR expr
## LR(1) items:
expr -> expr . T_INC [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCOMMA TAND ]
expr -> expr . T_DEC [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCOMMA TAND ]
expr -> expr . T_BOOLEAN_OR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCOMMA TAND ]
expr -> expr . T_BOOLEAN_AND expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCOMMA TAND ]
expr -> expr . T_LOGICAL_OR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCOMMA TAND ]
expr -> expr . T_LOGICAL_AND expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCOMMA TAND ]
expr -> expr . T_LOGICAL_XOR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCOMMA TAND ]
expr -> expr . TPLUS expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCOMMA TAND ]
expr -> expr . TMINUS expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCOMMA TAND ]
expr -> expr . TMUL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCOMMA TAND ]
expr -> expr . TDIV expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCOMMA TAND ]
expr -> expr . TMOD expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCOMMA TAND ]
expr -> expr . TPOW expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCOMMA TAND ]
expr -> expr . TAND expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCOMMA TAND ]
expr -> expr . TOR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCOMMA TAND ]
expr -> expr . TXOR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCOMMA TAND ]
expr -> expr . T_SL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCOMMA TAND ]
expr -> expr . T_SR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCOMMA TAND ]
expr -> expr . TDOT expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCOMMA TAND ]
expr -> expr . T_IS_IDENTICAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCOMMA TAND ]
expr -> expr . T_IS_NOT_IDENTICAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCOMMA TAND ]
expr -> expr . T_IS_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCOMMA TAND ]
expr -> expr . T_IS_NOT_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCOMMA TAND ]
expr -> expr . TSMALLER expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCOMMA TAND ]
expr -> expr . T_IS_SMALLER_OR_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCOMMA TAND ]
expr -> expr . TGREATER expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCOMMA TAND ]
expr -> expr . T_IS_GREATER_OR_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCOMMA TAND ]
expr -> expr . T_ROCKET expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCOMMA TAND ]
expr -> expr . TQUESTION expr TCOLON expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCOMMA TAND ]
expr -> expr . TQUESTION TCOLON expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCOMMA TAND ]
expr -> expr . TQUESTION TQUESTION expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCOMMA TAND ]
expr -> expr . T_INSTANCEOF expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCOMMA TAND ]
global_var -> TDOLLAR expr . [ TSEMICOLON TCOMMA ]
## Transitions:
-- On T_SR shift to state 233
-- On T_SL shift to state 244
-- On T_ROCKET shift to state 260
-- On T_LOGICAL_XOR shift to state 270
-- On T_LOGICAL_OR shift to state 298
-- On T_LOGICAL_AND shift to state 272
-- On T_IS_SMALLER_OR_EQUAL shift to state 262
-- On T_IS_NOT_IDENTICAL shift to state 274
-- On T_IS_NOT_EQUAL shift to state 276
-- On T_IS_IDENTICAL shift to state 278
-- On T_IS_GREATER_OR_EQUAL shift to state 264
-- On T_IS_EQUAL shift to state 280
-- On T_INSTANCEOF shift to state 235
-- On T_INC shift to state 237
-- On T_DEC shift to state 238
-- On T_BOOLEAN_OR shift to state 282
-- On T_BOOLEAN_AND shift to state 284
-- On TXOR shift to state 286
-- On TSMALLER shift to state 266
-- On TQUESTION shift to state 292
-- On TPOW shift to state 246
-- On TPLUS shift to state 248
-- On TOR shift to state 290
-- On TMUL shift to state 250
-- On TMOD shift to state 252
-- On TMINUS shift to state 256
-- On TGREATER shift to state 268
-- On TDOT shift to state 258
-- On TDIV shift to state 254
-- On TAND shift to state 288
## Reductions:
-- On TSEMICOLON TCOMMA
--   reduce production global_var -> TDOLLAR expr

State 595:
## Known stack suffix:
## T_GLOBAL list_sep(global_var,TCOMMA)
## LR(1) items:
list_sep(global_var,TCOMMA) -> list_sep(global_var,TCOMMA) . TCOMMA global_var [ TSEMICOLON TCOMMA ]
statement -> T_GLOBAL list_sep(global_var,TCOMMA) . TSEMICOLON [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_ENDWHILE T_ENDSWITCH T_ENDIF T_ENDFOREACH T_ENDFOR T_ENDDECLARE T_EMPTY T_ELSEIF T_ELSE T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DEFAULT T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_CASE T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
## Transitions:
-- On TSEMICOLON shift to state 596
-- On TCOMMA shift to state 597
## Reductions:

State 596:
## Known stack suffix:
## T_GLOBAL list_sep(global_var,TCOMMA) TSEMICOLON
## LR(1) items:
statement -> T_GLOBAL list_sep(global_var,TCOMMA) TSEMICOLON . [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_ENDWHILE T_ENDSWITCH T_ENDIF T_ENDFOREACH T_ENDFOR T_ENDDECLARE T_EMPTY T_ELSEIF T_ELSE T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DEFAULT T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_CASE T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production statement -> T_GLOBAL list_sep(global_var,TCOMMA) TSEMICOLON

State 597:
## Known stack suffix:
## list_sep(global_var,TCOMMA) TCOMMA
## LR(1) items:
list_sep(global_var,TCOMMA) -> list_sep(global_var,TCOMMA) TCOMMA . global_var [ TSEMICOLON TCOMMA ]
## Transitions:
-- On T_VARIABLE shift to state 588
-- On T_METAVAR shift to state 589
-- On TDOLLAR shift to state 590
-- On global_var shift to state 598
## Reductions:

State 598:
## Known stack suffix:
## list_sep(global_var,TCOMMA) TCOMMA global_var
## LR(1) items:
list_sep(global_var,TCOMMA) -> list_sep(global_var,TCOMMA) TCOMMA global_var . [ TSEMICOLON TCOMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production list_sep(global_var,TCOMMA) -> list_sep(global_var,TCOMMA) TCOMMA global_var

State 599:
## Known stack suffix:
## global_var
## LR(1) items:
list_sep(global_var,TCOMMA) -> global_var . [ TSEMICOLON TCOMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production list_sep(global_var,TCOMMA) -> global_var

State 600:
## Known stack suffix:
## T_FOREACH
## LR(1) items:
statement -> T_FOREACH . TOPAR expr T_AS foreach_pattern TCPAR foreach_statement [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_ENDWHILE T_ENDSWITCH T_ENDIF T_ENDFOREACH T_ENDFOR T_ENDDECLARE T_EMPTY T_ELSEIF T_ELSE T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DEFAULT T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_CASE T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
statement -> T_FOREACH . TOPAR expr T_AWAIT T_AS foreach_pattern TCPAR foreach_statement [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_ENDWHILE T_ENDSWITCH T_ENDIF T_ENDFOREACH T_ENDFOR T_ENDDECLARE T_EMPTY T_ELSEIF T_ELSE T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DEFAULT T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_CASE T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
## Transitions:
-- On TOPAR shift to state 601
## Reductions:

State 601:
## Known stack suffix:
## T_FOREACH TOPAR
## LR(1) items:
statement -> T_FOREACH TOPAR . expr T_AS foreach_pattern TCPAR foreach_statement [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_ENDWHILE T_ENDSWITCH T_ENDIF T_ENDFOREACH T_ENDFOR T_ENDDECLARE T_EMPTY T_ELSEIF T_ELSE T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DEFAULT T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_CASE T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
statement -> T_FOREACH TOPAR . expr T_AWAIT T_AS foreach_pattern TCPAR foreach_statement [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_ENDWHILE T_ENDSWITCH T_ENDIF T_ENDFOREACH T_ENDFOR T_ENDDECLARE T_EMPTY T_ELSEIF T_ELSE T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DEFAULT T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_CASE T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
## Transitions:
-- On T__AT shift to state 1
-- On T_YIELD shift to state 2
-- On T_VARIABLE shift to state 3
-- On T_UNSET_CAST shift to state 5
-- On T_TYPE shift to state 6
-- On T_TRAIT_C shift to state 7
-- On T_SUPER shift to state 8
-- On T_STRING_CAST shift to state 9
-- On T_STATIC shift to state 10
-- On T_START_HEREDOC shift to state 25
-- On T_SELF shift to state 40
-- On T_REQUIRE_ONCE shift to state 41
-- On T_REQUIRE shift to state 42
-- On T_PRINT shift to state 43
-- On T_PARENT shift to state 44
-- On T_OBJECT_CAST shift to state 45
-- On T_NEW shift to state 46
-- On T_NAMESPACE_C shift to state 49
-- On T_NAMESPACE shift to state 50
-- On T_METHOD_C shift to state 58
-- On T_METAVAR shift to state 17
-- On T_LNUMBER shift to state 59
-- On T_LIST shift to state 69
-- On T_LINE shift to state 60
-- On T_LAMBDA_OPAR shift to state 73
-- On T_ISSET shift to state 133
-- On T_INT_CAST shift to state 135
-- On T_INSTANCEOF shift to state 52
-- On T_INCLUDE_ONCE shift to state 136
-- On T_INCLUDE shift to state 137
-- On T_INC shift to state 138
-- On T_IDENT shift to state 18
-- On T_FUNC_C shift to state 61
-- On T_FUNCTION shift to state 139
-- On T_FILE shift to state 62
-- On T_EXIT shift to state 160
-- On T_EVAL shift to state 162
-- On T_ENUM shift to state 19
-- On T_EMPTY shift to state 164
-- On T_DOUBLE_CAST shift to state 168
-- On T_DNUMBER shift to state 63
-- On T_DIR shift to state 64
-- On T_DEC shift to state 169
-- On T_CONSTANT_ENCAPSED_STRING shift to state 65
-- On T_CLONE shift to state 170
-- On T_CLASS_C shift to state 66
-- On T_BOOL_CAST shift to state 171
-- On T_AWAIT shift to state 172
-- On T_ASYNC shift to state 173
-- On T_ARRAY_CAST shift to state 200
-- On T_ARRAY shift to state 201
-- On TTILDE shift to state 204
-- On TPLUS shift to state 205
-- On TOPAR shift to state 206
-- On TOBRA shift to state 209
-- On TMINUS shift to state 210
-- On TGUIL shift to state 211
-- On TDOLLARDOLLAR shift to state 213
-- On TDOLLAR shift to state 214
-- On TBANG shift to state 216
-- On TBACKQUOTE shift to state 217
-- On TANTISLASH shift to state 85
-- On LDots shift to state 222
-- On simple_expr shift to state 223
-- On qualified_name shift to state 94
-- On qualified_class_name shift to state 225
-- On primary_expr shift to state 226
-- On new_expr shift to state 227
-- On namespace_name shift to state 102
-- On member_expr shift to state 228
-- On lambda_expr shift to state 231
-- On ident_in_name shift to state 57
-- On ident shift to state 56
-- On expr shift to state 602
-- On constant shift to state 239
-- On call_expr shift to state 240
## Reductions:

State 602:
## Known stack suffix:
## T_FOREACH TOPAR expr
## LR(1) items:
expr -> expr . T_INC [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TAND ]
expr -> expr . T_DEC [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TAND ]
expr -> expr . T_BOOLEAN_OR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TAND ]
expr -> expr . T_BOOLEAN_AND expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TAND ]
expr -> expr . T_LOGICAL_OR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TAND ]
expr -> expr . T_LOGICAL_AND expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TAND ]
expr -> expr . T_LOGICAL_XOR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TAND ]
expr -> expr . TPLUS expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TAND ]
expr -> expr . TMINUS expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TAND ]
expr -> expr . TMUL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TAND ]
expr -> expr . TDIV expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TAND ]
expr -> expr . TMOD expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TAND ]
expr -> expr . TPOW expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TAND ]
expr -> expr . TAND expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TAND ]
expr -> expr . TOR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TAND ]
expr -> expr . TXOR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TAND ]
expr -> expr . T_SL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TAND ]
expr -> expr . T_SR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TAND ]
expr -> expr . TDOT expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TAND ]
expr -> expr . T_IS_IDENTICAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TAND ]
expr -> expr . T_IS_NOT_IDENTICAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TAND ]
expr -> expr . T_IS_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TAND ]
expr -> expr . T_IS_NOT_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TAND ]
expr -> expr . TSMALLER expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TAND ]
expr -> expr . T_IS_SMALLER_OR_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TAND ]
expr -> expr . TGREATER expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TAND ]
expr -> expr . T_IS_GREATER_OR_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TAND ]
expr -> expr . T_ROCKET expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TAND ]
expr -> expr . TQUESTION expr TCOLON expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TAND ]
expr -> expr . TQUESTION TCOLON expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TAND ]
expr -> expr . TQUESTION TQUESTION expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TAND ]
expr -> expr . T_INSTANCEOF expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TAND ]
statement -> T_FOREACH TOPAR expr . T_AS foreach_pattern TCPAR foreach_statement [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_ENDWHILE T_ENDSWITCH T_ENDIF T_ENDFOREACH T_ENDFOR T_ENDDECLARE T_EMPTY T_ELSEIF T_ELSE T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DEFAULT T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_CASE T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
statement -> T_FOREACH TOPAR expr . T_AWAIT T_AS foreach_pattern TCPAR foreach_statement [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_ENDWHILE T_ENDSWITCH T_ENDIF T_ENDFOREACH T_ENDFOR T_ENDDECLARE T_EMPTY T_ELSEIF T_ELSE T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DEFAULT T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_CASE T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
## Transitions:
-- On T_SR shift to state 233
-- On T_SL shift to state 244
-- On T_ROCKET shift to state 260
-- On T_LOGICAL_XOR shift to state 270
-- On T_LOGICAL_OR shift to state 298
-- On T_LOGICAL_AND shift to state 272
-- On T_IS_SMALLER_OR_EQUAL shift to state 262
-- On T_IS_NOT_IDENTICAL shift to state 274
-- On T_IS_NOT_EQUAL shift to state 276
-- On T_IS_IDENTICAL shift to state 278
-- On T_IS_GREATER_OR_EQUAL shift to state 264
-- On T_IS_EQUAL shift to state 280
-- On T_INSTANCEOF shift to state 235
-- On T_INC shift to state 237
-- On T_DEC shift to state 238
-- On T_BOOLEAN_OR shift to state 282
-- On T_BOOLEAN_AND shift to state 284
-- On T_AWAIT shift to state 603
-- On T_AS shift to state 765
-- On TXOR shift to state 286
-- On TSMALLER shift to state 266
-- On TQUESTION shift to state 292
-- On TPOW shift to state 246
-- On TPLUS shift to state 248
-- On TOR shift to state 290
-- On TMUL shift to state 250
-- On TMOD shift to state 252
-- On TMINUS shift to state 256
-- On TGREATER shift to state 268
-- On TDOT shift to state 258
-- On TDIV shift to state 254
-- On TAND shift to state 288
## Reductions:

State 603:
## Known stack suffix:
## T_FOREACH TOPAR expr T_AWAIT
## LR(1) items:
statement -> T_FOREACH TOPAR expr T_AWAIT . T_AS foreach_pattern TCPAR foreach_statement [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_ENDWHILE T_ENDSWITCH T_ENDIF T_ENDFOREACH T_ENDFOR T_ENDDECLARE T_EMPTY T_ELSEIF T_ELSE T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DEFAULT T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_CASE T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
## Transitions:
-- On T_AS shift to state 604
## Reductions:

State 604:
## Known stack suffix:
## T_FOREACH TOPAR expr T_AWAIT T_AS
## LR(1) items:
statement -> T_FOREACH TOPAR expr T_AWAIT T_AS . foreach_pattern TCPAR foreach_statement [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_ENDWHILE T_ENDSWITCH T_ENDIF T_ENDFOREACH T_ENDFOR T_ENDDECLARE T_EMPTY T_ELSEIF T_ELSE T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DEFAULT T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_CASE T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
## Transitions:
-- On T__AT shift to state 1
-- On T_YIELD shift to state 2
-- On T_VARIABLE shift to state 3
-- On T_UNSET_CAST shift to state 5
-- On T_TYPE shift to state 6
-- On T_TRAIT_C shift to state 7
-- On T_SUPER shift to state 8
-- On T_STRING_CAST shift to state 9
-- On T_STATIC shift to state 10
-- On T_START_HEREDOC shift to state 25
-- On T_SELF shift to state 40
-- On T_REQUIRE_ONCE shift to state 41
-- On T_REQUIRE shift to state 42
-- On T_PRINT shift to state 43
-- On T_PARENT shift to state 44
-- On T_OBJECT_CAST shift to state 45
-- On T_NEW shift to state 46
-- On T_NAMESPACE_C shift to state 49
-- On T_NAMESPACE shift to state 50
-- On T_METHOD_C shift to state 58
-- On T_METAVAR shift to state 17
-- On T_LNUMBER shift to state 59
-- On T_LIST shift to state 605
-- On T_LINE shift to state 60
-- On T_LAMBDA_OPAR shift to state 73
-- On T_ISSET shift to state 133
-- On T_INT_CAST shift to state 135
-- On T_INSTANCEOF shift to state 52
-- On T_INCLUDE_ONCE shift to state 136
-- On T_INCLUDE shift to state 137
-- On T_INC shift to state 138
-- On T_IDENT shift to state 18
-- On T_FUNC_C shift to state 61
-- On T_FUNCTION shift to state 139
-- On T_FILE shift to state 62
-- On T_EXIT shift to state 160
-- On T_EVAL shift to state 162
-- On T_ENUM shift to state 19
-- On T_EMPTY shift to state 164
-- On T_DOUBLE_CAST shift to state 168
-- On T_DNUMBER shift to state 63
-- On T_DIR shift to state 64
-- On T_DEC shift to state 169
-- On T_CONSTANT_ENCAPSED_STRING shift to state 65
-- On T_CLONE shift to state 170
-- On T_CLASS_C shift to state 66
-- On T_BOOL_CAST shift to state 171
-- On T_AWAIT shift to state 172
-- On T_ASYNC shift to state 173
-- On T_ARRAY_CAST shift to state 200
-- On T_ARRAY shift to state 201
-- On TTILDE shift to state 204
-- On TPLUS shift to state 205
-- On TOPAR shift to state 206
-- On TOBRA shift to state 209
-- On TMINUS shift to state 210
-- On TGUIL shift to state 211
-- On TDOLLARDOLLAR shift to state 213
-- On TDOLLAR shift to state 214
-- On TBANG shift to state 216
-- On TBACKQUOTE shift to state 217
-- On TANTISLASH shift to state 85
-- On TAND shift to state 616
-- On LDots shift to state 222
-- On simple_expr shift to state 223
-- On qualified_name shift to state 94
-- On qualified_class_name shift to state 225
-- On primary_expr shift to state 226
-- On new_expr shift to state 227
-- On namespace_name shift to state 102
-- On member_expr shift to state 228
-- On lambda_expr shift to state 231
-- On ident_in_name shift to state 57
-- On ident shift to state 56
-- On foreach_variable shift to state 618
-- On foreach_pattern shift to state 622
-- On expr shift to state 621
-- On constant shift to state 239
-- On call_expr shift to state 240
## Reductions:

State 605:
## Known stack suffix:
## T_LIST
## LR(1) items:
expr -> T_LIST . TOPAR assignment_list TCPAR TEQ expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND T_ARROW TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
foreach_pattern -> T_LIST . TOPAR assignment_list TCPAR [ TCPAR ]
## Transitions:
-- On TOPAR shift to state 606
## Reductions:

State 606:
## Known stack suffix:
## T_LIST TOPAR
## LR(1) items:
expr -> T_LIST TOPAR . assignment_list TCPAR TEQ expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND T_ARROW TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
foreach_pattern -> T_LIST TOPAR . assignment_list TCPAR [ TCPAR ]
## Transitions:
-- On T__AT shift to state 1
-- On T_YIELD shift to state 2
-- On T_VARIABLE shift to state 3
-- On T_UNSET_CAST shift to state 5
-- On T_TYPE shift to state 6
-- On T_TRAIT_C shift to state 7
-- On T_SUPER shift to state 8
-- On T_STRING_CAST shift to state 9
-- On T_STATIC shift to state 10
-- On T_START_HEREDOC shift to state 25
-- On T_SELF shift to state 40
-- On T_REQUIRE_ONCE shift to state 41
-- On T_REQUIRE shift to state 42
-- On T_PRINT shift to state 43
-- On T_PARENT shift to state 44
-- On T_OBJECT_CAST shift to state 45
-- On T_NEW shift to state 46
-- On T_NAMESPACE_C shift to state 49
-- On T_NAMESPACE shift to state 50
-- On T_METHOD_C shift to state 58
-- On T_METAVAR shift to state 17
-- On T_LNUMBER shift to state 59
-- On T_LIST shift to state 71
-- On T_LINE shift to state 60
-- On T_LAMBDA_OPAR shift to state 73
-- On T_ISSET shift to state 133
-- On T_INT_CAST shift to state 135
-- On T_INSTANCEOF shift to state 52
-- On T_INCLUDE_ONCE shift to state 136
-- On T_INCLUDE shift to state 137
-- On T_INC shift to state 138
-- On T_IDENT shift to state 18
-- On T_FUNC_C shift to state 61
-- On T_FUNCTION shift to state 139
-- On T_FILE shift to state 62
-- On T_EXIT shift to state 160
-- On T_EVAL shift to state 162
-- On T_ENUM shift to state 19
-- On T_EMPTY shift to state 164
-- On T_DOUBLE_CAST shift to state 168
-- On T_DNUMBER shift to state 63
-- On T_DIR shift to state 64
-- On T_DEC shift to state 169
-- On T_CONSTANT_ENCAPSED_STRING shift to state 65
-- On T_CLONE shift to state 170
-- On T_CLASS_C shift to state 66
-- On T_BOOL_CAST shift to state 171
-- On T_AWAIT shift to state 172
-- On T_ASYNC shift to state 173
-- On T_ARRAY_CAST shift to state 200
-- On T_ARRAY shift to state 201
-- On TTILDE shift to state 204
-- On TPLUS shift to state 205
-- On TOPAR shift to state 206
-- On TOBRA shift to state 209
-- On TMINUS shift to state 210
-- On TGUIL shift to state 211
-- On TDOLLARDOLLAR shift to state 213
-- On TDOLLAR shift to state 214
-- On TBANG shift to state 216
-- On TBACKQUOTE shift to state 217
-- On TANTISLASH shift to state 85
-- On LDots shift to state 222
-- On simple_expr shift to state 223
-- On qualified_name shift to state 94
-- On qualified_class_name shift to state 225
-- On primary_expr shift to state 226
-- On new_expr shift to state 227
-- On namespace_name shift to state 102
-- On member_expr shift to state 228
-- On list_sep(assignment_list_element,TCOMMA) shift to state 607
-- On lambda_expr shift to state 231
-- On ident_in_name shift to state 57
-- On ident shift to state 56
-- On expr shift to state 609
-- On constant shift to state 239
-- On call_expr shift to state 240
-- On assignment_list_element shift to state 611
-- On assignment_list shift to state 612
## Reductions:
-- On TCPAR TCOMMA
--   reduce production assignment_list_element ->

State 607:
## Known stack suffix:
## list_sep(assignment_list_element,TCOMMA)
## LR(1) items:
assignment_list -> list_sep(assignment_list_element,TCOMMA) . [ TCPAR ]
list_sep(assignment_list_element,TCOMMA) -> list_sep(assignment_list_element,TCOMMA) . TCOMMA assignment_list_element [ TCPAR TCOMMA ]
## Transitions:
-- On TCOMMA shift to state 608
## Reductions:
-- On TCPAR
--   reduce production assignment_list -> list_sep(assignment_list_element,TCOMMA)

State 608:
## Known stack suffix:
## list_sep(assignment_list_element,TCOMMA) TCOMMA
## LR(1) items:
list_sep(assignment_list_element,TCOMMA) -> list_sep(assignment_list_element,TCOMMA) TCOMMA . assignment_list_element [ TCPAR TCOMMA ]
## Transitions:
-- On T__AT shift to state 1
-- On T_YIELD shift to state 2
-- On T_VARIABLE shift to state 3
-- On T_UNSET_CAST shift to state 5
-- On T_TYPE shift to state 6
-- On T_TRAIT_C shift to state 7
-- On T_SUPER shift to state 8
-- On T_STRING_CAST shift to state 9
-- On T_STATIC shift to state 10
-- On T_START_HEREDOC shift to state 25
-- On T_SELF shift to state 40
-- On T_REQUIRE_ONCE shift to state 41
-- On T_REQUIRE shift to state 42
-- On T_PRINT shift to state 43
-- On T_PARENT shift to state 44
-- On T_OBJECT_CAST shift to state 45
-- On T_NEW shift to state 46
-- On T_NAMESPACE_C shift to state 49
-- On T_NAMESPACE shift to state 50
-- On T_METHOD_C shift to state 58
-- On T_METAVAR shift to state 17
-- On T_LNUMBER shift to state 59
-- On T_LIST shift to state 71
-- On T_LINE shift to state 60
-- On T_LAMBDA_OPAR shift to state 73
-- On T_ISSET shift to state 133
-- On T_INT_CAST shift to state 135
-- On T_INSTANCEOF shift to state 52
-- On T_INCLUDE_ONCE shift to state 136
-- On T_INCLUDE shift to state 137
-- On T_INC shift to state 138
-- On T_IDENT shift to state 18
-- On T_FUNC_C shift to state 61
-- On T_FUNCTION shift to state 139
-- On T_FILE shift to state 62
-- On T_EXIT shift to state 160
-- On T_EVAL shift to state 162
-- On T_ENUM shift to state 19
-- On T_EMPTY shift to state 164
-- On T_DOUBLE_CAST shift to state 168
-- On T_DNUMBER shift to state 63
-- On T_DIR shift to state 64
-- On T_DEC shift to state 169
-- On T_CONSTANT_ENCAPSED_STRING shift to state 65
-- On T_CLONE shift to state 170
-- On T_CLASS_C shift to state 66
-- On T_BOOL_CAST shift to state 171
-- On T_AWAIT shift to state 172
-- On T_ASYNC shift to state 173
-- On T_ARRAY_CAST shift to state 200
-- On T_ARRAY shift to state 201
-- On TTILDE shift to state 204
-- On TPLUS shift to state 205
-- On TOPAR shift to state 206
-- On TOBRA shift to state 209
-- On TMINUS shift to state 210
-- On TGUIL shift to state 211
-- On TDOLLARDOLLAR shift to state 213
-- On TDOLLAR shift to state 214
-- On TBANG shift to state 216
-- On TBACKQUOTE shift to state 217
-- On TANTISLASH shift to state 85
-- On LDots shift to state 222
-- On simple_expr shift to state 223
-- On qualified_name shift to state 94
-- On qualified_class_name shift to state 225
-- On primary_expr shift to state 226
-- On new_expr shift to state 227
-- On namespace_name shift to state 102
-- On member_expr shift to state 228
-- On lambda_expr shift to state 231
-- On ident_in_name shift to state 57
-- On ident shift to state 56
-- On expr shift to state 609
-- On constant shift to state 239
-- On call_expr shift to state 240
-- On assignment_list_element shift to state 610
## Reductions:
-- On TCPAR TCOMMA
--   reduce production assignment_list_element ->

State 609:
## Known stack suffix:
## expr
## LR(1) items:
assignment_list_element -> expr . [ TCPAR TCOMMA ]
expr -> expr . T_INC [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TAND ]
expr -> expr . T_DEC [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TAND ]
expr -> expr . T_BOOLEAN_OR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TAND ]
expr -> expr . T_BOOLEAN_AND expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TAND ]
expr -> expr . T_LOGICAL_OR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TAND ]
expr -> expr . T_LOGICAL_AND expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TAND ]
expr -> expr . T_LOGICAL_XOR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TAND ]
expr -> expr . TPLUS expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TAND ]
expr -> expr . TMINUS expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TAND ]
expr -> expr . TMUL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TAND ]
expr -> expr . TDIV expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TAND ]
expr -> expr . TMOD expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TAND ]
expr -> expr . TPOW expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TAND ]
expr -> expr . TAND expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TAND ]
expr -> expr . TOR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TAND ]
expr -> expr . TXOR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TAND ]
expr -> expr . T_SL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TAND ]
expr -> expr . T_SR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TAND ]
expr -> expr . TDOT expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TAND ]
expr -> expr . T_IS_IDENTICAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TAND ]
expr -> expr . T_IS_NOT_IDENTICAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TAND ]
expr -> expr . T_IS_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TAND ]
expr -> expr . T_IS_NOT_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TAND ]
expr -> expr . TSMALLER expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TAND ]
expr -> expr . T_IS_SMALLER_OR_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TAND ]
expr -> expr . TGREATER expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TAND ]
expr -> expr . T_IS_GREATER_OR_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TAND ]
expr -> expr . T_ROCKET expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TAND ]
expr -> expr . TQUESTION expr TCOLON expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TAND ]
expr -> expr . TQUESTION TCOLON expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TAND ]
expr -> expr . TQUESTION TQUESTION expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TAND ]
expr -> expr . T_INSTANCEOF expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TAND ]
## Transitions:
-- On T_SR shift to state 233
-- On T_SL shift to state 244
-- On T_ROCKET shift to state 260
-- On T_LOGICAL_XOR shift to state 270
-- On T_LOGICAL_OR shift to state 298
-- On T_LOGICAL_AND shift to state 272
-- On T_IS_SMALLER_OR_EQUAL shift to state 262
-- On T_IS_NOT_IDENTICAL shift to state 274
-- On T_IS_NOT_EQUAL shift to state 276
-- On T_IS_IDENTICAL shift to state 278
-- On T_IS_GREATER_OR_EQUAL shift to state 264
-- On T_IS_EQUAL shift to state 280
-- On T_INSTANCEOF shift to state 235
-- On T_INC shift to state 237
-- On T_DEC shift to state 238
-- On T_BOOLEAN_OR shift to state 282
-- On T_BOOLEAN_AND shift to state 284
-- On TXOR shift to state 286
-- On TSMALLER shift to state 266
-- On TQUESTION shift to state 292
-- On TPOW shift to state 246
-- On TPLUS shift to state 248
-- On TOR shift to state 290
-- On TMUL shift to state 250
-- On TMOD shift to state 252
-- On TMINUS shift to state 256
-- On TGREATER shift to state 268
-- On TDOT shift to state 258
-- On TDIV shift to state 254
-- On TAND shift to state 288
## Reductions:
-- On TCPAR TCOMMA
--   reduce production assignment_list_element -> expr

State 610:
## Known stack suffix:
## list_sep(assignment_list_element,TCOMMA) TCOMMA assignment_list_element
## LR(1) items:
list_sep(assignment_list_element,TCOMMA) -> list_sep(assignment_list_element,TCOMMA) TCOMMA assignment_list_element . [ TCPAR TCOMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production list_sep(assignment_list_element,TCOMMA) -> list_sep(assignment_list_element,TCOMMA) TCOMMA assignment_list_element

State 611:
## Known stack suffix:
## assignment_list_element
## LR(1) items:
list_sep(assignment_list_element,TCOMMA) -> assignment_list_element . [ TCPAR TCOMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production list_sep(assignment_list_element,TCOMMA) -> assignment_list_element

State 612:
## Known stack suffix:
## T_LIST TOPAR assignment_list
## LR(1) items:
expr -> T_LIST TOPAR assignment_list . TCPAR TEQ expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND T_ARROW TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
foreach_pattern -> T_LIST TOPAR assignment_list . TCPAR [ TCPAR ]
## Transitions:
-- On TCPAR shift to state 613
## Reductions:

State 613:
## Known stack suffix:
## T_LIST TOPAR assignment_list TCPAR
## LR(1) items:
expr -> T_LIST TOPAR assignment_list TCPAR . TEQ expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND T_ARROW TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
foreach_pattern -> T_LIST TOPAR assignment_list TCPAR . [ TCPAR ]
## Transitions:
-- On TEQ shift to state 614
## Reductions:
-- On TCPAR
--   reduce production foreach_pattern -> T_LIST TOPAR assignment_list TCPAR

State 614:
## Known stack suffix:
## T_LIST TOPAR assignment_list TCPAR TEQ
## LR(1) items:
expr -> T_LIST TOPAR assignment_list TCPAR TEQ . expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
## Transitions:
-- On T__AT shift to state 1
-- On T_YIELD shift to state 2
-- On T_VARIABLE shift to state 3
-- On T_UNSET_CAST shift to state 5
-- On T_TYPE shift to state 6
-- On T_TRAIT_C shift to state 7
-- On T_SUPER shift to state 8
-- On T_STRING_CAST shift to state 9
-- On T_STATIC shift to state 10
-- On T_START_HEREDOC shift to state 25
-- On T_SELF shift to state 40
-- On T_REQUIRE_ONCE shift to state 41
-- On T_REQUIRE shift to state 42
-- On T_PRINT shift to state 43
-- On T_PARENT shift to state 44
-- On T_OBJECT_CAST shift to state 45
-- On T_NEW shift to state 46
-- On T_NAMESPACE_C shift to state 49
-- On T_NAMESPACE shift to state 50
-- On T_METHOD_C shift to state 58
-- On T_METAVAR shift to state 17
-- On T_LNUMBER shift to state 59
-- On T_LIST shift to state 69
-- On T_LINE shift to state 60
-- On T_LAMBDA_OPAR shift to state 73
-- On T_ISSET shift to state 133
-- On T_INT_CAST shift to state 135
-- On T_INSTANCEOF shift to state 52
-- On T_INCLUDE_ONCE shift to state 136
-- On T_INCLUDE shift to state 137
-- On T_INC shift to state 138
-- On T_IDENT shift to state 18
-- On T_FUNC_C shift to state 61
-- On T_FUNCTION shift to state 139
-- On T_FILE shift to state 62
-- On T_EXIT shift to state 160
-- On T_EVAL shift to state 162
-- On T_ENUM shift to state 19
-- On T_EMPTY shift to state 164
-- On T_DOUBLE_CAST shift to state 168
-- On T_DNUMBER shift to state 63
-- On T_DIR shift to state 64
-- On T_DEC shift to state 169
-- On T_CONSTANT_ENCAPSED_STRING shift to state 65
-- On T_CLONE shift to state 170
-- On T_CLASS_C shift to state 66
-- On T_BOOL_CAST shift to state 171
-- On T_AWAIT shift to state 172
-- On T_ASYNC shift to state 173
-- On T_ARRAY_CAST shift to state 200
-- On T_ARRAY shift to state 201
-- On TTILDE shift to state 204
-- On TPLUS shift to state 205
-- On TOPAR shift to state 206
-- On TOBRA shift to state 209
-- On TMINUS shift to state 210
-- On TGUIL shift to state 211
-- On TDOLLARDOLLAR shift to state 213
-- On TDOLLAR shift to state 214
-- On TBANG shift to state 216
-- On TBACKQUOTE shift to state 217
-- On TANTISLASH shift to state 85
-- On LDots shift to state 222
-- On simple_expr shift to state 223
-- On qualified_name shift to state 94
-- On qualified_class_name shift to state 225
-- On primary_expr shift to state 226
-- On new_expr shift to state 227
-- On namespace_name shift to state 102
-- On member_expr shift to state 228
-- On lambda_expr shift to state 231
-- On ident_in_name shift to state 57
-- On ident shift to state 56
-- On expr shift to state 615
-- On constant shift to state 239
-- On call_expr shift to state 240
## Reductions:

State 615:
## Known stack suffix:
## T_LIST TOPAR assignment_list TCPAR TEQ expr
## LR(1) items:
expr -> expr . T_INC [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_DEC [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_BOOLEAN_OR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_BOOLEAN_AND expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_LOGICAL_OR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_LOGICAL_AND expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_LOGICAL_XOR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TPLUS expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TMINUS expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TMUL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TDIV expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TMOD expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TPOW expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TAND expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TOR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TXOR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_SL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_SR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TDOT expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_IDENTICAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_NOT_IDENTICAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_NOT_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TSMALLER expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_SMALLER_OR_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TGREATER expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_GREATER_OR_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_ROCKET expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TQUESTION expr TCOLON expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TQUESTION TCOLON expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TQUESTION TQUESTION expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_INSTANCEOF expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> T_LIST TOPAR assignment_list TCPAR TEQ expr . [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
## Transitions:
-- On T_SR shift to state 233
-- On T_SL shift to state 244
-- On T_ROCKET shift to state 260
-- On T_IS_SMALLER_OR_EQUAL shift to state 262
-- On T_IS_NOT_IDENTICAL shift to state 274
-- On T_IS_NOT_EQUAL shift to state 276
-- On T_IS_IDENTICAL shift to state 278
-- On T_IS_GREATER_OR_EQUAL shift to state 264
-- On T_IS_EQUAL shift to state 280
-- On T_INSTANCEOF shift to state 235
-- On T_INC shift to state 237
-- On T_DEC shift to state 238
-- On T_BOOLEAN_OR shift to state 282
-- On T_BOOLEAN_AND shift to state 284
-- On TXOR shift to state 286
-- On TSMALLER shift to state 266
-- On TQUESTION shift to state 292
-- On TPOW shift to state 246
-- On TPLUS shift to state 248
-- On TOR shift to state 290
-- On TMUL shift to state 250
-- On TMOD shift to state 252
-- On TMINUS shift to state 256
-- On TGREATER shift to state 268
-- On TDOT shift to state 258
-- On TDIV shift to state 254
-- On TAND shift to state 288
## Reductions:
-- On T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_CLOSE_TAG_OF_ECHO T_AWAIT T_AS T_ARROW TSEMICOLON TCPAR TCOMMA TCOLON TCBRACE TCBRA RDots EOF
--   reduce production expr -> T_LIST TOPAR assignment_list TCPAR TEQ expr

State 616:
## Known stack suffix:
## TAND
## LR(1) items:
foreach_variable -> TAND . expr [ T_ARROW TCPAR ]
## Transitions:
-- On T__AT shift to state 1
-- On T_YIELD shift to state 2
-- On T_VARIABLE shift to state 3
-- On T_UNSET_CAST shift to state 5
-- On T_TYPE shift to state 6
-- On T_TRAIT_C shift to state 7
-- On T_SUPER shift to state 8
-- On T_STRING_CAST shift to state 9
-- On T_STATIC shift to state 10
-- On T_START_HEREDOC shift to state 25
-- On T_SELF shift to state 40
-- On T_REQUIRE_ONCE shift to state 41
-- On T_REQUIRE shift to state 42
-- On T_PRINT shift to state 43
-- On T_PARENT shift to state 44
-- On T_OBJECT_CAST shift to state 45
-- On T_NEW shift to state 46
-- On T_NAMESPACE_C shift to state 49
-- On T_NAMESPACE shift to state 50
-- On T_METHOD_C shift to state 58
-- On T_METAVAR shift to state 17
-- On T_LNUMBER shift to state 59
-- On T_LIST shift to state 69
-- On T_LINE shift to state 60
-- On T_LAMBDA_OPAR shift to state 73
-- On T_ISSET shift to state 133
-- On T_INT_CAST shift to state 135
-- On T_INSTANCEOF shift to state 52
-- On T_INCLUDE_ONCE shift to state 136
-- On T_INCLUDE shift to state 137
-- On T_INC shift to state 138
-- On T_IDENT shift to state 18
-- On T_FUNC_C shift to state 61
-- On T_FUNCTION shift to state 139
-- On T_FILE shift to state 62
-- On T_EXIT shift to state 160
-- On T_EVAL shift to state 162
-- On T_ENUM shift to state 19
-- On T_EMPTY shift to state 164
-- On T_DOUBLE_CAST shift to state 168
-- On T_DNUMBER shift to state 63
-- On T_DIR shift to state 64
-- On T_DEC shift to state 169
-- On T_CONSTANT_ENCAPSED_STRING shift to state 65
-- On T_CLONE shift to state 170
-- On T_CLASS_C shift to state 66
-- On T_BOOL_CAST shift to state 171
-- On T_AWAIT shift to state 172
-- On T_ASYNC shift to state 173
-- On T_ARRAY_CAST shift to state 200
-- On T_ARRAY shift to state 201
-- On TTILDE shift to state 204
-- On TPLUS shift to state 205
-- On TOPAR shift to state 206
-- On TOBRA shift to state 209
-- On TMINUS shift to state 210
-- On TGUIL shift to state 211
-- On TDOLLARDOLLAR shift to state 213
-- On TDOLLAR shift to state 214
-- On TBANG shift to state 216
-- On TBACKQUOTE shift to state 217
-- On TANTISLASH shift to state 85
-- On LDots shift to state 222
-- On simple_expr shift to state 223
-- On qualified_name shift to state 94
-- On qualified_class_name shift to state 225
-- On primary_expr shift to state 226
-- On new_expr shift to state 227
-- On namespace_name shift to state 102
-- On member_expr shift to state 228
-- On lambda_expr shift to state 231
-- On ident_in_name shift to state 57
-- On ident shift to state 56
-- On expr shift to state 617
-- On constant shift to state 239
-- On call_expr shift to state 240
## Reductions:

State 617:
## Known stack suffix:
## TAND expr
## LR(1) items:
expr -> expr . T_INC [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND T_ARROW TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . T_DEC [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND T_ARROW TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . T_BOOLEAN_OR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND T_ARROW TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . T_BOOLEAN_AND expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND T_ARROW TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . T_LOGICAL_OR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND T_ARROW TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . T_LOGICAL_AND expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND T_ARROW TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . T_LOGICAL_XOR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND T_ARROW TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . TPLUS expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND T_ARROW TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . TMINUS expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND T_ARROW TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . TMUL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND T_ARROW TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . TDIV expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND T_ARROW TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . TMOD expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND T_ARROW TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . TPOW expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND T_ARROW TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . TAND expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND T_ARROW TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . TOR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND T_ARROW TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . TXOR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND T_ARROW TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . T_SL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND T_ARROW TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . T_SR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND T_ARROW TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . TDOT expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND T_ARROW TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . T_IS_IDENTICAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND T_ARROW TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . T_IS_NOT_IDENTICAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND T_ARROW TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . T_IS_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND T_ARROW TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . T_IS_NOT_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND T_ARROW TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . TSMALLER expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND T_ARROW TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . T_IS_SMALLER_OR_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND T_ARROW TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . TGREATER expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND T_ARROW TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . T_IS_GREATER_OR_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND T_ARROW TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . T_ROCKET expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND T_ARROW TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . TQUESTION expr TCOLON expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND T_ARROW TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . TQUESTION TCOLON expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND T_ARROW TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . TQUESTION TQUESTION expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND T_ARROW TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . T_INSTANCEOF expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND T_ARROW TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
foreach_variable -> TAND expr . [ T_ARROW TCPAR ]
## Transitions:
-- On T_SR shift to state 233
-- On T_SL shift to state 244
-- On T_ROCKET shift to state 260
-- On T_LOGICAL_XOR shift to state 270
-- On T_LOGICAL_OR shift to state 298
-- On T_LOGICAL_AND shift to state 272
-- On T_IS_SMALLER_OR_EQUAL shift to state 262
-- On T_IS_NOT_IDENTICAL shift to state 274
-- On T_IS_NOT_EQUAL shift to state 276
-- On T_IS_IDENTICAL shift to state 278
-- On T_IS_GREATER_OR_EQUAL shift to state 264
-- On T_IS_EQUAL shift to state 280
-- On T_INSTANCEOF shift to state 235
-- On T_INC shift to state 237
-- On T_DEC shift to state 238
-- On T_BOOLEAN_OR shift to state 282
-- On T_BOOLEAN_AND shift to state 284
-- On TXOR shift to state 286
-- On TSMALLER shift to state 266
-- On TQUESTION shift to state 292
-- On TPOW shift to state 246
-- On TPLUS shift to state 248
-- On TOR shift to state 290
-- On TMUL shift to state 250
-- On TMOD shift to state 252
-- On TMINUS shift to state 256
-- On TGREATER shift to state 268
-- On TDOT shift to state 258
-- On TDIV shift to state 254
-- On TAND shift to state 288
## Reductions:
-- On T_ARROW TCPAR
--   reduce production foreach_variable -> TAND expr

State 618:
## Known stack suffix:
## foreach_variable
## LR(1) items:
foreach_pattern -> foreach_variable . [ TCPAR ]
foreach_pattern -> foreach_variable . T_ARROW foreach_pattern [ TCPAR ]
## Transitions:
-- On T_ARROW shift to state 619
## Reductions:
-- On TCPAR
--   reduce production foreach_pattern -> foreach_variable

State 619:
## Known stack suffix:
## foreach_variable T_ARROW
## LR(1) items:
foreach_pattern -> foreach_variable T_ARROW . foreach_pattern [ TCPAR ]
## Transitions:
-- On T__AT shift to state 1
-- On T_YIELD shift to state 2
-- On T_VARIABLE shift to state 3
-- On T_UNSET_CAST shift to state 5
-- On T_TYPE shift to state 6
-- On T_TRAIT_C shift to state 7
-- On T_SUPER shift to state 8
-- On T_STRING_CAST shift to state 9
-- On T_STATIC shift to state 10
-- On T_START_HEREDOC shift to state 25
-- On T_SELF shift to state 40
-- On T_REQUIRE_ONCE shift to state 41
-- On T_REQUIRE shift to state 42
-- On T_PRINT shift to state 43
-- On T_PARENT shift to state 44
-- On T_OBJECT_CAST shift to state 45
-- On T_NEW shift to state 46
-- On T_NAMESPACE_C shift to state 49
-- On T_NAMESPACE shift to state 50
-- On T_METHOD_C shift to state 58
-- On T_METAVAR shift to state 17
-- On T_LNUMBER shift to state 59
-- On T_LIST shift to state 605
-- On T_LINE shift to state 60
-- On T_LAMBDA_OPAR shift to state 73
-- On T_ISSET shift to state 133
-- On T_INT_CAST shift to state 135
-- On T_INSTANCEOF shift to state 52
-- On T_INCLUDE_ONCE shift to state 136
-- On T_INCLUDE shift to state 137
-- On T_INC shift to state 138
-- On T_IDENT shift to state 18
-- On T_FUNC_C shift to state 61
-- On T_FUNCTION shift to state 139
-- On T_FILE shift to state 62
-- On T_EXIT shift to state 160
-- On T_EVAL shift to state 162
-- On T_ENUM shift to state 19
-- On T_EMPTY shift to state 164
-- On T_DOUBLE_CAST shift to state 168
-- On T_DNUMBER shift to state 63
-- On T_DIR shift to state 64
-- On T_DEC shift to state 169
-- On T_CONSTANT_ENCAPSED_STRING shift to state 65
-- On T_CLONE shift to state 170
-- On T_CLASS_C shift to state 66
-- On T_BOOL_CAST shift to state 171
-- On T_AWAIT shift to state 172
-- On T_ASYNC shift to state 173
-- On T_ARRAY_CAST shift to state 200
-- On T_ARRAY shift to state 201
-- On TTILDE shift to state 204
-- On TPLUS shift to state 205
-- On TOPAR shift to state 206
-- On TOBRA shift to state 209
-- On TMINUS shift to state 210
-- On TGUIL shift to state 211
-- On TDOLLARDOLLAR shift to state 213
-- On TDOLLAR shift to state 214
-- On TBANG shift to state 216
-- On TBACKQUOTE shift to state 217
-- On TANTISLASH shift to state 85
-- On TAND shift to state 616
-- On LDots shift to state 222
-- On simple_expr shift to state 223
-- On qualified_name shift to state 94
-- On qualified_class_name shift to state 225
-- On primary_expr shift to state 226
-- On new_expr shift to state 227
-- On namespace_name shift to state 102
-- On member_expr shift to state 228
-- On lambda_expr shift to state 231
-- On ident_in_name shift to state 57
-- On ident shift to state 56
-- On foreach_variable shift to state 618
-- On foreach_pattern shift to state 620
-- On expr shift to state 621
-- On constant shift to state 239
-- On call_expr shift to state 240
## Reductions:

State 620:
## Known stack suffix:
## foreach_variable T_ARROW foreach_pattern
## LR(1) items:
foreach_pattern -> foreach_variable T_ARROW foreach_pattern . [ TCPAR ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production foreach_pattern -> foreach_variable T_ARROW foreach_pattern

State 621:
## Known stack suffix:
## expr
## LR(1) items:
expr -> expr . T_INC [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND T_ARROW TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . T_DEC [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND T_ARROW TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . T_BOOLEAN_OR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND T_ARROW TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . T_BOOLEAN_AND expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND T_ARROW TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . T_LOGICAL_OR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND T_ARROW TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . T_LOGICAL_AND expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND T_ARROW TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . T_LOGICAL_XOR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND T_ARROW TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . TPLUS expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND T_ARROW TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . TMINUS expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND T_ARROW TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . TMUL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND T_ARROW TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . TDIV expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND T_ARROW TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . TMOD expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND T_ARROW TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . TPOW expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND T_ARROW TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . TAND expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND T_ARROW TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . TOR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND T_ARROW TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . TXOR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND T_ARROW TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . T_SL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND T_ARROW TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . T_SR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND T_ARROW TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . TDOT expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND T_ARROW TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . T_IS_IDENTICAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND T_ARROW TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . T_IS_NOT_IDENTICAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND T_ARROW TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . T_IS_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND T_ARROW TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . T_IS_NOT_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND T_ARROW TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . TSMALLER expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND T_ARROW TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . T_IS_SMALLER_OR_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND T_ARROW TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . TGREATER expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND T_ARROW TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . T_IS_GREATER_OR_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND T_ARROW TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . T_ROCKET expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND T_ARROW TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . TQUESTION expr TCOLON expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND T_ARROW TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . TQUESTION TCOLON expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND T_ARROW TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . TQUESTION TQUESTION expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND T_ARROW TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . T_INSTANCEOF expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND T_ARROW TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
foreach_variable -> expr . [ T_ARROW TCPAR ]
## Transitions:
-- On T_SR shift to state 233
-- On T_SL shift to state 244
-- On T_ROCKET shift to state 260
-- On T_LOGICAL_XOR shift to state 270
-- On T_LOGICAL_OR shift to state 298
-- On T_LOGICAL_AND shift to state 272
-- On T_IS_SMALLER_OR_EQUAL shift to state 262
-- On T_IS_NOT_IDENTICAL shift to state 274
-- On T_IS_NOT_EQUAL shift to state 276
-- On T_IS_IDENTICAL shift to state 278
-- On T_IS_GREATER_OR_EQUAL shift to state 264
-- On T_IS_EQUAL shift to state 280
-- On T_INSTANCEOF shift to state 235
-- On T_INC shift to state 237
-- On T_DEC shift to state 238
-- On T_BOOLEAN_OR shift to state 282
-- On T_BOOLEAN_AND shift to state 284
-- On TXOR shift to state 286
-- On TSMALLER shift to state 266
-- On TQUESTION shift to state 292
-- On TPOW shift to state 246
-- On TPLUS shift to state 248
-- On TOR shift to state 290
-- On TMUL shift to state 250
-- On TMOD shift to state 252
-- On TMINUS shift to state 256
-- On TGREATER shift to state 268
-- On TDOT shift to state 258
-- On TDIV shift to state 254
-- On TAND shift to state 288
## Reductions:
-- On T_ARROW TCPAR
--   reduce production foreach_variable -> expr

State 622:
## Known stack suffix:
## T_FOREACH TOPAR expr T_AWAIT T_AS foreach_pattern
## LR(1) items:
statement -> T_FOREACH TOPAR expr T_AWAIT T_AS foreach_pattern . TCPAR foreach_statement [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_ENDWHILE T_ENDSWITCH T_ENDIF T_ENDFOREACH T_ENDFOR T_ENDDECLARE T_EMPTY T_ELSEIF T_ELSE T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DEFAULT T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_CASE T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
## Transitions:
-- On TCPAR shift to state 623
## Reductions:

State 623:
## Known stack suffix:
## T_FOREACH TOPAR expr T_AWAIT T_AS foreach_pattern TCPAR
## LR(1) items:
statement -> T_FOREACH TOPAR expr T_AWAIT T_AS foreach_pattern TCPAR . foreach_statement [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_ENDWHILE T_ENDSWITCH T_ENDIF T_ENDFOREACH T_ENDFOR T_ENDDECLARE T_EMPTY T_ELSEIF T_ELSE T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DEFAULT T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_CASE T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
## Transitions:
-- On T__AT shift to state 1
-- On T_YIELD shift to state 2
-- On T_WHILE shift to state 158
-- On T_VARIABLE shift to state 3
-- On T_USE shift to state 190
-- On T_UNSET_CAST shift to state 5
-- On T_UNSET shift to state 197
-- On T_TYPE shift to state 6
-- On T_TRY shift to state 391
-- On T_TRAIT_C shift to state 7
-- On T_THROW shift to state 520
-- On T_SWITCH shift to state 525
-- On T_SUPER shift to state 8
-- On T_STRING_CAST shift to state 9
-- On T_STATIC shift to state 581
-- On T_START_HEREDOC shift to state 25
-- On T_SELF shift to state 40
-- On T_RETURN shift to state 553
-- On T_REQUIRE_ONCE shift to state 41
-- On T_REQUIRE shift to state 42
-- On T_PRINT shift to state 43
-- On T_PARENT shift to state 44
-- On T_OPEN_TAG_WITH_ECHO shift to state 558
-- On T_OBJECT_CAST shift to state 45
-- On T_NEW shift to state 46
-- On T_NAMESPACE_C shift to state 49
-- On T_NAMESPACE shift to state 50
-- On T_METHOD_C shift to state 58
-- On T_METAVAR shift to state 17
-- On T_LNUMBER shift to state 59
-- On T_LIST shift to state 69
-- On T_LINE shift to state 60
-- On T_LAMBDA_OPAR shift to state 73
-- On T_ISSET shift to state 133
-- On T_INT_CAST shift to state 135
-- On T_INSTANCEOF shift to state 52
-- On T_INLINE_HTML shift to state 576
-- On T_INCLUDE_ONCE shift to state 136
-- On T_INCLUDE shift to state 137
-- On T_INC shift to state 138
-- On T_IF shift to state 577
-- On T_IDENT shift to state 18
-- On T_GLOBAL shift to state 587
-- On T_FUNC_C shift to state 61
-- On T_FUNCTION shift to state 139
-- On T_FOREACH shift to state 600
-- On T_FOR shift to state 624
-- On T_FILE shift to state 62
-- On T_EXIT shift to state 160
-- On T_EVAL shift to state 162
-- On T_ENUM shift to state 19
-- On T_EMPTY shift to state 164
-- On T_ELLIPSIS shift to state 635
-- On T_ECHO shift to state 636
-- On T_DOUBLE_CAST shift to state 168
-- On T_DO shift to state 644
-- On T_DNUMBER shift to state 63
-- On T_DIR shift to state 64
-- On T_DECLARE shift to state 645
-- On T_DEC shift to state 169
-- On T_CONTINUE shift to state 649
-- On T_CONSTANT_ENCAPSED_STRING shift to state 65
-- On T_CLONE shift to state 170
-- On T_CLASS_C shift to state 66
-- On T_BREAK shift to state 652
-- On T_BOOL_CAST shift to state 171
-- On T_AWAIT shift to state 172
-- On T_ASYNC shift to state 173
-- On T_ARRAY_CAST shift to state 200
-- On T_ARRAY shift to state 201
-- On TTILDE shift to state 204
-- On TSEMICOLON shift to state 655
-- On TPLUS shift to state 205
-- On TOPAR shift to state 206
-- On TOBRACE shift to state 656
-- On TOBRA shift to state 209
-- On TMINUS shift to state 210
-- On TGUIL shift to state 211
-- On TDOLLARDOLLAR shift to state 213
-- On TDOLLAR shift to state 214
-- On TCOLON shift to state 759
-- On TBANG shift to state 216
-- On TBACKQUOTE shift to state 217
-- On TANTISLASH shift to state 85
-- On LDots shift to state 222
-- On statement shift to state 763
-- On simple_expr shift to state 223
-- On qualified_name shift to state 94
-- On qualified_class_name shift to state 225
-- On primary_expr shift to state 226
-- On new_expr shift to state 227
-- On namespace_name shift to state 102
-- On member_expr shift to state 228
-- On lambda_expr shift to state 231
-- On ident_in_name shift to state 57
-- On ident shift to state 56
-- On foreach_statement shift to state 764
-- On expr shift to state 704
-- On constant shift to state 239
-- On call_expr shift to state 240
## Reductions:

State 624:
## Known stack suffix:
## T_FOR
## LR(1) items:
statement -> T_FOR . TOPAR for_expr TSEMICOLON for_expr TSEMICOLON for_expr TCPAR for_statement [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_ENDWHILE T_ENDSWITCH T_ENDIF T_ENDFOREACH T_ENDFOR T_ENDDECLARE T_EMPTY T_ELSEIF T_ELSE T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DEFAULT T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_CASE T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
## Transitions:
-- On TOPAR shift to state 625
## Reductions:

State 625:
## Known stack suffix:
## T_FOR TOPAR
## LR(1) items:
statement -> T_FOR TOPAR . for_expr TSEMICOLON for_expr TSEMICOLON for_expr TCPAR for_statement [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_ENDWHILE T_ENDSWITCH T_ENDIF T_ENDFOREACH T_ENDFOR T_ENDDECLARE T_EMPTY T_ELSEIF T_ELSE T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DEFAULT T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_CASE T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
## Transitions:
-- On T__AT shift to state 1
-- On T_YIELD shift to state 2
-- On T_VARIABLE shift to state 3
-- On T_UNSET_CAST shift to state 5
-- On T_TYPE shift to state 6
-- On T_TRAIT_C shift to state 7
-- On T_SUPER shift to state 8
-- On T_STRING_CAST shift to state 9
-- On T_STATIC shift to state 10
-- On T_START_HEREDOC shift to state 25
-- On T_SELF shift to state 40
-- On T_REQUIRE_ONCE shift to state 41
-- On T_REQUIRE shift to state 42
-- On T_PRINT shift to state 43
-- On T_PARENT shift to state 44
-- On T_OBJECT_CAST shift to state 45
-- On T_NEW shift to state 46
-- On T_NAMESPACE_C shift to state 49
-- On T_NAMESPACE shift to state 50
-- On T_METHOD_C shift to state 58
-- On T_METAVAR shift to state 17
-- On T_LNUMBER shift to state 59
-- On T_LIST shift to state 69
-- On T_LINE shift to state 60
-- On T_LAMBDA_OPAR shift to state 73
-- On T_ISSET shift to state 133
-- On T_INT_CAST shift to state 135
-- On T_INSTANCEOF shift to state 52
-- On T_INCLUDE_ONCE shift to state 136
-- On T_INCLUDE shift to state 137
-- On T_INC shift to state 138
-- On T_IDENT shift to state 18
-- On T_FUNC_C shift to state 61
-- On T_FUNCTION shift to state 139
-- On T_FILE shift to state 62
-- On T_EXIT shift to state 160
-- On T_EVAL shift to state 162
-- On T_ENUM shift to state 19
-- On T_EMPTY shift to state 164
-- On T_DOUBLE_CAST shift to state 168
-- On T_DNUMBER shift to state 63
-- On T_DIR shift to state 64
-- On T_DEC shift to state 169
-- On T_CONSTANT_ENCAPSED_STRING shift to state 65
-- On T_CLONE shift to state 170
-- On T_CLASS_C shift to state 66
-- On T_BOOL_CAST shift to state 171
-- On T_AWAIT shift to state 172
-- On T_ASYNC shift to state 173
-- On T_ARRAY_CAST shift to state 200
-- On T_ARRAY shift to state 201
-- On TTILDE shift to state 204
-- On TPLUS shift to state 205
-- On TOPAR shift to state 206
-- On TOBRA shift to state 209
-- On TMINUS shift to state 210
-- On TGUIL shift to state 211
-- On TDOLLARDOLLAR shift to state 213
-- On TDOLLAR shift to state 214
-- On TBANG shift to state 216
-- On TBACKQUOTE shift to state 217
-- On TANTISLASH shift to state 85
-- On LDots shift to state 222
-- On simple_expr shift to state 223
-- On qualified_name shift to state 94
-- On qualified_class_name shift to state 225
-- On primary_expr shift to state 226
-- On new_expr shift to state 227
-- On namespace_name shift to state 102
-- On member_expr shift to state 228
-- On list_sep(expr,TCOMMA) shift to state 626
-- On lambda_expr shift to state 231
-- On ident_in_name shift to state 57
-- On ident shift to state 56
-- On for_expr shift to state 629
-- On expr shift to state 758
-- On constant shift to state 239
-- On call_expr shift to state 240
## Reductions:
-- On TSEMICOLON
--   reduce production for_expr ->

State 626:
## Known stack suffix:
## list_sep(expr,TCOMMA)
## LR(1) items:
for_expr -> list_sep(expr,TCOMMA) . [ TSEMICOLON TCPAR ]
list_sep(expr,TCOMMA) -> list_sep(expr,TCOMMA) . TCOMMA expr [ TSEMICOLON TCPAR TCOMMA ]
## Transitions:
-- On TCOMMA shift to state 627
## Reductions:
-- On TSEMICOLON TCPAR
--   reduce production for_expr -> list_sep(expr,TCOMMA)

State 627:
## Known stack suffix:
## list_sep(expr,TCOMMA) TCOMMA
## LR(1) items:
list_sep(expr,TCOMMA) -> list_sep(expr,TCOMMA) TCOMMA . expr [ TSEMICOLON TCPAR TCOMMA ]
## Transitions:
-- On T__AT shift to state 1
-- On T_YIELD shift to state 2
-- On T_VARIABLE shift to state 3
-- On T_UNSET_CAST shift to state 5
-- On T_TYPE shift to state 6
-- On T_TRAIT_C shift to state 7
-- On T_SUPER shift to state 8
-- On T_STRING_CAST shift to state 9
-- On T_STATIC shift to state 10
-- On T_START_HEREDOC shift to state 25
-- On T_SELF shift to state 40
-- On T_REQUIRE_ONCE shift to state 41
-- On T_REQUIRE shift to state 42
-- On T_PRINT shift to state 43
-- On T_PARENT shift to state 44
-- On T_OBJECT_CAST shift to state 45
-- On T_NEW shift to state 46
-- On T_NAMESPACE_C shift to state 49
-- On T_NAMESPACE shift to state 50
-- On T_METHOD_C shift to state 58
-- On T_METAVAR shift to state 17
-- On T_LNUMBER shift to state 59
-- On T_LIST shift to state 69
-- On T_LINE shift to state 60
-- On T_LAMBDA_OPAR shift to state 73
-- On T_ISSET shift to state 133
-- On T_INT_CAST shift to state 135
-- On T_INSTANCEOF shift to state 52
-- On T_INCLUDE_ONCE shift to state 136
-- On T_INCLUDE shift to state 137
-- On T_INC shift to state 138
-- On T_IDENT shift to state 18
-- On T_FUNC_C shift to state 61
-- On T_FUNCTION shift to state 139
-- On T_FILE shift to state 62
-- On T_EXIT shift to state 160
-- On T_EVAL shift to state 162
-- On T_ENUM shift to state 19
-- On T_EMPTY shift to state 164
-- On T_DOUBLE_CAST shift to state 168
-- On T_DNUMBER shift to state 63
-- On T_DIR shift to state 64
-- On T_DEC shift to state 169
-- On T_CONSTANT_ENCAPSED_STRING shift to state 65
-- On T_CLONE shift to state 170
-- On T_CLASS_C shift to state 66
-- On T_BOOL_CAST shift to state 171
-- On T_AWAIT shift to state 172
-- On T_ASYNC shift to state 173
-- On T_ARRAY_CAST shift to state 200
-- On T_ARRAY shift to state 201
-- On TTILDE shift to state 204
-- On TPLUS shift to state 205
-- On TOPAR shift to state 206
-- On TOBRA shift to state 209
-- On TMINUS shift to state 210
-- On TGUIL shift to state 211
-- On TDOLLARDOLLAR shift to state 213
-- On TDOLLAR shift to state 214
-- On TBANG shift to state 216
-- On TBACKQUOTE shift to state 217
-- On TANTISLASH shift to state 85
-- On LDots shift to state 222
-- On simple_expr shift to state 223
-- On qualified_name shift to state 94
-- On qualified_class_name shift to state 225
-- On primary_expr shift to state 226
-- On new_expr shift to state 227
-- On namespace_name shift to state 102
-- On member_expr shift to state 228
-- On lambda_expr shift to state 231
-- On ident_in_name shift to state 57
-- On ident shift to state 56
-- On expr shift to state 628
-- On constant shift to state 239
-- On call_expr shift to state 240
## Reductions:

State 628:
## Known stack suffix:
## list_sep(expr,TCOMMA) TCOMMA expr
## LR(1) items:
expr -> expr . T_INC [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TAND ]
expr -> expr . T_DEC [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TAND ]
expr -> expr . T_BOOLEAN_OR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TAND ]
expr -> expr . T_BOOLEAN_AND expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TAND ]
expr -> expr . T_LOGICAL_OR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TAND ]
expr -> expr . T_LOGICAL_AND expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TAND ]
expr -> expr . T_LOGICAL_XOR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TAND ]
expr -> expr . TPLUS expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TAND ]
expr -> expr . TMINUS expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TAND ]
expr -> expr . TMUL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TAND ]
expr -> expr . TDIV expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TAND ]
expr -> expr . TMOD expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TAND ]
expr -> expr . TPOW expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TAND ]
expr -> expr . TAND expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TAND ]
expr -> expr . TOR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TAND ]
expr -> expr . TXOR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TAND ]
expr -> expr . T_SL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TAND ]
expr -> expr . T_SR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TAND ]
expr -> expr . TDOT expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TAND ]
expr -> expr . T_IS_IDENTICAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TAND ]
expr -> expr . T_IS_NOT_IDENTICAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TAND ]
expr -> expr . T_IS_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TAND ]
expr -> expr . T_IS_NOT_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TAND ]
expr -> expr . TSMALLER expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TAND ]
expr -> expr . T_IS_SMALLER_OR_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TAND ]
expr -> expr . TGREATER expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TAND ]
expr -> expr . T_IS_GREATER_OR_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TAND ]
expr -> expr . T_ROCKET expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TAND ]
expr -> expr . TQUESTION expr TCOLON expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TAND ]
expr -> expr . TQUESTION TCOLON expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TAND ]
expr -> expr . TQUESTION TQUESTION expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TAND ]
expr -> expr . T_INSTANCEOF expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TAND ]
list_sep(expr,TCOMMA) -> list_sep(expr,TCOMMA) TCOMMA expr . [ TSEMICOLON TCPAR TCOMMA ]
## Transitions:
-- On T_SR shift to state 233
-- On T_SL shift to state 244
-- On T_ROCKET shift to state 260
-- On T_LOGICAL_XOR shift to state 270
-- On T_LOGICAL_OR shift to state 298
-- On T_LOGICAL_AND shift to state 272
-- On T_IS_SMALLER_OR_EQUAL shift to state 262
-- On T_IS_NOT_IDENTICAL shift to state 274
-- On T_IS_NOT_EQUAL shift to state 276
-- On T_IS_IDENTICAL shift to state 278
-- On T_IS_GREATER_OR_EQUAL shift to state 264
-- On T_IS_EQUAL shift to state 280
-- On T_INSTANCEOF shift to state 235
-- On T_INC shift to state 237
-- On T_DEC shift to state 238
-- On T_BOOLEAN_OR shift to state 282
-- On T_BOOLEAN_AND shift to state 284
-- On TXOR shift to state 286
-- On TSMALLER shift to state 266
-- On TQUESTION shift to state 292
-- On TPOW shift to state 246
-- On TPLUS shift to state 248
-- On TOR shift to state 290
-- On TMUL shift to state 250
-- On TMOD shift to state 252
-- On TMINUS shift to state 256
-- On TGREATER shift to state 268
-- On TDOT shift to state 258
-- On TDIV shift to state 254
-- On TAND shift to state 288
## Reductions:
-- On TSEMICOLON TCPAR TCOMMA
--   reduce production list_sep(expr,TCOMMA) -> list_sep(expr,TCOMMA) TCOMMA expr

State 629:
## Known stack suffix:
## T_FOR TOPAR for_expr
## LR(1) items:
statement -> T_FOR TOPAR for_expr . TSEMICOLON for_expr TSEMICOLON for_expr TCPAR for_statement [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_ENDWHILE T_ENDSWITCH T_ENDIF T_ENDFOREACH T_ENDFOR T_ENDDECLARE T_EMPTY T_ELSEIF T_ELSE T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DEFAULT T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_CASE T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
## Transitions:
-- On TSEMICOLON shift to state 630
## Reductions:

State 630:
## Known stack suffix:
## T_FOR TOPAR for_expr TSEMICOLON
## LR(1) items:
statement -> T_FOR TOPAR for_expr TSEMICOLON . for_expr TSEMICOLON for_expr TCPAR for_statement [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_ENDWHILE T_ENDSWITCH T_ENDIF T_ENDFOREACH T_ENDFOR T_ENDDECLARE T_EMPTY T_ELSEIF T_ELSE T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DEFAULT T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_CASE T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
## Transitions:
-- On T__AT shift to state 1
-- On T_YIELD shift to state 2
-- On T_VARIABLE shift to state 3
-- On T_UNSET_CAST shift to state 5
-- On T_TYPE shift to state 6
-- On T_TRAIT_C shift to state 7
-- On T_SUPER shift to state 8
-- On T_STRING_CAST shift to state 9
-- On T_STATIC shift to state 10
-- On T_START_HEREDOC shift to state 25
-- On T_SELF shift to state 40
-- On T_REQUIRE_ONCE shift to state 41
-- On T_REQUIRE shift to state 42
-- On T_PRINT shift to state 43
-- On T_PARENT shift to state 44
-- On T_OBJECT_CAST shift to state 45
-- On T_NEW shift to state 46
-- On T_NAMESPACE_C shift to state 49
-- On T_NAMESPACE shift to state 50
-- On T_METHOD_C shift to state 58
-- On T_METAVAR shift to state 17
-- On T_LNUMBER shift to state 59
-- On T_LIST shift to state 69
-- On T_LINE shift to state 60
-- On T_LAMBDA_OPAR shift to state 73
-- On T_ISSET shift to state 133
-- On T_INT_CAST shift to state 135
-- On T_INSTANCEOF shift to state 52
-- On T_INCLUDE_ONCE shift to state 136
-- On T_INCLUDE shift to state 137
-- On T_INC shift to state 138
-- On T_IDENT shift to state 18
-- On T_FUNC_C shift to state 61
-- On T_FUNCTION shift to state 139
-- On T_FILE shift to state 62
-- On T_EXIT shift to state 160
-- On T_EVAL shift to state 162
-- On T_ENUM shift to state 19
-- On T_EMPTY shift to state 164
-- On T_DOUBLE_CAST shift to state 168
-- On T_DNUMBER shift to state 63
-- On T_DIR shift to state 64
-- On T_DEC shift to state 169
-- On T_CONSTANT_ENCAPSED_STRING shift to state 65
-- On T_CLONE shift to state 170
-- On T_CLASS_C shift to state 66
-- On T_BOOL_CAST shift to state 171
-- On T_AWAIT shift to state 172
-- On T_ASYNC shift to state 173
-- On T_ARRAY_CAST shift to state 200
-- On T_ARRAY shift to state 201
-- On TTILDE shift to state 204
-- On TPLUS shift to state 205
-- On TOPAR shift to state 206
-- On TOBRA shift to state 209
-- On TMINUS shift to state 210
-- On TGUIL shift to state 211
-- On TDOLLARDOLLAR shift to state 213
-- On TDOLLAR shift to state 214
-- On TBANG shift to state 216
-- On TBACKQUOTE shift to state 217
-- On TANTISLASH shift to state 85
-- On LDots shift to state 222
-- On simple_expr shift to state 223
-- On qualified_name shift to state 94
-- On qualified_class_name shift to state 225
-- On primary_expr shift to state 226
-- On new_expr shift to state 227
-- On namespace_name shift to state 102
-- On member_expr shift to state 228
-- On list_sep(expr,TCOMMA) shift to state 626
-- On lambda_expr shift to state 231
-- On ident_in_name shift to state 57
-- On ident shift to state 56
-- On for_expr shift to state 631
-- On expr shift to state 758
-- On constant shift to state 239
-- On call_expr shift to state 240
## Reductions:
-- On TSEMICOLON
--   reduce production for_expr ->

State 631:
## Known stack suffix:
## T_FOR TOPAR for_expr TSEMICOLON for_expr
## LR(1) items:
statement -> T_FOR TOPAR for_expr TSEMICOLON for_expr . TSEMICOLON for_expr TCPAR for_statement [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_ENDWHILE T_ENDSWITCH T_ENDIF T_ENDFOREACH T_ENDFOR T_ENDDECLARE T_EMPTY T_ELSEIF T_ELSE T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DEFAULT T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_CASE T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
## Transitions:
-- On TSEMICOLON shift to state 632
## Reductions:

State 632:
## Known stack suffix:
## T_FOR TOPAR for_expr TSEMICOLON for_expr TSEMICOLON
## LR(1) items:
statement -> T_FOR TOPAR for_expr TSEMICOLON for_expr TSEMICOLON . for_expr TCPAR for_statement [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_ENDWHILE T_ENDSWITCH T_ENDIF T_ENDFOREACH T_ENDFOR T_ENDDECLARE T_EMPTY T_ELSEIF T_ELSE T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DEFAULT T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_CASE T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
## Transitions:
-- On T__AT shift to state 1
-- On T_YIELD shift to state 2
-- On T_VARIABLE shift to state 3
-- On T_UNSET_CAST shift to state 5
-- On T_TYPE shift to state 6
-- On T_TRAIT_C shift to state 7
-- On T_SUPER shift to state 8
-- On T_STRING_CAST shift to state 9
-- On T_STATIC shift to state 10
-- On T_START_HEREDOC shift to state 25
-- On T_SELF shift to state 40
-- On T_REQUIRE_ONCE shift to state 41
-- On T_REQUIRE shift to state 42
-- On T_PRINT shift to state 43
-- On T_PARENT shift to state 44
-- On T_OBJECT_CAST shift to state 45
-- On T_NEW shift to state 46
-- On T_NAMESPACE_C shift to state 49
-- On T_NAMESPACE shift to state 50
-- On T_METHOD_C shift to state 58
-- On T_METAVAR shift to state 17
-- On T_LNUMBER shift to state 59
-- On T_LIST shift to state 69
-- On T_LINE shift to state 60
-- On T_LAMBDA_OPAR shift to state 73
-- On T_ISSET shift to state 133
-- On T_INT_CAST shift to state 135
-- On T_INSTANCEOF shift to state 52
-- On T_INCLUDE_ONCE shift to state 136
-- On T_INCLUDE shift to state 137
-- On T_INC shift to state 138
-- On T_IDENT shift to state 18
-- On T_FUNC_C shift to state 61
-- On T_FUNCTION shift to state 139
-- On T_FILE shift to state 62
-- On T_EXIT shift to state 160
-- On T_EVAL shift to state 162
-- On T_ENUM shift to state 19
-- On T_EMPTY shift to state 164
-- On T_DOUBLE_CAST shift to state 168
-- On T_DNUMBER shift to state 63
-- On T_DIR shift to state 64
-- On T_DEC shift to state 169
-- On T_CONSTANT_ENCAPSED_STRING shift to state 65
-- On T_CLONE shift to state 170
-- On T_CLASS_C shift to state 66
-- On T_BOOL_CAST shift to state 171
-- On T_AWAIT shift to state 172
-- On T_ASYNC shift to state 173
-- On T_ARRAY_CAST shift to state 200
-- On T_ARRAY shift to state 201
-- On TTILDE shift to state 204
-- On TPLUS shift to state 205
-- On TOPAR shift to state 206
-- On TOBRA shift to state 209
-- On TMINUS shift to state 210
-- On TGUIL shift to state 211
-- On TDOLLARDOLLAR shift to state 213
-- On TDOLLAR shift to state 214
-- On TBANG shift to state 216
-- On TBACKQUOTE shift to state 217
-- On TANTISLASH shift to state 85
-- On LDots shift to state 222
-- On simple_expr shift to state 223
-- On qualified_name shift to state 94
-- On qualified_class_name shift to state 225
-- On primary_expr shift to state 226
-- On new_expr shift to state 227
-- On namespace_name shift to state 102
-- On member_expr shift to state 228
-- On list_sep(expr,TCOMMA) shift to state 626
-- On lambda_expr shift to state 231
-- On ident_in_name shift to state 57
-- On ident shift to state 56
-- On for_expr shift to state 633
-- On expr shift to state 758
-- On constant shift to state 239
-- On call_expr shift to state 240
## Reductions:
-- On TCPAR
--   reduce production for_expr ->

State 633:
## Known stack suffix:
## T_FOR TOPAR for_expr TSEMICOLON for_expr TSEMICOLON for_expr
## LR(1) items:
statement -> T_FOR TOPAR for_expr TSEMICOLON for_expr TSEMICOLON for_expr . TCPAR for_statement [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_ENDWHILE T_ENDSWITCH T_ENDIF T_ENDFOREACH T_ENDFOR T_ENDDECLARE T_EMPTY T_ELSEIF T_ELSE T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DEFAULT T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_CASE T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
## Transitions:
-- On TCPAR shift to state 634
## Reductions:

State 634:
## Known stack suffix:
## T_FOR TOPAR for_expr TSEMICOLON for_expr TSEMICOLON for_expr TCPAR
## LR(1) items:
statement -> T_FOR TOPAR for_expr TSEMICOLON for_expr TSEMICOLON for_expr TCPAR . for_statement [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_ENDWHILE T_ENDSWITCH T_ENDIF T_ENDFOREACH T_ENDFOR T_ENDDECLARE T_EMPTY T_ELSEIF T_ELSE T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DEFAULT T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_CASE T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
## Transitions:
-- On T__AT shift to state 1
-- On T_YIELD shift to state 2
-- On T_WHILE shift to state 158
-- On T_VARIABLE shift to state 3
-- On T_USE shift to state 190
-- On T_UNSET_CAST shift to state 5
-- On T_UNSET shift to state 197
-- On T_TYPE shift to state 6
-- On T_TRY shift to state 391
-- On T_TRAIT_C shift to state 7
-- On T_THROW shift to state 520
-- On T_SWITCH shift to state 525
-- On T_SUPER shift to state 8
-- On T_STRING_CAST shift to state 9
-- On T_STATIC shift to state 581
-- On T_START_HEREDOC shift to state 25
-- On T_SELF shift to state 40
-- On T_RETURN shift to state 553
-- On T_REQUIRE_ONCE shift to state 41
-- On T_REQUIRE shift to state 42
-- On T_PRINT shift to state 43
-- On T_PARENT shift to state 44
-- On T_OPEN_TAG_WITH_ECHO shift to state 558
-- On T_OBJECT_CAST shift to state 45
-- On T_NEW shift to state 46
-- On T_NAMESPACE_C shift to state 49
-- On T_NAMESPACE shift to state 50
-- On T_METHOD_C shift to state 58
-- On T_METAVAR shift to state 17
-- On T_LNUMBER shift to state 59
-- On T_LIST shift to state 69
-- On T_LINE shift to state 60
-- On T_LAMBDA_OPAR shift to state 73
-- On T_ISSET shift to state 133
-- On T_INT_CAST shift to state 135
-- On T_INSTANCEOF shift to state 52
-- On T_INLINE_HTML shift to state 576
-- On T_INCLUDE_ONCE shift to state 136
-- On T_INCLUDE shift to state 137
-- On T_INC shift to state 138
-- On T_IF shift to state 577
-- On T_IDENT shift to state 18
-- On T_GLOBAL shift to state 587
-- On T_FUNC_C shift to state 61
-- On T_FUNCTION shift to state 139
-- On T_FOREACH shift to state 600
-- On T_FOR shift to state 624
-- On T_FILE shift to state 62
-- On T_EXIT shift to state 160
-- On T_EVAL shift to state 162
-- On T_ENUM shift to state 19
-- On T_EMPTY shift to state 164
-- On T_ELLIPSIS shift to state 635
-- On T_ECHO shift to state 636
-- On T_DOUBLE_CAST shift to state 168
-- On T_DO shift to state 644
-- On T_DNUMBER shift to state 63
-- On T_DIR shift to state 64
-- On T_DECLARE shift to state 645
-- On T_DEC shift to state 169
-- On T_CONTINUE shift to state 649
-- On T_CONSTANT_ENCAPSED_STRING shift to state 65
-- On T_CLONE shift to state 170
-- On T_CLASS_C shift to state 66
-- On T_BREAK shift to state 652
-- On T_BOOL_CAST shift to state 171
-- On T_AWAIT shift to state 172
-- On T_ASYNC shift to state 173
-- On T_ARRAY_CAST shift to state 200
-- On T_ARRAY shift to state 201
-- On TTILDE shift to state 204
-- On TSEMICOLON shift to state 655
-- On TPLUS shift to state 205
-- On TOPAR shift to state 206
-- On TOBRACE shift to state 656
-- On TOBRA shift to state 209
-- On TMINUS shift to state 210
-- On TGUIL shift to state 211
-- On TDOLLARDOLLAR shift to state 213
-- On TDOLLAR shift to state 214
-- On TCOLON shift to state 752
-- On TBANG shift to state 216
-- On TBACKQUOTE shift to state 217
-- On TANTISLASH shift to state 85
-- On LDots shift to state 222
-- On statement shift to state 756
-- On simple_expr shift to state 223
-- On qualified_name shift to state 94
-- On qualified_class_name shift to state 225
-- On primary_expr shift to state 226
-- On new_expr shift to state 227
-- On namespace_name shift to state 102
-- On member_expr shift to state 228
-- On lambda_expr shift to state 231
-- On ident_in_name shift to state 57
-- On ident shift to state 56
-- On for_statement shift to state 757
-- On expr shift to state 704
-- On constant shift to state 239
-- On call_expr shift to state 240
## Reductions:

State 635:
## Known stack suffix:
## T_ELLIPSIS
## LR(1) items:
statement -> T_ELLIPSIS . [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_ENDWHILE T_ENDSWITCH T_ENDIF T_ENDFOREACH T_ENDFOR T_ENDDECLARE T_EMPTY T_ELSEIF T_ELSE T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DEFAULT T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_CASE T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production statement -> T_ELLIPSIS

State 636:
## Known stack suffix:
## T_ECHO
## LR(1) items:
statement -> T_ECHO . list_sep(expr_or_dots,TCOMMA) TSEMICOLON [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_ENDWHILE T_ENDSWITCH T_ENDIF T_ENDFOREACH T_ENDFOR T_ENDDECLARE T_EMPTY T_ELSEIF T_ELSE T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DEFAULT T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_CASE T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
## Transitions:
-- On T__AT shift to state 1
-- On T_YIELD shift to state 2
-- On T_VARIABLE shift to state 3
-- On T_UNSET_CAST shift to state 5
-- On T_TYPE shift to state 6
-- On T_TRAIT_C shift to state 7
-- On T_SUPER shift to state 8
-- On T_STRING_CAST shift to state 9
-- On T_STATIC shift to state 10
-- On T_START_HEREDOC shift to state 25
-- On T_SELF shift to state 40
-- On T_REQUIRE_ONCE shift to state 41
-- On T_REQUIRE shift to state 42
-- On T_PRINT shift to state 43
-- On T_PARENT shift to state 44
-- On T_OBJECT_CAST shift to state 45
-- On T_NEW shift to state 46
-- On T_NAMESPACE_C shift to state 49
-- On T_NAMESPACE shift to state 50
-- On T_METHOD_C shift to state 58
-- On T_METAVAR shift to state 17
-- On T_LNUMBER shift to state 59
-- On T_LIST shift to state 69
-- On T_LINE shift to state 60
-- On T_LAMBDA_OPAR shift to state 73
-- On T_ISSET shift to state 133
-- On T_INT_CAST shift to state 135
-- On T_INSTANCEOF shift to state 52
-- On T_INCLUDE_ONCE shift to state 136
-- On T_INCLUDE shift to state 137
-- On T_INC shift to state 138
-- On T_IDENT shift to state 18
-- On T_FUNC_C shift to state 61
-- On T_FUNCTION shift to state 139
-- On T_FILE shift to state 62
-- On T_EXIT shift to state 160
-- On T_EVAL shift to state 162
-- On T_ENUM shift to state 19
-- On T_EMPTY shift to state 164
-- On T_ELLIPSIS shift to state 637
-- On T_DOUBLE_CAST shift to state 168
-- On T_DNUMBER shift to state 63
-- On T_DIR shift to state 64
-- On T_DEC shift to state 169
-- On T_CONSTANT_ENCAPSED_STRING shift to state 65
-- On T_CLONE shift to state 170
-- On T_CLASS_C shift to state 66
-- On T_BOOL_CAST shift to state 171
-- On T_AWAIT shift to state 172
-- On T_ASYNC shift to state 173
-- On T_ARRAY_CAST shift to state 200
-- On T_ARRAY shift to state 201
-- On TTILDE shift to state 204
-- On TPLUS shift to state 205
-- On TOPAR shift to state 206
-- On TOBRA shift to state 209
-- On TMINUS shift to state 210
-- On TGUIL shift to state 211
-- On TDOLLARDOLLAR shift to state 213
-- On TDOLLAR shift to state 214
-- On TBANG shift to state 216
-- On TBACKQUOTE shift to state 217
-- On TANTISLASH shift to state 85
-- On LDots shift to state 222
-- On simple_expr shift to state 223
-- On qualified_name shift to state 94
-- On qualified_class_name shift to state 225
-- On primary_expr shift to state 226
-- On new_expr shift to state 227
-- On namespace_name shift to state 102
-- On member_expr shift to state 228
-- On list_sep(expr_or_dots,TCOMMA) shift to state 638
-- On lambda_expr shift to state 231
-- On ident_in_name shift to state 57
-- On ident shift to state 56
-- On expr shift to state 643
-- On constant shift to state 239
-- On call_expr shift to state 240
## Reductions:

State 637:
## Known stack suffix:
## T_ELLIPSIS
## LR(1) items:
list_sep(expr_or_dots,TCOMMA) -> T_ELLIPSIS . [ TSEMICOLON TCPAR TCOMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production list_sep(expr_or_dots,TCOMMA) -> T_ELLIPSIS

State 638:
## Known stack suffix:
## T_ECHO list_sep(expr_or_dots,TCOMMA)
## LR(1) items:
list_sep(expr_or_dots,TCOMMA) -> list_sep(expr_or_dots,TCOMMA) . TCOMMA expr [ TSEMICOLON TCOMMA ]
list_sep(expr_or_dots,TCOMMA) -> list_sep(expr_or_dots,TCOMMA) . TCOMMA T_ELLIPSIS [ TSEMICOLON TCOMMA ]
statement -> T_ECHO list_sep(expr_or_dots,TCOMMA) . TSEMICOLON [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_ENDWHILE T_ENDSWITCH T_ENDIF T_ENDFOREACH T_ENDFOR T_ENDDECLARE T_EMPTY T_ELSEIF T_ELSE T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DEFAULT T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_CASE T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
## Transitions:
-- On TSEMICOLON shift to state 639
-- On TCOMMA shift to state 640
## Reductions:

State 639:
## Known stack suffix:
## T_ECHO list_sep(expr_or_dots,TCOMMA) TSEMICOLON
## LR(1) items:
statement -> T_ECHO list_sep(expr_or_dots,TCOMMA) TSEMICOLON . [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_ENDWHILE T_ENDSWITCH T_ENDIF T_ENDFOREACH T_ENDFOR T_ENDDECLARE T_EMPTY T_ELSEIF T_ELSE T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DEFAULT T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_CASE T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production statement -> T_ECHO list_sep(expr_or_dots,TCOMMA) TSEMICOLON

State 640:
## Known stack suffix:
## list_sep(expr_or_dots,TCOMMA) TCOMMA
## LR(1) items:
list_sep(expr_or_dots,TCOMMA) -> list_sep(expr_or_dots,TCOMMA) TCOMMA . expr [ TSEMICOLON TCPAR TCOMMA ]
list_sep(expr_or_dots,TCOMMA) -> list_sep(expr_or_dots,TCOMMA) TCOMMA . T_ELLIPSIS [ TSEMICOLON TCPAR TCOMMA ]
## Transitions:
-- On T__AT shift to state 1
-- On T_YIELD shift to state 2
-- On T_VARIABLE shift to state 3
-- On T_UNSET_CAST shift to state 5
-- On T_TYPE shift to state 6
-- On T_TRAIT_C shift to state 7
-- On T_SUPER shift to state 8
-- On T_STRING_CAST shift to state 9
-- On T_STATIC shift to state 10
-- On T_START_HEREDOC shift to state 25
-- On T_SELF shift to state 40
-- On T_REQUIRE_ONCE shift to state 41
-- On T_REQUIRE shift to state 42
-- On T_PRINT shift to state 43
-- On T_PARENT shift to state 44
-- On T_OBJECT_CAST shift to state 45
-- On T_NEW shift to state 46
-- On T_NAMESPACE_C shift to state 49
-- On T_NAMESPACE shift to state 50
-- On T_METHOD_C shift to state 58
-- On T_METAVAR shift to state 17
-- On T_LNUMBER shift to state 59
-- On T_LIST shift to state 69
-- On T_LINE shift to state 60
-- On T_LAMBDA_OPAR shift to state 73
-- On T_ISSET shift to state 133
-- On T_INT_CAST shift to state 135
-- On T_INSTANCEOF shift to state 52
-- On T_INCLUDE_ONCE shift to state 136
-- On T_INCLUDE shift to state 137
-- On T_INC shift to state 138
-- On T_IDENT shift to state 18
-- On T_FUNC_C shift to state 61
-- On T_FUNCTION shift to state 139
-- On T_FILE shift to state 62
-- On T_EXIT shift to state 160
-- On T_EVAL shift to state 162
-- On T_ENUM shift to state 19
-- On T_EMPTY shift to state 164
-- On T_ELLIPSIS shift to state 641
-- On T_DOUBLE_CAST shift to state 168
-- On T_DNUMBER shift to state 63
-- On T_DIR shift to state 64
-- On T_DEC shift to state 169
-- On T_CONSTANT_ENCAPSED_STRING shift to state 65
-- On T_CLONE shift to state 170
-- On T_CLASS_C shift to state 66
-- On T_BOOL_CAST shift to state 171
-- On T_AWAIT shift to state 172
-- On T_ASYNC shift to state 173
-- On T_ARRAY_CAST shift to state 200
-- On T_ARRAY shift to state 201
-- On TTILDE shift to state 204
-- On TPLUS shift to state 205
-- On TOPAR shift to state 206
-- On TOBRA shift to state 209
-- On TMINUS shift to state 210
-- On TGUIL shift to state 211
-- On TDOLLARDOLLAR shift to state 213
-- On TDOLLAR shift to state 214
-- On TBANG shift to state 216
-- On TBACKQUOTE shift to state 217
-- On TANTISLASH shift to state 85
-- On LDots shift to state 222
-- On simple_expr shift to state 223
-- On qualified_name shift to state 94
-- On qualified_class_name shift to state 225
-- On primary_expr shift to state 226
-- On new_expr shift to state 227
-- On namespace_name shift to state 102
-- On member_expr shift to state 228
-- On lambda_expr shift to state 231
-- On ident_in_name shift to state 57
-- On ident shift to state 56
-- On expr shift to state 642
-- On constant shift to state 239
-- On call_expr shift to state 240
## Reductions:

State 641:
## Known stack suffix:
## list_sep(expr_or_dots,TCOMMA) TCOMMA T_ELLIPSIS
## LR(1) items:
list_sep(expr_or_dots,TCOMMA) -> list_sep(expr_or_dots,TCOMMA) TCOMMA T_ELLIPSIS . [ TSEMICOLON TCPAR TCOMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production list_sep(expr_or_dots,TCOMMA) -> list_sep(expr_or_dots,TCOMMA) TCOMMA T_ELLIPSIS

State 642:
## Known stack suffix:
## list_sep(expr_or_dots,TCOMMA) TCOMMA expr
## LR(1) items:
expr -> expr . T_INC [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TAND ]
expr -> expr . T_DEC [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TAND ]
expr -> expr . T_BOOLEAN_OR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TAND ]
expr -> expr . T_BOOLEAN_AND expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TAND ]
expr -> expr . T_LOGICAL_OR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TAND ]
expr -> expr . T_LOGICAL_AND expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TAND ]
expr -> expr . T_LOGICAL_XOR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TAND ]
expr -> expr . TPLUS expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TAND ]
expr -> expr . TMINUS expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TAND ]
expr -> expr . TMUL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TAND ]
expr -> expr . TDIV expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TAND ]
expr -> expr . TMOD expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TAND ]
expr -> expr . TPOW expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TAND ]
expr -> expr . TAND expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TAND ]
expr -> expr . TOR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TAND ]
expr -> expr . TXOR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TAND ]
expr -> expr . T_SL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TAND ]
expr -> expr . T_SR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TAND ]
expr -> expr . TDOT expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TAND ]
expr -> expr . T_IS_IDENTICAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TAND ]
expr -> expr . T_IS_NOT_IDENTICAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TAND ]
expr -> expr . T_IS_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TAND ]
expr -> expr . T_IS_NOT_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TAND ]
expr -> expr . TSMALLER expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TAND ]
expr -> expr . T_IS_SMALLER_OR_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TAND ]
expr -> expr . TGREATER expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TAND ]
expr -> expr . T_IS_GREATER_OR_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TAND ]
expr -> expr . T_ROCKET expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TAND ]
expr -> expr . TQUESTION expr TCOLON expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TAND ]
expr -> expr . TQUESTION TCOLON expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TAND ]
expr -> expr . TQUESTION TQUESTION expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TAND ]
expr -> expr . T_INSTANCEOF expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TAND ]
list_sep(expr_or_dots,TCOMMA) -> list_sep(expr_or_dots,TCOMMA) TCOMMA expr . [ TSEMICOLON TCPAR TCOMMA ]
## Transitions:
-- On T_SR shift to state 233
-- On T_SL shift to state 244
-- On T_ROCKET shift to state 260
-- On T_LOGICAL_XOR shift to state 270
-- On T_LOGICAL_OR shift to state 298
-- On T_LOGICAL_AND shift to state 272
-- On T_IS_SMALLER_OR_EQUAL shift to state 262
-- On T_IS_NOT_IDENTICAL shift to state 274
-- On T_IS_NOT_EQUAL shift to state 276
-- On T_IS_IDENTICAL shift to state 278
-- On T_IS_GREATER_OR_EQUAL shift to state 264
-- On T_IS_EQUAL shift to state 280
-- On T_INSTANCEOF shift to state 235
-- On T_INC shift to state 237
-- On T_DEC shift to state 238
-- On T_BOOLEAN_OR shift to state 282
-- On T_BOOLEAN_AND shift to state 284
-- On TXOR shift to state 286
-- On TSMALLER shift to state 266
-- On TQUESTION shift to state 292
-- On TPOW shift to state 246
-- On TPLUS shift to state 248
-- On TOR shift to state 290
-- On TMUL shift to state 250
-- On TMOD shift to state 252
-- On TMINUS shift to state 256
-- On TGREATER shift to state 268
-- On TDOT shift to state 258
-- On TDIV shift to state 254
-- On TAND shift to state 288
## Reductions:
-- On TSEMICOLON TCPAR TCOMMA
--   reduce production list_sep(expr_or_dots,TCOMMA) -> list_sep(expr_or_dots,TCOMMA) TCOMMA expr

State 643:
## Known stack suffix:
## expr
## LR(1) items:
expr -> expr . T_INC [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TAND ]
expr -> expr . T_DEC [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TAND ]
expr -> expr . T_BOOLEAN_OR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TAND ]
expr -> expr . T_BOOLEAN_AND expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TAND ]
expr -> expr . T_LOGICAL_OR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TAND ]
expr -> expr . T_LOGICAL_AND expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TAND ]
expr -> expr . T_LOGICAL_XOR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TAND ]
expr -> expr . TPLUS expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TAND ]
expr -> expr . TMINUS expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TAND ]
expr -> expr . TMUL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TAND ]
expr -> expr . TDIV expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TAND ]
expr -> expr . TMOD expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TAND ]
expr -> expr . TPOW expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TAND ]
expr -> expr . TAND expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TAND ]
expr -> expr . TOR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TAND ]
expr -> expr . TXOR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TAND ]
expr -> expr . T_SL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TAND ]
expr -> expr . T_SR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TAND ]
expr -> expr . TDOT expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TAND ]
expr -> expr . T_IS_IDENTICAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TAND ]
expr -> expr . T_IS_NOT_IDENTICAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TAND ]
expr -> expr . T_IS_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TAND ]
expr -> expr . T_IS_NOT_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TAND ]
expr -> expr . TSMALLER expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TAND ]
expr -> expr . T_IS_SMALLER_OR_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TAND ]
expr -> expr . TGREATER expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TAND ]
expr -> expr . T_IS_GREATER_OR_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TAND ]
expr -> expr . T_ROCKET expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TAND ]
expr -> expr . TQUESTION expr TCOLON expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TAND ]
expr -> expr . TQUESTION TCOLON expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TAND ]
expr -> expr . TQUESTION TQUESTION expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TAND ]
expr -> expr . T_INSTANCEOF expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TAND ]
list_sep(expr_or_dots,TCOMMA) -> expr . [ TSEMICOLON TCPAR TCOMMA ]
## Transitions:
-- On T_SR shift to state 233
-- On T_SL shift to state 244
-- On T_ROCKET shift to state 260
-- On T_LOGICAL_XOR shift to state 270
-- On T_LOGICAL_OR shift to state 298
-- On T_LOGICAL_AND shift to state 272
-- On T_IS_SMALLER_OR_EQUAL shift to state 262
-- On T_IS_NOT_IDENTICAL shift to state 274
-- On T_IS_NOT_EQUAL shift to state 276
-- On T_IS_IDENTICAL shift to state 278
-- On T_IS_GREATER_OR_EQUAL shift to state 264
-- On T_IS_EQUAL shift to state 280
-- On T_INSTANCEOF shift to state 235
-- On T_INC shift to state 237
-- On T_DEC shift to state 238
-- On T_BOOLEAN_OR shift to state 282
-- On T_BOOLEAN_AND shift to state 284
-- On TXOR shift to state 286
-- On TSMALLER shift to state 266
-- On TQUESTION shift to state 292
-- On TPOW shift to state 246
-- On TPLUS shift to state 248
-- On TOR shift to state 290
-- On TMUL shift to state 250
-- On TMOD shift to state 252
-- On TMINUS shift to state 256
-- On TGREATER shift to state 268
-- On TDOT shift to state 258
-- On TDIV shift to state 254
-- On TAND shift to state 288
## Reductions:
-- On TSEMICOLON TCPAR TCOMMA
--   reduce production list_sep(expr_or_dots,TCOMMA) -> expr

State 644:
## Known stack suffix:
## T_DO
## LR(1) items:
statement -> T_DO . statement T_WHILE TOPAR expr TCPAR TSEMICOLON [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_ENDWHILE T_ENDSWITCH T_ENDIF T_ENDFOREACH T_ENDFOR T_ENDDECLARE T_EMPTY T_ELSEIF T_ELSE T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DEFAULT T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_CASE T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
statement -> T_DO . statement T_WHILE TOPAR T_ELLIPSIS TCPAR TSEMICOLON [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_ENDWHILE T_ENDSWITCH T_ENDIF T_ENDFOREACH T_ENDFOR T_ENDDECLARE T_EMPTY T_ELSEIF T_ELSE T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DEFAULT T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_CASE T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
## Transitions:
-- On T__AT shift to state 1
-- On T_YIELD shift to state 2
-- On T_WHILE shift to state 158
-- On T_VARIABLE shift to state 3
-- On T_USE shift to state 190
-- On T_UNSET_CAST shift to state 5
-- On T_UNSET shift to state 197
-- On T_TYPE shift to state 6
-- On T_TRY shift to state 391
-- On T_TRAIT_C shift to state 7
-- On T_THROW shift to state 520
-- On T_SWITCH shift to state 525
-- On T_SUPER shift to state 8
-- On T_STRING_CAST shift to state 9
-- On T_STATIC shift to state 581
-- On T_START_HEREDOC shift to state 25
-- On T_SELF shift to state 40
-- On T_RETURN shift to state 553
-- On T_REQUIRE_ONCE shift to state 41
-- On T_REQUIRE shift to state 42
-- On T_PRINT shift to state 43
-- On T_PARENT shift to state 44
-- On T_OPEN_TAG_WITH_ECHO shift to state 558
-- On T_OBJECT_CAST shift to state 45
-- On T_NEW shift to state 46
-- On T_NAMESPACE_C shift to state 49
-- On T_NAMESPACE shift to state 50
-- On T_METHOD_C shift to state 58
-- On T_METAVAR shift to state 17
-- On T_LNUMBER shift to state 59
-- On T_LIST shift to state 69
-- On T_LINE shift to state 60
-- On T_LAMBDA_OPAR shift to state 73
-- On T_ISSET shift to state 133
-- On T_INT_CAST shift to state 135
-- On T_INSTANCEOF shift to state 52
-- On T_INLINE_HTML shift to state 576
-- On T_INCLUDE_ONCE shift to state 136
-- On T_INCLUDE shift to state 137
-- On T_INC shift to state 138
-- On T_IF shift to state 577
-- On T_IDENT shift to state 18
-- On T_GLOBAL shift to state 587
-- On T_FUNC_C shift to state 61
-- On T_FUNCTION shift to state 139
-- On T_FOREACH shift to state 600
-- On T_FOR shift to state 624
-- On T_FILE shift to state 62
-- On T_EXIT shift to state 160
-- On T_EVAL shift to state 162
-- On T_ENUM shift to state 19
-- On T_EMPTY shift to state 164
-- On T_ELLIPSIS shift to state 635
-- On T_ECHO shift to state 636
-- On T_DOUBLE_CAST shift to state 168
-- On T_DO shift to state 644
-- On T_DNUMBER shift to state 63
-- On T_DIR shift to state 64
-- On T_DECLARE shift to state 645
-- On T_DEC shift to state 169
-- On T_CONTINUE shift to state 649
-- On T_CONSTANT_ENCAPSED_STRING shift to state 65
-- On T_CLONE shift to state 170
-- On T_CLASS_C shift to state 66
-- On T_BREAK shift to state 652
-- On T_BOOL_CAST shift to state 171
-- On T_AWAIT shift to state 172
-- On T_ASYNC shift to state 173
-- On T_ARRAY_CAST shift to state 200
-- On T_ARRAY shift to state 201
-- On TTILDE shift to state 204
-- On TSEMICOLON shift to state 655
-- On TPLUS shift to state 205
-- On TOPAR shift to state 206
-- On TOBRACE shift to state 656
-- On TOBRA shift to state 209
-- On TMINUS shift to state 210
-- On TGUIL shift to state 211
-- On TDOLLARDOLLAR shift to state 213
-- On TDOLLAR shift to state 214
-- On TBANG shift to state 216
-- On TBACKQUOTE shift to state 217
-- On TANTISLASH shift to state 85
-- On LDots shift to state 222
-- On statement shift to state 743
-- On simple_expr shift to state 223
-- On qualified_name shift to state 94
-- On qualified_class_name shift to state 225
-- On primary_expr shift to state 226
-- On new_expr shift to state 227
-- On namespace_name shift to state 102
-- On member_expr shift to state 228
-- On lambda_expr shift to state 231
-- On ident_in_name shift to state 57
-- On ident shift to state 56
-- On expr shift to state 704
-- On constant shift to state 239
-- On call_expr shift to state 240
## Reductions:

State 645:
## Known stack suffix:
## T_DECLARE
## LR(1) items:
statement -> T_DECLARE . TOPAR list_sep(declare,TCOMMA) TCPAR declare_statement [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_ENDWHILE T_ENDSWITCH T_ENDIF T_ENDFOREACH T_ENDFOR T_ENDDECLARE T_EMPTY T_ELSEIF T_ELSE T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DEFAULT T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_CASE T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
## Transitions:
-- On TOPAR shift to state 646
## Reductions:

State 646:
## Known stack suffix:
## T_DECLARE TOPAR
## LR(1) items:
statement -> T_DECLARE TOPAR . list_sep(declare,TCOMMA) TCPAR declare_statement [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_ENDWHILE T_ENDSWITCH T_ENDIF T_ENDFOREACH T_ENDFOR T_ENDDECLARE T_EMPTY T_ELSEIF T_ELSE T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DEFAULT T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_CASE T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
## Transitions:
-- On T_TYPE shift to state 6
-- On T_SUPER shift to state 8
-- On T_METAVAR shift to state 17
-- On T_IDENT shift to state 18
-- On T_ENUM shift to state 19
-- On list_sep(declare,TCOMMA) shift to state 647
-- On ident shift to state 738
-- On declare shift to state 742
## Reductions:

State 647:
## Known stack suffix:
## T_DECLARE TOPAR list_sep(declare,TCOMMA)
## LR(1) items:
list_sep(declare,TCOMMA) -> list_sep(declare,TCOMMA) . TCOMMA declare [ TCPAR TCOMMA ]
statement -> T_DECLARE TOPAR list_sep(declare,TCOMMA) . TCPAR declare_statement [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_ENDWHILE T_ENDSWITCH T_ENDIF T_ENDFOREACH T_ENDFOR T_ENDDECLARE T_EMPTY T_ELSEIF T_ELSE T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DEFAULT T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_CASE T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
## Transitions:
-- On TCPAR shift to state 648
-- On TCOMMA shift to state 737
## Reductions:

State 648:
## Known stack suffix:
## T_DECLARE TOPAR list_sep(declare,TCOMMA) TCPAR
## LR(1) items:
statement -> T_DECLARE TOPAR list_sep(declare,TCOMMA) TCPAR . declare_statement [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_ENDWHILE T_ENDSWITCH T_ENDIF T_ENDFOREACH T_ENDFOR T_ENDDECLARE T_EMPTY T_ELSEIF T_ELSE T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DEFAULT T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_CASE T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
## Transitions:
-- On T__AT shift to state 1
-- On T_YIELD shift to state 2
-- On T_WHILE shift to state 158
-- On T_VARIABLE shift to state 3
-- On T_USE shift to state 190
-- On T_UNSET_CAST shift to state 5
-- On T_UNSET shift to state 197
-- On T_TYPE shift to state 6
-- On T_TRY shift to state 391
-- On T_TRAIT_C shift to state 7
-- On T_THROW shift to state 520
-- On T_SWITCH shift to state 525
-- On T_SUPER shift to state 8
-- On T_STRING_CAST shift to state 9
-- On T_STATIC shift to state 581
-- On T_START_HEREDOC shift to state 25
-- On T_SELF shift to state 40
-- On T_RETURN shift to state 553
-- On T_REQUIRE_ONCE shift to state 41
-- On T_REQUIRE shift to state 42
-- On T_PRINT shift to state 43
-- On T_PARENT shift to state 44
-- On T_OPEN_TAG_WITH_ECHO shift to state 558
-- On T_OBJECT_CAST shift to state 45
-- On T_NEW shift to state 46
-- On T_NAMESPACE_C shift to state 49
-- On T_NAMESPACE shift to state 50
-- On T_METHOD_C shift to state 58
-- On T_METAVAR shift to state 17
-- On T_LNUMBER shift to state 59
-- On T_LIST shift to state 69
-- On T_LINE shift to state 60
-- On T_LAMBDA_OPAR shift to state 73
-- On T_ISSET shift to state 133
-- On T_INT_CAST shift to state 135
-- On T_INSTANCEOF shift to state 52
-- On T_INLINE_HTML shift to state 576
-- On T_INCLUDE_ONCE shift to state 136
-- On T_INCLUDE shift to state 137
-- On T_INC shift to state 138
-- On T_IF shift to state 577
-- On T_IDENT shift to state 18
-- On T_GLOBAL shift to state 587
-- On T_FUNC_C shift to state 61
-- On T_FUNCTION shift to state 139
-- On T_FOREACH shift to state 600
-- On T_FOR shift to state 624
-- On T_FILE shift to state 62
-- On T_EXIT shift to state 160
-- On T_EVAL shift to state 162
-- On T_ENUM shift to state 19
-- On T_EMPTY shift to state 164
-- On T_ELLIPSIS shift to state 635
-- On T_ECHO shift to state 636
-- On T_DOUBLE_CAST shift to state 168
-- On T_DO shift to state 644
-- On T_DNUMBER shift to state 63
-- On T_DIR shift to state 64
-- On T_DECLARE shift to state 645
-- On T_DEC shift to state 169
-- On T_CONTINUE shift to state 649
-- On T_CONSTANT_ENCAPSED_STRING shift to state 65
-- On T_CLONE shift to state 170
-- On T_CLASS_C shift to state 66
-- On T_BREAK shift to state 652
-- On T_BOOL_CAST shift to state 171
-- On T_AWAIT shift to state 172
-- On T_ASYNC shift to state 173
-- On T_ARRAY_CAST shift to state 200
-- On T_ARRAY shift to state 201
-- On TTILDE shift to state 204
-- On TSEMICOLON shift to state 655
-- On TPLUS shift to state 205
-- On TOPAR shift to state 206
-- On TOBRACE shift to state 656
-- On TOBRA shift to state 209
-- On TMINUS shift to state 210
-- On TGUIL shift to state 211
-- On TDOLLARDOLLAR shift to state 213
-- On TDOLLAR shift to state 214
-- On TCOLON shift to state 731
-- On TBANG shift to state 216
-- On TBACKQUOTE shift to state 217
-- On TANTISLASH shift to state 85
-- On LDots shift to state 222
-- On statement shift to state 735
-- On simple_expr shift to state 223
-- On qualified_name shift to state 94
-- On qualified_class_name shift to state 225
-- On primary_expr shift to state 226
-- On new_expr shift to state 227
-- On namespace_name shift to state 102
-- On member_expr shift to state 228
-- On lambda_expr shift to state 231
-- On ident_in_name shift to state 57
-- On ident shift to state 56
-- On expr shift to state 704
-- On declare_statement shift to state 736
-- On constant shift to state 239
-- On call_expr shift to state 240
## Reductions:

State 649:
## Known stack suffix:
## T_CONTINUE
## LR(1) items:
statement -> T_CONTINUE . option(expr) TSEMICOLON [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_ENDWHILE T_ENDSWITCH T_ENDIF T_ENDFOREACH T_ENDFOR T_ENDDECLARE T_EMPTY T_ELSEIF T_ELSE T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DEFAULT T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_CASE T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
## Transitions:
-- On T__AT shift to state 1
-- On T_YIELD shift to state 2
-- On T_VARIABLE shift to state 3
-- On T_UNSET_CAST shift to state 5
-- On T_TYPE shift to state 6
-- On T_TRAIT_C shift to state 7
-- On T_SUPER shift to state 8
-- On T_STRING_CAST shift to state 9
-- On T_STATIC shift to state 10
-- On T_START_HEREDOC shift to state 25
-- On T_SELF shift to state 40
-- On T_REQUIRE_ONCE shift to state 41
-- On T_REQUIRE shift to state 42
-- On T_PRINT shift to state 43
-- On T_PARENT shift to state 44
-- On T_OBJECT_CAST shift to state 45
-- On T_NEW shift to state 46
-- On T_NAMESPACE_C shift to state 49
-- On T_NAMESPACE shift to state 50
-- On T_METHOD_C shift to state 58
-- On T_METAVAR shift to state 17
-- On T_LNUMBER shift to state 59
-- On T_LIST shift to state 69
-- On T_LINE shift to state 60
-- On T_LAMBDA_OPAR shift to state 73
-- On T_ISSET shift to state 133
-- On T_INT_CAST shift to state 135
-- On T_INSTANCEOF shift to state 52
-- On T_INCLUDE_ONCE shift to state 136
-- On T_INCLUDE shift to state 137
-- On T_INC shift to state 138
-- On T_IDENT shift to state 18
-- On T_FUNC_C shift to state 61
-- On T_FUNCTION shift to state 139
-- On T_FILE shift to state 62
-- On T_EXIT shift to state 160
-- On T_EVAL shift to state 162
-- On T_ENUM shift to state 19
-- On T_EMPTY shift to state 164
-- On T_DOUBLE_CAST shift to state 168
-- On T_DNUMBER shift to state 63
-- On T_DIR shift to state 64
-- On T_DEC shift to state 169
-- On T_CONSTANT_ENCAPSED_STRING shift to state 65
-- On T_CLONE shift to state 170
-- On T_CLASS_C shift to state 66
-- On T_BOOL_CAST shift to state 171
-- On T_AWAIT shift to state 172
-- On T_ASYNC shift to state 173
-- On T_ARRAY_CAST shift to state 200
-- On T_ARRAY shift to state 201
-- On TTILDE shift to state 204
-- On TPLUS shift to state 205
-- On TOPAR shift to state 206
-- On TOBRA shift to state 209
-- On TMINUS shift to state 210
-- On TGUIL shift to state 211
-- On TDOLLARDOLLAR shift to state 213
-- On TDOLLAR shift to state 214
-- On TBANG shift to state 216
-- On TBACKQUOTE shift to state 217
-- On TANTISLASH shift to state 85
-- On LDots shift to state 222
-- On simple_expr shift to state 223
-- On qualified_name shift to state 94
-- On qualified_class_name shift to state 225
-- On primary_expr shift to state 226
-- On option(expr) shift to state 650
-- On new_expr shift to state 227
-- On namespace_name shift to state 102
-- On member_expr shift to state 228
-- On lambda_expr shift to state 231
-- On ident_in_name shift to state 57
-- On ident shift to state 56
-- On expr shift to state 310
-- On constant shift to state 239
-- On call_expr shift to state 240
## Reductions:
-- On TSEMICOLON
--   reduce production option(expr) ->

State 650:
## Known stack suffix:
## T_CONTINUE option(expr)
## LR(1) items:
statement -> T_CONTINUE option(expr) . TSEMICOLON [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_ENDWHILE T_ENDSWITCH T_ENDIF T_ENDFOREACH T_ENDFOR T_ENDDECLARE T_EMPTY T_ELSEIF T_ELSE T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DEFAULT T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_CASE T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
## Transitions:
-- On TSEMICOLON shift to state 651
## Reductions:

State 651:
## Known stack suffix:
## T_CONTINUE option(expr) TSEMICOLON
## LR(1) items:
statement -> T_CONTINUE option(expr) TSEMICOLON . [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_ENDWHILE T_ENDSWITCH T_ENDIF T_ENDFOREACH T_ENDFOR T_ENDDECLARE T_EMPTY T_ELSEIF T_ELSE T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DEFAULT T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_CASE T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production statement -> T_CONTINUE option(expr) TSEMICOLON

State 652:
## Known stack suffix:
## T_BREAK
## LR(1) items:
statement -> T_BREAK . option(expr) TSEMICOLON [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_ENDWHILE T_ENDSWITCH T_ENDIF T_ENDFOREACH T_ENDFOR T_ENDDECLARE T_EMPTY T_ELSEIF T_ELSE T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DEFAULT T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_CASE T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
## Transitions:
-- On T__AT shift to state 1
-- On T_YIELD shift to state 2
-- On T_VARIABLE shift to state 3
-- On T_UNSET_CAST shift to state 5
-- On T_TYPE shift to state 6
-- On T_TRAIT_C shift to state 7
-- On T_SUPER shift to state 8
-- On T_STRING_CAST shift to state 9
-- On T_STATIC shift to state 10
-- On T_START_HEREDOC shift to state 25
-- On T_SELF shift to state 40
-- On T_REQUIRE_ONCE shift to state 41
-- On T_REQUIRE shift to state 42
-- On T_PRINT shift to state 43
-- On T_PARENT shift to state 44
-- On T_OBJECT_CAST shift to state 45
-- On T_NEW shift to state 46
-- On T_NAMESPACE_C shift to state 49
-- On T_NAMESPACE shift to state 50
-- On T_METHOD_C shift to state 58
-- On T_METAVAR shift to state 17
-- On T_LNUMBER shift to state 59
-- On T_LIST shift to state 69
-- On T_LINE shift to state 60
-- On T_LAMBDA_OPAR shift to state 73
-- On T_ISSET shift to state 133
-- On T_INT_CAST shift to state 135
-- On T_INSTANCEOF shift to state 52
-- On T_INCLUDE_ONCE shift to state 136
-- On T_INCLUDE shift to state 137
-- On T_INC shift to state 138
-- On T_IDENT shift to state 18
-- On T_FUNC_C shift to state 61
-- On T_FUNCTION shift to state 139
-- On T_FILE shift to state 62
-- On T_EXIT shift to state 160
-- On T_EVAL shift to state 162
-- On T_ENUM shift to state 19
-- On T_EMPTY shift to state 164
-- On T_DOUBLE_CAST shift to state 168
-- On T_DNUMBER shift to state 63
-- On T_DIR shift to state 64
-- On T_DEC shift to state 169
-- On T_CONSTANT_ENCAPSED_STRING shift to state 65
-- On T_CLONE shift to state 170
-- On T_CLASS_C shift to state 66
-- On T_BOOL_CAST shift to state 171
-- On T_AWAIT shift to state 172
-- On T_ASYNC shift to state 173
-- On T_ARRAY_CAST shift to state 200
-- On T_ARRAY shift to state 201
-- On TTILDE shift to state 204
-- On TPLUS shift to state 205
-- On TOPAR shift to state 206
-- On TOBRA shift to state 209
-- On TMINUS shift to state 210
-- On TGUIL shift to state 211
-- On TDOLLARDOLLAR shift to state 213
-- On TDOLLAR shift to state 214
-- On TBANG shift to state 216
-- On TBACKQUOTE shift to state 217
-- On TANTISLASH shift to state 85
-- On LDots shift to state 222
-- On simple_expr shift to state 223
-- On qualified_name shift to state 94
-- On qualified_class_name shift to state 225
-- On primary_expr shift to state 226
-- On option(expr) shift to state 653
-- On new_expr shift to state 227
-- On namespace_name shift to state 102
-- On member_expr shift to state 228
-- On lambda_expr shift to state 231
-- On ident_in_name shift to state 57
-- On ident shift to state 56
-- On expr shift to state 310
-- On constant shift to state 239
-- On call_expr shift to state 240
## Reductions:
-- On TSEMICOLON
--   reduce production option(expr) ->

State 653:
## Known stack suffix:
## T_BREAK option(expr)
## LR(1) items:
statement -> T_BREAK option(expr) . TSEMICOLON [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_ENDWHILE T_ENDSWITCH T_ENDIF T_ENDFOREACH T_ENDFOR T_ENDDECLARE T_EMPTY T_ELSEIF T_ELSE T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DEFAULT T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_CASE T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
## Transitions:
-- On TSEMICOLON shift to state 654
## Reductions:

State 654:
## Known stack suffix:
## T_BREAK option(expr) TSEMICOLON
## LR(1) items:
statement -> T_BREAK option(expr) TSEMICOLON . [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_ENDWHILE T_ENDSWITCH T_ENDIF T_ENDFOREACH T_ENDFOR T_ENDDECLARE T_EMPTY T_ELSEIF T_ELSE T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DEFAULT T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_CASE T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production statement -> T_BREAK option(expr) TSEMICOLON

State 655:
## Known stack suffix:
## TSEMICOLON
## LR(1) items:
statement -> TSEMICOLON . [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_ENDWHILE T_ENDSWITCH T_ENDIF T_ENDFOREACH T_ENDFOR T_ENDDECLARE T_EMPTY T_ELSEIF T_ELSE T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DEFAULT T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_CASE T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production statement -> TSEMICOLON

State 656:
## Known stack suffix:
## TOBRACE
## LR(1) items:
statement -> TOBRACE . list(inner_statement) TCBRACE [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_ENDWHILE T_ENDSWITCH T_ENDIF T_ENDFOREACH T_ENDFOR T_ENDDECLARE T_EMPTY T_ELSEIF T_ELSE T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DEFAULT T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_CASE T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
## Transitions:
-- On T__AT shift to state 1
-- On T_YIELD shift to state 2
-- On T_WHILE shift to state 158
-- On T_VARIABLE shift to state 3
-- On T_USE shift to state 190
-- On T_UNSET_CAST shift to state 5
-- On T_UNSET shift to state 197
-- On T_TYPE shift to state 6
-- On T_TRY shift to state 391
-- On T_TRAIT_C shift to state 7
-- On T_TRAIT shift to state 393
-- On T_THROW shift to state 520
-- On T_SWITCH shift to state 525
-- On T_SUPER shift to state 8
-- On T_STRING_CAST shift to state 9
-- On T_STATIC shift to state 536
-- On T_START_HEREDOC shift to state 25
-- On T_SL shift to state 16
-- On T_SELF shift to state 40
-- On T_RETURN shift to state 553
-- On T_REQUIRE_ONCE shift to state 41
-- On T_REQUIRE shift to state 42
-- On T_PRINT shift to state 43
-- On T_PARENT shift to state 44
-- On T_OPEN_TAG_WITH_ECHO shift to state 558
-- On T_OBJECT_CAST shift to state 45
-- On T_NEW shift to state 46
-- On T_NAMESPACE_C shift to state 49
-- On T_NAMESPACE shift to state 50
-- On T_METHOD_C shift to state 58
-- On T_METAVAR shift to state 17
-- On T_LNUMBER shift to state 59
-- On T_LIST shift to state 69
-- On T_LINE shift to state 60
-- On T_LAMBDA_OPAR shift to state 73
-- On T_ISSET shift to state 133
-- On T_INT_CAST shift to state 135
-- On T_INTERFACE shift to state 563
-- On T_INSTANCEOF shift to state 52
-- On T_INLINE_HTML shift to state 576
-- On T_INCLUDE_ONCE shift to state 136
-- On T_INCLUDE shift to state 137
-- On T_INC shift to state 138
-- On T_IF shift to state 577
-- On T_IDENT shift to state 18
-- On T_GLOBAL shift to state 587
-- On T_FUNC_C shift to state 61
-- On T_FUNCTION shift to state 657
-- On T_FOREACH shift to state 600
-- On T_FOR shift to state 624
-- On T_FINAL shift to state 666
-- On T_FILE shift to state 62
-- On T_EXIT shift to state 160
-- On T_EVAL shift to state 162
-- On T_ENUM shift to state 668
-- On T_EMPTY shift to state 164
-- On T_ELLIPSIS shift to state 635
-- On T_ECHO shift to state 636
-- On T_DOUBLE_CAST shift to state 168
-- On T_DO shift to state 644
-- On T_DNUMBER shift to state 63
-- On T_DIR shift to state 64
-- On T_DECLARE shift to state 645
-- On T_DEC shift to state 169
-- On T_CONTINUE shift to state 649
-- On T_CONSTANT_ENCAPSED_STRING shift to state 65
-- On T_CLONE shift to state 170
-- On T_CLASS_C shift to state 66
-- On T_CLASS shift to state 682
-- On T_BREAK shift to state 652
-- On T_BOOL_CAST shift to state 171
-- On T_AWAIT shift to state 172
-- On T_ASYNC shift to state 683
-- On T_ARRAY_CAST shift to state 200
-- On T_ARRAY shift to state 201
-- On T_ABSTRACT shift to state 694
-- On TTILDE shift to state 204
-- On TSEMICOLON shift to state 655
-- On TPLUS shift to state 205
-- On TOPAR shift to state 206
-- On TOBRACE shift to state 656
-- On TOBRA shift to state 209
-- On TMINUS shift to state 210
-- On TGUIL shift to state 211
-- On TDOLLARDOLLAR shift to state 213
-- On TDOLLAR shift to state 214
-- On TBANG shift to state 216
-- On TBACKQUOTE shift to state 217
-- On TANTISLASH shift to state 85
-- On LDots shift to state 222
-- On unticked_function_declaration shift to state 696
-- On unticked_class_declaration shift to state 697
-- On statement shift to state 698
-- On simple_expr shift to state 223
-- On qualified_name shift to state 94
-- On qualified_class_name shift to state 225
-- On primary_expr shift to state 226
-- On new_expr shift to state 227
-- On namespace_name shift to state 102
-- On member_expr shift to state 228
-- On list(inner_statement) shift to state 729
-- On lambda_expr shift to state 231
-- On inner_statement shift to state 701
-- On ident_in_name shift to state 57
-- On ident shift to state 56
-- On function_declaration shift to state 703
-- On expr shift to state 704
-- On constant shift to state 239
-- On class_entry_type shift to state 706
-- On class_declaration shift to state 716
-- On call_expr shift to state 240
-- On attributes shift to state 717
## Reductions:
-- On TCBRACE
--   reduce production list(inner_statement) ->

State 657:
## Known stack suffix:
## T_FUNCTION
## LR(1) items:
expr -> T_FUNCTION . is_reference TOPAR parameter_list TCPAR lexical_vars option(return_type) TOBRACE list(inner_statement) TCBRACE [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TAND EOF ]
unticked_function_declaration -> T_FUNCTION . is_reference ident type_params_opt TOPAR parameter_list TCPAR option(return_type) function_body [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_ENDWHILE T_ENDSWITCH T_ENDIF T_ENDFOREACH T_ENDFOR T_ENDDECLARE T_EMPTY T_ELSEIF T_ELSE T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DEFAULT T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_CASE T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
## Transitions:
-- On TAND shift to state 12
-- On option(TAND) shift to state 13
-- On is_reference shift to state 658
## Reductions:
-- On T_TYPE T_SUPER T_METAVAR T_IDENT T_ENUM TOPAR
--   reduce production option(TAND) ->

State 658:
## Known stack suffix:
## T_FUNCTION is_reference
## LR(1) items:
expr -> T_FUNCTION is_reference . TOPAR parameter_list TCPAR lexical_vars option(return_type) TOBRACE list(inner_statement) TCBRACE [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TAND EOF ]
unticked_function_declaration -> T_FUNCTION is_reference . ident type_params_opt TOPAR parameter_list TCPAR option(return_type) function_body [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_ENDWHILE T_ENDSWITCH T_ENDIF T_ENDFOREACH T_ENDFOR T_ENDDECLARE T_EMPTY T_ELSEIF T_ELSE T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DEFAULT T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_CASE T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
## Transitions:
-- On T_TYPE shift to state 6
-- On T_SUPER shift to state 8
-- On T_METAVAR shift to state 17
-- On T_IDENT shift to state 18
-- On T_ENUM shift to state 19
-- On TOPAR shift to state 141
-- On ident shift to state 659
## Reductions:

State 659:
## Known stack suffix:
## T_FUNCTION is_reference ident
## LR(1) items:
unticked_function_declaration -> T_FUNCTION is_reference ident . type_params_opt TOPAR parameter_list TCPAR option(return_type) function_body [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_ENDWHILE T_ENDSWITCH T_ENDIF T_ENDFOREACH T_ENDFOR T_ENDDECLARE T_EMPTY T_ELSEIF T_ELSE T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DEFAULT T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_CASE T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
## Transitions:
-- On TSMALLER shift to state 395
-- On type_params_opt shift to state 660
## Reductions:
-- On TOPAR
--   reduce production type_params_opt ->

State 660:
## Known stack suffix:
## T_FUNCTION is_reference ident type_params_opt
## LR(1) items:
unticked_function_declaration -> T_FUNCTION is_reference ident type_params_opt . TOPAR parameter_list TCPAR option(return_type) function_body [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_ENDWHILE T_ENDSWITCH T_ENDIF T_ENDFOREACH T_ENDFOR T_ENDDECLARE T_EMPTY T_ELSEIF T_ELSE T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DEFAULT T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_CASE T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
## Transitions:
-- On TOPAR shift to state 661
## Reductions:

State 661:
## Known stack suffix:
## T_FUNCTION is_reference ident type_params_opt TOPAR
## LR(1) items:
unticked_function_declaration -> T_FUNCTION is_reference ident type_params_opt TOPAR . parameter_list TCPAR option(return_type) function_body [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_ENDWHILE T_ENDSWITCH T_ENDIF T_ENDFOREACH T_ENDFOR T_ENDDECLARE T_EMPTY T_ELSEIF T_ELSE T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DEFAULT T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_CASE T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
## Transitions:
-- On T_SL shift to state 16
-- On parameter_list shift to state 662
-- On parameter shift to state 122
-- On option(attributes) shift to state 125
-- On attributes shift to state 181
## Reductions:
-- On T_VARIABLE T_TYPE T_SUPER T_SELF T_PUBLIC T_PROTECTED T_PRIVATE T_PARENT T_NAMESPACE T_METAVAR T_INSTANCEOF T_IDENT T_ENUM T_ELLIPSIS T_ARRAY TQUESTION TOPAR TANTISLASH TAND
--   reduce production option(attributes) ->
-- On TCPAR
--   reduce production parameter_list ->

State 662:
## Known stack suffix:
## T_FUNCTION is_reference ident type_params_opt TOPAR parameter_list
## LR(1) items:
unticked_function_declaration -> T_FUNCTION is_reference ident type_params_opt TOPAR parameter_list . TCPAR option(return_type) function_body [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_ENDWHILE T_ENDSWITCH T_ENDIF T_ENDFOREACH T_ENDFOR T_ENDDECLARE T_EMPTY T_ELSEIF T_ELSE T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DEFAULT T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_CASE T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
## Transitions:
-- On TCPAR shift to state 663
## Reductions:

State 663:
## Known stack suffix:
## T_FUNCTION is_reference ident type_params_opt TOPAR parameter_list TCPAR
## LR(1) items:
unticked_function_declaration -> T_FUNCTION is_reference ident type_params_opt TOPAR parameter_list TCPAR . option(return_type) function_body [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_ENDWHILE T_ENDSWITCH T_ENDIF T_ENDFOREACH T_ENDFOR T_ENDDECLARE T_EMPTY T_ELSEIF T_ELSE T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DEFAULT T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_CASE T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
## Transitions:
-- On TCOLON shift to state 76
-- On return_type shift to state 119
-- On option(return_type) shift to state 664
## Reductions:
-- On TSEMICOLON TOBRACE
--   reduce production option(return_type) ->

State 664:
## Known stack suffix:
## T_FUNCTION is_reference ident type_params_opt TOPAR parameter_list TCPAR option(return_type)
## LR(1) items:
unticked_function_declaration -> T_FUNCTION is_reference ident type_params_opt TOPAR parameter_list TCPAR option(return_type) . function_body [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_ENDWHILE T_ENDSWITCH T_ENDIF T_ENDFOREACH T_ENDFOR T_ENDDECLARE T_EMPTY T_ELSEIF T_ELSE T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DEFAULT T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_CASE T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
## Transitions:
-- On TSEMICOLON shift to state 551
-- On TOBRACE shift to state 552
-- On function_body shift to state 665
## Reductions:

State 665:
## Known stack suffix:
## T_FUNCTION is_reference ident type_params_opt TOPAR parameter_list TCPAR option(return_type) function_body
## LR(1) items:
unticked_function_declaration -> T_FUNCTION is_reference ident type_params_opt TOPAR parameter_list TCPAR option(return_type) function_body . [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_ENDWHILE T_ENDSWITCH T_ENDIF T_ENDFOREACH T_ENDFOR T_ENDDECLARE T_EMPTY T_ELSEIF T_ELSE T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DEFAULT T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_CASE T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production unticked_function_declaration -> T_FUNCTION is_reference ident type_params_opt TOPAR parameter_list TCPAR option(return_type) function_body

State 666:
## Known stack suffix:
## T_FINAL
## LR(1) items:
class_entry_type -> T_FINAL . T_CLASS [ T_TYPE T_SUPER T_METAVAR T_IDENT T_ENUM ]
## Transitions:
-- On T_CLASS shift to state 667
## Reductions:

State 667:
## Known stack suffix:
## T_FINAL T_CLASS
## LR(1) items:
class_entry_type -> T_FINAL T_CLASS . [ T_TYPE T_SUPER T_METAVAR T_IDENT T_ENUM ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production class_entry_type -> T_FINAL T_CLASS

State 668:
## Known stack suffix:
## T_ENUM
## LR(1) items:
ident -> T_ENUM . [ T_XOR_EQUAL T_SR_EQUAL T_SR T_SL_EQUAL T_SL T_ROCKET T_PLUS_EQUAL T_OR_EQUAL T_OBJECT_OPERATOR T_MUL_EQUAL T_MOD_EQUAL T_MINUS_EQUAL T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DIV_EQUAL T_DEC T_CONCAT_EQUAL T_BOOLEAN_OR T_BOOLEAN_AND T_AND_EQUAL TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TOPAR TOBRACE TOBRA TMUL TMOD TMINUS TGREATER TEQ TDOT TDIV TCOLCOL TANTISLASH TAND EOF ]
unticked_class_declaration -> T_ENUM . ident_class_name TCOLON type_php type_constr_opt TOBRACE list(enum_statement) TCBRACE [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_ENDWHILE T_ENDSWITCH T_ENDIF T_ENDFOREACH T_ENDFOR T_ENDDECLARE T_EMPTY T_ELSEIF T_ELSE T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DEFAULT T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_CASE T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
## Transitions:
-- On T_TYPE shift to state 6
-- On T_SUPER shift to state 8
-- On T_METAVAR shift to state 17
-- On T_IDENT shift to state 18
-- On T_ENUM shift to state 19
-- On ident_class_name shift to state 669
-- On ident shift to state 575
## Reductions:
-- On T_XOR_EQUAL T_SR_EQUAL T_SR T_SL_EQUAL T_SL T_ROCKET T_PLUS_EQUAL T_OR_EQUAL T_OBJECT_OPERATOR T_MUL_EQUAL T_MOD_EQUAL T_MINUS_EQUAL T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DIV_EQUAL T_DEC T_CONCAT_EQUAL T_BOOLEAN_OR T_BOOLEAN_AND T_AND_EQUAL TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TOPAR TOBRACE TOBRA TMUL TMOD TMINUS TGREATER TEQ TDOT TDIV TCOLCOL TANTISLASH TAND EOF
--   reduce production ident -> T_ENUM

State 669:
## Known stack suffix:
## T_ENUM ident_class_name
## LR(1) items:
unticked_class_declaration -> T_ENUM ident_class_name . TCOLON type_php type_constr_opt TOBRACE list(enum_statement) TCBRACE [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_ENDWHILE T_ENDSWITCH T_ENDIF T_ENDFOREACH T_ENDFOR T_ENDDECLARE T_EMPTY T_ELSEIF T_ELSE T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DEFAULT T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_CASE T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
## Transitions:
-- On TCOLON shift to state 670
## Reductions:

State 670:
## Known stack suffix:
## T_ENUM ident_class_name TCOLON
## LR(1) items:
unticked_class_declaration -> T_ENUM ident_class_name TCOLON . type_php type_constr_opt TOBRACE list(enum_statement) TCBRACE [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_ENDWHILE T_ENDSWITCH T_ENDIF T_ENDFOREACH T_ENDFOR T_ENDDECLARE T_EMPTY T_ELSEIF T_ELSE T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DEFAULT T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_CASE T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
## Transitions:
-- On T_TYPE shift to state 6
-- On T_SUPER shift to state 8
-- On T_SELF shift to state 77
-- On T_PARENT shift to state 78
-- On T_NAMESPACE shift to state 50
-- On T_METAVAR shift to state 17
-- On T_INSTANCEOF shift to state 52
-- On T_IDENT shift to state 18
-- On T_ENUM shift to state 19
-- On T_ARRAY shift to state 79
-- On TQUESTION shift to state 80
-- On TOPAR shift to state 81
-- On TANTISLASH shift to state 85
-- On type_php shift to state 671
-- On qualified_name shift to state 94
-- On qualified_class_name_or_array shift to state 95
-- On qualified_class_name shift to state 100
-- On primary_type_php shift to state 101
-- On namespace_name shift to state 102
-- On ident_in_name shift to state 57
-- On ident shift to state 56
-- On class_name shift to state 103
## Reductions:

State 671:
## Known stack suffix:
## T_ENUM ident_class_name TCOLON type_php
## LR(1) items:
type_php -> type_php . TCOLCOL primary_type_php [ T_AS TOBRACE TCOLCOL ]
unticked_class_declaration -> T_ENUM ident_class_name TCOLON type_php . type_constr_opt TOBRACE list(enum_statement) TCBRACE [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_ENDWHILE T_ENDSWITCH T_ENDIF T_ENDFOREACH T_ENDFOR T_ENDDECLARE T_EMPTY T_ELSEIF T_ELSE T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DEFAULT T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_CASE T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
## Transitions:
-- On T_AS shift to state 672
-- On TCOLCOL shift to state 93
-- On type_constr_opt shift to state 674
## Reductions:
-- On TOBRACE
--   reduce production type_constr_opt ->

State 672:
## Known stack suffix:
## T_AS
## LR(1) items:
type_constr_opt -> T_AS . type_php [ TOBRACE TEQ ]
## Transitions:
-- On T_TYPE shift to state 6
-- On T_SUPER shift to state 8
-- On T_SELF shift to state 77
-- On T_PARENT shift to state 78
-- On T_NAMESPACE shift to state 50
-- On T_METAVAR shift to state 17
-- On T_INSTANCEOF shift to state 52
-- On T_IDENT shift to state 18
-- On T_ENUM shift to state 19
-- On T_ARRAY shift to state 79
-- On TQUESTION shift to state 80
-- On TOPAR shift to state 81
-- On TANTISLASH shift to state 85
-- On type_php shift to state 673
-- On qualified_name shift to state 94
-- On qualified_class_name_or_array shift to state 95
-- On qualified_class_name shift to state 100
-- On primary_type_php shift to state 101
-- On namespace_name shift to state 102
-- On ident_in_name shift to state 57
-- On ident shift to state 56
-- On class_name shift to state 103
## Reductions:

State 673:
## Known stack suffix:
## T_AS type_php
## LR(1) items:
type_constr_opt -> T_AS type_php . [ TOBRACE TEQ ]
type_php -> type_php . TCOLCOL primary_type_php [ TOBRACE TEQ TCOLCOL ]
## Transitions:
-- On TCOLCOL shift to state 93
## Reductions:
-- On TOBRACE TEQ
--   reduce production type_constr_opt -> T_AS type_php

State 674:
## Known stack suffix:
## T_ENUM ident_class_name TCOLON type_php type_constr_opt
## LR(1) items:
unticked_class_declaration -> T_ENUM ident_class_name TCOLON type_php type_constr_opt . TOBRACE list(enum_statement) TCBRACE [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_ENDWHILE T_ENDSWITCH T_ENDIF T_ENDFOREACH T_ENDFOR T_ENDDECLARE T_EMPTY T_ELSEIF T_ELSE T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DEFAULT T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_CASE T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
## Transitions:
-- On TOBRACE shift to state 675
## Reductions:

State 675:
## Known stack suffix:
## T_ENUM ident_class_name TCOLON type_php type_constr_opt TOBRACE
## LR(1) items:
unticked_class_declaration -> T_ENUM ident_class_name TCOLON type_php type_constr_opt TOBRACE . list(enum_statement) TCBRACE [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_ENDWHILE T_ENDSWITCH T_ENDIF T_ENDFOREACH T_ENDFOR T_ENDDECLARE T_EMPTY T_ELSEIF T_ELSE T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DEFAULT T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_CASE T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
## Transitions:
-- On T_TYPE shift to state 6
-- On T_SUPER shift to state 8
-- On T_NEW shift to state 480
-- On T_METAVAR shift to state 17
-- On T_LOGICAL_AND shift to state 481
-- On T_LIST shift to state 482
-- On T_IDENT shift to state 18
-- On T_FROM shift to state 483
-- On T_ENUM shift to state 19
-- On list(enum_statement) shift to state 676
-- On ident_constant_name shift to state 488
-- On ident shift to state 491
-- On enum_statement shift to state 678
-- On class_constant_declaration shift to state 680
## Reductions:
-- On TCBRACE
--   reduce production list(enum_statement) ->

State 676:
## Known stack suffix:
## T_ENUM ident_class_name TCOLON type_php type_constr_opt TOBRACE list(enum_statement)
## LR(1) items:
unticked_class_declaration -> T_ENUM ident_class_name TCOLON type_php type_constr_opt TOBRACE list(enum_statement) . TCBRACE [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_ENDWHILE T_ENDSWITCH T_ENDIF T_ENDFOREACH T_ENDFOR T_ENDDECLARE T_EMPTY T_ELSEIF T_ELSE T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DEFAULT T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_CASE T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
## Transitions:
-- On TCBRACE shift to state 677
## Reductions:

State 677:
## Known stack suffix:
## T_ENUM ident_class_name TCOLON type_php type_constr_opt TOBRACE list(enum_statement) TCBRACE
## LR(1) items:
unticked_class_declaration -> T_ENUM ident_class_name TCOLON type_php type_constr_opt TOBRACE list(enum_statement) TCBRACE . [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_ENDWHILE T_ENDSWITCH T_ENDIF T_ENDFOREACH T_ENDFOR T_ENDDECLARE T_EMPTY T_ELSEIF T_ELSE T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DEFAULT T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_CASE T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production unticked_class_declaration -> T_ENUM ident_class_name TCOLON type_php type_constr_opt TOBRACE list(enum_statement) TCBRACE

State 678:
## Known stack suffix:
## enum_statement
## LR(1) items:
list(enum_statement) -> enum_statement . list(enum_statement) [ TCBRACE ]
## Transitions:
-- On T_TYPE shift to state 6
-- On T_SUPER shift to state 8
-- On T_NEW shift to state 480
-- On T_METAVAR shift to state 17
-- On T_LOGICAL_AND shift to state 481
-- On T_LIST shift to state 482
-- On T_IDENT shift to state 18
-- On T_FROM shift to state 483
-- On T_ENUM shift to state 19
-- On list(enum_statement) shift to state 679
-- On ident_constant_name shift to state 488
-- On ident shift to state 491
-- On enum_statement shift to state 678
-- On class_constant_declaration shift to state 680
## Reductions:
-- On TCBRACE
--   reduce production list(enum_statement) ->

State 679:
## Known stack suffix:
## enum_statement list(enum_statement)
## LR(1) items:
list(enum_statement) -> enum_statement list(enum_statement) . [ TCBRACE ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production list(enum_statement) -> enum_statement list(enum_statement)

State 680:
## Known stack suffix:
## class_constant_declaration
## LR(1) items:
enum_statement -> class_constant_declaration . TSEMICOLON [ T_TYPE T_SUPER T_NEW T_METAVAR T_LOGICAL_AND T_LIST T_IDENT T_FROM T_ENUM TCBRACE ]
## Transitions:
-- On TSEMICOLON shift to state 681
## Reductions:

State 681:
## Known stack suffix:
## class_constant_declaration TSEMICOLON
## LR(1) items:
enum_statement -> class_constant_declaration TSEMICOLON . [ T_TYPE T_SUPER T_NEW T_METAVAR T_LOGICAL_AND T_LIST T_IDENT T_FROM T_ENUM TCBRACE ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production enum_statement -> class_constant_declaration TSEMICOLON

State 682:
## Known stack suffix:
## T_CLASS
## LR(1) items:
class_entry_type -> T_CLASS . [ T_TYPE T_SUPER T_METAVAR T_IDENT T_ENUM ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production class_entry_type -> T_CLASS

State 683:
## Known stack suffix:
## T_ASYNC
## LR(1) items:
expr -> T_ASYNC . T_FUNCTION is_reference TOPAR parameter_list TCPAR lexical_vars option(return_type) TOBRACE list(inner_statement) TCBRACE [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TAND EOF ]
lambda_expr -> T_ASYNC . T_VARIABLE lambda_body [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TAND EOF ]
lambda_expr -> T_ASYNC . T_LAMBDA_OPAR parameter_list T_LAMBDA_CPAR option(return_type) lambda_body [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TAND EOF ]
lambda_expr -> T_ASYNC . TOBRACE list(inner_statement) TCBRACE [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TAND EOF ]
unticked_function_declaration -> T_ASYNC . T_FUNCTION is_reference ident type_params_opt TOPAR parameter_list TCPAR option(return_type) function_body [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_ENDWHILE T_ENDSWITCH T_ENDIF T_ENDFOREACH T_ENDFOR T_ENDDECLARE T_EMPTY T_ELSEIF T_ELSE T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DEFAULT T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_CASE T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
## Transitions:
-- On T_VARIABLE shift to state 174
-- On T_LAMBDA_OPAR shift to state 176
-- On T_FUNCTION shift to state 684
-- On TOBRACE shift to state 693
## Reductions:

State 684:
## Known stack suffix:
## T_ASYNC T_FUNCTION
## LR(1) items:
expr -> T_ASYNC T_FUNCTION . is_reference TOPAR parameter_list TCPAR lexical_vars option(return_type) TOBRACE list(inner_statement) TCBRACE [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TAND EOF ]
unticked_function_declaration -> T_ASYNC T_FUNCTION . is_reference ident type_params_opt TOPAR parameter_list TCPAR option(return_type) function_body [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_ENDWHILE T_ENDSWITCH T_ENDIF T_ENDFOREACH T_ENDFOR T_ENDDECLARE T_EMPTY T_ELSEIF T_ELSE T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DEFAULT T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_CASE T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
## Transitions:
-- On TAND shift to state 12
-- On option(TAND) shift to state 13
-- On is_reference shift to state 685
## Reductions:
-- On T_TYPE T_SUPER T_METAVAR T_IDENT T_ENUM TOPAR
--   reduce production option(TAND) ->

State 685:
## Known stack suffix:
## T_ASYNC T_FUNCTION is_reference
## LR(1) items:
expr -> T_ASYNC T_FUNCTION is_reference . TOPAR parameter_list TCPAR lexical_vars option(return_type) TOBRACE list(inner_statement) TCBRACE [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TAND EOF ]
unticked_function_declaration -> T_ASYNC T_FUNCTION is_reference . ident type_params_opt TOPAR parameter_list TCPAR option(return_type) function_body [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_ENDWHILE T_ENDSWITCH T_ENDIF T_ENDFOREACH T_ENDFOR T_ENDDECLARE T_EMPTY T_ELSEIF T_ELSE T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DEFAULT T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_CASE T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
## Transitions:
-- On T_TYPE shift to state 6
-- On T_SUPER shift to state 8
-- On T_METAVAR shift to state 17
-- On T_IDENT shift to state 18
-- On T_ENUM shift to state 19
-- On TOPAR shift to state 184
-- On ident shift to state 686
## Reductions:

State 686:
## Known stack suffix:
## T_ASYNC T_FUNCTION is_reference ident
## LR(1) items:
unticked_function_declaration -> T_ASYNC T_FUNCTION is_reference ident . type_params_opt TOPAR parameter_list TCPAR option(return_type) function_body [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_ENDWHILE T_ENDSWITCH T_ENDIF T_ENDFOREACH T_ENDFOR T_ENDDECLARE T_EMPTY T_ELSEIF T_ELSE T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DEFAULT T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_CASE T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
## Transitions:
-- On TSMALLER shift to state 395
-- On type_params_opt shift to state 687
## Reductions:
-- On TOPAR
--   reduce production type_params_opt ->

State 687:
## Known stack suffix:
## T_ASYNC T_FUNCTION is_reference ident type_params_opt
## LR(1) items:
unticked_function_declaration -> T_ASYNC T_FUNCTION is_reference ident type_params_opt . TOPAR parameter_list TCPAR option(return_type) function_body [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_ENDWHILE T_ENDSWITCH T_ENDIF T_ENDFOREACH T_ENDFOR T_ENDDECLARE T_EMPTY T_ELSEIF T_ELSE T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DEFAULT T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_CASE T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
## Transitions:
-- On TOPAR shift to state 688
## Reductions:

State 688:
## Known stack suffix:
## T_ASYNC T_FUNCTION is_reference ident type_params_opt TOPAR
## LR(1) items:
unticked_function_declaration -> T_ASYNC T_FUNCTION is_reference ident type_params_opt TOPAR . parameter_list TCPAR option(return_type) function_body [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_ENDWHILE T_ENDSWITCH T_ENDIF T_ENDFOREACH T_ENDFOR T_ENDDECLARE T_EMPTY T_ELSEIF T_ELSE T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DEFAULT T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_CASE T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
## Transitions:
-- On T_SL shift to state 16
-- On parameter_list shift to state 689
-- On parameter shift to state 122
-- On option(attributes) shift to state 125
-- On attributes shift to state 181
## Reductions:
-- On T_VARIABLE T_TYPE T_SUPER T_SELF T_PUBLIC T_PROTECTED T_PRIVATE T_PARENT T_NAMESPACE T_METAVAR T_INSTANCEOF T_IDENT T_ENUM T_ELLIPSIS T_ARRAY TQUESTION TOPAR TANTISLASH TAND
--   reduce production option(attributes) ->
-- On TCPAR
--   reduce production parameter_list ->

State 689:
## Known stack suffix:
## T_ASYNC T_FUNCTION is_reference ident type_params_opt TOPAR parameter_list
## LR(1) items:
unticked_function_declaration -> T_ASYNC T_FUNCTION is_reference ident type_params_opt TOPAR parameter_list . TCPAR option(return_type) function_body [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_ENDWHILE T_ENDSWITCH T_ENDIF T_ENDFOREACH T_ENDFOR T_ENDDECLARE T_EMPTY T_ELSEIF T_ELSE T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DEFAULT T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_CASE T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
## Transitions:
-- On TCPAR shift to state 690
## Reductions:

State 690:
## Known stack suffix:
## T_ASYNC T_FUNCTION is_reference ident type_params_opt TOPAR parameter_list TCPAR
## LR(1) items:
unticked_function_declaration -> T_ASYNC T_FUNCTION is_reference ident type_params_opt TOPAR parameter_list TCPAR . option(return_type) function_body [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_ENDWHILE T_ENDSWITCH T_ENDIF T_ENDFOREACH T_ENDFOR T_ENDDECLARE T_EMPTY T_ELSEIF T_ELSE T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DEFAULT T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_CASE T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
## Transitions:
-- On TCOLON shift to state 76
-- On return_type shift to state 119
-- On option(return_type) shift to state 691
## Reductions:
-- On TSEMICOLON TOBRACE
--   reduce production option(return_type) ->

State 691:
## Known stack suffix:
## T_ASYNC T_FUNCTION is_reference ident type_params_opt TOPAR parameter_list TCPAR option(return_type)
## LR(1) items:
unticked_function_declaration -> T_ASYNC T_FUNCTION is_reference ident type_params_opt TOPAR parameter_list TCPAR option(return_type) . function_body [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_ENDWHILE T_ENDSWITCH T_ENDIF T_ENDFOREACH T_ENDFOR T_ENDDECLARE T_EMPTY T_ELSEIF T_ELSE T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DEFAULT T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_CASE T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
## Transitions:
-- On TSEMICOLON shift to state 551
-- On TOBRACE shift to state 552
-- On function_body shift to state 692
## Reductions:

State 692:
## Known stack suffix:
## T_ASYNC T_FUNCTION is_reference ident type_params_opt TOPAR parameter_list TCPAR option(return_type) function_body
## LR(1) items:
unticked_function_declaration -> T_ASYNC T_FUNCTION is_reference ident type_params_opt TOPAR parameter_list TCPAR option(return_type) function_body . [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_ENDWHILE T_ENDSWITCH T_ENDIF T_ENDFOREACH T_ENDFOR T_ENDDECLARE T_EMPTY T_ELSEIF T_ELSE T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DEFAULT T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_CASE T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production unticked_function_declaration -> T_ASYNC T_FUNCTION is_reference ident type_params_opt TOPAR parameter_list TCPAR option(return_type) function_body

State 693:
## Known stack suffix:
## T_ASYNC TOBRACE
## LR(1) items:
lambda_expr -> T_ASYNC TOBRACE . list(inner_statement) TCBRACE [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
## Transitions:
-- On T__AT shift to state 1
-- On T_YIELD shift to state 2
-- On T_WHILE shift to state 158
-- On T_VARIABLE shift to state 3
-- On T_USE shift to state 190
-- On T_UNSET_CAST shift to state 5
-- On T_UNSET shift to state 197
-- On T_TYPE shift to state 6
-- On T_TRY shift to state 391
-- On T_TRAIT_C shift to state 7
-- On T_TRAIT shift to state 393
-- On T_THROW shift to state 520
-- On T_SWITCH shift to state 525
-- On T_SUPER shift to state 8
-- On T_STRING_CAST shift to state 9
-- On T_STATIC shift to state 536
-- On T_START_HEREDOC shift to state 25
-- On T_SL shift to state 16
-- On T_SELF shift to state 40
-- On T_RETURN shift to state 553
-- On T_REQUIRE_ONCE shift to state 41
-- On T_REQUIRE shift to state 42
-- On T_PRINT shift to state 43
-- On T_PARENT shift to state 44
-- On T_OPEN_TAG_WITH_ECHO shift to state 558
-- On T_OBJECT_CAST shift to state 45
-- On T_NEW shift to state 46
-- On T_NAMESPACE_C shift to state 49
-- On T_NAMESPACE shift to state 50
-- On T_METHOD_C shift to state 58
-- On T_METAVAR shift to state 17
-- On T_LNUMBER shift to state 59
-- On T_LIST shift to state 69
-- On T_LINE shift to state 60
-- On T_LAMBDA_OPAR shift to state 73
-- On T_ISSET shift to state 133
-- On T_INT_CAST shift to state 135
-- On T_INTERFACE shift to state 563
-- On T_INSTANCEOF shift to state 52
-- On T_INLINE_HTML shift to state 576
-- On T_INCLUDE_ONCE shift to state 136
-- On T_INCLUDE shift to state 137
-- On T_INC shift to state 138
-- On T_IF shift to state 577
-- On T_IDENT shift to state 18
-- On T_GLOBAL shift to state 587
-- On T_FUNC_C shift to state 61
-- On T_FUNCTION shift to state 657
-- On T_FOREACH shift to state 600
-- On T_FOR shift to state 624
-- On T_FINAL shift to state 666
-- On T_FILE shift to state 62
-- On T_EXIT shift to state 160
-- On T_EVAL shift to state 162
-- On T_ENUM shift to state 668
-- On T_EMPTY shift to state 164
-- On T_ELLIPSIS shift to state 635
-- On T_ECHO shift to state 636
-- On T_DOUBLE_CAST shift to state 168
-- On T_DO shift to state 644
-- On T_DNUMBER shift to state 63
-- On T_DIR shift to state 64
-- On T_DECLARE shift to state 645
-- On T_DEC shift to state 169
-- On T_CONTINUE shift to state 649
-- On T_CONSTANT_ENCAPSED_STRING shift to state 65
-- On T_CLONE shift to state 170
-- On T_CLASS_C shift to state 66
-- On T_CLASS shift to state 682
-- On T_BREAK shift to state 652
-- On T_BOOL_CAST shift to state 171
-- On T_AWAIT shift to state 172
-- On T_ASYNC shift to state 683
-- On T_ARRAY_CAST shift to state 200
-- On T_ARRAY shift to state 201
-- On T_ABSTRACT shift to state 694
-- On TTILDE shift to state 204
-- On TSEMICOLON shift to state 655
-- On TPLUS shift to state 205
-- On TOPAR shift to state 206
-- On TOBRACE shift to state 656
-- On TOBRA shift to state 209
-- On TMINUS shift to state 210
-- On TGUIL shift to state 211
-- On TDOLLARDOLLAR shift to state 213
-- On TDOLLAR shift to state 214
-- On TBANG shift to state 216
-- On TBACKQUOTE shift to state 217
-- On TANTISLASH shift to state 85
-- On LDots shift to state 222
-- On unticked_function_declaration shift to state 696
-- On unticked_class_declaration shift to state 697
-- On statement shift to state 698
-- On simple_expr shift to state 223
-- On qualified_name shift to state 94
-- On qualified_class_name shift to state 225
-- On primary_expr shift to state 226
-- On new_expr shift to state 227
-- On namespace_name shift to state 102
-- On member_expr shift to state 228
-- On list(inner_statement) shift to state 699
-- On lambda_expr shift to state 231
-- On inner_statement shift to state 701
-- On ident_in_name shift to state 57
-- On ident shift to state 56
-- On function_declaration shift to state 703
-- On expr shift to state 704
-- On constant shift to state 239
-- On class_entry_type shift to state 706
-- On class_declaration shift to state 716
-- On call_expr shift to state 240
-- On attributes shift to state 717
## Reductions:
-- On TCBRACE
--   reduce production list(inner_statement) ->

State 694:
## Known stack suffix:
## T_ABSTRACT
## LR(1) items:
class_entry_type -> T_ABSTRACT . T_CLASS [ T_TYPE T_SUPER T_METAVAR T_IDENT T_ENUM ]
## Transitions:
-- On T_CLASS shift to state 695
## Reductions:

State 695:
## Known stack suffix:
## T_ABSTRACT T_CLASS
## LR(1) items:
class_entry_type -> T_ABSTRACT T_CLASS . [ T_TYPE T_SUPER T_METAVAR T_IDENT T_ENUM ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production class_entry_type -> T_ABSTRACT T_CLASS

State 696:
## Known stack suffix:
## unticked_function_declaration
## LR(1) items:
function_declaration -> unticked_function_declaration . [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_ENDWHILE T_ENDSWITCH T_ENDIF T_ENDFOREACH T_ENDFOR T_ENDDECLARE T_EMPTY T_ELSEIF T_ELSE T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DEFAULT T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_CASE T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production function_declaration -> unticked_function_declaration

State 697:
## Known stack suffix:
## unticked_class_declaration
## LR(1) items:
class_declaration -> unticked_class_declaration . [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_ENDWHILE T_ENDSWITCH T_ENDIF T_ENDFOREACH T_ENDFOR T_ENDDECLARE T_EMPTY T_ELSEIF T_ELSE T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DEFAULT T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_CASE T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production class_declaration -> unticked_class_declaration

State 698:
## Known stack suffix:
## statement
## LR(1) items:
inner_statement -> statement . [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_ENDWHILE T_ENDSWITCH T_ENDIF T_ENDFOREACH T_ENDFOR T_ENDDECLARE T_EMPTY T_ELSEIF T_ELSE T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DEFAULT T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CLONE T_CLASS_C T_CLASS T_CASE T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production inner_statement -> statement

State 699:
## Known stack suffix:
## T_ASYNC TOBRACE list(inner_statement)
## LR(1) items:
lambda_expr -> T_ASYNC TOBRACE list(inner_statement) . TCBRACE [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
## Transitions:
-- On TCBRACE shift to state 700
## Reductions:

State 700:
## Known stack suffix:
## T_ASYNC TOBRACE list(inner_statement) TCBRACE
## LR(1) items:
lambda_expr -> T_ASYNC TOBRACE list(inner_statement) TCBRACE . [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production lambda_expr -> T_ASYNC TOBRACE list(inner_statement) TCBRACE

State 701:
## Known stack suffix:
## inner_statement
## LR(1) items:
list(inner_statement) -> inner_statement . list(inner_statement) [ T_ENDWHILE T_ENDSWITCH T_ENDIF T_ENDFOREACH T_ENDFOR T_ENDDECLARE T_ELSEIF T_ELSE T_DEFAULT T_CASE TCBRACE ]
## Transitions:
-- On T__AT shift to state 1
-- On T_YIELD shift to state 2
-- On T_WHILE shift to state 158
-- On T_VARIABLE shift to state 3
-- On T_USE shift to state 190
-- On T_UNSET_CAST shift to state 5
-- On T_UNSET shift to state 197
-- On T_TYPE shift to state 6
-- On T_TRY shift to state 391
-- On T_TRAIT_C shift to state 7
-- On T_TRAIT shift to state 393
-- On T_THROW shift to state 520
-- On T_SWITCH shift to state 525
-- On T_SUPER shift to state 8
-- On T_STRING_CAST shift to state 9
-- On T_STATIC shift to state 536
-- On T_START_HEREDOC shift to state 25
-- On T_SL shift to state 16
-- On T_SELF shift to state 40
-- On T_RETURN shift to state 553
-- On T_REQUIRE_ONCE shift to state 41
-- On T_REQUIRE shift to state 42
-- On T_PRINT shift to state 43
-- On T_PARENT shift to state 44
-- On T_OPEN_TAG_WITH_ECHO shift to state 558
-- On T_OBJECT_CAST shift to state 45
-- On T_NEW shift to state 46
-- On T_NAMESPACE_C shift to state 49
-- On T_NAMESPACE shift to state 50
-- On T_METHOD_C shift to state 58
-- On T_METAVAR shift to state 17
-- On T_LNUMBER shift to state 59
-- On T_LIST shift to state 69
-- On T_LINE shift to state 60
-- On T_LAMBDA_OPAR shift to state 73
-- On T_ISSET shift to state 133
-- On T_INT_CAST shift to state 135
-- On T_INTERFACE shift to state 563
-- On T_INSTANCEOF shift to state 52
-- On T_INLINE_HTML shift to state 576
-- On T_INCLUDE_ONCE shift to state 136
-- On T_INCLUDE shift to state 137
-- On T_INC shift to state 138
-- On T_IF shift to state 577
-- On T_IDENT shift to state 18
-- On T_GLOBAL shift to state 587
-- On T_FUNC_C shift to state 61
-- On T_FUNCTION shift to state 657
-- On T_FOREACH shift to state 600
-- On T_FOR shift to state 624
-- On T_FINAL shift to state 666
-- On T_FILE shift to state 62
-- On T_EXIT shift to state 160
-- On T_EVAL shift to state 162
-- On T_ENUM shift to state 668
-- On T_EMPTY shift to state 164
-- On T_ELLIPSIS shift to state 635
-- On T_ECHO shift to state 636
-- On T_DOUBLE_CAST shift to state 168
-- On T_DO shift to state 644
-- On T_DNUMBER shift to state 63
-- On T_DIR shift to state 64
-- On T_DECLARE shift to state 645
-- On T_DEC shift to state 169
-- On T_CONTINUE shift to state 649
-- On T_CONSTANT_ENCAPSED_STRING shift to state 65
-- On T_CLONE shift to state 170
-- On T_CLASS_C shift to state 66
-- On T_CLASS shift to state 682
-- On T_BREAK shift to state 652
-- On T_BOOL_CAST shift to state 171
-- On T_AWAIT shift to state 172
-- On T_ASYNC shift to state 683
-- On T_ARRAY_CAST shift to state 200
-- On T_ARRAY shift to state 201
-- On T_ABSTRACT shift to state 694
-- On TTILDE shift to state 204
-- On TSEMICOLON shift to state 655
-- On TPLUS shift to state 205
-- On TOPAR shift to state 206
-- On TOBRACE shift to state 656
-- On TOBRA shift to state 209
-- On TMINUS shift to state 210
-- On TGUIL shift to state 211
-- On TDOLLARDOLLAR shift to state 213
-- On TDOLLAR shift to state 214
-- On TBANG shift to state 216
-- On TBACKQUOTE shift to state 217
-- On TANTISLASH shift to state 85
-- On LDots shift to state 222
-- On unticked_function_declaration shift to state 696
-- On unticked_class_declaration shift to state 697
-- On statement shift to state 698
-- On simple_expr shift to state 223
-- On qualified_name shift to state 94
-- On qualified_class_name shift to state 225
-- On primary_expr shift to state 226
-- On new_expr shift to state 227
-- On namespace_name shift to state 102
-- On member_expr shift to state 228
-- On list(inner_statement) shift to state 702
-- On lambda_expr shift to state 231
-- On inner_statement shift to state 701
-- On ident_in_name shift to state 57
-- On ident shift to state 56
-- On function_declaration shift to state 703
-- On expr shift to state 704
-- On constant shift to state 239
-- On class_entry_type shift to state 706
-- On class_declaration shift to state 716
-- On call_expr shift to state 240
-- On attributes shift to state 717
## Reductions:
-- On T_ENDWHILE T_ENDSWITCH T_ENDIF T_ENDFOREACH T_ENDFOR T_ENDDECLARE T_ELSEIF T_ELSE T_DEFAULT T_CASE TCBRACE
--   reduce production list(inner_statement) ->

State 702:
## Known stack suffix:
## inner_statement list(inner_statement)
## LR(1) items:
list(inner_statement) -> inner_statement list(inner_statement) . [ T_ENDWHILE T_ENDSWITCH T_ENDIF T_ENDFOREACH T_ENDFOR T_ENDDECLARE T_ELSEIF T_ELSE T_DEFAULT T_CASE TCBRACE ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production list(inner_statement) -> inner_statement list(inner_statement)

State 703:
## Known stack suffix:
## function_declaration
## LR(1) items:
inner_statement -> function_declaration . [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_ENDWHILE T_ENDSWITCH T_ENDIF T_ENDFOREACH T_ENDFOR T_ENDDECLARE T_EMPTY T_ELSEIF T_ELSE T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DEFAULT T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CLONE T_CLASS_C T_CLASS T_CASE T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production inner_statement -> function_declaration

State 704:
## Known stack suffix:
## expr
## LR(1) items:
expr -> expr . T_INC [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TAND ]
expr -> expr . T_DEC [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TAND ]
expr -> expr . T_BOOLEAN_OR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TAND ]
expr -> expr . T_BOOLEAN_AND expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TAND ]
expr -> expr . T_LOGICAL_OR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TAND ]
expr -> expr . T_LOGICAL_AND expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TAND ]
expr -> expr . T_LOGICAL_XOR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TAND ]
expr -> expr . TPLUS expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TAND ]
expr -> expr . TMINUS expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TAND ]
expr -> expr . TMUL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TAND ]
expr -> expr . TDIV expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TAND ]
expr -> expr . TMOD expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TAND ]
expr -> expr . TPOW expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TAND ]
expr -> expr . TAND expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TAND ]
expr -> expr . TOR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TAND ]
expr -> expr . TXOR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TAND ]
expr -> expr . T_SL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TAND ]
expr -> expr . T_SR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TAND ]
expr -> expr . TDOT expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TAND ]
expr -> expr . T_IS_IDENTICAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TAND ]
expr -> expr . T_IS_NOT_IDENTICAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TAND ]
expr -> expr . T_IS_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TAND ]
expr -> expr . T_IS_NOT_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TAND ]
expr -> expr . TSMALLER expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TAND ]
expr -> expr . T_IS_SMALLER_OR_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TAND ]
expr -> expr . TGREATER expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TAND ]
expr -> expr . T_IS_GREATER_OR_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TAND ]
expr -> expr . T_ROCKET expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TAND ]
expr -> expr . TQUESTION expr TCOLON expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TAND ]
expr -> expr . TQUESTION TCOLON expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TAND ]
expr -> expr . TQUESTION TQUESTION expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TAND ]
expr -> expr . T_INSTANCEOF expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TAND ]
statement -> expr . TSEMICOLON [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_ENDWHILE T_ENDSWITCH T_ENDIF T_ENDFOREACH T_ENDFOR T_ENDDECLARE T_EMPTY T_ELSEIF T_ELSE T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DEFAULT T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_CASE T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
## Transitions:
-- On T_SR shift to state 233
-- On T_SL shift to state 244
-- On T_ROCKET shift to state 260
-- On T_LOGICAL_XOR shift to state 270
-- On T_LOGICAL_OR shift to state 298
-- On T_LOGICAL_AND shift to state 272
-- On T_IS_SMALLER_OR_EQUAL shift to state 262
-- On T_IS_NOT_IDENTICAL shift to state 274
-- On T_IS_NOT_EQUAL shift to state 276
-- On T_IS_IDENTICAL shift to state 278
-- On T_IS_GREATER_OR_EQUAL shift to state 264
-- On T_IS_EQUAL shift to state 280
-- On T_INSTANCEOF shift to state 235
-- On T_INC shift to state 237
-- On T_DEC shift to state 238
-- On T_BOOLEAN_OR shift to state 282
-- On T_BOOLEAN_AND shift to state 284
-- On TXOR shift to state 286
-- On TSMALLER shift to state 266
-- On TSEMICOLON shift to state 705
-- On TQUESTION shift to state 292
-- On TPOW shift to state 246
-- On TPLUS shift to state 248
-- On TOR shift to state 290
-- On TMUL shift to state 250
-- On TMOD shift to state 252
-- On TMINUS shift to state 256
-- On TGREATER shift to state 268
-- On TDOT shift to state 258
-- On TDIV shift to state 254
-- On TAND shift to state 288
## Reductions:

State 705:
## Known stack suffix:
## expr TSEMICOLON
## LR(1) items:
statement -> expr TSEMICOLON . [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_ENDWHILE T_ENDSWITCH T_ENDIF T_ENDFOREACH T_ENDFOR T_ENDDECLARE T_EMPTY T_ELSEIF T_ELSE T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DEFAULT T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_CASE T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production statement -> expr TSEMICOLON

State 706:
## Known stack suffix:
## class_entry_type
## LR(1) items:
unticked_class_declaration -> class_entry_type . ident_class_name type_params_opt extends_from implements_list TOBRACE list(member_declaration) TCBRACE [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_ENDWHILE T_ENDSWITCH T_ENDIF T_ENDFOREACH T_ENDFOR T_ENDDECLARE T_EMPTY T_ELSEIF T_ELSE T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DEFAULT T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_CASE T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
## Transitions:
-- On T_TYPE shift to state 6
-- On T_SUPER shift to state 8
-- On T_METAVAR shift to state 17
-- On T_IDENT shift to state 18
-- On T_ENUM shift to state 19
-- On ident_class_name shift to state 707
-- On ident shift to state 575
## Reductions:

State 707:
## Known stack suffix:
## class_entry_type ident_class_name
## LR(1) items:
unticked_class_declaration -> class_entry_type ident_class_name . type_params_opt extends_from implements_list TOBRACE list(member_declaration) TCBRACE [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_ENDWHILE T_ENDSWITCH T_ENDIF T_ENDFOREACH T_ENDFOR T_ENDDECLARE T_EMPTY T_ELSEIF T_ELSE T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DEFAULT T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_CASE T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
## Transitions:
-- On TSMALLER shift to state 395
-- On type_params_opt shift to state 708
## Reductions:
-- On T_IMPLEMENTS T_EXTENDS TOBRACE
--   reduce production type_params_opt ->

State 708:
## Known stack suffix:
## class_entry_type ident_class_name type_params_opt
## LR(1) items:
unticked_class_declaration -> class_entry_type ident_class_name type_params_opt . extends_from implements_list TOBRACE list(member_declaration) TCBRACE [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_ENDWHILE T_ENDSWITCH T_ENDIF T_ENDFOREACH T_ENDFOR T_ENDDECLARE T_EMPTY T_ELSEIF T_ELSE T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DEFAULT T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_CASE T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
## Transitions:
-- On T_EXTENDS shift to state 709
-- On extends_from shift to state 711
## Reductions:
-- On T_IMPLEMENTS TOBRACE
--   reduce production extends_from ->

State 709:
## Known stack suffix:
## T_EXTENDS
## LR(1) items:
extends_from -> T_EXTENDS . class_name_no_array [ T_IMPLEMENTS TOBRACE ]
## Transitions:
-- On T_TYPE shift to state 6
-- On T_SUPER shift to state 8
-- On T_NAMESPACE shift to state 50
-- On T_METAVAR shift to state 17
-- On T_INSTANCEOF shift to state 52
-- On T_IDENT shift to state 18
-- On T_ENUM shift to state 19
-- On TANTISLASH shift to state 85
-- On qualified_name shift to state 94
-- On qualified_class_name shift to state 415
-- On namespace_name shift to state 102
-- On ident_in_name shift to state 57
-- On ident shift to state 56
-- On class_name_no_array shift to state 710
## Reductions:

State 710:
## Known stack suffix:
## T_EXTENDS class_name_no_array
## LR(1) items:
extends_from -> T_EXTENDS class_name_no_array . [ T_IMPLEMENTS TOBRACE ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production extends_from -> T_EXTENDS class_name_no_array

State 711:
## Known stack suffix:
## class_entry_type ident_class_name type_params_opt extends_from
## LR(1) items:
unticked_class_declaration -> class_entry_type ident_class_name type_params_opt extends_from . implements_list TOBRACE list(member_declaration) TCBRACE [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_ENDWHILE T_ENDSWITCH T_ENDIF T_ENDFOREACH T_ENDFOR T_ENDDECLARE T_EMPTY T_ELSEIF T_ELSE T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DEFAULT T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_CASE T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
## Transitions:
-- On T_IMPLEMENTS shift to state 414
-- On implements_list shift to state 712
## Reductions:
-- On TOBRACE
--   reduce production implements_list ->

State 712:
## Known stack suffix:
## class_entry_type ident_class_name type_params_opt extends_from implements_list
## LR(1) items:
unticked_class_declaration -> class_entry_type ident_class_name type_params_opt extends_from implements_list . TOBRACE list(member_declaration) TCBRACE [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_ENDWHILE T_ENDSWITCH T_ENDIF T_ENDFOREACH T_ENDFOR T_ENDDECLARE T_EMPTY T_ELSEIF T_ELSE T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DEFAULT T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_CASE T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
## Transitions:
-- On TOBRACE shift to state 713
## Reductions:

State 713:
## Known stack suffix:
## class_entry_type ident_class_name type_params_opt extends_from implements_list TOBRACE
## LR(1) items:
unticked_class_declaration -> class_entry_type ident_class_name type_params_opt extends_from implements_list TOBRACE . list(member_declaration) TCBRACE [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_ENDWHILE T_ENDSWITCH T_ENDIF T_ENDFOREACH T_ENDFOR T_ENDDECLARE T_EMPTY T_ELSEIF T_ELSE T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DEFAULT T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_CASE T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
## Transitions:
-- On T_VAR shift to state 424
-- On T_USE shift to state 425
-- On T_STATIC shift to state 434
-- On T_SL shift to state 16
-- On T_PUBLIC shift to state 126
-- On T_PROTECTED shift to state 127
-- On T_PRIVATE shift to state 128
-- On T_FINAL shift to state 435
-- On T_ELLIPSIS shift to state 459
-- On T_ASYNC shift to state 436
-- On T_ABSTRACT shift to state 437
-- On visibility_modifier shift to state 460
-- On variable_modifiers shift to state 461
-- On option(visibility_modifier) shift to state 478
-- On nonempty_list(member_modifier) shift to state 497
-- On method_declaration shift to state 498
-- On member_modifier shift to state 499
-- On member_declaration shift to state 500
-- On list(member_modifier) shift to state 501
-- On list(member_declaration) shift to state 714
-- On class_modifier shift to state 444
-- On attributes shift to state 572
## Reductions:
-- On TCBRACE
--   reduce production list(member_declaration) ->
-- On T_FUNCTION
--   reduce production list(member_modifier) ->
-- On T_CONST
--   reduce production option(visibility_modifier) ->

State 714:
## Known stack suffix:
## class_entry_type ident_class_name type_params_opt extends_from implements_list TOBRACE list(member_declaration)
## LR(1) items:
unticked_class_declaration -> class_entry_type ident_class_name type_params_opt extends_from implements_list TOBRACE list(member_declaration) . TCBRACE [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_ENDWHILE T_ENDSWITCH T_ENDIF T_ENDFOREACH T_ENDFOR T_ENDDECLARE T_EMPTY T_ELSEIF T_ELSE T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DEFAULT T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_CASE T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
## Transitions:
-- On TCBRACE shift to state 715
## Reductions:

State 715:
## Known stack suffix:
## class_entry_type ident_class_name type_params_opt extends_from implements_list TOBRACE list(member_declaration) TCBRACE
## LR(1) items:
unticked_class_declaration -> class_entry_type ident_class_name type_params_opt extends_from implements_list TOBRACE list(member_declaration) TCBRACE . [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_ENDWHILE T_ENDSWITCH T_ENDIF T_ENDFOREACH T_ENDFOR T_ENDDECLARE T_EMPTY T_ELSEIF T_ELSE T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DEFAULT T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_CASE T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production unticked_class_declaration -> class_entry_type ident_class_name type_params_opt extends_from implements_list TOBRACE list(member_declaration) TCBRACE

State 716:
## Known stack suffix:
## class_declaration
## LR(1) items:
inner_statement -> class_declaration . [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_ENDWHILE T_ENDSWITCH T_ENDIF T_ENDFOREACH T_ENDFOR T_ENDDECLARE T_EMPTY T_ELSEIF T_ELSE T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DEFAULT T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CLONE T_CLASS_C T_CLASS T_CASE T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production inner_statement -> class_declaration

State 717:
## Known stack suffix:
## attributes
## LR(1) items:
class_declaration -> attributes . unticked_class_declaration [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_ENDWHILE T_ENDSWITCH T_ENDIF T_ENDFOREACH T_ENDFOR T_ENDDECLARE T_EMPTY T_ELSEIF T_ELSE T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DEFAULT T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_CASE T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
function_declaration -> attributes . unticked_function_declaration [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_ENDWHILE T_ENDSWITCH T_ENDIF T_ENDFOREACH T_ENDFOR T_ENDDECLARE T_EMPTY T_ELSEIF T_ELSE T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DEFAULT T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_CASE T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
## Transitions:
-- On T_TRAIT shift to state 393
-- On T_STATIC shift to state 718
-- On T_INTERFACE shift to state 563
-- On T_FUNCTION shift to state 721
-- On T_FINAL shift to state 666
-- On T_ENUM shift to state 723
-- On T_CLASS shift to state 682
-- On T_ASYNC shift to state 724
-- On T_ABSTRACT shift to state 694
-- On unticked_function_declaration shift to state 727
-- On unticked_class_declaration shift to state 728
-- On class_entry_type shift to state 706
## Reductions:

State 718:
## Known stack suffix:
## T_STATIC
## LR(1) items:
unticked_function_declaration -> T_STATIC . T_FUNCTION is_reference ident type_params_opt TOPAR parameter_list TCPAR option(return_type) function_body [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_ENDWHILE T_ENDSWITCH T_ENDIF T_ENDFOREACH T_ENDFOR T_ENDDECLARE T_EMPTY T_ELSEIF T_ELSE T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DEFAULT T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_CASE T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
## Transitions:
-- On T_FUNCTION shift to state 719
## Reductions:

State 719:
## Known stack suffix:
## T_STATIC T_FUNCTION
## LR(1) items:
unticked_function_declaration -> T_STATIC T_FUNCTION . is_reference ident type_params_opt TOPAR parameter_list TCPAR option(return_type) function_body [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_ENDWHILE T_ENDSWITCH T_ENDIF T_ENDFOREACH T_ENDFOR T_ENDDECLARE T_EMPTY T_ELSEIF T_ELSE T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DEFAULT T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_CASE T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
## Transitions:
-- On TAND shift to state 12
-- On option(TAND) shift to state 13
-- On is_reference shift to state 720
## Reductions:
-- On T_TYPE T_SUPER T_METAVAR T_IDENT T_ENUM
--   reduce production option(TAND) ->

State 720:
## Known stack suffix:
## T_STATIC T_FUNCTION is_reference
## LR(1) items:
unticked_function_declaration -> T_STATIC T_FUNCTION is_reference . ident type_params_opt TOPAR parameter_list TCPAR option(return_type) function_body [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_ENDWHILE T_ENDSWITCH T_ENDIF T_ENDFOREACH T_ENDFOR T_ENDDECLARE T_EMPTY T_ELSEIF T_ELSE T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DEFAULT T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_CASE T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
## Transitions:
-- On T_TYPE shift to state 6
-- On T_SUPER shift to state 8
-- On T_METAVAR shift to state 17
-- On T_IDENT shift to state 18
-- On T_ENUM shift to state 19
-- On ident shift to state 545
## Reductions:

State 721:
## Known stack suffix:
## T_FUNCTION
## LR(1) items:
unticked_function_declaration -> T_FUNCTION . is_reference ident type_params_opt TOPAR parameter_list TCPAR option(return_type) function_body [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_ENDWHILE T_ENDSWITCH T_ENDIF T_ENDFOREACH T_ENDFOR T_ENDDECLARE T_EMPTY T_ELSEIF T_ELSE T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DEFAULT T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_CASE T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
## Transitions:
-- On TAND shift to state 12
-- On option(TAND) shift to state 13
-- On is_reference shift to state 722
## Reductions:
-- On T_TYPE T_SUPER T_METAVAR T_IDENT T_ENUM
--   reduce production option(TAND) ->

State 722:
## Known stack suffix:
## T_FUNCTION is_reference
## LR(1) items:
unticked_function_declaration -> T_FUNCTION is_reference . ident type_params_opt TOPAR parameter_list TCPAR option(return_type) function_body [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_ENDWHILE T_ENDSWITCH T_ENDIF T_ENDFOREACH T_ENDFOR T_ENDDECLARE T_EMPTY T_ELSEIF T_ELSE T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DEFAULT T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_CASE T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
## Transitions:
-- On T_TYPE shift to state 6
-- On T_SUPER shift to state 8
-- On T_METAVAR shift to state 17
-- On T_IDENT shift to state 18
-- On T_ENUM shift to state 19
-- On ident shift to state 659
## Reductions:

State 723:
## Known stack suffix:
## T_ENUM
## LR(1) items:
unticked_class_declaration -> T_ENUM . ident_class_name TCOLON type_php type_constr_opt TOBRACE list(enum_statement) TCBRACE [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_ENDWHILE T_ENDSWITCH T_ENDIF T_ENDFOREACH T_ENDFOR T_ENDDECLARE T_EMPTY T_ELSEIF T_ELSE T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DEFAULT T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_CASE T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
## Transitions:
-- On T_TYPE shift to state 6
-- On T_SUPER shift to state 8
-- On T_METAVAR shift to state 17
-- On T_IDENT shift to state 18
-- On T_ENUM shift to state 19
-- On ident_class_name shift to state 669
-- On ident shift to state 575
## Reductions:

State 724:
## Known stack suffix:
## T_ASYNC
## LR(1) items:
unticked_function_declaration -> T_ASYNC . T_FUNCTION is_reference ident type_params_opt TOPAR parameter_list TCPAR option(return_type) function_body [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_ENDWHILE T_ENDSWITCH T_ENDIF T_ENDFOREACH T_ENDFOR T_ENDDECLARE T_EMPTY T_ELSEIF T_ELSE T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DEFAULT T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_CASE T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
## Transitions:
-- On T_FUNCTION shift to state 725
## Reductions:

State 725:
## Known stack suffix:
## T_ASYNC T_FUNCTION
## LR(1) items:
unticked_function_declaration -> T_ASYNC T_FUNCTION . is_reference ident type_params_opt TOPAR parameter_list TCPAR option(return_type) function_body [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_ENDWHILE T_ENDSWITCH T_ENDIF T_ENDFOREACH T_ENDFOR T_ENDDECLARE T_EMPTY T_ELSEIF T_ELSE T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DEFAULT T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_CASE T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
## Transitions:
-- On TAND shift to state 12
-- On option(TAND) shift to state 13
-- On is_reference shift to state 726
## Reductions:
-- On T_TYPE T_SUPER T_METAVAR T_IDENT T_ENUM
--   reduce production option(TAND) ->

State 726:
## Known stack suffix:
## T_ASYNC T_FUNCTION is_reference
## LR(1) items:
unticked_function_declaration -> T_ASYNC T_FUNCTION is_reference . ident type_params_opt TOPAR parameter_list TCPAR option(return_type) function_body [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_ENDWHILE T_ENDSWITCH T_ENDIF T_ENDFOREACH T_ENDFOR T_ENDDECLARE T_EMPTY T_ELSEIF T_ELSE T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DEFAULT T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_CASE T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
## Transitions:
-- On T_TYPE shift to state 6
-- On T_SUPER shift to state 8
-- On T_METAVAR shift to state 17
-- On T_IDENT shift to state 18
-- On T_ENUM shift to state 19
-- On ident shift to state 686
## Reductions:

State 727:
## Known stack suffix:
## attributes unticked_function_declaration
## LR(1) items:
function_declaration -> attributes unticked_function_declaration . [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_ENDWHILE T_ENDSWITCH T_ENDIF T_ENDFOREACH T_ENDFOR T_ENDDECLARE T_EMPTY T_ELSEIF T_ELSE T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DEFAULT T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_CASE T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production function_declaration -> attributes unticked_function_declaration

State 728:
## Known stack suffix:
## attributes unticked_class_declaration
## LR(1) items:
class_declaration -> attributes unticked_class_declaration . [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_ENDWHILE T_ENDSWITCH T_ENDIF T_ENDFOREACH T_ENDFOR T_ENDDECLARE T_EMPTY T_ELSEIF T_ELSE T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DEFAULT T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_CASE T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production class_declaration -> attributes unticked_class_declaration

State 729:
## Known stack suffix:
## TOBRACE list(inner_statement)
## LR(1) items:
statement -> TOBRACE list(inner_statement) . TCBRACE [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_ENDWHILE T_ENDSWITCH T_ENDIF T_ENDFOREACH T_ENDFOR T_ENDDECLARE T_EMPTY T_ELSEIF T_ELSE T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DEFAULT T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_CASE T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
## Transitions:
-- On TCBRACE shift to state 730
## Reductions:

State 730:
## Known stack suffix:
## TOBRACE list(inner_statement) TCBRACE
## LR(1) items:
statement -> TOBRACE list(inner_statement) TCBRACE . [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_ENDWHILE T_ENDSWITCH T_ENDIF T_ENDFOREACH T_ENDFOR T_ENDDECLARE T_EMPTY T_ELSEIF T_ELSE T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DEFAULT T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_CASE T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production statement -> TOBRACE list(inner_statement) TCBRACE

State 731:
## Known stack suffix:
## TCOLON
## LR(1) items:
declare_statement -> TCOLON . list(inner_statement) T_ENDDECLARE TSEMICOLON [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_ENDWHILE T_ENDSWITCH T_ENDIF T_ENDFOREACH T_ENDFOR T_ENDDECLARE T_EMPTY T_ELSEIF T_ELSE T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DEFAULT T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_CASE T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
## Transitions:
-- On T__AT shift to state 1
-- On T_YIELD shift to state 2
-- On T_WHILE shift to state 158
-- On T_VARIABLE shift to state 3
-- On T_USE shift to state 190
-- On T_UNSET_CAST shift to state 5
-- On T_UNSET shift to state 197
-- On T_TYPE shift to state 6
-- On T_TRY shift to state 391
-- On T_TRAIT_C shift to state 7
-- On T_TRAIT shift to state 393
-- On T_THROW shift to state 520
-- On T_SWITCH shift to state 525
-- On T_SUPER shift to state 8
-- On T_STRING_CAST shift to state 9
-- On T_STATIC shift to state 536
-- On T_START_HEREDOC shift to state 25
-- On T_SL shift to state 16
-- On T_SELF shift to state 40
-- On T_RETURN shift to state 553
-- On T_REQUIRE_ONCE shift to state 41
-- On T_REQUIRE shift to state 42
-- On T_PRINT shift to state 43
-- On T_PARENT shift to state 44
-- On T_OPEN_TAG_WITH_ECHO shift to state 558
-- On T_OBJECT_CAST shift to state 45
-- On T_NEW shift to state 46
-- On T_NAMESPACE_C shift to state 49
-- On T_NAMESPACE shift to state 50
-- On T_METHOD_C shift to state 58
-- On T_METAVAR shift to state 17
-- On T_LNUMBER shift to state 59
-- On T_LIST shift to state 69
-- On T_LINE shift to state 60
-- On T_LAMBDA_OPAR shift to state 73
-- On T_ISSET shift to state 133
-- On T_INT_CAST shift to state 135
-- On T_INTERFACE shift to state 563
-- On T_INSTANCEOF shift to state 52
-- On T_INLINE_HTML shift to state 576
-- On T_INCLUDE_ONCE shift to state 136
-- On T_INCLUDE shift to state 137
-- On T_INC shift to state 138
-- On T_IF shift to state 577
-- On T_IDENT shift to state 18
-- On T_GLOBAL shift to state 587
-- On T_FUNC_C shift to state 61
-- On T_FUNCTION shift to state 657
-- On T_FOREACH shift to state 600
-- On T_FOR shift to state 624
-- On T_FINAL shift to state 666
-- On T_FILE shift to state 62
-- On T_EXIT shift to state 160
-- On T_EVAL shift to state 162
-- On T_ENUM shift to state 668
-- On T_EMPTY shift to state 164
-- On T_ELLIPSIS shift to state 635
-- On T_ECHO shift to state 636
-- On T_DOUBLE_CAST shift to state 168
-- On T_DO shift to state 644
-- On T_DNUMBER shift to state 63
-- On T_DIR shift to state 64
-- On T_DECLARE shift to state 645
-- On T_DEC shift to state 169
-- On T_CONTINUE shift to state 649
-- On T_CONSTANT_ENCAPSED_STRING shift to state 65
-- On T_CLONE shift to state 170
-- On T_CLASS_C shift to state 66
-- On T_CLASS shift to state 682
-- On T_BREAK shift to state 652
-- On T_BOOL_CAST shift to state 171
-- On T_AWAIT shift to state 172
-- On T_ASYNC shift to state 683
-- On T_ARRAY_CAST shift to state 200
-- On T_ARRAY shift to state 201
-- On T_ABSTRACT shift to state 694
-- On TTILDE shift to state 204
-- On TSEMICOLON shift to state 655
-- On TPLUS shift to state 205
-- On TOPAR shift to state 206
-- On TOBRACE shift to state 656
-- On TOBRA shift to state 209
-- On TMINUS shift to state 210
-- On TGUIL shift to state 211
-- On TDOLLARDOLLAR shift to state 213
-- On TDOLLAR shift to state 214
-- On TBANG shift to state 216
-- On TBACKQUOTE shift to state 217
-- On TANTISLASH shift to state 85
-- On LDots shift to state 222
-- On unticked_function_declaration shift to state 696
-- On unticked_class_declaration shift to state 697
-- On statement shift to state 698
-- On simple_expr shift to state 223
-- On qualified_name shift to state 94
-- On qualified_class_name shift to state 225
-- On primary_expr shift to state 226
-- On new_expr shift to state 227
-- On namespace_name shift to state 102
-- On member_expr shift to state 228
-- On list(inner_statement) shift to state 732
-- On lambda_expr shift to state 231
-- On inner_statement shift to state 701
-- On ident_in_name shift to state 57
-- On ident shift to state 56
-- On function_declaration shift to state 703
-- On expr shift to state 704
-- On constant shift to state 239
-- On class_entry_type shift to state 706
-- On class_declaration shift to state 716
-- On call_expr shift to state 240
-- On attributes shift to state 717
## Reductions:
-- On T_ENDDECLARE
--   reduce production list(inner_statement) ->

State 732:
## Known stack suffix:
## TCOLON list(inner_statement)
## LR(1) items:
declare_statement -> TCOLON list(inner_statement) . T_ENDDECLARE TSEMICOLON [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_ENDWHILE T_ENDSWITCH T_ENDIF T_ENDFOREACH T_ENDFOR T_ENDDECLARE T_EMPTY T_ELSEIF T_ELSE T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DEFAULT T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_CASE T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
## Transitions:
-- On T_ENDDECLARE shift to state 733
## Reductions:

State 733:
## Known stack suffix:
## TCOLON list(inner_statement) T_ENDDECLARE
## LR(1) items:
declare_statement -> TCOLON list(inner_statement) T_ENDDECLARE . TSEMICOLON [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_ENDWHILE T_ENDSWITCH T_ENDIF T_ENDFOREACH T_ENDFOR T_ENDDECLARE T_EMPTY T_ELSEIF T_ELSE T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DEFAULT T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_CASE T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
## Transitions:
-- On TSEMICOLON shift to state 734
## Reductions:

State 734:
## Known stack suffix:
## TCOLON list(inner_statement) T_ENDDECLARE TSEMICOLON
## LR(1) items:
declare_statement -> TCOLON list(inner_statement) T_ENDDECLARE TSEMICOLON . [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_ENDWHILE T_ENDSWITCH T_ENDIF T_ENDFOREACH T_ENDFOR T_ENDDECLARE T_EMPTY T_ELSEIF T_ELSE T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DEFAULT T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_CASE T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production declare_statement -> TCOLON list(inner_statement) T_ENDDECLARE TSEMICOLON

State 735:
## Known stack suffix:
## statement
## LR(1) items:
declare_statement -> statement . [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_ENDWHILE T_ENDSWITCH T_ENDIF T_ENDFOREACH T_ENDFOR T_ENDDECLARE T_EMPTY T_ELSEIF T_ELSE T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DEFAULT T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_CASE T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production declare_statement -> statement

State 736:
## Known stack suffix:
## T_DECLARE TOPAR list_sep(declare,TCOMMA) TCPAR declare_statement
## LR(1) items:
statement -> T_DECLARE TOPAR list_sep(declare,TCOMMA) TCPAR declare_statement . [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_ENDWHILE T_ENDSWITCH T_ENDIF T_ENDFOREACH T_ENDFOR T_ENDDECLARE T_EMPTY T_ELSEIF T_ELSE T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DEFAULT T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_CASE T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production statement -> T_DECLARE TOPAR list_sep(declare,TCOMMA) TCPAR declare_statement

State 737:
## Known stack suffix:
## list_sep(declare,TCOMMA) TCOMMA
## LR(1) items:
list_sep(declare,TCOMMA) -> list_sep(declare,TCOMMA) TCOMMA . declare [ TCPAR TCOMMA ]
## Transitions:
-- On T_TYPE shift to state 6
-- On T_SUPER shift to state 8
-- On T_METAVAR shift to state 17
-- On T_IDENT shift to state 18
-- On T_ENUM shift to state 19
-- On ident shift to state 738
-- On declare shift to state 741
## Reductions:

State 738:
## Known stack suffix:
## ident
## LR(1) items:
declare -> ident . TEQ static_scalar [ TCPAR TCOMMA ]
## Transitions:
-- On TEQ shift to state 739
## Reductions:

State 739:
## Known stack suffix:
## ident TEQ
## LR(1) items:
declare -> ident TEQ . static_scalar [ TCPAR TCOMMA ]
## Transitions:
-- On T__AT shift to state 1
-- On T_YIELD shift to state 2
-- On T_VARIABLE shift to state 3
-- On T_UNSET_CAST shift to state 5
-- On T_TYPE shift to state 6
-- On T_TRAIT_C shift to state 7
-- On T_SUPER shift to state 8
-- On T_STRING_CAST shift to state 9
-- On T_STATIC shift to state 10
-- On T_START_HEREDOC shift to state 25
-- On T_SELF shift to state 40
-- On T_REQUIRE_ONCE shift to state 41
-- On T_REQUIRE shift to state 42
-- On T_PRINT shift to state 43
-- On T_PARENT shift to state 44
-- On T_OBJECT_CAST shift to state 45
-- On T_NEW shift to state 46
-- On T_NAMESPACE_C shift to state 49
-- On T_NAMESPACE shift to state 50
-- On T_METHOD_C shift to state 58
-- On T_METAVAR shift to state 17
-- On T_LNUMBER shift to state 59
-- On T_LIST shift to state 69
-- On T_LINE shift to state 60
-- On T_LAMBDA_OPAR shift to state 73
-- On T_ISSET shift to state 133
-- On T_INT_CAST shift to state 135
-- On T_INSTANCEOF shift to state 52
-- On T_INCLUDE_ONCE shift to state 136
-- On T_INCLUDE shift to state 137
-- On T_INC shift to state 138
-- On T_IDENT shift to state 18
-- On T_FUNC_C shift to state 61
-- On T_FUNCTION shift to state 139
-- On T_FILE shift to state 62
-- On T_EXIT shift to state 160
-- On T_EVAL shift to state 162
-- On T_ENUM shift to state 19
-- On T_EMPTY shift to state 164
-- On T_DOUBLE_CAST shift to state 168
-- On T_DNUMBER shift to state 63
-- On T_DIR shift to state 64
-- On T_DEC shift to state 169
-- On T_CONSTANT_ENCAPSED_STRING shift to state 65
-- On T_CLONE shift to state 170
-- On T_CLASS_C shift to state 66
-- On T_BOOL_CAST shift to state 171
-- On T_AWAIT shift to state 172
-- On T_ASYNC shift to state 173
-- On T_ARRAY_CAST shift to state 200
-- On T_ARRAY shift to state 201
-- On TTILDE shift to state 204
-- On TPLUS shift to state 205
-- On TOPAR shift to state 206
-- On TOBRA shift to state 209
-- On TMINUS shift to state 210
-- On TGUIL shift to state 211
-- On TDOLLARDOLLAR shift to state 213
-- On TDOLLAR shift to state 214
-- On TBANG shift to state 216
-- On TBACKQUOTE shift to state 217
-- On TANTISLASH shift to state 85
-- On LDots shift to state 222
-- On static_scalar shift to state 740
-- On simple_expr shift to state 223
-- On qualified_name shift to state 94
-- On qualified_class_name shift to state 225
-- On primary_expr shift to state 226
-- On new_expr shift to state 227
-- On namespace_name shift to state 102
-- On member_expr shift to state 228
-- On lambda_expr shift to state 231
-- On ident_in_name shift to state 57
-- On ident shift to state 56
-- On expr shift to state 465
-- On constant shift to state 239
-- On call_expr shift to state 240
## Reductions:

State 740:
## Known stack suffix:
## ident TEQ static_scalar
## LR(1) items:
declare -> ident TEQ static_scalar . [ TCPAR TCOMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production declare -> ident TEQ static_scalar

State 741:
## Known stack suffix:
## list_sep(declare,TCOMMA) TCOMMA declare
## LR(1) items:
list_sep(declare,TCOMMA) -> list_sep(declare,TCOMMA) TCOMMA declare . [ TCPAR TCOMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production list_sep(declare,TCOMMA) -> list_sep(declare,TCOMMA) TCOMMA declare

State 742:
## Known stack suffix:
## declare
## LR(1) items:
list_sep(declare,TCOMMA) -> declare . [ TCPAR TCOMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production list_sep(declare,TCOMMA) -> declare

State 743:
## Known stack suffix:
## T_DO statement
## LR(1) items:
statement -> T_DO statement . T_WHILE TOPAR expr TCPAR TSEMICOLON [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_ENDWHILE T_ENDSWITCH T_ENDIF T_ENDFOREACH T_ENDFOR T_ENDDECLARE T_EMPTY T_ELSEIF T_ELSE T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DEFAULT T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_CASE T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
statement -> T_DO statement . T_WHILE TOPAR T_ELLIPSIS TCPAR TSEMICOLON [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_ENDWHILE T_ENDSWITCH T_ENDIF T_ENDFOREACH T_ENDFOR T_ENDDECLARE T_EMPTY T_ELSEIF T_ELSE T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DEFAULT T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_CASE T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
## Transitions:
-- On T_WHILE shift to state 744
## Reductions:

State 744:
## Known stack suffix:
## T_DO statement T_WHILE
## LR(1) items:
statement -> T_DO statement T_WHILE . TOPAR expr TCPAR TSEMICOLON [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_ENDWHILE T_ENDSWITCH T_ENDIF T_ENDFOREACH T_ENDFOR T_ENDDECLARE T_EMPTY T_ELSEIF T_ELSE T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DEFAULT T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_CASE T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
statement -> T_DO statement T_WHILE . TOPAR T_ELLIPSIS TCPAR TSEMICOLON [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_ENDWHILE T_ENDSWITCH T_ENDIF T_ENDFOREACH T_ENDFOR T_ENDDECLARE T_EMPTY T_ELSEIF T_ELSE T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DEFAULT T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_CASE T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
## Transitions:
-- On TOPAR shift to state 745
## Reductions:

State 745:
## Known stack suffix:
## T_DO statement T_WHILE TOPAR
## LR(1) items:
statement -> T_DO statement T_WHILE TOPAR . expr TCPAR TSEMICOLON [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_ENDWHILE T_ENDSWITCH T_ENDIF T_ENDFOREACH T_ENDFOR T_ENDDECLARE T_EMPTY T_ELSEIF T_ELSE T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DEFAULT T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_CASE T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
statement -> T_DO statement T_WHILE TOPAR . T_ELLIPSIS TCPAR TSEMICOLON [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_ENDWHILE T_ENDSWITCH T_ENDIF T_ENDFOREACH T_ENDFOR T_ENDDECLARE T_EMPTY T_ELSEIF T_ELSE T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DEFAULT T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_CASE T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
## Transitions:
-- On T__AT shift to state 1
-- On T_YIELD shift to state 2
-- On T_VARIABLE shift to state 3
-- On T_UNSET_CAST shift to state 5
-- On T_TYPE shift to state 6
-- On T_TRAIT_C shift to state 7
-- On T_SUPER shift to state 8
-- On T_STRING_CAST shift to state 9
-- On T_STATIC shift to state 10
-- On T_START_HEREDOC shift to state 25
-- On T_SELF shift to state 40
-- On T_REQUIRE_ONCE shift to state 41
-- On T_REQUIRE shift to state 42
-- On T_PRINT shift to state 43
-- On T_PARENT shift to state 44
-- On T_OBJECT_CAST shift to state 45
-- On T_NEW shift to state 46
-- On T_NAMESPACE_C shift to state 49
-- On T_NAMESPACE shift to state 50
-- On T_METHOD_C shift to state 58
-- On T_METAVAR shift to state 17
-- On T_LNUMBER shift to state 59
-- On T_LIST shift to state 69
-- On T_LINE shift to state 60
-- On T_LAMBDA_OPAR shift to state 73
-- On T_ISSET shift to state 133
-- On T_INT_CAST shift to state 135
-- On T_INSTANCEOF shift to state 52
-- On T_INCLUDE_ONCE shift to state 136
-- On T_INCLUDE shift to state 137
-- On T_INC shift to state 138
-- On T_IDENT shift to state 18
-- On T_FUNC_C shift to state 61
-- On T_FUNCTION shift to state 139
-- On T_FILE shift to state 62
-- On T_EXIT shift to state 160
-- On T_EVAL shift to state 162
-- On T_ENUM shift to state 19
-- On T_EMPTY shift to state 164
-- On T_ELLIPSIS shift to state 746
-- On T_DOUBLE_CAST shift to state 168
-- On T_DNUMBER shift to state 63
-- On T_DIR shift to state 64
-- On T_DEC shift to state 169
-- On T_CONSTANT_ENCAPSED_STRING shift to state 65
-- On T_CLONE shift to state 170
-- On T_CLASS_C shift to state 66
-- On T_BOOL_CAST shift to state 171
-- On T_AWAIT shift to state 172
-- On T_ASYNC shift to state 173
-- On T_ARRAY_CAST shift to state 200
-- On T_ARRAY shift to state 201
-- On TTILDE shift to state 204
-- On TPLUS shift to state 205
-- On TOPAR shift to state 206
-- On TOBRA shift to state 209
-- On TMINUS shift to state 210
-- On TGUIL shift to state 211
-- On TDOLLARDOLLAR shift to state 213
-- On TDOLLAR shift to state 214
-- On TBANG shift to state 216
-- On TBACKQUOTE shift to state 217
-- On TANTISLASH shift to state 85
-- On LDots shift to state 222
-- On simple_expr shift to state 223
-- On qualified_name shift to state 94
-- On qualified_class_name shift to state 225
-- On primary_expr shift to state 226
-- On new_expr shift to state 227
-- On namespace_name shift to state 102
-- On member_expr shift to state 228
-- On lambda_expr shift to state 231
-- On ident_in_name shift to state 57
-- On ident shift to state 56
-- On expr shift to state 749
-- On constant shift to state 239
-- On call_expr shift to state 240
## Reductions:

State 746:
## Known stack suffix:
## T_DO statement T_WHILE TOPAR T_ELLIPSIS
## LR(1) items:
statement -> T_DO statement T_WHILE TOPAR T_ELLIPSIS . TCPAR TSEMICOLON [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_ENDWHILE T_ENDSWITCH T_ENDIF T_ENDFOREACH T_ENDFOR T_ENDDECLARE T_EMPTY T_ELSEIF T_ELSE T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DEFAULT T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_CASE T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
## Transitions:
-- On TCPAR shift to state 747
## Reductions:

State 747:
## Known stack suffix:
## T_DO statement T_WHILE TOPAR T_ELLIPSIS TCPAR
## LR(1) items:
statement -> T_DO statement T_WHILE TOPAR T_ELLIPSIS TCPAR . TSEMICOLON [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_ENDWHILE T_ENDSWITCH T_ENDIF T_ENDFOREACH T_ENDFOR T_ENDDECLARE T_EMPTY T_ELSEIF T_ELSE T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DEFAULT T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_CASE T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
## Transitions:
-- On TSEMICOLON shift to state 748
## Reductions:

State 748:
## Known stack suffix:
## T_DO statement T_WHILE TOPAR T_ELLIPSIS TCPAR TSEMICOLON
## LR(1) items:
statement -> T_DO statement T_WHILE TOPAR T_ELLIPSIS TCPAR TSEMICOLON . [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_ENDWHILE T_ENDSWITCH T_ENDIF T_ENDFOREACH T_ENDFOR T_ENDDECLARE T_EMPTY T_ELSEIF T_ELSE T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DEFAULT T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_CASE T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production statement -> T_DO statement T_WHILE TOPAR T_ELLIPSIS TCPAR TSEMICOLON

State 749:
## Known stack suffix:
## T_DO statement T_WHILE TOPAR expr
## LR(1) items:
expr -> expr . T_INC [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . T_DEC [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . T_BOOLEAN_OR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . T_BOOLEAN_AND expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . T_LOGICAL_OR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . T_LOGICAL_AND expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . T_LOGICAL_XOR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . TPLUS expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . TMINUS expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . TMUL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . TDIV expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . TMOD expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . TPOW expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . TAND expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . TOR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . TXOR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . T_SL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . T_SR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . TDOT expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . T_IS_IDENTICAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . T_IS_NOT_IDENTICAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . T_IS_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . T_IS_NOT_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . TSMALLER expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . T_IS_SMALLER_OR_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . TGREATER expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . T_IS_GREATER_OR_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . T_ROCKET expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . TQUESTION expr TCOLON expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . TQUESTION TCOLON expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . TQUESTION TQUESTION expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . T_INSTANCEOF expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
statement -> T_DO statement T_WHILE TOPAR expr . TCPAR TSEMICOLON [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_ENDWHILE T_ENDSWITCH T_ENDIF T_ENDFOREACH T_ENDFOR T_ENDDECLARE T_EMPTY T_ELSEIF T_ELSE T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DEFAULT T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_CASE T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
## Transitions:
-- On T_SR shift to state 233
-- On T_SL shift to state 244
-- On T_ROCKET shift to state 260
-- On T_LOGICAL_XOR shift to state 270
-- On T_LOGICAL_OR shift to state 298
-- On T_LOGICAL_AND shift to state 272
-- On T_IS_SMALLER_OR_EQUAL shift to state 262
-- On T_IS_NOT_IDENTICAL shift to state 274
-- On T_IS_NOT_EQUAL shift to state 276
-- On T_IS_IDENTICAL shift to state 278
-- On T_IS_GREATER_OR_EQUAL shift to state 264
-- On T_IS_EQUAL shift to state 280
-- On T_INSTANCEOF shift to state 235
-- On T_INC shift to state 237
-- On T_DEC shift to state 238
-- On T_BOOLEAN_OR shift to state 282
-- On T_BOOLEAN_AND shift to state 284
-- On TXOR shift to state 286
-- On TSMALLER shift to state 266
-- On TQUESTION shift to state 292
-- On TPOW shift to state 246
-- On TPLUS shift to state 248
-- On TOR shift to state 290
-- On TMUL shift to state 250
-- On TMOD shift to state 252
-- On TMINUS shift to state 256
-- On TGREATER shift to state 268
-- On TDOT shift to state 258
-- On TDIV shift to state 254
-- On TCPAR shift to state 750
-- On TAND shift to state 288
## Reductions:

State 750:
## Known stack suffix:
## T_DO statement T_WHILE TOPAR expr TCPAR
## LR(1) items:
statement -> T_DO statement T_WHILE TOPAR expr TCPAR . TSEMICOLON [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_ENDWHILE T_ENDSWITCH T_ENDIF T_ENDFOREACH T_ENDFOR T_ENDDECLARE T_EMPTY T_ELSEIF T_ELSE T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DEFAULT T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_CASE T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
## Transitions:
-- On TSEMICOLON shift to state 751
## Reductions:

State 751:
## Known stack suffix:
## T_DO statement T_WHILE TOPAR expr TCPAR TSEMICOLON
## LR(1) items:
statement -> T_DO statement T_WHILE TOPAR expr TCPAR TSEMICOLON . [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_ENDWHILE T_ENDSWITCH T_ENDIF T_ENDFOREACH T_ENDFOR T_ENDDECLARE T_EMPTY T_ELSEIF T_ELSE T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DEFAULT T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_CASE T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production statement -> T_DO statement T_WHILE TOPAR expr TCPAR TSEMICOLON

State 752:
## Known stack suffix:
## TCOLON
## LR(1) items:
for_statement -> TCOLON . list(inner_statement) T_ENDFOR TSEMICOLON [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_ENDWHILE T_ENDSWITCH T_ENDIF T_ENDFOREACH T_ENDFOR T_ENDDECLARE T_EMPTY T_ELSEIF T_ELSE T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DEFAULT T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_CASE T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
## Transitions:
-- On T__AT shift to state 1
-- On T_YIELD shift to state 2
-- On T_WHILE shift to state 158
-- On T_VARIABLE shift to state 3
-- On T_USE shift to state 190
-- On T_UNSET_CAST shift to state 5
-- On T_UNSET shift to state 197
-- On T_TYPE shift to state 6
-- On T_TRY shift to state 391
-- On T_TRAIT_C shift to state 7
-- On T_TRAIT shift to state 393
-- On T_THROW shift to state 520
-- On T_SWITCH shift to state 525
-- On T_SUPER shift to state 8
-- On T_STRING_CAST shift to state 9
-- On T_STATIC shift to state 536
-- On T_START_HEREDOC shift to state 25
-- On T_SL shift to state 16
-- On T_SELF shift to state 40
-- On T_RETURN shift to state 553
-- On T_REQUIRE_ONCE shift to state 41
-- On T_REQUIRE shift to state 42
-- On T_PRINT shift to state 43
-- On T_PARENT shift to state 44
-- On T_OPEN_TAG_WITH_ECHO shift to state 558
-- On T_OBJECT_CAST shift to state 45
-- On T_NEW shift to state 46
-- On T_NAMESPACE_C shift to state 49
-- On T_NAMESPACE shift to state 50
-- On T_METHOD_C shift to state 58
-- On T_METAVAR shift to state 17
-- On T_LNUMBER shift to state 59
-- On T_LIST shift to state 69
-- On T_LINE shift to state 60
-- On T_LAMBDA_OPAR shift to state 73
-- On T_ISSET shift to state 133
-- On T_INT_CAST shift to state 135
-- On T_INTERFACE shift to state 563
-- On T_INSTANCEOF shift to state 52
-- On T_INLINE_HTML shift to state 576
-- On T_INCLUDE_ONCE shift to state 136
-- On T_INCLUDE shift to state 137
-- On T_INC shift to state 138
-- On T_IF shift to state 577
-- On T_IDENT shift to state 18
-- On T_GLOBAL shift to state 587
-- On T_FUNC_C shift to state 61
-- On T_FUNCTION shift to state 657
-- On T_FOREACH shift to state 600
-- On T_FOR shift to state 624
-- On T_FINAL shift to state 666
-- On T_FILE shift to state 62
-- On T_EXIT shift to state 160
-- On T_EVAL shift to state 162
-- On T_ENUM shift to state 668
-- On T_EMPTY shift to state 164
-- On T_ELLIPSIS shift to state 635
-- On T_ECHO shift to state 636
-- On T_DOUBLE_CAST shift to state 168
-- On T_DO shift to state 644
-- On T_DNUMBER shift to state 63
-- On T_DIR shift to state 64
-- On T_DECLARE shift to state 645
-- On T_DEC shift to state 169
-- On T_CONTINUE shift to state 649
-- On T_CONSTANT_ENCAPSED_STRING shift to state 65
-- On T_CLONE shift to state 170
-- On T_CLASS_C shift to state 66
-- On T_CLASS shift to state 682
-- On T_BREAK shift to state 652
-- On T_BOOL_CAST shift to state 171
-- On T_AWAIT shift to state 172
-- On T_ASYNC shift to state 683
-- On T_ARRAY_CAST shift to state 200
-- On T_ARRAY shift to state 201
-- On T_ABSTRACT shift to state 694
-- On TTILDE shift to state 204
-- On TSEMICOLON shift to state 655
-- On TPLUS shift to state 205
-- On TOPAR shift to state 206
-- On TOBRACE shift to state 656
-- On TOBRA shift to state 209
-- On TMINUS shift to state 210
-- On TGUIL shift to state 211
-- On TDOLLARDOLLAR shift to state 213
-- On TDOLLAR shift to state 214
-- On TBANG shift to state 216
-- On TBACKQUOTE shift to state 217
-- On TANTISLASH shift to state 85
-- On LDots shift to state 222
-- On unticked_function_declaration shift to state 696
-- On unticked_class_declaration shift to state 697
-- On statement shift to state 698
-- On simple_expr shift to state 223
-- On qualified_name shift to state 94
-- On qualified_class_name shift to state 225
-- On primary_expr shift to state 226
-- On new_expr shift to state 227
-- On namespace_name shift to state 102
-- On member_expr shift to state 228
-- On list(inner_statement) shift to state 753
-- On lambda_expr shift to state 231
-- On inner_statement shift to state 701
-- On ident_in_name shift to state 57
-- On ident shift to state 56
-- On function_declaration shift to state 703
-- On expr shift to state 704
-- On constant shift to state 239
-- On class_entry_type shift to state 706
-- On class_declaration shift to state 716
-- On call_expr shift to state 240
-- On attributes shift to state 717
## Reductions:
-- On T_ENDFOR
--   reduce production list(inner_statement) ->

State 753:
## Known stack suffix:
## TCOLON list(inner_statement)
## LR(1) items:
for_statement -> TCOLON list(inner_statement) . T_ENDFOR TSEMICOLON [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_ENDWHILE T_ENDSWITCH T_ENDIF T_ENDFOREACH T_ENDFOR T_ENDDECLARE T_EMPTY T_ELSEIF T_ELSE T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DEFAULT T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_CASE T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
## Transitions:
-- On T_ENDFOR shift to state 754
## Reductions:

State 754:
## Known stack suffix:
## TCOLON list(inner_statement) T_ENDFOR
## LR(1) items:
for_statement -> TCOLON list(inner_statement) T_ENDFOR . TSEMICOLON [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_ENDWHILE T_ENDSWITCH T_ENDIF T_ENDFOREACH T_ENDFOR T_ENDDECLARE T_EMPTY T_ELSEIF T_ELSE T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DEFAULT T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_CASE T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
## Transitions:
-- On TSEMICOLON shift to state 755
## Reductions:

State 755:
## Known stack suffix:
## TCOLON list(inner_statement) T_ENDFOR TSEMICOLON
## LR(1) items:
for_statement -> TCOLON list(inner_statement) T_ENDFOR TSEMICOLON . [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_ENDWHILE T_ENDSWITCH T_ENDIF T_ENDFOREACH T_ENDFOR T_ENDDECLARE T_EMPTY T_ELSEIF T_ELSE T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DEFAULT T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_CASE T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production for_statement -> TCOLON list(inner_statement) T_ENDFOR TSEMICOLON

State 756:
## Known stack suffix:
## statement
## LR(1) items:
for_statement -> statement . [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_ENDWHILE T_ENDSWITCH T_ENDIF T_ENDFOREACH T_ENDFOR T_ENDDECLARE T_EMPTY T_ELSEIF T_ELSE T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DEFAULT T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_CASE T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production for_statement -> statement

State 757:
## Known stack suffix:
## T_FOR TOPAR for_expr TSEMICOLON for_expr TSEMICOLON for_expr TCPAR for_statement
## LR(1) items:
statement -> T_FOR TOPAR for_expr TSEMICOLON for_expr TSEMICOLON for_expr TCPAR for_statement . [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_ENDWHILE T_ENDSWITCH T_ENDIF T_ENDFOREACH T_ENDFOR T_ENDDECLARE T_EMPTY T_ELSEIF T_ELSE T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DEFAULT T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_CASE T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production statement -> T_FOR TOPAR for_expr TSEMICOLON for_expr TSEMICOLON for_expr TCPAR for_statement

State 758:
## Known stack suffix:
## expr
## LR(1) items:
expr -> expr . T_INC [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TAND ]
expr -> expr . T_DEC [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TAND ]
expr -> expr . T_BOOLEAN_OR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TAND ]
expr -> expr . T_BOOLEAN_AND expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TAND ]
expr -> expr . T_LOGICAL_OR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TAND ]
expr -> expr . T_LOGICAL_AND expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TAND ]
expr -> expr . T_LOGICAL_XOR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TAND ]
expr -> expr . TPLUS expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TAND ]
expr -> expr . TMINUS expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TAND ]
expr -> expr . TMUL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TAND ]
expr -> expr . TDIV expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TAND ]
expr -> expr . TMOD expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TAND ]
expr -> expr . TPOW expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TAND ]
expr -> expr . TAND expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TAND ]
expr -> expr . TOR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TAND ]
expr -> expr . TXOR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TAND ]
expr -> expr . T_SL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TAND ]
expr -> expr . T_SR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TAND ]
expr -> expr . TDOT expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TAND ]
expr -> expr . T_IS_IDENTICAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TAND ]
expr -> expr . T_IS_NOT_IDENTICAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TAND ]
expr -> expr . T_IS_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TAND ]
expr -> expr . T_IS_NOT_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TAND ]
expr -> expr . TSMALLER expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TAND ]
expr -> expr . T_IS_SMALLER_OR_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TAND ]
expr -> expr . TGREATER expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TAND ]
expr -> expr . T_IS_GREATER_OR_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TAND ]
expr -> expr . T_ROCKET expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TAND ]
expr -> expr . TQUESTION expr TCOLON expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TAND ]
expr -> expr . TQUESTION TCOLON expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TAND ]
expr -> expr . TQUESTION TQUESTION expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TAND ]
expr -> expr . T_INSTANCEOF expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TAND ]
list_sep(expr,TCOMMA) -> expr . [ TSEMICOLON TCPAR TCOMMA ]
## Transitions:
-- On T_SR shift to state 233
-- On T_SL shift to state 244
-- On T_ROCKET shift to state 260
-- On T_LOGICAL_XOR shift to state 270
-- On T_LOGICAL_OR shift to state 298
-- On T_LOGICAL_AND shift to state 272
-- On T_IS_SMALLER_OR_EQUAL shift to state 262
-- On T_IS_NOT_IDENTICAL shift to state 274
-- On T_IS_NOT_EQUAL shift to state 276
-- On T_IS_IDENTICAL shift to state 278
-- On T_IS_GREATER_OR_EQUAL shift to state 264
-- On T_IS_EQUAL shift to state 280
-- On T_INSTANCEOF shift to state 235
-- On T_INC shift to state 237
-- On T_DEC shift to state 238
-- On T_BOOLEAN_OR shift to state 282
-- On T_BOOLEAN_AND shift to state 284
-- On TXOR shift to state 286
-- On TSMALLER shift to state 266
-- On TQUESTION shift to state 292
-- On TPOW shift to state 246
-- On TPLUS shift to state 248
-- On TOR shift to state 290
-- On TMUL shift to state 250
-- On TMOD shift to state 252
-- On TMINUS shift to state 256
-- On TGREATER shift to state 268
-- On TDOT shift to state 258
-- On TDIV shift to state 254
-- On TAND shift to state 288
## Reductions:
-- On TSEMICOLON TCPAR TCOMMA
--   reduce production list_sep(expr,TCOMMA) -> expr

State 759:
## Known stack suffix:
## TCOLON
## LR(1) items:
foreach_statement -> TCOLON . list(inner_statement) T_ENDFOREACH TSEMICOLON [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_ENDWHILE T_ENDSWITCH T_ENDIF T_ENDFOREACH T_ENDFOR T_ENDDECLARE T_EMPTY T_ELSEIF T_ELSE T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DEFAULT T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_CASE T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
## Transitions:
-- On T__AT shift to state 1
-- On T_YIELD shift to state 2
-- On T_WHILE shift to state 158
-- On T_VARIABLE shift to state 3
-- On T_USE shift to state 190
-- On T_UNSET_CAST shift to state 5
-- On T_UNSET shift to state 197
-- On T_TYPE shift to state 6
-- On T_TRY shift to state 391
-- On T_TRAIT_C shift to state 7
-- On T_TRAIT shift to state 393
-- On T_THROW shift to state 520
-- On T_SWITCH shift to state 525
-- On T_SUPER shift to state 8
-- On T_STRING_CAST shift to state 9
-- On T_STATIC shift to state 536
-- On T_START_HEREDOC shift to state 25
-- On T_SL shift to state 16
-- On T_SELF shift to state 40
-- On T_RETURN shift to state 553
-- On T_REQUIRE_ONCE shift to state 41
-- On T_REQUIRE shift to state 42
-- On T_PRINT shift to state 43
-- On T_PARENT shift to state 44
-- On T_OPEN_TAG_WITH_ECHO shift to state 558
-- On T_OBJECT_CAST shift to state 45
-- On T_NEW shift to state 46
-- On T_NAMESPACE_C shift to state 49
-- On T_NAMESPACE shift to state 50
-- On T_METHOD_C shift to state 58
-- On T_METAVAR shift to state 17
-- On T_LNUMBER shift to state 59
-- On T_LIST shift to state 69
-- On T_LINE shift to state 60
-- On T_LAMBDA_OPAR shift to state 73
-- On T_ISSET shift to state 133
-- On T_INT_CAST shift to state 135
-- On T_INTERFACE shift to state 563
-- On T_INSTANCEOF shift to state 52
-- On T_INLINE_HTML shift to state 576
-- On T_INCLUDE_ONCE shift to state 136
-- On T_INCLUDE shift to state 137
-- On T_INC shift to state 138
-- On T_IF shift to state 577
-- On T_IDENT shift to state 18
-- On T_GLOBAL shift to state 587
-- On T_FUNC_C shift to state 61
-- On T_FUNCTION shift to state 657
-- On T_FOREACH shift to state 600
-- On T_FOR shift to state 624
-- On T_FINAL shift to state 666
-- On T_FILE shift to state 62
-- On T_EXIT shift to state 160
-- On T_EVAL shift to state 162
-- On T_ENUM shift to state 668
-- On T_EMPTY shift to state 164
-- On T_ELLIPSIS shift to state 635
-- On T_ECHO shift to state 636
-- On T_DOUBLE_CAST shift to state 168
-- On T_DO shift to state 644
-- On T_DNUMBER shift to state 63
-- On T_DIR shift to state 64
-- On T_DECLARE shift to state 645
-- On T_DEC shift to state 169
-- On T_CONTINUE shift to state 649
-- On T_CONSTANT_ENCAPSED_STRING shift to state 65
-- On T_CLONE shift to state 170
-- On T_CLASS_C shift to state 66
-- On T_CLASS shift to state 682
-- On T_BREAK shift to state 652
-- On T_BOOL_CAST shift to state 171
-- On T_AWAIT shift to state 172
-- On T_ASYNC shift to state 683
-- On T_ARRAY_CAST shift to state 200
-- On T_ARRAY shift to state 201
-- On T_ABSTRACT shift to state 694
-- On TTILDE shift to state 204
-- On TSEMICOLON shift to state 655
-- On TPLUS shift to state 205
-- On TOPAR shift to state 206
-- On TOBRACE shift to state 656
-- On TOBRA shift to state 209
-- On TMINUS shift to state 210
-- On TGUIL shift to state 211
-- On TDOLLARDOLLAR shift to state 213
-- On TDOLLAR shift to state 214
-- On TBANG shift to state 216
-- On TBACKQUOTE shift to state 217
-- On TANTISLASH shift to state 85
-- On LDots shift to state 222
-- On unticked_function_declaration shift to state 696
-- On unticked_class_declaration shift to state 697
-- On statement shift to state 698
-- On simple_expr shift to state 223
-- On qualified_name shift to state 94
-- On qualified_class_name shift to state 225
-- On primary_expr shift to state 226
-- On new_expr shift to state 227
-- On namespace_name shift to state 102
-- On member_expr shift to state 228
-- On list(inner_statement) shift to state 760
-- On lambda_expr shift to state 231
-- On inner_statement shift to state 701
-- On ident_in_name shift to state 57
-- On ident shift to state 56
-- On function_declaration shift to state 703
-- On expr shift to state 704
-- On constant shift to state 239
-- On class_entry_type shift to state 706
-- On class_declaration shift to state 716
-- On call_expr shift to state 240
-- On attributes shift to state 717
## Reductions:
-- On T_ENDFOREACH
--   reduce production list(inner_statement) ->

State 760:
## Known stack suffix:
## TCOLON list(inner_statement)
## LR(1) items:
foreach_statement -> TCOLON list(inner_statement) . T_ENDFOREACH TSEMICOLON [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_ENDWHILE T_ENDSWITCH T_ENDIF T_ENDFOREACH T_ENDFOR T_ENDDECLARE T_EMPTY T_ELSEIF T_ELSE T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DEFAULT T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_CASE T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
## Transitions:
-- On T_ENDFOREACH shift to state 761
## Reductions:

State 761:
## Known stack suffix:
## TCOLON list(inner_statement) T_ENDFOREACH
## LR(1) items:
foreach_statement -> TCOLON list(inner_statement) T_ENDFOREACH . TSEMICOLON [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_ENDWHILE T_ENDSWITCH T_ENDIF T_ENDFOREACH T_ENDFOR T_ENDDECLARE T_EMPTY T_ELSEIF T_ELSE T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DEFAULT T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_CASE T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
## Transitions:
-- On TSEMICOLON shift to state 762
## Reductions:

State 762:
## Known stack suffix:
## TCOLON list(inner_statement) T_ENDFOREACH TSEMICOLON
## LR(1) items:
foreach_statement -> TCOLON list(inner_statement) T_ENDFOREACH TSEMICOLON . [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_ENDWHILE T_ENDSWITCH T_ENDIF T_ENDFOREACH T_ENDFOR T_ENDDECLARE T_EMPTY T_ELSEIF T_ELSE T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DEFAULT T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_CASE T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production foreach_statement -> TCOLON list(inner_statement) T_ENDFOREACH TSEMICOLON

State 763:
## Known stack suffix:
## statement
## LR(1) items:
foreach_statement -> statement . [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_ENDWHILE T_ENDSWITCH T_ENDIF T_ENDFOREACH T_ENDFOR T_ENDDECLARE T_EMPTY T_ELSEIF T_ELSE T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DEFAULT T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_CASE T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production foreach_statement -> statement

State 764:
## Known stack suffix:
## T_FOREACH TOPAR expr T_AWAIT T_AS foreach_pattern TCPAR foreach_statement
## LR(1) items:
statement -> T_FOREACH TOPAR expr T_AWAIT T_AS foreach_pattern TCPAR foreach_statement . [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_ENDWHILE T_ENDSWITCH T_ENDIF T_ENDFOREACH T_ENDFOR T_ENDDECLARE T_EMPTY T_ELSEIF T_ELSE T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DEFAULT T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_CASE T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production statement -> T_FOREACH TOPAR expr T_AWAIT T_AS foreach_pattern TCPAR foreach_statement

State 765:
## Known stack suffix:
## T_FOREACH TOPAR expr T_AS
## LR(1) items:
statement -> T_FOREACH TOPAR expr T_AS . foreach_pattern TCPAR foreach_statement [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_ENDWHILE T_ENDSWITCH T_ENDIF T_ENDFOREACH T_ENDFOR T_ENDDECLARE T_EMPTY T_ELSEIF T_ELSE T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DEFAULT T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_CASE T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
## Transitions:
-- On T__AT shift to state 1
-- On T_YIELD shift to state 2
-- On T_VARIABLE shift to state 3
-- On T_UNSET_CAST shift to state 5
-- On T_TYPE shift to state 6
-- On T_TRAIT_C shift to state 7
-- On T_SUPER shift to state 8
-- On T_STRING_CAST shift to state 9
-- On T_STATIC shift to state 10
-- On T_START_HEREDOC shift to state 25
-- On T_SELF shift to state 40
-- On T_REQUIRE_ONCE shift to state 41
-- On T_REQUIRE shift to state 42
-- On T_PRINT shift to state 43
-- On T_PARENT shift to state 44
-- On T_OBJECT_CAST shift to state 45
-- On T_NEW shift to state 46
-- On T_NAMESPACE_C shift to state 49
-- On T_NAMESPACE shift to state 50
-- On T_METHOD_C shift to state 58
-- On T_METAVAR shift to state 17
-- On T_LNUMBER shift to state 59
-- On T_LIST shift to state 605
-- On T_LINE shift to state 60
-- On T_LAMBDA_OPAR shift to state 73
-- On T_ISSET shift to state 133
-- On T_INT_CAST shift to state 135
-- On T_INSTANCEOF shift to state 52
-- On T_INCLUDE_ONCE shift to state 136
-- On T_INCLUDE shift to state 137
-- On T_INC shift to state 138
-- On T_IDENT shift to state 18
-- On T_FUNC_C shift to state 61
-- On T_FUNCTION shift to state 139
-- On T_FILE shift to state 62
-- On T_EXIT shift to state 160
-- On T_EVAL shift to state 162
-- On T_ENUM shift to state 19
-- On T_EMPTY shift to state 164
-- On T_DOUBLE_CAST shift to state 168
-- On T_DNUMBER shift to state 63
-- On T_DIR shift to state 64
-- On T_DEC shift to state 169
-- On T_CONSTANT_ENCAPSED_STRING shift to state 65
-- On T_CLONE shift to state 170
-- On T_CLASS_C shift to state 66
-- On T_BOOL_CAST shift to state 171
-- On T_AWAIT shift to state 172
-- On T_ASYNC shift to state 173
-- On T_ARRAY_CAST shift to state 200
-- On T_ARRAY shift to state 201
-- On TTILDE shift to state 204
-- On TPLUS shift to state 205
-- On TOPAR shift to state 206
-- On TOBRA shift to state 209
-- On TMINUS shift to state 210
-- On TGUIL shift to state 211
-- On TDOLLARDOLLAR shift to state 213
-- On TDOLLAR shift to state 214
-- On TBANG shift to state 216
-- On TBACKQUOTE shift to state 217
-- On TANTISLASH shift to state 85
-- On TAND shift to state 616
-- On LDots shift to state 222
-- On simple_expr shift to state 223
-- On qualified_name shift to state 94
-- On qualified_class_name shift to state 225
-- On primary_expr shift to state 226
-- On new_expr shift to state 227
-- On namespace_name shift to state 102
-- On member_expr shift to state 228
-- On lambda_expr shift to state 231
-- On ident_in_name shift to state 57
-- On ident shift to state 56
-- On foreach_variable shift to state 618
-- On foreach_pattern shift to state 766
-- On expr shift to state 621
-- On constant shift to state 239
-- On call_expr shift to state 240
## Reductions:

State 766:
## Known stack suffix:
## T_FOREACH TOPAR expr T_AS foreach_pattern
## LR(1) items:
statement -> T_FOREACH TOPAR expr T_AS foreach_pattern . TCPAR foreach_statement [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_ENDWHILE T_ENDSWITCH T_ENDIF T_ENDFOREACH T_ENDFOR T_ENDDECLARE T_EMPTY T_ELSEIF T_ELSE T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DEFAULT T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_CASE T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
## Transitions:
-- On TCPAR shift to state 767
## Reductions:

State 767:
## Known stack suffix:
## T_FOREACH TOPAR expr T_AS foreach_pattern TCPAR
## LR(1) items:
statement -> T_FOREACH TOPAR expr T_AS foreach_pattern TCPAR . foreach_statement [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_ENDWHILE T_ENDSWITCH T_ENDIF T_ENDFOREACH T_ENDFOR T_ENDDECLARE T_EMPTY T_ELSEIF T_ELSE T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DEFAULT T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_CASE T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
## Transitions:
-- On T__AT shift to state 1
-- On T_YIELD shift to state 2
-- On T_WHILE shift to state 158
-- On T_VARIABLE shift to state 3
-- On T_USE shift to state 190
-- On T_UNSET_CAST shift to state 5
-- On T_UNSET shift to state 197
-- On T_TYPE shift to state 6
-- On T_TRY shift to state 391
-- On T_TRAIT_C shift to state 7
-- On T_THROW shift to state 520
-- On T_SWITCH shift to state 525
-- On T_SUPER shift to state 8
-- On T_STRING_CAST shift to state 9
-- On T_STATIC shift to state 581
-- On T_START_HEREDOC shift to state 25
-- On T_SELF shift to state 40
-- On T_RETURN shift to state 553
-- On T_REQUIRE_ONCE shift to state 41
-- On T_REQUIRE shift to state 42
-- On T_PRINT shift to state 43
-- On T_PARENT shift to state 44
-- On T_OPEN_TAG_WITH_ECHO shift to state 558
-- On T_OBJECT_CAST shift to state 45
-- On T_NEW shift to state 46
-- On T_NAMESPACE_C shift to state 49
-- On T_NAMESPACE shift to state 50
-- On T_METHOD_C shift to state 58
-- On T_METAVAR shift to state 17
-- On T_LNUMBER shift to state 59
-- On T_LIST shift to state 69
-- On T_LINE shift to state 60
-- On T_LAMBDA_OPAR shift to state 73
-- On T_ISSET shift to state 133
-- On T_INT_CAST shift to state 135
-- On T_INSTANCEOF shift to state 52
-- On T_INLINE_HTML shift to state 576
-- On T_INCLUDE_ONCE shift to state 136
-- On T_INCLUDE shift to state 137
-- On T_INC shift to state 138
-- On T_IF shift to state 577
-- On T_IDENT shift to state 18
-- On T_GLOBAL shift to state 587
-- On T_FUNC_C shift to state 61
-- On T_FUNCTION shift to state 139
-- On T_FOREACH shift to state 600
-- On T_FOR shift to state 624
-- On T_FILE shift to state 62
-- On T_EXIT shift to state 160
-- On T_EVAL shift to state 162
-- On T_ENUM shift to state 19
-- On T_EMPTY shift to state 164
-- On T_ELLIPSIS shift to state 635
-- On T_ECHO shift to state 636
-- On T_DOUBLE_CAST shift to state 168
-- On T_DO shift to state 644
-- On T_DNUMBER shift to state 63
-- On T_DIR shift to state 64
-- On T_DECLARE shift to state 645
-- On T_DEC shift to state 169
-- On T_CONTINUE shift to state 649
-- On T_CONSTANT_ENCAPSED_STRING shift to state 65
-- On T_CLONE shift to state 170
-- On T_CLASS_C shift to state 66
-- On T_BREAK shift to state 652
-- On T_BOOL_CAST shift to state 171
-- On T_AWAIT shift to state 172
-- On T_ASYNC shift to state 173
-- On T_ARRAY_CAST shift to state 200
-- On T_ARRAY shift to state 201
-- On TTILDE shift to state 204
-- On TSEMICOLON shift to state 655
-- On TPLUS shift to state 205
-- On TOPAR shift to state 206
-- On TOBRACE shift to state 656
-- On TOBRA shift to state 209
-- On TMINUS shift to state 210
-- On TGUIL shift to state 211
-- On TDOLLARDOLLAR shift to state 213
-- On TDOLLAR shift to state 214
-- On TCOLON shift to state 759
-- On TBANG shift to state 216
-- On TBACKQUOTE shift to state 217
-- On TANTISLASH shift to state 85
-- On LDots shift to state 222
-- On statement shift to state 763
-- On simple_expr shift to state 223
-- On qualified_name shift to state 94
-- On qualified_class_name shift to state 225
-- On primary_expr shift to state 226
-- On new_expr shift to state 227
-- On namespace_name shift to state 102
-- On member_expr shift to state 228
-- On lambda_expr shift to state 231
-- On ident_in_name shift to state 57
-- On ident shift to state 56
-- On foreach_statement shift to state 768
-- On expr shift to state 704
-- On constant shift to state 239
-- On call_expr shift to state 240
## Reductions:

State 768:
## Known stack suffix:
## T_FOREACH TOPAR expr T_AS foreach_pattern TCPAR foreach_statement
## LR(1) items:
statement -> T_FOREACH TOPAR expr T_AS foreach_pattern TCPAR foreach_statement . [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_ENDWHILE T_ENDSWITCH T_ENDIF T_ENDFOREACH T_ENDFOR T_ENDDECLARE T_EMPTY T_ELSEIF T_ELSE T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DEFAULT T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_CASE T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production statement -> T_FOREACH TOPAR expr T_AS foreach_pattern TCPAR foreach_statement

State 769:
## Known stack suffix:
## T_IF TOPAR T_ELLIPSIS TCPAR TCOLON
## LR(1) items:
statement -> T_IF TOPAR T_ELLIPSIS TCPAR TCOLON . list(inner_statement) new_elseif_list new_else_single T_ENDIF TSEMICOLON [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_ENDWHILE T_ENDSWITCH T_ENDIF T_ENDFOREACH T_ENDFOR T_ENDDECLARE T_EMPTY T_ELSEIF T_ELSE T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DEFAULT T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_CASE T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
## Transitions:
-- On T__AT shift to state 1
-- On T_YIELD shift to state 2
-- On T_WHILE shift to state 158
-- On T_VARIABLE shift to state 3
-- On T_USE shift to state 190
-- On T_UNSET_CAST shift to state 5
-- On T_UNSET shift to state 197
-- On T_TYPE shift to state 6
-- On T_TRY shift to state 391
-- On T_TRAIT_C shift to state 7
-- On T_TRAIT shift to state 393
-- On T_THROW shift to state 520
-- On T_SWITCH shift to state 525
-- On T_SUPER shift to state 8
-- On T_STRING_CAST shift to state 9
-- On T_STATIC shift to state 536
-- On T_START_HEREDOC shift to state 25
-- On T_SL shift to state 16
-- On T_SELF shift to state 40
-- On T_RETURN shift to state 553
-- On T_REQUIRE_ONCE shift to state 41
-- On T_REQUIRE shift to state 42
-- On T_PRINT shift to state 43
-- On T_PARENT shift to state 44
-- On T_OPEN_TAG_WITH_ECHO shift to state 558
-- On T_OBJECT_CAST shift to state 45
-- On T_NEW shift to state 46
-- On T_NAMESPACE_C shift to state 49
-- On T_NAMESPACE shift to state 50
-- On T_METHOD_C shift to state 58
-- On T_METAVAR shift to state 17
-- On T_LNUMBER shift to state 59
-- On T_LIST shift to state 69
-- On T_LINE shift to state 60
-- On T_LAMBDA_OPAR shift to state 73
-- On T_ISSET shift to state 133
-- On T_INT_CAST shift to state 135
-- On T_INTERFACE shift to state 563
-- On T_INSTANCEOF shift to state 52
-- On T_INLINE_HTML shift to state 576
-- On T_INCLUDE_ONCE shift to state 136
-- On T_INCLUDE shift to state 137
-- On T_INC shift to state 138
-- On T_IF shift to state 577
-- On T_IDENT shift to state 18
-- On T_GLOBAL shift to state 587
-- On T_FUNC_C shift to state 61
-- On T_FUNCTION shift to state 657
-- On T_FOREACH shift to state 600
-- On T_FOR shift to state 624
-- On T_FINAL shift to state 666
-- On T_FILE shift to state 62
-- On T_EXIT shift to state 160
-- On T_EVAL shift to state 162
-- On T_ENUM shift to state 668
-- On T_EMPTY shift to state 164
-- On T_ELLIPSIS shift to state 635
-- On T_ECHO shift to state 636
-- On T_DOUBLE_CAST shift to state 168
-- On T_DO shift to state 644
-- On T_DNUMBER shift to state 63
-- On T_DIR shift to state 64
-- On T_DECLARE shift to state 645
-- On T_DEC shift to state 169
-- On T_CONTINUE shift to state 649
-- On T_CONSTANT_ENCAPSED_STRING shift to state 65
-- On T_CLONE shift to state 170
-- On T_CLASS_C shift to state 66
-- On T_CLASS shift to state 682
-- On T_BREAK shift to state 652
-- On T_BOOL_CAST shift to state 171
-- On T_AWAIT shift to state 172
-- On T_ASYNC shift to state 683
-- On T_ARRAY_CAST shift to state 200
-- On T_ARRAY shift to state 201
-- On T_ABSTRACT shift to state 694
-- On TTILDE shift to state 204
-- On TSEMICOLON shift to state 655
-- On TPLUS shift to state 205
-- On TOPAR shift to state 206
-- On TOBRACE shift to state 656
-- On TOBRA shift to state 209
-- On TMINUS shift to state 210
-- On TGUIL shift to state 211
-- On TDOLLARDOLLAR shift to state 213
-- On TDOLLAR shift to state 214
-- On TBANG shift to state 216
-- On TBACKQUOTE shift to state 217
-- On TANTISLASH shift to state 85
-- On LDots shift to state 222
-- On unticked_function_declaration shift to state 696
-- On unticked_class_declaration shift to state 697
-- On statement shift to state 698
-- On simple_expr shift to state 223
-- On qualified_name shift to state 94
-- On qualified_class_name shift to state 225
-- On primary_expr shift to state 226
-- On new_expr shift to state 227
-- On namespace_name shift to state 102
-- On member_expr shift to state 228
-- On list(inner_statement) shift to state 770
-- On lambda_expr shift to state 231
-- On inner_statement shift to state 701
-- On ident_in_name shift to state 57
-- On ident shift to state 56
-- On function_declaration shift to state 703
-- On expr shift to state 704
-- On constant shift to state 239
-- On class_entry_type shift to state 706
-- On class_declaration shift to state 716
-- On call_expr shift to state 240
-- On attributes shift to state 717
## Reductions:
-- On T_ENDIF T_ELSEIF T_ELSE
--   reduce production list(inner_statement) ->

State 770:
## Known stack suffix:
## T_IF TOPAR T_ELLIPSIS TCPAR TCOLON list(inner_statement)
## LR(1) items:
statement -> T_IF TOPAR T_ELLIPSIS TCPAR TCOLON list(inner_statement) . new_elseif_list new_else_single T_ENDIF TSEMICOLON [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_ENDWHILE T_ENDSWITCH T_ENDIF T_ENDFOREACH T_ENDFOR T_ENDDECLARE T_EMPTY T_ELSEIF T_ELSE T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DEFAULT T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_CASE T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
## Transitions:
-- On new_elseif_list shift to state 771
## Default reduction:
-- After reading the next token, reduce production new_elseif_list ->

State 771:
## Known stack suffix:
## T_IF TOPAR T_ELLIPSIS TCPAR TCOLON list(inner_statement) new_elseif_list
## LR(1) items:
new_elseif_list -> new_elseif_list . T_ELSEIF TOPAR expr TCPAR TCOLON list(inner_statement) [ T_ENDIF T_ELSEIF T_ELSE ]
new_elseif_list -> new_elseif_list . T_ELSEIF TOPAR T_ELLIPSIS TCPAR TCOLON list(inner_statement) [ T_ENDIF T_ELSEIF T_ELSE ]
statement -> T_IF TOPAR T_ELLIPSIS TCPAR TCOLON list(inner_statement) new_elseif_list . new_else_single T_ENDIF TSEMICOLON [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_ENDWHILE T_ENDSWITCH T_ENDIF T_ENDFOREACH T_ENDFOR T_ENDDECLARE T_EMPTY T_ELSEIF T_ELSE T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DEFAULT T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_CASE T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
## Transitions:
-- On T_ELSEIF shift to state 772
-- On T_ELSE shift to state 782
-- On new_else_single shift to state 785
## Reductions:
-- On T_ENDIF
--   reduce production new_else_single ->

State 772:
## Known stack suffix:
## new_elseif_list T_ELSEIF
## LR(1) items:
new_elseif_list -> new_elseif_list T_ELSEIF . TOPAR expr TCPAR TCOLON list(inner_statement) [ T_ENDIF T_ELSEIF T_ELSE ]
new_elseif_list -> new_elseif_list T_ELSEIF . TOPAR T_ELLIPSIS TCPAR TCOLON list(inner_statement) [ T_ENDIF T_ELSEIF T_ELSE ]
## Transitions:
-- On TOPAR shift to state 773
## Reductions:

State 773:
## Known stack suffix:
## new_elseif_list T_ELSEIF TOPAR
## LR(1) items:
new_elseif_list -> new_elseif_list T_ELSEIF TOPAR . expr TCPAR TCOLON list(inner_statement) [ T_ENDIF T_ELSEIF T_ELSE ]
new_elseif_list -> new_elseif_list T_ELSEIF TOPAR . T_ELLIPSIS TCPAR TCOLON list(inner_statement) [ T_ENDIF T_ELSEIF T_ELSE ]
## Transitions:
-- On T__AT shift to state 1
-- On T_YIELD shift to state 2
-- On T_VARIABLE shift to state 3
-- On T_UNSET_CAST shift to state 5
-- On T_TYPE shift to state 6
-- On T_TRAIT_C shift to state 7
-- On T_SUPER shift to state 8
-- On T_STRING_CAST shift to state 9
-- On T_STATIC shift to state 10
-- On T_START_HEREDOC shift to state 25
-- On T_SELF shift to state 40
-- On T_REQUIRE_ONCE shift to state 41
-- On T_REQUIRE shift to state 42
-- On T_PRINT shift to state 43
-- On T_PARENT shift to state 44
-- On T_OBJECT_CAST shift to state 45
-- On T_NEW shift to state 46
-- On T_NAMESPACE_C shift to state 49
-- On T_NAMESPACE shift to state 50
-- On T_METHOD_C shift to state 58
-- On T_METAVAR shift to state 17
-- On T_LNUMBER shift to state 59
-- On T_LIST shift to state 69
-- On T_LINE shift to state 60
-- On T_LAMBDA_OPAR shift to state 73
-- On T_ISSET shift to state 133
-- On T_INT_CAST shift to state 135
-- On T_INSTANCEOF shift to state 52
-- On T_INCLUDE_ONCE shift to state 136
-- On T_INCLUDE shift to state 137
-- On T_INC shift to state 138
-- On T_IDENT shift to state 18
-- On T_FUNC_C shift to state 61
-- On T_FUNCTION shift to state 139
-- On T_FILE shift to state 62
-- On T_EXIT shift to state 160
-- On T_EVAL shift to state 162
-- On T_ENUM shift to state 19
-- On T_EMPTY shift to state 164
-- On T_ELLIPSIS shift to state 774
-- On T_DOUBLE_CAST shift to state 168
-- On T_DNUMBER shift to state 63
-- On T_DIR shift to state 64
-- On T_DEC shift to state 169
-- On T_CONSTANT_ENCAPSED_STRING shift to state 65
-- On T_CLONE shift to state 170
-- On T_CLASS_C shift to state 66
-- On T_BOOL_CAST shift to state 171
-- On T_AWAIT shift to state 172
-- On T_ASYNC shift to state 173
-- On T_ARRAY_CAST shift to state 200
-- On T_ARRAY shift to state 201
-- On TTILDE shift to state 204
-- On TPLUS shift to state 205
-- On TOPAR shift to state 206
-- On TOBRA shift to state 209
-- On TMINUS shift to state 210
-- On TGUIL shift to state 211
-- On TDOLLARDOLLAR shift to state 213
-- On TDOLLAR shift to state 214
-- On TBANG shift to state 216
-- On TBACKQUOTE shift to state 217
-- On TANTISLASH shift to state 85
-- On LDots shift to state 222
-- On simple_expr shift to state 223
-- On qualified_name shift to state 94
-- On qualified_class_name shift to state 225
-- On primary_expr shift to state 226
-- On new_expr shift to state 227
-- On namespace_name shift to state 102
-- On member_expr shift to state 228
-- On lambda_expr shift to state 231
-- On ident_in_name shift to state 57
-- On ident shift to state 56
-- On expr shift to state 778
-- On constant shift to state 239
-- On call_expr shift to state 240
## Reductions:

State 774:
## Known stack suffix:
## new_elseif_list T_ELSEIF TOPAR T_ELLIPSIS
## LR(1) items:
new_elseif_list -> new_elseif_list T_ELSEIF TOPAR T_ELLIPSIS . TCPAR TCOLON list(inner_statement) [ T_ENDIF T_ELSEIF T_ELSE ]
## Transitions:
-- On TCPAR shift to state 775
## Reductions:

State 775:
## Known stack suffix:
## new_elseif_list T_ELSEIF TOPAR T_ELLIPSIS TCPAR
## LR(1) items:
new_elseif_list -> new_elseif_list T_ELSEIF TOPAR T_ELLIPSIS TCPAR . TCOLON list(inner_statement) [ T_ENDIF T_ELSEIF T_ELSE ]
## Transitions:
-- On TCOLON shift to state 776
## Reductions:

State 776:
## Known stack suffix:
## new_elseif_list T_ELSEIF TOPAR T_ELLIPSIS TCPAR TCOLON
## LR(1) items:
new_elseif_list -> new_elseif_list T_ELSEIF TOPAR T_ELLIPSIS TCPAR TCOLON . list(inner_statement) [ T_ENDIF T_ELSEIF T_ELSE ]
## Transitions:
-- On T__AT shift to state 1
-- On T_YIELD shift to state 2
-- On T_WHILE shift to state 158
-- On T_VARIABLE shift to state 3
-- On T_USE shift to state 190
-- On T_UNSET_CAST shift to state 5
-- On T_UNSET shift to state 197
-- On T_TYPE shift to state 6
-- On T_TRY shift to state 391
-- On T_TRAIT_C shift to state 7
-- On T_TRAIT shift to state 393
-- On T_THROW shift to state 520
-- On T_SWITCH shift to state 525
-- On T_SUPER shift to state 8
-- On T_STRING_CAST shift to state 9
-- On T_STATIC shift to state 536
-- On T_START_HEREDOC shift to state 25
-- On T_SL shift to state 16
-- On T_SELF shift to state 40
-- On T_RETURN shift to state 553
-- On T_REQUIRE_ONCE shift to state 41
-- On T_REQUIRE shift to state 42
-- On T_PRINT shift to state 43
-- On T_PARENT shift to state 44
-- On T_OPEN_TAG_WITH_ECHO shift to state 558
-- On T_OBJECT_CAST shift to state 45
-- On T_NEW shift to state 46
-- On T_NAMESPACE_C shift to state 49
-- On T_NAMESPACE shift to state 50
-- On T_METHOD_C shift to state 58
-- On T_METAVAR shift to state 17
-- On T_LNUMBER shift to state 59
-- On T_LIST shift to state 69
-- On T_LINE shift to state 60
-- On T_LAMBDA_OPAR shift to state 73
-- On T_ISSET shift to state 133
-- On T_INT_CAST shift to state 135
-- On T_INTERFACE shift to state 563
-- On T_INSTANCEOF shift to state 52
-- On T_INLINE_HTML shift to state 576
-- On T_INCLUDE_ONCE shift to state 136
-- On T_INCLUDE shift to state 137
-- On T_INC shift to state 138
-- On T_IF shift to state 577
-- On T_IDENT shift to state 18
-- On T_GLOBAL shift to state 587
-- On T_FUNC_C shift to state 61
-- On T_FUNCTION shift to state 657
-- On T_FOREACH shift to state 600
-- On T_FOR shift to state 624
-- On T_FINAL shift to state 666
-- On T_FILE shift to state 62
-- On T_EXIT shift to state 160
-- On T_EVAL shift to state 162
-- On T_ENUM shift to state 668
-- On T_EMPTY shift to state 164
-- On T_ELLIPSIS shift to state 635
-- On T_ECHO shift to state 636
-- On T_DOUBLE_CAST shift to state 168
-- On T_DO shift to state 644
-- On T_DNUMBER shift to state 63
-- On T_DIR shift to state 64
-- On T_DECLARE shift to state 645
-- On T_DEC shift to state 169
-- On T_CONTINUE shift to state 649
-- On T_CONSTANT_ENCAPSED_STRING shift to state 65
-- On T_CLONE shift to state 170
-- On T_CLASS_C shift to state 66
-- On T_CLASS shift to state 682
-- On T_BREAK shift to state 652
-- On T_BOOL_CAST shift to state 171
-- On T_AWAIT shift to state 172
-- On T_ASYNC shift to state 683
-- On T_ARRAY_CAST shift to state 200
-- On T_ARRAY shift to state 201
-- On T_ABSTRACT shift to state 694
-- On TTILDE shift to state 204
-- On TSEMICOLON shift to state 655
-- On TPLUS shift to state 205
-- On TOPAR shift to state 206
-- On TOBRACE shift to state 656
-- On TOBRA shift to state 209
-- On TMINUS shift to state 210
-- On TGUIL shift to state 211
-- On TDOLLARDOLLAR shift to state 213
-- On TDOLLAR shift to state 214
-- On TBANG shift to state 216
-- On TBACKQUOTE shift to state 217
-- On TANTISLASH shift to state 85
-- On LDots shift to state 222
-- On unticked_function_declaration shift to state 696
-- On unticked_class_declaration shift to state 697
-- On statement shift to state 698
-- On simple_expr shift to state 223
-- On qualified_name shift to state 94
-- On qualified_class_name shift to state 225
-- On primary_expr shift to state 226
-- On new_expr shift to state 227
-- On namespace_name shift to state 102
-- On member_expr shift to state 228
-- On list(inner_statement) shift to state 777
-- On lambda_expr shift to state 231
-- On inner_statement shift to state 701
-- On ident_in_name shift to state 57
-- On ident shift to state 56
-- On function_declaration shift to state 703
-- On expr shift to state 704
-- On constant shift to state 239
-- On class_entry_type shift to state 706
-- On class_declaration shift to state 716
-- On call_expr shift to state 240
-- On attributes shift to state 717
## Reductions:
-- On T_ENDIF T_ELSEIF T_ELSE
--   reduce production list(inner_statement) ->

State 777:
## Known stack suffix:
## new_elseif_list T_ELSEIF TOPAR T_ELLIPSIS TCPAR TCOLON list(inner_statement)
## LR(1) items:
new_elseif_list -> new_elseif_list T_ELSEIF TOPAR T_ELLIPSIS TCPAR TCOLON list(inner_statement) . [ T_ENDIF T_ELSEIF T_ELSE ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production new_elseif_list -> new_elseif_list T_ELSEIF TOPAR T_ELLIPSIS TCPAR TCOLON list(inner_statement)

State 778:
## Known stack suffix:
## new_elseif_list T_ELSEIF TOPAR expr
## LR(1) items:
expr -> expr . T_INC [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . T_DEC [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . T_BOOLEAN_OR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . T_BOOLEAN_AND expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . T_LOGICAL_OR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . T_LOGICAL_AND expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . T_LOGICAL_XOR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . TPLUS expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . TMINUS expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . TMUL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . TDIV expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . TMOD expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . TPOW expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . TAND expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . TOR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . TXOR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . T_SL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . T_SR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . TDOT expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . T_IS_IDENTICAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . T_IS_NOT_IDENTICAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . T_IS_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . T_IS_NOT_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . TSMALLER expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . T_IS_SMALLER_OR_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . TGREATER expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . T_IS_GREATER_OR_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . T_ROCKET expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . TQUESTION expr TCOLON expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . TQUESTION TCOLON expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . TQUESTION TQUESTION expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . T_INSTANCEOF expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
new_elseif_list -> new_elseif_list T_ELSEIF TOPAR expr . TCPAR TCOLON list(inner_statement) [ T_ENDIF T_ELSEIF T_ELSE ]
## Transitions:
-- On T_SR shift to state 233
-- On T_SL shift to state 244
-- On T_ROCKET shift to state 260
-- On T_LOGICAL_XOR shift to state 270
-- On T_LOGICAL_OR shift to state 298
-- On T_LOGICAL_AND shift to state 272
-- On T_IS_SMALLER_OR_EQUAL shift to state 262
-- On T_IS_NOT_IDENTICAL shift to state 274
-- On T_IS_NOT_EQUAL shift to state 276
-- On T_IS_IDENTICAL shift to state 278
-- On T_IS_GREATER_OR_EQUAL shift to state 264
-- On T_IS_EQUAL shift to state 280
-- On T_INSTANCEOF shift to state 235
-- On T_INC shift to state 237
-- On T_DEC shift to state 238
-- On T_BOOLEAN_OR shift to state 282
-- On T_BOOLEAN_AND shift to state 284
-- On TXOR shift to state 286
-- On TSMALLER shift to state 266
-- On TQUESTION shift to state 292
-- On TPOW shift to state 246
-- On TPLUS shift to state 248
-- On TOR shift to state 290
-- On TMUL shift to state 250
-- On TMOD shift to state 252
-- On TMINUS shift to state 256
-- On TGREATER shift to state 268
-- On TDOT shift to state 258
-- On TDIV shift to state 254
-- On TCPAR shift to state 779
-- On TAND shift to state 288
## Reductions:

State 779:
## Known stack suffix:
## new_elseif_list T_ELSEIF TOPAR expr TCPAR
## LR(1) items:
new_elseif_list -> new_elseif_list T_ELSEIF TOPAR expr TCPAR . TCOLON list(inner_statement) [ T_ENDIF T_ELSEIF T_ELSE ]
## Transitions:
-- On TCOLON shift to state 780
## Reductions:

State 780:
## Known stack suffix:
## new_elseif_list T_ELSEIF TOPAR expr TCPAR TCOLON
## LR(1) items:
new_elseif_list -> new_elseif_list T_ELSEIF TOPAR expr TCPAR TCOLON . list(inner_statement) [ T_ENDIF T_ELSEIF T_ELSE ]
## Transitions:
-- On T__AT shift to state 1
-- On T_YIELD shift to state 2
-- On T_WHILE shift to state 158
-- On T_VARIABLE shift to state 3
-- On T_USE shift to state 190
-- On T_UNSET_CAST shift to state 5
-- On T_UNSET shift to state 197
-- On T_TYPE shift to state 6
-- On T_TRY shift to state 391
-- On T_TRAIT_C shift to state 7
-- On T_TRAIT shift to state 393
-- On T_THROW shift to state 520
-- On T_SWITCH shift to state 525
-- On T_SUPER shift to state 8
-- On T_STRING_CAST shift to state 9
-- On T_STATIC shift to state 536
-- On T_START_HEREDOC shift to state 25
-- On T_SL shift to state 16
-- On T_SELF shift to state 40
-- On T_RETURN shift to state 553
-- On T_REQUIRE_ONCE shift to state 41
-- On T_REQUIRE shift to state 42
-- On T_PRINT shift to state 43
-- On T_PARENT shift to state 44
-- On T_OPEN_TAG_WITH_ECHO shift to state 558
-- On T_OBJECT_CAST shift to state 45
-- On T_NEW shift to state 46
-- On T_NAMESPACE_C shift to state 49
-- On T_NAMESPACE shift to state 50
-- On T_METHOD_C shift to state 58
-- On T_METAVAR shift to state 17
-- On T_LNUMBER shift to state 59
-- On T_LIST shift to state 69
-- On T_LINE shift to state 60
-- On T_LAMBDA_OPAR shift to state 73
-- On T_ISSET shift to state 133
-- On T_INT_CAST shift to state 135
-- On T_INTERFACE shift to state 563
-- On T_INSTANCEOF shift to state 52
-- On T_INLINE_HTML shift to state 576
-- On T_INCLUDE_ONCE shift to state 136
-- On T_INCLUDE shift to state 137
-- On T_INC shift to state 138
-- On T_IF shift to state 577
-- On T_IDENT shift to state 18
-- On T_GLOBAL shift to state 587
-- On T_FUNC_C shift to state 61
-- On T_FUNCTION shift to state 657
-- On T_FOREACH shift to state 600
-- On T_FOR shift to state 624
-- On T_FINAL shift to state 666
-- On T_FILE shift to state 62
-- On T_EXIT shift to state 160
-- On T_EVAL shift to state 162
-- On T_ENUM shift to state 668
-- On T_EMPTY shift to state 164
-- On T_ELLIPSIS shift to state 635
-- On T_ECHO shift to state 636
-- On T_DOUBLE_CAST shift to state 168
-- On T_DO shift to state 644
-- On T_DNUMBER shift to state 63
-- On T_DIR shift to state 64
-- On T_DECLARE shift to state 645
-- On T_DEC shift to state 169
-- On T_CONTINUE shift to state 649
-- On T_CONSTANT_ENCAPSED_STRING shift to state 65
-- On T_CLONE shift to state 170
-- On T_CLASS_C shift to state 66
-- On T_CLASS shift to state 682
-- On T_BREAK shift to state 652
-- On T_BOOL_CAST shift to state 171
-- On T_AWAIT shift to state 172
-- On T_ASYNC shift to state 683
-- On T_ARRAY_CAST shift to state 200
-- On T_ARRAY shift to state 201
-- On T_ABSTRACT shift to state 694
-- On TTILDE shift to state 204
-- On TSEMICOLON shift to state 655
-- On TPLUS shift to state 205
-- On TOPAR shift to state 206
-- On TOBRACE shift to state 656
-- On TOBRA shift to state 209
-- On TMINUS shift to state 210
-- On TGUIL shift to state 211
-- On TDOLLARDOLLAR shift to state 213
-- On TDOLLAR shift to state 214
-- On TBANG shift to state 216
-- On TBACKQUOTE shift to state 217
-- On TANTISLASH shift to state 85
-- On LDots shift to state 222
-- On unticked_function_declaration shift to state 696
-- On unticked_class_declaration shift to state 697
-- On statement shift to state 698
-- On simple_expr shift to state 223
-- On qualified_name shift to state 94
-- On qualified_class_name shift to state 225
-- On primary_expr shift to state 226
-- On new_expr shift to state 227
-- On namespace_name shift to state 102
-- On member_expr shift to state 228
-- On list(inner_statement) shift to state 781
-- On lambda_expr shift to state 231
-- On inner_statement shift to state 701
-- On ident_in_name shift to state 57
-- On ident shift to state 56
-- On function_declaration shift to state 703
-- On expr shift to state 704
-- On constant shift to state 239
-- On class_entry_type shift to state 706
-- On class_declaration shift to state 716
-- On call_expr shift to state 240
-- On attributes shift to state 717
## Reductions:
-- On T_ENDIF T_ELSEIF T_ELSE
--   reduce production list(inner_statement) ->

State 781:
## Known stack suffix:
## new_elseif_list T_ELSEIF TOPAR expr TCPAR TCOLON list(inner_statement)
## LR(1) items:
new_elseif_list -> new_elseif_list T_ELSEIF TOPAR expr TCPAR TCOLON list(inner_statement) . [ T_ENDIF T_ELSEIF T_ELSE ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production new_elseif_list -> new_elseif_list T_ELSEIF TOPAR expr TCPAR TCOLON list(inner_statement)

State 782:
## Known stack suffix:
## T_ELSE
## LR(1) items:
new_else_single -> T_ELSE . TCOLON list(inner_statement) [ T_ENDIF ]
## Transitions:
-- On TCOLON shift to state 783
## Reductions:

State 783:
## Known stack suffix:
## T_ELSE TCOLON
## LR(1) items:
new_else_single -> T_ELSE TCOLON . list(inner_statement) [ T_ENDIF ]
## Transitions:
-- On T__AT shift to state 1
-- On T_YIELD shift to state 2
-- On T_WHILE shift to state 158
-- On T_VARIABLE shift to state 3
-- On T_USE shift to state 190
-- On T_UNSET_CAST shift to state 5
-- On T_UNSET shift to state 197
-- On T_TYPE shift to state 6
-- On T_TRY shift to state 391
-- On T_TRAIT_C shift to state 7
-- On T_TRAIT shift to state 393
-- On T_THROW shift to state 520
-- On T_SWITCH shift to state 525
-- On T_SUPER shift to state 8
-- On T_STRING_CAST shift to state 9
-- On T_STATIC shift to state 536
-- On T_START_HEREDOC shift to state 25
-- On T_SL shift to state 16
-- On T_SELF shift to state 40
-- On T_RETURN shift to state 553
-- On T_REQUIRE_ONCE shift to state 41
-- On T_REQUIRE shift to state 42
-- On T_PRINT shift to state 43
-- On T_PARENT shift to state 44
-- On T_OPEN_TAG_WITH_ECHO shift to state 558
-- On T_OBJECT_CAST shift to state 45
-- On T_NEW shift to state 46
-- On T_NAMESPACE_C shift to state 49
-- On T_NAMESPACE shift to state 50
-- On T_METHOD_C shift to state 58
-- On T_METAVAR shift to state 17
-- On T_LNUMBER shift to state 59
-- On T_LIST shift to state 69
-- On T_LINE shift to state 60
-- On T_LAMBDA_OPAR shift to state 73
-- On T_ISSET shift to state 133
-- On T_INT_CAST shift to state 135
-- On T_INTERFACE shift to state 563
-- On T_INSTANCEOF shift to state 52
-- On T_INLINE_HTML shift to state 576
-- On T_INCLUDE_ONCE shift to state 136
-- On T_INCLUDE shift to state 137
-- On T_INC shift to state 138
-- On T_IF shift to state 577
-- On T_IDENT shift to state 18
-- On T_GLOBAL shift to state 587
-- On T_FUNC_C shift to state 61
-- On T_FUNCTION shift to state 657
-- On T_FOREACH shift to state 600
-- On T_FOR shift to state 624
-- On T_FINAL shift to state 666
-- On T_FILE shift to state 62
-- On T_EXIT shift to state 160
-- On T_EVAL shift to state 162
-- On T_ENUM shift to state 668
-- On T_EMPTY shift to state 164
-- On T_ELLIPSIS shift to state 635
-- On T_ECHO shift to state 636
-- On T_DOUBLE_CAST shift to state 168
-- On T_DO shift to state 644
-- On T_DNUMBER shift to state 63
-- On T_DIR shift to state 64
-- On T_DECLARE shift to state 645
-- On T_DEC shift to state 169
-- On T_CONTINUE shift to state 649
-- On T_CONSTANT_ENCAPSED_STRING shift to state 65
-- On T_CLONE shift to state 170
-- On T_CLASS_C shift to state 66
-- On T_CLASS shift to state 682
-- On T_BREAK shift to state 652
-- On T_BOOL_CAST shift to state 171
-- On T_AWAIT shift to state 172
-- On T_ASYNC shift to state 683
-- On T_ARRAY_CAST shift to state 200
-- On T_ARRAY shift to state 201
-- On T_ABSTRACT shift to state 694
-- On TTILDE shift to state 204
-- On TSEMICOLON shift to state 655
-- On TPLUS shift to state 205
-- On TOPAR shift to state 206
-- On TOBRACE shift to state 656
-- On TOBRA shift to state 209
-- On TMINUS shift to state 210
-- On TGUIL shift to state 211
-- On TDOLLARDOLLAR shift to state 213
-- On TDOLLAR shift to state 214
-- On TBANG shift to state 216
-- On TBACKQUOTE shift to state 217
-- On TANTISLASH shift to state 85
-- On LDots shift to state 222
-- On unticked_function_declaration shift to state 696
-- On unticked_class_declaration shift to state 697
-- On statement shift to state 698
-- On simple_expr shift to state 223
-- On qualified_name shift to state 94
-- On qualified_class_name shift to state 225
-- On primary_expr shift to state 226
-- On new_expr shift to state 227
-- On namespace_name shift to state 102
-- On member_expr shift to state 228
-- On list(inner_statement) shift to state 784
-- On lambda_expr shift to state 231
-- On inner_statement shift to state 701
-- On ident_in_name shift to state 57
-- On ident shift to state 56
-- On function_declaration shift to state 703
-- On expr shift to state 704
-- On constant shift to state 239
-- On class_entry_type shift to state 706
-- On class_declaration shift to state 716
-- On call_expr shift to state 240
-- On attributes shift to state 717
## Reductions:
-- On T_ENDIF
--   reduce production list(inner_statement) ->

State 784:
## Known stack suffix:
## T_ELSE TCOLON list(inner_statement)
## LR(1) items:
new_else_single -> T_ELSE TCOLON list(inner_statement) . [ T_ENDIF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production new_else_single -> T_ELSE TCOLON list(inner_statement)

State 785:
## Known stack suffix:
## T_IF TOPAR T_ELLIPSIS TCPAR TCOLON list(inner_statement) new_elseif_list new_else_single
## LR(1) items:
statement -> T_IF TOPAR T_ELLIPSIS TCPAR TCOLON list(inner_statement) new_elseif_list new_else_single . T_ENDIF TSEMICOLON [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_ENDWHILE T_ENDSWITCH T_ENDIF T_ENDFOREACH T_ENDFOR T_ENDDECLARE T_EMPTY T_ELSEIF T_ELSE T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DEFAULT T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_CASE T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
## Transitions:
-- On T_ENDIF shift to state 786
## Reductions:

State 786:
## Known stack suffix:
## T_IF TOPAR T_ELLIPSIS TCPAR TCOLON list(inner_statement) new_elseif_list new_else_single T_ENDIF
## LR(1) items:
statement -> T_IF TOPAR T_ELLIPSIS TCPAR TCOLON list(inner_statement) new_elseif_list new_else_single T_ENDIF . TSEMICOLON [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_ENDWHILE T_ENDSWITCH T_ENDIF T_ENDFOREACH T_ENDFOR T_ENDDECLARE T_EMPTY T_ELSEIF T_ELSE T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DEFAULT T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_CASE T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
## Transitions:
-- On TSEMICOLON shift to state 787
## Reductions:

State 787:
## Known stack suffix:
## T_IF TOPAR T_ELLIPSIS TCPAR TCOLON list(inner_statement) new_elseif_list new_else_single T_ENDIF TSEMICOLON
## LR(1) items:
statement -> T_IF TOPAR T_ELLIPSIS TCPAR TCOLON list(inner_statement) new_elseif_list new_else_single T_ENDIF TSEMICOLON . [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_ENDWHILE T_ENDSWITCH T_ENDIF T_ENDFOREACH T_ENDFOR T_ENDDECLARE T_EMPTY T_ELSEIF T_ELSE T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DEFAULT T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_CASE T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production statement -> T_IF TOPAR T_ELLIPSIS TCPAR TCOLON list(inner_statement) new_elseif_list new_else_single T_ENDIF TSEMICOLON

State 788:
## Known stack suffix:
## T_IF TOPAR T_ELLIPSIS TCPAR statement
## LR(1) items:
statement -> T_IF TOPAR T_ELLIPSIS TCPAR statement . elseif_list else_single [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_ENDWHILE T_ENDSWITCH T_ENDIF T_ENDFOREACH T_ENDFOR T_ENDDECLARE T_EMPTY T_ELSEIF T_ELSE T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DEFAULT T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_CASE T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
## Transitions:
-- On elseif_list shift to state 789
## Default reduction:
-- After reading the next token, reduce production elseif_list ->

State 789:
## Known stack suffix:
## T_IF TOPAR T_ELLIPSIS TCPAR statement elseif_list
## LR(1) items:
elseif_list -> elseif_list . T_ELSEIF TOPAR expr TCPAR statement [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_ENDWHILE T_ENDSWITCH T_ENDIF T_ENDFOREACH T_ENDFOR T_ENDDECLARE T_EMPTY T_ELSEIF T_ELSE T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DEFAULT T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_CASE T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
elseif_list -> elseif_list . T_ELSEIF TOPAR T_ELLIPSIS TCPAR statement [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_ENDWHILE T_ENDSWITCH T_ENDIF T_ENDFOREACH T_ENDFOR T_ENDDECLARE T_EMPTY T_ELSEIF T_ELSE T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DEFAULT T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_CASE T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
statement -> T_IF TOPAR T_ELLIPSIS TCPAR statement elseif_list . else_single [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_ENDWHILE T_ENDSWITCH T_ENDIF T_ENDFOREACH T_ENDFOR T_ENDDECLARE T_EMPTY T_ELSEIF T_ELSE T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DEFAULT T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_CASE T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
## Transitions:
-- On T_ELSEIF shift to state 790
-- On T_ELSE shift to state 798
-- On else_single shift to state 800
## Reductions:
-- On T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_ENDWHILE T_ENDSWITCH T_ENDIF T_ENDFOREACH T_ENDFOR T_ENDDECLARE T_EMPTY T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DEFAULT T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_CASE T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF
--   reduce production else_single ->

State 790:
## Known stack suffix:
## elseif_list T_ELSEIF
## LR(1) items:
elseif_list -> elseif_list T_ELSEIF . TOPAR expr TCPAR statement [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_ENDWHILE T_ENDSWITCH T_ENDIF T_ENDFOREACH T_ENDFOR T_ENDDECLARE T_EMPTY T_ELSEIF T_ELSE T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DEFAULT T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_CASE T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
elseif_list -> elseif_list T_ELSEIF . TOPAR T_ELLIPSIS TCPAR statement [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_ENDWHILE T_ENDSWITCH T_ENDIF T_ENDFOREACH T_ENDFOR T_ENDDECLARE T_EMPTY T_ELSEIF T_ELSE T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DEFAULT T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_CASE T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
## Transitions:
-- On TOPAR shift to state 791
## Reductions:

State 791:
## Known stack suffix:
## elseif_list T_ELSEIF TOPAR
## LR(1) items:
elseif_list -> elseif_list T_ELSEIF TOPAR . expr TCPAR statement [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_ENDWHILE T_ENDSWITCH T_ENDIF T_ENDFOREACH T_ENDFOR T_ENDDECLARE T_EMPTY T_ELSEIF T_ELSE T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DEFAULT T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_CASE T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
elseif_list -> elseif_list T_ELSEIF TOPAR . T_ELLIPSIS TCPAR statement [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_ENDWHILE T_ENDSWITCH T_ENDIF T_ENDFOREACH T_ENDFOR T_ENDDECLARE T_EMPTY T_ELSEIF T_ELSE T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DEFAULT T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_CASE T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
## Transitions:
-- On T__AT shift to state 1
-- On T_YIELD shift to state 2
-- On T_VARIABLE shift to state 3
-- On T_UNSET_CAST shift to state 5
-- On T_TYPE shift to state 6
-- On T_TRAIT_C shift to state 7
-- On T_SUPER shift to state 8
-- On T_STRING_CAST shift to state 9
-- On T_STATIC shift to state 10
-- On T_START_HEREDOC shift to state 25
-- On T_SELF shift to state 40
-- On T_REQUIRE_ONCE shift to state 41
-- On T_REQUIRE shift to state 42
-- On T_PRINT shift to state 43
-- On T_PARENT shift to state 44
-- On T_OBJECT_CAST shift to state 45
-- On T_NEW shift to state 46
-- On T_NAMESPACE_C shift to state 49
-- On T_NAMESPACE shift to state 50
-- On T_METHOD_C shift to state 58
-- On T_METAVAR shift to state 17
-- On T_LNUMBER shift to state 59
-- On T_LIST shift to state 69
-- On T_LINE shift to state 60
-- On T_LAMBDA_OPAR shift to state 73
-- On T_ISSET shift to state 133
-- On T_INT_CAST shift to state 135
-- On T_INSTANCEOF shift to state 52
-- On T_INCLUDE_ONCE shift to state 136
-- On T_INCLUDE shift to state 137
-- On T_INC shift to state 138
-- On T_IDENT shift to state 18
-- On T_FUNC_C shift to state 61
-- On T_FUNCTION shift to state 139
-- On T_FILE shift to state 62
-- On T_EXIT shift to state 160
-- On T_EVAL shift to state 162
-- On T_ENUM shift to state 19
-- On T_EMPTY shift to state 164
-- On T_ELLIPSIS shift to state 792
-- On T_DOUBLE_CAST shift to state 168
-- On T_DNUMBER shift to state 63
-- On T_DIR shift to state 64
-- On T_DEC shift to state 169
-- On T_CONSTANT_ENCAPSED_STRING shift to state 65
-- On T_CLONE shift to state 170
-- On T_CLASS_C shift to state 66
-- On T_BOOL_CAST shift to state 171
-- On T_AWAIT shift to state 172
-- On T_ASYNC shift to state 173
-- On T_ARRAY_CAST shift to state 200
-- On T_ARRAY shift to state 201
-- On TTILDE shift to state 204
-- On TPLUS shift to state 205
-- On TOPAR shift to state 206
-- On TOBRA shift to state 209
-- On TMINUS shift to state 210
-- On TGUIL shift to state 211
-- On TDOLLARDOLLAR shift to state 213
-- On TDOLLAR shift to state 214
-- On TBANG shift to state 216
-- On TBACKQUOTE shift to state 217
-- On TANTISLASH shift to state 85
-- On LDots shift to state 222
-- On simple_expr shift to state 223
-- On qualified_name shift to state 94
-- On qualified_class_name shift to state 225
-- On primary_expr shift to state 226
-- On new_expr shift to state 227
-- On namespace_name shift to state 102
-- On member_expr shift to state 228
-- On lambda_expr shift to state 231
-- On ident_in_name shift to state 57
-- On ident shift to state 56
-- On expr shift to state 795
-- On constant shift to state 239
-- On call_expr shift to state 240
## Reductions:

State 792:
## Known stack suffix:
## elseif_list T_ELSEIF TOPAR T_ELLIPSIS
## LR(1) items:
elseif_list -> elseif_list T_ELSEIF TOPAR T_ELLIPSIS . TCPAR statement [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_ENDWHILE T_ENDSWITCH T_ENDIF T_ENDFOREACH T_ENDFOR T_ENDDECLARE T_EMPTY T_ELSEIF T_ELSE T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DEFAULT T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_CASE T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
## Transitions:
-- On TCPAR shift to state 793
## Reductions:

State 793:
## Known stack suffix:
## elseif_list T_ELSEIF TOPAR T_ELLIPSIS TCPAR
## LR(1) items:
elseif_list -> elseif_list T_ELSEIF TOPAR T_ELLIPSIS TCPAR . statement [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_ENDWHILE T_ENDSWITCH T_ENDIF T_ENDFOREACH T_ENDFOR T_ENDDECLARE T_EMPTY T_ELSEIF T_ELSE T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DEFAULT T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_CASE T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
## Transitions:
-- On T__AT shift to state 1
-- On T_YIELD shift to state 2
-- On T_WHILE shift to state 158
-- On T_VARIABLE shift to state 3
-- On T_USE shift to state 190
-- On T_UNSET_CAST shift to state 5
-- On T_UNSET shift to state 197
-- On T_TYPE shift to state 6
-- On T_TRY shift to state 391
-- On T_TRAIT_C shift to state 7
-- On T_THROW shift to state 520
-- On T_SWITCH shift to state 525
-- On T_SUPER shift to state 8
-- On T_STRING_CAST shift to state 9
-- On T_STATIC shift to state 581
-- On T_START_HEREDOC shift to state 25
-- On T_SELF shift to state 40
-- On T_RETURN shift to state 553
-- On T_REQUIRE_ONCE shift to state 41
-- On T_REQUIRE shift to state 42
-- On T_PRINT shift to state 43
-- On T_PARENT shift to state 44
-- On T_OPEN_TAG_WITH_ECHO shift to state 558
-- On T_OBJECT_CAST shift to state 45
-- On T_NEW shift to state 46
-- On T_NAMESPACE_C shift to state 49
-- On T_NAMESPACE shift to state 50
-- On T_METHOD_C shift to state 58
-- On T_METAVAR shift to state 17
-- On T_LNUMBER shift to state 59
-- On T_LIST shift to state 69
-- On T_LINE shift to state 60
-- On T_LAMBDA_OPAR shift to state 73
-- On T_ISSET shift to state 133
-- On T_INT_CAST shift to state 135
-- On T_INSTANCEOF shift to state 52
-- On T_INLINE_HTML shift to state 576
-- On T_INCLUDE_ONCE shift to state 136
-- On T_INCLUDE shift to state 137
-- On T_INC shift to state 138
-- On T_IF shift to state 577
-- On T_IDENT shift to state 18
-- On T_GLOBAL shift to state 587
-- On T_FUNC_C shift to state 61
-- On T_FUNCTION shift to state 139
-- On T_FOREACH shift to state 600
-- On T_FOR shift to state 624
-- On T_FILE shift to state 62
-- On T_EXIT shift to state 160
-- On T_EVAL shift to state 162
-- On T_ENUM shift to state 19
-- On T_EMPTY shift to state 164
-- On T_ELLIPSIS shift to state 635
-- On T_ECHO shift to state 636
-- On T_DOUBLE_CAST shift to state 168
-- On T_DO shift to state 644
-- On T_DNUMBER shift to state 63
-- On T_DIR shift to state 64
-- On T_DECLARE shift to state 645
-- On T_DEC shift to state 169
-- On T_CONTINUE shift to state 649
-- On T_CONSTANT_ENCAPSED_STRING shift to state 65
-- On T_CLONE shift to state 170
-- On T_CLASS_C shift to state 66
-- On T_BREAK shift to state 652
-- On T_BOOL_CAST shift to state 171
-- On T_AWAIT shift to state 172
-- On T_ASYNC shift to state 173
-- On T_ARRAY_CAST shift to state 200
-- On T_ARRAY shift to state 201
-- On TTILDE shift to state 204
-- On TSEMICOLON shift to state 655
-- On TPLUS shift to state 205
-- On TOPAR shift to state 206
-- On TOBRACE shift to state 656
-- On TOBRA shift to state 209
-- On TMINUS shift to state 210
-- On TGUIL shift to state 211
-- On TDOLLARDOLLAR shift to state 213
-- On TDOLLAR shift to state 214
-- On TBANG shift to state 216
-- On TBACKQUOTE shift to state 217
-- On TANTISLASH shift to state 85
-- On LDots shift to state 222
-- On statement shift to state 794
-- On simple_expr shift to state 223
-- On qualified_name shift to state 94
-- On qualified_class_name shift to state 225
-- On primary_expr shift to state 226
-- On new_expr shift to state 227
-- On namespace_name shift to state 102
-- On member_expr shift to state 228
-- On lambda_expr shift to state 231
-- On ident_in_name shift to state 57
-- On ident shift to state 56
-- On expr shift to state 704
-- On constant shift to state 239
-- On call_expr shift to state 240
## Reductions:

State 794:
## Known stack suffix:
## elseif_list T_ELSEIF TOPAR T_ELLIPSIS TCPAR statement
## LR(1) items:
elseif_list -> elseif_list T_ELSEIF TOPAR T_ELLIPSIS TCPAR statement . [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_ENDWHILE T_ENDSWITCH T_ENDIF T_ENDFOREACH T_ENDFOR T_ENDDECLARE T_EMPTY T_ELSEIF T_ELSE T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DEFAULT T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_CASE T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production elseif_list -> elseif_list T_ELSEIF TOPAR T_ELLIPSIS TCPAR statement

State 795:
## Known stack suffix:
## elseif_list T_ELSEIF TOPAR expr
## LR(1) items:
elseif_list -> elseif_list T_ELSEIF TOPAR expr . TCPAR statement [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_ENDWHILE T_ENDSWITCH T_ENDIF T_ENDFOREACH T_ENDFOR T_ENDDECLARE T_EMPTY T_ELSEIF T_ELSE T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DEFAULT T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_CASE T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
expr -> expr . T_INC [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . T_DEC [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . T_BOOLEAN_OR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . T_BOOLEAN_AND expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . T_LOGICAL_OR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . T_LOGICAL_AND expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . T_LOGICAL_XOR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . TPLUS expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . TMINUS expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . TMUL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . TDIV expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . TMOD expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . TPOW expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . TAND expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . TOR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . TXOR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . T_SL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . T_SR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . TDOT expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . T_IS_IDENTICAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . T_IS_NOT_IDENTICAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . T_IS_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . T_IS_NOT_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . TSMALLER expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . T_IS_SMALLER_OR_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . TGREATER expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . T_IS_GREATER_OR_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . T_ROCKET expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . TQUESTION expr TCOLON expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . TQUESTION TCOLON expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . TQUESTION TQUESTION expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . T_INSTANCEOF expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
## Transitions:
-- On T_SR shift to state 233
-- On T_SL shift to state 244
-- On T_ROCKET shift to state 260
-- On T_LOGICAL_XOR shift to state 270
-- On T_LOGICAL_OR shift to state 298
-- On T_LOGICAL_AND shift to state 272
-- On T_IS_SMALLER_OR_EQUAL shift to state 262
-- On T_IS_NOT_IDENTICAL shift to state 274
-- On T_IS_NOT_EQUAL shift to state 276
-- On T_IS_IDENTICAL shift to state 278
-- On T_IS_GREATER_OR_EQUAL shift to state 264
-- On T_IS_EQUAL shift to state 280
-- On T_INSTANCEOF shift to state 235
-- On T_INC shift to state 237
-- On T_DEC shift to state 238
-- On T_BOOLEAN_OR shift to state 282
-- On T_BOOLEAN_AND shift to state 284
-- On TXOR shift to state 286
-- On TSMALLER shift to state 266
-- On TQUESTION shift to state 292
-- On TPOW shift to state 246
-- On TPLUS shift to state 248
-- On TOR shift to state 290
-- On TMUL shift to state 250
-- On TMOD shift to state 252
-- On TMINUS shift to state 256
-- On TGREATER shift to state 268
-- On TDOT shift to state 258
-- On TDIV shift to state 254
-- On TCPAR shift to state 796
-- On TAND shift to state 288
## Reductions:

State 796:
## Known stack suffix:
## elseif_list T_ELSEIF TOPAR expr TCPAR
## LR(1) items:
elseif_list -> elseif_list T_ELSEIF TOPAR expr TCPAR . statement [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_ENDWHILE T_ENDSWITCH T_ENDIF T_ENDFOREACH T_ENDFOR T_ENDDECLARE T_EMPTY T_ELSEIF T_ELSE T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DEFAULT T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_CASE T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
## Transitions:
-- On T__AT shift to state 1
-- On T_YIELD shift to state 2
-- On T_WHILE shift to state 158
-- On T_VARIABLE shift to state 3
-- On T_USE shift to state 190
-- On T_UNSET_CAST shift to state 5
-- On T_UNSET shift to state 197
-- On T_TYPE shift to state 6
-- On T_TRY shift to state 391
-- On T_TRAIT_C shift to state 7
-- On T_THROW shift to state 520
-- On T_SWITCH shift to state 525
-- On T_SUPER shift to state 8
-- On T_STRING_CAST shift to state 9
-- On T_STATIC shift to state 581
-- On T_START_HEREDOC shift to state 25
-- On T_SELF shift to state 40
-- On T_RETURN shift to state 553
-- On T_REQUIRE_ONCE shift to state 41
-- On T_REQUIRE shift to state 42
-- On T_PRINT shift to state 43
-- On T_PARENT shift to state 44
-- On T_OPEN_TAG_WITH_ECHO shift to state 558
-- On T_OBJECT_CAST shift to state 45
-- On T_NEW shift to state 46
-- On T_NAMESPACE_C shift to state 49
-- On T_NAMESPACE shift to state 50
-- On T_METHOD_C shift to state 58
-- On T_METAVAR shift to state 17
-- On T_LNUMBER shift to state 59
-- On T_LIST shift to state 69
-- On T_LINE shift to state 60
-- On T_LAMBDA_OPAR shift to state 73
-- On T_ISSET shift to state 133
-- On T_INT_CAST shift to state 135
-- On T_INSTANCEOF shift to state 52
-- On T_INLINE_HTML shift to state 576
-- On T_INCLUDE_ONCE shift to state 136
-- On T_INCLUDE shift to state 137
-- On T_INC shift to state 138
-- On T_IF shift to state 577
-- On T_IDENT shift to state 18
-- On T_GLOBAL shift to state 587
-- On T_FUNC_C shift to state 61
-- On T_FUNCTION shift to state 139
-- On T_FOREACH shift to state 600
-- On T_FOR shift to state 624
-- On T_FILE shift to state 62
-- On T_EXIT shift to state 160
-- On T_EVAL shift to state 162
-- On T_ENUM shift to state 19
-- On T_EMPTY shift to state 164
-- On T_ELLIPSIS shift to state 635
-- On T_ECHO shift to state 636
-- On T_DOUBLE_CAST shift to state 168
-- On T_DO shift to state 644
-- On T_DNUMBER shift to state 63
-- On T_DIR shift to state 64
-- On T_DECLARE shift to state 645
-- On T_DEC shift to state 169
-- On T_CONTINUE shift to state 649
-- On T_CONSTANT_ENCAPSED_STRING shift to state 65
-- On T_CLONE shift to state 170
-- On T_CLASS_C shift to state 66
-- On T_BREAK shift to state 652
-- On T_BOOL_CAST shift to state 171
-- On T_AWAIT shift to state 172
-- On T_ASYNC shift to state 173
-- On T_ARRAY_CAST shift to state 200
-- On T_ARRAY shift to state 201
-- On TTILDE shift to state 204
-- On TSEMICOLON shift to state 655
-- On TPLUS shift to state 205
-- On TOPAR shift to state 206
-- On TOBRACE shift to state 656
-- On TOBRA shift to state 209
-- On TMINUS shift to state 210
-- On TGUIL shift to state 211
-- On TDOLLARDOLLAR shift to state 213
-- On TDOLLAR shift to state 214
-- On TBANG shift to state 216
-- On TBACKQUOTE shift to state 217
-- On TANTISLASH shift to state 85
-- On LDots shift to state 222
-- On statement shift to state 797
-- On simple_expr shift to state 223
-- On qualified_name shift to state 94
-- On qualified_class_name shift to state 225
-- On primary_expr shift to state 226
-- On new_expr shift to state 227
-- On namespace_name shift to state 102
-- On member_expr shift to state 228
-- On lambda_expr shift to state 231
-- On ident_in_name shift to state 57
-- On ident shift to state 56
-- On expr shift to state 704
-- On constant shift to state 239
-- On call_expr shift to state 240
## Reductions:

State 797:
## Known stack suffix:
## elseif_list T_ELSEIF TOPAR expr TCPAR statement
## LR(1) items:
elseif_list -> elseif_list T_ELSEIF TOPAR expr TCPAR statement . [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_ENDWHILE T_ENDSWITCH T_ENDIF T_ENDFOREACH T_ENDFOR T_ENDDECLARE T_EMPTY T_ELSEIF T_ELSE T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DEFAULT T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_CASE T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production elseif_list -> elseif_list T_ELSEIF TOPAR expr TCPAR statement

State 798:
## Known stack suffix:
## T_ELSE
## LR(1) items:
else_single -> T_ELSE . statement [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_ENDWHILE T_ENDSWITCH T_ENDIF T_ENDFOREACH T_ENDFOR T_ENDDECLARE T_EMPTY T_ELSEIF T_ELSE T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DEFAULT T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_CASE T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
## Transitions:
-- On T__AT shift to state 1
-- On T_YIELD shift to state 2
-- On T_WHILE shift to state 158
-- On T_VARIABLE shift to state 3
-- On T_USE shift to state 190
-- On T_UNSET_CAST shift to state 5
-- On T_UNSET shift to state 197
-- On T_TYPE shift to state 6
-- On T_TRY shift to state 391
-- On T_TRAIT_C shift to state 7
-- On T_THROW shift to state 520
-- On T_SWITCH shift to state 525
-- On T_SUPER shift to state 8
-- On T_STRING_CAST shift to state 9
-- On T_STATIC shift to state 581
-- On T_START_HEREDOC shift to state 25
-- On T_SELF shift to state 40
-- On T_RETURN shift to state 553
-- On T_REQUIRE_ONCE shift to state 41
-- On T_REQUIRE shift to state 42
-- On T_PRINT shift to state 43
-- On T_PARENT shift to state 44
-- On T_OPEN_TAG_WITH_ECHO shift to state 558
-- On T_OBJECT_CAST shift to state 45
-- On T_NEW shift to state 46
-- On T_NAMESPACE_C shift to state 49
-- On T_NAMESPACE shift to state 50
-- On T_METHOD_C shift to state 58
-- On T_METAVAR shift to state 17
-- On T_LNUMBER shift to state 59
-- On T_LIST shift to state 69
-- On T_LINE shift to state 60
-- On T_LAMBDA_OPAR shift to state 73
-- On T_ISSET shift to state 133
-- On T_INT_CAST shift to state 135
-- On T_INSTANCEOF shift to state 52
-- On T_INLINE_HTML shift to state 576
-- On T_INCLUDE_ONCE shift to state 136
-- On T_INCLUDE shift to state 137
-- On T_INC shift to state 138
-- On T_IF shift to state 577
-- On T_IDENT shift to state 18
-- On T_GLOBAL shift to state 587
-- On T_FUNC_C shift to state 61
-- On T_FUNCTION shift to state 139
-- On T_FOREACH shift to state 600
-- On T_FOR shift to state 624
-- On T_FILE shift to state 62
-- On T_EXIT shift to state 160
-- On T_EVAL shift to state 162
-- On T_ENUM shift to state 19
-- On T_EMPTY shift to state 164
-- On T_ELLIPSIS shift to state 635
-- On T_ECHO shift to state 636
-- On T_DOUBLE_CAST shift to state 168
-- On T_DO shift to state 644
-- On T_DNUMBER shift to state 63
-- On T_DIR shift to state 64
-- On T_DECLARE shift to state 645
-- On T_DEC shift to state 169
-- On T_CONTINUE shift to state 649
-- On T_CONSTANT_ENCAPSED_STRING shift to state 65
-- On T_CLONE shift to state 170
-- On T_CLASS_C shift to state 66
-- On T_BREAK shift to state 652
-- On T_BOOL_CAST shift to state 171
-- On T_AWAIT shift to state 172
-- On T_ASYNC shift to state 173
-- On T_ARRAY_CAST shift to state 200
-- On T_ARRAY shift to state 201
-- On TTILDE shift to state 204
-- On TSEMICOLON shift to state 655
-- On TPLUS shift to state 205
-- On TOPAR shift to state 206
-- On TOBRACE shift to state 656
-- On TOBRA shift to state 209
-- On TMINUS shift to state 210
-- On TGUIL shift to state 211
-- On TDOLLARDOLLAR shift to state 213
-- On TDOLLAR shift to state 214
-- On TBANG shift to state 216
-- On TBACKQUOTE shift to state 217
-- On TANTISLASH shift to state 85
-- On LDots shift to state 222
-- On statement shift to state 799
-- On simple_expr shift to state 223
-- On qualified_name shift to state 94
-- On qualified_class_name shift to state 225
-- On primary_expr shift to state 226
-- On new_expr shift to state 227
-- On namespace_name shift to state 102
-- On member_expr shift to state 228
-- On lambda_expr shift to state 231
-- On ident_in_name shift to state 57
-- On ident shift to state 56
-- On expr shift to state 704
-- On constant shift to state 239
-- On call_expr shift to state 240
## Reductions:

State 799:
## Known stack suffix:
## T_ELSE statement
## LR(1) items:
else_single -> T_ELSE statement . [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_ENDWHILE T_ENDSWITCH T_ENDIF T_ENDFOREACH T_ENDFOR T_ENDDECLARE T_EMPTY T_ELSEIF T_ELSE T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DEFAULT T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_CASE T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production else_single -> T_ELSE statement

State 800:
## Known stack suffix:
## T_IF TOPAR T_ELLIPSIS TCPAR statement elseif_list else_single
## LR(1) items:
statement -> T_IF TOPAR T_ELLIPSIS TCPAR statement elseif_list else_single . [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_ENDWHILE T_ENDSWITCH T_ENDIF T_ENDFOREACH T_ENDFOR T_ENDDECLARE T_EMPTY T_ELSEIF T_ELSE T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DEFAULT T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_CASE T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production statement -> T_IF TOPAR T_ELLIPSIS TCPAR statement elseif_list else_single

State 801:
## Known stack suffix:
## T_IF TOPAR expr
## LR(1) items:
expr -> expr . T_INC [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . T_DEC [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . T_BOOLEAN_OR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . T_BOOLEAN_AND expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . T_LOGICAL_OR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . T_LOGICAL_AND expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . T_LOGICAL_XOR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . TPLUS expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . TMINUS expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . TMUL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . TDIV expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . TMOD expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . TPOW expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . TAND expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . TOR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . TXOR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . T_SL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . T_SR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . TDOT expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . T_IS_IDENTICAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . T_IS_NOT_IDENTICAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . T_IS_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . T_IS_NOT_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . TSMALLER expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . T_IS_SMALLER_OR_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . TGREATER expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . T_IS_GREATER_OR_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . T_ROCKET expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . TQUESTION expr TCOLON expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . TQUESTION TCOLON expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . TQUESTION TQUESTION expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . T_INSTANCEOF expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
statement -> T_IF TOPAR expr . TCPAR statement elseif_list else_single [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_ENDWHILE T_ENDSWITCH T_ENDIF T_ENDFOREACH T_ENDFOR T_ENDDECLARE T_EMPTY T_ELSEIF T_ELSE T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DEFAULT T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_CASE T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
statement -> T_IF TOPAR expr . TCPAR TCOLON list(inner_statement) new_elseif_list new_else_single T_ENDIF TSEMICOLON [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_ENDWHILE T_ENDSWITCH T_ENDIF T_ENDFOREACH T_ENDFOR T_ENDDECLARE T_EMPTY T_ELSEIF T_ELSE T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DEFAULT T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_CASE T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
## Transitions:
-- On T_SR shift to state 233
-- On T_SL shift to state 244
-- On T_ROCKET shift to state 260
-- On T_LOGICAL_XOR shift to state 270
-- On T_LOGICAL_OR shift to state 298
-- On T_LOGICAL_AND shift to state 272
-- On T_IS_SMALLER_OR_EQUAL shift to state 262
-- On T_IS_NOT_IDENTICAL shift to state 274
-- On T_IS_NOT_EQUAL shift to state 276
-- On T_IS_IDENTICAL shift to state 278
-- On T_IS_GREATER_OR_EQUAL shift to state 264
-- On T_IS_EQUAL shift to state 280
-- On T_INSTANCEOF shift to state 235
-- On T_INC shift to state 237
-- On T_DEC shift to state 238
-- On T_BOOLEAN_OR shift to state 282
-- On T_BOOLEAN_AND shift to state 284
-- On TXOR shift to state 286
-- On TSMALLER shift to state 266
-- On TQUESTION shift to state 292
-- On TPOW shift to state 246
-- On TPLUS shift to state 248
-- On TOR shift to state 290
-- On TMUL shift to state 250
-- On TMOD shift to state 252
-- On TMINUS shift to state 256
-- On TGREATER shift to state 268
-- On TDOT shift to state 258
-- On TDIV shift to state 254
-- On TCPAR shift to state 802
-- On TAND shift to state 288
## Reductions:

State 802:
## Known stack suffix:
## T_IF TOPAR expr TCPAR
## LR(1) items:
statement -> T_IF TOPAR expr TCPAR . statement elseif_list else_single [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_ENDWHILE T_ENDSWITCH T_ENDIF T_ENDFOREACH T_ENDFOR T_ENDDECLARE T_EMPTY T_ELSEIF T_ELSE T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DEFAULT T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_CASE T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
statement -> T_IF TOPAR expr TCPAR . TCOLON list(inner_statement) new_elseif_list new_else_single T_ENDIF TSEMICOLON [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_ENDWHILE T_ENDSWITCH T_ENDIF T_ENDFOREACH T_ENDFOR T_ENDDECLARE T_EMPTY T_ELSEIF T_ELSE T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DEFAULT T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_CASE T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
## Transitions:
-- On T__AT shift to state 1
-- On T_YIELD shift to state 2
-- On T_WHILE shift to state 158
-- On T_VARIABLE shift to state 3
-- On T_USE shift to state 190
-- On T_UNSET_CAST shift to state 5
-- On T_UNSET shift to state 197
-- On T_TYPE shift to state 6
-- On T_TRY shift to state 391
-- On T_TRAIT_C shift to state 7
-- On T_THROW shift to state 520
-- On T_SWITCH shift to state 525
-- On T_SUPER shift to state 8
-- On T_STRING_CAST shift to state 9
-- On T_STATIC shift to state 581
-- On T_START_HEREDOC shift to state 25
-- On T_SELF shift to state 40
-- On T_RETURN shift to state 553
-- On T_REQUIRE_ONCE shift to state 41
-- On T_REQUIRE shift to state 42
-- On T_PRINT shift to state 43
-- On T_PARENT shift to state 44
-- On T_OPEN_TAG_WITH_ECHO shift to state 558
-- On T_OBJECT_CAST shift to state 45
-- On T_NEW shift to state 46
-- On T_NAMESPACE_C shift to state 49
-- On T_NAMESPACE shift to state 50
-- On T_METHOD_C shift to state 58
-- On T_METAVAR shift to state 17
-- On T_LNUMBER shift to state 59
-- On T_LIST shift to state 69
-- On T_LINE shift to state 60
-- On T_LAMBDA_OPAR shift to state 73
-- On T_ISSET shift to state 133
-- On T_INT_CAST shift to state 135
-- On T_INSTANCEOF shift to state 52
-- On T_INLINE_HTML shift to state 576
-- On T_INCLUDE_ONCE shift to state 136
-- On T_INCLUDE shift to state 137
-- On T_INC shift to state 138
-- On T_IF shift to state 577
-- On T_IDENT shift to state 18
-- On T_GLOBAL shift to state 587
-- On T_FUNC_C shift to state 61
-- On T_FUNCTION shift to state 139
-- On T_FOREACH shift to state 600
-- On T_FOR shift to state 624
-- On T_FILE shift to state 62
-- On T_EXIT shift to state 160
-- On T_EVAL shift to state 162
-- On T_ENUM shift to state 19
-- On T_EMPTY shift to state 164
-- On T_ELLIPSIS shift to state 635
-- On T_ECHO shift to state 636
-- On T_DOUBLE_CAST shift to state 168
-- On T_DO shift to state 644
-- On T_DNUMBER shift to state 63
-- On T_DIR shift to state 64
-- On T_DECLARE shift to state 645
-- On T_DEC shift to state 169
-- On T_CONTINUE shift to state 649
-- On T_CONSTANT_ENCAPSED_STRING shift to state 65
-- On T_CLONE shift to state 170
-- On T_CLASS_C shift to state 66
-- On T_BREAK shift to state 652
-- On T_BOOL_CAST shift to state 171
-- On T_AWAIT shift to state 172
-- On T_ASYNC shift to state 173
-- On T_ARRAY_CAST shift to state 200
-- On T_ARRAY shift to state 201
-- On TTILDE shift to state 204
-- On TSEMICOLON shift to state 655
-- On TPLUS shift to state 205
-- On TOPAR shift to state 206
-- On TOBRACE shift to state 656
-- On TOBRA shift to state 209
-- On TMINUS shift to state 210
-- On TGUIL shift to state 211
-- On TDOLLARDOLLAR shift to state 213
-- On TDOLLAR shift to state 214
-- On TCOLON shift to state 803
-- On TBANG shift to state 216
-- On TBACKQUOTE shift to state 217
-- On TANTISLASH shift to state 85
-- On LDots shift to state 222
-- On statement shift to state 809
-- On simple_expr shift to state 223
-- On qualified_name shift to state 94
-- On qualified_class_name shift to state 225
-- On primary_expr shift to state 226
-- On new_expr shift to state 227
-- On namespace_name shift to state 102
-- On member_expr shift to state 228
-- On lambda_expr shift to state 231
-- On ident_in_name shift to state 57
-- On ident shift to state 56
-- On expr shift to state 704
-- On constant shift to state 239
-- On call_expr shift to state 240
## Reductions:

State 803:
## Known stack suffix:
## T_IF TOPAR expr TCPAR TCOLON
## LR(1) items:
statement -> T_IF TOPAR expr TCPAR TCOLON . list(inner_statement) new_elseif_list new_else_single T_ENDIF TSEMICOLON [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_ENDWHILE T_ENDSWITCH T_ENDIF T_ENDFOREACH T_ENDFOR T_ENDDECLARE T_EMPTY T_ELSEIF T_ELSE T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DEFAULT T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_CASE T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
## Transitions:
-- On T__AT shift to state 1
-- On T_YIELD shift to state 2
-- On T_WHILE shift to state 158
-- On T_VARIABLE shift to state 3
-- On T_USE shift to state 190
-- On T_UNSET_CAST shift to state 5
-- On T_UNSET shift to state 197
-- On T_TYPE shift to state 6
-- On T_TRY shift to state 391
-- On T_TRAIT_C shift to state 7
-- On T_TRAIT shift to state 393
-- On T_THROW shift to state 520
-- On T_SWITCH shift to state 525
-- On T_SUPER shift to state 8
-- On T_STRING_CAST shift to state 9
-- On T_STATIC shift to state 536
-- On T_START_HEREDOC shift to state 25
-- On T_SL shift to state 16
-- On T_SELF shift to state 40
-- On T_RETURN shift to state 553
-- On T_REQUIRE_ONCE shift to state 41
-- On T_REQUIRE shift to state 42
-- On T_PRINT shift to state 43
-- On T_PARENT shift to state 44
-- On T_OPEN_TAG_WITH_ECHO shift to state 558
-- On T_OBJECT_CAST shift to state 45
-- On T_NEW shift to state 46
-- On T_NAMESPACE_C shift to state 49
-- On T_NAMESPACE shift to state 50
-- On T_METHOD_C shift to state 58
-- On T_METAVAR shift to state 17
-- On T_LNUMBER shift to state 59
-- On T_LIST shift to state 69
-- On T_LINE shift to state 60
-- On T_LAMBDA_OPAR shift to state 73
-- On T_ISSET shift to state 133
-- On T_INT_CAST shift to state 135
-- On T_INTERFACE shift to state 563
-- On T_INSTANCEOF shift to state 52
-- On T_INLINE_HTML shift to state 576
-- On T_INCLUDE_ONCE shift to state 136
-- On T_INCLUDE shift to state 137
-- On T_INC shift to state 138
-- On T_IF shift to state 577
-- On T_IDENT shift to state 18
-- On T_GLOBAL shift to state 587
-- On T_FUNC_C shift to state 61
-- On T_FUNCTION shift to state 657
-- On T_FOREACH shift to state 600
-- On T_FOR shift to state 624
-- On T_FINAL shift to state 666
-- On T_FILE shift to state 62
-- On T_EXIT shift to state 160
-- On T_EVAL shift to state 162
-- On T_ENUM shift to state 668
-- On T_EMPTY shift to state 164
-- On T_ELLIPSIS shift to state 635
-- On T_ECHO shift to state 636
-- On T_DOUBLE_CAST shift to state 168
-- On T_DO shift to state 644
-- On T_DNUMBER shift to state 63
-- On T_DIR shift to state 64
-- On T_DECLARE shift to state 645
-- On T_DEC shift to state 169
-- On T_CONTINUE shift to state 649
-- On T_CONSTANT_ENCAPSED_STRING shift to state 65
-- On T_CLONE shift to state 170
-- On T_CLASS_C shift to state 66
-- On T_CLASS shift to state 682
-- On T_BREAK shift to state 652
-- On T_BOOL_CAST shift to state 171
-- On T_AWAIT shift to state 172
-- On T_ASYNC shift to state 683
-- On T_ARRAY_CAST shift to state 200
-- On T_ARRAY shift to state 201
-- On T_ABSTRACT shift to state 694
-- On TTILDE shift to state 204
-- On TSEMICOLON shift to state 655
-- On TPLUS shift to state 205
-- On TOPAR shift to state 206
-- On TOBRACE shift to state 656
-- On TOBRA shift to state 209
-- On TMINUS shift to state 210
-- On TGUIL shift to state 211
-- On TDOLLARDOLLAR shift to state 213
-- On TDOLLAR shift to state 214
-- On TBANG shift to state 216
-- On TBACKQUOTE shift to state 217
-- On TANTISLASH shift to state 85
-- On LDots shift to state 222
-- On unticked_function_declaration shift to state 696
-- On unticked_class_declaration shift to state 697
-- On statement shift to state 698
-- On simple_expr shift to state 223
-- On qualified_name shift to state 94
-- On qualified_class_name shift to state 225
-- On primary_expr shift to state 226
-- On new_expr shift to state 227
-- On namespace_name shift to state 102
-- On member_expr shift to state 228
-- On list(inner_statement) shift to state 804
-- On lambda_expr shift to state 231
-- On inner_statement shift to state 701
-- On ident_in_name shift to state 57
-- On ident shift to state 56
-- On function_declaration shift to state 703
-- On expr shift to state 704
-- On constant shift to state 239
-- On class_entry_type shift to state 706
-- On class_declaration shift to state 716
-- On call_expr shift to state 240
-- On attributes shift to state 717
## Reductions:
-- On T_ENDIF T_ELSEIF T_ELSE
--   reduce production list(inner_statement) ->

State 804:
## Known stack suffix:
## T_IF TOPAR expr TCPAR TCOLON list(inner_statement)
## LR(1) items:
statement -> T_IF TOPAR expr TCPAR TCOLON list(inner_statement) . new_elseif_list new_else_single T_ENDIF TSEMICOLON [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_ENDWHILE T_ENDSWITCH T_ENDIF T_ENDFOREACH T_ENDFOR T_ENDDECLARE T_EMPTY T_ELSEIF T_ELSE T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DEFAULT T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_CASE T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
## Transitions:
-- On new_elseif_list shift to state 805
## Default reduction:
-- After reading the next token, reduce production new_elseif_list ->

State 805:
## Known stack suffix:
## T_IF TOPAR expr TCPAR TCOLON list(inner_statement) new_elseif_list
## LR(1) items:
new_elseif_list -> new_elseif_list . T_ELSEIF TOPAR expr TCPAR TCOLON list(inner_statement) [ T_ENDIF T_ELSEIF T_ELSE ]
new_elseif_list -> new_elseif_list . T_ELSEIF TOPAR T_ELLIPSIS TCPAR TCOLON list(inner_statement) [ T_ENDIF T_ELSEIF T_ELSE ]
statement -> T_IF TOPAR expr TCPAR TCOLON list(inner_statement) new_elseif_list . new_else_single T_ENDIF TSEMICOLON [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_ENDWHILE T_ENDSWITCH T_ENDIF T_ENDFOREACH T_ENDFOR T_ENDDECLARE T_EMPTY T_ELSEIF T_ELSE T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DEFAULT T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_CASE T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
## Transitions:
-- On T_ELSEIF shift to state 772
-- On T_ELSE shift to state 782
-- On new_else_single shift to state 806
## Reductions:
-- On T_ENDIF
--   reduce production new_else_single ->

State 806:
## Known stack suffix:
## T_IF TOPAR expr TCPAR TCOLON list(inner_statement) new_elseif_list new_else_single
## LR(1) items:
statement -> T_IF TOPAR expr TCPAR TCOLON list(inner_statement) new_elseif_list new_else_single . T_ENDIF TSEMICOLON [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_ENDWHILE T_ENDSWITCH T_ENDIF T_ENDFOREACH T_ENDFOR T_ENDDECLARE T_EMPTY T_ELSEIF T_ELSE T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DEFAULT T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_CASE T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
## Transitions:
-- On T_ENDIF shift to state 807
## Reductions:

State 807:
## Known stack suffix:
## T_IF TOPAR expr TCPAR TCOLON list(inner_statement) new_elseif_list new_else_single T_ENDIF
## LR(1) items:
statement -> T_IF TOPAR expr TCPAR TCOLON list(inner_statement) new_elseif_list new_else_single T_ENDIF . TSEMICOLON [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_ENDWHILE T_ENDSWITCH T_ENDIF T_ENDFOREACH T_ENDFOR T_ENDDECLARE T_EMPTY T_ELSEIF T_ELSE T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DEFAULT T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_CASE T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
## Transitions:
-- On TSEMICOLON shift to state 808
## Reductions:

State 808:
## Known stack suffix:
## T_IF TOPAR expr TCPAR TCOLON list(inner_statement) new_elseif_list new_else_single T_ENDIF TSEMICOLON
## LR(1) items:
statement -> T_IF TOPAR expr TCPAR TCOLON list(inner_statement) new_elseif_list new_else_single T_ENDIF TSEMICOLON . [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_ENDWHILE T_ENDSWITCH T_ENDIF T_ENDFOREACH T_ENDFOR T_ENDDECLARE T_EMPTY T_ELSEIF T_ELSE T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DEFAULT T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_CASE T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production statement -> T_IF TOPAR expr TCPAR TCOLON list(inner_statement) new_elseif_list new_else_single T_ENDIF TSEMICOLON

State 809:
## Known stack suffix:
## T_IF TOPAR expr TCPAR statement
## LR(1) items:
statement -> T_IF TOPAR expr TCPAR statement . elseif_list else_single [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_ENDWHILE T_ENDSWITCH T_ENDIF T_ENDFOREACH T_ENDFOR T_ENDDECLARE T_EMPTY T_ELSEIF T_ELSE T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DEFAULT T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_CASE T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
## Transitions:
-- On elseif_list shift to state 810
## Default reduction:
-- After reading the next token, reduce production elseif_list ->

State 810:
## Known stack suffix:
## T_IF TOPAR expr TCPAR statement elseif_list
## LR(1) items:
elseif_list -> elseif_list . T_ELSEIF TOPAR expr TCPAR statement [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_ENDWHILE T_ENDSWITCH T_ENDIF T_ENDFOREACH T_ENDFOR T_ENDDECLARE T_EMPTY T_ELSEIF T_ELSE T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DEFAULT T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_CASE T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
elseif_list -> elseif_list . T_ELSEIF TOPAR T_ELLIPSIS TCPAR statement [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_ENDWHILE T_ENDSWITCH T_ENDIF T_ENDFOREACH T_ENDFOR T_ENDDECLARE T_EMPTY T_ELSEIF T_ELSE T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DEFAULT T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_CASE T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
statement -> T_IF TOPAR expr TCPAR statement elseif_list . else_single [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_ENDWHILE T_ENDSWITCH T_ENDIF T_ENDFOREACH T_ENDFOR T_ENDDECLARE T_EMPTY T_ELSEIF T_ELSE T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DEFAULT T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_CASE T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
## Transitions:
-- On T_ELSEIF shift to state 790
-- On T_ELSE shift to state 798
-- On else_single shift to state 811
## Reductions:
-- On T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_ENDWHILE T_ENDSWITCH T_ENDIF T_ENDFOREACH T_ENDFOR T_ENDDECLARE T_EMPTY T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DEFAULT T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_CASE T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF
--   reduce production else_single ->

State 811:
## Known stack suffix:
## T_IF TOPAR expr TCPAR statement elseif_list else_single
## LR(1) items:
statement -> T_IF TOPAR expr TCPAR statement elseif_list else_single . [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_ENDWHILE T_ENDSWITCH T_ENDIF T_ENDFOREACH T_ENDFOR T_ENDDECLARE T_EMPTY T_ELSEIF T_ELSE T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DEFAULT T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_CASE T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production statement -> T_IF TOPAR expr TCPAR statement elseif_list else_single

State 812:
## Known stack suffix:
## TOBRACE list(inner_statement)
## LR(1) items:
function_body -> TOBRACE list(inner_statement) . TCBRACE [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_ENDWHILE T_ENDSWITCH T_ENDIF T_ENDFOREACH T_ENDFOR T_ENDDECLARE T_EMPTY T_ELSEIF T_ELSE T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DEFAULT T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_CASE T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
## Transitions:
-- On TCBRACE shift to state 813
## Reductions:

State 813:
## Known stack suffix:
## TOBRACE list(inner_statement) TCBRACE
## LR(1) items:
function_body -> TOBRACE list(inner_statement) TCBRACE . [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_ENDWHILE T_ENDSWITCH T_ENDIF T_ENDFOREACH T_ENDFOR T_ENDDECLARE T_EMPTY T_ELSEIF T_ELSE T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DEFAULT T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_CASE T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production function_body -> TOBRACE list(inner_statement) TCBRACE

State 814:
## Known stack suffix:
## T_STATIC T_FUNCTION is_reference ident type_params_opt TOPAR parameter_list TCPAR option(return_type) function_body
## LR(1) items:
unticked_function_declaration -> T_STATIC T_FUNCTION is_reference ident type_params_opt TOPAR parameter_list TCPAR option(return_type) function_body . [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_ENDWHILE T_ENDSWITCH T_ENDIF T_ENDFOREACH T_ENDFOR T_ENDDECLARE T_EMPTY T_ELSEIF T_ELSE T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DEFAULT T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_CASE T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production unticked_function_declaration -> T_STATIC T_FUNCTION is_reference ident type_params_opt TOPAR parameter_list TCPAR option(return_type) function_body

State 815:
## Known stack suffix:
## case_list_rev T_DEFAULT case_separator list(inner_statement)
## LR(1) items:
case_list_rev -> case_list_rev T_DEFAULT case_separator list(inner_statement) . [ T_ENDSWITCH T_DEFAULT T_CASE TCBRACE ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production case_list_rev -> case_list_rev T_DEFAULT case_separator list(inner_statement)

State 816:
## Known stack suffix:
## case_list_rev T_CASE
## LR(1) items:
case_list_rev -> case_list_rev T_CASE . expr case_separator list(inner_statement) [ T_ENDSWITCH T_DEFAULT T_CASE TCBRACE ]
## Transitions:
-- On T__AT shift to state 1
-- On T_YIELD shift to state 2
-- On T_VARIABLE shift to state 3
-- On T_UNSET_CAST shift to state 5
-- On T_TYPE shift to state 6
-- On T_TRAIT_C shift to state 7
-- On T_SUPER shift to state 8
-- On T_STRING_CAST shift to state 9
-- On T_STATIC shift to state 10
-- On T_START_HEREDOC shift to state 25
-- On T_SELF shift to state 40
-- On T_REQUIRE_ONCE shift to state 41
-- On T_REQUIRE shift to state 42
-- On T_PRINT shift to state 43
-- On T_PARENT shift to state 44
-- On T_OBJECT_CAST shift to state 45
-- On T_NEW shift to state 46
-- On T_NAMESPACE_C shift to state 49
-- On T_NAMESPACE shift to state 50
-- On T_METHOD_C shift to state 58
-- On T_METAVAR shift to state 17
-- On T_LNUMBER shift to state 59
-- On T_LIST shift to state 69
-- On T_LINE shift to state 60
-- On T_LAMBDA_OPAR shift to state 73
-- On T_ISSET shift to state 133
-- On T_INT_CAST shift to state 135
-- On T_INSTANCEOF shift to state 52
-- On T_INCLUDE_ONCE shift to state 136
-- On T_INCLUDE shift to state 137
-- On T_INC shift to state 138
-- On T_IDENT shift to state 18
-- On T_FUNC_C shift to state 61
-- On T_FUNCTION shift to state 139
-- On T_FILE shift to state 62
-- On T_EXIT shift to state 160
-- On T_EVAL shift to state 162
-- On T_ENUM shift to state 19
-- On T_EMPTY shift to state 164
-- On T_DOUBLE_CAST shift to state 168
-- On T_DNUMBER shift to state 63
-- On T_DIR shift to state 64
-- On T_DEC shift to state 169
-- On T_CONSTANT_ENCAPSED_STRING shift to state 65
-- On T_CLONE shift to state 170
-- On T_CLASS_C shift to state 66
-- On T_BOOL_CAST shift to state 171
-- On T_AWAIT shift to state 172
-- On T_ASYNC shift to state 173
-- On T_ARRAY_CAST shift to state 200
-- On T_ARRAY shift to state 201
-- On TTILDE shift to state 204
-- On TPLUS shift to state 205
-- On TOPAR shift to state 206
-- On TOBRA shift to state 209
-- On TMINUS shift to state 210
-- On TGUIL shift to state 211
-- On TDOLLARDOLLAR shift to state 213
-- On TDOLLAR shift to state 214
-- On TBANG shift to state 216
-- On TBACKQUOTE shift to state 217
-- On TANTISLASH shift to state 85
-- On LDots shift to state 222
-- On simple_expr shift to state 223
-- On qualified_name shift to state 94
-- On qualified_class_name shift to state 225
-- On primary_expr shift to state 226
-- On new_expr shift to state 227
-- On namespace_name shift to state 102
-- On member_expr shift to state 228
-- On lambda_expr shift to state 231
-- On ident_in_name shift to state 57
-- On ident shift to state 56
-- On expr shift to state 817
-- On constant shift to state 239
-- On call_expr shift to state 240
## Reductions:

State 817:
## Known stack suffix:
## case_list_rev T_CASE expr
## LR(1) items:
case_list_rev -> case_list_rev T_CASE expr . case_separator list(inner_statement) [ T_ENDSWITCH T_DEFAULT T_CASE TCBRACE ]
expr -> expr . T_INC [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCOLON TAND ]
expr -> expr . T_DEC [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCOLON TAND ]
expr -> expr . T_BOOLEAN_OR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCOLON TAND ]
expr -> expr . T_BOOLEAN_AND expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCOLON TAND ]
expr -> expr . T_LOGICAL_OR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCOLON TAND ]
expr -> expr . T_LOGICAL_AND expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCOLON TAND ]
expr -> expr . T_LOGICAL_XOR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCOLON TAND ]
expr -> expr . TPLUS expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCOLON TAND ]
expr -> expr . TMINUS expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCOLON TAND ]
expr -> expr . TMUL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCOLON TAND ]
expr -> expr . TDIV expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCOLON TAND ]
expr -> expr . TMOD expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCOLON TAND ]
expr -> expr . TPOW expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCOLON TAND ]
expr -> expr . TAND expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCOLON TAND ]
expr -> expr . TOR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCOLON TAND ]
expr -> expr . TXOR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCOLON TAND ]
expr -> expr . T_SL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCOLON TAND ]
expr -> expr . T_SR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCOLON TAND ]
expr -> expr . TDOT expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCOLON TAND ]
expr -> expr . T_IS_IDENTICAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCOLON TAND ]
expr -> expr . T_IS_NOT_IDENTICAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCOLON TAND ]
expr -> expr . T_IS_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCOLON TAND ]
expr -> expr . T_IS_NOT_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCOLON TAND ]
expr -> expr . TSMALLER expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCOLON TAND ]
expr -> expr . T_IS_SMALLER_OR_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCOLON TAND ]
expr -> expr . TGREATER expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCOLON TAND ]
expr -> expr . T_IS_GREATER_OR_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCOLON TAND ]
expr -> expr . T_ROCKET expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCOLON TAND ]
expr -> expr . TQUESTION expr TCOLON expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCOLON TAND ]
expr -> expr . TQUESTION TCOLON expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCOLON TAND ]
expr -> expr . TQUESTION TQUESTION expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCOLON TAND ]
expr -> expr . T_INSTANCEOF expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCOLON TAND ]
## Transitions:
-- On T_SR shift to state 233
-- On T_SL shift to state 244
-- On T_ROCKET shift to state 260
-- On T_LOGICAL_XOR shift to state 270
-- On T_LOGICAL_OR shift to state 298
-- On T_LOGICAL_AND shift to state 272
-- On T_IS_SMALLER_OR_EQUAL shift to state 262
-- On T_IS_NOT_IDENTICAL shift to state 274
-- On T_IS_NOT_EQUAL shift to state 276
-- On T_IS_IDENTICAL shift to state 278
-- On T_IS_GREATER_OR_EQUAL shift to state 264
-- On T_IS_EQUAL shift to state 280
-- On T_INSTANCEOF shift to state 235
-- On T_INC shift to state 237
-- On T_DEC shift to state 238
-- On T_BOOLEAN_OR shift to state 282
-- On T_BOOLEAN_AND shift to state 284
-- On TXOR shift to state 286
-- On TSMALLER shift to state 266
-- On TSEMICOLON shift to state 533
-- On TQUESTION shift to state 292
-- On TPOW shift to state 246
-- On TPLUS shift to state 248
-- On TOR shift to state 290
-- On TMUL shift to state 250
-- On TMOD shift to state 252
-- On TMINUS shift to state 256
-- On TGREATER shift to state 268
-- On TDOT shift to state 258
-- On TDIV shift to state 254
-- On TCOLON shift to state 534
-- On TAND shift to state 288
-- On case_separator shift to state 818
## Reductions:

State 818:
## Known stack suffix:
## case_list_rev T_CASE expr case_separator
## LR(1) items:
case_list_rev -> case_list_rev T_CASE expr case_separator . list(inner_statement) [ T_ENDSWITCH T_DEFAULT T_CASE TCBRACE ]
## Transitions:
-- On T__AT shift to state 1
-- On T_YIELD shift to state 2
-- On T_WHILE shift to state 158
-- On T_VARIABLE shift to state 3
-- On T_USE shift to state 190
-- On T_UNSET_CAST shift to state 5
-- On T_UNSET shift to state 197
-- On T_TYPE shift to state 6
-- On T_TRY shift to state 391
-- On T_TRAIT_C shift to state 7
-- On T_TRAIT shift to state 393
-- On T_THROW shift to state 520
-- On T_SWITCH shift to state 525
-- On T_SUPER shift to state 8
-- On T_STRING_CAST shift to state 9
-- On T_STATIC shift to state 536
-- On T_START_HEREDOC shift to state 25
-- On T_SL shift to state 16
-- On T_SELF shift to state 40
-- On T_RETURN shift to state 553
-- On T_REQUIRE_ONCE shift to state 41
-- On T_REQUIRE shift to state 42
-- On T_PRINT shift to state 43
-- On T_PARENT shift to state 44
-- On T_OPEN_TAG_WITH_ECHO shift to state 558
-- On T_OBJECT_CAST shift to state 45
-- On T_NEW shift to state 46
-- On T_NAMESPACE_C shift to state 49
-- On T_NAMESPACE shift to state 50
-- On T_METHOD_C shift to state 58
-- On T_METAVAR shift to state 17
-- On T_LNUMBER shift to state 59
-- On T_LIST shift to state 69
-- On T_LINE shift to state 60
-- On T_LAMBDA_OPAR shift to state 73
-- On T_ISSET shift to state 133
-- On T_INT_CAST shift to state 135
-- On T_INTERFACE shift to state 563
-- On T_INSTANCEOF shift to state 52
-- On T_INLINE_HTML shift to state 576
-- On T_INCLUDE_ONCE shift to state 136
-- On T_INCLUDE shift to state 137
-- On T_INC shift to state 138
-- On T_IF shift to state 577
-- On T_IDENT shift to state 18
-- On T_GLOBAL shift to state 587
-- On T_FUNC_C shift to state 61
-- On T_FUNCTION shift to state 657
-- On T_FOREACH shift to state 600
-- On T_FOR shift to state 624
-- On T_FINAL shift to state 666
-- On T_FILE shift to state 62
-- On T_EXIT shift to state 160
-- On T_EVAL shift to state 162
-- On T_ENUM shift to state 668
-- On T_EMPTY shift to state 164
-- On T_ELLIPSIS shift to state 635
-- On T_ECHO shift to state 636
-- On T_DOUBLE_CAST shift to state 168
-- On T_DO shift to state 644
-- On T_DNUMBER shift to state 63
-- On T_DIR shift to state 64
-- On T_DECLARE shift to state 645
-- On T_DEC shift to state 169
-- On T_CONTINUE shift to state 649
-- On T_CONSTANT_ENCAPSED_STRING shift to state 65
-- On T_CLONE shift to state 170
-- On T_CLASS_C shift to state 66
-- On T_CLASS shift to state 682
-- On T_BREAK shift to state 652
-- On T_BOOL_CAST shift to state 171
-- On T_AWAIT shift to state 172
-- On T_ASYNC shift to state 683
-- On T_ARRAY_CAST shift to state 200
-- On T_ARRAY shift to state 201
-- On T_ABSTRACT shift to state 694
-- On TTILDE shift to state 204
-- On TSEMICOLON shift to state 655
-- On TPLUS shift to state 205
-- On TOPAR shift to state 206
-- On TOBRACE shift to state 656
-- On TOBRA shift to state 209
-- On TMINUS shift to state 210
-- On TGUIL shift to state 211
-- On TDOLLARDOLLAR shift to state 213
-- On TDOLLAR shift to state 214
-- On TBANG shift to state 216
-- On TBACKQUOTE shift to state 217
-- On TANTISLASH shift to state 85
-- On LDots shift to state 222
-- On unticked_function_declaration shift to state 696
-- On unticked_class_declaration shift to state 697
-- On statement shift to state 698
-- On simple_expr shift to state 223
-- On qualified_name shift to state 94
-- On qualified_class_name shift to state 225
-- On primary_expr shift to state 226
-- On new_expr shift to state 227
-- On namespace_name shift to state 102
-- On member_expr shift to state 228
-- On list(inner_statement) shift to state 819
-- On lambda_expr shift to state 231
-- On inner_statement shift to state 701
-- On ident_in_name shift to state 57
-- On ident shift to state 56
-- On function_declaration shift to state 703
-- On expr shift to state 704
-- On constant shift to state 239
-- On class_entry_type shift to state 706
-- On class_declaration shift to state 716
-- On call_expr shift to state 240
-- On attributes shift to state 717
## Reductions:
-- On T_ENDSWITCH T_DEFAULT T_CASE TCBRACE
--   reduce production list(inner_statement) ->

State 819:
## Known stack suffix:
## case_list_rev T_CASE expr case_separator list(inner_statement)
## LR(1) items:
case_list_rev -> case_list_rev T_CASE expr case_separator list(inner_statement) . [ T_ENDSWITCH T_DEFAULT T_CASE TCBRACE ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production case_list_rev -> case_list_rev T_CASE expr case_separator list(inner_statement)

State 820:
## Known stack suffix:
## TOBRACE TSEMICOLON case_list
## LR(1) items:
switch_case_list -> TOBRACE TSEMICOLON case_list . TCBRACE [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_ENDWHILE T_ENDSWITCH T_ENDIF T_ENDFOREACH T_ENDFOR T_ENDDECLARE T_EMPTY T_ELSEIF T_ELSE T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DEFAULT T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_CASE T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
## Transitions:
-- On TCBRACE shift to state 821
## Reductions:

State 821:
## Known stack suffix:
## TOBRACE TSEMICOLON case_list TCBRACE
## LR(1) items:
switch_case_list -> TOBRACE TSEMICOLON case_list TCBRACE . [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_ENDWHILE T_ENDSWITCH T_ENDIF T_ENDFOREACH T_ENDFOR T_ENDDECLARE T_EMPTY T_ELSEIF T_ELSE T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DEFAULT T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_CASE T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production switch_case_list -> TOBRACE TSEMICOLON case_list TCBRACE

State 822:
## Known stack suffix:
## TOBRACE case_list
## LR(1) items:
switch_case_list -> TOBRACE case_list . TCBRACE [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_ENDWHILE T_ENDSWITCH T_ENDIF T_ENDFOREACH T_ENDFOR T_ENDDECLARE T_EMPTY T_ELSEIF T_ELSE T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DEFAULT T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_CASE T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
## Transitions:
-- On TCBRACE shift to state 823
## Reductions:

State 823:
## Known stack suffix:
## TOBRACE case_list TCBRACE
## LR(1) items:
switch_case_list -> TOBRACE case_list TCBRACE . [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_ENDWHILE T_ENDSWITCH T_ENDIF T_ENDFOREACH T_ENDFOR T_ENDDECLARE T_EMPTY T_ELSEIF T_ELSE T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DEFAULT T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_CASE T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production switch_case_list -> TOBRACE case_list TCBRACE

State 824:
## Known stack suffix:
## TCOLON
## LR(1) items:
switch_case_list -> TCOLON . case_list T_ENDSWITCH TSEMICOLON [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_ENDWHILE T_ENDSWITCH T_ENDIF T_ENDFOREACH T_ENDFOR T_ENDDECLARE T_EMPTY T_ELSEIF T_ELSE T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DEFAULT T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_CASE T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
switch_case_list -> TCOLON . TSEMICOLON case_list T_ENDSWITCH TSEMICOLON [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_ENDWHILE T_ENDSWITCH T_ENDIF T_ENDFOREACH T_ENDFOR T_ENDDECLARE T_EMPTY T_ELSEIF T_ELSE T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DEFAULT T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_CASE T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
## Transitions:
-- On TSEMICOLON shift to state 825
-- On case_list_rev shift to state 531
-- On case_list shift to state 829
## Reductions:
-- On T_ENDSWITCH T_DEFAULT T_CASE
--   reduce production case_list_rev ->

State 825:
## Known stack suffix:
## TCOLON TSEMICOLON
## LR(1) items:
switch_case_list -> TCOLON TSEMICOLON . case_list T_ENDSWITCH TSEMICOLON [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_ENDWHILE T_ENDSWITCH T_ENDIF T_ENDFOREACH T_ENDFOR T_ENDDECLARE T_EMPTY T_ELSEIF T_ELSE T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DEFAULT T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_CASE T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
## Transitions:
-- On case_list_rev shift to state 531
-- On case_list shift to state 826
## Default reduction:
-- After reading the next token, reduce production case_list_rev ->

State 826:
## Known stack suffix:
## TCOLON TSEMICOLON case_list
## LR(1) items:
switch_case_list -> TCOLON TSEMICOLON case_list . T_ENDSWITCH TSEMICOLON [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_ENDWHILE T_ENDSWITCH T_ENDIF T_ENDFOREACH T_ENDFOR T_ENDDECLARE T_EMPTY T_ELSEIF T_ELSE T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DEFAULT T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_CASE T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
## Transitions:
-- On T_ENDSWITCH shift to state 827
## Reductions:

State 827:
## Known stack suffix:
## TCOLON TSEMICOLON case_list T_ENDSWITCH
## LR(1) items:
switch_case_list -> TCOLON TSEMICOLON case_list T_ENDSWITCH . TSEMICOLON [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_ENDWHILE T_ENDSWITCH T_ENDIF T_ENDFOREACH T_ENDFOR T_ENDDECLARE T_EMPTY T_ELSEIF T_ELSE T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DEFAULT T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_CASE T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
## Transitions:
-- On TSEMICOLON shift to state 828
## Reductions:

State 828:
## Known stack suffix:
## TCOLON TSEMICOLON case_list T_ENDSWITCH TSEMICOLON
## LR(1) items:
switch_case_list -> TCOLON TSEMICOLON case_list T_ENDSWITCH TSEMICOLON . [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_ENDWHILE T_ENDSWITCH T_ENDIF T_ENDFOREACH T_ENDFOR T_ENDDECLARE T_EMPTY T_ELSEIF T_ELSE T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DEFAULT T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_CASE T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production switch_case_list -> TCOLON TSEMICOLON case_list T_ENDSWITCH TSEMICOLON

State 829:
## Known stack suffix:
## TCOLON case_list
## LR(1) items:
switch_case_list -> TCOLON case_list . T_ENDSWITCH TSEMICOLON [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_ENDWHILE T_ENDSWITCH T_ENDIF T_ENDFOREACH T_ENDFOR T_ENDDECLARE T_EMPTY T_ELSEIF T_ELSE T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DEFAULT T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_CASE T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
## Transitions:
-- On T_ENDSWITCH shift to state 830
## Reductions:

State 830:
## Known stack suffix:
## TCOLON case_list T_ENDSWITCH
## LR(1) items:
switch_case_list -> TCOLON case_list T_ENDSWITCH . TSEMICOLON [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_ENDWHILE T_ENDSWITCH T_ENDIF T_ENDFOREACH T_ENDFOR T_ENDDECLARE T_EMPTY T_ELSEIF T_ELSE T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DEFAULT T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_CASE T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
## Transitions:
-- On TSEMICOLON shift to state 831
## Reductions:

State 831:
## Known stack suffix:
## TCOLON case_list T_ENDSWITCH TSEMICOLON
## LR(1) items:
switch_case_list -> TCOLON case_list T_ENDSWITCH TSEMICOLON . [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_ENDWHILE T_ENDSWITCH T_ENDIF T_ENDFOREACH T_ENDFOR T_ENDDECLARE T_EMPTY T_ELSEIF T_ELSE T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DEFAULT T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_CASE T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production switch_case_list -> TCOLON case_list T_ENDSWITCH TSEMICOLON

State 832:
## Known stack suffix:
## T_SWITCH TOPAR T_ELLIPSIS TCPAR switch_case_list
## LR(1) items:
statement -> T_SWITCH TOPAR T_ELLIPSIS TCPAR switch_case_list . [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_ENDWHILE T_ENDSWITCH T_ENDIF T_ENDFOREACH T_ENDFOR T_ENDDECLARE T_EMPTY T_ELSEIF T_ELSE T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DEFAULT T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_CASE T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production statement -> T_SWITCH TOPAR T_ELLIPSIS TCPAR switch_case_list

State 833:
## Known stack suffix:
## T_SWITCH TOPAR expr
## LR(1) items:
expr -> expr . T_INC [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . T_DEC [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . T_BOOLEAN_OR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . T_BOOLEAN_AND expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . T_LOGICAL_OR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . T_LOGICAL_AND expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . T_LOGICAL_XOR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . TPLUS expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . TMINUS expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . TMUL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . TDIV expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . TMOD expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . TPOW expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . TAND expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . TOR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . TXOR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . T_SL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . T_SR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . TDOT expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . T_IS_IDENTICAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . T_IS_NOT_IDENTICAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . T_IS_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . T_IS_NOT_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . TSMALLER expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . T_IS_SMALLER_OR_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . TGREATER expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . T_IS_GREATER_OR_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . T_ROCKET expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . TQUESTION expr TCOLON expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . TQUESTION TCOLON expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . TQUESTION TQUESTION expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . T_INSTANCEOF expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
statement -> T_SWITCH TOPAR expr . TCPAR switch_case_list [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_ENDWHILE T_ENDSWITCH T_ENDIF T_ENDFOREACH T_ENDFOR T_ENDDECLARE T_EMPTY T_ELSEIF T_ELSE T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DEFAULT T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_CASE T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
## Transitions:
-- On T_SR shift to state 233
-- On T_SL shift to state 244
-- On T_ROCKET shift to state 260
-- On T_LOGICAL_XOR shift to state 270
-- On T_LOGICAL_OR shift to state 298
-- On T_LOGICAL_AND shift to state 272
-- On T_IS_SMALLER_OR_EQUAL shift to state 262
-- On T_IS_NOT_IDENTICAL shift to state 274
-- On T_IS_NOT_EQUAL shift to state 276
-- On T_IS_IDENTICAL shift to state 278
-- On T_IS_GREATER_OR_EQUAL shift to state 264
-- On T_IS_EQUAL shift to state 280
-- On T_INSTANCEOF shift to state 235
-- On T_INC shift to state 237
-- On T_DEC shift to state 238
-- On T_BOOLEAN_OR shift to state 282
-- On T_BOOLEAN_AND shift to state 284
-- On TXOR shift to state 286
-- On TSMALLER shift to state 266
-- On TQUESTION shift to state 292
-- On TPOW shift to state 246
-- On TPLUS shift to state 248
-- On TOR shift to state 290
-- On TMUL shift to state 250
-- On TMOD shift to state 252
-- On TMINUS shift to state 256
-- On TGREATER shift to state 268
-- On TDOT shift to state 258
-- On TDIV shift to state 254
-- On TCPAR shift to state 834
-- On TAND shift to state 288
## Reductions:

State 834:
## Known stack suffix:
## T_SWITCH TOPAR expr TCPAR
## LR(1) items:
statement -> T_SWITCH TOPAR expr TCPAR . switch_case_list [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_ENDWHILE T_ENDSWITCH T_ENDIF T_ENDFOREACH T_ENDFOR T_ENDDECLARE T_EMPTY T_ELSEIF T_ELSE T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DEFAULT T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_CASE T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
## Transitions:
-- On TOBRACE shift to state 529
-- On TCOLON shift to state 824
-- On switch_case_list shift to state 835
## Reductions:

State 835:
## Known stack suffix:
## T_SWITCH TOPAR expr TCPAR switch_case_list
## LR(1) items:
statement -> T_SWITCH TOPAR expr TCPAR switch_case_list . [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_ENDWHILE T_ENDSWITCH T_ENDIF T_ENDFOREACH T_ENDFOR T_ENDDECLARE T_EMPTY T_ELSEIF T_ELSE T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DEFAULT T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_CASE T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production statement -> T_SWITCH TOPAR expr TCPAR switch_case_list

State 836:
## Known stack suffix:
## TOBRACE list(inner_statement)
## LR(1) items:
method_body -> TOBRACE list(inner_statement) . TCBRACE [ T_VAR T_USE T_STATIC T_SL T_PUBLIC T_PROTECTED T_PRIVATE T_FUNCTION T_FINAL T_ELLIPSIS T_CONST T_ASYNC T_ABSTRACT TCBRACE ]
## Transitions:
-- On TCBRACE shift to state 837
## Reductions:

State 837:
## Known stack suffix:
## TOBRACE list(inner_statement) TCBRACE
## LR(1) items:
method_body -> TOBRACE list(inner_statement) TCBRACE . [ T_VAR T_USE T_STATIC T_SL T_PUBLIC T_PROTECTED T_PRIVATE T_FUNCTION T_FINAL T_ELLIPSIS T_CONST T_ASYNC T_ABSTRACT TCBRACE ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production method_body -> TOBRACE list(inner_statement) TCBRACE

State 838:
## Known stack suffix:
## list(member_modifier) T_FUNCTION is_reference ident_method_name type_params_opt TOPAR parameter_list TCPAR option(return_type) method_body
## LR(1) items:
method_declaration -> list(member_modifier) T_FUNCTION is_reference ident_method_name type_params_opt TOPAR parameter_list TCPAR option(return_type) method_body . [ T_VAR T_USE T_STATIC T_SL T_PUBLIC T_PROTECTED T_PRIVATE T_FUNCTION T_FINAL T_ELLIPSIS T_CONST T_ASYNC T_ABSTRACT TCBRACE ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production method_declaration -> list(member_modifier) T_FUNCTION is_reference ident_method_name type_params_opt TOPAR parameter_list TCPAR option(return_type) method_body

State 839:
## Known stack suffix:
## ident
## LR(1) items:
ident_method_name -> ident . [ TSMALLER TOPAR ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production ident_method_name -> ident

State 840:
## Known stack suffix:
## member_declaration list(member_declaration)
## LR(1) items:
list(member_declaration) -> member_declaration list(member_declaration) . [ TCBRACE ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production list(member_declaration) -> member_declaration list(member_declaration)

State 841:
## Known stack suffix:
## T_TRAIT ident_class_name type_params_opt implements_list TOBRACE list(member_declaration)
## LR(1) items:
unticked_class_declaration -> T_TRAIT ident_class_name type_params_opt implements_list TOBRACE list(member_declaration) . TCBRACE [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_ENDWHILE T_ENDSWITCH T_ENDIF T_ENDFOREACH T_ENDFOR T_ENDDECLARE T_EMPTY T_ELSEIF T_ELSE T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DEFAULT T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_CASE T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
## Transitions:
-- On TCBRACE shift to state 842
## Reductions:

State 842:
## Known stack suffix:
## T_TRAIT ident_class_name type_params_opt implements_list TOBRACE list(member_declaration) TCBRACE
## LR(1) items:
unticked_class_declaration -> T_TRAIT ident_class_name type_params_opt implements_list TOBRACE list(member_declaration) TCBRACE . [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_ENDWHILE T_ENDSWITCH T_ENDIF T_ENDFOREACH T_ENDFOR T_ENDDECLARE T_EMPTY T_ELSEIF T_ELSE T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DEFAULT T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_CASE T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production unticked_class_declaration -> T_TRAIT ident_class_name type_params_opt implements_list TOBRACE list(member_declaration) TCBRACE

State 843:
## Known stack suffix:
## T_TRY TOBRACE list(inner_statement)
## LR(1) items:
statement -> T_TRY TOBRACE list(inner_statement) . TCBRACE T_CATCH TOPAR list_sep2(class_name,TOR) T_VARIABLE TCPAR TOBRACE list(inner_statement) TCBRACE list(additional_catch) option(finally_clause) [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_ENDWHILE T_ENDSWITCH T_ENDIF T_ENDFOREACH T_ENDFOR T_ENDDECLARE T_EMPTY T_ELSEIF T_ELSE T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DEFAULT T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_CASE T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
statement -> T_TRY TOBRACE list(inner_statement) . TCBRACE T_CATCH TOPAR list_sep2(class_name,TOR) T_METAVAR TCPAR TOBRACE list(inner_statement) TCBRACE list(additional_catch) option(finally_clause) [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_ENDWHILE T_ENDSWITCH T_ENDIF T_ENDFOREACH T_ENDFOR T_ENDDECLARE T_EMPTY T_ELSEIF T_ELSE T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DEFAULT T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_CASE T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
statement -> T_TRY TOBRACE list(inner_statement) . TCBRACE finally_clause [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_ENDWHILE T_ENDSWITCH T_ENDIF T_ENDFOREACH T_ENDFOR T_ENDDECLARE T_EMPTY T_ELSEIF T_ELSE T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DEFAULT T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_CASE T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
## Transitions:
-- On TCBRACE shift to state 844
## Reductions:

State 844:
## Known stack suffix:
## T_TRY TOBRACE list(inner_statement) TCBRACE
## LR(1) items:
statement -> T_TRY TOBRACE list(inner_statement) TCBRACE . T_CATCH TOPAR list_sep2(class_name,TOR) T_VARIABLE TCPAR TOBRACE list(inner_statement) TCBRACE list(additional_catch) option(finally_clause) [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_ENDWHILE T_ENDSWITCH T_ENDIF T_ENDFOREACH T_ENDFOR T_ENDDECLARE T_EMPTY T_ELSEIF T_ELSE T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DEFAULT T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_CASE T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
statement -> T_TRY TOBRACE list(inner_statement) TCBRACE . T_CATCH TOPAR list_sep2(class_name,TOR) T_METAVAR TCPAR TOBRACE list(inner_statement) TCBRACE list(additional_catch) option(finally_clause) [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_ENDWHILE T_ENDSWITCH T_ENDIF T_ENDFOREACH T_ENDFOR T_ENDDECLARE T_EMPTY T_ELSEIF T_ELSE T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DEFAULT T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_CASE T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
statement -> T_TRY TOBRACE list(inner_statement) TCBRACE . finally_clause [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_ENDWHILE T_ENDSWITCH T_ENDIF T_ENDFOREACH T_ENDFOR T_ENDDECLARE T_EMPTY T_ELSEIF T_ELSE T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DEFAULT T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_CASE T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
## Transitions:
-- On T_FINALLY shift to state 845
-- On T_CATCH shift to state 849
-- On finally_clause shift to state 885
## Reductions:

State 845:
## Known stack suffix:
## T_FINALLY
## LR(1) items:
finally_clause -> T_FINALLY . TOBRACE list(inner_statement) TCBRACE [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_ENDWHILE T_ENDSWITCH T_ENDIF T_ENDFOREACH T_ENDFOR T_ENDDECLARE T_EMPTY T_ELSEIF T_ELSE T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DEFAULT T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_CASE T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
## Transitions:
-- On TOBRACE shift to state 846
## Reductions:

State 846:
## Known stack suffix:
## T_FINALLY TOBRACE
## LR(1) items:
finally_clause -> T_FINALLY TOBRACE . list(inner_statement) TCBRACE [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_ENDWHILE T_ENDSWITCH T_ENDIF T_ENDFOREACH T_ENDFOR T_ENDDECLARE T_EMPTY T_ELSEIF T_ELSE T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DEFAULT T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_CASE T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
## Transitions:
-- On T__AT shift to state 1
-- On T_YIELD shift to state 2
-- On T_WHILE shift to state 158
-- On T_VARIABLE shift to state 3
-- On T_USE shift to state 190
-- On T_UNSET_CAST shift to state 5
-- On T_UNSET shift to state 197
-- On T_TYPE shift to state 6
-- On T_TRY shift to state 391
-- On T_TRAIT_C shift to state 7
-- On T_TRAIT shift to state 393
-- On T_THROW shift to state 520
-- On T_SWITCH shift to state 525
-- On T_SUPER shift to state 8
-- On T_STRING_CAST shift to state 9
-- On T_STATIC shift to state 536
-- On T_START_HEREDOC shift to state 25
-- On T_SL shift to state 16
-- On T_SELF shift to state 40
-- On T_RETURN shift to state 553
-- On T_REQUIRE_ONCE shift to state 41
-- On T_REQUIRE shift to state 42
-- On T_PRINT shift to state 43
-- On T_PARENT shift to state 44
-- On T_OPEN_TAG_WITH_ECHO shift to state 558
-- On T_OBJECT_CAST shift to state 45
-- On T_NEW shift to state 46
-- On T_NAMESPACE_C shift to state 49
-- On T_NAMESPACE shift to state 50
-- On T_METHOD_C shift to state 58
-- On T_METAVAR shift to state 17
-- On T_LNUMBER shift to state 59
-- On T_LIST shift to state 69
-- On T_LINE shift to state 60
-- On T_LAMBDA_OPAR shift to state 73
-- On T_ISSET shift to state 133
-- On T_INT_CAST shift to state 135
-- On T_INTERFACE shift to state 563
-- On T_INSTANCEOF shift to state 52
-- On T_INLINE_HTML shift to state 576
-- On T_INCLUDE_ONCE shift to state 136
-- On T_INCLUDE shift to state 137
-- On T_INC shift to state 138
-- On T_IF shift to state 577
-- On T_IDENT shift to state 18
-- On T_GLOBAL shift to state 587
-- On T_FUNC_C shift to state 61
-- On T_FUNCTION shift to state 657
-- On T_FOREACH shift to state 600
-- On T_FOR shift to state 624
-- On T_FINAL shift to state 666
-- On T_FILE shift to state 62
-- On T_EXIT shift to state 160
-- On T_EVAL shift to state 162
-- On T_ENUM shift to state 668
-- On T_EMPTY shift to state 164
-- On T_ELLIPSIS shift to state 635
-- On T_ECHO shift to state 636
-- On T_DOUBLE_CAST shift to state 168
-- On T_DO shift to state 644
-- On T_DNUMBER shift to state 63
-- On T_DIR shift to state 64
-- On T_DECLARE shift to state 645
-- On T_DEC shift to state 169
-- On T_CONTINUE shift to state 649
-- On T_CONSTANT_ENCAPSED_STRING shift to state 65
-- On T_CLONE shift to state 170
-- On T_CLASS_C shift to state 66
-- On T_CLASS shift to state 682
-- On T_BREAK shift to state 652
-- On T_BOOL_CAST shift to state 171
-- On T_AWAIT shift to state 172
-- On T_ASYNC shift to state 683
-- On T_ARRAY_CAST shift to state 200
-- On T_ARRAY shift to state 201
-- On T_ABSTRACT shift to state 694
-- On TTILDE shift to state 204
-- On TSEMICOLON shift to state 655
-- On TPLUS shift to state 205
-- On TOPAR shift to state 206
-- On TOBRACE shift to state 656
-- On TOBRA shift to state 209
-- On TMINUS shift to state 210
-- On TGUIL shift to state 211
-- On TDOLLARDOLLAR shift to state 213
-- On TDOLLAR shift to state 214
-- On TBANG shift to state 216
-- On TBACKQUOTE shift to state 217
-- On TANTISLASH shift to state 85
-- On LDots shift to state 222
-- On unticked_function_declaration shift to state 696
-- On unticked_class_declaration shift to state 697
-- On statement shift to state 698
-- On simple_expr shift to state 223
-- On qualified_name shift to state 94
-- On qualified_class_name shift to state 225
-- On primary_expr shift to state 226
-- On new_expr shift to state 227
-- On namespace_name shift to state 102
-- On member_expr shift to state 228
-- On list(inner_statement) shift to state 847
-- On lambda_expr shift to state 231
-- On inner_statement shift to state 701
-- On ident_in_name shift to state 57
-- On ident shift to state 56
-- On function_declaration shift to state 703
-- On expr shift to state 704
-- On constant shift to state 239
-- On class_entry_type shift to state 706
-- On class_declaration shift to state 716
-- On call_expr shift to state 240
-- On attributes shift to state 717
## Reductions:
-- On TCBRACE
--   reduce production list(inner_statement) ->

State 847:
## Known stack suffix:
## T_FINALLY TOBRACE list(inner_statement)
## LR(1) items:
finally_clause -> T_FINALLY TOBRACE list(inner_statement) . TCBRACE [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_ENDWHILE T_ENDSWITCH T_ENDIF T_ENDFOREACH T_ENDFOR T_ENDDECLARE T_EMPTY T_ELSEIF T_ELSE T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DEFAULT T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_CASE T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
## Transitions:
-- On TCBRACE shift to state 848
## Reductions:

State 848:
## Known stack suffix:
## T_FINALLY TOBRACE list(inner_statement) TCBRACE
## LR(1) items:
finally_clause -> T_FINALLY TOBRACE list(inner_statement) TCBRACE . [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_ENDWHILE T_ENDSWITCH T_ENDIF T_ENDFOREACH T_ENDFOR T_ENDDECLARE T_EMPTY T_ELSEIF T_ELSE T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DEFAULT T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_CASE T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production finally_clause -> T_FINALLY TOBRACE list(inner_statement) TCBRACE

State 849:
## Known stack suffix:
## T_TRY TOBRACE list(inner_statement) TCBRACE T_CATCH
## LR(1) items:
statement -> T_TRY TOBRACE list(inner_statement) TCBRACE T_CATCH . TOPAR list_sep2(class_name,TOR) T_VARIABLE TCPAR TOBRACE list(inner_statement) TCBRACE list(additional_catch) option(finally_clause) [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_ENDWHILE T_ENDSWITCH T_ENDIF T_ENDFOREACH T_ENDFOR T_ENDDECLARE T_EMPTY T_ELSEIF T_ELSE T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DEFAULT T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_CASE T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
statement -> T_TRY TOBRACE list(inner_statement) TCBRACE T_CATCH . TOPAR list_sep2(class_name,TOR) T_METAVAR TCPAR TOBRACE list(inner_statement) TCBRACE list(additional_catch) option(finally_clause) [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_ENDWHILE T_ENDSWITCH T_ENDIF T_ENDFOREACH T_ENDFOR T_ENDDECLARE T_EMPTY T_ELSEIF T_ELSE T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DEFAULT T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_CASE T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
## Transitions:
-- On TOPAR shift to state 850
## Reductions:

State 850:
## Known stack suffix:
## T_TRY TOBRACE list(inner_statement) TCBRACE T_CATCH TOPAR
## LR(1) items:
statement -> T_TRY TOBRACE list(inner_statement) TCBRACE T_CATCH TOPAR . list_sep2(class_name,TOR) T_VARIABLE TCPAR TOBRACE list(inner_statement) TCBRACE list(additional_catch) option(finally_clause) [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_ENDWHILE T_ENDSWITCH T_ENDIF T_ENDFOREACH T_ENDFOR T_ENDDECLARE T_EMPTY T_ELSEIF T_ELSE T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DEFAULT T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_CASE T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
statement -> T_TRY TOBRACE list(inner_statement) TCBRACE T_CATCH TOPAR . list_sep2(class_name,TOR) T_METAVAR TCPAR TOBRACE list(inner_statement) TCBRACE list(additional_catch) option(finally_clause) [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_ENDWHILE T_ENDSWITCH T_ENDIF T_ENDFOREACH T_ENDFOR T_ENDDECLARE T_EMPTY T_ELSEIF T_ELSE T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DEFAULT T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_CASE T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
## Transitions:
-- On T_TYPE shift to state 6
-- On T_SUPER shift to state 8
-- On T_NAMESPACE shift to state 50
-- On T_METAVAR shift to state 17
-- On T_INSTANCEOF shift to state 52
-- On T_IDENT shift to state 18
-- On T_ENUM shift to state 19
-- On T_ARRAY shift to state 79
-- On TANTISLASH shift to state 85
-- On qualified_name shift to state 94
-- On qualified_class_name_or_array shift to state 95
-- On qualified_class_name shift to state 100
-- On namespace_name shift to state 102
-- On list_sep2(class_name,TOR) shift to state 851
-- On ident_in_name shift to state 57
-- On ident shift to state 56
-- On class_name shift to state 884
## Reductions:

State 851:
## Known stack suffix:
## T_TRY TOBRACE list(inner_statement) TCBRACE T_CATCH TOPAR list_sep2(class_name,TOR)
## LR(1) items:
list_sep2(class_name,TOR) -> list_sep2(class_name,TOR) . TOR class_name [ T_VARIABLE T_METAVAR TOR ]
statement -> T_TRY TOBRACE list(inner_statement) TCBRACE T_CATCH TOPAR list_sep2(class_name,TOR) . T_VARIABLE TCPAR TOBRACE list(inner_statement) TCBRACE list(additional_catch) option(finally_clause) [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_ENDWHILE T_ENDSWITCH T_ENDIF T_ENDFOREACH T_ENDFOR T_ENDDECLARE T_EMPTY T_ELSEIF T_ELSE T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DEFAULT T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_CASE T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
statement -> T_TRY TOBRACE list(inner_statement) TCBRACE T_CATCH TOPAR list_sep2(class_name,TOR) . T_METAVAR TCPAR TOBRACE list(inner_statement) TCBRACE list(additional_catch) option(finally_clause) [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_ENDWHILE T_ENDSWITCH T_ENDIF T_ENDFOREACH T_ENDFOR T_ENDDECLARE T_EMPTY T_ELSEIF T_ELSE T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DEFAULT T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_CASE T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
## Transitions:
-- On T_VARIABLE shift to state 852
-- On T_METAVAR shift to state 875
-- On TOR shift to state 882
## Reductions:

State 852:
## Known stack suffix:
## T_TRY TOBRACE list(inner_statement) TCBRACE T_CATCH TOPAR list_sep2(class_name,TOR) T_VARIABLE
## LR(1) items:
statement -> T_TRY TOBRACE list(inner_statement) TCBRACE T_CATCH TOPAR list_sep2(class_name,TOR) T_VARIABLE . TCPAR TOBRACE list(inner_statement) TCBRACE list(additional_catch) option(finally_clause) [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_ENDWHILE T_ENDSWITCH T_ENDIF T_ENDFOREACH T_ENDFOR T_ENDDECLARE T_EMPTY T_ELSEIF T_ELSE T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DEFAULT T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_CASE T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
## Transitions:
-- On TCPAR shift to state 853
## Reductions:

State 853:
## Known stack suffix:
## T_TRY TOBRACE list(inner_statement) TCBRACE T_CATCH TOPAR list_sep2(class_name,TOR) T_VARIABLE TCPAR
## LR(1) items:
statement -> T_TRY TOBRACE list(inner_statement) TCBRACE T_CATCH TOPAR list_sep2(class_name,TOR) T_VARIABLE TCPAR . TOBRACE list(inner_statement) TCBRACE list(additional_catch) option(finally_clause) [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_ENDWHILE T_ENDSWITCH T_ENDIF T_ENDFOREACH T_ENDFOR T_ENDDECLARE T_EMPTY T_ELSEIF T_ELSE T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DEFAULT T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_CASE T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
## Transitions:
-- On TOBRACE shift to state 854
## Reductions:

State 854:
## Known stack suffix:
## T_TRY TOBRACE list(inner_statement) TCBRACE T_CATCH TOPAR list_sep2(class_name,TOR) T_VARIABLE TCPAR TOBRACE
## LR(1) items:
statement -> T_TRY TOBRACE list(inner_statement) TCBRACE T_CATCH TOPAR list_sep2(class_name,TOR) T_VARIABLE TCPAR TOBRACE . list(inner_statement) TCBRACE list(additional_catch) option(finally_clause) [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_ENDWHILE T_ENDSWITCH T_ENDIF T_ENDFOREACH T_ENDFOR T_ENDDECLARE T_EMPTY T_ELSEIF T_ELSE T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DEFAULT T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_CASE T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
## Transitions:
-- On T__AT shift to state 1
-- On T_YIELD shift to state 2
-- On T_WHILE shift to state 158
-- On T_VARIABLE shift to state 3
-- On T_USE shift to state 190
-- On T_UNSET_CAST shift to state 5
-- On T_UNSET shift to state 197
-- On T_TYPE shift to state 6
-- On T_TRY shift to state 391
-- On T_TRAIT_C shift to state 7
-- On T_TRAIT shift to state 393
-- On T_THROW shift to state 520
-- On T_SWITCH shift to state 525
-- On T_SUPER shift to state 8
-- On T_STRING_CAST shift to state 9
-- On T_STATIC shift to state 536
-- On T_START_HEREDOC shift to state 25
-- On T_SL shift to state 16
-- On T_SELF shift to state 40
-- On T_RETURN shift to state 553
-- On T_REQUIRE_ONCE shift to state 41
-- On T_REQUIRE shift to state 42
-- On T_PRINT shift to state 43
-- On T_PARENT shift to state 44
-- On T_OPEN_TAG_WITH_ECHO shift to state 558
-- On T_OBJECT_CAST shift to state 45
-- On T_NEW shift to state 46
-- On T_NAMESPACE_C shift to state 49
-- On T_NAMESPACE shift to state 50
-- On T_METHOD_C shift to state 58
-- On T_METAVAR shift to state 17
-- On T_LNUMBER shift to state 59
-- On T_LIST shift to state 69
-- On T_LINE shift to state 60
-- On T_LAMBDA_OPAR shift to state 73
-- On T_ISSET shift to state 133
-- On T_INT_CAST shift to state 135
-- On T_INTERFACE shift to state 563
-- On T_INSTANCEOF shift to state 52
-- On T_INLINE_HTML shift to state 576
-- On T_INCLUDE_ONCE shift to state 136
-- On T_INCLUDE shift to state 137
-- On T_INC shift to state 138
-- On T_IF shift to state 577
-- On T_IDENT shift to state 18
-- On T_GLOBAL shift to state 587
-- On T_FUNC_C shift to state 61
-- On T_FUNCTION shift to state 657
-- On T_FOREACH shift to state 600
-- On T_FOR shift to state 624
-- On T_FINAL shift to state 666
-- On T_FILE shift to state 62
-- On T_EXIT shift to state 160
-- On T_EVAL shift to state 162
-- On T_ENUM shift to state 668
-- On T_EMPTY shift to state 164
-- On T_ELLIPSIS shift to state 635
-- On T_ECHO shift to state 636
-- On T_DOUBLE_CAST shift to state 168
-- On T_DO shift to state 644
-- On T_DNUMBER shift to state 63
-- On T_DIR shift to state 64
-- On T_DECLARE shift to state 645
-- On T_DEC shift to state 169
-- On T_CONTINUE shift to state 649
-- On T_CONSTANT_ENCAPSED_STRING shift to state 65
-- On T_CLONE shift to state 170
-- On T_CLASS_C shift to state 66
-- On T_CLASS shift to state 682
-- On T_BREAK shift to state 652
-- On T_BOOL_CAST shift to state 171
-- On T_AWAIT shift to state 172
-- On T_ASYNC shift to state 683
-- On T_ARRAY_CAST shift to state 200
-- On T_ARRAY shift to state 201
-- On T_ABSTRACT shift to state 694
-- On TTILDE shift to state 204
-- On TSEMICOLON shift to state 655
-- On TPLUS shift to state 205
-- On TOPAR shift to state 206
-- On TOBRACE shift to state 656
-- On TOBRA shift to state 209
-- On TMINUS shift to state 210
-- On TGUIL shift to state 211
-- On TDOLLARDOLLAR shift to state 213
-- On TDOLLAR shift to state 214
-- On TBANG shift to state 216
-- On TBACKQUOTE shift to state 217
-- On TANTISLASH shift to state 85
-- On LDots shift to state 222
-- On unticked_function_declaration shift to state 696
-- On unticked_class_declaration shift to state 697
-- On statement shift to state 698
-- On simple_expr shift to state 223
-- On qualified_name shift to state 94
-- On qualified_class_name shift to state 225
-- On primary_expr shift to state 226
-- On new_expr shift to state 227
-- On namespace_name shift to state 102
-- On member_expr shift to state 228
-- On list(inner_statement) shift to state 855
-- On lambda_expr shift to state 231
-- On inner_statement shift to state 701
-- On ident_in_name shift to state 57
-- On ident shift to state 56
-- On function_declaration shift to state 703
-- On expr shift to state 704
-- On constant shift to state 239
-- On class_entry_type shift to state 706
-- On class_declaration shift to state 716
-- On call_expr shift to state 240
-- On attributes shift to state 717
## Reductions:
-- On TCBRACE
--   reduce production list(inner_statement) ->

State 855:
## Known stack suffix:
## T_TRY TOBRACE list(inner_statement) TCBRACE T_CATCH TOPAR list_sep2(class_name,TOR) T_VARIABLE TCPAR TOBRACE list(inner_statement)
## LR(1) items:
statement -> T_TRY TOBRACE list(inner_statement) TCBRACE T_CATCH TOPAR list_sep2(class_name,TOR) T_VARIABLE TCPAR TOBRACE list(inner_statement) . TCBRACE list(additional_catch) option(finally_clause) [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_ENDWHILE T_ENDSWITCH T_ENDIF T_ENDFOREACH T_ENDFOR T_ENDDECLARE T_EMPTY T_ELSEIF T_ELSE T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DEFAULT T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_CASE T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
## Transitions:
-- On TCBRACE shift to state 856
## Reductions:

State 856:
## Known stack suffix:
## T_TRY TOBRACE list(inner_statement) TCBRACE T_CATCH TOPAR list_sep2(class_name,TOR) T_VARIABLE TCPAR TOBRACE list(inner_statement) TCBRACE
## LR(1) items:
statement -> T_TRY TOBRACE list(inner_statement) TCBRACE T_CATCH TOPAR list_sep2(class_name,TOR) T_VARIABLE TCPAR TOBRACE list(inner_statement) TCBRACE . list(additional_catch) option(finally_clause) [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_ENDWHILE T_ENDSWITCH T_ENDIF T_ENDFOREACH T_ENDFOR T_ENDDECLARE T_EMPTY T_ELSEIF T_ELSE T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DEFAULT T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_CASE T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
## Transitions:
-- On T_CATCH shift to state 857
-- On list(additional_catch) shift to state 870
-- On additional_catch shift to state 873
## Reductions:
-- On T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINALLY T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_ENDWHILE T_ENDSWITCH T_ENDIF T_ENDFOREACH T_ENDFOR T_ENDDECLARE T_EMPTY T_ELSEIF T_ELSE T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DEFAULT T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_CASE T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF
--   reduce production list(additional_catch) ->

State 857:
## Known stack suffix:
## T_CATCH
## LR(1) items:
additional_catch -> T_CATCH . TOPAR class_name T_VARIABLE TCPAR TOBRACE list(inner_statement) TCBRACE [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINALLY T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_ENDWHILE T_ENDSWITCH T_ENDIF T_ENDFOREACH T_ENDFOR T_ENDDECLARE T_EMPTY T_ELSEIF T_ELSE T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DEFAULT T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_CATCH T_CASE T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
additional_catch -> T_CATCH . TOPAR class_name T_METAVAR TCPAR TOBRACE list(inner_statement) TCBRACE [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINALLY T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_ENDWHILE T_ENDSWITCH T_ENDIF T_ENDFOREACH T_ENDFOR T_ENDDECLARE T_EMPTY T_ELSEIF T_ELSE T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DEFAULT T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_CATCH T_CASE T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
## Transitions:
-- On TOPAR shift to state 858
## Reductions:

State 858:
## Known stack suffix:
## T_CATCH TOPAR
## LR(1) items:
additional_catch -> T_CATCH TOPAR . class_name T_VARIABLE TCPAR TOBRACE list(inner_statement) TCBRACE [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINALLY T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_ENDWHILE T_ENDSWITCH T_ENDIF T_ENDFOREACH T_ENDFOR T_ENDDECLARE T_EMPTY T_ELSEIF T_ELSE T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DEFAULT T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_CATCH T_CASE T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
additional_catch -> T_CATCH TOPAR . class_name T_METAVAR TCPAR TOBRACE list(inner_statement) TCBRACE [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINALLY T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_ENDWHILE T_ENDSWITCH T_ENDIF T_ENDFOREACH T_ENDFOR T_ENDDECLARE T_EMPTY T_ELSEIF T_ELSE T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DEFAULT T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_CATCH T_CASE T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
## Transitions:
-- On T_TYPE shift to state 6
-- On T_SUPER shift to state 8
-- On T_NAMESPACE shift to state 50
-- On T_METAVAR shift to state 17
-- On T_INSTANCEOF shift to state 52
-- On T_IDENT shift to state 18
-- On T_ENUM shift to state 19
-- On T_ARRAY shift to state 79
-- On TANTISLASH shift to state 85
-- On qualified_name shift to state 94
-- On qualified_class_name_or_array shift to state 95
-- On qualified_class_name shift to state 100
-- On namespace_name shift to state 102
-- On ident_in_name shift to state 57
-- On ident shift to state 56
-- On class_name shift to state 859
## Reductions:

State 859:
## Known stack suffix:
## T_CATCH TOPAR class_name
## LR(1) items:
additional_catch -> T_CATCH TOPAR class_name . T_VARIABLE TCPAR TOBRACE list(inner_statement) TCBRACE [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINALLY T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_ENDWHILE T_ENDSWITCH T_ENDIF T_ENDFOREACH T_ENDFOR T_ENDDECLARE T_EMPTY T_ELSEIF T_ELSE T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DEFAULT T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_CATCH T_CASE T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
additional_catch -> T_CATCH TOPAR class_name . T_METAVAR TCPAR TOBRACE list(inner_statement) TCBRACE [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINALLY T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_ENDWHILE T_ENDSWITCH T_ENDIF T_ENDFOREACH T_ENDFOR T_ENDDECLARE T_EMPTY T_ELSEIF T_ELSE T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DEFAULT T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_CATCH T_CASE T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
## Transitions:
-- On T_VARIABLE shift to state 860
-- On T_METAVAR shift to state 865
## Reductions:

State 860:
## Known stack suffix:
## T_CATCH TOPAR class_name T_VARIABLE
## LR(1) items:
additional_catch -> T_CATCH TOPAR class_name T_VARIABLE . TCPAR TOBRACE list(inner_statement) TCBRACE [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINALLY T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_ENDWHILE T_ENDSWITCH T_ENDIF T_ENDFOREACH T_ENDFOR T_ENDDECLARE T_EMPTY T_ELSEIF T_ELSE T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DEFAULT T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_CATCH T_CASE T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
## Transitions:
-- On TCPAR shift to state 861
## Reductions:

State 861:
## Known stack suffix:
## T_CATCH TOPAR class_name T_VARIABLE TCPAR
## LR(1) items:
additional_catch -> T_CATCH TOPAR class_name T_VARIABLE TCPAR . TOBRACE list(inner_statement) TCBRACE [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINALLY T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_ENDWHILE T_ENDSWITCH T_ENDIF T_ENDFOREACH T_ENDFOR T_ENDDECLARE T_EMPTY T_ELSEIF T_ELSE T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DEFAULT T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_CATCH T_CASE T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
## Transitions:
-- On TOBRACE shift to state 862
## Reductions:

State 862:
## Known stack suffix:
## T_CATCH TOPAR class_name T_VARIABLE TCPAR TOBRACE
## LR(1) items:
additional_catch -> T_CATCH TOPAR class_name T_VARIABLE TCPAR TOBRACE . list(inner_statement) TCBRACE [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINALLY T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_ENDWHILE T_ENDSWITCH T_ENDIF T_ENDFOREACH T_ENDFOR T_ENDDECLARE T_EMPTY T_ELSEIF T_ELSE T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DEFAULT T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_CATCH T_CASE T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
## Transitions:
-- On T__AT shift to state 1
-- On T_YIELD shift to state 2
-- On T_WHILE shift to state 158
-- On T_VARIABLE shift to state 3
-- On T_USE shift to state 190
-- On T_UNSET_CAST shift to state 5
-- On T_UNSET shift to state 197
-- On T_TYPE shift to state 6
-- On T_TRY shift to state 391
-- On T_TRAIT_C shift to state 7
-- On T_TRAIT shift to state 393
-- On T_THROW shift to state 520
-- On T_SWITCH shift to state 525
-- On T_SUPER shift to state 8
-- On T_STRING_CAST shift to state 9
-- On T_STATIC shift to state 536
-- On T_START_HEREDOC shift to state 25
-- On T_SL shift to state 16
-- On T_SELF shift to state 40
-- On T_RETURN shift to state 553
-- On T_REQUIRE_ONCE shift to state 41
-- On T_REQUIRE shift to state 42
-- On T_PRINT shift to state 43
-- On T_PARENT shift to state 44
-- On T_OPEN_TAG_WITH_ECHO shift to state 558
-- On T_OBJECT_CAST shift to state 45
-- On T_NEW shift to state 46
-- On T_NAMESPACE_C shift to state 49
-- On T_NAMESPACE shift to state 50
-- On T_METHOD_C shift to state 58
-- On T_METAVAR shift to state 17
-- On T_LNUMBER shift to state 59
-- On T_LIST shift to state 69
-- On T_LINE shift to state 60
-- On T_LAMBDA_OPAR shift to state 73
-- On T_ISSET shift to state 133
-- On T_INT_CAST shift to state 135
-- On T_INTERFACE shift to state 563
-- On T_INSTANCEOF shift to state 52
-- On T_INLINE_HTML shift to state 576
-- On T_INCLUDE_ONCE shift to state 136
-- On T_INCLUDE shift to state 137
-- On T_INC shift to state 138
-- On T_IF shift to state 577
-- On T_IDENT shift to state 18
-- On T_GLOBAL shift to state 587
-- On T_FUNC_C shift to state 61
-- On T_FUNCTION shift to state 657
-- On T_FOREACH shift to state 600
-- On T_FOR shift to state 624
-- On T_FINAL shift to state 666
-- On T_FILE shift to state 62
-- On T_EXIT shift to state 160
-- On T_EVAL shift to state 162
-- On T_ENUM shift to state 668
-- On T_EMPTY shift to state 164
-- On T_ELLIPSIS shift to state 635
-- On T_ECHO shift to state 636
-- On T_DOUBLE_CAST shift to state 168
-- On T_DO shift to state 644
-- On T_DNUMBER shift to state 63
-- On T_DIR shift to state 64
-- On T_DECLARE shift to state 645
-- On T_DEC shift to state 169
-- On T_CONTINUE shift to state 649
-- On T_CONSTANT_ENCAPSED_STRING shift to state 65
-- On T_CLONE shift to state 170
-- On T_CLASS_C shift to state 66
-- On T_CLASS shift to state 682
-- On T_BREAK shift to state 652
-- On T_BOOL_CAST shift to state 171
-- On T_AWAIT shift to state 172
-- On T_ASYNC shift to state 683
-- On T_ARRAY_CAST shift to state 200
-- On T_ARRAY shift to state 201
-- On T_ABSTRACT shift to state 694
-- On TTILDE shift to state 204
-- On TSEMICOLON shift to state 655
-- On TPLUS shift to state 205
-- On TOPAR shift to state 206
-- On TOBRACE shift to state 656
-- On TOBRA shift to state 209
-- On TMINUS shift to state 210
-- On TGUIL shift to state 211
-- On TDOLLARDOLLAR shift to state 213
-- On TDOLLAR shift to state 214
-- On TBANG shift to state 216
-- On TBACKQUOTE shift to state 217
-- On TANTISLASH shift to state 85
-- On LDots shift to state 222
-- On unticked_function_declaration shift to state 696
-- On unticked_class_declaration shift to state 697
-- On statement shift to state 698
-- On simple_expr shift to state 223
-- On qualified_name shift to state 94
-- On qualified_class_name shift to state 225
-- On primary_expr shift to state 226
-- On new_expr shift to state 227
-- On namespace_name shift to state 102
-- On member_expr shift to state 228
-- On list(inner_statement) shift to state 863
-- On lambda_expr shift to state 231
-- On inner_statement shift to state 701
-- On ident_in_name shift to state 57
-- On ident shift to state 56
-- On function_declaration shift to state 703
-- On expr shift to state 704
-- On constant shift to state 239
-- On class_entry_type shift to state 706
-- On class_declaration shift to state 716
-- On call_expr shift to state 240
-- On attributes shift to state 717
## Reductions:
-- On TCBRACE
--   reduce production list(inner_statement) ->

State 863:
## Known stack suffix:
## T_CATCH TOPAR class_name T_VARIABLE TCPAR TOBRACE list(inner_statement)
## LR(1) items:
additional_catch -> T_CATCH TOPAR class_name T_VARIABLE TCPAR TOBRACE list(inner_statement) . TCBRACE [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINALLY T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_ENDWHILE T_ENDSWITCH T_ENDIF T_ENDFOREACH T_ENDFOR T_ENDDECLARE T_EMPTY T_ELSEIF T_ELSE T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DEFAULT T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_CATCH T_CASE T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
## Transitions:
-- On TCBRACE shift to state 864
## Reductions:

State 864:
## Known stack suffix:
## T_CATCH TOPAR class_name T_VARIABLE TCPAR TOBRACE list(inner_statement) TCBRACE
## LR(1) items:
additional_catch -> T_CATCH TOPAR class_name T_VARIABLE TCPAR TOBRACE list(inner_statement) TCBRACE . [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINALLY T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_ENDWHILE T_ENDSWITCH T_ENDIF T_ENDFOREACH T_ENDFOR T_ENDDECLARE T_EMPTY T_ELSEIF T_ELSE T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DEFAULT T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_CATCH T_CASE T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production additional_catch -> T_CATCH TOPAR class_name T_VARIABLE TCPAR TOBRACE list(inner_statement) TCBRACE

State 865:
## Known stack suffix:
## T_CATCH TOPAR class_name T_METAVAR
## LR(1) items:
additional_catch -> T_CATCH TOPAR class_name T_METAVAR . TCPAR TOBRACE list(inner_statement) TCBRACE [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINALLY T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_ENDWHILE T_ENDSWITCH T_ENDIF T_ENDFOREACH T_ENDFOR T_ENDDECLARE T_EMPTY T_ELSEIF T_ELSE T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DEFAULT T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_CATCH T_CASE T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
## Transitions:
-- On TCPAR shift to state 866
## Reductions:

State 866:
## Known stack suffix:
## T_CATCH TOPAR class_name T_METAVAR TCPAR
## LR(1) items:
additional_catch -> T_CATCH TOPAR class_name T_METAVAR TCPAR . TOBRACE list(inner_statement) TCBRACE [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINALLY T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_ENDWHILE T_ENDSWITCH T_ENDIF T_ENDFOREACH T_ENDFOR T_ENDDECLARE T_EMPTY T_ELSEIF T_ELSE T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DEFAULT T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_CATCH T_CASE T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
## Transitions:
-- On TOBRACE shift to state 867
## Reductions:

State 867:
## Known stack suffix:
## T_CATCH TOPAR class_name T_METAVAR TCPAR TOBRACE
## LR(1) items:
additional_catch -> T_CATCH TOPAR class_name T_METAVAR TCPAR TOBRACE . list(inner_statement) TCBRACE [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINALLY T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_ENDWHILE T_ENDSWITCH T_ENDIF T_ENDFOREACH T_ENDFOR T_ENDDECLARE T_EMPTY T_ELSEIF T_ELSE T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DEFAULT T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_CATCH T_CASE T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
## Transitions:
-- On T__AT shift to state 1
-- On T_YIELD shift to state 2
-- On T_WHILE shift to state 158
-- On T_VARIABLE shift to state 3
-- On T_USE shift to state 190
-- On T_UNSET_CAST shift to state 5
-- On T_UNSET shift to state 197
-- On T_TYPE shift to state 6
-- On T_TRY shift to state 391
-- On T_TRAIT_C shift to state 7
-- On T_TRAIT shift to state 393
-- On T_THROW shift to state 520
-- On T_SWITCH shift to state 525
-- On T_SUPER shift to state 8
-- On T_STRING_CAST shift to state 9
-- On T_STATIC shift to state 536
-- On T_START_HEREDOC shift to state 25
-- On T_SL shift to state 16
-- On T_SELF shift to state 40
-- On T_RETURN shift to state 553
-- On T_REQUIRE_ONCE shift to state 41
-- On T_REQUIRE shift to state 42
-- On T_PRINT shift to state 43
-- On T_PARENT shift to state 44
-- On T_OPEN_TAG_WITH_ECHO shift to state 558
-- On T_OBJECT_CAST shift to state 45
-- On T_NEW shift to state 46
-- On T_NAMESPACE_C shift to state 49
-- On T_NAMESPACE shift to state 50
-- On T_METHOD_C shift to state 58
-- On T_METAVAR shift to state 17
-- On T_LNUMBER shift to state 59
-- On T_LIST shift to state 69
-- On T_LINE shift to state 60
-- On T_LAMBDA_OPAR shift to state 73
-- On T_ISSET shift to state 133
-- On T_INT_CAST shift to state 135
-- On T_INTERFACE shift to state 563
-- On T_INSTANCEOF shift to state 52
-- On T_INLINE_HTML shift to state 576
-- On T_INCLUDE_ONCE shift to state 136
-- On T_INCLUDE shift to state 137
-- On T_INC shift to state 138
-- On T_IF shift to state 577
-- On T_IDENT shift to state 18
-- On T_GLOBAL shift to state 587
-- On T_FUNC_C shift to state 61
-- On T_FUNCTION shift to state 657
-- On T_FOREACH shift to state 600
-- On T_FOR shift to state 624
-- On T_FINAL shift to state 666
-- On T_FILE shift to state 62
-- On T_EXIT shift to state 160
-- On T_EVAL shift to state 162
-- On T_ENUM shift to state 668
-- On T_EMPTY shift to state 164
-- On T_ELLIPSIS shift to state 635
-- On T_ECHO shift to state 636
-- On T_DOUBLE_CAST shift to state 168
-- On T_DO shift to state 644
-- On T_DNUMBER shift to state 63
-- On T_DIR shift to state 64
-- On T_DECLARE shift to state 645
-- On T_DEC shift to state 169
-- On T_CONTINUE shift to state 649
-- On T_CONSTANT_ENCAPSED_STRING shift to state 65
-- On T_CLONE shift to state 170
-- On T_CLASS_C shift to state 66
-- On T_CLASS shift to state 682
-- On T_BREAK shift to state 652
-- On T_BOOL_CAST shift to state 171
-- On T_AWAIT shift to state 172
-- On T_ASYNC shift to state 683
-- On T_ARRAY_CAST shift to state 200
-- On T_ARRAY shift to state 201
-- On T_ABSTRACT shift to state 694
-- On TTILDE shift to state 204
-- On TSEMICOLON shift to state 655
-- On TPLUS shift to state 205
-- On TOPAR shift to state 206
-- On TOBRACE shift to state 656
-- On TOBRA shift to state 209
-- On TMINUS shift to state 210
-- On TGUIL shift to state 211
-- On TDOLLARDOLLAR shift to state 213
-- On TDOLLAR shift to state 214
-- On TBANG shift to state 216
-- On TBACKQUOTE shift to state 217
-- On TANTISLASH shift to state 85
-- On LDots shift to state 222
-- On unticked_function_declaration shift to state 696
-- On unticked_class_declaration shift to state 697
-- On statement shift to state 698
-- On simple_expr shift to state 223
-- On qualified_name shift to state 94
-- On qualified_class_name shift to state 225
-- On primary_expr shift to state 226
-- On new_expr shift to state 227
-- On namespace_name shift to state 102
-- On member_expr shift to state 228
-- On list(inner_statement) shift to state 868
-- On lambda_expr shift to state 231
-- On inner_statement shift to state 701
-- On ident_in_name shift to state 57
-- On ident shift to state 56
-- On function_declaration shift to state 703
-- On expr shift to state 704
-- On constant shift to state 239
-- On class_entry_type shift to state 706
-- On class_declaration shift to state 716
-- On call_expr shift to state 240
-- On attributes shift to state 717
## Reductions:
-- On TCBRACE
--   reduce production list(inner_statement) ->

State 868:
## Known stack suffix:
## T_CATCH TOPAR class_name T_METAVAR TCPAR TOBRACE list(inner_statement)
## LR(1) items:
additional_catch -> T_CATCH TOPAR class_name T_METAVAR TCPAR TOBRACE list(inner_statement) . TCBRACE [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINALLY T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_ENDWHILE T_ENDSWITCH T_ENDIF T_ENDFOREACH T_ENDFOR T_ENDDECLARE T_EMPTY T_ELSEIF T_ELSE T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DEFAULT T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_CATCH T_CASE T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
## Transitions:
-- On TCBRACE shift to state 869
## Reductions:

State 869:
## Known stack suffix:
## T_CATCH TOPAR class_name T_METAVAR TCPAR TOBRACE list(inner_statement) TCBRACE
## LR(1) items:
additional_catch -> T_CATCH TOPAR class_name T_METAVAR TCPAR TOBRACE list(inner_statement) TCBRACE . [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINALLY T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_ENDWHILE T_ENDSWITCH T_ENDIF T_ENDFOREACH T_ENDFOR T_ENDDECLARE T_EMPTY T_ELSEIF T_ELSE T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DEFAULT T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_CATCH T_CASE T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production additional_catch -> T_CATCH TOPAR class_name T_METAVAR TCPAR TOBRACE list(inner_statement) TCBRACE

State 870:
## Known stack suffix:
## T_TRY TOBRACE list(inner_statement) TCBRACE T_CATCH TOPAR list_sep2(class_name,TOR) T_VARIABLE TCPAR TOBRACE list(inner_statement) TCBRACE list(additional_catch)
## LR(1) items:
statement -> T_TRY TOBRACE list(inner_statement) TCBRACE T_CATCH TOPAR list_sep2(class_name,TOR) T_VARIABLE TCPAR TOBRACE list(inner_statement) TCBRACE list(additional_catch) . option(finally_clause) [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_ENDWHILE T_ENDSWITCH T_ENDIF T_ENDFOREACH T_ENDFOR T_ENDDECLARE T_EMPTY T_ELSEIF T_ELSE T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DEFAULT T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_CASE T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
## Transitions:
-- On T_FINALLY shift to state 845
-- On option(finally_clause) shift to state 871
-- On finally_clause shift to state 872
## Reductions:
-- On T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_ENDWHILE T_ENDSWITCH T_ENDIF T_ENDFOREACH T_ENDFOR T_ENDDECLARE T_EMPTY T_ELSEIF T_ELSE T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DEFAULT T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_CASE T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF
--   reduce production option(finally_clause) ->

State 871:
## Known stack suffix:
## T_TRY TOBRACE list(inner_statement) TCBRACE T_CATCH TOPAR list_sep2(class_name,TOR) T_VARIABLE TCPAR TOBRACE list(inner_statement) TCBRACE list(additional_catch) option(finally_clause)
## LR(1) items:
statement -> T_TRY TOBRACE list(inner_statement) TCBRACE T_CATCH TOPAR list_sep2(class_name,TOR) T_VARIABLE TCPAR TOBRACE list(inner_statement) TCBRACE list(additional_catch) option(finally_clause) . [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_ENDWHILE T_ENDSWITCH T_ENDIF T_ENDFOREACH T_ENDFOR T_ENDDECLARE T_EMPTY T_ELSEIF T_ELSE T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DEFAULT T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_CASE T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production statement -> T_TRY TOBRACE list(inner_statement) TCBRACE T_CATCH TOPAR list_sep2(class_name,TOR) T_VARIABLE TCPAR TOBRACE list(inner_statement) TCBRACE list(additional_catch) option(finally_clause)

State 872:
## Known stack suffix:
## finally_clause
## LR(1) items:
option(finally_clause) -> finally_clause . [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_ENDWHILE T_ENDSWITCH T_ENDIF T_ENDFOREACH T_ENDFOR T_ENDDECLARE T_EMPTY T_ELSEIF T_ELSE T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DEFAULT T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_CASE T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production option(finally_clause) -> finally_clause

State 873:
## Known stack suffix:
## additional_catch
## LR(1) items:
list(additional_catch) -> additional_catch . list(additional_catch) [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINALLY T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_ENDWHILE T_ENDSWITCH T_ENDIF T_ENDFOREACH T_ENDFOR T_ENDDECLARE T_EMPTY T_ELSEIF T_ELSE T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DEFAULT T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_CASE T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
## Transitions:
-- On T_CATCH shift to state 857
-- On list(additional_catch) shift to state 874
-- On additional_catch shift to state 873
## Reductions:
-- On T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINALLY T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_ENDWHILE T_ENDSWITCH T_ENDIF T_ENDFOREACH T_ENDFOR T_ENDDECLARE T_EMPTY T_ELSEIF T_ELSE T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DEFAULT T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_CASE T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF
--   reduce production list(additional_catch) ->

State 874:
## Known stack suffix:
## additional_catch list(additional_catch)
## LR(1) items:
list(additional_catch) -> additional_catch list(additional_catch) . [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINALLY T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_ENDWHILE T_ENDSWITCH T_ENDIF T_ENDFOREACH T_ENDFOR T_ENDDECLARE T_EMPTY T_ELSEIF T_ELSE T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DEFAULT T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_CASE T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production list(additional_catch) -> additional_catch list(additional_catch)

State 875:
## Known stack suffix:
## T_TRY TOBRACE list(inner_statement) TCBRACE T_CATCH TOPAR list_sep2(class_name,TOR) T_METAVAR
## LR(1) items:
statement -> T_TRY TOBRACE list(inner_statement) TCBRACE T_CATCH TOPAR list_sep2(class_name,TOR) T_METAVAR . TCPAR TOBRACE list(inner_statement) TCBRACE list(additional_catch) option(finally_clause) [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_ENDWHILE T_ENDSWITCH T_ENDIF T_ENDFOREACH T_ENDFOR T_ENDDECLARE T_EMPTY T_ELSEIF T_ELSE T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DEFAULT T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_CASE T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
## Transitions:
-- On TCPAR shift to state 876
## Reductions:

State 876:
## Known stack suffix:
## T_TRY TOBRACE list(inner_statement) TCBRACE T_CATCH TOPAR list_sep2(class_name,TOR) T_METAVAR TCPAR
## LR(1) items:
statement -> T_TRY TOBRACE list(inner_statement) TCBRACE T_CATCH TOPAR list_sep2(class_name,TOR) T_METAVAR TCPAR . TOBRACE list(inner_statement) TCBRACE list(additional_catch) option(finally_clause) [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_ENDWHILE T_ENDSWITCH T_ENDIF T_ENDFOREACH T_ENDFOR T_ENDDECLARE T_EMPTY T_ELSEIF T_ELSE T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DEFAULT T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_CASE T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
## Transitions:
-- On TOBRACE shift to state 877
## Reductions:

State 877:
## Known stack suffix:
## T_TRY TOBRACE list(inner_statement) TCBRACE T_CATCH TOPAR list_sep2(class_name,TOR) T_METAVAR TCPAR TOBRACE
## LR(1) items:
statement -> T_TRY TOBRACE list(inner_statement) TCBRACE T_CATCH TOPAR list_sep2(class_name,TOR) T_METAVAR TCPAR TOBRACE . list(inner_statement) TCBRACE list(additional_catch) option(finally_clause) [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_ENDWHILE T_ENDSWITCH T_ENDIF T_ENDFOREACH T_ENDFOR T_ENDDECLARE T_EMPTY T_ELSEIF T_ELSE T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DEFAULT T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_CASE T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
## Transitions:
-- On T__AT shift to state 1
-- On T_YIELD shift to state 2
-- On T_WHILE shift to state 158
-- On T_VARIABLE shift to state 3
-- On T_USE shift to state 190
-- On T_UNSET_CAST shift to state 5
-- On T_UNSET shift to state 197
-- On T_TYPE shift to state 6
-- On T_TRY shift to state 391
-- On T_TRAIT_C shift to state 7
-- On T_TRAIT shift to state 393
-- On T_THROW shift to state 520
-- On T_SWITCH shift to state 525
-- On T_SUPER shift to state 8
-- On T_STRING_CAST shift to state 9
-- On T_STATIC shift to state 536
-- On T_START_HEREDOC shift to state 25
-- On T_SL shift to state 16
-- On T_SELF shift to state 40
-- On T_RETURN shift to state 553
-- On T_REQUIRE_ONCE shift to state 41
-- On T_REQUIRE shift to state 42
-- On T_PRINT shift to state 43
-- On T_PARENT shift to state 44
-- On T_OPEN_TAG_WITH_ECHO shift to state 558
-- On T_OBJECT_CAST shift to state 45
-- On T_NEW shift to state 46
-- On T_NAMESPACE_C shift to state 49
-- On T_NAMESPACE shift to state 50
-- On T_METHOD_C shift to state 58
-- On T_METAVAR shift to state 17
-- On T_LNUMBER shift to state 59
-- On T_LIST shift to state 69
-- On T_LINE shift to state 60
-- On T_LAMBDA_OPAR shift to state 73
-- On T_ISSET shift to state 133
-- On T_INT_CAST shift to state 135
-- On T_INTERFACE shift to state 563
-- On T_INSTANCEOF shift to state 52
-- On T_INLINE_HTML shift to state 576
-- On T_INCLUDE_ONCE shift to state 136
-- On T_INCLUDE shift to state 137
-- On T_INC shift to state 138
-- On T_IF shift to state 577
-- On T_IDENT shift to state 18
-- On T_GLOBAL shift to state 587
-- On T_FUNC_C shift to state 61
-- On T_FUNCTION shift to state 657
-- On T_FOREACH shift to state 600
-- On T_FOR shift to state 624
-- On T_FINAL shift to state 666
-- On T_FILE shift to state 62
-- On T_EXIT shift to state 160
-- On T_EVAL shift to state 162
-- On T_ENUM shift to state 668
-- On T_EMPTY shift to state 164
-- On T_ELLIPSIS shift to state 635
-- On T_ECHO shift to state 636
-- On T_DOUBLE_CAST shift to state 168
-- On T_DO shift to state 644
-- On T_DNUMBER shift to state 63
-- On T_DIR shift to state 64
-- On T_DECLARE shift to state 645
-- On T_DEC shift to state 169
-- On T_CONTINUE shift to state 649
-- On T_CONSTANT_ENCAPSED_STRING shift to state 65
-- On T_CLONE shift to state 170
-- On T_CLASS_C shift to state 66
-- On T_CLASS shift to state 682
-- On T_BREAK shift to state 652
-- On T_BOOL_CAST shift to state 171
-- On T_AWAIT shift to state 172
-- On T_ASYNC shift to state 683
-- On T_ARRAY_CAST shift to state 200
-- On T_ARRAY shift to state 201
-- On T_ABSTRACT shift to state 694
-- On TTILDE shift to state 204
-- On TSEMICOLON shift to state 655
-- On TPLUS shift to state 205
-- On TOPAR shift to state 206
-- On TOBRACE shift to state 656
-- On TOBRA shift to state 209
-- On TMINUS shift to state 210
-- On TGUIL shift to state 211
-- On TDOLLARDOLLAR shift to state 213
-- On TDOLLAR shift to state 214
-- On TBANG shift to state 216
-- On TBACKQUOTE shift to state 217
-- On TANTISLASH shift to state 85
-- On LDots shift to state 222
-- On unticked_function_declaration shift to state 696
-- On unticked_class_declaration shift to state 697
-- On statement shift to state 698
-- On simple_expr shift to state 223
-- On qualified_name shift to state 94
-- On qualified_class_name shift to state 225
-- On primary_expr shift to state 226
-- On new_expr shift to state 227
-- On namespace_name shift to state 102
-- On member_expr shift to state 228
-- On list(inner_statement) shift to state 878
-- On lambda_expr shift to state 231
-- On inner_statement shift to state 701
-- On ident_in_name shift to state 57
-- On ident shift to state 56
-- On function_declaration shift to state 703
-- On expr shift to state 704
-- On constant shift to state 239
-- On class_entry_type shift to state 706
-- On class_declaration shift to state 716
-- On call_expr shift to state 240
-- On attributes shift to state 717
## Reductions:
-- On TCBRACE
--   reduce production list(inner_statement) ->

State 878:
## Known stack suffix:
## T_TRY TOBRACE list(inner_statement) TCBRACE T_CATCH TOPAR list_sep2(class_name,TOR) T_METAVAR TCPAR TOBRACE list(inner_statement)
## LR(1) items:
statement -> T_TRY TOBRACE list(inner_statement) TCBRACE T_CATCH TOPAR list_sep2(class_name,TOR) T_METAVAR TCPAR TOBRACE list(inner_statement) . TCBRACE list(additional_catch) option(finally_clause) [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_ENDWHILE T_ENDSWITCH T_ENDIF T_ENDFOREACH T_ENDFOR T_ENDDECLARE T_EMPTY T_ELSEIF T_ELSE T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DEFAULT T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_CASE T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
## Transitions:
-- On TCBRACE shift to state 879
## Reductions:

State 879:
## Known stack suffix:
## T_TRY TOBRACE list(inner_statement) TCBRACE T_CATCH TOPAR list_sep2(class_name,TOR) T_METAVAR TCPAR TOBRACE list(inner_statement) TCBRACE
## LR(1) items:
statement -> T_TRY TOBRACE list(inner_statement) TCBRACE T_CATCH TOPAR list_sep2(class_name,TOR) T_METAVAR TCPAR TOBRACE list(inner_statement) TCBRACE . list(additional_catch) option(finally_clause) [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_ENDWHILE T_ENDSWITCH T_ENDIF T_ENDFOREACH T_ENDFOR T_ENDDECLARE T_EMPTY T_ELSEIF T_ELSE T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DEFAULT T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_CASE T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
## Transitions:
-- On T_CATCH shift to state 857
-- On list(additional_catch) shift to state 880
-- On additional_catch shift to state 873
## Reductions:
-- On T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINALLY T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_ENDWHILE T_ENDSWITCH T_ENDIF T_ENDFOREACH T_ENDFOR T_ENDDECLARE T_EMPTY T_ELSEIF T_ELSE T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DEFAULT T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_CASE T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF
--   reduce production list(additional_catch) ->

State 880:
## Known stack suffix:
## T_TRY TOBRACE list(inner_statement) TCBRACE T_CATCH TOPAR list_sep2(class_name,TOR) T_METAVAR TCPAR TOBRACE list(inner_statement) TCBRACE list(additional_catch)
## LR(1) items:
statement -> T_TRY TOBRACE list(inner_statement) TCBRACE T_CATCH TOPAR list_sep2(class_name,TOR) T_METAVAR TCPAR TOBRACE list(inner_statement) TCBRACE list(additional_catch) . option(finally_clause) [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_ENDWHILE T_ENDSWITCH T_ENDIF T_ENDFOREACH T_ENDFOR T_ENDDECLARE T_EMPTY T_ELSEIF T_ELSE T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DEFAULT T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_CASE T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
## Transitions:
-- On T_FINALLY shift to state 845
-- On option(finally_clause) shift to state 881
-- On finally_clause shift to state 872
## Reductions:
-- On T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_ENDWHILE T_ENDSWITCH T_ENDIF T_ENDFOREACH T_ENDFOR T_ENDDECLARE T_EMPTY T_ELSEIF T_ELSE T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DEFAULT T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_CASE T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF
--   reduce production option(finally_clause) ->

State 881:
## Known stack suffix:
## T_TRY TOBRACE list(inner_statement) TCBRACE T_CATCH TOPAR list_sep2(class_name,TOR) T_METAVAR TCPAR TOBRACE list(inner_statement) TCBRACE list(additional_catch) option(finally_clause)
## LR(1) items:
statement -> T_TRY TOBRACE list(inner_statement) TCBRACE T_CATCH TOPAR list_sep2(class_name,TOR) T_METAVAR TCPAR TOBRACE list(inner_statement) TCBRACE list(additional_catch) option(finally_clause) . [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_ENDWHILE T_ENDSWITCH T_ENDIF T_ENDFOREACH T_ENDFOR T_ENDDECLARE T_EMPTY T_ELSEIF T_ELSE T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DEFAULT T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_CASE T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production statement -> T_TRY TOBRACE list(inner_statement) TCBRACE T_CATCH TOPAR list_sep2(class_name,TOR) T_METAVAR TCPAR TOBRACE list(inner_statement) TCBRACE list(additional_catch) option(finally_clause)

State 882:
## Known stack suffix:
## list_sep2(class_name,TOR) TOR
## LR(1) items:
list_sep2(class_name,TOR) -> list_sep2(class_name,TOR) TOR . class_name [ T_VARIABLE T_METAVAR TOR ]
## Transitions:
-- On T_TYPE shift to state 6
-- On T_SUPER shift to state 8
-- On T_NAMESPACE shift to state 50
-- On T_METAVAR shift to state 17
-- On T_INSTANCEOF shift to state 52
-- On T_IDENT shift to state 18
-- On T_ENUM shift to state 19
-- On T_ARRAY shift to state 79
-- On TANTISLASH shift to state 85
-- On qualified_name shift to state 94
-- On qualified_class_name_or_array shift to state 95
-- On qualified_class_name shift to state 100
-- On namespace_name shift to state 102
-- On ident_in_name shift to state 57
-- On ident shift to state 56
-- On class_name shift to state 883
## Reductions:

State 883:
## Known stack suffix:
## list_sep2(class_name,TOR) TOR class_name
## LR(1) items:
list_sep2(class_name,TOR) -> list_sep2(class_name,TOR) TOR class_name . [ T_VARIABLE T_METAVAR TOR ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production list_sep2(class_name,TOR) -> list_sep2(class_name,TOR) TOR class_name

State 884:
## Known stack suffix:
## class_name
## LR(1) items:
list_sep2(class_name,TOR) -> class_name . [ T_VARIABLE T_METAVAR TOR ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production list_sep2(class_name,TOR) -> class_name

State 885:
## Known stack suffix:
## T_TRY TOBRACE list(inner_statement) TCBRACE finally_clause
## LR(1) items:
statement -> T_TRY TOBRACE list(inner_statement) TCBRACE finally_clause . [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_ENDWHILE T_ENDSWITCH T_ENDIF T_ENDFOREACH T_ENDFOR T_ENDDECLARE T_EMPTY T_ELSEIF T_ELSE T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DEFAULT T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_CASE T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production statement -> T_TRY TOBRACE list(inner_statement) TCBRACE finally_clause

State 886:
## Known stack suffix:
## T_ASYNC T_FUNCTION is_reference TOPAR parameter_list TCPAR lexical_vars option(return_type) TOBRACE list(inner_statement)
## LR(1) items:
expr -> T_ASYNC T_FUNCTION is_reference TOPAR parameter_list TCPAR lexical_vars option(return_type) TOBRACE list(inner_statement) . TCBRACE [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
## Transitions:
-- On TCBRACE shift to state 887
## Reductions:

State 887:
## Known stack suffix:
## T_ASYNC T_FUNCTION is_reference TOPAR parameter_list TCPAR lexical_vars option(return_type) TOBRACE list(inner_statement) TCBRACE
## LR(1) items:
expr -> T_ASYNC T_FUNCTION is_reference TOPAR parameter_list TCPAR lexical_vars option(return_type) TOBRACE list(inner_statement) TCBRACE . [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production expr -> T_ASYNC T_FUNCTION is_reference TOPAR parameter_list TCPAR lexical_vars option(return_type) TOBRACE list(inner_statement) TCBRACE

State 888:
## Known stack suffix:
## T_AWAIT expr
## LR(1) items:
expr -> expr . T_INC [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_DEC [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_BOOLEAN_OR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_BOOLEAN_AND expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_LOGICAL_OR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_LOGICAL_AND expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_LOGICAL_XOR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TPLUS expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TMINUS expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TMUL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TDIV expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TMOD expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TPOW expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TAND expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TOR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TXOR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_SL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_SR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TDOT expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_IDENTICAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_NOT_IDENTICAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_NOT_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TSMALLER expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_SMALLER_OR_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TGREATER expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_GREATER_OR_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_ROCKET expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TQUESTION expr TCOLON expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TQUESTION TCOLON expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TQUESTION TQUESTION expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_INSTANCEOF expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> T_AWAIT expr . [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
## Transitions:
-- On T_SR shift to state 233
-- On T_SL shift to state 244
-- On T_ROCKET shift to state 260
-- On T_LOGICAL_XOR shift to state 270
-- On T_LOGICAL_OR shift to state 298
-- On T_LOGICAL_AND shift to state 272
-- On T_IS_SMALLER_OR_EQUAL shift to state 262
-- On T_IS_NOT_IDENTICAL shift to state 274
-- On T_IS_NOT_EQUAL shift to state 276
-- On T_IS_IDENTICAL shift to state 278
-- On T_IS_GREATER_OR_EQUAL shift to state 264
-- On T_IS_EQUAL shift to state 280
-- On T_INSTANCEOF shift to state 235
-- On T_INC shift to state 237
-- On T_DEC shift to state 238
-- On T_BOOLEAN_OR shift to state 282
-- On T_BOOLEAN_AND shift to state 284
-- On TXOR shift to state 286
-- On TSMALLER shift to state 266
-- On TQUESTION shift to state 292
-- On TPOW shift to state 246
-- On TPLUS shift to state 248
-- On TOR shift to state 290
-- On TMUL shift to state 250
-- On TMOD shift to state 252
-- On TMINUS shift to state 256
-- On TGREATER shift to state 268
-- On TDOT shift to state 258
-- On TDIV shift to state 254
-- On TAND shift to state 288
## Reductions:
-- On T_LAMBDA_CPAR T_CLOSE_TAG_OF_ECHO T_AWAIT T_AS T_ARROW TSEMICOLON TCPAR TCOMMA TCOLON TCBRACE TCBRA RDots EOF
--   reduce production expr -> T_AWAIT expr

State 889:
## Known stack suffix:
## T_BOOL_CAST expr
## LR(1) items:
expr -> expr . T_INC [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_DEC [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_BOOLEAN_OR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_BOOLEAN_AND expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_LOGICAL_OR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_LOGICAL_AND expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_LOGICAL_XOR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TPLUS expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TMINUS expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TMUL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TDIV expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TMOD expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TPOW expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TAND expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TOR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TXOR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_SL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_SR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TDOT expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_IDENTICAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_NOT_IDENTICAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_NOT_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TSMALLER expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_SMALLER_OR_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TGREATER expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_GREATER_OR_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_ROCKET expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TQUESTION expr TCOLON expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TQUESTION TCOLON expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TQUESTION TQUESTION expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_INSTANCEOF expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> T_BOOL_CAST expr . [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
## Transitions:
-- On T_INC shift to state 237
-- On T_DEC shift to state 238
## Reductions:
-- On T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF
--   reduce production expr -> T_BOOL_CAST expr

State 890:
## Known stack suffix:
## T_CLONE expr
## LR(1) items:
expr -> expr . T_INC [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_DEC [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_BOOLEAN_OR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_BOOLEAN_AND expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_LOGICAL_OR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_LOGICAL_AND expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_LOGICAL_XOR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TPLUS expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TMINUS expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TMUL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TDIV expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TMOD expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TPOW expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TAND expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TOR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TXOR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_SL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_SR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TDOT expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_IDENTICAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_NOT_IDENTICAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_NOT_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TSMALLER expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_SMALLER_OR_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TGREATER expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_GREATER_OR_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_ROCKET expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TQUESTION expr TCOLON expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TQUESTION TCOLON expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TQUESTION TQUESTION expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_INSTANCEOF expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> T_CLONE expr . [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production expr -> T_CLONE expr

State 891:
## Known stack suffix:
## T_DEC expr
## LR(1) items:
expr -> expr . T_INC [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_DEC [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> T_DEC expr . [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_BOOLEAN_OR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_BOOLEAN_AND expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_LOGICAL_OR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_LOGICAL_AND expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_LOGICAL_XOR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TPLUS expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TMINUS expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TMUL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TDIV expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TMOD expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TPOW expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TAND expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TOR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TXOR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_SL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_SR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TDOT expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_IDENTICAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_NOT_IDENTICAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_NOT_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TSMALLER expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_SMALLER_OR_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TGREATER expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_GREATER_OR_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_ROCKET expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TQUESTION expr TCOLON expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TQUESTION TCOLON expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TQUESTION TQUESTION expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_INSTANCEOF expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
## Transitions:
-- On T_INC shift to state 237
-- On T_DEC shift to state 238
## Reductions:
-- On T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF
--   reduce production expr -> T_DEC expr

State 892:
## Known stack suffix:
## T_DOUBLE_CAST expr
## LR(1) items:
expr -> expr . T_INC [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_DEC [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_BOOLEAN_OR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_BOOLEAN_AND expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_LOGICAL_OR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_LOGICAL_AND expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_LOGICAL_XOR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TPLUS expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TMINUS expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TMUL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TDIV expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TMOD expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TPOW expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TAND expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TOR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TXOR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_SL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_SR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TDOT expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_IDENTICAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_NOT_IDENTICAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_NOT_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TSMALLER expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_SMALLER_OR_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TGREATER expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_GREATER_OR_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_ROCKET expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TQUESTION expr TCOLON expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TQUESTION TCOLON expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TQUESTION TQUESTION expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_INSTANCEOF expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> T_DOUBLE_CAST expr . [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
## Transitions:
-- On T_INC shift to state 237
-- On T_DEC shift to state 238
## Reductions:
-- On T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF
--   reduce production expr -> T_DOUBLE_CAST expr

State 893:
## Known stack suffix:
## T_EMPTY TOPAR expr
## LR(1) items:
expr -> expr . T_INC [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . T_DEC [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . T_BOOLEAN_OR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . T_BOOLEAN_AND expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . T_LOGICAL_OR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . T_LOGICAL_AND expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . T_LOGICAL_XOR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . TPLUS expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . TMINUS expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . TMUL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . TDIV expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . TMOD expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . TPOW expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . TAND expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . TOR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . TXOR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . T_SL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . T_SR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . TDOT expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . T_IS_IDENTICAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . T_IS_NOT_IDENTICAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . T_IS_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . T_IS_NOT_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . TSMALLER expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . T_IS_SMALLER_OR_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . TGREATER expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . T_IS_GREATER_OR_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . T_ROCKET expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . TQUESTION expr TCOLON expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . TQUESTION TCOLON expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . TQUESTION TQUESTION expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . T_INSTANCEOF expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> T_EMPTY TOPAR expr . TCPAR [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
## Transitions:
-- On T_SR shift to state 233
-- On T_SL shift to state 244
-- On T_ROCKET shift to state 260
-- On T_LOGICAL_XOR shift to state 270
-- On T_LOGICAL_OR shift to state 298
-- On T_LOGICAL_AND shift to state 272
-- On T_IS_SMALLER_OR_EQUAL shift to state 262
-- On T_IS_NOT_IDENTICAL shift to state 274
-- On T_IS_NOT_EQUAL shift to state 276
-- On T_IS_IDENTICAL shift to state 278
-- On T_IS_GREATER_OR_EQUAL shift to state 264
-- On T_IS_EQUAL shift to state 280
-- On T_INSTANCEOF shift to state 235
-- On T_INC shift to state 237
-- On T_DEC shift to state 238
-- On T_BOOLEAN_OR shift to state 282
-- On T_BOOLEAN_AND shift to state 284
-- On TXOR shift to state 286
-- On TSMALLER shift to state 266
-- On TQUESTION shift to state 292
-- On TPOW shift to state 246
-- On TPLUS shift to state 248
-- On TOR shift to state 290
-- On TMUL shift to state 250
-- On TMOD shift to state 252
-- On TMINUS shift to state 256
-- On TGREATER shift to state 268
-- On TDOT shift to state 258
-- On TDIV shift to state 254
-- On TCPAR shift to state 894
-- On TAND shift to state 288
## Reductions:

State 894:
## Known stack suffix:
## T_EMPTY TOPAR expr TCPAR
## LR(1) items:
expr -> T_EMPTY TOPAR expr TCPAR . [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production expr -> T_EMPTY TOPAR expr TCPAR

State 895:
## Known stack suffix:
## T_EVAL TOPAR T_ELLIPSIS
## LR(1) items:
expr -> T_EVAL TOPAR T_ELLIPSIS . TCPAR [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
## Transitions:
-- On TCPAR shift to state 896
## Reductions:

State 896:
## Known stack suffix:
## T_EVAL TOPAR T_ELLIPSIS TCPAR
## LR(1) items:
expr -> T_EVAL TOPAR T_ELLIPSIS TCPAR . [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production expr -> T_EVAL TOPAR T_ELLIPSIS TCPAR

State 897:
## Known stack suffix:
## T_EVAL TOPAR expr
## LR(1) items:
expr -> expr . T_INC [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . T_DEC [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . T_BOOLEAN_OR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . T_BOOLEAN_AND expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . T_LOGICAL_OR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . T_LOGICAL_AND expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . T_LOGICAL_XOR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . TPLUS expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . TMINUS expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . TMUL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . TDIV expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . TMOD expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . TPOW expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . TAND expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . TOR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . TXOR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . T_SL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . T_SR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . TDOT expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . T_IS_IDENTICAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . T_IS_NOT_IDENTICAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . T_IS_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . T_IS_NOT_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . TSMALLER expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . T_IS_SMALLER_OR_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . TGREATER expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . T_IS_GREATER_OR_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . T_ROCKET expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . TQUESTION expr TCOLON expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . TQUESTION TCOLON expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . TQUESTION TQUESTION expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . T_INSTANCEOF expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> T_EVAL TOPAR expr . TCPAR [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
## Transitions:
-- On T_SR shift to state 233
-- On T_SL shift to state 244
-- On T_ROCKET shift to state 260
-- On T_LOGICAL_XOR shift to state 270
-- On T_LOGICAL_OR shift to state 298
-- On T_LOGICAL_AND shift to state 272
-- On T_IS_SMALLER_OR_EQUAL shift to state 262
-- On T_IS_NOT_IDENTICAL shift to state 274
-- On T_IS_NOT_EQUAL shift to state 276
-- On T_IS_IDENTICAL shift to state 278
-- On T_IS_GREATER_OR_EQUAL shift to state 264
-- On T_IS_EQUAL shift to state 280
-- On T_INSTANCEOF shift to state 235
-- On T_INC shift to state 237
-- On T_DEC shift to state 238
-- On T_BOOLEAN_OR shift to state 282
-- On T_BOOLEAN_AND shift to state 284
-- On TXOR shift to state 286
-- On TSMALLER shift to state 266
-- On TQUESTION shift to state 292
-- On TPOW shift to state 246
-- On TPLUS shift to state 248
-- On TOR shift to state 290
-- On TMUL shift to state 250
-- On TMOD shift to state 252
-- On TMINUS shift to state 256
-- On TGREATER shift to state 268
-- On TDOT shift to state 258
-- On TDIV shift to state 254
-- On TCPAR shift to state 898
-- On TAND shift to state 288
## Reductions:

State 898:
## Known stack suffix:
## T_EVAL TOPAR expr TCPAR
## LR(1) items:
expr -> T_EVAL TOPAR expr TCPAR . [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production expr -> T_EVAL TOPAR expr TCPAR

State 899:
## Known stack suffix:
## TOPAR T_ELLIPSIS
## LR(1) items:
exit_expr -> TOPAR T_ELLIPSIS . TCPAR [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
## Transitions:
-- On TCPAR shift to state 900
## Reductions:

State 900:
## Known stack suffix:
## TOPAR T_ELLIPSIS TCPAR
## LR(1) items:
exit_expr -> TOPAR T_ELLIPSIS TCPAR . [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production exit_expr -> TOPAR T_ELLIPSIS TCPAR

State 901:
## Known stack suffix:
## TOPAR TCPAR
## LR(1) items:
exit_expr -> TOPAR TCPAR . [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production exit_expr -> TOPAR TCPAR

State 902:
## Known stack suffix:
## TOPAR expr
## LR(1) items:
exit_expr -> TOPAR expr . TCPAR [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_INC [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . T_DEC [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . T_BOOLEAN_OR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . T_BOOLEAN_AND expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . T_LOGICAL_OR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . T_LOGICAL_AND expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . T_LOGICAL_XOR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . TPLUS expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . TMINUS expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . TMUL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . TDIV expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . TMOD expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . TPOW expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . TAND expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . TOR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . TXOR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . T_SL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . T_SR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . TDOT expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . T_IS_IDENTICAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . T_IS_NOT_IDENTICAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . T_IS_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . T_IS_NOT_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . TSMALLER expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . T_IS_SMALLER_OR_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . TGREATER expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . T_IS_GREATER_OR_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . T_ROCKET expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . TQUESTION expr TCOLON expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . TQUESTION TCOLON expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . TQUESTION TQUESTION expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . T_INSTANCEOF expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
## Transitions:
-- On T_SR shift to state 233
-- On T_SL shift to state 244
-- On T_ROCKET shift to state 260
-- On T_LOGICAL_XOR shift to state 270
-- On T_LOGICAL_OR shift to state 298
-- On T_LOGICAL_AND shift to state 272
-- On T_IS_SMALLER_OR_EQUAL shift to state 262
-- On T_IS_NOT_IDENTICAL shift to state 274
-- On T_IS_NOT_EQUAL shift to state 276
-- On T_IS_IDENTICAL shift to state 278
-- On T_IS_GREATER_OR_EQUAL shift to state 264
-- On T_IS_EQUAL shift to state 280
-- On T_INSTANCEOF shift to state 235
-- On T_INC shift to state 237
-- On T_DEC shift to state 238
-- On T_BOOLEAN_OR shift to state 282
-- On T_BOOLEAN_AND shift to state 284
-- On TXOR shift to state 286
-- On TSMALLER shift to state 266
-- On TQUESTION shift to state 292
-- On TPOW shift to state 246
-- On TPLUS shift to state 248
-- On TOR shift to state 290
-- On TMUL shift to state 250
-- On TMOD shift to state 252
-- On TMINUS shift to state 256
-- On TGREATER shift to state 268
-- On TDOT shift to state 258
-- On TDIV shift to state 254
-- On TCPAR shift to state 903
-- On TAND shift to state 288
## Reductions:

State 903:
## Known stack suffix:
## TOPAR expr TCPAR
## LR(1) items:
exit_expr -> TOPAR expr TCPAR . [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production exit_expr -> TOPAR expr TCPAR

State 904:
## Known stack suffix:
## T_EXIT exit_expr
## LR(1) items:
expr -> T_EXIT exit_expr . [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production expr -> T_EXIT exit_expr

State 905:
## Known stack suffix:
## T_WHILE TOPAR T_ELLIPSIS
## LR(1) items:
statement -> T_WHILE TOPAR T_ELLIPSIS . TCPAR while_statement [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_ENDWHILE T_ENDSWITCH T_ENDIF T_ENDFOREACH T_ENDFOR T_ENDDECLARE T_EMPTY T_ELSEIF T_ELSE T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DEFAULT T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_CASE T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
## Transitions:
-- On TCPAR shift to state 906
## Reductions:

State 906:
## Known stack suffix:
## T_WHILE TOPAR T_ELLIPSIS TCPAR
## LR(1) items:
statement -> T_WHILE TOPAR T_ELLIPSIS TCPAR . while_statement [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_ENDWHILE T_ENDSWITCH T_ENDIF T_ENDFOREACH T_ENDFOR T_ENDDECLARE T_EMPTY T_ELSEIF T_ELSE T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DEFAULT T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_CASE T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
## Transitions:
-- On T__AT shift to state 1
-- On T_YIELD shift to state 2
-- On T_WHILE shift to state 158
-- On T_VARIABLE shift to state 3
-- On T_USE shift to state 190
-- On T_UNSET_CAST shift to state 5
-- On T_UNSET shift to state 197
-- On T_TYPE shift to state 6
-- On T_TRY shift to state 391
-- On T_TRAIT_C shift to state 7
-- On T_THROW shift to state 520
-- On T_SWITCH shift to state 525
-- On T_SUPER shift to state 8
-- On T_STRING_CAST shift to state 9
-- On T_STATIC shift to state 581
-- On T_START_HEREDOC shift to state 25
-- On T_SELF shift to state 40
-- On T_RETURN shift to state 553
-- On T_REQUIRE_ONCE shift to state 41
-- On T_REQUIRE shift to state 42
-- On T_PRINT shift to state 43
-- On T_PARENT shift to state 44
-- On T_OPEN_TAG_WITH_ECHO shift to state 558
-- On T_OBJECT_CAST shift to state 45
-- On T_NEW shift to state 46
-- On T_NAMESPACE_C shift to state 49
-- On T_NAMESPACE shift to state 50
-- On T_METHOD_C shift to state 58
-- On T_METAVAR shift to state 17
-- On T_LNUMBER shift to state 59
-- On T_LIST shift to state 69
-- On T_LINE shift to state 60
-- On T_LAMBDA_OPAR shift to state 73
-- On T_ISSET shift to state 133
-- On T_INT_CAST shift to state 135
-- On T_INSTANCEOF shift to state 52
-- On T_INLINE_HTML shift to state 576
-- On T_INCLUDE_ONCE shift to state 136
-- On T_INCLUDE shift to state 137
-- On T_INC shift to state 138
-- On T_IF shift to state 577
-- On T_IDENT shift to state 18
-- On T_GLOBAL shift to state 587
-- On T_FUNC_C shift to state 61
-- On T_FUNCTION shift to state 139
-- On T_FOREACH shift to state 600
-- On T_FOR shift to state 624
-- On T_FILE shift to state 62
-- On T_EXIT shift to state 160
-- On T_EVAL shift to state 162
-- On T_ENUM shift to state 19
-- On T_EMPTY shift to state 164
-- On T_ELLIPSIS shift to state 635
-- On T_ECHO shift to state 636
-- On T_DOUBLE_CAST shift to state 168
-- On T_DO shift to state 644
-- On T_DNUMBER shift to state 63
-- On T_DIR shift to state 64
-- On T_DECLARE shift to state 645
-- On T_DEC shift to state 169
-- On T_CONTINUE shift to state 649
-- On T_CONSTANT_ENCAPSED_STRING shift to state 65
-- On T_CLONE shift to state 170
-- On T_CLASS_C shift to state 66
-- On T_BREAK shift to state 652
-- On T_BOOL_CAST shift to state 171
-- On T_AWAIT shift to state 172
-- On T_ASYNC shift to state 173
-- On T_ARRAY_CAST shift to state 200
-- On T_ARRAY shift to state 201
-- On TTILDE shift to state 204
-- On TSEMICOLON shift to state 655
-- On TPLUS shift to state 205
-- On TOPAR shift to state 206
-- On TOBRACE shift to state 656
-- On TOBRA shift to state 209
-- On TMINUS shift to state 210
-- On TGUIL shift to state 211
-- On TDOLLARDOLLAR shift to state 213
-- On TDOLLAR shift to state 214
-- On TCOLON shift to state 907
-- On TBANG shift to state 216
-- On TBACKQUOTE shift to state 217
-- On TANTISLASH shift to state 85
-- On LDots shift to state 222
-- On while_statement shift to state 911
-- On statement shift to state 912
-- On simple_expr shift to state 223
-- On qualified_name shift to state 94
-- On qualified_class_name shift to state 225
-- On primary_expr shift to state 226
-- On new_expr shift to state 227
-- On namespace_name shift to state 102
-- On member_expr shift to state 228
-- On lambda_expr shift to state 231
-- On ident_in_name shift to state 57
-- On ident shift to state 56
-- On expr shift to state 704
-- On constant shift to state 239
-- On call_expr shift to state 240
## Reductions:

State 907:
## Known stack suffix:
## TCOLON
## LR(1) items:
while_statement -> TCOLON . list(inner_statement) T_ENDWHILE TSEMICOLON [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_ENDWHILE T_ENDSWITCH T_ENDIF T_ENDFOREACH T_ENDFOR T_ENDDECLARE T_EMPTY T_ELSEIF T_ELSE T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DEFAULT T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_CASE T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
## Transitions:
-- On T__AT shift to state 1
-- On T_YIELD shift to state 2
-- On T_WHILE shift to state 158
-- On T_VARIABLE shift to state 3
-- On T_USE shift to state 190
-- On T_UNSET_CAST shift to state 5
-- On T_UNSET shift to state 197
-- On T_TYPE shift to state 6
-- On T_TRY shift to state 391
-- On T_TRAIT_C shift to state 7
-- On T_TRAIT shift to state 393
-- On T_THROW shift to state 520
-- On T_SWITCH shift to state 525
-- On T_SUPER shift to state 8
-- On T_STRING_CAST shift to state 9
-- On T_STATIC shift to state 536
-- On T_START_HEREDOC shift to state 25
-- On T_SL shift to state 16
-- On T_SELF shift to state 40
-- On T_RETURN shift to state 553
-- On T_REQUIRE_ONCE shift to state 41
-- On T_REQUIRE shift to state 42
-- On T_PRINT shift to state 43
-- On T_PARENT shift to state 44
-- On T_OPEN_TAG_WITH_ECHO shift to state 558
-- On T_OBJECT_CAST shift to state 45
-- On T_NEW shift to state 46
-- On T_NAMESPACE_C shift to state 49
-- On T_NAMESPACE shift to state 50
-- On T_METHOD_C shift to state 58
-- On T_METAVAR shift to state 17
-- On T_LNUMBER shift to state 59
-- On T_LIST shift to state 69
-- On T_LINE shift to state 60
-- On T_LAMBDA_OPAR shift to state 73
-- On T_ISSET shift to state 133
-- On T_INT_CAST shift to state 135
-- On T_INTERFACE shift to state 563
-- On T_INSTANCEOF shift to state 52
-- On T_INLINE_HTML shift to state 576
-- On T_INCLUDE_ONCE shift to state 136
-- On T_INCLUDE shift to state 137
-- On T_INC shift to state 138
-- On T_IF shift to state 577
-- On T_IDENT shift to state 18
-- On T_GLOBAL shift to state 587
-- On T_FUNC_C shift to state 61
-- On T_FUNCTION shift to state 657
-- On T_FOREACH shift to state 600
-- On T_FOR shift to state 624
-- On T_FINAL shift to state 666
-- On T_FILE shift to state 62
-- On T_EXIT shift to state 160
-- On T_EVAL shift to state 162
-- On T_ENUM shift to state 668
-- On T_EMPTY shift to state 164
-- On T_ELLIPSIS shift to state 635
-- On T_ECHO shift to state 636
-- On T_DOUBLE_CAST shift to state 168
-- On T_DO shift to state 644
-- On T_DNUMBER shift to state 63
-- On T_DIR shift to state 64
-- On T_DECLARE shift to state 645
-- On T_DEC shift to state 169
-- On T_CONTINUE shift to state 649
-- On T_CONSTANT_ENCAPSED_STRING shift to state 65
-- On T_CLONE shift to state 170
-- On T_CLASS_C shift to state 66
-- On T_CLASS shift to state 682
-- On T_BREAK shift to state 652
-- On T_BOOL_CAST shift to state 171
-- On T_AWAIT shift to state 172
-- On T_ASYNC shift to state 683
-- On T_ARRAY_CAST shift to state 200
-- On T_ARRAY shift to state 201
-- On T_ABSTRACT shift to state 694
-- On TTILDE shift to state 204
-- On TSEMICOLON shift to state 655
-- On TPLUS shift to state 205
-- On TOPAR shift to state 206
-- On TOBRACE shift to state 656
-- On TOBRA shift to state 209
-- On TMINUS shift to state 210
-- On TGUIL shift to state 211
-- On TDOLLARDOLLAR shift to state 213
-- On TDOLLAR shift to state 214
-- On TBANG shift to state 216
-- On TBACKQUOTE shift to state 217
-- On TANTISLASH shift to state 85
-- On LDots shift to state 222
-- On unticked_function_declaration shift to state 696
-- On unticked_class_declaration shift to state 697
-- On statement shift to state 698
-- On simple_expr shift to state 223
-- On qualified_name shift to state 94
-- On qualified_class_name shift to state 225
-- On primary_expr shift to state 226
-- On new_expr shift to state 227
-- On namespace_name shift to state 102
-- On member_expr shift to state 228
-- On list(inner_statement) shift to state 908
-- On lambda_expr shift to state 231
-- On inner_statement shift to state 701
-- On ident_in_name shift to state 57
-- On ident shift to state 56
-- On function_declaration shift to state 703
-- On expr shift to state 704
-- On constant shift to state 239
-- On class_entry_type shift to state 706
-- On class_declaration shift to state 716
-- On call_expr shift to state 240
-- On attributes shift to state 717
## Reductions:
-- On T_ENDWHILE
--   reduce production list(inner_statement) ->

State 908:
## Known stack suffix:
## TCOLON list(inner_statement)
## LR(1) items:
while_statement -> TCOLON list(inner_statement) . T_ENDWHILE TSEMICOLON [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_ENDWHILE T_ENDSWITCH T_ENDIF T_ENDFOREACH T_ENDFOR T_ENDDECLARE T_EMPTY T_ELSEIF T_ELSE T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DEFAULT T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_CASE T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
## Transitions:
-- On T_ENDWHILE shift to state 909
## Reductions:

State 909:
## Known stack suffix:
## TCOLON list(inner_statement) T_ENDWHILE
## LR(1) items:
while_statement -> TCOLON list(inner_statement) T_ENDWHILE . TSEMICOLON [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_ENDWHILE T_ENDSWITCH T_ENDIF T_ENDFOREACH T_ENDFOR T_ENDDECLARE T_EMPTY T_ELSEIF T_ELSE T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DEFAULT T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_CASE T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
## Transitions:
-- On TSEMICOLON shift to state 910
## Reductions:

State 910:
## Known stack suffix:
## TCOLON list(inner_statement) T_ENDWHILE TSEMICOLON
## LR(1) items:
while_statement -> TCOLON list(inner_statement) T_ENDWHILE TSEMICOLON . [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_ENDWHILE T_ENDSWITCH T_ENDIF T_ENDFOREACH T_ENDFOR T_ENDDECLARE T_EMPTY T_ELSEIF T_ELSE T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DEFAULT T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_CASE T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production while_statement -> TCOLON list(inner_statement) T_ENDWHILE TSEMICOLON

State 911:
## Known stack suffix:
## T_WHILE TOPAR T_ELLIPSIS TCPAR while_statement
## LR(1) items:
statement -> T_WHILE TOPAR T_ELLIPSIS TCPAR while_statement . [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_ENDWHILE T_ENDSWITCH T_ENDIF T_ENDFOREACH T_ENDFOR T_ENDDECLARE T_EMPTY T_ELSEIF T_ELSE T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DEFAULT T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_CASE T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production statement -> T_WHILE TOPAR T_ELLIPSIS TCPAR while_statement

State 912:
## Known stack suffix:
## statement
## LR(1) items:
while_statement -> statement . [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_ENDWHILE T_ENDSWITCH T_ENDIF T_ENDFOREACH T_ENDFOR T_ENDDECLARE T_EMPTY T_ELSEIF T_ELSE T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DEFAULT T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_CASE T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production while_statement -> statement

State 913:
## Known stack suffix:
## T_WHILE TOPAR expr
## LR(1) items:
expr -> expr . T_INC [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . T_DEC [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . T_BOOLEAN_OR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . T_BOOLEAN_AND expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . T_LOGICAL_OR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . T_LOGICAL_AND expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . T_LOGICAL_XOR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . TPLUS expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . TMINUS expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . TMUL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . TDIV expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . TMOD expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . TPOW expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . TAND expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . TOR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . TXOR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . T_SL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . T_SR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . TDOT expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . T_IS_IDENTICAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . T_IS_NOT_IDENTICAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . T_IS_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . T_IS_NOT_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . TSMALLER expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . T_IS_SMALLER_OR_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . TGREATER expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . T_IS_GREATER_OR_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . T_ROCKET expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . TQUESTION expr TCOLON expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . TQUESTION TCOLON expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . TQUESTION TQUESTION expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . T_INSTANCEOF expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
statement -> T_WHILE TOPAR expr . TCPAR while_statement [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_ENDWHILE T_ENDSWITCH T_ENDIF T_ENDFOREACH T_ENDFOR T_ENDDECLARE T_EMPTY T_ELSEIF T_ELSE T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DEFAULT T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_CASE T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
## Transitions:
-- On T_SR shift to state 233
-- On T_SL shift to state 244
-- On T_ROCKET shift to state 260
-- On T_LOGICAL_XOR shift to state 270
-- On T_LOGICAL_OR shift to state 298
-- On T_LOGICAL_AND shift to state 272
-- On T_IS_SMALLER_OR_EQUAL shift to state 262
-- On T_IS_NOT_IDENTICAL shift to state 274
-- On T_IS_NOT_EQUAL shift to state 276
-- On T_IS_IDENTICAL shift to state 278
-- On T_IS_GREATER_OR_EQUAL shift to state 264
-- On T_IS_EQUAL shift to state 280
-- On T_INSTANCEOF shift to state 235
-- On T_INC shift to state 237
-- On T_DEC shift to state 238
-- On T_BOOLEAN_OR shift to state 282
-- On T_BOOLEAN_AND shift to state 284
-- On TXOR shift to state 286
-- On TSMALLER shift to state 266
-- On TQUESTION shift to state 292
-- On TPOW shift to state 246
-- On TPLUS shift to state 248
-- On TOR shift to state 290
-- On TMUL shift to state 250
-- On TMOD shift to state 252
-- On TMINUS shift to state 256
-- On TGREATER shift to state 268
-- On TDOT shift to state 258
-- On TDIV shift to state 254
-- On TCPAR shift to state 914
-- On TAND shift to state 288
## Reductions:

State 914:
## Known stack suffix:
## T_WHILE TOPAR expr TCPAR
## LR(1) items:
statement -> T_WHILE TOPAR expr TCPAR . while_statement [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_ENDWHILE T_ENDSWITCH T_ENDIF T_ENDFOREACH T_ENDFOR T_ENDDECLARE T_EMPTY T_ELSEIF T_ELSE T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DEFAULT T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_CASE T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
## Transitions:
-- On T__AT shift to state 1
-- On T_YIELD shift to state 2
-- On T_WHILE shift to state 158
-- On T_VARIABLE shift to state 3
-- On T_USE shift to state 190
-- On T_UNSET_CAST shift to state 5
-- On T_UNSET shift to state 197
-- On T_TYPE shift to state 6
-- On T_TRY shift to state 391
-- On T_TRAIT_C shift to state 7
-- On T_THROW shift to state 520
-- On T_SWITCH shift to state 525
-- On T_SUPER shift to state 8
-- On T_STRING_CAST shift to state 9
-- On T_STATIC shift to state 581
-- On T_START_HEREDOC shift to state 25
-- On T_SELF shift to state 40
-- On T_RETURN shift to state 553
-- On T_REQUIRE_ONCE shift to state 41
-- On T_REQUIRE shift to state 42
-- On T_PRINT shift to state 43
-- On T_PARENT shift to state 44
-- On T_OPEN_TAG_WITH_ECHO shift to state 558
-- On T_OBJECT_CAST shift to state 45
-- On T_NEW shift to state 46
-- On T_NAMESPACE_C shift to state 49
-- On T_NAMESPACE shift to state 50
-- On T_METHOD_C shift to state 58
-- On T_METAVAR shift to state 17
-- On T_LNUMBER shift to state 59
-- On T_LIST shift to state 69
-- On T_LINE shift to state 60
-- On T_LAMBDA_OPAR shift to state 73
-- On T_ISSET shift to state 133
-- On T_INT_CAST shift to state 135
-- On T_INSTANCEOF shift to state 52
-- On T_INLINE_HTML shift to state 576
-- On T_INCLUDE_ONCE shift to state 136
-- On T_INCLUDE shift to state 137
-- On T_INC shift to state 138
-- On T_IF shift to state 577
-- On T_IDENT shift to state 18
-- On T_GLOBAL shift to state 587
-- On T_FUNC_C shift to state 61
-- On T_FUNCTION shift to state 139
-- On T_FOREACH shift to state 600
-- On T_FOR shift to state 624
-- On T_FILE shift to state 62
-- On T_EXIT shift to state 160
-- On T_EVAL shift to state 162
-- On T_ENUM shift to state 19
-- On T_EMPTY shift to state 164
-- On T_ELLIPSIS shift to state 635
-- On T_ECHO shift to state 636
-- On T_DOUBLE_CAST shift to state 168
-- On T_DO shift to state 644
-- On T_DNUMBER shift to state 63
-- On T_DIR shift to state 64
-- On T_DECLARE shift to state 645
-- On T_DEC shift to state 169
-- On T_CONTINUE shift to state 649
-- On T_CONSTANT_ENCAPSED_STRING shift to state 65
-- On T_CLONE shift to state 170
-- On T_CLASS_C shift to state 66
-- On T_BREAK shift to state 652
-- On T_BOOL_CAST shift to state 171
-- On T_AWAIT shift to state 172
-- On T_ASYNC shift to state 173
-- On T_ARRAY_CAST shift to state 200
-- On T_ARRAY shift to state 201
-- On TTILDE shift to state 204
-- On TSEMICOLON shift to state 655
-- On TPLUS shift to state 205
-- On TOPAR shift to state 206
-- On TOBRACE shift to state 656
-- On TOBRA shift to state 209
-- On TMINUS shift to state 210
-- On TGUIL shift to state 211
-- On TDOLLARDOLLAR shift to state 213
-- On TDOLLAR shift to state 214
-- On TCOLON shift to state 907
-- On TBANG shift to state 216
-- On TBACKQUOTE shift to state 217
-- On TANTISLASH shift to state 85
-- On LDots shift to state 222
-- On while_statement shift to state 915
-- On statement shift to state 912
-- On simple_expr shift to state 223
-- On qualified_name shift to state 94
-- On qualified_class_name shift to state 225
-- On primary_expr shift to state 226
-- On new_expr shift to state 227
-- On namespace_name shift to state 102
-- On member_expr shift to state 228
-- On lambda_expr shift to state 231
-- On ident_in_name shift to state 57
-- On ident shift to state 56
-- On expr shift to state 704
-- On constant shift to state 239
-- On call_expr shift to state 240
## Reductions:

State 915:
## Known stack suffix:
## T_WHILE TOPAR expr TCPAR while_statement
## LR(1) items:
statement -> T_WHILE TOPAR expr TCPAR while_statement . [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_ENDWHILE T_ENDSWITCH T_ENDIF T_ENDFOREACH T_ENDFOR T_ENDDECLARE T_EMPTY T_ELSEIF T_ELSE T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DEFAULT T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_CASE T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production statement -> T_WHILE TOPAR expr TCPAR while_statement

State 916:
## Known stack suffix:
## T_FUNCTION is_reference TOPAR parameter_list TCPAR lexical_vars option(return_type) TOBRACE list(inner_statement)
## LR(1) items:
expr -> T_FUNCTION is_reference TOPAR parameter_list TCPAR lexical_vars option(return_type) TOBRACE list(inner_statement) . TCBRACE [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
## Transitions:
-- On TCBRACE shift to state 917
## Reductions:

State 917:
## Known stack suffix:
## T_FUNCTION is_reference TOPAR parameter_list TCPAR lexical_vars option(return_type) TOBRACE list(inner_statement) TCBRACE
## LR(1) items:
expr -> T_FUNCTION is_reference TOPAR parameter_list TCPAR lexical_vars option(return_type) TOBRACE list(inner_statement) TCBRACE . [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production expr -> T_FUNCTION is_reference TOPAR parameter_list TCPAR lexical_vars option(return_type) TOBRACE list(inner_statement) TCBRACE

State 918:
## Known stack suffix:
## T_INC expr
## LR(1) items:
expr -> expr . T_INC [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_DEC [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> T_INC expr . [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_BOOLEAN_OR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_BOOLEAN_AND expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_LOGICAL_OR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_LOGICAL_AND expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_LOGICAL_XOR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TPLUS expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TMINUS expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TMUL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TDIV expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TMOD expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TPOW expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TAND expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TOR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TXOR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_SL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_SR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TDOT expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_IDENTICAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_NOT_IDENTICAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_NOT_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TSMALLER expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_SMALLER_OR_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TGREATER expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_GREATER_OR_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_ROCKET expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TQUESTION expr TCOLON expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TQUESTION TCOLON expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TQUESTION TQUESTION expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_INSTANCEOF expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
## Transitions:
-- On T_INC shift to state 237
-- On T_DEC shift to state 238
## Reductions:
-- On T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF
--   reduce production expr -> T_INC expr

State 919:
## Known stack suffix:
## T_INCLUDE T_ELLIPSIS
## LR(1) items:
expr -> T_INCLUDE T_ELLIPSIS . [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production expr -> T_INCLUDE T_ELLIPSIS

State 920:
## Known stack suffix:
## T_INCLUDE expr
## LR(1) items:
expr -> expr . T_INC [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_DEC [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_BOOLEAN_OR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_BOOLEAN_AND expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_LOGICAL_OR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_LOGICAL_AND expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_LOGICAL_XOR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TPLUS expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TMINUS expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TMUL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TDIV expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TMOD expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TPOW expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TAND expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TOR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TXOR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_SL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_SR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TDOT expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_IDENTICAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_NOT_IDENTICAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_NOT_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TSMALLER expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_SMALLER_OR_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TGREATER expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_GREATER_OR_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_ROCKET expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TQUESTION expr TCOLON expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TQUESTION TCOLON expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TQUESTION TQUESTION expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_INSTANCEOF expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> T_INCLUDE expr . [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
## Transitions:
-- On T_SR shift to state 233
-- On T_SL shift to state 244
-- On T_ROCKET shift to state 260
-- On T_LOGICAL_XOR shift to state 270
-- On T_LOGICAL_OR shift to state 298
-- On T_LOGICAL_AND shift to state 272
-- On T_IS_SMALLER_OR_EQUAL shift to state 262
-- On T_IS_NOT_IDENTICAL shift to state 274
-- On T_IS_NOT_EQUAL shift to state 276
-- On T_IS_IDENTICAL shift to state 278
-- On T_IS_GREATER_OR_EQUAL shift to state 264
-- On T_IS_EQUAL shift to state 280
-- On T_INSTANCEOF shift to state 235
-- On T_INC shift to state 237
-- On T_DEC shift to state 238
-- On T_BOOLEAN_OR shift to state 282
-- On T_BOOLEAN_AND shift to state 284
-- On TXOR shift to state 286
-- On TSMALLER shift to state 266
-- On TQUESTION shift to state 292
-- On TPOW shift to state 246
-- On TPLUS shift to state 248
-- On TOR shift to state 290
-- On TMUL shift to state 250
-- On TMOD shift to state 252
-- On TMINUS shift to state 256
-- On TGREATER shift to state 268
-- On TDOT shift to state 258
-- On TDIV shift to state 254
-- On TAND shift to state 288
## Reductions:
-- On T_LAMBDA_CPAR T_CLOSE_TAG_OF_ECHO T_AWAIT T_AS T_ARROW TSEMICOLON TCPAR TCOMMA TCOLON TCBRACE TCBRA RDots EOF
--   reduce production expr -> T_INCLUDE expr

State 921:
## Known stack suffix:
## T_INCLUDE_ONCE T_ELLIPSIS
## LR(1) items:
expr -> T_INCLUDE_ONCE T_ELLIPSIS . [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production expr -> T_INCLUDE_ONCE T_ELLIPSIS

State 922:
## Known stack suffix:
## T_INCLUDE_ONCE expr
## LR(1) items:
expr -> expr . T_INC [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_DEC [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_BOOLEAN_OR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_BOOLEAN_AND expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_LOGICAL_OR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_LOGICAL_AND expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_LOGICAL_XOR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TPLUS expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TMINUS expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TMUL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TDIV expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TMOD expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TPOW expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TAND expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TOR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TXOR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_SL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_SR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TDOT expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_IDENTICAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_NOT_IDENTICAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_NOT_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TSMALLER expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_SMALLER_OR_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TGREATER expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_GREATER_OR_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_ROCKET expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TQUESTION expr TCOLON expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TQUESTION TCOLON expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TQUESTION TQUESTION expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_INSTANCEOF expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> T_INCLUDE_ONCE expr . [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
## Transitions:
-- On T_SR shift to state 233
-- On T_SL shift to state 244
-- On T_ROCKET shift to state 260
-- On T_LOGICAL_XOR shift to state 270
-- On T_LOGICAL_OR shift to state 298
-- On T_LOGICAL_AND shift to state 272
-- On T_IS_SMALLER_OR_EQUAL shift to state 262
-- On T_IS_NOT_IDENTICAL shift to state 274
-- On T_IS_NOT_EQUAL shift to state 276
-- On T_IS_IDENTICAL shift to state 278
-- On T_IS_GREATER_OR_EQUAL shift to state 264
-- On T_IS_EQUAL shift to state 280
-- On T_INSTANCEOF shift to state 235
-- On T_INC shift to state 237
-- On T_DEC shift to state 238
-- On T_BOOLEAN_OR shift to state 282
-- On T_BOOLEAN_AND shift to state 284
-- On TXOR shift to state 286
-- On TSMALLER shift to state 266
-- On TQUESTION shift to state 292
-- On TPOW shift to state 246
-- On TPLUS shift to state 248
-- On TOR shift to state 290
-- On TMUL shift to state 250
-- On TMOD shift to state 252
-- On TMINUS shift to state 256
-- On TGREATER shift to state 268
-- On TDOT shift to state 258
-- On TDIV shift to state 254
-- On TAND shift to state 288
## Reductions:
-- On T_LAMBDA_CPAR T_CLOSE_TAG_OF_ECHO T_AWAIT T_AS T_ARROW TSEMICOLON TCPAR TCOMMA TCOLON TCBRACE TCBRA RDots EOF
--   reduce production expr -> T_INCLUDE_ONCE expr

State 923:
## Known stack suffix:
## T_INT_CAST expr
## LR(1) items:
expr -> expr . T_INC [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_DEC [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_BOOLEAN_OR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_BOOLEAN_AND expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_LOGICAL_OR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_LOGICAL_AND expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_LOGICAL_XOR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TPLUS expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TMINUS expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TMUL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TDIV expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TMOD expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TPOW expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TAND expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TOR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TXOR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_SL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_SR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TDOT expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_IDENTICAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_NOT_IDENTICAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_NOT_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TSMALLER expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_SMALLER_OR_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TGREATER expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_GREATER_OR_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_ROCKET expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TQUESTION expr TCOLON expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TQUESTION TCOLON expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TQUESTION TQUESTION expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_INSTANCEOF expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> T_INT_CAST expr . [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
## Transitions:
-- On T_INC shift to state 237
-- On T_DEC shift to state 238
## Reductions:
-- On T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF
--   reduce production expr -> T_INT_CAST expr

State 924:
## Known stack suffix:
## T_ISSET TOPAR list_sep(expr_or_dots,TCOMMA)
## LR(1) items:
expr -> T_ISSET TOPAR list_sep(expr_or_dots,TCOMMA) . TCPAR [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
list_sep(expr_or_dots,TCOMMA) -> list_sep(expr_or_dots,TCOMMA) . TCOMMA expr [ TCPAR TCOMMA ]
list_sep(expr_or_dots,TCOMMA) -> list_sep(expr_or_dots,TCOMMA) . TCOMMA T_ELLIPSIS [ TCPAR TCOMMA ]
## Transitions:
-- On TCPAR shift to state 925
-- On TCOMMA shift to state 640
## Reductions:

State 925:
## Known stack suffix:
## T_ISSET TOPAR list_sep(expr_or_dots,TCOMMA) TCPAR
## LR(1) items:
expr -> T_ISSET TOPAR list_sep(expr_or_dots,TCOMMA) TCPAR . [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production expr -> T_ISSET TOPAR list_sep(expr_or_dots,TCOMMA) TCPAR

State 926:
## Known stack suffix:
## T_VARIABLE TEQ static_scalar
## LR(1) items:
parameter_bis -> T_VARIABLE TEQ static_scalar . [ T_LAMBDA_CPAR TCPAR TCOMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production parameter_bis -> T_VARIABLE TEQ static_scalar

State 927:
## Known stack suffix:
## T_METAVAR
## LR(1) items:
ident -> T_METAVAR . [ T_VARIABLE T_METAVAR T_ELLIPSIS TSMALLER TCOLCOL TANTISLASH TAND ]
parameter_bis -> T_METAVAR . [ T_LAMBDA_CPAR TCPAR TCOMMA ]
parameter_bis -> T_METAVAR . TEQ static_scalar [ T_LAMBDA_CPAR TCPAR TCOMMA ]
## Transitions:
-- On TEQ shift to state 928
## Reductions:
-- On T_VARIABLE T_METAVAR T_ELLIPSIS TSMALLER TCOLCOL TANTISLASH TAND
--   reduce production ident -> T_METAVAR
-- On T_LAMBDA_CPAR TCPAR TCOMMA
--   reduce production parameter_bis -> T_METAVAR

State 928:
## Known stack suffix:
## T_METAVAR TEQ
## LR(1) items:
parameter_bis -> T_METAVAR TEQ . static_scalar [ T_LAMBDA_CPAR TCPAR TCOMMA ]
## Transitions:
-- On T__AT shift to state 1
-- On T_YIELD shift to state 2
-- On T_VARIABLE shift to state 3
-- On T_UNSET_CAST shift to state 5
-- On T_TYPE shift to state 6
-- On T_TRAIT_C shift to state 7
-- On T_SUPER shift to state 8
-- On T_STRING_CAST shift to state 9
-- On T_STATIC shift to state 10
-- On T_START_HEREDOC shift to state 25
-- On T_SELF shift to state 40
-- On T_REQUIRE_ONCE shift to state 41
-- On T_REQUIRE shift to state 42
-- On T_PRINT shift to state 43
-- On T_PARENT shift to state 44
-- On T_OBJECT_CAST shift to state 45
-- On T_NEW shift to state 46
-- On T_NAMESPACE_C shift to state 49
-- On T_NAMESPACE shift to state 50
-- On T_METHOD_C shift to state 58
-- On T_METAVAR shift to state 17
-- On T_LNUMBER shift to state 59
-- On T_LIST shift to state 69
-- On T_LINE shift to state 60
-- On T_LAMBDA_OPAR shift to state 73
-- On T_ISSET shift to state 133
-- On T_INT_CAST shift to state 135
-- On T_INSTANCEOF shift to state 52
-- On T_INCLUDE_ONCE shift to state 136
-- On T_INCLUDE shift to state 137
-- On T_INC shift to state 138
-- On T_IDENT shift to state 18
-- On T_FUNC_C shift to state 61
-- On T_FUNCTION shift to state 139
-- On T_FILE shift to state 62
-- On T_EXIT shift to state 160
-- On T_EVAL shift to state 162
-- On T_ENUM shift to state 19
-- On T_EMPTY shift to state 164
-- On T_DOUBLE_CAST shift to state 168
-- On T_DNUMBER shift to state 63
-- On T_DIR shift to state 64
-- On T_DEC shift to state 169
-- On T_CONSTANT_ENCAPSED_STRING shift to state 65
-- On T_CLONE shift to state 170
-- On T_CLASS_C shift to state 66
-- On T_BOOL_CAST shift to state 171
-- On T_AWAIT shift to state 172
-- On T_ASYNC shift to state 173
-- On T_ARRAY_CAST shift to state 200
-- On T_ARRAY shift to state 201
-- On TTILDE shift to state 204
-- On TPLUS shift to state 205
-- On TOPAR shift to state 206
-- On TOBRA shift to state 209
-- On TMINUS shift to state 210
-- On TGUIL shift to state 211
-- On TDOLLARDOLLAR shift to state 213
-- On TDOLLAR shift to state 214
-- On TBANG shift to state 216
-- On TBACKQUOTE shift to state 217
-- On TANTISLASH shift to state 85
-- On LDots shift to state 222
-- On static_scalar shift to state 929
-- On simple_expr shift to state 223
-- On qualified_name shift to state 94
-- On qualified_class_name shift to state 225
-- On primary_expr shift to state 226
-- On new_expr shift to state 227
-- On namespace_name shift to state 102
-- On member_expr shift to state 228
-- On lambda_expr shift to state 231
-- On ident_in_name shift to state 57
-- On ident shift to state 56
-- On expr shift to state 465
-- On constant shift to state 239
-- On call_expr shift to state 240
## Reductions:

State 929:
## Known stack suffix:
## T_METAVAR TEQ static_scalar
## LR(1) items:
parameter_bis -> T_METAVAR TEQ static_scalar . [ T_LAMBDA_CPAR TCPAR TCOMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production parameter_bis -> T_METAVAR TEQ static_scalar

State 930:
## Known stack suffix:
## T_ELLIPSIS
## LR(1) items:
parameter_bis -> T_ELLIPSIS . T_VARIABLE [ T_LAMBDA_CPAR TCPAR TCOMMA ]
parameter_bis -> T_ELLIPSIS . [ T_LAMBDA_CPAR TCPAR TCOMMA ]
## Transitions:
-- On T_VARIABLE shift to state 931
## Reductions:
-- On T_LAMBDA_CPAR TCPAR TCOMMA
--   reduce production parameter_bis -> T_ELLIPSIS

State 931:
## Known stack suffix:
## T_ELLIPSIS T_VARIABLE
## LR(1) items:
parameter_bis -> T_ELLIPSIS T_VARIABLE . [ T_LAMBDA_CPAR TCPAR TCOMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production parameter_bis -> T_ELLIPSIS T_VARIABLE

State 932:
## Known stack suffix:
## TAND
## LR(1) items:
parameter_bis -> TAND . T_VARIABLE [ T_LAMBDA_CPAR TCPAR TCOMMA ]
parameter_bis -> TAND . T_METAVAR [ T_LAMBDA_CPAR TCPAR TCOMMA ]
parameter_bis -> TAND . T_VARIABLE TEQ static_scalar [ T_LAMBDA_CPAR TCPAR TCOMMA ]
parameter_bis -> TAND . T_METAVAR TEQ static_scalar [ T_LAMBDA_CPAR TCPAR TCOMMA ]
parameter_bis -> TAND . T_ELLIPSIS T_VARIABLE [ T_LAMBDA_CPAR TCPAR TCOMMA ]
## Transitions:
-- On T_VARIABLE shift to state 933
-- On T_METAVAR shift to state 936
-- On T_ELLIPSIS shift to state 939
## Reductions:

State 933:
## Known stack suffix:
## TAND T_VARIABLE
## LR(1) items:
parameter_bis -> TAND T_VARIABLE . [ T_LAMBDA_CPAR TCPAR TCOMMA ]
parameter_bis -> TAND T_VARIABLE . TEQ static_scalar [ T_LAMBDA_CPAR TCPAR TCOMMA ]
## Transitions:
-- On TEQ shift to state 934
## Reductions:
-- On T_LAMBDA_CPAR TCPAR TCOMMA
--   reduce production parameter_bis -> TAND T_VARIABLE

State 934:
## Known stack suffix:
## TAND T_VARIABLE TEQ
## LR(1) items:
parameter_bis -> TAND T_VARIABLE TEQ . static_scalar [ T_LAMBDA_CPAR TCPAR TCOMMA ]
## Transitions:
-- On T__AT shift to state 1
-- On T_YIELD shift to state 2
-- On T_VARIABLE shift to state 3
-- On T_UNSET_CAST shift to state 5
-- On T_TYPE shift to state 6
-- On T_TRAIT_C shift to state 7
-- On T_SUPER shift to state 8
-- On T_STRING_CAST shift to state 9
-- On T_STATIC shift to state 10
-- On T_START_HEREDOC shift to state 25
-- On T_SELF shift to state 40
-- On T_REQUIRE_ONCE shift to state 41
-- On T_REQUIRE shift to state 42
-- On T_PRINT shift to state 43
-- On T_PARENT shift to state 44
-- On T_OBJECT_CAST shift to state 45
-- On T_NEW shift to state 46
-- On T_NAMESPACE_C shift to state 49
-- On T_NAMESPACE shift to state 50
-- On T_METHOD_C shift to state 58
-- On T_METAVAR shift to state 17
-- On T_LNUMBER shift to state 59
-- On T_LIST shift to state 69
-- On T_LINE shift to state 60
-- On T_LAMBDA_OPAR shift to state 73
-- On T_ISSET shift to state 133
-- On T_INT_CAST shift to state 135
-- On T_INSTANCEOF shift to state 52
-- On T_INCLUDE_ONCE shift to state 136
-- On T_INCLUDE shift to state 137
-- On T_INC shift to state 138
-- On T_IDENT shift to state 18
-- On T_FUNC_C shift to state 61
-- On T_FUNCTION shift to state 139
-- On T_FILE shift to state 62
-- On T_EXIT shift to state 160
-- On T_EVAL shift to state 162
-- On T_ENUM shift to state 19
-- On T_EMPTY shift to state 164
-- On T_DOUBLE_CAST shift to state 168
-- On T_DNUMBER shift to state 63
-- On T_DIR shift to state 64
-- On T_DEC shift to state 169
-- On T_CONSTANT_ENCAPSED_STRING shift to state 65
-- On T_CLONE shift to state 170
-- On T_CLASS_C shift to state 66
-- On T_BOOL_CAST shift to state 171
-- On T_AWAIT shift to state 172
-- On T_ASYNC shift to state 173
-- On T_ARRAY_CAST shift to state 200
-- On T_ARRAY shift to state 201
-- On TTILDE shift to state 204
-- On TPLUS shift to state 205
-- On TOPAR shift to state 206
-- On TOBRA shift to state 209
-- On TMINUS shift to state 210
-- On TGUIL shift to state 211
-- On TDOLLARDOLLAR shift to state 213
-- On TDOLLAR shift to state 214
-- On TBANG shift to state 216
-- On TBACKQUOTE shift to state 217
-- On TANTISLASH shift to state 85
-- On LDots shift to state 222
-- On static_scalar shift to state 935
-- On simple_expr shift to state 223
-- On qualified_name shift to state 94
-- On qualified_class_name shift to state 225
-- On primary_expr shift to state 226
-- On new_expr shift to state 227
-- On namespace_name shift to state 102
-- On member_expr shift to state 228
-- On lambda_expr shift to state 231
-- On ident_in_name shift to state 57
-- On ident shift to state 56
-- On expr shift to state 465
-- On constant shift to state 239
-- On call_expr shift to state 240
## Reductions:

State 935:
## Known stack suffix:
## TAND T_VARIABLE TEQ static_scalar
## LR(1) items:
parameter_bis -> TAND T_VARIABLE TEQ static_scalar . [ T_LAMBDA_CPAR TCPAR TCOMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production parameter_bis -> TAND T_VARIABLE TEQ static_scalar

State 936:
## Known stack suffix:
## TAND T_METAVAR
## LR(1) items:
parameter_bis -> TAND T_METAVAR . [ T_LAMBDA_CPAR TCPAR TCOMMA ]
parameter_bis -> TAND T_METAVAR . TEQ static_scalar [ T_LAMBDA_CPAR TCPAR TCOMMA ]
## Transitions:
-- On TEQ shift to state 937
## Reductions:
-- On T_LAMBDA_CPAR TCPAR TCOMMA
--   reduce production parameter_bis -> TAND T_METAVAR

State 937:
## Known stack suffix:
## TAND T_METAVAR TEQ
## LR(1) items:
parameter_bis -> TAND T_METAVAR TEQ . static_scalar [ T_LAMBDA_CPAR TCPAR TCOMMA ]
## Transitions:
-- On T__AT shift to state 1
-- On T_YIELD shift to state 2
-- On T_VARIABLE shift to state 3
-- On T_UNSET_CAST shift to state 5
-- On T_TYPE shift to state 6
-- On T_TRAIT_C shift to state 7
-- On T_SUPER shift to state 8
-- On T_STRING_CAST shift to state 9
-- On T_STATIC shift to state 10
-- On T_START_HEREDOC shift to state 25
-- On T_SELF shift to state 40
-- On T_REQUIRE_ONCE shift to state 41
-- On T_REQUIRE shift to state 42
-- On T_PRINT shift to state 43
-- On T_PARENT shift to state 44
-- On T_OBJECT_CAST shift to state 45
-- On T_NEW shift to state 46
-- On T_NAMESPACE_C shift to state 49
-- On T_NAMESPACE shift to state 50
-- On T_METHOD_C shift to state 58
-- On T_METAVAR shift to state 17
-- On T_LNUMBER shift to state 59
-- On T_LIST shift to state 69
-- On T_LINE shift to state 60
-- On T_LAMBDA_OPAR shift to state 73
-- On T_ISSET shift to state 133
-- On T_INT_CAST shift to state 135
-- On T_INSTANCEOF shift to state 52
-- On T_INCLUDE_ONCE shift to state 136
-- On T_INCLUDE shift to state 137
-- On T_INC shift to state 138
-- On T_IDENT shift to state 18
-- On T_FUNC_C shift to state 61
-- On T_FUNCTION shift to state 139
-- On T_FILE shift to state 62
-- On T_EXIT shift to state 160
-- On T_EVAL shift to state 162
-- On T_ENUM shift to state 19
-- On T_EMPTY shift to state 164
-- On T_DOUBLE_CAST shift to state 168
-- On T_DNUMBER shift to state 63
-- On T_DIR shift to state 64
-- On T_DEC shift to state 169
-- On T_CONSTANT_ENCAPSED_STRING shift to state 65
-- On T_CLONE shift to state 170
-- On T_CLASS_C shift to state 66
-- On T_BOOL_CAST shift to state 171
-- On T_AWAIT shift to state 172
-- On T_ASYNC shift to state 173
-- On T_ARRAY_CAST shift to state 200
-- On T_ARRAY shift to state 201
-- On TTILDE shift to state 204
-- On TPLUS shift to state 205
-- On TOPAR shift to state 206
-- On TOBRA shift to state 209
-- On TMINUS shift to state 210
-- On TGUIL shift to state 211
-- On TDOLLARDOLLAR shift to state 213
-- On TDOLLAR shift to state 214
-- On TBANG shift to state 216
-- On TBACKQUOTE shift to state 217
-- On TANTISLASH shift to state 85
-- On LDots shift to state 222
-- On static_scalar shift to state 938
-- On simple_expr shift to state 223
-- On qualified_name shift to state 94
-- On qualified_class_name shift to state 225
-- On primary_expr shift to state 226
-- On new_expr shift to state 227
-- On namespace_name shift to state 102
-- On member_expr shift to state 228
-- On lambda_expr shift to state 231
-- On ident_in_name shift to state 57
-- On ident shift to state 56
-- On expr shift to state 465
-- On constant shift to state 239
-- On call_expr shift to state 240
## Reductions:

State 938:
## Known stack suffix:
## TAND T_METAVAR TEQ static_scalar
## LR(1) items:
parameter_bis -> TAND T_METAVAR TEQ static_scalar . [ T_LAMBDA_CPAR TCPAR TCOMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production parameter_bis -> TAND T_METAVAR TEQ static_scalar

State 939:
## Known stack suffix:
## TAND T_ELLIPSIS
## LR(1) items:
parameter_bis -> TAND T_ELLIPSIS . T_VARIABLE [ T_LAMBDA_CPAR TCPAR TCOMMA ]
## Transitions:
-- On T_VARIABLE shift to state 940
## Reductions:

State 940:
## Known stack suffix:
## TAND T_ELLIPSIS T_VARIABLE
## LR(1) items:
parameter_bis -> TAND T_ELLIPSIS T_VARIABLE . [ T_LAMBDA_CPAR TCPAR TCOMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production parameter_bis -> TAND T_ELLIPSIS T_VARIABLE

State 941:
## Known stack suffix:
## option(attributes) option(ctor_modifier) type_php
## LR(1) items:
parameter -> option(attributes) option(ctor_modifier) type_php . parameter_bis [ T_LAMBDA_CPAR TCPAR TCOMMA ]
type_php -> type_php . TCOLCOL primary_type_php [ T_VARIABLE T_METAVAR T_ELLIPSIS TCOLCOL TAND ]
## Transitions:
-- On T_VARIABLE shift to state 131
-- On T_METAVAR shift to state 942
-- On T_ELLIPSIS shift to state 930
-- On TCOLCOL shift to state 93
-- On TAND shift to state 932
-- On parameter_bis shift to state 943
## Reductions:

State 942:
## Known stack suffix:
## T_METAVAR
## LR(1) items:
parameter_bis -> T_METAVAR . [ T_LAMBDA_CPAR TCPAR TCOMMA ]
parameter_bis -> T_METAVAR . TEQ static_scalar [ T_LAMBDA_CPAR TCPAR TCOMMA ]
## Transitions:
-- On TEQ shift to state 928
## Reductions:
-- On T_LAMBDA_CPAR TCPAR TCOMMA
--   reduce production parameter_bis -> T_METAVAR

State 943:
## Known stack suffix:
## option(attributes) option(ctor_modifier) type_php parameter_bis
## LR(1) items:
parameter -> option(attributes) option(ctor_modifier) type_php parameter_bis . [ T_LAMBDA_CPAR TCPAR TCOMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production parameter -> option(attributes) option(ctor_modifier) type_php parameter_bis

State 944:
## Known stack suffix:
## option(attributes) option(ctor_modifier) parameter_bis
## LR(1) items:
parameter -> option(attributes) option(ctor_modifier) parameter_bis . [ T_LAMBDA_CPAR TCPAR TCOMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production parameter -> option(attributes) option(ctor_modifier) parameter_bis

State 945:
## Known stack suffix:
## ctor_modifier
## LR(1) items:
option(ctor_modifier) -> ctor_modifier . [ T_VARIABLE T_TYPE T_SUPER T_SELF T_PARENT T_NAMESPACE T_METAVAR T_INSTANCEOF T_IDENT T_ENUM T_ELLIPSIS T_ARRAY TQUESTION TOPAR TANTISLASH TAND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production option(ctor_modifier) -> ctor_modifier

State 946:
## Known stack suffix:
## T_LIST TOPAR assignment_list
## LR(1) items:
assignment_list_element -> T_LIST TOPAR assignment_list . TCPAR [ TCPAR TCOMMA ]
expr -> T_LIST TOPAR assignment_list . TCPAR TEQ expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TAND ]
## Transitions:
-- On TCPAR shift to state 947
## Reductions:

State 947:
## Known stack suffix:
## T_LIST TOPAR assignment_list TCPAR
## LR(1) items:
assignment_list_element -> T_LIST TOPAR assignment_list TCPAR . [ TCPAR TCOMMA ]
expr -> T_LIST TOPAR assignment_list TCPAR . TEQ expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TAND ]
## Transitions:
-- On TEQ shift to state 614
## Reductions:
-- On TCPAR TCOMMA
--   reduce production assignment_list_element -> T_LIST TOPAR assignment_list TCPAR

State 948:
## Known stack suffix:
## T_LIST TOPAR assignment_list
## LR(1) items:
expr -> T_LIST TOPAR assignment_list . TCPAR TEQ expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
## Transitions:
-- On TCPAR shift to state 949
## Reductions:

State 949:
## Known stack suffix:
## T_LIST TOPAR assignment_list TCPAR
## LR(1) items:
expr -> T_LIST TOPAR assignment_list TCPAR . TEQ expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
## Transitions:
-- On TEQ shift to state 614
## Reductions:

State 950:
## Known stack suffix:
## T_ELLIPSIS
## LR(1) items:
function_call_argument -> T_ELLIPSIS . [ TCPAR TCOMMA ]
function_call_argument -> T_ELLIPSIS . expr [ TCPAR TCOMMA ]
## Transitions:
-- On T__AT shift to state 1
-- On T_YIELD shift to state 2
-- On T_VARIABLE shift to state 3
-- On T_UNSET_CAST shift to state 5
-- On T_TYPE shift to state 6
-- On T_TRAIT_C shift to state 7
-- On T_SUPER shift to state 8
-- On T_STRING_CAST shift to state 9
-- On T_STATIC shift to state 10
-- On T_START_HEREDOC shift to state 25
-- On T_SELF shift to state 40
-- On T_REQUIRE_ONCE shift to state 41
-- On T_REQUIRE shift to state 42
-- On T_PRINT shift to state 43
-- On T_PARENT shift to state 44
-- On T_OBJECT_CAST shift to state 45
-- On T_NEW shift to state 46
-- On T_NAMESPACE_C shift to state 49
-- On T_NAMESPACE shift to state 50
-- On T_METHOD_C shift to state 58
-- On T_METAVAR shift to state 17
-- On T_LNUMBER shift to state 59
-- On T_LIST shift to state 69
-- On T_LINE shift to state 60
-- On T_LAMBDA_OPAR shift to state 73
-- On T_ISSET shift to state 133
-- On T_INT_CAST shift to state 135
-- On T_INSTANCEOF shift to state 52
-- On T_INCLUDE_ONCE shift to state 136
-- On T_INCLUDE shift to state 137
-- On T_INC shift to state 138
-- On T_IDENT shift to state 18
-- On T_FUNC_C shift to state 61
-- On T_FUNCTION shift to state 139
-- On T_FILE shift to state 62
-- On T_EXIT shift to state 160
-- On T_EVAL shift to state 162
-- On T_ENUM shift to state 19
-- On T_EMPTY shift to state 164
-- On T_DOUBLE_CAST shift to state 168
-- On T_DNUMBER shift to state 63
-- On T_DIR shift to state 64
-- On T_DEC shift to state 169
-- On T_CONSTANT_ENCAPSED_STRING shift to state 65
-- On T_CLONE shift to state 170
-- On T_CLASS_C shift to state 66
-- On T_BOOL_CAST shift to state 171
-- On T_AWAIT shift to state 172
-- On T_ASYNC shift to state 173
-- On T_ARRAY_CAST shift to state 200
-- On T_ARRAY shift to state 201
-- On TTILDE shift to state 204
-- On TPLUS shift to state 205
-- On TOPAR shift to state 206
-- On TOBRA shift to state 209
-- On TMINUS shift to state 210
-- On TGUIL shift to state 211
-- On TDOLLARDOLLAR shift to state 213
-- On TDOLLAR shift to state 214
-- On TBANG shift to state 216
-- On TBACKQUOTE shift to state 217
-- On TANTISLASH shift to state 85
-- On LDots shift to state 222
-- On simple_expr shift to state 223
-- On qualified_name shift to state 94
-- On qualified_class_name shift to state 225
-- On primary_expr shift to state 226
-- On new_expr shift to state 227
-- On namespace_name shift to state 102
-- On member_expr shift to state 228
-- On lambda_expr shift to state 231
-- On ident_in_name shift to state 57
-- On ident shift to state 56
-- On expr shift to state 951
-- On constant shift to state 239
-- On call_expr shift to state 240
## Reductions:
-- On TCPAR TCOMMA
--   reduce production function_call_argument -> T_ELLIPSIS

State 951:
## Known stack suffix:
## T_ELLIPSIS expr
## LR(1) items:
expr -> expr . T_INC [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TAND ]
expr -> expr . T_DEC [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TAND ]
expr -> expr . T_BOOLEAN_OR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TAND ]
expr -> expr . T_BOOLEAN_AND expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TAND ]
expr -> expr . T_LOGICAL_OR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TAND ]
expr -> expr . T_LOGICAL_AND expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TAND ]
expr -> expr . T_LOGICAL_XOR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TAND ]
expr -> expr . TPLUS expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TAND ]
expr -> expr . TMINUS expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TAND ]
expr -> expr . TMUL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TAND ]
expr -> expr . TDIV expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TAND ]
expr -> expr . TMOD expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TAND ]
expr -> expr . TPOW expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TAND ]
expr -> expr . TAND expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TAND ]
expr -> expr . TOR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TAND ]
expr -> expr . TXOR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TAND ]
expr -> expr . T_SL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TAND ]
expr -> expr . T_SR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TAND ]
expr -> expr . TDOT expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TAND ]
expr -> expr . T_IS_IDENTICAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TAND ]
expr -> expr . T_IS_NOT_IDENTICAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TAND ]
expr -> expr . T_IS_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TAND ]
expr -> expr . T_IS_NOT_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TAND ]
expr -> expr . TSMALLER expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TAND ]
expr -> expr . T_IS_SMALLER_OR_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TAND ]
expr -> expr . TGREATER expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TAND ]
expr -> expr . T_IS_GREATER_OR_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TAND ]
expr -> expr . T_ROCKET expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TAND ]
expr -> expr . TQUESTION expr TCOLON expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TAND ]
expr -> expr . TQUESTION TCOLON expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TAND ]
expr -> expr . TQUESTION TQUESTION expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TAND ]
expr -> expr . T_INSTANCEOF expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TAND ]
function_call_argument -> T_ELLIPSIS expr . [ TCPAR TCOMMA ]
## Transitions:
-- On T_SR shift to state 233
-- On T_SL shift to state 244
-- On T_ROCKET shift to state 260
-- On T_LOGICAL_XOR shift to state 270
-- On T_LOGICAL_OR shift to state 298
-- On T_LOGICAL_AND shift to state 272
-- On T_IS_SMALLER_OR_EQUAL shift to state 262
-- On T_IS_NOT_IDENTICAL shift to state 274
-- On T_IS_NOT_EQUAL shift to state 276
-- On T_IS_IDENTICAL shift to state 278
-- On T_IS_GREATER_OR_EQUAL shift to state 264
-- On T_IS_EQUAL shift to state 280
-- On T_INSTANCEOF shift to state 235
-- On T_INC shift to state 237
-- On T_DEC shift to state 238
-- On T_BOOLEAN_OR shift to state 282
-- On T_BOOLEAN_AND shift to state 284
-- On TXOR shift to state 286
-- On TSMALLER shift to state 266
-- On TQUESTION shift to state 292
-- On TPOW shift to state 246
-- On TPLUS shift to state 248
-- On TOR shift to state 290
-- On TMUL shift to state 250
-- On TMOD shift to state 252
-- On TMINUS shift to state 256
-- On TGREATER shift to state 268
-- On TDOT shift to state 258
-- On TDIV shift to state 254
-- On TAND shift to state 288
## Reductions:
-- On TCPAR TCOMMA
--   reduce production function_call_argument -> T_ELLIPSIS expr

State 952:
## Known stack suffix:
## TAND
## LR(1) items:
function_call_argument -> TAND . expr [ TCPAR TCOMMA ]
## Transitions:
-- On T__AT shift to state 1
-- On T_YIELD shift to state 2
-- On T_VARIABLE shift to state 3
-- On T_UNSET_CAST shift to state 5
-- On T_TYPE shift to state 6
-- On T_TRAIT_C shift to state 7
-- On T_SUPER shift to state 8
-- On T_STRING_CAST shift to state 9
-- On T_STATIC shift to state 10
-- On T_START_HEREDOC shift to state 25
-- On T_SELF shift to state 40
-- On T_REQUIRE_ONCE shift to state 41
-- On T_REQUIRE shift to state 42
-- On T_PRINT shift to state 43
-- On T_PARENT shift to state 44
-- On T_OBJECT_CAST shift to state 45
-- On T_NEW shift to state 46
-- On T_NAMESPACE_C shift to state 49
-- On T_NAMESPACE shift to state 50
-- On T_METHOD_C shift to state 58
-- On T_METAVAR shift to state 17
-- On T_LNUMBER shift to state 59
-- On T_LIST shift to state 69
-- On T_LINE shift to state 60
-- On T_LAMBDA_OPAR shift to state 73
-- On T_ISSET shift to state 133
-- On T_INT_CAST shift to state 135
-- On T_INSTANCEOF shift to state 52
-- On T_INCLUDE_ONCE shift to state 136
-- On T_INCLUDE shift to state 137
-- On T_INC shift to state 138
-- On T_IDENT shift to state 18
-- On T_FUNC_C shift to state 61
-- On T_FUNCTION shift to state 139
-- On T_FILE shift to state 62
-- On T_EXIT shift to state 160
-- On T_EVAL shift to state 162
-- On T_ENUM shift to state 19
-- On T_EMPTY shift to state 164
-- On T_DOUBLE_CAST shift to state 168
-- On T_DNUMBER shift to state 63
-- On T_DIR shift to state 64
-- On T_DEC shift to state 169
-- On T_CONSTANT_ENCAPSED_STRING shift to state 65
-- On T_CLONE shift to state 170
-- On T_CLASS_C shift to state 66
-- On T_BOOL_CAST shift to state 171
-- On T_AWAIT shift to state 172
-- On T_ASYNC shift to state 173
-- On T_ARRAY_CAST shift to state 200
-- On T_ARRAY shift to state 201
-- On TTILDE shift to state 204
-- On TPLUS shift to state 205
-- On TOPAR shift to state 206
-- On TOBRA shift to state 209
-- On TMINUS shift to state 210
-- On TGUIL shift to state 211
-- On TDOLLARDOLLAR shift to state 213
-- On TDOLLAR shift to state 214
-- On TBANG shift to state 216
-- On TBACKQUOTE shift to state 217
-- On TANTISLASH shift to state 85
-- On LDots shift to state 222
-- On simple_expr shift to state 223
-- On qualified_name shift to state 94
-- On qualified_class_name shift to state 225
-- On primary_expr shift to state 226
-- On new_expr shift to state 227
-- On namespace_name shift to state 102
-- On member_expr shift to state 228
-- On lambda_expr shift to state 231
-- On ident_in_name shift to state 57
-- On ident shift to state 56
-- On expr shift to state 953
-- On constant shift to state 239
-- On call_expr shift to state 240
## Reductions:

State 953:
## Known stack suffix:
## TAND expr
## LR(1) items:
expr -> expr . T_INC [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TAND ]
expr -> expr . T_DEC [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TAND ]
expr -> expr . T_BOOLEAN_OR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TAND ]
expr -> expr . T_BOOLEAN_AND expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TAND ]
expr -> expr . T_LOGICAL_OR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TAND ]
expr -> expr . T_LOGICAL_AND expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TAND ]
expr -> expr . T_LOGICAL_XOR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TAND ]
expr -> expr . TPLUS expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TAND ]
expr -> expr . TMINUS expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TAND ]
expr -> expr . TMUL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TAND ]
expr -> expr . TDIV expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TAND ]
expr -> expr . TMOD expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TAND ]
expr -> expr . TPOW expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TAND ]
expr -> expr . TAND expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TAND ]
expr -> expr . TOR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TAND ]
expr -> expr . TXOR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TAND ]
expr -> expr . T_SL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TAND ]
expr -> expr . T_SR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TAND ]
expr -> expr . TDOT expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TAND ]
expr -> expr . T_IS_IDENTICAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TAND ]
expr -> expr . T_IS_NOT_IDENTICAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TAND ]
expr -> expr . T_IS_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TAND ]
expr -> expr . T_IS_NOT_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TAND ]
expr -> expr . TSMALLER expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TAND ]
expr -> expr . T_IS_SMALLER_OR_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TAND ]
expr -> expr . TGREATER expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TAND ]
expr -> expr . T_IS_GREATER_OR_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TAND ]
expr -> expr . T_ROCKET expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TAND ]
expr -> expr . TQUESTION expr TCOLON expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TAND ]
expr -> expr . TQUESTION TCOLON expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TAND ]
expr -> expr . TQUESTION TQUESTION expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TAND ]
expr -> expr . T_INSTANCEOF expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TAND ]
function_call_argument -> TAND expr . [ TCPAR TCOMMA ]
## Transitions:
-- On T_SR shift to state 233
-- On T_SL shift to state 244
-- On T_ROCKET shift to state 260
-- On T_LOGICAL_XOR shift to state 270
-- On T_LOGICAL_OR shift to state 298
-- On T_LOGICAL_AND shift to state 272
-- On T_IS_SMALLER_OR_EQUAL shift to state 262
-- On T_IS_NOT_IDENTICAL shift to state 274
-- On T_IS_NOT_EQUAL shift to state 276
-- On T_IS_IDENTICAL shift to state 278
-- On T_IS_GREATER_OR_EQUAL shift to state 264
-- On T_IS_EQUAL shift to state 280
-- On T_INSTANCEOF shift to state 235
-- On T_INC shift to state 237
-- On T_DEC shift to state 238
-- On T_BOOLEAN_OR shift to state 282
-- On T_BOOLEAN_AND shift to state 284
-- On TXOR shift to state 286
-- On TSMALLER shift to state 266
-- On TQUESTION shift to state 292
-- On TPOW shift to state 246
-- On TPLUS shift to state 248
-- On TOR shift to state 290
-- On TMUL shift to state 250
-- On TMOD shift to state 252
-- On TMINUS shift to state 256
-- On TGREATER shift to state 268
-- On TDOT shift to state 258
-- On TDIV shift to state 254
-- On TAND shift to state 288
## Reductions:
-- On TCPAR TCOMMA
--   reduce production function_call_argument -> TAND expr

State 954:
## Known stack suffix:
## list_sep(function_call_argument,TCOMMA)
## LR(1) items:
function_call_argument_list -> list_sep(function_call_argument,TCOMMA) . [ TCPAR ]
function_call_argument_list -> list_sep(function_call_argument,TCOMMA) . TCOMMA [ TCPAR ]
list_sep(function_call_argument,TCOMMA) -> list_sep(function_call_argument,TCOMMA) . TCOMMA function_call_argument [ TCPAR TCOMMA ]
## Transitions:
-- On TCOMMA shift to state 955
## Reductions:
-- On TCPAR
--   reduce production function_call_argument_list -> list_sep(function_call_argument,TCOMMA)

State 955:
## Known stack suffix:
## list_sep(function_call_argument,TCOMMA) TCOMMA
## LR(1) items:
function_call_argument_list -> list_sep(function_call_argument,TCOMMA) TCOMMA . [ TCPAR ]
list_sep(function_call_argument,TCOMMA) -> list_sep(function_call_argument,TCOMMA) TCOMMA . function_call_argument [ TCPAR TCOMMA ]
## Transitions:
-- On T__AT shift to state 1
-- On T_YIELD shift to state 2
-- On T_VARIABLE shift to state 3
-- On T_UNSET_CAST shift to state 5
-- On T_TYPE shift to state 6
-- On T_TRAIT_C shift to state 7
-- On T_SUPER shift to state 8
-- On T_STRING_CAST shift to state 9
-- On T_STATIC shift to state 10
-- On T_START_HEREDOC shift to state 25
-- On T_SELF shift to state 40
-- On T_REQUIRE_ONCE shift to state 41
-- On T_REQUIRE shift to state 42
-- On T_PRINT shift to state 43
-- On T_PARENT shift to state 44
-- On T_OBJECT_CAST shift to state 45
-- On T_NEW shift to state 46
-- On T_NAMESPACE_C shift to state 49
-- On T_NAMESPACE shift to state 50
-- On T_METHOD_C shift to state 58
-- On T_METAVAR shift to state 17
-- On T_LNUMBER shift to state 59
-- On T_LIST shift to state 69
-- On T_LINE shift to state 60
-- On T_LAMBDA_OPAR shift to state 73
-- On T_ISSET shift to state 133
-- On T_INT_CAST shift to state 135
-- On T_INSTANCEOF shift to state 52
-- On T_INCLUDE_ONCE shift to state 136
-- On T_INCLUDE shift to state 137
-- On T_INC shift to state 138
-- On T_IDENT shift to state 18
-- On T_FUNC_C shift to state 61
-- On T_FUNCTION shift to state 139
-- On T_FILE shift to state 62
-- On T_EXIT shift to state 160
-- On T_EVAL shift to state 162
-- On T_ENUM shift to state 19
-- On T_EMPTY shift to state 164
-- On T_ELLIPSIS shift to state 950
-- On T_DOUBLE_CAST shift to state 168
-- On T_DNUMBER shift to state 63
-- On T_DIR shift to state 64
-- On T_DEC shift to state 169
-- On T_CONSTANT_ENCAPSED_STRING shift to state 65
-- On T_CLONE shift to state 170
-- On T_CLASS_C shift to state 66
-- On T_BOOL_CAST shift to state 171
-- On T_AWAIT shift to state 172
-- On T_ASYNC shift to state 173
-- On T_ARRAY_CAST shift to state 200
-- On T_ARRAY shift to state 201
-- On TTILDE shift to state 204
-- On TPLUS shift to state 205
-- On TOPAR shift to state 206
-- On TOBRA shift to state 209
-- On TMINUS shift to state 210
-- On TGUIL shift to state 211
-- On TDOLLARDOLLAR shift to state 213
-- On TDOLLAR shift to state 214
-- On TBANG shift to state 216
-- On TBACKQUOTE shift to state 217
-- On TANTISLASH shift to state 85
-- On TAND shift to state 952
-- On LDots shift to state 222
-- On simple_expr shift to state 223
-- On qualified_name shift to state 94
-- On qualified_class_name shift to state 225
-- On primary_expr shift to state 226
-- On new_expr shift to state 227
-- On namespace_name shift to state 102
-- On member_expr shift to state 228
-- On lambda_expr shift to state 231
-- On ident_in_name shift to state 57
-- On ident shift to state 56
-- On function_call_argument shift to state 956
-- On expr shift to state 957
-- On constant shift to state 239
-- On call_expr shift to state 240
## Reductions:
-- On TCPAR
--   reduce production function_call_argument_list -> list_sep(function_call_argument,TCOMMA) TCOMMA

State 956:
## Known stack suffix:
## list_sep(function_call_argument,TCOMMA) TCOMMA function_call_argument
## LR(1) items:
list_sep(function_call_argument,TCOMMA) -> list_sep(function_call_argument,TCOMMA) TCOMMA function_call_argument . [ TCPAR TCOMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production list_sep(function_call_argument,TCOMMA) -> list_sep(function_call_argument,TCOMMA) TCOMMA function_call_argument

State 957:
## Known stack suffix:
## expr
## LR(1) items:
expr -> expr . T_INC [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TAND ]
expr -> expr . T_DEC [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TAND ]
expr -> expr . T_BOOLEAN_OR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TAND ]
expr -> expr . T_BOOLEAN_AND expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TAND ]
expr -> expr . T_LOGICAL_OR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TAND ]
expr -> expr . T_LOGICAL_AND expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TAND ]
expr -> expr . T_LOGICAL_XOR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TAND ]
expr -> expr . TPLUS expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TAND ]
expr -> expr . TMINUS expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TAND ]
expr -> expr . TMUL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TAND ]
expr -> expr . TDIV expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TAND ]
expr -> expr . TMOD expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TAND ]
expr -> expr . TPOW expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TAND ]
expr -> expr . TAND expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TAND ]
expr -> expr . TOR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TAND ]
expr -> expr . TXOR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TAND ]
expr -> expr . T_SL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TAND ]
expr -> expr . T_SR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TAND ]
expr -> expr . TDOT expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TAND ]
expr -> expr . T_IS_IDENTICAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TAND ]
expr -> expr . T_IS_NOT_IDENTICAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TAND ]
expr -> expr . T_IS_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TAND ]
expr -> expr . T_IS_NOT_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TAND ]
expr -> expr . TSMALLER expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TAND ]
expr -> expr . T_IS_SMALLER_OR_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TAND ]
expr -> expr . TGREATER expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TAND ]
expr -> expr . T_IS_GREATER_OR_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TAND ]
expr -> expr . T_ROCKET expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TAND ]
expr -> expr . TQUESTION expr TCOLON expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TAND ]
expr -> expr . TQUESTION TCOLON expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TAND ]
expr -> expr . TQUESTION TQUESTION expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TAND ]
expr -> expr . T_INSTANCEOF expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TAND ]
function_call_argument -> expr . [ TCPAR TCOMMA ]
## Transitions:
-- On T_SR shift to state 233
-- On T_SL shift to state 244
-- On T_ROCKET shift to state 260
-- On T_LOGICAL_XOR shift to state 270
-- On T_LOGICAL_OR shift to state 298
-- On T_LOGICAL_AND shift to state 272
-- On T_IS_SMALLER_OR_EQUAL shift to state 262
-- On T_IS_NOT_IDENTICAL shift to state 274
-- On T_IS_NOT_EQUAL shift to state 276
-- On T_IS_IDENTICAL shift to state 278
-- On T_IS_GREATER_OR_EQUAL shift to state 264
-- On T_IS_EQUAL shift to state 280
-- On T_INSTANCEOF shift to state 235
-- On T_INC shift to state 237
-- On T_DEC shift to state 238
-- On T_BOOLEAN_OR shift to state 282
-- On T_BOOLEAN_AND shift to state 284
-- On TXOR shift to state 286
-- On TSMALLER shift to state 266
-- On TQUESTION shift to state 292
-- On TPOW shift to state 246
-- On TPLUS shift to state 248
-- On TOR shift to state 290
-- On TMUL shift to state 250
-- On TMOD shift to state 252
-- On TMINUS shift to state 256
-- On TGREATER shift to state 268
-- On TDOT shift to state 258
-- On TDIV shift to state 254
-- On TAND shift to state 288
## Reductions:
-- On TCPAR TCOMMA
--   reduce production function_call_argument -> expr

State 958:
## Known stack suffix:
## TOPAR function_call_argument_list
## LR(1) items:
arguments -> TOPAR function_call_argument_list . TCPAR [ T_XOR_EQUAL T_SR_EQUAL T_SR T_SL_EQUAL T_SL T_ROCKET T_PLUS_EQUAL T_OR_EQUAL T_OBJECT_OPERATOR T_MUL_EQUAL T_MOD_EQUAL T_MINUS_EQUAL T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_IMPLEMENTS T_EXTENDS T_DIV_EQUAL T_DEC T_CONCAT_EQUAL T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW T_AND_EQUAL TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TOPAR TOBRACE TOBRA TMUL TMOD TMINUS TGREATER TEQ TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
## Transitions:
-- On TCPAR shift to state 959
## Reductions:

State 959:
## Known stack suffix:
## TOPAR function_call_argument_list TCPAR
## LR(1) items:
arguments -> TOPAR function_call_argument_list TCPAR . [ T_XOR_EQUAL T_SR_EQUAL T_SR T_SL_EQUAL T_SL T_ROCKET T_PLUS_EQUAL T_OR_EQUAL T_OBJECT_OPERATOR T_MUL_EQUAL T_MOD_EQUAL T_MINUS_EQUAL T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_IMPLEMENTS T_EXTENDS T_DIV_EQUAL T_DEC T_CONCAT_EQUAL T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW T_AND_EQUAL TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TOPAR TOBRACE TOBRA TMUL TMOD TMINUS TGREATER TEQ TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production arguments -> TOPAR function_call_argument_list TCPAR

State 960:
## Known stack suffix:
## function_call_argument
## LR(1) items:
list_sep(function_call_argument,TCOMMA) -> function_call_argument . [ TCPAR TCOMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production list_sep(function_call_argument,TCOMMA) -> function_call_argument

State 961:
## Known stack suffix:
## T_NEW T_CLASS option(arguments)
## LR(1) items:
new_expr -> T_NEW T_CLASS option(arguments) . extends_from implements_list TOBRACE list(member_declaration) TCBRACE [ T_XOR_EQUAL T_SR_EQUAL T_SR T_SL_EQUAL T_SL T_ROCKET T_PLUS_EQUAL T_OR_EQUAL T_MUL_EQUAL T_MOD_EQUAL T_MINUS_EQUAL T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DIV_EQUAL T_DEC T_CONCAT_EQUAL T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW T_AND_EQUAL TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TEQ TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
## Transitions:
-- On T_EXTENDS shift to state 709
-- On extends_from shift to state 962
## Reductions:
-- On T_IMPLEMENTS TOBRACE
--   reduce production extends_from ->

State 962:
## Known stack suffix:
## T_NEW T_CLASS option(arguments) extends_from
## LR(1) items:
new_expr -> T_NEW T_CLASS option(arguments) extends_from . implements_list TOBRACE list(member_declaration) TCBRACE [ T_XOR_EQUAL T_SR_EQUAL T_SR T_SL_EQUAL T_SL T_ROCKET T_PLUS_EQUAL T_OR_EQUAL T_MUL_EQUAL T_MOD_EQUAL T_MINUS_EQUAL T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DIV_EQUAL T_DEC T_CONCAT_EQUAL T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW T_AND_EQUAL TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TEQ TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
## Transitions:
-- On T_IMPLEMENTS shift to state 414
-- On implements_list shift to state 963
## Reductions:
-- On TOBRACE
--   reduce production implements_list ->

State 963:
## Known stack suffix:
## T_NEW T_CLASS option(arguments) extends_from implements_list
## LR(1) items:
new_expr -> T_NEW T_CLASS option(arguments) extends_from implements_list . TOBRACE list(member_declaration) TCBRACE [ T_XOR_EQUAL T_SR_EQUAL T_SR T_SL_EQUAL T_SL T_ROCKET T_PLUS_EQUAL T_OR_EQUAL T_MUL_EQUAL T_MOD_EQUAL T_MINUS_EQUAL T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DIV_EQUAL T_DEC T_CONCAT_EQUAL T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW T_AND_EQUAL TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TEQ TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
## Transitions:
-- On TOBRACE shift to state 964
## Reductions:

State 964:
## Known stack suffix:
## T_NEW T_CLASS option(arguments) extends_from implements_list TOBRACE
## LR(1) items:
new_expr -> T_NEW T_CLASS option(arguments) extends_from implements_list TOBRACE . list(member_declaration) TCBRACE [ T_XOR_EQUAL T_SR_EQUAL T_SR T_SL_EQUAL T_SL T_ROCKET T_PLUS_EQUAL T_OR_EQUAL T_MUL_EQUAL T_MOD_EQUAL T_MINUS_EQUAL T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DIV_EQUAL T_DEC T_CONCAT_EQUAL T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW T_AND_EQUAL TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TEQ TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
## Transitions:
-- On T_VAR shift to state 424
-- On T_USE shift to state 425
-- On T_STATIC shift to state 434
-- On T_SL shift to state 16
-- On T_PUBLIC shift to state 126
-- On T_PROTECTED shift to state 127
-- On T_PRIVATE shift to state 128
-- On T_FINAL shift to state 435
-- On T_ELLIPSIS shift to state 459
-- On T_ASYNC shift to state 436
-- On T_ABSTRACT shift to state 437
-- On visibility_modifier shift to state 460
-- On variable_modifiers shift to state 461
-- On option(visibility_modifier) shift to state 478
-- On nonempty_list(member_modifier) shift to state 497
-- On method_declaration shift to state 498
-- On member_modifier shift to state 499
-- On member_declaration shift to state 500
-- On list(member_modifier) shift to state 501
-- On list(member_declaration) shift to state 965
-- On class_modifier shift to state 444
-- On attributes shift to state 572
## Reductions:
-- On TCBRACE
--   reduce production list(member_declaration) ->
-- On T_FUNCTION
--   reduce production list(member_modifier) ->
-- On T_CONST
--   reduce production option(visibility_modifier) ->

State 965:
## Known stack suffix:
## T_NEW T_CLASS option(arguments) extends_from implements_list TOBRACE list(member_declaration)
## LR(1) items:
new_expr -> T_NEW T_CLASS option(arguments) extends_from implements_list TOBRACE list(member_declaration) . TCBRACE [ T_XOR_EQUAL T_SR_EQUAL T_SR T_SL_EQUAL T_SL T_ROCKET T_PLUS_EQUAL T_OR_EQUAL T_MUL_EQUAL T_MOD_EQUAL T_MINUS_EQUAL T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DIV_EQUAL T_DEC T_CONCAT_EQUAL T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW T_AND_EQUAL TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TEQ TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
## Transitions:
-- On TCBRACE shift to state 966
## Reductions:

State 966:
## Known stack suffix:
## T_NEW T_CLASS option(arguments) extends_from implements_list TOBRACE list(member_declaration) TCBRACE
## LR(1) items:
new_expr -> T_NEW T_CLASS option(arguments) extends_from implements_list TOBRACE list(member_declaration) TCBRACE . [ T_XOR_EQUAL T_SR_EQUAL T_SR T_SL_EQUAL T_SL T_ROCKET T_PLUS_EQUAL T_OR_EQUAL T_MUL_EQUAL T_MOD_EQUAL T_MINUS_EQUAL T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DIV_EQUAL T_DEC T_CONCAT_EQUAL T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW T_AND_EQUAL TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TEQ TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production new_expr -> T_NEW T_CLASS option(arguments) extends_from implements_list TOBRACE list(member_declaration) TCBRACE

State 967:
## Known stack suffix:
## arguments
## LR(1) items:
option(arguments) -> arguments . [ T_XOR_EQUAL T_SR_EQUAL T_SR T_SL_EQUAL T_SL T_ROCKET T_PLUS_EQUAL T_OR_EQUAL T_MUL_EQUAL T_MOD_EQUAL T_MINUS_EQUAL T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_IMPLEMENTS T_EXTENDS T_DIV_EQUAL T_DEC T_CONCAT_EQUAL T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW T_AND_EQUAL TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TOBRACE TMUL TMOD TMINUS TGREATER TEQ TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production option(arguments) -> arguments

State 968:
## Known stack suffix:
## T_NEW member_expr
## LR(1) items:
member_expr -> member_expr . TOBRA dim_offset TCBRA [ T_XOR_EQUAL T_SR_EQUAL T_SR T_SL_EQUAL T_SL T_ROCKET T_PLUS_EQUAL T_OR_EQUAL T_OBJECT_OPERATOR T_MUL_EQUAL T_MOD_EQUAL T_MINUS_EQUAL T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DIV_EQUAL T_DEC T_CONCAT_EQUAL T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW T_AND_EQUAL TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TOPAR TOBRACE TOBRA TMUL TMOD TMINUS TGREATER TEQ TDOT TDIV TCPAR TCOMMA TCOLON TCOLCOL TCBRACE TCBRA TAND RDots EOF ]
member_expr -> member_expr . TOBRACE expr TCBRACE [ T_XOR_EQUAL T_SR_EQUAL T_SR T_SL_EQUAL T_SL T_ROCKET T_PLUS_EQUAL T_OR_EQUAL T_OBJECT_OPERATOR T_MUL_EQUAL T_MOD_EQUAL T_MINUS_EQUAL T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DIV_EQUAL T_DEC T_CONCAT_EQUAL T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW T_AND_EQUAL TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TOPAR TOBRACE TOBRA TMUL TMOD TMINUS TGREATER TEQ TDOT TDIV TCPAR TCOMMA TCOLON TCOLCOL TCBRACE TCBRA TAND RDots EOF ]
member_expr -> member_expr . T_OBJECT_OPERATOR primary_expr [ T_XOR_EQUAL T_SR_EQUAL T_SR T_SL_EQUAL T_SL T_ROCKET T_PLUS_EQUAL T_OR_EQUAL T_OBJECT_OPERATOR T_MUL_EQUAL T_MOD_EQUAL T_MINUS_EQUAL T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DIV_EQUAL T_DEC T_CONCAT_EQUAL T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW T_AND_EQUAL TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TOPAR TOBRACE TOBRA TMUL TMOD TMINUS TGREATER TEQ TDOT TDIV TCPAR TCOMMA TCOLON TCOLCOL TCBRACE TCBRA TAND RDots EOF ]
member_expr -> member_expr . T_OBJECT_OPERATOR TOBRACE expr TCBRACE [ T_XOR_EQUAL T_SR_EQUAL T_SR T_SL_EQUAL T_SL T_ROCKET T_PLUS_EQUAL T_OR_EQUAL T_OBJECT_OPERATOR T_MUL_EQUAL T_MOD_EQUAL T_MINUS_EQUAL T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DIV_EQUAL T_DEC T_CONCAT_EQUAL T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW T_AND_EQUAL TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TOPAR TOBRACE TOBRA TMUL TMOD TMINUS TGREATER TEQ TDOT TDIV TCPAR TCOMMA TCOLON TCOLCOL TCBRACE TCBRA TAND RDots EOF ]
member_expr -> member_expr . TCOLCOL primary_expr [ T_XOR_EQUAL T_SR_EQUAL T_SR T_SL_EQUAL T_SL T_ROCKET T_PLUS_EQUAL T_OR_EQUAL T_OBJECT_OPERATOR T_MUL_EQUAL T_MOD_EQUAL T_MINUS_EQUAL T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DIV_EQUAL T_DEC T_CONCAT_EQUAL T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW T_AND_EQUAL TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TOPAR TOBRACE TOBRA TMUL TMOD TMINUS TGREATER TEQ TDOT TDIV TCPAR TCOMMA TCOLON TCOLCOL TCBRACE TCBRA TAND RDots EOF ]
member_expr -> member_expr . TCOLCOL T_CLASS [ T_XOR_EQUAL T_SR_EQUAL T_SR T_SL_EQUAL T_SL T_ROCKET T_PLUS_EQUAL T_OR_EQUAL T_OBJECT_OPERATOR T_MUL_EQUAL T_MOD_EQUAL T_MINUS_EQUAL T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DIV_EQUAL T_DEC T_CONCAT_EQUAL T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW T_AND_EQUAL TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TOPAR TOBRACE TOBRA TMUL TMOD TMINUS TGREATER TEQ TDOT TDIV TCPAR TCOMMA TCOLON TCOLCOL TCBRACE TCBRA TAND RDots EOF ]
new_expr -> T_NEW member_expr . option(arguments) [ T_XOR_EQUAL T_SR_EQUAL T_SR T_SL_EQUAL T_SL T_ROCKET T_PLUS_EQUAL T_OR_EQUAL T_MUL_EQUAL T_MOD_EQUAL T_MINUS_EQUAL T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DIV_EQUAL T_DEC T_CONCAT_EQUAL T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW T_AND_EQUAL TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TEQ TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
## Transitions:
-- On T_OBJECT_OPERATOR shift to state 229
-- On TOPAR shift to state 68
-- On TOBRACE shift to state 316
-- On TOBRA shift to state 319
-- On TCOLCOL shift to state 322
-- On option(arguments) shift to state 969
-- On arguments shift to state 967
## Reductions:
-- On T_XOR_EQUAL T_SR_EQUAL T_SR T_SL_EQUAL T_SL T_ROCKET T_PLUS_EQUAL T_OR_EQUAL T_MUL_EQUAL T_MOD_EQUAL T_MINUS_EQUAL T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DIV_EQUAL T_DEC T_CONCAT_EQUAL T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW T_AND_EQUAL TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TEQ TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF
--   reduce production option(arguments) ->

State 969:
## Known stack suffix:
## T_NEW member_expr option(arguments)
## LR(1) items:
new_expr -> T_NEW member_expr option(arguments) . [ T_XOR_EQUAL T_SR_EQUAL T_SR T_SL_EQUAL T_SL T_ROCKET T_PLUS_EQUAL T_OR_EQUAL T_MUL_EQUAL T_MOD_EQUAL T_MINUS_EQUAL T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DIV_EQUAL T_DEC T_CONCAT_EQUAL T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW T_AND_EQUAL TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TEQ TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production new_expr -> T_NEW member_expr option(arguments)

State 970:
## Known stack suffix:
## T_OBJECT_CAST expr
## LR(1) items:
expr -> expr . T_INC [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_DEC [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_BOOLEAN_OR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_BOOLEAN_AND expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_LOGICAL_OR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_LOGICAL_AND expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_LOGICAL_XOR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TPLUS expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TMINUS expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TMUL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TDIV expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TMOD expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TPOW expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TAND expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TOR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TXOR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_SL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_SR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TDOT expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_IDENTICAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_NOT_IDENTICAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_NOT_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TSMALLER expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_SMALLER_OR_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TGREATER expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_GREATER_OR_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_ROCKET expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TQUESTION expr TCOLON expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TQUESTION TCOLON expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TQUESTION TQUESTION expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_INSTANCEOF expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> T_OBJECT_CAST expr . [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
## Transitions:
-- On T_INC shift to state 237
-- On T_DEC shift to state 238
## Reductions:
-- On T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF
--   reduce production expr -> T_OBJECT_CAST expr

State 971:
## Known stack suffix:
## T_PRINT expr
## LR(1) items:
expr -> expr . T_INC [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_DEC [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_BOOLEAN_OR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_BOOLEAN_AND expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_LOGICAL_OR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_LOGICAL_AND expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_LOGICAL_XOR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TPLUS expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TMINUS expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TMUL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TDIV expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TMOD expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TPOW expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TAND expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TOR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TXOR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_SL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_SR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TDOT expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_IDENTICAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_NOT_IDENTICAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_NOT_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TSMALLER expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_SMALLER_OR_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TGREATER expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_GREATER_OR_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_ROCKET expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TQUESTION expr TCOLON expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TQUESTION TCOLON expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TQUESTION TQUESTION expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_INSTANCEOF expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> T_PRINT expr . [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
## Transitions:
-- On T_SR shift to state 233
-- On T_SL shift to state 244
-- On T_ROCKET shift to state 260
-- On T_IS_SMALLER_OR_EQUAL shift to state 262
-- On T_IS_NOT_IDENTICAL shift to state 274
-- On T_IS_NOT_EQUAL shift to state 276
-- On T_IS_IDENTICAL shift to state 278
-- On T_IS_GREATER_OR_EQUAL shift to state 264
-- On T_IS_EQUAL shift to state 280
-- On T_INSTANCEOF shift to state 235
-- On T_INC shift to state 237
-- On T_DEC shift to state 238
-- On T_BOOLEAN_OR shift to state 282
-- On T_BOOLEAN_AND shift to state 284
-- On TXOR shift to state 286
-- On TSMALLER shift to state 266
-- On TQUESTION shift to state 292
-- On TPOW shift to state 246
-- On TPLUS shift to state 248
-- On TOR shift to state 290
-- On TMUL shift to state 250
-- On TMOD shift to state 252
-- On TMINUS shift to state 256
-- On TGREATER shift to state 268
-- On TDOT shift to state 258
-- On TDIV shift to state 254
-- On TAND shift to state 288
## Reductions:
-- On T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_CLOSE_TAG_OF_ECHO T_AWAIT T_AS T_ARROW TSEMICOLON TCPAR TCOMMA TCOLON TCBRACE TCBRA RDots EOF
--   reduce production expr -> T_PRINT expr

State 972:
## Known stack suffix:
## T_REQUIRE T_ELLIPSIS
## LR(1) items:
expr -> T_REQUIRE T_ELLIPSIS . [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production expr -> T_REQUIRE T_ELLIPSIS

State 973:
## Known stack suffix:
## T_REQUIRE expr
## LR(1) items:
expr -> expr . T_INC [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_DEC [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_BOOLEAN_OR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_BOOLEAN_AND expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_LOGICAL_OR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_LOGICAL_AND expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_LOGICAL_XOR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TPLUS expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TMINUS expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TMUL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TDIV expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TMOD expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TPOW expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TAND expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TOR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TXOR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_SL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_SR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TDOT expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_IDENTICAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_NOT_IDENTICAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_NOT_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TSMALLER expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_SMALLER_OR_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TGREATER expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_GREATER_OR_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_ROCKET expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TQUESTION expr TCOLON expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TQUESTION TCOLON expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TQUESTION TQUESTION expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_INSTANCEOF expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> T_REQUIRE expr . [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
## Transitions:
-- On T_SR shift to state 233
-- On T_SL shift to state 244
-- On T_ROCKET shift to state 260
-- On T_LOGICAL_XOR shift to state 270
-- On T_LOGICAL_OR shift to state 298
-- On T_LOGICAL_AND shift to state 272
-- On T_IS_SMALLER_OR_EQUAL shift to state 262
-- On T_IS_NOT_IDENTICAL shift to state 274
-- On T_IS_NOT_EQUAL shift to state 276
-- On T_IS_IDENTICAL shift to state 278
-- On T_IS_GREATER_OR_EQUAL shift to state 264
-- On T_IS_EQUAL shift to state 280
-- On T_INSTANCEOF shift to state 235
-- On T_INC shift to state 237
-- On T_DEC shift to state 238
-- On T_BOOLEAN_OR shift to state 282
-- On T_BOOLEAN_AND shift to state 284
-- On TXOR shift to state 286
-- On TSMALLER shift to state 266
-- On TQUESTION shift to state 292
-- On TPOW shift to state 246
-- On TPLUS shift to state 248
-- On TOR shift to state 290
-- On TMUL shift to state 250
-- On TMOD shift to state 252
-- On TMINUS shift to state 256
-- On TGREATER shift to state 268
-- On TDOT shift to state 258
-- On TDIV shift to state 254
-- On TAND shift to state 288
## Reductions:
-- On T_LAMBDA_CPAR T_CLOSE_TAG_OF_ECHO T_AWAIT T_AS T_ARROW TSEMICOLON TCPAR TCOMMA TCOLON TCBRACE TCBRA RDots EOF
--   reduce production expr -> T_REQUIRE expr

State 974:
## Known stack suffix:
## T_REQUIRE_ONCE T_ELLIPSIS
## LR(1) items:
expr -> T_REQUIRE_ONCE T_ELLIPSIS . [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production expr -> T_REQUIRE_ONCE T_ELLIPSIS

State 975:
## Known stack suffix:
## T_REQUIRE_ONCE expr
## LR(1) items:
expr -> expr . T_INC [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_DEC [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_BOOLEAN_OR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_BOOLEAN_AND expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_LOGICAL_OR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_LOGICAL_AND expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_LOGICAL_XOR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TPLUS expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TMINUS expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TMUL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TDIV expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TMOD expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TPOW expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TAND expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TOR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TXOR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_SL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_SR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TDOT expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_IDENTICAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_NOT_IDENTICAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_NOT_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TSMALLER expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_SMALLER_OR_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TGREATER expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_GREATER_OR_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_ROCKET expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TQUESTION expr TCOLON expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TQUESTION TCOLON expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TQUESTION TQUESTION expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_INSTANCEOF expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> T_REQUIRE_ONCE expr . [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
## Transitions:
-- On T_SR shift to state 233
-- On T_SL shift to state 244
-- On T_ROCKET shift to state 260
-- On T_LOGICAL_XOR shift to state 270
-- On T_LOGICAL_OR shift to state 298
-- On T_LOGICAL_AND shift to state 272
-- On T_IS_SMALLER_OR_EQUAL shift to state 262
-- On T_IS_NOT_IDENTICAL shift to state 274
-- On T_IS_NOT_EQUAL shift to state 276
-- On T_IS_IDENTICAL shift to state 278
-- On T_IS_GREATER_OR_EQUAL shift to state 264
-- On T_IS_EQUAL shift to state 280
-- On T_INSTANCEOF shift to state 235
-- On T_INC shift to state 237
-- On T_DEC shift to state 238
-- On T_BOOLEAN_OR shift to state 282
-- On T_BOOLEAN_AND shift to state 284
-- On TXOR shift to state 286
-- On TSMALLER shift to state 266
-- On TQUESTION shift to state 292
-- On TPOW shift to state 246
-- On TPLUS shift to state 248
-- On TOR shift to state 290
-- On TMUL shift to state 250
-- On TMOD shift to state 252
-- On TMINUS shift to state 256
-- On TGREATER shift to state 268
-- On TDOT shift to state 258
-- On TDIV shift to state 254
-- On TAND shift to state 288
## Reductions:
-- On T_LAMBDA_CPAR T_CLOSE_TAG_OF_ECHO T_AWAIT T_AS T_ARROW TSEMICOLON TCPAR TCOMMA TCOLON TCBRACE TCBRA RDots EOF
--   reduce production expr -> T_REQUIRE_ONCE expr

State 976:
## Known stack suffix:
## T_DOLLAR_OPEN_CURLY_BRACES T_STRING_VARNAME TOBRA expr
## LR(1) items:
encaps -> T_DOLLAR_OPEN_CURLY_BRACES T_STRING_VARNAME TOBRA expr . TCBRA TCBRACE [ T_VARIABLE T_END_HEREDOC T_ENCAPSED_AND_WHITESPACE T_DOLLAR_OPEN_CURLY_BRACES T_CURLY_OPEN TGUIL TBACKQUOTE ]
expr -> expr . T_INC [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCBRA TAND ]
expr -> expr . T_DEC [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCBRA TAND ]
expr -> expr . T_BOOLEAN_OR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCBRA TAND ]
expr -> expr . T_BOOLEAN_AND expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCBRA TAND ]
expr -> expr . T_LOGICAL_OR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCBRA TAND ]
expr -> expr . T_LOGICAL_AND expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCBRA TAND ]
expr -> expr . T_LOGICAL_XOR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCBRA TAND ]
expr -> expr . TPLUS expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCBRA TAND ]
expr -> expr . TMINUS expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCBRA TAND ]
expr -> expr . TMUL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCBRA TAND ]
expr -> expr . TDIV expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCBRA TAND ]
expr -> expr . TMOD expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCBRA TAND ]
expr -> expr . TPOW expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCBRA TAND ]
expr -> expr . TAND expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCBRA TAND ]
expr -> expr . TOR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCBRA TAND ]
expr -> expr . TXOR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCBRA TAND ]
expr -> expr . T_SL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCBRA TAND ]
expr -> expr . T_SR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCBRA TAND ]
expr -> expr . TDOT expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCBRA TAND ]
expr -> expr . T_IS_IDENTICAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCBRA TAND ]
expr -> expr . T_IS_NOT_IDENTICAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCBRA TAND ]
expr -> expr . T_IS_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCBRA TAND ]
expr -> expr . T_IS_NOT_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCBRA TAND ]
expr -> expr . TSMALLER expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCBRA TAND ]
expr -> expr . T_IS_SMALLER_OR_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCBRA TAND ]
expr -> expr . TGREATER expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCBRA TAND ]
expr -> expr . T_IS_GREATER_OR_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCBRA TAND ]
expr -> expr . T_ROCKET expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCBRA TAND ]
expr -> expr . TQUESTION expr TCOLON expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCBRA TAND ]
expr -> expr . TQUESTION TCOLON expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCBRA TAND ]
expr -> expr . TQUESTION TQUESTION expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCBRA TAND ]
expr -> expr . T_INSTANCEOF expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCBRA TAND ]
## Transitions:
-- On T_SR shift to state 233
-- On T_SL shift to state 244
-- On T_ROCKET shift to state 260
-- On T_LOGICAL_XOR shift to state 270
-- On T_LOGICAL_OR shift to state 298
-- On T_LOGICAL_AND shift to state 272
-- On T_IS_SMALLER_OR_EQUAL shift to state 262
-- On T_IS_NOT_IDENTICAL shift to state 274
-- On T_IS_NOT_EQUAL shift to state 276
-- On T_IS_IDENTICAL shift to state 278
-- On T_IS_GREATER_OR_EQUAL shift to state 264
-- On T_IS_EQUAL shift to state 280
-- On T_INSTANCEOF shift to state 235
-- On T_INC shift to state 237
-- On T_DEC shift to state 238
-- On T_BOOLEAN_OR shift to state 282
-- On T_BOOLEAN_AND shift to state 284
-- On TXOR shift to state 286
-- On TSMALLER shift to state 266
-- On TQUESTION shift to state 292
-- On TPOW shift to state 246
-- On TPLUS shift to state 248
-- On TOR shift to state 290
-- On TMUL shift to state 250
-- On TMOD shift to state 252
-- On TMINUS shift to state 256
-- On TGREATER shift to state 268
-- On TDOT shift to state 258
-- On TDIV shift to state 254
-- On TCBRA shift to state 977
-- On TAND shift to state 288
## Reductions:

State 977:
## Known stack suffix:
## T_DOLLAR_OPEN_CURLY_BRACES T_STRING_VARNAME TOBRA expr TCBRA
## LR(1) items:
encaps -> T_DOLLAR_OPEN_CURLY_BRACES T_STRING_VARNAME TOBRA expr TCBRA . TCBRACE [ T_VARIABLE T_END_HEREDOC T_ENCAPSED_AND_WHITESPACE T_DOLLAR_OPEN_CURLY_BRACES T_CURLY_OPEN TGUIL TBACKQUOTE ]
## Transitions:
-- On TCBRACE shift to state 978
## Reductions:

State 978:
## Known stack suffix:
## T_DOLLAR_OPEN_CURLY_BRACES T_STRING_VARNAME TOBRA expr TCBRA TCBRACE
## LR(1) items:
encaps -> T_DOLLAR_OPEN_CURLY_BRACES T_STRING_VARNAME TOBRA expr TCBRA TCBRACE . [ T_VARIABLE T_END_HEREDOC T_ENCAPSED_AND_WHITESPACE T_DOLLAR_OPEN_CURLY_BRACES T_CURLY_OPEN TGUIL TBACKQUOTE ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production encaps -> T_DOLLAR_OPEN_CURLY_BRACES T_STRING_VARNAME TOBRA expr TCBRA TCBRACE

State 979:
## Known stack suffix:
## T_DOLLAR_OPEN_CURLY_BRACES T_STRING_VARNAME TCBRACE
## LR(1) items:
encaps -> T_DOLLAR_OPEN_CURLY_BRACES T_STRING_VARNAME TCBRACE . [ T_VARIABLE T_END_HEREDOC T_ENCAPSED_AND_WHITESPACE T_DOLLAR_OPEN_CURLY_BRACES T_CURLY_OPEN TGUIL TBACKQUOTE ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production encaps -> T_DOLLAR_OPEN_CURLY_BRACES T_STRING_VARNAME TCBRACE

State 980:
## Known stack suffix:
## T_DOLLAR_OPEN_CURLY_BRACES expr
## LR(1) items:
encaps -> T_DOLLAR_OPEN_CURLY_BRACES expr . TCBRACE [ T_VARIABLE T_END_HEREDOC T_ENCAPSED_AND_WHITESPACE T_DOLLAR_OPEN_CURLY_BRACES T_CURLY_OPEN TGUIL TBACKQUOTE ]
expr -> expr . T_INC [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCBRACE TAND ]
expr -> expr . T_DEC [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCBRACE TAND ]
expr -> expr . T_BOOLEAN_OR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCBRACE TAND ]
expr -> expr . T_BOOLEAN_AND expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCBRACE TAND ]
expr -> expr . T_LOGICAL_OR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCBRACE TAND ]
expr -> expr . T_LOGICAL_AND expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCBRACE TAND ]
expr -> expr . T_LOGICAL_XOR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCBRACE TAND ]
expr -> expr . TPLUS expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCBRACE TAND ]
expr -> expr . TMINUS expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCBRACE TAND ]
expr -> expr . TMUL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCBRACE TAND ]
expr -> expr . TDIV expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCBRACE TAND ]
expr -> expr . TMOD expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCBRACE TAND ]
expr -> expr . TPOW expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCBRACE TAND ]
expr -> expr . TAND expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCBRACE TAND ]
expr -> expr . TOR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCBRACE TAND ]
expr -> expr . TXOR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCBRACE TAND ]
expr -> expr . T_SL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCBRACE TAND ]
expr -> expr . T_SR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCBRACE TAND ]
expr -> expr . TDOT expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCBRACE TAND ]
expr -> expr . T_IS_IDENTICAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCBRACE TAND ]
expr -> expr . T_IS_NOT_IDENTICAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCBRACE TAND ]
expr -> expr . T_IS_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCBRACE TAND ]
expr -> expr . T_IS_NOT_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCBRACE TAND ]
expr -> expr . TSMALLER expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCBRACE TAND ]
expr -> expr . T_IS_SMALLER_OR_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCBRACE TAND ]
expr -> expr . TGREATER expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCBRACE TAND ]
expr -> expr . T_IS_GREATER_OR_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCBRACE TAND ]
expr -> expr . T_ROCKET expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCBRACE TAND ]
expr -> expr . TQUESTION expr TCOLON expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCBRACE TAND ]
expr -> expr . TQUESTION TCOLON expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCBRACE TAND ]
expr -> expr . TQUESTION TQUESTION expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCBRACE TAND ]
expr -> expr . T_INSTANCEOF expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCBRACE TAND ]
## Transitions:
-- On T_SR shift to state 233
-- On T_SL shift to state 244
-- On T_ROCKET shift to state 260
-- On T_LOGICAL_XOR shift to state 270
-- On T_LOGICAL_OR shift to state 298
-- On T_LOGICAL_AND shift to state 272
-- On T_IS_SMALLER_OR_EQUAL shift to state 262
-- On T_IS_NOT_IDENTICAL shift to state 274
-- On T_IS_NOT_EQUAL shift to state 276
-- On T_IS_IDENTICAL shift to state 278
-- On T_IS_GREATER_OR_EQUAL shift to state 264
-- On T_IS_EQUAL shift to state 280
-- On T_INSTANCEOF shift to state 235
-- On T_INC shift to state 237
-- On T_DEC shift to state 238
-- On T_BOOLEAN_OR shift to state 282
-- On T_BOOLEAN_AND shift to state 284
-- On TXOR shift to state 286
-- On TSMALLER shift to state 266
-- On TQUESTION shift to state 292
-- On TPOW shift to state 246
-- On TPLUS shift to state 248
-- On TOR shift to state 290
-- On TMUL shift to state 250
-- On TMOD shift to state 252
-- On TMINUS shift to state 256
-- On TGREATER shift to state 268
-- On TDOT shift to state 258
-- On TDIV shift to state 254
-- On TCBRACE shift to state 981
-- On TAND shift to state 288
## Reductions:

State 981:
## Known stack suffix:
## T_DOLLAR_OPEN_CURLY_BRACES expr TCBRACE
## LR(1) items:
encaps -> T_DOLLAR_OPEN_CURLY_BRACES expr TCBRACE . [ T_VARIABLE T_END_HEREDOC T_ENCAPSED_AND_WHITESPACE T_DOLLAR_OPEN_CURLY_BRACES T_CURLY_OPEN TGUIL TBACKQUOTE ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production encaps -> T_DOLLAR_OPEN_CURLY_BRACES expr TCBRACE

State 982:
## Known stack suffix:
## T_START_HEREDOC list(encaps)
## LR(1) items:
primary_expr -> T_START_HEREDOC list(encaps) . T_END_HEREDOC [ T_XOR_EQUAL T_SR_EQUAL T_SR T_SL_EQUAL T_SL T_ROCKET T_PLUS_EQUAL T_OR_EQUAL T_OBJECT_OPERATOR T_MUL_EQUAL T_MOD_EQUAL T_MINUS_EQUAL T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DIV_EQUAL T_DEC T_CONCAT_EQUAL T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW T_AND_EQUAL TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TOPAR TOBRACE TOBRA TMUL TMOD TMINUS TGREATER TEQ TDOT TDIV TCPAR TCOMMA TCOLON TCOLCOL TCBRACE TCBRA TAND RDots EOF ]
## Transitions:
-- On T_END_HEREDOC shift to state 983
## Reductions:

State 983:
## Known stack suffix:
## T_START_HEREDOC list(encaps) T_END_HEREDOC
## LR(1) items:
primary_expr -> T_START_HEREDOC list(encaps) T_END_HEREDOC . [ T_XOR_EQUAL T_SR_EQUAL T_SR T_SL_EQUAL T_SL T_ROCKET T_PLUS_EQUAL T_OR_EQUAL T_OBJECT_OPERATOR T_MUL_EQUAL T_MOD_EQUAL T_MINUS_EQUAL T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DIV_EQUAL T_DEC T_CONCAT_EQUAL T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW T_AND_EQUAL TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TOPAR TOBRACE TOBRA TMUL TMOD TMINUS TGREATER TEQ TDOT TDIV TCPAR TCOMMA TCOLON TCOLCOL TCBRACE TCBRA TAND RDots EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production primary_expr -> T_START_HEREDOC list(encaps) T_END_HEREDOC

State 984:
## Known stack suffix:
## static_scalar
## LR(1) items:
attribute_argument -> static_scalar . [ TCPAR TCOMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production attribute_argument -> static_scalar

State 985:
## Known stack suffix:
## ident TOPAR attribute_argument_list
## LR(1) items:
attribute -> ident TOPAR attribute_argument_list . TCPAR [ T_SR TCOMMA ]
attribute_argument_list -> attribute_argument_list . TCOMMA attribute_argument [ TCPAR TCOMMA ]
## Transitions:
-- On TCPAR shift to state 986
-- On TCOMMA shift to state 987
## Reductions:

State 986:
## Known stack suffix:
## ident TOPAR attribute_argument_list TCPAR
## LR(1) items:
attribute -> ident TOPAR attribute_argument_list TCPAR . [ T_SR TCOMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production attribute -> ident TOPAR attribute_argument_list TCPAR

State 987:
## Known stack suffix:
## attribute_argument_list TCOMMA
## LR(1) items:
attribute_argument_list -> attribute_argument_list TCOMMA . attribute_argument [ TCPAR TCOMMA ]
## Transitions:
-- On T__AT shift to state 1
-- On T_YIELD shift to state 2
-- On T_VARIABLE shift to state 3
-- On T_UNSET_CAST shift to state 5
-- On T_TYPE shift to state 6
-- On T_TRAIT_C shift to state 7
-- On T_SUPER shift to state 8
-- On T_STRING_CAST shift to state 9
-- On T_STATIC shift to state 10
-- On T_START_HEREDOC shift to state 25
-- On T_SELF shift to state 40
-- On T_REQUIRE_ONCE shift to state 41
-- On T_REQUIRE shift to state 42
-- On T_PRINT shift to state 43
-- On T_PARENT shift to state 44
-- On T_OBJECT_CAST shift to state 45
-- On T_NEW shift to state 46
-- On T_NAMESPACE_C shift to state 49
-- On T_NAMESPACE shift to state 50
-- On T_METHOD_C shift to state 58
-- On T_METAVAR shift to state 17
-- On T_LNUMBER shift to state 59
-- On T_LIST shift to state 69
-- On T_LINE shift to state 60
-- On T_LAMBDA_OPAR shift to state 73
-- On T_ISSET shift to state 133
-- On T_INT_CAST shift to state 135
-- On T_INSTANCEOF shift to state 52
-- On T_INCLUDE_ONCE shift to state 136
-- On T_INCLUDE shift to state 137
-- On T_INC shift to state 138
-- On T_IDENT shift to state 18
-- On T_FUNC_C shift to state 61
-- On T_FUNCTION shift to state 139
-- On T_FILE shift to state 62
-- On T_EXIT shift to state 160
-- On T_EVAL shift to state 162
-- On T_ENUM shift to state 19
-- On T_EMPTY shift to state 164
-- On T_DOUBLE_CAST shift to state 168
-- On T_DNUMBER shift to state 63
-- On T_DIR shift to state 64
-- On T_DEC shift to state 169
-- On T_CONSTANT_ENCAPSED_STRING shift to state 65
-- On T_CLONE shift to state 170
-- On T_CLASS_C shift to state 66
-- On T_BOOL_CAST shift to state 171
-- On T_AWAIT shift to state 172
-- On T_ASYNC shift to state 173
-- On T_ARRAY_CAST shift to state 200
-- On T_ARRAY shift to state 201
-- On TTILDE shift to state 204
-- On TPLUS shift to state 205
-- On TOPAR shift to state 206
-- On TOBRA shift to state 209
-- On TMINUS shift to state 210
-- On TGUIL shift to state 211
-- On TDOLLARDOLLAR shift to state 213
-- On TDOLLAR shift to state 214
-- On TBANG shift to state 216
-- On TBACKQUOTE shift to state 217
-- On TANTISLASH shift to state 85
-- On LDots shift to state 222
-- On static_scalar shift to state 984
-- On simple_expr shift to state 223
-- On qualified_name shift to state 94
-- On qualified_class_name shift to state 225
-- On primary_expr shift to state 226
-- On new_expr shift to state 227
-- On namespace_name shift to state 102
-- On member_expr shift to state 228
-- On lambda_expr shift to state 231
-- On ident_in_name shift to state 57
-- On ident shift to state 56
-- On expr shift to state 465
-- On constant shift to state 239
-- On call_expr shift to state 240
-- On attribute_argument shift to state 988
## Reductions:

State 988:
## Known stack suffix:
## attribute_argument_list TCOMMA attribute_argument
## LR(1) items:
attribute_argument_list -> attribute_argument_list TCOMMA attribute_argument . [ TCPAR TCOMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production attribute_argument_list -> attribute_argument_list TCOMMA attribute_argument

State 989:
## Known stack suffix:
## attribute_argument
## LR(1) items:
attribute_argument_list -> attribute_argument . [ TCPAR TCOMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production attribute_argument_list -> attribute_argument

State 990:
## Known stack suffix:
## list_sep(attribute,TCOMMA) TCOMMA attribute
## LR(1) items:
list_sep(attribute,TCOMMA) -> list_sep(attribute,TCOMMA) TCOMMA attribute . [ T_SR TCOMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production list_sep(attribute,TCOMMA) -> list_sep(attribute,TCOMMA) TCOMMA attribute

State 991:
## Known stack suffix:
## attribute
## LR(1) items:
list_sep(attribute,TCOMMA) -> attribute . [ T_SR TCOMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production list_sep(attribute,TCOMMA) -> attribute

State 992:
## Known stack suffix:
## T_STATIC T_FUNCTION is_reference TOPAR parameter_list
## LR(1) items:
expr -> T_STATIC T_FUNCTION is_reference TOPAR parameter_list . TCPAR lexical_vars option(return_type) TOBRACE list(inner_statement) TCBRACE [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
## Transitions:
-- On TCPAR shift to state 993
## Reductions:

State 993:
## Known stack suffix:
## T_STATIC T_FUNCTION is_reference TOPAR parameter_list TCPAR
## LR(1) items:
expr -> T_STATIC T_FUNCTION is_reference TOPAR parameter_list TCPAR . lexical_vars option(return_type) TOBRACE list(inner_statement) TCBRACE [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
## Transitions:
-- On T_USE shift to state 144
-- On lexical_vars shift to state 994
## Reductions:
-- On TOBRACE TCOLON
--   reduce production lexical_vars ->

State 994:
## Known stack suffix:
## T_STATIC T_FUNCTION is_reference TOPAR parameter_list TCPAR lexical_vars
## LR(1) items:
expr -> T_STATIC T_FUNCTION is_reference TOPAR parameter_list TCPAR lexical_vars . option(return_type) TOBRACE list(inner_statement) TCBRACE [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
## Transitions:
-- On TCOLON shift to state 76
-- On return_type shift to state 119
-- On option(return_type) shift to state 995
## Reductions:
-- On TOBRACE
--   reduce production option(return_type) ->

State 995:
## Known stack suffix:
## T_STATIC T_FUNCTION is_reference TOPAR parameter_list TCPAR lexical_vars option(return_type)
## LR(1) items:
expr -> T_STATIC T_FUNCTION is_reference TOPAR parameter_list TCPAR lexical_vars option(return_type) . TOBRACE list(inner_statement) TCBRACE [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
## Transitions:
-- On TOBRACE shift to state 996
## Reductions:

State 996:
## Known stack suffix:
## T_STATIC T_FUNCTION is_reference TOPAR parameter_list TCPAR lexical_vars option(return_type) TOBRACE
## LR(1) items:
expr -> T_STATIC T_FUNCTION is_reference TOPAR parameter_list TCPAR lexical_vars option(return_type) TOBRACE . list(inner_statement) TCBRACE [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
## Transitions:
-- On T__AT shift to state 1
-- On T_YIELD shift to state 2
-- On T_WHILE shift to state 158
-- On T_VARIABLE shift to state 3
-- On T_USE shift to state 190
-- On T_UNSET_CAST shift to state 5
-- On T_UNSET shift to state 197
-- On T_TYPE shift to state 6
-- On T_TRY shift to state 391
-- On T_TRAIT_C shift to state 7
-- On T_TRAIT shift to state 393
-- On T_THROW shift to state 520
-- On T_SWITCH shift to state 525
-- On T_SUPER shift to state 8
-- On T_STRING_CAST shift to state 9
-- On T_STATIC shift to state 536
-- On T_START_HEREDOC shift to state 25
-- On T_SL shift to state 16
-- On T_SELF shift to state 40
-- On T_RETURN shift to state 553
-- On T_REQUIRE_ONCE shift to state 41
-- On T_REQUIRE shift to state 42
-- On T_PRINT shift to state 43
-- On T_PARENT shift to state 44
-- On T_OPEN_TAG_WITH_ECHO shift to state 558
-- On T_OBJECT_CAST shift to state 45
-- On T_NEW shift to state 46
-- On T_NAMESPACE_C shift to state 49
-- On T_NAMESPACE shift to state 50
-- On T_METHOD_C shift to state 58
-- On T_METAVAR shift to state 17
-- On T_LNUMBER shift to state 59
-- On T_LIST shift to state 69
-- On T_LINE shift to state 60
-- On T_LAMBDA_OPAR shift to state 73
-- On T_ISSET shift to state 133
-- On T_INT_CAST shift to state 135
-- On T_INTERFACE shift to state 563
-- On T_INSTANCEOF shift to state 52
-- On T_INLINE_HTML shift to state 576
-- On T_INCLUDE_ONCE shift to state 136
-- On T_INCLUDE shift to state 137
-- On T_INC shift to state 138
-- On T_IF shift to state 577
-- On T_IDENT shift to state 18
-- On T_GLOBAL shift to state 587
-- On T_FUNC_C shift to state 61
-- On T_FUNCTION shift to state 657
-- On T_FOREACH shift to state 600
-- On T_FOR shift to state 624
-- On T_FINAL shift to state 666
-- On T_FILE shift to state 62
-- On T_EXIT shift to state 160
-- On T_EVAL shift to state 162
-- On T_ENUM shift to state 668
-- On T_EMPTY shift to state 164
-- On T_ELLIPSIS shift to state 635
-- On T_ECHO shift to state 636
-- On T_DOUBLE_CAST shift to state 168
-- On T_DO shift to state 644
-- On T_DNUMBER shift to state 63
-- On T_DIR shift to state 64
-- On T_DECLARE shift to state 645
-- On T_DEC shift to state 169
-- On T_CONTINUE shift to state 649
-- On T_CONSTANT_ENCAPSED_STRING shift to state 65
-- On T_CLONE shift to state 170
-- On T_CLASS_C shift to state 66
-- On T_CLASS shift to state 682
-- On T_BREAK shift to state 652
-- On T_BOOL_CAST shift to state 171
-- On T_AWAIT shift to state 172
-- On T_ASYNC shift to state 683
-- On T_ARRAY_CAST shift to state 200
-- On T_ARRAY shift to state 201
-- On T_ABSTRACT shift to state 694
-- On TTILDE shift to state 204
-- On TSEMICOLON shift to state 655
-- On TPLUS shift to state 205
-- On TOPAR shift to state 206
-- On TOBRACE shift to state 656
-- On TOBRA shift to state 209
-- On TMINUS shift to state 210
-- On TGUIL shift to state 211
-- On TDOLLARDOLLAR shift to state 213
-- On TDOLLAR shift to state 214
-- On TBANG shift to state 216
-- On TBACKQUOTE shift to state 217
-- On TANTISLASH shift to state 85
-- On LDots shift to state 222
-- On unticked_function_declaration shift to state 696
-- On unticked_class_declaration shift to state 697
-- On statement shift to state 698
-- On simple_expr shift to state 223
-- On qualified_name shift to state 94
-- On qualified_class_name shift to state 225
-- On primary_expr shift to state 226
-- On new_expr shift to state 227
-- On namespace_name shift to state 102
-- On member_expr shift to state 228
-- On list(inner_statement) shift to state 997
-- On lambda_expr shift to state 231
-- On inner_statement shift to state 701
-- On ident_in_name shift to state 57
-- On ident shift to state 56
-- On function_declaration shift to state 703
-- On expr shift to state 704
-- On constant shift to state 239
-- On class_entry_type shift to state 706
-- On class_declaration shift to state 716
-- On call_expr shift to state 240
-- On attributes shift to state 717
## Reductions:
-- On TCBRACE
--   reduce production list(inner_statement) ->

State 997:
## Known stack suffix:
## T_STATIC T_FUNCTION is_reference TOPAR parameter_list TCPAR lexical_vars option(return_type) TOBRACE list(inner_statement)
## LR(1) items:
expr -> T_STATIC T_FUNCTION is_reference TOPAR parameter_list TCPAR lexical_vars option(return_type) TOBRACE list(inner_statement) . TCBRACE [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
## Transitions:
-- On TCBRACE shift to state 998
## Reductions:

State 998:
## Known stack suffix:
## T_STATIC T_FUNCTION is_reference TOPAR parameter_list TCPAR lexical_vars option(return_type) TOBRACE list(inner_statement) TCBRACE
## LR(1) items:
expr -> T_STATIC T_FUNCTION is_reference TOPAR parameter_list TCPAR lexical_vars option(return_type) TOBRACE list(inner_statement) TCBRACE . [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production expr -> T_STATIC T_FUNCTION is_reference TOPAR parameter_list TCPAR lexical_vars option(return_type) TOBRACE list(inner_statement) TCBRACE

State 999:
## Known stack suffix:
## T_STRING_CAST expr
## LR(1) items:
expr -> expr . T_INC [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_DEC [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_BOOLEAN_OR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_BOOLEAN_AND expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_LOGICAL_OR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_LOGICAL_AND expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_LOGICAL_XOR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TPLUS expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TMINUS expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TMUL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TDIV expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TMOD expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TPOW expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TAND expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TOR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TXOR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_SL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_SR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TDOT expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_IDENTICAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_NOT_IDENTICAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_NOT_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TSMALLER expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_SMALLER_OR_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TGREATER expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_GREATER_OR_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_ROCKET expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TQUESTION expr TCOLON expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TQUESTION TCOLON expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TQUESTION TQUESTION expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_INSTANCEOF expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> T_STRING_CAST expr . [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
## Transitions:
-- On T_INC shift to state 237
-- On T_DEC shift to state 238
## Reductions:
-- On T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF
--   reduce production expr -> T_STRING_CAST expr

State 1000:
## Known stack suffix:
## T_UNSET_CAST expr
## LR(1) items:
expr -> expr . T_INC [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_DEC [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_BOOLEAN_OR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_BOOLEAN_AND expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_LOGICAL_OR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_LOGICAL_AND expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_LOGICAL_XOR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TPLUS expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TMINUS expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TMUL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TDIV expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TMOD expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TPOW expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TAND expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TOR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TXOR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_SL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_SR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TDOT expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_IDENTICAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_NOT_IDENTICAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_NOT_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TSMALLER expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_SMALLER_OR_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TGREATER expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_GREATER_OR_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_ROCKET expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TQUESTION expr TCOLON expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TQUESTION TCOLON expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TQUESTION TQUESTION expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_INSTANCEOF expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> T_UNSET_CAST expr . [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
## Transitions:
-- On T_INC shift to state 237
-- On T_DEC shift to state 238
## Reductions:
-- On T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF
--   reduce production expr -> T_UNSET_CAST expr

State 1001:
## Known stack suffix:
## T_DOUBLE_ARROW TOBRACE
## LR(1) items:
lambda_body -> T_DOUBLE_ARROW TOBRACE . list(inner_statement) TCBRACE [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
## Transitions:
-- On T__AT shift to state 1
-- On T_YIELD shift to state 2
-- On T_WHILE shift to state 158
-- On T_VARIABLE shift to state 3
-- On T_USE shift to state 190
-- On T_UNSET_CAST shift to state 5
-- On T_UNSET shift to state 197
-- On T_TYPE shift to state 6
-- On T_TRY shift to state 391
-- On T_TRAIT_C shift to state 7
-- On T_TRAIT shift to state 393
-- On T_THROW shift to state 520
-- On T_SWITCH shift to state 525
-- On T_SUPER shift to state 8
-- On T_STRING_CAST shift to state 9
-- On T_STATIC shift to state 536
-- On T_START_HEREDOC shift to state 25
-- On T_SL shift to state 16
-- On T_SELF shift to state 40
-- On T_RETURN shift to state 553
-- On T_REQUIRE_ONCE shift to state 41
-- On T_REQUIRE shift to state 42
-- On T_PRINT shift to state 43
-- On T_PARENT shift to state 44
-- On T_OPEN_TAG_WITH_ECHO shift to state 558
-- On T_OBJECT_CAST shift to state 45
-- On T_NEW shift to state 46
-- On T_NAMESPACE_C shift to state 49
-- On T_NAMESPACE shift to state 50
-- On T_METHOD_C shift to state 58
-- On T_METAVAR shift to state 17
-- On T_LNUMBER shift to state 59
-- On T_LIST shift to state 69
-- On T_LINE shift to state 60
-- On T_LAMBDA_OPAR shift to state 73
-- On T_ISSET shift to state 133
-- On T_INT_CAST shift to state 135
-- On T_INTERFACE shift to state 563
-- On T_INSTANCEOF shift to state 52
-- On T_INLINE_HTML shift to state 576
-- On T_INCLUDE_ONCE shift to state 136
-- On T_INCLUDE shift to state 137
-- On T_INC shift to state 138
-- On T_IF shift to state 577
-- On T_IDENT shift to state 18
-- On T_GLOBAL shift to state 587
-- On T_FUNC_C shift to state 61
-- On T_FUNCTION shift to state 657
-- On T_FOREACH shift to state 600
-- On T_FOR shift to state 624
-- On T_FINAL shift to state 666
-- On T_FILE shift to state 62
-- On T_EXIT shift to state 160
-- On T_EVAL shift to state 162
-- On T_ENUM shift to state 668
-- On T_EMPTY shift to state 164
-- On T_ELLIPSIS shift to state 635
-- On T_ECHO shift to state 636
-- On T_DOUBLE_CAST shift to state 168
-- On T_DO shift to state 644
-- On T_DNUMBER shift to state 63
-- On T_DIR shift to state 64
-- On T_DECLARE shift to state 645
-- On T_DEC shift to state 169
-- On T_CONTINUE shift to state 649
-- On T_CONSTANT_ENCAPSED_STRING shift to state 65
-- On T_CLONE shift to state 170
-- On T_CLASS_C shift to state 66
-- On T_CLASS shift to state 682
-- On T_BREAK shift to state 652
-- On T_BOOL_CAST shift to state 171
-- On T_AWAIT shift to state 172
-- On T_ASYNC shift to state 683
-- On T_ARRAY_CAST shift to state 200
-- On T_ARRAY shift to state 201
-- On T_ABSTRACT shift to state 694
-- On TTILDE shift to state 204
-- On TSEMICOLON shift to state 655
-- On TPLUS shift to state 205
-- On TOPAR shift to state 206
-- On TOBRACE shift to state 656
-- On TOBRA shift to state 209
-- On TMINUS shift to state 210
-- On TGUIL shift to state 211
-- On TDOLLARDOLLAR shift to state 213
-- On TDOLLAR shift to state 214
-- On TBANG shift to state 216
-- On TBACKQUOTE shift to state 217
-- On TANTISLASH shift to state 85
-- On LDots shift to state 222
-- On unticked_function_declaration shift to state 696
-- On unticked_class_declaration shift to state 697
-- On statement shift to state 698
-- On simple_expr shift to state 223
-- On qualified_name shift to state 94
-- On qualified_class_name shift to state 225
-- On primary_expr shift to state 226
-- On new_expr shift to state 227
-- On namespace_name shift to state 102
-- On member_expr shift to state 228
-- On list(inner_statement) shift to state 1002
-- On lambda_expr shift to state 231
-- On inner_statement shift to state 701
-- On ident_in_name shift to state 57
-- On ident shift to state 56
-- On function_declaration shift to state 703
-- On expr shift to state 704
-- On constant shift to state 239
-- On class_entry_type shift to state 706
-- On class_declaration shift to state 716
-- On call_expr shift to state 240
-- On attributes shift to state 717
## Reductions:
-- On TCBRACE
--   reduce production list(inner_statement) ->

State 1002:
## Known stack suffix:
## T_DOUBLE_ARROW TOBRACE list(inner_statement)
## LR(1) items:
lambda_body -> T_DOUBLE_ARROW TOBRACE list(inner_statement) . TCBRACE [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
## Transitions:
-- On TCBRACE shift to state 1003
## Reductions:

State 1003:
## Known stack suffix:
## T_DOUBLE_ARROW TOBRACE list(inner_statement) TCBRACE
## LR(1) items:
lambda_body -> T_DOUBLE_ARROW TOBRACE list(inner_statement) TCBRACE . [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production lambda_body -> T_DOUBLE_ARROW TOBRACE list(inner_statement) TCBRACE

State 1004:
## Known stack suffix:
## T_DOUBLE_ARROW expr
## LR(1) items:
expr -> expr . T_INC [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_DEC [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_BOOLEAN_OR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_BOOLEAN_AND expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_LOGICAL_OR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_LOGICAL_AND expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_LOGICAL_XOR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TPLUS expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TMINUS expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TMUL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TDIV expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TMOD expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TPOW expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TAND expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TOR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TXOR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_SL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_SR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TDOT expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_IDENTICAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_NOT_IDENTICAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_NOT_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TSMALLER expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_SMALLER_OR_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TGREATER expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_GREATER_OR_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_ROCKET expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TQUESTION expr TCOLON expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TQUESTION TCOLON expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TQUESTION TQUESTION expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_INSTANCEOF expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
lambda_body -> T_DOUBLE_ARROW expr . [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
## Transitions:
-- On T_SR shift to state 233
-- On T_SL shift to state 244
-- On T_ROCKET shift to state 260
-- On T_LOGICAL_XOR shift to state 270
-- On T_LOGICAL_OR shift to state 298
-- On T_LOGICAL_AND shift to state 272
-- On T_IS_SMALLER_OR_EQUAL shift to state 262
-- On T_IS_NOT_IDENTICAL shift to state 274
-- On T_IS_NOT_EQUAL shift to state 276
-- On T_IS_IDENTICAL shift to state 278
-- On T_IS_GREATER_OR_EQUAL shift to state 264
-- On T_IS_EQUAL shift to state 280
-- On T_INSTANCEOF shift to state 235
-- On T_INC shift to state 237
-- On T_DEC shift to state 238
-- On T_BOOLEAN_OR shift to state 282
-- On T_BOOLEAN_AND shift to state 284
-- On TXOR shift to state 286
-- On TSMALLER shift to state 266
-- On TQUESTION shift to state 292
-- On TPOW shift to state 246
-- On TPLUS shift to state 248
-- On TOR shift to state 290
-- On TMUL shift to state 250
-- On TMOD shift to state 252
-- On TMINUS shift to state 256
-- On TGREATER shift to state 268
-- On TDOT shift to state 258
-- On TDIV shift to state 254
-- On TAND shift to state 288
## Reductions:
-- On T_LAMBDA_CPAR T_CLOSE_TAG_OF_ECHO T_AWAIT T_AS T_ARROW TSEMICOLON TCPAR TCOMMA TCOLON TCBRACE TCBRA RDots EOF
--   reduce production lambda_body -> T_DOUBLE_ARROW expr

State 1005:
## Known stack suffix:
## T_VARIABLE lambda_body
## LR(1) items:
lambda_expr -> T_VARIABLE lambda_body . [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production lambda_expr -> T_VARIABLE lambda_body

State 1006:
## Known stack suffix:
## T_YIELD T_FROM
## LR(1) items:
expr -> T_YIELD T_FROM . expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
## Transitions:
-- On T__AT shift to state 1
-- On T_YIELD shift to state 2
-- On T_VARIABLE shift to state 3
-- On T_UNSET_CAST shift to state 5
-- On T_TYPE shift to state 6
-- On T_TRAIT_C shift to state 7
-- On T_SUPER shift to state 8
-- On T_STRING_CAST shift to state 9
-- On T_STATIC shift to state 10
-- On T_START_HEREDOC shift to state 25
-- On T_SELF shift to state 40
-- On T_REQUIRE_ONCE shift to state 41
-- On T_REQUIRE shift to state 42
-- On T_PRINT shift to state 43
-- On T_PARENT shift to state 44
-- On T_OBJECT_CAST shift to state 45
-- On T_NEW shift to state 46
-- On T_NAMESPACE_C shift to state 49
-- On T_NAMESPACE shift to state 50
-- On T_METHOD_C shift to state 58
-- On T_METAVAR shift to state 17
-- On T_LNUMBER shift to state 59
-- On T_LIST shift to state 69
-- On T_LINE shift to state 60
-- On T_LAMBDA_OPAR shift to state 73
-- On T_ISSET shift to state 133
-- On T_INT_CAST shift to state 135
-- On T_INSTANCEOF shift to state 52
-- On T_INCLUDE_ONCE shift to state 136
-- On T_INCLUDE shift to state 137
-- On T_INC shift to state 138
-- On T_IDENT shift to state 18
-- On T_FUNC_C shift to state 61
-- On T_FUNCTION shift to state 139
-- On T_FILE shift to state 62
-- On T_EXIT shift to state 160
-- On T_EVAL shift to state 162
-- On T_ENUM shift to state 19
-- On T_EMPTY shift to state 164
-- On T_DOUBLE_CAST shift to state 168
-- On T_DNUMBER shift to state 63
-- On T_DIR shift to state 64
-- On T_DEC shift to state 169
-- On T_CONSTANT_ENCAPSED_STRING shift to state 65
-- On T_CLONE shift to state 170
-- On T_CLASS_C shift to state 66
-- On T_BOOL_CAST shift to state 171
-- On T_AWAIT shift to state 172
-- On T_ASYNC shift to state 173
-- On T_ARRAY_CAST shift to state 200
-- On T_ARRAY shift to state 201
-- On TTILDE shift to state 204
-- On TPLUS shift to state 205
-- On TOPAR shift to state 206
-- On TOBRA shift to state 209
-- On TMINUS shift to state 210
-- On TGUIL shift to state 211
-- On TDOLLARDOLLAR shift to state 213
-- On TDOLLAR shift to state 214
-- On TBANG shift to state 216
-- On TBACKQUOTE shift to state 217
-- On TANTISLASH shift to state 85
-- On LDots shift to state 222
-- On simple_expr shift to state 223
-- On qualified_name shift to state 94
-- On qualified_class_name shift to state 225
-- On primary_expr shift to state 226
-- On new_expr shift to state 227
-- On namespace_name shift to state 102
-- On member_expr shift to state 228
-- On lambda_expr shift to state 231
-- On ident_in_name shift to state 57
-- On ident shift to state 56
-- On expr shift to state 1007
-- On constant shift to state 239
-- On call_expr shift to state 240
## Reductions:

State 1007:
## Known stack suffix:
## T_YIELD T_FROM expr
## LR(1) items:
expr -> expr . T_INC [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_DEC [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_BOOLEAN_OR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_BOOLEAN_AND expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_LOGICAL_OR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_LOGICAL_AND expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_LOGICAL_XOR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TPLUS expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TMINUS expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TMUL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TDIV expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TMOD expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TPOW expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TAND expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TOR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TXOR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_SL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_SR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TDOT expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_IDENTICAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_NOT_IDENTICAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_NOT_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TSMALLER expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_SMALLER_OR_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TGREATER expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_GREATER_OR_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_ROCKET expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TQUESTION expr TCOLON expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TQUESTION TCOLON expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TQUESTION TQUESTION expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_INSTANCEOF expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> T_YIELD T_FROM expr . [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
## Transitions:
-- On T_SR shift to state 233
-- On T_SL shift to state 244
-- On T_ROCKET shift to state 260
-- On T_LOGICAL_XOR shift to state 270
-- On T_LOGICAL_OR shift to state 298
-- On T_LOGICAL_AND shift to state 272
-- On T_IS_SMALLER_OR_EQUAL shift to state 262
-- On T_IS_NOT_IDENTICAL shift to state 274
-- On T_IS_NOT_EQUAL shift to state 276
-- On T_IS_IDENTICAL shift to state 278
-- On T_IS_GREATER_OR_EQUAL shift to state 264
-- On T_IS_EQUAL shift to state 280
-- On T_INSTANCEOF shift to state 235
-- On T_INC shift to state 237
-- On T_DEC shift to state 238
-- On T_BOOLEAN_OR shift to state 282
-- On T_BOOLEAN_AND shift to state 284
-- On TXOR shift to state 286
-- On TSMALLER shift to state 266
-- On TQUESTION shift to state 292
-- On TPOW shift to state 246
-- On TPLUS shift to state 248
-- On TOR shift to state 290
-- On TMUL shift to state 250
-- On TMOD shift to state 252
-- On TMINUS shift to state 256
-- On TGREATER shift to state 268
-- On TDOT shift to state 258
-- On TDIV shift to state 254
-- On TAND shift to state 288
## Reductions:
-- On T_LAMBDA_CPAR T_CLOSE_TAG_OF_ECHO T_AWAIT T_AS T_ARROW TSEMICOLON TCPAR TCOMMA TCOLON TCBRACE TCBRA RDots EOF
--   reduce production expr -> T_YIELD T_FROM expr

State 1008:
## Known stack suffix:
## T_YIELD T_BREAK
## LR(1) items:
expr -> T_YIELD T_BREAK . [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production expr -> T_YIELD T_BREAK

State 1009:
## Known stack suffix:
## T_YIELD expr
## LR(1) items:
expr -> expr . T_INC [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_DEC [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_BOOLEAN_OR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_BOOLEAN_AND expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_LOGICAL_OR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_LOGICAL_AND expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_LOGICAL_XOR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TPLUS expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TMINUS expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TMUL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TDIV expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TMOD expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TPOW expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TAND expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TOR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TXOR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_SL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_SR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TDOT expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_IDENTICAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_NOT_IDENTICAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_NOT_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TSMALLER expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_SMALLER_OR_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TGREATER expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_GREATER_OR_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_ROCKET expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TQUESTION expr TCOLON expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TQUESTION TCOLON expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TQUESTION TQUESTION expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_INSTANCEOF expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> T_YIELD expr . [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> T_YIELD expr . T_ARROW expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
## Transitions:
-- On T_SR shift to state 233
-- On T_SL shift to state 244
-- On T_ROCKET shift to state 260
-- On T_LOGICAL_XOR shift to state 270
-- On T_LOGICAL_OR shift to state 298
-- On T_LOGICAL_AND shift to state 272
-- On T_IS_SMALLER_OR_EQUAL shift to state 262
-- On T_IS_NOT_IDENTICAL shift to state 274
-- On T_IS_NOT_EQUAL shift to state 276
-- On T_IS_IDENTICAL shift to state 278
-- On T_IS_GREATER_OR_EQUAL shift to state 264
-- On T_IS_EQUAL shift to state 280
-- On T_INSTANCEOF shift to state 235
-- On T_INC shift to state 237
-- On T_DEC shift to state 238
-- On T_BOOLEAN_OR shift to state 282
-- On T_BOOLEAN_AND shift to state 284
-- On T_ARROW shift to state 1010
-- On TXOR shift to state 286
-- On TSMALLER shift to state 266
-- On TQUESTION shift to state 292
-- On TPOW shift to state 246
-- On TPLUS shift to state 248
-- On TOR shift to state 290
-- On TMUL shift to state 250
-- On TMOD shift to state 252
-- On TMINUS shift to state 256
-- On TGREATER shift to state 268
-- On TDOT shift to state 258
-- On TDIV shift to state 254
-- On TAND shift to state 288
## Reductions:
-- On T_LAMBDA_CPAR T_CLOSE_TAG_OF_ECHO T_AWAIT T_AS TSEMICOLON TCPAR TCOMMA TCOLON TCBRACE TCBRA RDots EOF
--   reduce production expr -> T_YIELD expr

State 1010:
## Known stack suffix:
## T_YIELD expr T_ARROW
## LR(1) items:
expr -> T_YIELD expr T_ARROW . expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
## Transitions:
-- On T__AT shift to state 1
-- On T_YIELD shift to state 2
-- On T_VARIABLE shift to state 3
-- On T_UNSET_CAST shift to state 5
-- On T_TYPE shift to state 6
-- On T_TRAIT_C shift to state 7
-- On T_SUPER shift to state 8
-- On T_STRING_CAST shift to state 9
-- On T_STATIC shift to state 10
-- On T_START_HEREDOC shift to state 25
-- On T_SELF shift to state 40
-- On T_REQUIRE_ONCE shift to state 41
-- On T_REQUIRE shift to state 42
-- On T_PRINT shift to state 43
-- On T_PARENT shift to state 44
-- On T_OBJECT_CAST shift to state 45
-- On T_NEW shift to state 46
-- On T_NAMESPACE_C shift to state 49
-- On T_NAMESPACE shift to state 50
-- On T_METHOD_C shift to state 58
-- On T_METAVAR shift to state 17
-- On T_LNUMBER shift to state 59
-- On T_LIST shift to state 69
-- On T_LINE shift to state 60
-- On T_LAMBDA_OPAR shift to state 73
-- On T_ISSET shift to state 133
-- On T_INT_CAST shift to state 135
-- On T_INSTANCEOF shift to state 52
-- On T_INCLUDE_ONCE shift to state 136
-- On T_INCLUDE shift to state 137
-- On T_INC shift to state 138
-- On T_IDENT shift to state 18
-- On T_FUNC_C shift to state 61
-- On T_FUNCTION shift to state 139
-- On T_FILE shift to state 62
-- On T_EXIT shift to state 160
-- On T_EVAL shift to state 162
-- On T_ENUM shift to state 19
-- On T_EMPTY shift to state 164
-- On T_DOUBLE_CAST shift to state 168
-- On T_DNUMBER shift to state 63
-- On T_DIR shift to state 64
-- On T_DEC shift to state 169
-- On T_CONSTANT_ENCAPSED_STRING shift to state 65
-- On T_CLONE shift to state 170
-- On T_CLASS_C shift to state 66
-- On T_BOOL_CAST shift to state 171
-- On T_AWAIT shift to state 172
-- On T_ASYNC shift to state 173
-- On T_ARRAY_CAST shift to state 200
-- On T_ARRAY shift to state 201
-- On TTILDE shift to state 204
-- On TPLUS shift to state 205
-- On TOPAR shift to state 206
-- On TOBRA shift to state 209
-- On TMINUS shift to state 210
-- On TGUIL shift to state 211
-- On TDOLLARDOLLAR shift to state 213
-- On TDOLLAR shift to state 214
-- On TBANG shift to state 216
-- On TBACKQUOTE shift to state 217
-- On TANTISLASH shift to state 85
-- On LDots shift to state 222
-- On simple_expr shift to state 223
-- On qualified_name shift to state 94
-- On qualified_class_name shift to state 225
-- On primary_expr shift to state 226
-- On new_expr shift to state 227
-- On namespace_name shift to state 102
-- On member_expr shift to state 228
-- On lambda_expr shift to state 231
-- On ident_in_name shift to state 57
-- On ident shift to state 56
-- On expr shift to state 1011
-- On constant shift to state 239
-- On call_expr shift to state 240
## Reductions:

State 1011:
## Known stack suffix:
## T_YIELD expr T_ARROW expr
## LR(1) items:
expr -> expr . T_INC [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_DEC [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_BOOLEAN_OR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_BOOLEAN_AND expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_LOGICAL_OR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_LOGICAL_AND expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_LOGICAL_XOR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TPLUS expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TMINUS expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TMUL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TDIV expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TMOD expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TPOW expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TAND expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TOR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TXOR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_SL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_SR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TDOT expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_IDENTICAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_NOT_IDENTICAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_NOT_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TSMALLER expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_SMALLER_OR_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TGREATER expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_GREATER_OR_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_ROCKET expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TQUESTION expr TCOLON expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TQUESTION TCOLON expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TQUESTION TQUESTION expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_INSTANCEOF expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> T_YIELD expr T_ARROW expr . [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
## Transitions:
-- On T_SR shift to state 233
-- On T_SL shift to state 244
-- On T_ROCKET shift to state 260
-- On T_LOGICAL_XOR shift to state 270
-- On T_LOGICAL_OR shift to state 298
-- On T_LOGICAL_AND shift to state 272
-- On T_IS_SMALLER_OR_EQUAL shift to state 262
-- On T_IS_NOT_IDENTICAL shift to state 274
-- On T_IS_NOT_EQUAL shift to state 276
-- On T_IS_IDENTICAL shift to state 278
-- On T_IS_GREATER_OR_EQUAL shift to state 264
-- On T_IS_EQUAL shift to state 280
-- On T_INSTANCEOF shift to state 235
-- On T_INC shift to state 237
-- On T_DEC shift to state 238
-- On T_BOOLEAN_OR shift to state 282
-- On T_BOOLEAN_AND shift to state 284
-- On TXOR shift to state 286
-- On TSMALLER shift to state 266
-- On TQUESTION shift to state 292
-- On TPOW shift to state 246
-- On TPLUS shift to state 248
-- On TOR shift to state 290
-- On TMUL shift to state 250
-- On TMOD shift to state 252
-- On TMINUS shift to state 256
-- On TGREATER shift to state 268
-- On TDOT shift to state 258
-- On TDIV shift to state 254
-- On TAND shift to state 288
## Reductions:
-- On T_LAMBDA_CPAR T_CLOSE_TAG_OF_ECHO T_AWAIT T_AS T_ARROW TSEMICOLON TCPAR TCOMMA TCOLON TCBRACE TCBRA RDots EOF
--   reduce production expr -> T_YIELD expr T_ARROW expr

State 1012:
## Known stack suffix:
## T__AT expr
## LR(1) items:
expr -> expr . T_INC [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_DEC [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_BOOLEAN_OR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_BOOLEAN_AND expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_LOGICAL_OR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_LOGICAL_AND expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_LOGICAL_XOR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TPLUS expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TMINUS expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TMUL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TDIV expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TMOD expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TPOW expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TAND expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TOR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TXOR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_SL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_SR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TDOT expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_IDENTICAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_NOT_IDENTICAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_NOT_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TSMALLER expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_SMALLER_OR_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TGREATER expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_IS_GREATER_OR_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_ROCKET expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TQUESTION expr TCOLON expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TQUESTION TCOLON expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . TQUESTION TQUESTION expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> expr . T_INSTANCEOF expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
expr -> T__AT expr . [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_LAMBDA_CPAR T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_CLOSE_TAG_OF_ECHO T_BOOLEAN_OR T_BOOLEAN_AND T_AWAIT T_AS T_ARROW TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TCOMMA TCOLON TCBRACE TCBRA TAND RDots EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production expr -> T__AT expr

State 1013:
## Known stack suffix:
## T_USE
## LR(1) items:
namespace_use_declaration -> T_USE . option(use_keyword) list_sep(namespace_use_clause,TCOMMA) TSEMICOLON [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_EMPTY T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
namespace_use_declaration -> T_USE . option(use_keyword) option(TANTISLASH) namespace_name TANTISLASH TOBRACE list_sep2(namespace_use_group_clause,TCOMMA) TCBRACE TSEMICOLON [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_EMPTY T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
statement -> T_USE . use_filename TSEMICOLON [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_EMPTY T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
## Transitions:
-- On T_FUNCTION shift to state 1014
-- On T_CONSTANT_ENCAPSED_STRING shift to state 191
-- On T_CONST shift to state 1015
-- On TOPAR shift to state 192
-- On use_keyword shift to state 1016
-- On use_filename shift to state 195
-- On option(use_keyword) shift to state 1017
## Reductions:
-- On T_TYPE T_SUPER T_METAVAR T_INSTANCEOF T_IDENT T_ENUM TANTISLASH
--   reduce production option(use_keyword) ->

State 1014:
## Known stack suffix:
## T_FUNCTION
## LR(1) items:
use_keyword -> T_FUNCTION . [ T_TYPE T_SUPER T_METAVAR T_INSTANCEOF T_IDENT T_ENUM TANTISLASH ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production use_keyword -> T_FUNCTION

State 1015:
## Known stack suffix:
## T_CONST
## LR(1) items:
use_keyword -> T_CONST . [ T_TYPE T_SUPER T_METAVAR T_INSTANCEOF T_IDENT T_ENUM TANTISLASH ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production use_keyword -> T_CONST

State 1016:
## Known stack suffix:
## use_keyword
## LR(1) items:
option(use_keyword) -> use_keyword . [ T_TYPE T_SUPER T_METAVAR T_INSTANCEOF T_IDENT T_ENUM TANTISLASH ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production option(use_keyword) -> use_keyword

State 1017:
## Known stack suffix:
## T_USE option(use_keyword)
## LR(1) items:
namespace_use_declaration -> T_USE option(use_keyword) . list_sep(namespace_use_clause,TCOMMA) TSEMICOLON [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_EMPTY T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
namespace_use_declaration -> T_USE option(use_keyword) . option(TANTISLASH) namespace_name TANTISLASH TOBRACE list_sep2(namespace_use_group_clause,TCOMMA) TCBRACE TSEMICOLON [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_EMPTY T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
## Transitions:
-- On TANTISLASH shift to state 1018
-- On option(TANTISLASH) shift to state 1019
-- On namespace_use_clause shift to state 1036
-- On list_sep(namespace_use_clause,TCOMMA) shift to state 1037
## Reductions:
-- On T_TYPE T_SUPER T_METAVAR T_INSTANCEOF T_IDENT T_ENUM
--   reduce production option(TANTISLASH) ->

State 1018:
## Known stack suffix:
## TANTISLASH
## LR(1) items:
option(TANTISLASH) -> TANTISLASH . [ T_TYPE T_SUPER T_METAVAR T_INSTANCEOF T_IDENT T_ENUM ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production option(TANTISLASH) -> TANTISLASH

State 1019:
## Known stack suffix:
## T_USE option(use_keyword) option(TANTISLASH)
## LR(1) items:
namespace_use_clause -> option(TANTISLASH) . namespace_name option(namespace_aliasing_clause) [ TSEMICOLON TCOMMA ]
namespace_use_declaration -> T_USE option(use_keyword) option(TANTISLASH) . namespace_name TANTISLASH TOBRACE list_sep2(namespace_use_group_clause,TCOMMA) TCBRACE TSEMICOLON [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_EMPTY T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
## Transitions:
-- On T_TYPE shift to state 6
-- On T_SUPER shift to state 8
-- On T_METAVAR shift to state 17
-- On T_INSTANCEOF shift to state 52
-- On T_IDENT shift to state 18
-- On T_ENUM shift to state 19
-- On namespace_name shift to state 1020
-- On ident_in_name shift to state 57
-- On ident shift to state 56
## Reductions:

State 1020:
## Known stack suffix:
## T_USE option(use_keyword) option(TANTISLASH) namespace_name
## LR(1) items:
namespace_name -> namespace_name . TANTISLASH ident_in_name [ T_AS TSEMICOLON TCOMMA TANTISLASH ]
namespace_use_clause -> option(TANTISLASH) namespace_name . option(namespace_aliasing_clause) [ TSEMICOLON TCOMMA ]
namespace_use_declaration -> T_USE option(use_keyword) option(TANTISLASH) namespace_name . TANTISLASH TOBRACE list_sep2(namespace_use_group_clause,TCOMMA) TCBRACE TSEMICOLON [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_EMPTY T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
## Transitions:
-- On T_AS shift to state 1021
-- On TANTISLASH shift to state 1023
-- On option(namespace_aliasing_clause) shift to state 1035
-- On namespace_aliasing_clause shift to state 1028
## Reductions:
-- On TSEMICOLON TCOMMA
--   reduce production option(namespace_aliasing_clause) ->

State 1021:
## Known stack suffix:
## T_AS
## LR(1) items:
namespace_aliasing_clause -> T_AS . ident [ TSEMICOLON TCOMMA TCBRACE ]
## Transitions:
-- On T_TYPE shift to state 6
-- On T_SUPER shift to state 8
-- On T_METAVAR shift to state 17
-- On T_IDENT shift to state 18
-- On T_ENUM shift to state 19
-- On ident shift to state 1022
## Reductions:

State 1022:
## Known stack suffix:
## T_AS ident
## LR(1) items:
namespace_aliasing_clause -> T_AS ident . [ TSEMICOLON TCOMMA TCBRACE ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production namespace_aliasing_clause -> T_AS ident

State 1023:
## Known stack suffix:
## T_USE option(use_keyword) option(TANTISLASH) namespace_name TANTISLASH
## LR(1) items:
namespace_name -> namespace_name TANTISLASH . ident_in_name [ T_AS TSEMICOLON TCOMMA TANTISLASH ]
namespace_use_declaration -> T_USE option(use_keyword) option(TANTISLASH) namespace_name TANTISLASH . TOBRACE list_sep2(namespace_use_group_clause,TCOMMA) TCBRACE TSEMICOLON [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_EMPTY T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
## Transitions:
-- On T_TYPE shift to state 6
-- On T_SUPER shift to state 8
-- On T_METAVAR shift to state 17
-- On T_INSTANCEOF shift to state 52
-- On T_IDENT shift to state 18
-- On T_ENUM shift to state 19
-- On TOBRACE shift to state 1024
-- On ident_in_name shift to state 55
-- On ident shift to state 56
## Reductions:

State 1024:
## Known stack suffix:
## T_USE option(use_keyword) option(TANTISLASH) namespace_name TANTISLASH TOBRACE
## LR(1) items:
namespace_use_declaration -> T_USE option(use_keyword) option(TANTISLASH) namespace_name TANTISLASH TOBRACE . list_sep2(namespace_use_group_clause,TCOMMA) TCBRACE TSEMICOLON [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_EMPTY T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
## Transitions:
-- On T_FUNCTION shift to state 1014
-- On T_CONST shift to state 1015
-- On use_keyword shift to state 1016
-- On option(use_keyword) shift to state 1025
-- On namespace_use_group_clause shift to state 1029
-- On list_sep2(namespace_use_group_clause,TCOMMA) shift to state 1030
## Reductions:
-- On T_TYPE T_SUPER T_METAVAR T_INSTANCEOF T_IDENT T_ENUM
--   reduce production option(use_keyword) ->

State 1025:
## Known stack suffix:
## option(use_keyword)
## LR(1) items:
namespace_use_group_clause -> option(use_keyword) . namespace_name option(namespace_aliasing_clause) [ TCOMMA TCBRACE ]
## Transitions:
-- On T_TYPE shift to state 6
-- On T_SUPER shift to state 8
-- On T_METAVAR shift to state 17
-- On T_INSTANCEOF shift to state 52
-- On T_IDENT shift to state 18
-- On T_ENUM shift to state 19
-- On namespace_name shift to state 1026
-- On ident_in_name shift to state 57
-- On ident shift to state 56
## Reductions:

State 1026:
## Known stack suffix:
## option(use_keyword) namespace_name
## LR(1) items:
namespace_name -> namespace_name . TANTISLASH ident_in_name [ T_AS TCOMMA TCBRACE TANTISLASH ]
namespace_use_group_clause -> option(use_keyword) namespace_name . option(namespace_aliasing_clause) [ TCOMMA TCBRACE ]
## Transitions:
-- On T_AS shift to state 1021
-- On TANTISLASH shift to state 54
-- On option(namespace_aliasing_clause) shift to state 1027
-- On namespace_aliasing_clause shift to state 1028
## Reductions:
-- On TCOMMA TCBRACE
--   reduce production option(namespace_aliasing_clause) ->

State 1027:
## Known stack suffix:
## option(use_keyword) namespace_name option(namespace_aliasing_clause)
## LR(1) items:
namespace_use_group_clause -> option(use_keyword) namespace_name option(namespace_aliasing_clause) . [ TCOMMA TCBRACE ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production namespace_use_group_clause -> option(use_keyword) namespace_name option(namespace_aliasing_clause)

State 1028:
## Known stack suffix:
## namespace_aliasing_clause
## LR(1) items:
option(namespace_aliasing_clause) -> namespace_aliasing_clause . [ TSEMICOLON TCOMMA TCBRACE ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production option(namespace_aliasing_clause) -> namespace_aliasing_clause

State 1029:
## Known stack suffix:
## namespace_use_group_clause
## LR(1) items:
list_sep2(namespace_use_group_clause,TCOMMA) -> namespace_use_group_clause . [ TCOMMA TCBRACE ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production list_sep2(namespace_use_group_clause,TCOMMA) -> namespace_use_group_clause

State 1030:
## Known stack suffix:
## T_USE option(use_keyword) option(TANTISLASH) namespace_name TANTISLASH TOBRACE list_sep2(namespace_use_group_clause,TCOMMA)
## LR(1) items:
list_sep2(namespace_use_group_clause,TCOMMA) -> list_sep2(namespace_use_group_clause,TCOMMA) . TCOMMA namespace_use_group_clause [ TCOMMA TCBRACE ]
namespace_use_declaration -> T_USE option(use_keyword) option(TANTISLASH) namespace_name TANTISLASH TOBRACE list_sep2(namespace_use_group_clause,TCOMMA) . TCBRACE TSEMICOLON [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_EMPTY T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
## Transitions:
-- On TCOMMA shift to state 1031
-- On TCBRACE shift to state 1033
## Reductions:

State 1031:
## Known stack suffix:
## list_sep2(namespace_use_group_clause,TCOMMA) TCOMMA
## LR(1) items:
list_sep2(namespace_use_group_clause,TCOMMA) -> list_sep2(namespace_use_group_clause,TCOMMA) TCOMMA . namespace_use_group_clause [ TCOMMA TCBRACE ]
## Transitions:
-- On T_FUNCTION shift to state 1014
-- On T_CONST shift to state 1015
-- On use_keyword shift to state 1016
-- On option(use_keyword) shift to state 1025
-- On namespace_use_group_clause shift to state 1032
## Reductions:
-- On T_TYPE T_SUPER T_METAVAR T_INSTANCEOF T_IDENT T_ENUM
--   reduce production option(use_keyword) ->

State 1032:
## Known stack suffix:
## list_sep2(namespace_use_group_clause,TCOMMA) TCOMMA namespace_use_group_clause
## LR(1) items:
list_sep2(namespace_use_group_clause,TCOMMA) -> list_sep2(namespace_use_group_clause,TCOMMA) TCOMMA namespace_use_group_clause . [ TCOMMA TCBRACE ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production list_sep2(namespace_use_group_clause,TCOMMA) -> list_sep2(namespace_use_group_clause,TCOMMA) TCOMMA namespace_use_group_clause

State 1033:
## Known stack suffix:
## T_USE option(use_keyword) option(TANTISLASH) namespace_name TANTISLASH TOBRACE list_sep2(namespace_use_group_clause,TCOMMA) TCBRACE
## LR(1) items:
namespace_use_declaration -> T_USE option(use_keyword) option(TANTISLASH) namespace_name TANTISLASH TOBRACE list_sep2(namespace_use_group_clause,TCOMMA) TCBRACE . TSEMICOLON [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_EMPTY T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
## Transitions:
-- On TSEMICOLON shift to state 1034
## Reductions:

State 1034:
## Known stack suffix:
## T_USE option(use_keyword) option(TANTISLASH) namespace_name TANTISLASH TOBRACE list_sep2(namespace_use_group_clause,TCOMMA) TCBRACE TSEMICOLON
## LR(1) items:
namespace_use_declaration -> T_USE option(use_keyword) option(TANTISLASH) namespace_name TANTISLASH TOBRACE list_sep2(namespace_use_group_clause,TCOMMA) TCBRACE TSEMICOLON . [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_EMPTY T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production namespace_use_declaration -> T_USE option(use_keyword) option(TANTISLASH) namespace_name TANTISLASH TOBRACE list_sep2(namespace_use_group_clause,TCOMMA) TCBRACE TSEMICOLON

State 1035:
## Known stack suffix:
## option(TANTISLASH) namespace_name option(namespace_aliasing_clause)
## LR(1) items:
namespace_use_clause -> option(TANTISLASH) namespace_name option(namespace_aliasing_clause) . [ TSEMICOLON TCOMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production namespace_use_clause -> option(TANTISLASH) namespace_name option(namespace_aliasing_clause)

State 1036:
## Known stack suffix:
## namespace_use_clause
## LR(1) items:
list_sep(namespace_use_clause,TCOMMA) -> namespace_use_clause . [ TSEMICOLON TCOMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production list_sep(namespace_use_clause,TCOMMA) -> namespace_use_clause

State 1037:
## Known stack suffix:
## T_USE option(use_keyword) list_sep(namespace_use_clause,TCOMMA)
## LR(1) items:
list_sep(namespace_use_clause,TCOMMA) -> list_sep(namespace_use_clause,TCOMMA) . TCOMMA namespace_use_clause [ TSEMICOLON TCOMMA ]
namespace_use_declaration -> T_USE option(use_keyword) list_sep(namespace_use_clause,TCOMMA) . TSEMICOLON [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_EMPTY T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
## Transitions:
-- On TSEMICOLON shift to state 1038
-- On TCOMMA shift to state 1039
## Reductions:

State 1038:
## Known stack suffix:
## T_USE option(use_keyword) list_sep(namespace_use_clause,TCOMMA) TSEMICOLON
## LR(1) items:
namespace_use_declaration -> T_USE option(use_keyword) list_sep(namespace_use_clause,TCOMMA) TSEMICOLON . [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_EMPTY T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production namespace_use_declaration -> T_USE option(use_keyword) list_sep(namespace_use_clause,TCOMMA) TSEMICOLON

State 1039:
## Known stack suffix:
## list_sep(namespace_use_clause,TCOMMA) TCOMMA
## LR(1) items:
list_sep(namespace_use_clause,TCOMMA) -> list_sep(namespace_use_clause,TCOMMA) TCOMMA . namespace_use_clause [ TSEMICOLON TCOMMA ]
## Transitions:
-- On TANTISLASH shift to state 1018
-- On option(TANTISLASH) shift to state 1040
-- On namespace_use_clause shift to state 1042
## Reductions:
-- On T_TYPE T_SUPER T_METAVAR T_INSTANCEOF T_IDENT T_ENUM
--   reduce production option(TANTISLASH) ->

State 1040:
## Known stack suffix:
## option(TANTISLASH)
## LR(1) items:
namespace_use_clause -> option(TANTISLASH) . namespace_name option(namespace_aliasing_clause) [ TSEMICOLON TCOMMA ]
## Transitions:
-- On T_TYPE shift to state 6
-- On T_SUPER shift to state 8
-- On T_METAVAR shift to state 17
-- On T_INSTANCEOF shift to state 52
-- On T_IDENT shift to state 18
-- On T_ENUM shift to state 19
-- On namespace_name shift to state 1041
-- On ident_in_name shift to state 57
-- On ident shift to state 56
## Reductions:

State 1041:
## Known stack suffix:
## option(TANTISLASH) namespace_name
## LR(1) items:
namespace_name -> namespace_name . TANTISLASH ident_in_name [ T_AS TSEMICOLON TCOMMA TANTISLASH ]
namespace_use_clause -> option(TANTISLASH) namespace_name . option(namespace_aliasing_clause) [ TSEMICOLON TCOMMA ]
## Transitions:
-- On T_AS shift to state 1021
-- On TANTISLASH shift to state 54
-- On option(namespace_aliasing_clause) shift to state 1035
-- On namespace_aliasing_clause shift to state 1028
## Reductions:
-- On TSEMICOLON TCOMMA
--   reduce production option(namespace_aliasing_clause) ->

State 1042:
## Known stack suffix:
## list_sep(namespace_use_clause,TCOMMA) TCOMMA namespace_use_clause
## LR(1) items:
list_sep(namespace_use_clause,TCOMMA) -> list_sep(namespace_use_clause,TCOMMA) TCOMMA namespace_use_clause . [ TSEMICOLON TCOMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production list_sep(namespace_use_clause,TCOMMA) -> list_sep(namespace_use_clause,TCOMMA) TCOMMA namespace_use_clause

State 1043:
## Known stack suffix:
## T_TYPE
## LR(1) items:
ident -> T_TYPE . [ T_XOR_EQUAL T_SR_EQUAL T_SR T_SL_EQUAL T_SL T_ROCKET T_PLUS_EQUAL T_OR_EQUAL T_OBJECT_OPERATOR T_MUL_EQUAL T_MOD_EQUAL T_MINUS_EQUAL T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DIV_EQUAL T_DEC T_CONCAT_EQUAL T_BOOLEAN_OR T_BOOLEAN_AND T_AND_EQUAL TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TOPAR TOBRACE TOBRA TMUL TMOD TMINUS TGREATER TEQ TDOT TDIV TCOLCOL TANTISLASH TAND EOF ]
type_declaration -> T_TYPE . ident type_params_opt type_constr_opt TEQ type_php TSEMICOLON [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_EMPTY T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
## Transitions:
-- On T_TYPE shift to state 6
-- On T_SUPER shift to state 8
-- On T_METAVAR shift to state 17
-- On T_IDENT shift to state 18
-- On T_ENUM shift to state 19
-- On ident shift to state 1044
## Reductions:
-- On T_XOR_EQUAL T_SR_EQUAL T_SR T_SL_EQUAL T_SL T_ROCKET T_PLUS_EQUAL T_OR_EQUAL T_OBJECT_OPERATOR T_MUL_EQUAL T_MOD_EQUAL T_MINUS_EQUAL T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DIV_EQUAL T_DEC T_CONCAT_EQUAL T_BOOLEAN_OR T_BOOLEAN_AND T_AND_EQUAL TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TOPAR TOBRACE TOBRA TMUL TMOD TMINUS TGREATER TEQ TDOT TDIV TCOLCOL TANTISLASH TAND EOF
--   reduce production ident -> T_TYPE

State 1044:
## Known stack suffix:
## T_TYPE ident
## LR(1) items:
type_declaration -> T_TYPE ident . type_params_opt type_constr_opt TEQ type_php TSEMICOLON [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_EMPTY T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
## Transitions:
-- On TSMALLER shift to state 395
-- On type_params_opt shift to state 1045
## Reductions:
-- On T_AS TEQ
--   reduce production type_params_opt ->

State 1045:
## Known stack suffix:
## T_TYPE ident type_params_opt
## LR(1) items:
type_declaration -> T_TYPE ident type_params_opt . type_constr_opt TEQ type_php TSEMICOLON [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_EMPTY T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
## Transitions:
-- On T_AS shift to state 672
-- On type_constr_opt shift to state 1046
## Reductions:
-- On TEQ
--   reduce production type_constr_opt ->

State 1046:
## Known stack suffix:
## T_TYPE ident type_params_opt type_constr_opt
## LR(1) items:
type_declaration -> T_TYPE ident type_params_opt type_constr_opt . TEQ type_php TSEMICOLON [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_EMPTY T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
## Transitions:
-- On TEQ shift to state 1047
## Reductions:

State 1047:
## Known stack suffix:
## T_TYPE ident type_params_opt type_constr_opt TEQ
## LR(1) items:
type_declaration -> T_TYPE ident type_params_opt type_constr_opt TEQ . type_php TSEMICOLON [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_EMPTY T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
## Transitions:
-- On T_TYPE shift to state 6
-- On T_SUPER shift to state 8
-- On T_SELF shift to state 77
-- On T_PARENT shift to state 78
-- On T_NAMESPACE shift to state 50
-- On T_METAVAR shift to state 17
-- On T_INSTANCEOF shift to state 52
-- On T_IDENT shift to state 18
-- On T_ENUM shift to state 19
-- On T_ARRAY shift to state 79
-- On TQUESTION shift to state 80
-- On TOPAR shift to state 81
-- On TANTISLASH shift to state 85
-- On type_php shift to state 1048
-- On qualified_name shift to state 94
-- On qualified_class_name_or_array shift to state 95
-- On qualified_class_name shift to state 100
-- On primary_type_php shift to state 101
-- On namespace_name shift to state 102
-- On ident_in_name shift to state 57
-- On ident shift to state 56
-- On class_name shift to state 103
## Reductions:

State 1048:
## Known stack suffix:
## T_TYPE ident type_params_opt type_constr_opt TEQ type_php
## LR(1) items:
type_declaration -> T_TYPE ident type_params_opt type_constr_opt TEQ type_php . TSEMICOLON [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_EMPTY T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
type_php -> type_php . TCOLCOL primary_type_php [ TSEMICOLON TCOLCOL ]
## Transitions:
-- On TSEMICOLON shift to state 1049
-- On TCOLCOL shift to state 93
## Reductions:

State 1049:
## Known stack suffix:
## T_TYPE ident type_params_opt type_constr_opt TEQ type_php TSEMICOLON
## LR(1) items:
type_declaration -> T_TYPE ident type_params_opt type_constr_opt TEQ type_php TSEMICOLON . [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_EMPTY T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production type_declaration -> T_TYPE ident type_params_opt type_constr_opt TEQ type_php TSEMICOLON

State 1050:
## Known stack suffix:
## T_NAMESPACE
## LR(1) items:
namespace_declaration -> T_NAMESPACE . namespace_name TSEMICOLON [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_EMPTY T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
namespace_declaration -> T_NAMESPACE . namespace_name TOBRACE list(top_statement) TCBRACE [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_EMPTY T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
namespace_declaration -> T_NAMESPACE . TOBRACE list(top_statement) TCBRACE [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_EMPTY T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
qualified_name -> T_NAMESPACE . TANTISLASH namespace_name [ T_XOR_EQUAL T_SR_EQUAL T_SR T_SL_EQUAL T_SL T_ROCKET T_PLUS_EQUAL T_OR_EQUAL T_OBJECT_OPERATOR T_MUL_EQUAL T_MOD_EQUAL T_MINUS_EQUAL T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DIV_EQUAL T_DEC T_CONCAT_EQUAL T_BOOLEAN_OR T_BOOLEAN_AND T_AND_EQUAL TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TOPAR TOBRACE TOBRA TMUL TMOD TMINUS TGREATER TEQ TDOT TDIV TCOLCOL TAND EOF ]
## Transitions:
-- On T_TYPE shift to state 6
-- On T_SUPER shift to state 8
-- On T_METAVAR shift to state 17
-- On T_INSTANCEOF shift to state 52
-- On T_IDENT shift to state 18
-- On T_ENUM shift to state 19
-- On TOBRACE shift to state 1051
-- On TANTISLASH shift to state 51
-- On namespace_name shift to state 1073
-- On ident_in_name shift to state 57
-- On ident shift to state 56
## Reductions:

State 1051:
## Known stack suffix:
## T_NAMESPACE TOBRACE
## LR(1) items:
namespace_declaration -> T_NAMESPACE TOBRACE . list(top_statement) TCBRACE [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_EMPTY T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
## Transitions:
-- On T__AT shift to state 1
-- On T_YIELD shift to state 2
-- On T_WHILE shift to state 158
-- On T_VARIABLE shift to state 3
-- On T_USE shift to state 1013
-- On T_UNSET_CAST shift to state 5
-- On T_UNSET shift to state 197
-- On T_TYPE shift to state 1043
-- On T_TRY shift to state 391
-- On T_TRAIT_C shift to state 7
-- On T_TRAIT shift to state 393
-- On T_THROW shift to state 520
-- On T_SWITCH shift to state 525
-- On T_SUPER shift to state 8
-- On T_STRING_CAST shift to state 9
-- On T_STATIC shift to state 536
-- On T_START_HEREDOC shift to state 25
-- On T_SL shift to state 16
-- On T_SELF shift to state 40
-- On T_RETURN shift to state 553
-- On T_REQUIRE_ONCE shift to state 41
-- On T_REQUIRE shift to state 42
-- On T_PRINT shift to state 43
-- On T_PARENT shift to state 44
-- On T_OPEN_TAG_WITH_ECHO shift to state 558
-- On T_OBJECT_CAST shift to state 45
-- On T_NEW shift to state 46
-- On T_NAMESPACE_C shift to state 49
-- On T_NAMESPACE shift to state 1050
-- On T_METHOD_C shift to state 58
-- On T_METAVAR shift to state 17
-- On T_LNUMBER shift to state 59
-- On T_LIST shift to state 69
-- On T_LINE shift to state 60
-- On T_LAMBDA_OPAR shift to state 73
-- On T_ISSET shift to state 133
-- On T_INT_CAST shift to state 135
-- On T_INTERFACE shift to state 563
-- On T_INSTANCEOF shift to state 52
-- On T_INLINE_HTML shift to state 576
-- On T_INCLUDE_ONCE shift to state 136
-- On T_INCLUDE shift to state 137
-- On T_INC shift to state 138
-- On T_IF shift to state 577
-- On T_IDENT shift to state 18
-- On T_GLOBAL shift to state 587
-- On T_FUNC_C shift to state 61
-- On T_FUNCTION shift to state 657
-- On T_FOREACH shift to state 600
-- On T_FOR shift to state 624
-- On T_FINAL shift to state 666
-- On T_FILE shift to state 62
-- On T_EXIT shift to state 160
-- On T_EVAL shift to state 162
-- On T_ENUM shift to state 668
-- On T_EMPTY shift to state 164
-- On T_ELLIPSIS shift to state 635
-- On T_ECHO shift to state 636
-- On T_DOUBLE_CAST shift to state 168
-- On T_DO shift to state 644
-- On T_DNUMBER shift to state 63
-- On T_DIR shift to state 64
-- On T_DECLARE shift to state 645
-- On T_DEC shift to state 169
-- On T_CONTINUE shift to state 649
-- On T_CONSTANT_ENCAPSED_STRING shift to state 65
-- On T_CONST shift to state 1052
-- On T_CLONE shift to state 170
-- On T_CLASS_C shift to state 66
-- On T_CLASS shift to state 682
-- On T_BREAK shift to state 652
-- On T_BOOL_CAST shift to state 171
-- On T_AWAIT shift to state 172
-- On T_ASYNC shift to state 683
-- On T_ARRAY_CAST shift to state 200
-- On T_ARRAY shift to state 201
-- On T_ABSTRACT shift to state 694
-- On TTILDE shift to state 204
-- On TSEMICOLON shift to state 655
-- On TPLUS shift to state 205
-- On TOPAR shift to state 206
-- On TOBRACE shift to state 656
-- On TOBRA shift to state 209
-- On TMINUS shift to state 210
-- On TGUIL shift to state 211
-- On TDOLLARDOLLAR shift to state 213
-- On TDOLLAR shift to state 214
-- On TBANG shift to state 216
-- On TBACKQUOTE shift to state 217
-- On TANTISLASH shift to state 85
-- On LDots shift to state 222
-- On unticked_function_declaration shift to state 696
-- On unticked_class_declaration shift to state 697
-- On type_declaration shift to state 1062
-- On top_statement shift to state 1063
-- On statement shift to state 1064
-- On simple_expr shift to state 223
-- On qualified_name shift to state 94
-- On qualified_class_name shift to state 225
-- On primary_expr shift to state 226
-- On new_expr shift to state 227
-- On namespace_use_declaration shift to state 1065
-- On namespace_name shift to state 102
-- On namespace_declaration shift to state 1066
-- On member_expr shift to state 228
-- On list(top_statement) shift to state 1071
-- On lambda_expr shift to state 231
-- On ident_in_name shift to state 57
-- On ident shift to state 56
-- On function_declaration shift to state 1068
-- On expr shift to state 704
-- On constant_declaration shift to state 1069
-- On constant shift to state 239
-- On class_entry_type shift to state 706
-- On class_declaration shift to state 1070
-- On call_expr shift to state 240
-- On attributes shift to state 717
## Reductions:
-- On TCBRACE
--   reduce production list(top_statement) ->

State 1052:
## Known stack suffix:
## T_CONST
## LR(1) items:
constant_declaration -> T_CONST . ident_constant_name TEQ static_scalar TSEMICOLON [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_EMPTY T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
constant_declaration -> T_CONST . type_php ident_constant_name TEQ static_scalar TSEMICOLON [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_EMPTY T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
## Transitions:
-- On T_TYPE shift to state 6
-- On T_SUPER shift to state 8
-- On T_SELF shift to state 77
-- On T_PARENT shift to state 78
-- On T_NEW shift to state 480
-- On T_NAMESPACE shift to state 50
-- On T_METAVAR shift to state 17
-- On T_LOGICAL_AND shift to state 481
-- On T_LIST shift to state 482
-- On T_INSTANCEOF shift to state 52
-- On T_IDENT shift to state 18
-- On T_FROM shift to state 483
-- On T_ENUM shift to state 19
-- On T_ARRAY shift to state 79
-- On TQUESTION shift to state 80
-- On TOPAR shift to state 81
-- On TANTISLASH shift to state 85
-- On type_php shift to state 1053
-- On qualified_name shift to state 94
-- On qualified_class_name_or_array shift to state 95
-- On qualified_class_name shift to state 100
-- On primary_type_php shift to state 101
-- On namespace_name shift to state 102
-- On ident_in_name shift to state 57
-- On ident_constant_name shift to state 1058
-- On ident shift to state 496
-- On class_name shift to state 103
## Reductions:

State 1053:
## Known stack suffix:
## T_CONST type_php
## LR(1) items:
constant_declaration -> T_CONST type_php . ident_constant_name TEQ static_scalar TSEMICOLON [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_EMPTY T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
type_php -> type_php . TCOLCOL primary_type_php [ T_TYPE T_SUPER T_NEW T_METAVAR T_LOGICAL_AND T_LIST T_IDENT T_FROM T_ENUM TCOLCOL ]
## Transitions:
-- On T_TYPE shift to state 6
-- On T_SUPER shift to state 8
-- On T_NEW shift to state 480
-- On T_METAVAR shift to state 17
-- On T_LOGICAL_AND shift to state 481
-- On T_LIST shift to state 482
-- On T_IDENT shift to state 18
-- On T_FROM shift to state 483
-- On T_ENUM shift to state 19
-- On TCOLCOL shift to state 93
-- On ident_constant_name shift to state 1054
-- On ident shift to state 491
## Reductions:

State 1054:
## Known stack suffix:
## T_CONST type_php ident_constant_name
## LR(1) items:
constant_declaration -> T_CONST type_php ident_constant_name . TEQ static_scalar TSEMICOLON [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_EMPTY T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
## Transitions:
-- On TEQ shift to state 1055
## Reductions:

State 1055:
## Known stack suffix:
## T_CONST type_php ident_constant_name TEQ
## LR(1) items:
constant_declaration -> T_CONST type_php ident_constant_name TEQ . static_scalar TSEMICOLON [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_EMPTY T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
## Transitions:
-- On T__AT shift to state 1
-- On T_YIELD shift to state 2
-- On T_VARIABLE shift to state 3
-- On T_UNSET_CAST shift to state 5
-- On T_TYPE shift to state 6
-- On T_TRAIT_C shift to state 7
-- On T_SUPER shift to state 8
-- On T_STRING_CAST shift to state 9
-- On T_STATIC shift to state 10
-- On T_START_HEREDOC shift to state 25
-- On T_SELF shift to state 40
-- On T_REQUIRE_ONCE shift to state 41
-- On T_REQUIRE shift to state 42
-- On T_PRINT shift to state 43
-- On T_PARENT shift to state 44
-- On T_OBJECT_CAST shift to state 45
-- On T_NEW shift to state 46
-- On T_NAMESPACE_C shift to state 49
-- On T_NAMESPACE shift to state 50
-- On T_METHOD_C shift to state 58
-- On T_METAVAR shift to state 17
-- On T_LNUMBER shift to state 59
-- On T_LIST shift to state 69
-- On T_LINE shift to state 60
-- On T_LAMBDA_OPAR shift to state 73
-- On T_ISSET shift to state 133
-- On T_INT_CAST shift to state 135
-- On T_INSTANCEOF shift to state 52
-- On T_INCLUDE_ONCE shift to state 136
-- On T_INCLUDE shift to state 137
-- On T_INC shift to state 138
-- On T_IDENT shift to state 18
-- On T_FUNC_C shift to state 61
-- On T_FUNCTION shift to state 139
-- On T_FILE shift to state 62
-- On T_EXIT shift to state 160
-- On T_EVAL shift to state 162
-- On T_ENUM shift to state 19
-- On T_EMPTY shift to state 164
-- On T_DOUBLE_CAST shift to state 168
-- On T_DNUMBER shift to state 63
-- On T_DIR shift to state 64
-- On T_DEC shift to state 169
-- On T_CONSTANT_ENCAPSED_STRING shift to state 65
-- On T_CLONE shift to state 170
-- On T_CLASS_C shift to state 66
-- On T_BOOL_CAST shift to state 171
-- On T_AWAIT shift to state 172
-- On T_ASYNC shift to state 173
-- On T_ARRAY_CAST shift to state 200
-- On T_ARRAY shift to state 201
-- On TTILDE shift to state 204
-- On TPLUS shift to state 205
-- On TOPAR shift to state 206
-- On TOBRA shift to state 209
-- On TMINUS shift to state 210
-- On TGUIL shift to state 211
-- On TDOLLARDOLLAR shift to state 213
-- On TDOLLAR shift to state 214
-- On TBANG shift to state 216
-- On TBACKQUOTE shift to state 217
-- On TANTISLASH shift to state 85
-- On LDots shift to state 222
-- On static_scalar shift to state 1056
-- On simple_expr shift to state 223
-- On qualified_name shift to state 94
-- On qualified_class_name shift to state 225
-- On primary_expr shift to state 226
-- On new_expr shift to state 227
-- On namespace_name shift to state 102
-- On member_expr shift to state 228
-- On lambda_expr shift to state 231
-- On ident_in_name shift to state 57
-- On ident shift to state 56
-- On expr shift to state 465
-- On constant shift to state 239
-- On call_expr shift to state 240
## Reductions:

State 1056:
## Known stack suffix:
## T_CONST type_php ident_constant_name TEQ static_scalar
## LR(1) items:
constant_declaration -> T_CONST type_php ident_constant_name TEQ static_scalar . TSEMICOLON [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_EMPTY T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
## Transitions:
-- On TSEMICOLON shift to state 1057
## Reductions:

State 1057:
## Known stack suffix:
## T_CONST type_php ident_constant_name TEQ static_scalar TSEMICOLON
## LR(1) items:
constant_declaration -> T_CONST type_php ident_constant_name TEQ static_scalar TSEMICOLON . [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_EMPTY T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production constant_declaration -> T_CONST type_php ident_constant_name TEQ static_scalar TSEMICOLON

State 1058:
## Known stack suffix:
## T_CONST ident_constant_name
## LR(1) items:
constant_declaration -> T_CONST ident_constant_name . TEQ static_scalar TSEMICOLON [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_EMPTY T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
## Transitions:
-- On TEQ shift to state 1059
## Reductions:

State 1059:
## Known stack suffix:
## T_CONST ident_constant_name TEQ
## LR(1) items:
constant_declaration -> T_CONST ident_constant_name TEQ . static_scalar TSEMICOLON [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_EMPTY T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
## Transitions:
-- On T__AT shift to state 1
-- On T_YIELD shift to state 2
-- On T_VARIABLE shift to state 3
-- On T_UNSET_CAST shift to state 5
-- On T_TYPE shift to state 6
-- On T_TRAIT_C shift to state 7
-- On T_SUPER shift to state 8
-- On T_STRING_CAST shift to state 9
-- On T_STATIC shift to state 10
-- On T_START_HEREDOC shift to state 25
-- On T_SELF shift to state 40
-- On T_REQUIRE_ONCE shift to state 41
-- On T_REQUIRE shift to state 42
-- On T_PRINT shift to state 43
-- On T_PARENT shift to state 44
-- On T_OBJECT_CAST shift to state 45
-- On T_NEW shift to state 46
-- On T_NAMESPACE_C shift to state 49
-- On T_NAMESPACE shift to state 50
-- On T_METHOD_C shift to state 58
-- On T_METAVAR shift to state 17
-- On T_LNUMBER shift to state 59
-- On T_LIST shift to state 69
-- On T_LINE shift to state 60
-- On T_LAMBDA_OPAR shift to state 73
-- On T_ISSET shift to state 133
-- On T_INT_CAST shift to state 135
-- On T_INSTANCEOF shift to state 52
-- On T_INCLUDE_ONCE shift to state 136
-- On T_INCLUDE shift to state 137
-- On T_INC shift to state 138
-- On T_IDENT shift to state 18
-- On T_FUNC_C shift to state 61
-- On T_FUNCTION shift to state 139
-- On T_FILE shift to state 62
-- On T_EXIT shift to state 160
-- On T_EVAL shift to state 162
-- On T_ENUM shift to state 19
-- On T_EMPTY shift to state 164
-- On T_DOUBLE_CAST shift to state 168
-- On T_DNUMBER shift to state 63
-- On T_DIR shift to state 64
-- On T_DEC shift to state 169
-- On T_CONSTANT_ENCAPSED_STRING shift to state 65
-- On T_CLONE shift to state 170
-- On T_CLASS_C shift to state 66
-- On T_BOOL_CAST shift to state 171
-- On T_AWAIT shift to state 172
-- On T_ASYNC shift to state 173
-- On T_ARRAY_CAST shift to state 200
-- On T_ARRAY shift to state 201
-- On TTILDE shift to state 204
-- On TPLUS shift to state 205
-- On TOPAR shift to state 206
-- On TOBRA shift to state 209
-- On TMINUS shift to state 210
-- On TGUIL shift to state 211
-- On TDOLLARDOLLAR shift to state 213
-- On TDOLLAR shift to state 214
-- On TBANG shift to state 216
-- On TBACKQUOTE shift to state 217
-- On TANTISLASH shift to state 85
-- On LDots shift to state 222
-- On static_scalar shift to state 1060
-- On simple_expr shift to state 223
-- On qualified_name shift to state 94
-- On qualified_class_name shift to state 225
-- On primary_expr shift to state 226
-- On new_expr shift to state 227
-- On namespace_name shift to state 102
-- On member_expr shift to state 228
-- On lambda_expr shift to state 231
-- On ident_in_name shift to state 57
-- On ident shift to state 56
-- On expr shift to state 465
-- On constant shift to state 239
-- On call_expr shift to state 240
## Reductions:

State 1060:
## Known stack suffix:
## T_CONST ident_constant_name TEQ static_scalar
## LR(1) items:
constant_declaration -> T_CONST ident_constant_name TEQ static_scalar . TSEMICOLON [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_EMPTY T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
## Transitions:
-- On TSEMICOLON shift to state 1061
## Reductions:

State 1061:
## Known stack suffix:
## T_CONST ident_constant_name TEQ static_scalar TSEMICOLON
## LR(1) items:
constant_declaration -> T_CONST ident_constant_name TEQ static_scalar TSEMICOLON . [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_EMPTY T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production constant_declaration -> T_CONST ident_constant_name TEQ static_scalar TSEMICOLON

State 1062:
## Known stack suffix:
## type_declaration
## LR(1) items:
top_statement -> type_declaration . [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_EMPTY T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production top_statement -> type_declaration

State 1063:
## Known stack suffix:
## top_statement
## LR(1) items:
list(top_statement) -> top_statement . list(top_statement) [ TCBRACE EOF ]
## Transitions:
-- On T__AT shift to state 1
-- On T_YIELD shift to state 2
-- On T_WHILE shift to state 158
-- On T_VARIABLE shift to state 3
-- On T_USE shift to state 1013
-- On T_UNSET_CAST shift to state 5
-- On T_UNSET shift to state 197
-- On T_TYPE shift to state 1043
-- On T_TRY shift to state 391
-- On T_TRAIT_C shift to state 7
-- On T_TRAIT shift to state 393
-- On T_THROW shift to state 520
-- On T_SWITCH shift to state 525
-- On T_SUPER shift to state 8
-- On T_STRING_CAST shift to state 9
-- On T_STATIC shift to state 536
-- On T_START_HEREDOC shift to state 25
-- On T_SL shift to state 16
-- On T_SELF shift to state 40
-- On T_RETURN shift to state 553
-- On T_REQUIRE_ONCE shift to state 41
-- On T_REQUIRE shift to state 42
-- On T_PRINT shift to state 43
-- On T_PARENT shift to state 44
-- On T_OPEN_TAG_WITH_ECHO shift to state 558
-- On T_OBJECT_CAST shift to state 45
-- On T_NEW shift to state 46
-- On T_NAMESPACE_C shift to state 49
-- On T_NAMESPACE shift to state 1050
-- On T_METHOD_C shift to state 58
-- On T_METAVAR shift to state 17
-- On T_LNUMBER shift to state 59
-- On T_LIST shift to state 69
-- On T_LINE shift to state 60
-- On T_LAMBDA_OPAR shift to state 73
-- On T_ISSET shift to state 133
-- On T_INT_CAST shift to state 135
-- On T_INTERFACE shift to state 563
-- On T_INSTANCEOF shift to state 52
-- On T_INLINE_HTML shift to state 576
-- On T_INCLUDE_ONCE shift to state 136
-- On T_INCLUDE shift to state 137
-- On T_INC shift to state 138
-- On T_IF shift to state 577
-- On T_IDENT shift to state 18
-- On T_GLOBAL shift to state 587
-- On T_FUNC_C shift to state 61
-- On T_FUNCTION shift to state 657
-- On T_FOREACH shift to state 600
-- On T_FOR shift to state 624
-- On T_FINAL shift to state 666
-- On T_FILE shift to state 62
-- On T_EXIT shift to state 160
-- On T_EVAL shift to state 162
-- On T_ENUM shift to state 668
-- On T_EMPTY shift to state 164
-- On T_ELLIPSIS shift to state 635
-- On T_ECHO shift to state 636
-- On T_DOUBLE_CAST shift to state 168
-- On T_DO shift to state 644
-- On T_DNUMBER shift to state 63
-- On T_DIR shift to state 64
-- On T_DECLARE shift to state 645
-- On T_DEC shift to state 169
-- On T_CONTINUE shift to state 649
-- On T_CONSTANT_ENCAPSED_STRING shift to state 65
-- On T_CONST shift to state 1052
-- On T_CLONE shift to state 170
-- On T_CLASS_C shift to state 66
-- On T_CLASS shift to state 682
-- On T_BREAK shift to state 652
-- On T_BOOL_CAST shift to state 171
-- On T_AWAIT shift to state 172
-- On T_ASYNC shift to state 683
-- On T_ARRAY_CAST shift to state 200
-- On T_ARRAY shift to state 201
-- On T_ABSTRACT shift to state 694
-- On TTILDE shift to state 204
-- On TSEMICOLON shift to state 655
-- On TPLUS shift to state 205
-- On TOPAR shift to state 206
-- On TOBRACE shift to state 656
-- On TOBRA shift to state 209
-- On TMINUS shift to state 210
-- On TGUIL shift to state 211
-- On TDOLLARDOLLAR shift to state 213
-- On TDOLLAR shift to state 214
-- On TBANG shift to state 216
-- On TBACKQUOTE shift to state 217
-- On TANTISLASH shift to state 85
-- On LDots shift to state 222
-- On unticked_function_declaration shift to state 696
-- On unticked_class_declaration shift to state 697
-- On type_declaration shift to state 1062
-- On top_statement shift to state 1063
-- On statement shift to state 1064
-- On simple_expr shift to state 223
-- On qualified_name shift to state 94
-- On qualified_class_name shift to state 225
-- On primary_expr shift to state 226
-- On new_expr shift to state 227
-- On namespace_use_declaration shift to state 1065
-- On namespace_name shift to state 102
-- On namespace_declaration shift to state 1066
-- On member_expr shift to state 228
-- On list(top_statement) shift to state 1067
-- On lambda_expr shift to state 231
-- On ident_in_name shift to state 57
-- On ident shift to state 56
-- On function_declaration shift to state 1068
-- On expr shift to state 704
-- On constant_declaration shift to state 1069
-- On constant shift to state 239
-- On class_entry_type shift to state 706
-- On class_declaration shift to state 1070
-- On call_expr shift to state 240
-- On attributes shift to state 717
## Reductions:
-- On TCBRACE EOF
--   reduce production list(top_statement) ->

State 1064:
## Known stack suffix:
## statement
## LR(1) items:
top_statement -> statement . [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_EMPTY T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production top_statement -> statement

State 1065:
## Known stack suffix:
## namespace_use_declaration
## LR(1) items:
top_statement -> namespace_use_declaration . [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_EMPTY T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production top_statement -> namespace_use_declaration

State 1066:
## Known stack suffix:
## namespace_declaration
## LR(1) items:
top_statement -> namespace_declaration . [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_EMPTY T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production top_statement -> namespace_declaration

State 1067:
## Known stack suffix:
## top_statement list(top_statement)
## LR(1) items:
list(top_statement) -> top_statement list(top_statement) . [ TCBRACE EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production list(top_statement) -> top_statement list(top_statement)

State 1068:
## Known stack suffix:
## function_declaration
## LR(1) items:
top_statement -> function_declaration . [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_EMPTY T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production top_statement -> function_declaration

State 1069:
## Known stack suffix:
## constant_declaration
## LR(1) items:
top_statement -> constant_declaration . [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_EMPTY T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production top_statement -> constant_declaration

State 1070:
## Known stack suffix:
## class_declaration
## LR(1) items:
top_statement -> class_declaration . [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_EMPTY T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production top_statement -> class_declaration

State 1071:
## Known stack suffix:
## T_NAMESPACE TOBRACE list(top_statement)
## LR(1) items:
namespace_declaration -> T_NAMESPACE TOBRACE list(top_statement) . TCBRACE [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_EMPTY T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
## Transitions:
-- On TCBRACE shift to state 1072
## Reductions:

State 1072:
## Known stack suffix:
## T_NAMESPACE TOBRACE list(top_statement) TCBRACE
## LR(1) items:
namespace_declaration -> T_NAMESPACE TOBRACE list(top_statement) TCBRACE . [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_EMPTY T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production namespace_declaration -> T_NAMESPACE TOBRACE list(top_statement) TCBRACE

State 1073:
## Known stack suffix:
## T_NAMESPACE namespace_name
## LR(1) items:
namespace_declaration -> T_NAMESPACE namespace_name . TSEMICOLON [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_EMPTY T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
namespace_declaration -> T_NAMESPACE namespace_name . TOBRACE list(top_statement) TCBRACE [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_EMPTY T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
namespace_name -> namespace_name . TANTISLASH ident_in_name [ TSEMICOLON TOBRACE TANTISLASH ]
## Transitions:
-- On TSEMICOLON shift to state 1074
-- On TOBRACE shift to state 1075
-- On TANTISLASH shift to state 54
## Reductions:

State 1074:
## Known stack suffix:
## T_NAMESPACE namespace_name TSEMICOLON
## LR(1) items:
namespace_declaration -> T_NAMESPACE namespace_name TSEMICOLON . [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_EMPTY T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production namespace_declaration -> T_NAMESPACE namespace_name TSEMICOLON

State 1075:
## Known stack suffix:
## T_NAMESPACE namespace_name TOBRACE
## LR(1) items:
namespace_declaration -> T_NAMESPACE namespace_name TOBRACE . list(top_statement) TCBRACE [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_EMPTY T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
## Transitions:
-- On T__AT shift to state 1
-- On T_YIELD shift to state 2
-- On T_WHILE shift to state 158
-- On T_VARIABLE shift to state 3
-- On T_USE shift to state 1013
-- On T_UNSET_CAST shift to state 5
-- On T_UNSET shift to state 197
-- On T_TYPE shift to state 1043
-- On T_TRY shift to state 391
-- On T_TRAIT_C shift to state 7
-- On T_TRAIT shift to state 393
-- On T_THROW shift to state 520
-- On T_SWITCH shift to state 525
-- On T_SUPER shift to state 8
-- On T_STRING_CAST shift to state 9
-- On T_STATIC shift to state 536
-- On T_START_HEREDOC shift to state 25
-- On T_SL shift to state 16
-- On T_SELF shift to state 40
-- On T_RETURN shift to state 553
-- On T_REQUIRE_ONCE shift to state 41
-- On T_REQUIRE shift to state 42
-- On T_PRINT shift to state 43
-- On T_PARENT shift to state 44
-- On T_OPEN_TAG_WITH_ECHO shift to state 558
-- On T_OBJECT_CAST shift to state 45
-- On T_NEW shift to state 46
-- On T_NAMESPACE_C shift to state 49
-- On T_NAMESPACE shift to state 1050
-- On T_METHOD_C shift to state 58
-- On T_METAVAR shift to state 17
-- On T_LNUMBER shift to state 59
-- On T_LIST shift to state 69
-- On T_LINE shift to state 60
-- On T_LAMBDA_OPAR shift to state 73
-- On T_ISSET shift to state 133
-- On T_INT_CAST shift to state 135
-- On T_INTERFACE shift to state 563
-- On T_INSTANCEOF shift to state 52
-- On T_INLINE_HTML shift to state 576
-- On T_INCLUDE_ONCE shift to state 136
-- On T_INCLUDE shift to state 137
-- On T_INC shift to state 138
-- On T_IF shift to state 577
-- On T_IDENT shift to state 18
-- On T_GLOBAL shift to state 587
-- On T_FUNC_C shift to state 61
-- On T_FUNCTION shift to state 657
-- On T_FOREACH shift to state 600
-- On T_FOR shift to state 624
-- On T_FINAL shift to state 666
-- On T_FILE shift to state 62
-- On T_EXIT shift to state 160
-- On T_EVAL shift to state 162
-- On T_ENUM shift to state 668
-- On T_EMPTY shift to state 164
-- On T_ELLIPSIS shift to state 635
-- On T_ECHO shift to state 636
-- On T_DOUBLE_CAST shift to state 168
-- On T_DO shift to state 644
-- On T_DNUMBER shift to state 63
-- On T_DIR shift to state 64
-- On T_DECLARE shift to state 645
-- On T_DEC shift to state 169
-- On T_CONTINUE shift to state 649
-- On T_CONSTANT_ENCAPSED_STRING shift to state 65
-- On T_CONST shift to state 1052
-- On T_CLONE shift to state 170
-- On T_CLASS_C shift to state 66
-- On T_CLASS shift to state 682
-- On T_BREAK shift to state 652
-- On T_BOOL_CAST shift to state 171
-- On T_AWAIT shift to state 172
-- On T_ASYNC shift to state 683
-- On T_ARRAY_CAST shift to state 200
-- On T_ARRAY shift to state 201
-- On T_ABSTRACT shift to state 694
-- On TTILDE shift to state 204
-- On TSEMICOLON shift to state 655
-- On TPLUS shift to state 205
-- On TOPAR shift to state 206
-- On TOBRACE shift to state 656
-- On TOBRA shift to state 209
-- On TMINUS shift to state 210
-- On TGUIL shift to state 211
-- On TDOLLARDOLLAR shift to state 213
-- On TDOLLAR shift to state 214
-- On TBANG shift to state 216
-- On TBACKQUOTE shift to state 217
-- On TANTISLASH shift to state 85
-- On LDots shift to state 222
-- On unticked_function_declaration shift to state 696
-- On unticked_class_declaration shift to state 697
-- On type_declaration shift to state 1062
-- On top_statement shift to state 1063
-- On statement shift to state 1064
-- On simple_expr shift to state 223
-- On qualified_name shift to state 94
-- On qualified_class_name shift to state 225
-- On primary_expr shift to state 226
-- On new_expr shift to state 227
-- On namespace_use_declaration shift to state 1065
-- On namespace_name shift to state 102
-- On namespace_declaration shift to state 1066
-- On member_expr shift to state 228
-- On list(top_statement) shift to state 1076
-- On lambda_expr shift to state 231
-- On ident_in_name shift to state 57
-- On ident shift to state 56
-- On function_declaration shift to state 1068
-- On expr shift to state 704
-- On constant_declaration shift to state 1069
-- On constant shift to state 239
-- On class_entry_type shift to state 706
-- On class_declaration shift to state 1070
-- On call_expr shift to state 240
-- On attributes shift to state 717
## Reductions:
-- On TCBRACE
--   reduce production list(top_statement) ->

State 1076:
## Known stack suffix:
## T_NAMESPACE namespace_name TOBRACE list(top_statement)
## LR(1) items:
namespace_declaration -> T_NAMESPACE namespace_name TOBRACE list(top_statement) . TCBRACE [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_EMPTY T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
## Transitions:
-- On TCBRACE shift to state 1077
## Reductions:

State 1077:
## Known stack suffix:
## T_NAMESPACE namespace_name TOBRACE list(top_statement) TCBRACE
## LR(1) items:
namespace_declaration -> T_NAMESPACE namespace_name TOBRACE list(top_statement) TCBRACE . [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_EMPTY T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TCBRACE TBANG TBACKQUOTE TANTISLASH LDots EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production namespace_declaration -> T_NAMESPACE namespace_name TOBRACE list(top_statement) TCBRACE

State 1078:
## Known stack suffix:
## main
## LR(1) items:
main' -> main . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, accept main

State 1079:
## Known stack suffix:
## list(top_statement)
## LR(1) items:
main -> list(top_statement) . EOF [ # ]
## Transitions:
-- On EOF shift to state 1080
## Reductions:

State 1080:
## Known stack suffix:
## list(top_statement) EOF
## LR(1) items:
main -> list(top_statement) EOF . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, reduce production main -> list(top_statement) EOF

State 1081:
## Known stack suffix:
##
## LR(1) items:
sgrep_spatch_pattern' -> . sgrep_spatch_pattern [ # ]
## Transitions:
-- On T__AT shift to state 1
-- On T_YIELD shift to state 2
-- On T_WHILE shift to state 158
-- On T_VARIABLE shift to state 3
-- On T_USE shift to state 1013
-- On T_UNSET_CAST shift to state 5
-- On T_UNSET shift to state 197
-- On T_TYPE shift to state 1043
-- On T_TRY shift to state 391
-- On T_TRAIT_C shift to state 7
-- On T_TRAIT shift to state 393
-- On T_THROW shift to state 520
-- On T_SWITCH shift to state 525
-- On T_SUPER shift to state 8
-- On T_STRING_CAST shift to state 9
-- On T_STATIC shift to state 536
-- On T_START_HEREDOC shift to state 25
-- On T_SL shift to state 16
-- On T_SELF shift to state 40
-- On T_RETURN shift to state 553
-- On T_REQUIRE_ONCE shift to state 41
-- On T_REQUIRE shift to state 42
-- On T_PRINT shift to state 43
-- On T_PARENT shift to state 44
-- On T_OPEN_TAG_WITH_ECHO shift to state 558
-- On T_OBJECT_CAST shift to state 45
-- On T_NEW shift to state 46
-- On T_NAMESPACE_C shift to state 49
-- On T_NAMESPACE shift to state 1050
-- On T_METHOD_C shift to state 58
-- On T_METAVAR shift to state 17
-- On T_LNUMBER shift to state 59
-- On T_LIST shift to state 69
-- On T_LINE shift to state 60
-- On T_LAMBDA_OPAR shift to state 73
-- On T_ISSET shift to state 133
-- On T_INT_CAST shift to state 135
-- On T_INTERFACE shift to state 563
-- On T_INSTANCEOF shift to state 52
-- On T_INLINE_HTML shift to state 576
-- On T_INCLUDE_ONCE shift to state 136
-- On T_INCLUDE shift to state 137
-- On T_INC shift to state 138
-- On T_IF shift to state 1082
-- On T_IDENT shift to state 18
-- On T_GLOBAL shift to state 587
-- On T_FUNC_C shift to state 61
-- On T_FUNCTION shift to state 657
-- On T_FOREACH shift to state 600
-- On T_FOR shift to state 624
-- On T_FINAL shift to state 666
-- On T_FILE shift to state 62
-- On T_EXIT shift to state 160
-- On T_EVAL shift to state 162
-- On T_ENUM shift to state 668
-- On T_EMPTY shift to state 164
-- On T_ELLIPSIS shift to state 635
-- On T_ECHO shift to state 636
-- On T_DOUBLE_CAST shift to state 168
-- On T_DO shift to state 644
-- On T_DNUMBER shift to state 63
-- On T_DIR shift to state 64
-- On T_DECLARE shift to state 645
-- On T_DEC shift to state 169
-- On T_CONTINUE shift to state 649
-- On T_CONSTANT_ENCAPSED_STRING shift to state 65
-- On T_CONST shift to state 1052
-- On T_CLONE shift to state 170
-- On T_CLASS_C shift to state 66
-- On T_CLASS shift to state 682
-- On T_BREAK shift to state 652
-- On T_BOOL_CAST shift to state 171
-- On T_AWAIT shift to state 172
-- On T_ASYNC shift to state 683
-- On T_ARRAY_CAST shift to state 200
-- On T_ARRAY shift to state 201
-- On T_ABSTRACT shift to state 694
-- On TTILDE shift to state 204
-- On TSEMICOLON shift to state 655
-- On TPLUS shift to state 205
-- On TOPAR shift to state 206
-- On TOBRACE shift to state 656
-- On TOBRA shift to state 209
-- On TMINUS shift to state 210
-- On TGUIL shift to state 211
-- On TDOLLARDOLLAR shift to state 213
-- On TDOLLAR shift to state 214
-- On TCOLON shift to state 1090
-- On TBANG shift to state 216
-- On TBACKQUOTE shift to state 217
-- On TANTISLASH shift to state 85
-- On LDots shift to state 222
-- On unticked_function_declaration shift to state 696
-- On unticked_class_declaration shift to state 697
-- On type_declaration shift to state 1062
-- On top_statement shift to state 1093
-- On statement shift to state 1064
-- On simple_expr shift to state 223
-- On sgrep_spatch_pattern shift to state 1099
-- On qualified_name shift to state 94
-- On qualified_class_name shift to state 225
-- On primary_expr shift to state 226
-- On new_expr shift to state 227
-- On namespace_use_declaration shift to state 1065
-- On namespace_name shift to state 102
-- On namespace_declaration shift to state 1066
-- On member_expr shift to state 228
-- On lambda_expr shift to state 231
-- On ident_in_name shift to state 57
-- On ident shift to state 56
-- On function_declaration shift to state 1068
-- On expr shift to state 1100
-- On constant_declaration shift to state 1069
-- On constant shift to state 239
-- On class_entry_type shift to state 706
-- On class_declaration shift to state 1070
-- On call_expr shift to state 240
-- On attributes shift to state 717
## Reductions:

State 1082:
## Known stack suffix:
## T_IF
## LR(1) items:
sgrep_spatch_pattern -> T_IF . TOPAR expr TCPAR EOF [ # ]
sgrep_spatch_pattern -> T_IF . TOPAR T_ELLIPSIS TCPAR EOF [ # ]
statement -> T_IF . TOPAR expr TCPAR statement elseif_list else_single [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_EMPTY T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TBANG TBACKQUOTE TANTISLASH LDots EOF ]
statement -> T_IF . TOPAR T_ELLIPSIS TCPAR statement elseif_list else_single [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_EMPTY T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TBANG TBACKQUOTE TANTISLASH LDots EOF ]
statement -> T_IF . TOPAR expr TCPAR TCOLON list(inner_statement) new_elseif_list new_else_single T_ENDIF TSEMICOLON [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_EMPTY T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TBANG TBACKQUOTE TANTISLASH LDots EOF ]
statement -> T_IF . TOPAR T_ELLIPSIS TCPAR TCOLON list(inner_statement) new_elseif_list new_else_single T_ENDIF TSEMICOLON [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_EMPTY T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TBANG TBACKQUOTE TANTISLASH LDots EOF ]
## Transitions:
-- On TOPAR shift to state 1083
## Reductions:

State 1083:
## Known stack suffix:
## T_IF TOPAR
## LR(1) items:
sgrep_spatch_pattern -> T_IF TOPAR . expr TCPAR EOF [ # ]
sgrep_spatch_pattern -> T_IF TOPAR . T_ELLIPSIS TCPAR EOF [ # ]
statement -> T_IF TOPAR . expr TCPAR statement elseif_list else_single [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_EMPTY T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TBANG TBACKQUOTE TANTISLASH LDots EOF ]
statement -> T_IF TOPAR . T_ELLIPSIS TCPAR statement elseif_list else_single [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_EMPTY T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TBANG TBACKQUOTE TANTISLASH LDots EOF ]
statement -> T_IF TOPAR . expr TCPAR TCOLON list(inner_statement) new_elseif_list new_else_single T_ENDIF TSEMICOLON [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_EMPTY T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TBANG TBACKQUOTE TANTISLASH LDots EOF ]
statement -> T_IF TOPAR . T_ELLIPSIS TCPAR TCOLON list(inner_statement) new_elseif_list new_else_single T_ENDIF TSEMICOLON [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_EMPTY T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TBANG TBACKQUOTE TANTISLASH LDots EOF ]
## Transitions:
-- On T__AT shift to state 1
-- On T_YIELD shift to state 2
-- On T_VARIABLE shift to state 3
-- On T_UNSET_CAST shift to state 5
-- On T_TYPE shift to state 6
-- On T_TRAIT_C shift to state 7
-- On T_SUPER shift to state 8
-- On T_STRING_CAST shift to state 9
-- On T_STATIC shift to state 10
-- On T_START_HEREDOC shift to state 25
-- On T_SELF shift to state 40
-- On T_REQUIRE_ONCE shift to state 41
-- On T_REQUIRE shift to state 42
-- On T_PRINT shift to state 43
-- On T_PARENT shift to state 44
-- On T_OBJECT_CAST shift to state 45
-- On T_NEW shift to state 46
-- On T_NAMESPACE_C shift to state 49
-- On T_NAMESPACE shift to state 50
-- On T_METHOD_C shift to state 58
-- On T_METAVAR shift to state 17
-- On T_LNUMBER shift to state 59
-- On T_LIST shift to state 69
-- On T_LINE shift to state 60
-- On T_LAMBDA_OPAR shift to state 73
-- On T_ISSET shift to state 133
-- On T_INT_CAST shift to state 135
-- On T_INSTANCEOF shift to state 52
-- On T_INCLUDE_ONCE shift to state 136
-- On T_INCLUDE shift to state 137
-- On T_INC shift to state 138
-- On T_IDENT shift to state 18
-- On T_FUNC_C shift to state 61
-- On T_FUNCTION shift to state 139
-- On T_FILE shift to state 62
-- On T_EXIT shift to state 160
-- On T_EVAL shift to state 162
-- On T_ENUM shift to state 19
-- On T_EMPTY shift to state 164
-- On T_ELLIPSIS shift to state 1084
-- On T_DOUBLE_CAST shift to state 168
-- On T_DNUMBER shift to state 63
-- On T_DIR shift to state 64
-- On T_DEC shift to state 169
-- On T_CONSTANT_ENCAPSED_STRING shift to state 65
-- On T_CLONE shift to state 170
-- On T_CLASS_C shift to state 66
-- On T_BOOL_CAST shift to state 171
-- On T_AWAIT shift to state 172
-- On T_ASYNC shift to state 173
-- On T_ARRAY_CAST shift to state 200
-- On T_ARRAY shift to state 201
-- On TTILDE shift to state 204
-- On TPLUS shift to state 205
-- On TOPAR shift to state 206
-- On TOBRA shift to state 209
-- On TMINUS shift to state 210
-- On TGUIL shift to state 211
-- On TDOLLARDOLLAR shift to state 213
-- On TDOLLAR shift to state 214
-- On TBANG shift to state 216
-- On TBACKQUOTE shift to state 217
-- On TANTISLASH shift to state 85
-- On LDots shift to state 222
-- On simple_expr shift to state 223
-- On qualified_name shift to state 94
-- On qualified_class_name shift to state 225
-- On primary_expr shift to state 226
-- On new_expr shift to state 227
-- On namespace_name shift to state 102
-- On member_expr shift to state 228
-- On lambda_expr shift to state 231
-- On ident_in_name shift to state 57
-- On ident shift to state 56
-- On expr shift to state 1087
-- On constant shift to state 239
-- On call_expr shift to state 240
## Reductions:

State 1084:
## Known stack suffix:
## T_IF TOPAR T_ELLIPSIS
## LR(1) items:
sgrep_spatch_pattern -> T_IF TOPAR T_ELLIPSIS . TCPAR EOF [ # ]
statement -> T_IF TOPAR T_ELLIPSIS . TCPAR statement elseif_list else_single [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_EMPTY T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TBANG TBACKQUOTE TANTISLASH LDots EOF ]
statement -> T_IF TOPAR T_ELLIPSIS . TCPAR TCOLON list(inner_statement) new_elseif_list new_else_single T_ENDIF TSEMICOLON [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_EMPTY T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TBANG TBACKQUOTE TANTISLASH LDots EOF ]
## Transitions:
-- On TCPAR shift to state 1085
## Reductions:

State 1085:
## Known stack suffix:
## T_IF TOPAR T_ELLIPSIS TCPAR
## LR(1) items:
sgrep_spatch_pattern -> T_IF TOPAR T_ELLIPSIS TCPAR . EOF [ # ]
statement -> T_IF TOPAR T_ELLIPSIS TCPAR . statement elseif_list else_single [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_EMPTY T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TBANG TBACKQUOTE TANTISLASH LDots EOF ]
statement -> T_IF TOPAR T_ELLIPSIS TCPAR . TCOLON list(inner_statement) new_elseif_list new_else_single T_ENDIF TSEMICOLON [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_EMPTY T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TBANG TBACKQUOTE TANTISLASH LDots EOF ]
## Transitions:
-- On T__AT shift to state 1
-- On T_YIELD shift to state 2
-- On T_WHILE shift to state 158
-- On T_VARIABLE shift to state 3
-- On T_USE shift to state 190
-- On T_UNSET_CAST shift to state 5
-- On T_UNSET shift to state 197
-- On T_TYPE shift to state 6
-- On T_TRY shift to state 391
-- On T_TRAIT_C shift to state 7
-- On T_THROW shift to state 520
-- On T_SWITCH shift to state 525
-- On T_SUPER shift to state 8
-- On T_STRING_CAST shift to state 9
-- On T_STATIC shift to state 581
-- On T_START_HEREDOC shift to state 25
-- On T_SELF shift to state 40
-- On T_RETURN shift to state 553
-- On T_REQUIRE_ONCE shift to state 41
-- On T_REQUIRE shift to state 42
-- On T_PRINT shift to state 43
-- On T_PARENT shift to state 44
-- On T_OPEN_TAG_WITH_ECHO shift to state 558
-- On T_OBJECT_CAST shift to state 45
-- On T_NEW shift to state 46
-- On T_NAMESPACE_C shift to state 49
-- On T_NAMESPACE shift to state 50
-- On T_METHOD_C shift to state 58
-- On T_METAVAR shift to state 17
-- On T_LNUMBER shift to state 59
-- On T_LIST shift to state 69
-- On T_LINE shift to state 60
-- On T_LAMBDA_OPAR shift to state 73
-- On T_ISSET shift to state 133
-- On T_INT_CAST shift to state 135
-- On T_INSTANCEOF shift to state 52
-- On T_INLINE_HTML shift to state 576
-- On T_INCLUDE_ONCE shift to state 136
-- On T_INCLUDE shift to state 137
-- On T_INC shift to state 138
-- On T_IF shift to state 577
-- On T_IDENT shift to state 18
-- On T_GLOBAL shift to state 587
-- On T_FUNC_C shift to state 61
-- On T_FUNCTION shift to state 139
-- On T_FOREACH shift to state 600
-- On T_FOR shift to state 624
-- On T_FILE shift to state 62
-- On T_EXIT shift to state 160
-- On T_EVAL shift to state 162
-- On T_ENUM shift to state 19
-- On T_EMPTY shift to state 164
-- On T_ELLIPSIS shift to state 635
-- On T_ECHO shift to state 636
-- On T_DOUBLE_CAST shift to state 168
-- On T_DO shift to state 644
-- On T_DNUMBER shift to state 63
-- On T_DIR shift to state 64
-- On T_DECLARE shift to state 645
-- On T_DEC shift to state 169
-- On T_CONTINUE shift to state 649
-- On T_CONSTANT_ENCAPSED_STRING shift to state 65
-- On T_CLONE shift to state 170
-- On T_CLASS_C shift to state 66
-- On T_BREAK shift to state 652
-- On T_BOOL_CAST shift to state 171
-- On T_AWAIT shift to state 172
-- On T_ASYNC shift to state 173
-- On T_ARRAY_CAST shift to state 200
-- On T_ARRAY shift to state 201
-- On TTILDE shift to state 204
-- On TSEMICOLON shift to state 655
-- On TPLUS shift to state 205
-- On TOPAR shift to state 206
-- On TOBRACE shift to state 656
-- On TOBRA shift to state 209
-- On TMINUS shift to state 210
-- On TGUIL shift to state 211
-- On TDOLLARDOLLAR shift to state 213
-- On TDOLLAR shift to state 214
-- On TCOLON shift to state 769
-- On TBANG shift to state 216
-- On TBACKQUOTE shift to state 217
-- On TANTISLASH shift to state 85
-- On LDots shift to state 222
-- On EOF shift to state 1086
-- On statement shift to state 788
-- On simple_expr shift to state 223
-- On qualified_name shift to state 94
-- On qualified_class_name shift to state 225
-- On primary_expr shift to state 226
-- On new_expr shift to state 227
-- On namespace_name shift to state 102
-- On member_expr shift to state 228
-- On lambda_expr shift to state 231
-- On ident_in_name shift to state 57
-- On ident shift to state 56
-- On expr shift to state 704
-- On constant shift to state 239
-- On call_expr shift to state 240
## Reductions:

State 1086:
## Known stack suffix:
## T_IF TOPAR T_ELLIPSIS TCPAR EOF
## LR(1) items:
sgrep_spatch_pattern -> T_IF TOPAR T_ELLIPSIS TCPAR EOF . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, reduce production sgrep_spatch_pattern -> T_IF TOPAR T_ELLIPSIS TCPAR EOF

State 1087:
## Known stack suffix:
## T_IF TOPAR expr
## LR(1) items:
expr -> expr . T_INC [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . T_DEC [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . T_BOOLEAN_OR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . T_BOOLEAN_AND expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . T_LOGICAL_OR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . T_LOGICAL_AND expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . T_LOGICAL_XOR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . TPLUS expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . TMINUS expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . TMUL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . TDIV expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . TMOD expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . TPOW expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . TAND expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . TOR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . TXOR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . T_SL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . T_SR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . TDOT expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . T_IS_IDENTICAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . T_IS_NOT_IDENTICAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . T_IS_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . T_IS_NOT_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . TSMALLER expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . T_IS_SMALLER_OR_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . TGREATER expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . T_IS_GREATER_OR_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . T_ROCKET expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . TQUESTION expr TCOLON expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . TQUESTION TCOLON expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . TQUESTION TQUESTION expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
expr -> expr . T_INSTANCEOF expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TCPAR TAND ]
sgrep_spatch_pattern -> T_IF TOPAR expr . TCPAR EOF [ # ]
statement -> T_IF TOPAR expr . TCPAR statement elseif_list else_single [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_EMPTY T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TBANG TBACKQUOTE TANTISLASH LDots EOF ]
statement -> T_IF TOPAR expr . TCPAR TCOLON list(inner_statement) new_elseif_list new_else_single T_ENDIF TSEMICOLON [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_EMPTY T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TBANG TBACKQUOTE TANTISLASH LDots EOF ]
## Transitions:
-- On T_SR shift to state 233
-- On T_SL shift to state 244
-- On T_ROCKET shift to state 260
-- On T_LOGICAL_XOR shift to state 270
-- On T_LOGICAL_OR shift to state 298
-- On T_LOGICAL_AND shift to state 272
-- On T_IS_SMALLER_OR_EQUAL shift to state 262
-- On T_IS_NOT_IDENTICAL shift to state 274
-- On T_IS_NOT_EQUAL shift to state 276
-- On T_IS_IDENTICAL shift to state 278
-- On T_IS_GREATER_OR_EQUAL shift to state 264
-- On T_IS_EQUAL shift to state 280
-- On T_INSTANCEOF shift to state 235
-- On T_INC shift to state 237
-- On T_DEC shift to state 238
-- On T_BOOLEAN_OR shift to state 282
-- On T_BOOLEAN_AND shift to state 284
-- On TXOR shift to state 286
-- On TSMALLER shift to state 266
-- On TQUESTION shift to state 292
-- On TPOW shift to state 246
-- On TPLUS shift to state 248
-- On TOR shift to state 290
-- On TMUL shift to state 250
-- On TMOD shift to state 252
-- On TMINUS shift to state 256
-- On TGREATER shift to state 268
-- On TDOT shift to state 258
-- On TDIV shift to state 254
-- On TCPAR shift to state 1088
-- On TAND shift to state 288
## Reductions:

State 1088:
## Known stack suffix:
## T_IF TOPAR expr TCPAR
## LR(1) items:
sgrep_spatch_pattern -> T_IF TOPAR expr TCPAR . EOF [ # ]
statement -> T_IF TOPAR expr TCPAR . statement elseif_list else_single [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_EMPTY T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TBANG TBACKQUOTE TANTISLASH LDots EOF ]
statement -> T_IF TOPAR expr TCPAR . TCOLON list(inner_statement) new_elseif_list new_else_single T_ENDIF TSEMICOLON [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_EMPTY T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TBANG TBACKQUOTE TANTISLASH LDots EOF ]
## Transitions:
-- On T__AT shift to state 1
-- On T_YIELD shift to state 2
-- On T_WHILE shift to state 158
-- On T_VARIABLE shift to state 3
-- On T_USE shift to state 190
-- On T_UNSET_CAST shift to state 5
-- On T_UNSET shift to state 197
-- On T_TYPE shift to state 6
-- On T_TRY shift to state 391
-- On T_TRAIT_C shift to state 7
-- On T_THROW shift to state 520
-- On T_SWITCH shift to state 525
-- On T_SUPER shift to state 8
-- On T_STRING_CAST shift to state 9
-- On T_STATIC shift to state 581
-- On T_START_HEREDOC shift to state 25
-- On T_SELF shift to state 40
-- On T_RETURN shift to state 553
-- On T_REQUIRE_ONCE shift to state 41
-- On T_REQUIRE shift to state 42
-- On T_PRINT shift to state 43
-- On T_PARENT shift to state 44
-- On T_OPEN_TAG_WITH_ECHO shift to state 558
-- On T_OBJECT_CAST shift to state 45
-- On T_NEW shift to state 46
-- On T_NAMESPACE_C shift to state 49
-- On T_NAMESPACE shift to state 50
-- On T_METHOD_C shift to state 58
-- On T_METAVAR shift to state 17
-- On T_LNUMBER shift to state 59
-- On T_LIST shift to state 69
-- On T_LINE shift to state 60
-- On T_LAMBDA_OPAR shift to state 73
-- On T_ISSET shift to state 133
-- On T_INT_CAST shift to state 135
-- On T_INSTANCEOF shift to state 52
-- On T_INLINE_HTML shift to state 576
-- On T_INCLUDE_ONCE shift to state 136
-- On T_INCLUDE shift to state 137
-- On T_INC shift to state 138
-- On T_IF shift to state 577
-- On T_IDENT shift to state 18
-- On T_GLOBAL shift to state 587
-- On T_FUNC_C shift to state 61
-- On T_FUNCTION shift to state 139
-- On T_FOREACH shift to state 600
-- On T_FOR shift to state 624
-- On T_FILE shift to state 62
-- On T_EXIT shift to state 160
-- On T_EVAL shift to state 162
-- On T_ENUM shift to state 19
-- On T_EMPTY shift to state 164
-- On T_ELLIPSIS shift to state 635
-- On T_ECHO shift to state 636
-- On T_DOUBLE_CAST shift to state 168
-- On T_DO shift to state 644
-- On T_DNUMBER shift to state 63
-- On T_DIR shift to state 64
-- On T_DECLARE shift to state 645
-- On T_DEC shift to state 169
-- On T_CONTINUE shift to state 649
-- On T_CONSTANT_ENCAPSED_STRING shift to state 65
-- On T_CLONE shift to state 170
-- On T_CLASS_C shift to state 66
-- On T_BREAK shift to state 652
-- On T_BOOL_CAST shift to state 171
-- On T_AWAIT shift to state 172
-- On T_ASYNC shift to state 173
-- On T_ARRAY_CAST shift to state 200
-- On T_ARRAY shift to state 201
-- On TTILDE shift to state 204
-- On TSEMICOLON shift to state 655
-- On TPLUS shift to state 205
-- On TOPAR shift to state 206
-- On TOBRACE shift to state 656
-- On TOBRA shift to state 209
-- On TMINUS shift to state 210
-- On TGUIL shift to state 211
-- On TDOLLARDOLLAR shift to state 213
-- On TDOLLAR shift to state 214
-- On TCOLON shift to state 803
-- On TBANG shift to state 216
-- On TBACKQUOTE shift to state 217
-- On TANTISLASH shift to state 85
-- On LDots shift to state 222
-- On EOF shift to state 1089
-- On statement shift to state 809
-- On simple_expr shift to state 223
-- On qualified_name shift to state 94
-- On qualified_class_name shift to state 225
-- On primary_expr shift to state 226
-- On new_expr shift to state 227
-- On namespace_name shift to state 102
-- On member_expr shift to state 228
-- On lambda_expr shift to state 231
-- On ident_in_name shift to state 57
-- On ident shift to state 56
-- On expr shift to state 704
-- On constant shift to state 239
-- On call_expr shift to state 240
## Reductions:

State 1089:
## Known stack suffix:
## T_IF TOPAR expr TCPAR EOF
## LR(1) items:
sgrep_spatch_pattern -> T_IF TOPAR expr TCPAR EOF . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, reduce production sgrep_spatch_pattern -> T_IF TOPAR expr TCPAR EOF

State 1090:
## Known stack suffix:
## TCOLON
## LR(1) items:
sgrep_spatch_pattern -> TCOLON . type_php EOF [ # ]
## Transitions:
-- On T_TYPE shift to state 6
-- On T_SUPER shift to state 8
-- On T_SELF shift to state 77
-- On T_PARENT shift to state 78
-- On T_NAMESPACE shift to state 50
-- On T_METAVAR shift to state 17
-- On T_INSTANCEOF shift to state 52
-- On T_IDENT shift to state 18
-- On T_ENUM shift to state 19
-- On T_ARRAY shift to state 79
-- On TQUESTION shift to state 80
-- On TOPAR shift to state 81
-- On TANTISLASH shift to state 85
-- On type_php shift to state 1091
-- On qualified_name shift to state 94
-- On qualified_class_name_or_array shift to state 95
-- On qualified_class_name shift to state 100
-- On primary_type_php shift to state 101
-- On namespace_name shift to state 102
-- On ident_in_name shift to state 57
-- On ident shift to state 56
-- On class_name shift to state 103
## Reductions:

State 1091:
## Known stack suffix:
## TCOLON type_php
## LR(1) items:
sgrep_spatch_pattern -> TCOLON type_php . EOF [ # ]
type_php -> type_php . TCOLCOL primary_type_php [ TCOLCOL EOF ]
## Transitions:
-- On TCOLCOL shift to state 93
-- On EOF shift to state 1092
## Reductions:

State 1092:
## Known stack suffix:
## TCOLON type_php EOF
## LR(1) items:
sgrep_spatch_pattern -> TCOLON type_php EOF . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, reduce production sgrep_spatch_pattern -> TCOLON type_php EOF

State 1093:
## Known stack suffix:
## top_statement
## LR(1) items:
sgrep_spatch_pattern -> top_statement . EOF [ # ]
sgrep_spatch_pattern -> top_statement . nonempty_list(top_statement) EOF [ # ]
## Transitions:
-- On T__AT shift to state 1
-- On T_YIELD shift to state 2
-- On T_WHILE shift to state 158
-- On T_VARIABLE shift to state 3
-- On T_USE shift to state 1013
-- On T_UNSET_CAST shift to state 5
-- On T_UNSET shift to state 197
-- On T_TYPE shift to state 1043
-- On T_TRY shift to state 391
-- On T_TRAIT_C shift to state 7
-- On T_TRAIT shift to state 393
-- On T_THROW shift to state 520
-- On T_SWITCH shift to state 525
-- On T_SUPER shift to state 8
-- On T_STRING_CAST shift to state 9
-- On T_STATIC shift to state 536
-- On T_START_HEREDOC shift to state 25
-- On T_SL shift to state 16
-- On T_SELF shift to state 40
-- On T_RETURN shift to state 553
-- On T_REQUIRE_ONCE shift to state 41
-- On T_REQUIRE shift to state 42
-- On T_PRINT shift to state 43
-- On T_PARENT shift to state 44
-- On T_OPEN_TAG_WITH_ECHO shift to state 558
-- On T_OBJECT_CAST shift to state 45
-- On T_NEW shift to state 46
-- On T_NAMESPACE_C shift to state 49
-- On T_NAMESPACE shift to state 1050
-- On T_METHOD_C shift to state 58
-- On T_METAVAR shift to state 17
-- On T_LNUMBER shift to state 59
-- On T_LIST shift to state 69
-- On T_LINE shift to state 60
-- On T_LAMBDA_OPAR shift to state 73
-- On T_ISSET shift to state 133
-- On T_INT_CAST shift to state 135
-- On T_INTERFACE shift to state 563
-- On T_INSTANCEOF shift to state 52
-- On T_INLINE_HTML shift to state 576
-- On T_INCLUDE_ONCE shift to state 136
-- On T_INCLUDE shift to state 137
-- On T_INC shift to state 138
-- On T_IF shift to state 577
-- On T_IDENT shift to state 18
-- On T_GLOBAL shift to state 587
-- On T_FUNC_C shift to state 61
-- On T_FUNCTION shift to state 657
-- On T_FOREACH shift to state 600
-- On T_FOR shift to state 624
-- On T_FINAL shift to state 666
-- On T_FILE shift to state 62
-- On T_EXIT shift to state 160
-- On T_EVAL shift to state 162
-- On T_ENUM shift to state 668
-- On T_EMPTY shift to state 164
-- On T_ELLIPSIS shift to state 635
-- On T_ECHO shift to state 636
-- On T_DOUBLE_CAST shift to state 168
-- On T_DO shift to state 644
-- On T_DNUMBER shift to state 63
-- On T_DIR shift to state 64
-- On T_DECLARE shift to state 645
-- On T_DEC shift to state 169
-- On T_CONTINUE shift to state 649
-- On T_CONSTANT_ENCAPSED_STRING shift to state 65
-- On T_CONST shift to state 1052
-- On T_CLONE shift to state 170
-- On T_CLASS_C shift to state 66
-- On T_CLASS shift to state 682
-- On T_BREAK shift to state 652
-- On T_BOOL_CAST shift to state 171
-- On T_AWAIT shift to state 172
-- On T_ASYNC shift to state 683
-- On T_ARRAY_CAST shift to state 200
-- On T_ARRAY shift to state 201
-- On T_ABSTRACT shift to state 694
-- On TTILDE shift to state 204
-- On TSEMICOLON shift to state 655
-- On TPLUS shift to state 205
-- On TOPAR shift to state 206
-- On TOBRACE shift to state 656
-- On TOBRA shift to state 209
-- On TMINUS shift to state 210
-- On TGUIL shift to state 211
-- On TDOLLARDOLLAR shift to state 213
-- On TDOLLAR shift to state 214
-- On TBANG shift to state 216
-- On TBACKQUOTE shift to state 217
-- On TANTISLASH shift to state 85
-- On LDots shift to state 222
-- On EOF shift to state 1094
-- On unticked_function_declaration shift to state 696
-- On unticked_class_declaration shift to state 697
-- On type_declaration shift to state 1062
-- On top_statement shift to state 1095
-- On statement shift to state 1064
-- On simple_expr shift to state 223
-- On qualified_name shift to state 94
-- On qualified_class_name shift to state 225
-- On primary_expr shift to state 226
-- On nonempty_list(top_statement) shift to state 1097
-- On new_expr shift to state 227
-- On namespace_use_declaration shift to state 1065
-- On namespace_name shift to state 102
-- On namespace_declaration shift to state 1066
-- On member_expr shift to state 228
-- On lambda_expr shift to state 231
-- On ident_in_name shift to state 57
-- On ident shift to state 56
-- On function_declaration shift to state 1068
-- On expr shift to state 704
-- On constant_declaration shift to state 1069
-- On constant shift to state 239
-- On class_entry_type shift to state 706
-- On class_declaration shift to state 1070
-- On call_expr shift to state 240
-- On attributes shift to state 717
## Reductions:

State 1094:
## Known stack suffix:
## top_statement EOF
## LR(1) items:
sgrep_spatch_pattern -> top_statement EOF . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, reduce production sgrep_spatch_pattern -> top_statement EOF

State 1095:
## Known stack suffix:
## top_statement
## LR(1) items:
nonempty_list(top_statement) -> top_statement . [ EOF ]
nonempty_list(top_statement) -> top_statement . nonempty_list(top_statement) [ EOF ]
## Transitions:
-- On T__AT shift to state 1
-- On T_YIELD shift to state 2
-- On T_WHILE shift to state 158
-- On T_VARIABLE shift to state 3
-- On T_USE shift to state 1013
-- On T_UNSET_CAST shift to state 5
-- On T_UNSET shift to state 197
-- On T_TYPE shift to state 1043
-- On T_TRY shift to state 391
-- On T_TRAIT_C shift to state 7
-- On T_TRAIT shift to state 393
-- On T_THROW shift to state 520
-- On T_SWITCH shift to state 525
-- On T_SUPER shift to state 8
-- On T_STRING_CAST shift to state 9
-- On T_STATIC shift to state 536
-- On T_START_HEREDOC shift to state 25
-- On T_SL shift to state 16
-- On T_SELF shift to state 40
-- On T_RETURN shift to state 553
-- On T_REQUIRE_ONCE shift to state 41
-- On T_REQUIRE shift to state 42
-- On T_PRINT shift to state 43
-- On T_PARENT shift to state 44
-- On T_OPEN_TAG_WITH_ECHO shift to state 558
-- On T_OBJECT_CAST shift to state 45
-- On T_NEW shift to state 46
-- On T_NAMESPACE_C shift to state 49
-- On T_NAMESPACE shift to state 1050
-- On T_METHOD_C shift to state 58
-- On T_METAVAR shift to state 17
-- On T_LNUMBER shift to state 59
-- On T_LIST shift to state 69
-- On T_LINE shift to state 60
-- On T_LAMBDA_OPAR shift to state 73
-- On T_ISSET shift to state 133
-- On T_INT_CAST shift to state 135
-- On T_INTERFACE shift to state 563
-- On T_INSTANCEOF shift to state 52
-- On T_INLINE_HTML shift to state 576
-- On T_INCLUDE_ONCE shift to state 136
-- On T_INCLUDE shift to state 137
-- On T_INC shift to state 138
-- On T_IF shift to state 577
-- On T_IDENT shift to state 18
-- On T_GLOBAL shift to state 587
-- On T_FUNC_C shift to state 61
-- On T_FUNCTION shift to state 657
-- On T_FOREACH shift to state 600
-- On T_FOR shift to state 624
-- On T_FINAL shift to state 666
-- On T_FILE shift to state 62
-- On T_EXIT shift to state 160
-- On T_EVAL shift to state 162
-- On T_ENUM shift to state 668
-- On T_EMPTY shift to state 164
-- On T_ELLIPSIS shift to state 635
-- On T_ECHO shift to state 636
-- On T_DOUBLE_CAST shift to state 168
-- On T_DO shift to state 644
-- On T_DNUMBER shift to state 63
-- On T_DIR shift to state 64
-- On T_DECLARE shift to state 645
-- On T_DEC shift to state 169
-- On T_CONTINUE shift to state 649
-- On T_CONSTANT_ENCAPSED_STRING shift to state 65
-- On T_CONST shift to state 1052
-- On T_CLONE shift to state 170
-- On T_CLASS_C shift to state 66
-- On T_CLASS shift to state 682
-- On T_BREAK shift to state 652
-- On T_BOOL_CAST shift to state 171
-- On T_AWAIT shift to state 172
-- On T_ASYNC shift to state 683
-- On T_ARRAY_CAST shift to state 200
-- On T_ARRAY shift to state 201
-- On T_ABSTRACT shift to state 694
-- On TTILDE shift to state 204
-- On TSEMICOLON shift to state 655
-- On TPLUS shift to state 205
-- On TOPAR shift to state 206
-- On TOBRACE shift to state 656
-- On TOBRA shift to state 209
-- On TMINUS shift to state 210
-- On TGUIL shift to state 211
-- On TDOLLARDOLLAR shift to state 213
-- On TDOLLAR shift to state 214
-- On TBANG shift to state 216
-- On TBACKQUOTE shift to state 217
-- On TANTISLASH shift to state 85
-- On LDots shift to state 222
-- On unticked_function_declaration shift to state 696
-- On unticked_class_declaration shift to state 697
-- On type_declaration shift to state 1062
-- On top_statement shift to state 1095
-- On statement shift to state 1064
-- On simple_expr shift to state 223
-- On qualified_name shift to state 94
-- On qualified_class_name shift to state 225
-- On primary_expr shift to state 226
-- On nonempty_list(top_statement) shift to state 1096
-- On new_expr shift to state 227
-- On namespace_use_declaration shift to state 1065
-- On namespace_name shift to state 102
-- On namespace_declaration shift to state 1066
-- On member_expr shift to state 228
-- On lambda_expr shift to state 231
-- On ident_in_name shift to state 57
-- On ident shift to state 56
-- On function_declaration shift to state 1068
-- On expr shift to state 704
-- On constant_declaration shift to state 1069
-- On constant shift to state 239
-- On class_entry_type shift to state 706
-- On class_declaration shift to state 1070
-- On call_expr shift to state 240
-- On attributes shift to state 717
## Reductions:
-- On EOF
--   reduce production nonempty_list(top_statement) -> top_statement

State 1096:
## Known stack suffix:
## top_statement nonempty_list(top_statement)
## LR(1) items:
nonempty_list(top_statement) -> top_statement nonempty_list(top_statement) . [ EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production nonempty_list(top_statement) -> top_statement nonempty_list(top_statement)

State 1097:
## Known stack suffix:
## top_statement nonempty_list(top_statement)
## LR(1) items:
sgrep_spatch_pattern -> top_statement nonempty_list(top_statement) . EOF [ # ]
## Transitions:
-- On EOF shift to state 1098
## Reductions:

State 1098:
## Known stack suffix:
## top_statement nonempty_list(top_statement) EOF
## LR(1) items:
sgrep_spatch_pattern -> top_statement nonempty_list(top_statement) EOF . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, reduce production sgrep_spatch_pattern -> top_statement nonempty_list(top_statement) EOF

State 1099:
## Known stack suffix:
## sgrep_spatch_pattern
## LR(1) items:
sgrep_spatch_pattern' -> sgrep_spatch_pattern . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, accept sgrep_spatch_pattern

State 1100:
## Known stack suffix:
## expr
## LR(1) items:
expr -> expr . T_INC [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TAND EOF ]
expr -> expr . T_DEC [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TAND EOF ]
expr -> expr . T_BOOLEAN_OR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TAND EOF ]
expr -> expr . T_BOOLEAN_AND expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TAND EOF ]
expr -> expr . T_LOGICAL_OR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TAND EOF ]
expr -> expr . T_LOGICAL_AND expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TAND EOF ]
expr -> expr . T_LOGICAL_XOR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TAND EOF ]
expr -> expr . TPLUS expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TAND EOF ]
expr -> expr . TMINUS expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TAND EOF ]
expr -> expr . TMUL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TAND EOF ]
expr -> expr . TDIV expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TAND EOF ]
expr -> expr . TMOD expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TAND EOF ]
expr -> expr . TPOW expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TAND EOF ]
expr -> expr . TAND expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TAND EOF ]
expr -> expr . TOR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TAND EOF ]
expr -> expr . TXOR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TAND EOF ]
expr -> expr . T_SL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TAND EOF ]
expr -> expr . T_SR expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TAND EOF ]
expr -> expr . TDOT expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TAND EOF ]
expr -> expr . T_IS_IDENTICAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TAND EOF ]
expr -> expr . T_IS_NOT_IDENTICAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TAND EOF ]
expr -> expr . T_IS_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TAND EOF ]
expr -> expr . T_IS_NOT_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TAND EOF ]
expr -> expr . TSMALLER expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TAND EOF ]
expr -> expr . T_IS_SMALLER_OR_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TAND EOF ]
expr -> expr . TGREATER expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TAND EOF ]
expr -> expr . T_IS_GREATER_OR_EQUAL expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TAND EOF ]
expr -> expr . T_ROCKET expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TAND EOF ]
expr -> expr . TQUESTION expr TCOLON expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TAND EOF ]
expr -> expr . TQUESTION TCOLON expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TAND EOF ]
expr -> expr . TQUESTION TQUESTION expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TAND EOF ]
expr -> expr . T_INSTANCEOF expr [ T_SR T_SL T_ROCKET T_LOGICAL_XOR T_LOGICAL_OR T_LOGICAL_AND T_IS_SMALLER_OR_EQUAL T_IS_NOT_IDENTICAL T_IS_NOT_EQUAL T_IS_IDENTICAL T_IS_GREATER_OR_EQUAL T_IS_EQUAL T_INSTANCEOF T_INC T_DEC T_BOOLEAN_OR T_BOOLEAN_AND TXOR TSMALLER TSEMICOLON TQUESTION TPOW TPLUS TOR TMUL TMOD TMINUS TGREATER TDOT TDIV TAND EOF ]
sgrep_spatch_pattern -> expr . EOF [ # ]
statement -> expr . TSEMICOLON [ T__AT T_YIELD T_WHILE T_VARIABLE T_USE T_UNSET_CAST T_UNSET T_TYPE T_TRY T_TRAIT_C T_TRAIT T_THROW T_SWITCH T_SUPER T_STRING_CAST T_STATIC T_START_HEREDOC T_SL T_SELF T_RETURN T_REQUIRE_ONCE T_REQUIRE T_PRINT T_PARENT T_OPEN_TAG_WITH_ECHO T_OBJECT_CAST T_NEW T_NAMESPACE_C T_NAMESPACE T_METHOD_C T_METAVAR T_LNUMBER T_LIST T_LINE T_LAMBDA_OPAR T_ISSET T_INT_CAST T_INTERFACE T_INSTANCEOF T_INLINE_HTML T_INCLUDE_ONCE T_INCLUDE T_INC T_IF T_IDENT T_GLOBAL T_FUNC_C T_FUNCTION T_FOREACH T_FOR T_FINAL T_FILE T_EXIT T_EVAL T_ENUM T_EMPTY T_ELLIPSIS T_ECHO T_DOUBLE_CAST T_DO T_DNUMBER T_DIR T_DECLARE T_DEC T_CONTINUE T_CONSTANT_ENCAPSED_STRING T_CONST T_CLONE T_CLASS_C T_CLASS T_BREAK T_BOOL_CAST T_AWAIT T_ASYNC T_ARRAY_CAST T_ARRAY T_ABSTRACT TTILDE TSEMICOLON TPLUS TOPAR TOBRACE TOBRA TMINUS TGUIL TDOLLARDOLLAR TDOLLAR TBANG TBACKQUOTE TANTISLASH LDots EOF ]
## Transitions:
-- On T_SR shift to state 233
-- On T_SL shift to state 244
-- On T_ROCKET shift to state 260
-- On T_LOGICAL_XOR shift to state 270
-- On T_LOGICAL_OR shift to state 298
-- On T_LOGICAL_AND shift to state 272
-- On T_IS_SMALLER_OR_EQUAL shift to state 262
-- On T_IS_NOT_IDENTICAL shift to state 274
-- On T_IS_NOT_EQUAL shift to state 276
-- On T_IS_IDENTICAL shift to state 278
-- On T_IS_GREATER_OR_EQUAL shift to state 264
-- On T_IS_EQUAL shift to state 280
-- On T_INSTANCEOF shift to state 235
-- On T_INC shift to state 237
-- On T_DEC shift to state 238
-- On T_BOOLEAN_OR shift to state 282
-- On T_BOOLEAN_AND shift to state 284
-- On TXOR shift to state 286
-- On TSMALLER shift to state 266
-- On TSEMICOLON shift to state 705
-- On TQUESTION shift to state 292
-- On TPOW shift to state 246
-- On TPLUS shift to state 248
-- On TOR shift to state 290
-- On TMUL shift to state 250
-- On TMOD shift to state 252
-- On TMINUS shift to state 256
-- On TGREATER shift to state 268
-- On TDOT shift to state 258
-- On TDIV shift to state 254
-- On TAND shift to state 288
-- On EOF shift to state 1101
## Reductions:

State 1101:
## Known stack suffix:
## expr EOF
## LR(1) items:
sgrep_spatch_pattern -> expr EOF . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, reduce production sgrep_spatch_pattern -> expr EOF

