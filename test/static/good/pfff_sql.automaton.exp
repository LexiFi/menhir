State 0:
## Known stack suffix:
##
## LR(1) items:
main' -> . main [ # ]
## Transitions:
-- On T_UPDATE shift to state 1
-- On T_SELECT shift to state 206
-- On T_ROLLBACK shift to state 210
-- On T_INSERT shift to state 211
-- On T_DELETE shift to state 258
-- On T_COMMIT shift to state 263
-- On T_BEGIN shift to state 264
-- On TOPAR shift to state 265
-- On update_statement_searched shift to state 268
-- On toplevel shift to state 269
-- On select_statement shift to state 271
-- On main shift to state 272
-- On insert_statement shift to state 273
-- On delete_statement_searched shift to state 274
## Reductions:

State 1:
## Known stack suffix:
## T_UPDATE
## LR(1) items:
update_statement_searched -> T_UPDATE . table T_SET assignment_list where_clause_opt memcache_opt [ EOF ]
## Transitions:
-- On T_NAME shift to state 2
-- On table shift to state 9
-- On q_table_name shift to state 167
## Reductions:

State 2:
## Known stack suffix:
## T_NAME
## LR(1) items:
q_table_name -> T_NAME . [ T_WHERE T_VALUES T_UNION T_SET T_SELECT T_ORDER T_ON T_NAME T_MEMCACHE_DIRTY T_LIMIT T_LEFT T_AS TOPAR TCPAR TCOMMA EOF ]
q_table_name -> T_NAME . TDOT T_NAME [ T_WHERE T_VALUES T_UNION T_SET T_SELECT T_ORDER T_ON T_NAME T_MEMCACHE_DIRTY T_LIMIT T_LEFT T_AS TOPAR TCPAR TCOMMA EOF ]
q_table_name -> T_NAME . TDOT T_NAME TDOT T_NAME [ T_WHERE T_VALUES T_UNION T_SET T_SELECT T_ORDER T_ON T_NAME T_MEMCACHE_DIRTY T_LIMIT T_LEFT T_AS TOPAR TCPAR TCOMMA EOF ]
q_table_name -> T_NAME . TDOT TDOT T_NAME [ T_WHERE T_VALUES T_UNION T_SET T_SELECT T_ORDER T_ON T_NAME T_MEMCACHE_DIRTY T_LIMIT T_LEFT T_AS TOPAR TCPAR TCOMMA EOF ]
## Transitions:
-- On TDOT shift to state 3
## Reductions:
-- On T_WHERE T_VALUES T_UNION T_SET T_SELECT T_ORDER T_ON T_NAME T_MEMCACHE_DIRTY T_LIMIT T_LEFT T_AS TOPAR TCPAR TCOMMA EOF
--   reduce production q_table_name -> T_NAME

State 3:
## Known stack suffix:
## T_NAME TDOT
## LR(1) items:
q_table_name -> T_NAME TDOT . T_NAME [ T_WHERE T_VALUES T_UNION T_SET T_SELECT T_ORDER T_ON T_NAME T_MEMCACHE_DIRTY T_LIMIT T_LEFT T_AS TOPAR TCPAR TCOMMA EOF ]
q_table_name -> T_NAME TDOT . T_NAME TDOT T_NAME [ T_WHERE T_VALUES T_UNION T_SET T_SELECT T_ORDER T_ON T_NAME T_MEMCACHE_DIRTY T_LIMIT T_LEFT T_AS TOPAR TCPAR TCOMMA EOF ]
q_table_name -> T_NAME TDOT . TDOT T_NAME [ T_WHERE T_VALUES T_UNION T_SET T_SELECT T_ORDER T_ON T_NAME T_MEMCACHE_DIRTY T_LIMIT T_LEFT T_AS TOPAR TCPAR TCOMMA EOF ]
## Transitions:
-- On T_NAME shift to state 4
-- On TDOT shift to state 7
## Reductions:

State 4:
## Known stack suffix:
## T_NAME TDOT T_NAME
## LR(1) items:
q_table_name -> T_NAME TDOT T_NAME . [ T_WHERE T_VALUES T_UNION T_SET T_SELECT T_ORDER T_ON T_NAME T_MEMCACHE_DIRTY T_LIMIT T_LEFT T_AS TOPAR TCPAR TCOMMA EOF ]
q_table_name -> T_NAME TDOT T_NAME . TDOT T_NAME [ T_WHERE T_VALUES T_UNION T_SET T_SELECT T_ORDER T_ON T_NAME T_MEMCACHE_DIRTY T_LIMIT T_LEFT T_AS TOPAR TCPAR TCOMMA EOF ]
## Transitions:
-- On TDOT shift to state 5
## Reductions:
-- On T_WHERE T_VALUES T_UNION T_SET T_SELECT T_ORDER T_ON T_NAME T_MEMCACHE_DIRTY T_LIMIT T_LEFT T_AS TOPAR TCPAR TCOMMA EOF
--   reduce production q_table_name -> T_NAME TDOT T_NAME

State 5:
## Known stack suffix:
## T_NAME TDOT T_NAME TDOT
## LR(1) items:
q_table_name -> T_NAME TDOT T_NAME TDOT . T_NAME [ T_WHERE T_VALUES T_UNION T_SET T_SELECT T_ORDER T_ON T_NAME T_MEMCACHE_DIRTY T_LIMIT T_LEFT T_AS TOPAR TCPAR TCOMMA EOF ]
## Transitions:
-- On T_NAME shift to state 6
## Reductions:

State 6:
## Known stack suffix:
## T_NAME TDOT T_NAME TDOT T_NAME
## LR(1) items:
q_table_name -> T_NAME TDOT T_NAME TDOT T_NAME . [ T_WHERE T_VALUES T_UNION T_SET T_SELECT T_ORDER T_ON T_NAME T_MEMCACHE_DIRTY T_LIMIT T_LEFT T_AS TOPAR TCPAR TCOMMA EOF ]
## Transitions:
## Reductions:
-- On T_WHERE T_VALUES T_UNION T_SET T_SELECT T_ORDER T_ON T_NAME T_MEMCACHE_DIRTY T_LIMIT T_LEFT T_AS TOPAR TCPAR TCOMMA EOF
--   reduce production q_table_name -> T_NAME TDOT T_NAME TDOT T_NAME

State 7:
## Known stack suffix:
## T_NAME TDOT TDOT
## LR(1) items:
q_table_name -> T_NAME TDOT TDOT . T_NAME [ T_WHERE T_VALUES T_UNION T_SET T_SELECT T_ORDER T_ON T_NAME T_MEMCACHE_DIRTY T_LIMIT T_LEFT T_AS TOPAR TCPAR TCOMMA EOF ]
## Transitions:
-- On T_NAME shift to state 8
## Reductions:

State 8:
## Known stack suffix:
## T_NAME TDOT TDOT T_NAME
## LR(1) items:
q_table_name -> T_NAME TDOT TDOT T_NAME . [ T_WHERE T_VALUES T_UNION T_SET T_SELECT T_ORDER T_ON T_NAME T_MEMCACHE_DIRTY T_LIMIT T_LEFT T_AS TOPAR TCPAR TCOMMA EOF ]
## Transitions:
## Reductions:
-- On T_WHERE T_VALUES T_UNION T_SET T_SELECT T_ORDER T_ON T_NAME T_MEMCACHE_DIRTY T_LIMIT T_LEFT T_AS TOPAR TCPAR TCOMMA EOF
--   reduce production q_table_name -> T_NAME TDOT TDOT T_NAME

State 9:
## Known stack suffix:
## T_UPDATE table
## LR(1) items:
update_statement_searched -> T_UPDATE table . T_SET assignment_list where_clause_opt memcache_opt [ EOF ]
## Transitions:
-- On T_SET shift to state 10
## Reductions:

State 10:
## Known stack suffix:
## T_UPDATE table T_SET
## LR(1) items:
update_statement_searched -> T_UPDATE table T_SET . assignment_list where_clause_opt memcache_opt [ EOF ]
## Transitions:
-- On T_NAME shift to state 11
-- On column shift to state 12
-- On assignment_list shift to state 74
-- On assignment shift to state 205
## Reductions:

State 11:
## Known stack suffix:
## T_NAME
## LR(1) items:
column -> T_NAME . [ T_COMPARISON TCPAR TCOMMA ]
## Transitions:
## Reductions:
-- On T_COMPARISON TCPAR TCOMMA
--   reduce production column -> T_NAME

State 12:
## Known stack suffix:
## column
## LR(1) items:
assignment -> column . T_COMPARISON scalar_exp [ T_WHERE T_MEMCACHE_DIRTY TCOMMA EOF ]
## Transitions:
-- On T_COMPARISON shift to state 13
## Reductions:

State 13:
## Known stack suffix:
## column T_COMPARISON
## LR(1) items:
assignment -> column T_COMPARISON . scalar_exp [ T_WHERE T_MEMCACHE_DIRTY TCOMMA EOF ]
## Transitions:
-- On T_STRING shift to state 14
-- On T_NULLX shift to state 15
-- On T_NAME shift to state 16
-- On T_INTNUM shift to state 31
-- On T_DNUMBER shift to state 32
-- On TPLUS shift to state 33
-- On TOPNOT shift to state 34
-- On TOPNEG shift to state 35
-- On TOPAR shift to state 36
-- On TMUL shift to state 37
-- On TMINUS shift to state 38
-- On APPROXNUM shift to state 39
-- On scalar_exp shift to state 73
-- On q_table_name shift to state 41
-- On literal shift to state 54
-- On function_call shift to state 55
-- On column_ref shift to state 56
-- On atom shift to state 57
-- On as_expression shift to state 58
## Reductions:

State 14:
## Known stack suffix:
## T_STRING
## LR(1) items:
literal -> T_STRING . [ T_WHERE T_UNION T_ORDER T_OR T_ON T_NOT T_MEMCACHE_DIRTY T_LIMIT T_LIKE T_LEFT T_IN T_FROM T_COMPARISON T_AS T_AND TPLUS TOPOR TOPAND TMUL TMINUS TDIV TCPAR TCOMMA EOF ]
## Transitions:
## Reductions:
-- On T_WHERE T_UNION T_ORDER T_OR T_ON T_NOT T_MEMCACHE_DIRTY T_LIMIT T_LIKE T_LEFT T_IN T_FROM T_COMPARISON T_AS T_AND TPLUS TOPOR TOPAND TMUL TMINUS TDIV TCPAR TCOMMA EOF
--   reduce production literal -> T_STRING

State 15:
## Known stack suffix:
## T_NULLX
## LR(1) items:
literal -> T_NULLX . [ T_WHERE T_UNION T_ORDER T_OR T_ON T_NOT T_MEMCACHE_DIRTY T_LIMIT T_LIKE T_LEFT T_IN T_FROM T_COMPARISON T_AS T_AND TPLUS TOPOR TOPAND TMUL TMINUS TDIV TCPAR TCOMMA EOF ]
## Transitions:
## Reductions:
-- On T_WHERE T_UNION T_ORDER T_OR T_ON T_NOT T_MEMCACHE_DIRTY T_LIMIT T_LIKE T_LEFT T_IN T_FROM T_COMPARISON T_AS T_AND TPLUS TOPOR TOPAND TMUL TMINUS TDIV TCPAR TCOMMA EOF
--   reduce production literal -> T_NULLX

State 16:
## Known stack suffix:
## T_NAME
## LR(1) items:
column_ref -> T_NAME . [ T_WHERE T_UNION T_ORDER T_OR T_ON T_NOT T_MEMCACHE_DIRTY T_LIMIT T_LIKE T_LEFT T_IN T_FROM T_COMPARISON T_AS T_AND TPLUS TOPOR TOPAND TMUL TMINUS TDIV TCPAR TCOMMA EOF ]
column_ref -> T_NAME . TDOT T_NAME [ T_WHERE T_UNION T_ORDER T_OR T_ON T_NOT T_MEMCACHE_DIRTY T_LIMIT T_LIKE T_LEFT T_IN T_FROM T_COMPARISON T_AS T_AND TPLUS TOPOR TOPAND TMUL TMINUS TDIV TCPAR TCOMMA EOF ]
column_ref -> T_NAME . TDOT T_NAME TDOT T_NAME [ T_WHERE T_UNION T_ORDER T_OR T_ON T_NOT T_MEMCACHE_DIRTY T_LIMIT T_LIKE T_LEFT T_IN T_FROM T_COMPARISON T_AS T_AND TPLUS TOPOR TOPAND TMUL TMINUS TDIV TCPAR TCOMMA EOF ]
column_ref -> T_NAME . TDOT T_NAME TDOT T_NAME TDOT T_NAME [ T_WHERE T_UNION T_ORDER T_OR T_ON T_NOT T_MEMCACHE_DIRTY T_LIMIT T_LIKE T_LEFT T_IN T_FROM T_COMPARISON T_AS T_AND TPLUS TOPOR TOPAND TMUL TMINUS TDIV TCPAR TCOMMA EOF ]
column_ref -> T_NAME . TDOT TDOT T_NAME TDOT T_NAME [ T_WHERE T_UNION T_ORDER T_OR T_ON T_NOT T_MEMCACHE_DIRTY T_LIMIT T_LIKE T_LEFT T_IN T_FROM T_COMPARISON T_AS T_AND TPLUS TOPOR TOPAND TMUL TMINUS TDIV TCPAR TCOMMA EOF ]
column_ref -> T_NAME . TDOT TMUL [ T_WHERE T_UNION T_ORDER T_OR T_ON T_NOT T_MEMCACHE_DIRTY T_LIMIT T_LIKE T_LEFT T_IN T_FROM T_COMPARISON T_AS T_AND TPLUS TOPOR TOPAND TMUL TMINUS TDIV TCPAR TCOMMA EOF ]
column_ref -> T_NAME . TDOT T_NAME TDOT TMUL [ T_WHERE T_UNION T_ORDER T_OR T_ON T_NOT T_MEMCACHE_DIRTY T_LIMIT T_LIKE T_LEFT T_IN T_FROM T_COMPARISON T_AS T_AND TPLUS TOPOR TOPAND TMUL TMINUS TDIV TCPAR TCOMMA EOF ]
column_ref -> T_NAME . TDOT T_NAME TDOT T_NAME TDOT TMUL [ T_WHERE T_UNION T_ORDER T_OR T_ON T_NOT T_MEMCACHE_DIRTY T_LIMIT T_LIKE T_LEFT T_IN T_FROM T_COMPARISON T_AS T_AND TPLUS TOPOR TOPAND TMUL TMINUS TDIV TCPAR TCOMMA EOF ]
column_ref -> T_NAME . TDOT TDOT T_NAME TDOT TMUL [ T_WHERE T_UNION T_ORDER T_OR T_ON T_NOT T_MEMCACHE_DIRTY T_LIMIT T_LIKE T_LEFT T_IN T_FROM T_COMPARISON T_AS T_AND TPLUS TOPOR TOPAND TMUL TMINUS TDIV TCPAR TCOMMA EOF ]
q_table_name -> T_NAME . [ TOPAR ]
q_table_name -> T_NAME . TDOT T_NAME [ TOPAR ]
q_table_name -> T_NAME . TDOT T_NAME TDOT T_NAME [ TOPAR ]
q_table_name -> T_NAME . TDOT TDOT T_NAME [ TOPAR ]
## Transitions:
-- On TDOT shift to state 17
## Reductions:
-- On T_WHERE T_UNION T_ORDER T_OR T_ON T_NOT T_MEMCACHE_DIRTY T_LIMIT T_LIKE T_LEFT T_IN T_FROM T_COMPARISON T_AS T_AND TPLUS TOPOR TOPAND TMUL TMINUS TDIV TCPAR TCOMMA EOF
--   reduce production column_ref -> T_NAME
-- On TOPAR
--   reduce production q_table_name -> T_NAME

State 17:
## Known stack suffix:
## T_NAME TDOT
## LR(1) items:
column_ref -> T_NAME TDOT . T_NAME [ T_WHERE T_UNION T_ORDER T_OR T_ON T_NOT T_MEMCACHE_DIRTY T_LIMIT T_LIKE T_LEFT T_IN T_FROM T_COMPARISON T_AS T_AND TPLUS TOPOR TOPAND TMUL TMINUS TDIV TCPAR TCOMMA EOF ]
column_ref -> T_NAME TDOT . T_NAME TDOT T_NAME [ T_WHERE T_UNION T_ORDER T_OR T_ON T_NOT T_MEMCACHE_DIRTY T_LIMIT T_LIKE T_LEFT T_IN T_FROM T_COMPARISON T_AS T_AND TPLUS TOPOR TOPAND TMUL TMINUS TDIV TCPAR TCOMMA EOF ]
column_ref -> T_NAME TDOT . T_NAME TDOT T_NAME TDOT T_NAME [ T_WHERE T_UNION T_ORDER T_OR T_ON T_NOT T_MEMCACHE_DIRTY T_LIMIT T_LIKE T_LEFT T_IN T_FROM T_COMPARISON T_AS T_AND TPLUS TOPOR TOPAND TMUL TMINUS TDIV TCPAR TCOMMA EOF ]
column_ref -> T_NAME TDOT . TDOT T_NAME TDOT T_NAME [ T_WHERE T_UNION T_ORDER T_OR T_ON T_NOT T_MEMCACHE_DIRTY T_LIMIT T_LIKE T_LEFT T_IN T_FROM T_COMPARISON T_AS T_AND TPLUS TOPOR TOPAND TMUL TMINUS TDIV TCPAR TCOMMA EOF ]
column_ref -> T_NAME TDOT . TMUL [ T_WHERE T_UNION T_ORDER T_OR T_ON T_NOT T_MEMCACHE_DIRTY T_LIMIT T_LIKE T_LEFT T_IN T_FROM T_COMPARISON T_AS T_AND TPLUS TOPOR TOPAND TMUL TMINUS TDIV TCPAR TCOMMA EOF ]
column_ref -> T_NAME TDOT . T_NAME TDOT TMUL [ T_WHERE T_UNION T_ORDER T_OR T_ON T_NOT T_MEMCACHE_DIRTY T_LIMIT T_LIKE T_LEFT T_IN T_FROM T_COMPARISON T_AS T_AND TPLUS TOPOR TOPAND TMUL TMINUS TDIV TCPAR TCOMMA EOF ]
column_ref -> T_NAME TDOT . T_NAME TDOT T_NAME TDOT TMUL [ T_WHERE T_UNION T_ORDER T_OR T_ON T_NOT T_MEMCACHE_DIRTY T_LIMIT T_LIKE T_LEFT T_IN T_FROM T_COMPARISON T_AS T_AND TPLUS TOPOR TOPAND TMUL TMINUS TDIV TCPAR TCOMMA EOF ]
column_ref -> T_NAME TDOT . TDOT T_NAME TDOT TMUL [ T_WHERE T_UNION T_ORDER T_OR T_ON T_NOT T_MEMCACHE_DIRTY T_LIMIT T_LIKE T_LEFT T_IN T_FROM T_COMPARISON T_AS T_AND TPLUS TOPOR TOPAND TMUL TMINUS TDIV TCPAR TCOMMA EOF ]
q_table_name -> T_NAME TDOT . T_NAME [ TOPAR ]
q_table_name -> T_NAME TDOT . T_NAME TDOT T_NAME [ TOPAR ]
q_table_name -> T_NAME TDOT . TDOT T_NAME [ TOPAR ]
## Transitions:
-- On T_NAME shift to state 18
-- On TMUL shift to state 25
-- On TDOT shift to state 26
## Reductions:

State 18:
## Known stack suffix:
## T_NAME TDOT T_NAME
## LR(1) items:
column_ref -> T_NAME TDOT T_NAME . [ T_WHERE T_UNION T_ORDER T_OR T_ON T_NOT T_MEMCACHE_DIRTY T_LIMIT T_LIKE T_LEFT T_IN T_FROM T_COMPARISON T_AS T_AND TPLUS TOPOR TOPAND TMUL TMINUS TDIV TCPAR TCOMMA EOF ]
column_ref -> T_NAME TDOT T_NAME . TDOT T_NAME [ T_WHERE T_UNION T_ORDER T_OR T_ON T_NOT T_MEMCACHE_DIRTY T_LIMIT T_LIKE T_LEFT T_IN T_FROM T_COMPARISON T_AS T_AND TPLUS TOPOR TOPAND TMUL TMINUS TDIV TCPAR TCOMMA EOF ]
column_ref -> T_NAME TDOT T_NAME . TDOT T_NAME TDOT T_NAME [ T_WHERE T_UNION T_ORDER T_OR T_ON T_NOT T_MEMCACHE_DIRTY T_LIMIT T_LIKE T_LEFT T_IN T_FROM T_COMPARISON T_AS T_AND TPLUS TOPOR TOPAND TMUL TMINUS TDIV TCPAR TCOMMA EOF ]
column_ref -> T_NAME TDOT T_NAME . TDOT TMUL [ T_WHERE T_UNION T_ORDER T_OR T_ON T_NOT T_MEMCACHE_DIRTY T_LIMIT T_LIKE T_LEFT T_IN T_FROM T_COMPARISON T_AS T_AND TPLUS TOPOR TOPAND TMUL TMINUS TDIV TCPAR TCOMMA EOF ]
column_ref -> T_NAME TDOT T_NAME . TDOT T_NAME TDOT TMUL [ T_WHERE T_UNION T_ORDER T_OR T_ON T_NOT T_MEMCACHE_DIRTY T_LIMIT T_LIKE T_LEFT T_IN T_FROM T_COMPARISON T_AS T_AND TPLUS TOPOR TOPAND TMUL TMINUS TDIV TCPAR TCOMMA EOF ]
q_table_name -> T_NAME TDOT T_NAME . [ TOPAR ]
q_table_name -> T_NAME TDOT T_NAME . TDOT T_NAME [ TOPAR ]
## Transitions:
-- On TDOT shift to state 19
## Reductions:
-- On T_WHERE T_UNION T_ORDER T_OR T_ON T_NOT T_MEMCACHE_DIRTY T_LIMIT T_LIKE T_LEFT T_IN T_FROM T_COMPARISON T_AS T_AND TPLUS TOPOR TOPAND TMUL TMINUS TDIV TCPAR TCOMMA EOF
--   reduce production column_ref -> T_NAME TDOT T_NAME
-- On TOPAR
--   reduce production q_table_name -> T_NAME TDOT T_NAME

State 19:
## Known stack suffix:
## T_NAME TDOT T_NAME TDOT
## LR(1) items:
column_ref -> T_NAME TDOT T_NAME TDOT . T_NAME [ T_WHERE T_UNION T_ORDER T_OR T_ON T_NOT T_MEMCACHE_DIRTY T_LIMIT T_LIKE T_LEFT T_IN T_FROM T_COMPARISON T_AS T_AND TPLUS TOPOR TOPAND TMUL TMINUS TDIV TCPAR TCOMMA EOF ]
column_ref -> T_NAME TDOT T_NAME TDOT . T_NAME TDOT T_NAME [ T_WHERE T_UNION T_ORDER T_OR T_ON T_NOT T_MEMCACHE_DIRTY T_LIMIT T_LIKE T_LEFT T_IN T_FROM T_COMPARISON T_AS T_AND TPLUS TOPOR TOPAND TMUL TMINUS TDIV TCPAR TCOMMA EOF ]
column_ref -> T_NAME TDOT T_NAME TDOT . TMUL [ T_WHERE T_UNION T_ORDER T_OR T_ON T_NOT T_MEMCACHE_DIRTY T_LIMIT T_LIKE T_LEFT T_IN T_FROM T_COMPARISON T_AS T_AND TPLUS TOPOR TOPAND TMUL TMINUS TDIV TCPAR TCOMMA EOF ]
column_ref -> T_NAME TDOT T_NAME TDOT . T_NAME TDOT TMUL [ T_WHERE T_UNION T_ORDER T_OR T_ON T_NOT T_MEMCACHE_DIRTY T_LIMIT T_LIKE T_LEFT T_IN T_FROM T_COMPARISON T_AS T_AND TPLUS TOPOR TOPAND TMUL TMINUS TDIV TCPAR TCOMMA EOF ]
q_table_name -> T_NAME TDOT T_NAME TDOT . T_NAME [ TOPAR ]
## Transitions:
-- On T_NAME shift to state 20
-- On TMUL shift to state 24
## Reductions:

State 20:
## Known stack suffix:
## T_NAME TDOT T_NAME TDOT T_NAME
## LR(1) items:
column_ref -> T_NAME TDOT T_NAME TDOT T_NAME . [ T_WHERE T_UNION T_ORDER T_OR T_ON T_NOT T_MEMCACHE_DIRTY T_LIMIT T_LIKE T_LEFT T_IN T_FROM T_COMPARISON T_AS T_AND TPLUS TOPOR TOPAND TMUL TMINUS TDIV TCPAR TCOMMA EOF ]
column_ref -> T_NAME TDOT T_NAME TDOT T_NAME . TDOT T_NAME [ T_WHERE T_UNION T_ORDER T_OR T_ON T_NOT T_MEMCACHE_DIRTY T_LIMIT T_LIKE T_LEFT T_IN T_FROM T_COMPARISON T_AS T_AND TPLUS TOPOR TOPAND TMUL TMINUS TDIV TCPAR TCOMMA EOF ]
column_ref -> T_NAME TDOT T_NAME TDOT T_NAME . TDOT TMUL [ T_WHERE T_UNION T_ORDER T_OR T_ON T_NOT T_MEMCACHE_DIRTY T_LIMIT T_LIKE T_LEFT T_IN T_FROM T_COMPARISON T_AS T_AND TPLUS TOPOR TOPAND TMUL TMINUS TDIV TCPAR TCOMMA EOF ]
q_table_name -> T_NAME TDOT T_NAME TDOT T_NAME . [ TOPAR ]
## Transitions:
-- On TDOT shift to state 21
## Reductions:
-- On T_WHERE T_UNION T_ORDER T_OR T_ON T_NOT T_MEMCACHE_DIRTY T_LIMIT T_LIKE T_LEFT T_IN T_FROM T_COMPARISON T_AS T_AND TPLUS TOPOR TOPAND TMUL TMINUS TDIV TCPAR TCOMMA EOF
--   reduce production column_ref -> T_NAME TDOT T_NAME TDOT T_NAME
-- On TOPAR
--   reduce production q_table_name -> T_NAME TDOT T_NAME TDOT T_NAME

State 21:
## Known stack suffix:
## T_NAME TDOT T_NAME TDOT T_NAME TDOT
## LR(1) items:
column_ref -> T_NAME TDOT T_NAME TDOT T_NAME TDOT . T_NAME [ T_WHERE T_UNION T_ORDER T_OR T_ON T_NOT T_MEMCACHE_DIRTY T_LIMIT T_LIKE T_LEFT T_IN T_FROM T_DESC T_COMPARISON T_ASC T_AS T_AND TPLUS TOPOR TOPAND TMUL TMINUS TDIV TCPAR TCOMMA EOF ]
column_ref -> T_NAME TDOT T_NAME TDOT T_NAME TDOT . TMUL [ T_WHERE T_UNION T_ORDER T_OR T_ON T_NOT T_MEMCACHE_DIRTY T_LIMIT T_LIKE T_LEFT T_IN T_FROM T_DESC T_COMPARISON T_ASC T_AS T_AND TPLUS TOPOR TOPAND TMUL TMINUS TDIV TCPAR TCOMMA EOF ]
## Transitions:
-- On T_NAME shift to state 22
-- On TMUL shift to state 23
## Reductions:

State 22:
## Known stack suffix:
## T_NAME TDOT T_NAME TDOT T_NAME TDOT T_NAME
## LR(1) items:
column_ref -> T_NAME TDOT T_NAME TDOT T_NAME TDOT T_NAME . [ T_WHERE T_UNION T_ORDER T_OR T_ON T_NOT T_MEMCACHE_DIRTY T_LIMIT T_LIKE T_LEFT T_IN T_FROM T_DESC T_COMPARISON T_ASC T_AS T_AND TPLUS TOPOR TOPAND TMUL TMINUS TDIV TCPAR TCOMMA EOF ]
## Transitions:
## Reductions:
-- On T_WHERE T_UNION T_ORDER T_OR T_ON T_NOT T_MEMCACHE_DIRTY T_LIMIT T_LIKE T_LEFT T_IN T_FROM T_DESC T_COMPARISON T_ASC T_AS T_AND TPLUS TOPOR TOPAND TMUL TMINUS TDIV TCPAR TCOMMA EOF
--   reduce production column_ref -> T_NAME TDOT T_NAME TDOT T_NAME TDOT T_NAME

State 23:
## Known stack suffix:
## T_NAME TDOT T_NAME TDOT T_NAME TDOT TMUL
## LR(1) items:
column_ref -> T_NAME TDOT T_NAME TDOT T_NAME TDOT TMUL . [ T_WHERE T_UNION T_ORDER T_OR T_ON T_NOT T_MEMCACHE_DIRTY T_LIMIT T_LIKE T_LEFT T_IN T_FROM T_DESC T_COMPARISON T_ASC T_AS T_AND TPLUS TOPOR TOPAND TMUL TMINUS TDIV TCPAR TCOMMA EOF ]
## Transitions:
## Reductions:
-- On T_WHERE T_UNION T_ORDER T_OR T_ON T_NOT T_MEMCACHE_DIRTY T_LIMIT T_LIKE T_LEFT T_IN T_FROM T_DESC T_COMPARISON T_ASC T_AS T_AND TPLUS TOPOR TOPAND TMUL TMINUS TDIV TCPAR TCOMMA EOF
--   reduce production column_ref -> T_NAME TDOT T_NAME TDOT T_NAME TDOT TMUL

State 24:
## Known stack suffix:
## T_NAME TDOT T_NAME TDOT TMUL
## LR(1) items:
column_ref -> T_NAME TDOT T_NAME TDOT TMUL . [ T_WHERE T_UNION T_ORDER T_OR T_ON T_NOT T_MEMCACHE_DIRTY T_LIMIT T_LIKE T_LEFT T_IN T_FROM T_DESC T_COMPARISON T_ASC T_AS T_AND TPLUS TOPOR TOPAND TMUL TMINUS TDIV TCPAR TCOMMA EOF ]
## Transitions:
## Reductions:
-- On T_WHERE T_UNION T_ORDER T_OR T_ON T_NOT T_MEMCACHE_DIRTY T_LIMIT T_LIKE T_LEFT T_IN T_FROM T_DESC T_COMPARISON T_ASC T_AS T_AND TPLUS TOPOR TOPAND TMUL TMINUS TDIV TCPAR TCOMMA EOF
--   reduce production column_ref -> T_NAME TDOT T_NAME TDOT TMUL

State 25:
## Known stack suffix:
## T_NAME TDOT TMUL
## LR(1) items:
column_ref -> T_NAME TDOT TMUL . [ T_WHERE T_UNION T_ORDER T_OR T_ON T_NOT T_MEMCACHE_DIRTY T_LIMIT T_LIKE T_LEFT T_IN T_FROM T_DESC T_COMPARISON T_ASC T_AS T_AND TPLUS TOPOR TOPAND TMUL TMINUS TDIV TCPAR TCOMMA EOF ]
## Transitions:
## Reductions:
-- On T_WHERE T_UNION T_ORDER T_OR T_ON T_NOT T_MEMCACHE_DIRTY T_LIMIT T_LIKE T_LEFT T_IN T_FROM T_DESC T_COMPARISON T_ASC T_AS T_AND TPLUS TOPOR TOPAND TMUL TMINUS TDIV TCPAR TCOMMA EOF
--   reduce production column_ref -> T_NAME TDOT TMUL

State 26:
## Known stack suffix:
## T_NAME TDOT TDOT
## LR(1) items:
column_ref -> T_NAME TDOT TDOT . T_NAME TDOT T_NAME [ T_WHERE T_UNION T_ORDER T_OR T_ON T_NOT T_MEMCACHE_DIRTY T_LIMIT T_LIKE T_LEFT T_IN T_FROM T_COMPARISON T_AS T_AND TPLUS TOPOR TOPAND TMUL TMINUS TDIV TCPAR TCOMMA EOF ]
column_ref -> T_NAME TDOT TDOT . T_NAME TDOT TMUL [ T_WHERE T_UNION T_ORDER T_OR T_ON T_NOT T_MEMCACHE_DIRTY T_LIMIT T_LIKE T_LEFT T_IN T_FROM T_COMPARISON T_AS T_AND TPLUS TOPOR TOPAND TMUL TMINUS TDIV TCPAR TCOMMA EOF ]
q_table_name -> T_NAME TDOT TDOT . T_NAME [ TOPAR ]
## Transitions:
-- On T_NAME shift to state 27
## Reductions:

State 27:
## Known stack suffix:
## T_NAME TDOT TDOT T_NAME
## LR(1) items:
column_ref -> T_NAME TDOT TDOT T_NAME . TDOT T_NAME [ T_WHERE T_UNION T_ORDER T_OR T_ON T_NOT T_MEMCACHE_DIRTY T_LIMIT T_LIKE T_LEFT T_IN T_FROM T_COMPARISON T_AS T_AND TPLUS TOPOR TOPAND TMUL TMINUS TDIV TCPAR TCOMMA EOF ]
column_ref -> T_NAME TDOT TDOT T_NAME . TDOT TMUL [ T_WHERE T_UNION T_ORDER T_OR T_ON T_NOT T_MEMCACHE_DIRTY T_LIMIT T_LIKE T_LEFT T_IN T_FROM T_COMPARISON T_AS T_AND TPLUS TOPOR TOPAND TMUL TMINUS TDIV TCPAR TCOMMA EOF ]
q_table_name -> T_NAME TDOT TDOT T_NAME . [ TOPAR ]
## Transitions:
-- On TDOT shift to state 28
## Reductions:
-- On TOPAR
--   reduce production q_table_name -> T_NAME TDOT TDOT T_NAME

State 28:
## Known stack suffix:
## T_NAME TDOT TDOT T_NAME TDOT
## LR(1) items:
column_ref -> T_NAME TDOT TDOT T_NAME TDOT . T_NAME [ T_WHERE T_UNION T_ORDER T_OR T_ON T_NOT T_MEMCACHE_DIRTY T_LIMIT T_LIKE T_LEFT T_IN T_FROM T_DESC T_COMPARISON T_ASC T_AS T_AND TPLUS TOPOR TOPAND TMUL TMINUS TDIV TCPAR TCOMMA EOF ]
column_ref -> T_NAME TDOT TDOT T_NAME TDOT . TMUL [ T_WHERE T_UNION T_ORDER T_OR T_ON T_NOT T_MEMCACHE_DIRTY T_LIMIT T_LIKE T_LEFT T_IN T_FROM T_DESC T_COMPARISON T_ASC T_AS T_AND TPLUS TOPOR TOPAND TMUL TMINUS TDIV TCPAR TCOMMA EOF ]
## Transitions:
-- On T_NAME shift to state 29
-- On TMUL shift to state 30
## Reductions:

State 29:
## Known stack suffix:
## T_NAME TDOT TDOT T_NAME TDOT T_NAME
## LR(1) items:
column_ref -> T_NAME TDOT TDOT T_NAME TDOT T_NAME . [ T_WHERE T_UNION T_ORDER T_OR T_ON T_NOT T_MEMCACHE_DIRTY T_LIMIT T_LIKE T_LEFT T_IN T_FROM T_DESC T_COMPARISON T_ASC T_AS T_AND TPLUS TOPOR TOPAND TMUL TMINUS TDIV TCPAR TCOMMA EOF ]
## Transitions:
## Reductions:
-- On T_WHERE T_UNION T_ORDER T_OR T_ON T_NOT T_MEMCACHE_DIRTY T_LIMIT T_LIKE T_LEFT T_IN T_FROM T_DESC T_COMPARISON T_ASC T_AS T_AND TPLUS TOPOR TOPAND TMUL TMINUS TDIV TCPAR TCOMMA EOF
--   reduce production column_ref -> T_NAME TDOT TDOT T_NAME TDOT T_NAME

State 30:
## Known stack suffix:
## T_NAME TDOT TDOT T_NAME TDOT TMUL
## LR(1) items:
column_ref -> T_NAME TDOT TDOT T_NAME TDOT TMUL . [ T_WHERE T_UNION T_ORDER T_OR T_ON T_NOT T_MEMCACHE_DIRTY T_LIMIT T_LIKE T_LEFT T_IN T_FROM T_DESC T_COMPARISON T_ASC T_AS T_AND TPLUS TOPOR TOPAND TMUL TMINUS TDIV TCPAR TCOMMA EOF ]
## Transitions:
## Reductions:
-- On T_WHERE T_UNION T_ORDER T_OR T_ON T_NOT T_MEMCACHE_DIRTY T_LIMIT T_LIKE T_LEFT T_IN T_FROM T_DESC T_COMPARISON T_ASC T_AS T_AND TPLUS TOPOR TOPAND TMUL TMINUS TDIV TCPAR TCOMMA EOF
--   reduce production column_ref -> T_NAME TDOT TDOT T_NAME TDOT TMUL

State 31:
## Known stack suffix:
## T_INTNUM
## LR(1) items:
literal -> T_INTNUM . [ T_WHERE T_UNION T_ORDER T_OR T_ON T_NOT T_MEMCACHE_DIRTY T_LIMIT T_LIKE T_LEFT T_IN T_FROM T_COMPARISON T_AS T_AND TPLUS TOPOR TOPAND TMUL TMINUS TDIV TCPAR TCOMMA EOF ]
## Transitions:
## Reductions:
-- On T_WHERE T_UNION T_ORDER T_OR T_ON T_NOT T_MEMCACHE_DIRTY T_LIMIT T_LIKE T_LEFT T_IN T_FROM T_COMPARISON T_AS T_AND TPLUS TOPOR TOPAND TMUL TMINUS TDIV TCPAR TCOMMA EOF
--   reduce production literal -> T_INTNUM

State 32:
## Known stack suffix:
## T_DNUMBER
## LR(1) items:
literal -> T_DNUMBER . [ T_WHERE T_UNION T_ORDER T_OR T_ON T_NOT T_MEMCACHE_DIRTY T_LIMIT T_LIKE T_LEFT T_IN T_FROM T_COMPARISON T_AS T_AND TPLUS TOPOR TOPAND TMUL TMINUS TDIV TCPAR TCOMMA EOF ]
## Transitions:
## Reductions:
-- On T_WHERE T_UNION T_ORDER T_OR T_ON T_NOT T_MEMCACHE_DIRTY T_LIMIT T_LIKE T_LEFT T_IN T_FROM T_COMPARISON T_AS T_AND TPLUS TOPOR TOPAND TMUL TMINUS TDIV TCPAR TCOMMA EOF
--   reduce production literal -> T_DNUMBER

State 33:
## Known stack suffix:
## TPLUS
## LR(1) items:
scalar_exp -> TPLUS . scalar_exp [ T_WHERE T_UNION T_ORDER T_OR T_ON T_NOT T_MEMCACHE_DIRTY T_LIMIT T_LIKE T_LEFT T_IN T_FROM T_COMPARISON T_AS T_AND TPLUS TOPOR TOPAND TMUL TMINUS TDIV TCPAR TCOMMA EOF ]
## Transitions:
-- On T_STRING shift to state 14
-- On T_NULLX shift to state 15
-- On T_NAME shift to state 16
-- On T_INTNUM shift to state 31
-- On T_DNUMBER shift to state 32
-- On TPLUS shift to state 33
-- On TOPNOT shift to state 34
-- On TOPNEG shift to state 35
-- On TOPAR shift to state 36
-- On TMUL shift to state 37
-- On TMINUS shift to state 38
-- On APPROXNUM shift to state 39
-- On scalar_exp shift to state 72
-- On q_table_name shift to state 41
-- On literal shift to state 54
-- On function_call shift to state 55
-- On column_ref shift to state 56
-- On atom shift to state 57
-- On as_expression shift to state 58
## Reductions:

State 34:
## Known stack suffix:
## TOPNOT
## LR(1) items:
scalar_exp -> TOPNOT . scalar_exp [ T_WHERE T_UNION T_ORDER T_OR T_ON T_NOT T_MEMCACHE_DIRTY T_LIMIT T_LIKE T_LEFT T_IN T_FROM T_COMPARISON T_AS T_AND TPLUS TOPOR TOPAND TMUL TMINUS TDIV TCPAR TCOMMA EOF ]
## Transitions:
-- On T_STRING shift to state 14
-- On T_NULLX shift to state 15
-- On T_NAME shift to state 16
-- On T_INTNUM shift to state 31
-- On T_DNUMBER shift to state 32
-- On TPLUS shift to state 33
-- On TOPNOT shift to state 34
-- On TOPNEG shift to state 35
-- On TOPAR shift to state 36
-- On TMUL shift to state 37
-- On TMINUS shift to state 38
-- On APPROXNUM shift to state 39
-- On scalar_exp shift to state 71
-- On q_table_name shift to state 41
-- On literal shift to state 54
-- On function_call shift to state 55
-- On column_ref shift to state 56
-- On atom shift to state 57
-- On as_expression shift to state 58
## Reductions:

State 35:
## Known stack suffix:
## TOPNEG
## LR(1) items:
scalar_exp -> TOPNEG . scalar_exp [ T_WHERE T_UNION T_ORDER T_OR T_ON T_NOT T_MEMCACHE_DIRTY T_LIMIT T_LIKE T_LEFT T_IN T_FROM T_COMPARISON T_AS T_AND TPLUS TOPOR TOPAND TMUL TMINUS TDIV TCPAR TCOMMA EOF ]
## Transitions:
-- On T_STRING shift to state 14
-- On T_NULLX shift to state 15
-- On T_NAME shift to state 16
-- On T_INTNUM shift to state 31
-- On T_DNUMBER shift to state 32
-- On TPLUS shift to state 33
-- On TOPNOT shift to state 34
-- On TOPNEG shift to state 35
-- On TOPAR shift to state 36
-- On TMUL shift to state 37
-- On TMINUS shift to state 38
-- On APPROXNUM shift to state 39
-- On scalar_exp shift to state 70
-- On q_table_name shift to state 41
-- On literal shift to state 54
-- On function_call shift to state 55
-- On column_ref shift to state 56
-- On atom shift to state 57
-- On as_expression shift to state 58
## Reductions:

State 36:
## Known stack suffix:
## TOPAR
## LR(1) items:
scalar_exp -> TOPAR . scalar_exp_list TCPAR [ T_WHERE T_UNION T_ORDER T_OR T_ON T_NOT T_MEMCACHE_DIRTY T_LIMIT T_LIKE T_LEFT T_IN T_FROM T_COMPARISON T_AS T_AND TPLUS TOPOR TOPAND TMUL TMINUS TDIV TCPAR TCOMMA EOF ]
## Transitions:
-- On T_STRING shift to state 14
-- On T_NULLX shift to state 15
-- On T_NAME shift to state 16
-- On T_INTNUM shift to state 31
-- On T_DNUMBER shift to state 32
-- On TPLUS shift to state 33
-- On TOPNOT shift to state 34
-- On TOPNEG shift to state 35
-- On TOPAR shift to state 36
-- On TMUL shift to state 37
-- On TMINUS shift to state 38
-- On APPROXNUM shift to state 39
-- On scalar_exp_list shift to state 68
-- On scalar_exp shift to state 67
-- On q_table_name shift to state 41
-- On literal shift to state 54
-- On function_call shift to state 55
-- On column_ref shift to state 56
-- On atom shift to state 57
-- On as_expression shift to state 58
## Reductions:

State 37:
## Known stack suffix:
## TMUL
## LR(1) items:
column_ref -> TMUL . [ T_WHERE T_UNION T_ORDER T_OR T_ON T_NOT T_MEMCACHE_DIRTY T_LIMIT T_LIKE T_LEFT T_IN T_FROM T_DESC T_COMPARISON T_ASC T_AS T_AND TPLUS TOPOR TOPAND TMUL TMINUS TDIV TCPAR TCOMMA EOF ]
## Transitions:
## Reductions:
-- On T_WHERE T_UNION T_ORDER T_OR T_ON T_NOT T_MEMCACHE_DIRTY T_LIMIT T_LIKE T_LEFT T_IN T_FROM T_DESC T_COMPARISON T_ASC T_AS T_AND TPLUS TOPOR TOPAND TMUL TMINUS TDIV TCPAR TCOMMA EOF
--   reduce production column_ref -> TMUL

State 38:
## Known stack suffix:
## TMINUS
## LR(1) items:
scalar_exp -> TMINUS . scalar_exp [ T_WHERE T_UNION T_ORDER T_OR T_ON T_NOT T_MEMCACHE_DIRTY T_LIMIT T_LIKE T_LEFT T_IN T_FROM T_COMPARISON T_AS T_AND TPLUS TOPOR TOPAND TMUL TMINUS TDIV TCPAR TCOMMA EOF ]
## Transitions:
-- On T_STRING shift to state 14
-- On T_NULLX shift to state 15
-- On T_NAME shift to state 16
-- On T_INTNUM shift to state 31
-- On T_DNUMBER shift to state 32
-- On TPLUS shift to state 33
-- On TOPNOT shift to state 34
-- On TOPNEG shift to state 35
-- On TOPAR shift to state 36
-- On TMUL shift to state 37
-- On TMINUS shift to state 38
-- On APPROXNUM shift to state 39
-- On scalar_exp shift to state 40
-- On q_table_name shift to state 41
-- On literal shift to state 54
-- On function_call shift to state 55
-- On column_ref shift to state 56
-- On atom shift to state 57
-- On as_expression shift to state 58
## Reductions:

State 39:
## Known stack suffix:
## APPROXNUM
## LR(1) items:
literal -> APPROXNUM . [ T_WHERE T_UNION T_ORDER T_OR T_ON T_NOT T_MEMCACHE_DIRTY T_LIMIT T_LIKE T_LEFT T_IN T_FROM T_COMPARISON T_AS T_AND TPLUS TOPOR TOPAND TMUL TMINUS TDIV TCPAR TCOMMA EOF ]
## Transitions:
## Reductions:
-- On T_WHERE T_UNION T_ORDER T_OR T_ON T_NOT T_MEMCACHE_DIRTY T_LIMIT T_LIKE T_LEFT T_IN T_FROM T_COMPARISON T_AS T_AND TPLUS TOPOR TOPAND TMUL TMINUS TDIV TCPAR TCOMMA EOF
--   reduce production literal -> APPROXNUM

State 40:
## Known stack suffix:
## TMINUS scalar_exp
## LR(1) items:
as_expression -> scalar_exp . T_AS T_NAME [ T_WHERE T_UNION T_ORDER T_OR T_ON T_NOT T_MEMCACHE_DIRTY T_LIMIT T_LIKE T_LEFT T_IN T_FROM T_COMPARISON T_AS T_AND TPLUS TOPOR TOPAND TMUL TMINUS TDIV TCPAR TCOMMA EOF ]
scalar_exp -> scalar_exp . TPLUS scalar_exp [ T_WHERE T_UNION T_ORDER T_OR T_ON T_NOT T_MEMCACHE_DIRTY T_LIMIT T_LIKE T_LEFT T_IN T_FROM T_COMPARISON T_AS T_AND TPLUS TOPOR TOPAND TMUL TMINUS TDIV TCPAR TCOMMA EOF ]
scalar_exp -> scalar_exp . TMINUS scalar_exp [ T_WHERE T_UNION T_ORDER T_OR T_ON T_NOT T_MEMCACHE_DIRTY T_LIMIT T_LIKE T_LEFT T_IN T_FROM T_COMPARISON T_AS T_AND TPLUS TOPOR TOPAND TMUL TMINUS TDIV TCPAR TCOMMA EOF ]
scalar_exp -> scalar_exp . TMUL scalar_exp [ T_WHERE T_UNION T_ORDER T_OR T_ON T_NOT T_MEMCACHE_DIRTY T_LIMIT T_LIKE T_LEFT T_IN T_FROM T_COMPARISON T_AS T_AND TPLUS TOPOR TOPAND TMUL TMINUS TDIV TCPAR TCOMMA EOF ]
scalar_exp -> scalar_exp . TDIV scalar_exp [ T_WHERE T_UNION T_ORDER T_OR T_ON T_NOT T_MEMCACHE_DIRTY T_LIMIT T_LIKE T_LEFT T_IN T_FROM T_COMPARISON T_AS T_AND TPLUS TOPOR TOPAND TMUL TMINUS TDIV TCPAR TCOMMA EOF ]
scalar_exp -> scalar_exp . TOPAND scalar_exp [ T_WHERE T_UNION T_ORDER T_OR T_ON T_NOT T_MEMCACHE_DIRTY T_LIMIT T_LIKE T_LEFT T_IN T_FROM T_COMPARISON T_AS T_AND TPLUS TOPOR TOPAND TMUL TMINUS TDIV TCPAR TCOMMA EOF ]
scalar_exp -> scalar_exp . TOPOR scalar_exp [ T_WHERE T_UNION T_ORDER T_OR T_ON T_NOT T_MEMCACHE_DIRTY T_LIMIT T_LIKE T_LEFT T_IN T_FROM T_COMPARISON T_AS T_AND TPLUS TOPOR TOPAND TMUL TMINUS TDIV TCPAR TCOMMA EOF ]
scalar_exp -> TMINUS scalar_exp . [ T_WHERE T_UNION T_ORDER T_OR T_ON T_NOT T_MEMCACHE_DIRTY T_LIMIT T_LIKE T_LEFT T_IN T_FROM T_COMPARISON T_AS T_AND TPLUS TOPOR TOPAND TMUL TMINUS TDIV TCPAR TCOMMA EOF ]
## Transitions:
## Reductions:
-- On T_WHERE T_UNION T_ORDER T_OR T_ON T_NOT T_MEMCACHE_DIRTY T_LIMIT T_LIKE T_LEFT T_IN T_FROM T_COMPARISON T_AS T_AND TPLUS TOPOR TOPAND TMUL TMINUS TDIV TCPAR TCOMMA EOF
--   reduce production scalar_exp -> TMINUS scalar_exp

State 41:
## Known stack suffix:
## q_table_name
## LR(1) items:
function_call -> q_table_name . TOPAR scalar_exp_list_opt TCPAR [ T_WHERE T_UNION T_ORDER T_OR T_ON T_NOT T_MEMCACHE_DIRTY T_LIMIT T_LIKE T_LEFT T_IN T_FROM T_COMPARISON T_AS T_AND TPLUS TOPOR TOPAND TMUL TMINUS TDIV TCPAR TCOMMA EOF ]
## Transitions:
-- On TOPAR shift to state 42
## Reductions:

State 42:
## Known stack suffix:
## q_table_name TOPAR
## LR(1) items:
function_call -> q_table_name TOPAR . scalar_exp_list_opt TCPAR [ T_WHERE T_UNION T_ORDER T_OR T_ON T_NOT T_MEMCACHE_DIRTY T_LIMIT T_LIKE T_LEFT T_IN T_FROM T_COMPARISON T_AS T_AND TPLUS TOPOR TOPAND TMUL TMINUS TDIV TCPAR TCOMMA EOF ]
## Transitions:
-- On T_STRING shift to state 14
-- On T_NULLX shift to state 15
-- On T_NAME shift to state 16
-- On T_INTNUM shift to state 31
-- On T_DNUMBER shift to state 32
-- On TPLUS shift to state 33
-- On TOPNOT shift to state 34
-- On TOPNEG shift to state 35
-- On TOPAR shift to state 36
-- On TMUL shift to state 37
-- On TMINUS shift to state 38
-- On APPROXNUM shift to state 39
-- On scalar_exp_list_opt shift to state 43
-- On scalar_exp_list shift to state 45
-- On scalar_exp shift to state 67
-- On q_table_name shift to state 41
-- On literal shift to state 54
-- On function_call shift to state 55
-- On column_ref shift to state 56
-- On atom shift to state 57
-- On as_expression shift to state 58
## Reductions:
-- On TCPAR
--   reduce production scalar_exp_list_opt ->

State 43:
## Known stack suffix:
## q_table_name TOPAR scalar_exp_list_opt
## LR(1) items:
function_call -> q_table_name TOPAR scalar_exp_list_opt . TCPAR [ T_WHERE T_UNION T_ORDER T_OR T_ON T_NOT T_MEMCACHE_DIRTY T_LIMIT T_LIKE T_LEFT T_IN T_FROM T_COMPARISON T_AS T_AND TPLUS TOPOR TOPAND TMUL TMINUS TDIV TCPAR TCOMMA EOF ]
## Transitions:
-- On TCPAR shift to state 44
## Reductions:

State 44:
## Known stack suffix:
## q_table_name TOPAR scalar_exp_list_opt TCPAR
## LR(1) items:
function_call -> q_table_name TOPAR scalar_exp_list_opt TCPAR . [ T_WHERE T_UNION T_ORDER T_OR T_ON T_NOT T_MEMCACHE_DIRTY T_LIMIT T_LIKE T_LEFT T_IN T_FROM T_COMPARISON T_AS T_AND TPLUS TOPOR TOPAND TMUL TMINUS TDIV TCPAR TCOMMA EOF ]
## Transitions:
## Reductions:
-- On T_WHERE T_UNION T_ORDER T_OR T_ON T_NOT T_MEMCACHE_DIRTY T_LIMIT T_LIKE T_LEFT T_IN T_FROM T_COMPARISON T_AS T_AND TPLUS TOPOR TOPAND TMUL TMINUS TDIV TCPAR TCOMMA EOF
--   reduce production function_call -> q_table_name TOPAR scalar_exp_list_opt TCPAR

State 45:
## Known stack suffix:
## scalar_exp_list
## LR(1) items:
scalar_exp_list -> scalar_exp_list . TCOMMA scalar_exp [ TCPAR TCOMMA ]
scalar_exp_list_opt -> scalar_exp_list . [ TCPAR ]
## Transitions:
-- On TCOMMA shift to state 46
## Reductions:
-- On TCPAR
--   reduce production scalar_exp_list_opt -> scalar_exp_list

State 46:
## Known stack suffix:
## scalar_exp_list TCOMMA
## LR(1) items:
scalar_exp_list -> scalar_exp_list TCOMMA . scalar_exp [ T_FROM TCPAR TCOMMA ]
## Transitions:
-- On T_STRING shift to state 14
-- On T_NULLX shift to state 15
-- On T_NAME shift to state 16
-- On T_INTNUM shift to state 31
-- On T_DNUMBER shift to state 32
-- On TPLUS shift to state 33
-- On TOPNOT shift to state 34
-- On TOPNEG shift to state 35
-- On TOPAR shift to state 36
-- On TMUL shift to state 37
-- On TMINUS shift to state 38
-- On APPROXNUM shift to state 39
-- On scalar_exp shift to state 47
-- On q_table_name shift to state 41
-- On literal shift to state 54
-- On function_call shift to state 55
-- On column_ref shift to state 56
-- On atom shift to state 57
-- On as_expression shift to state 58
## Reductions:

State 47:
## Known stack suffix:
## scalar_exp_list TCOMMA scalar_exp
## LR(1) items:
as_expression -> scalar_exp . T_AS T_NAME [ T_FROM T_AS TPLUS TOPOR TOPAND TMUL TMINUS TDIV TCPAR TCOMMA ]
scalar_exp -> scalar_exp . TPLUS scalar_exp [ T_FROM T_AS TPLUS TOPOR TOPAND TMUL TMINUS TDIV TCPAR TCOMMA ]
scalar_exp -> scalar_exp . TMINUS scalar_exp [ T_FROM T_AS TPLUS TOPOR TOPAND TMUL TMINUS TDIV TCPAR TCOMMA ]
scalar_exp -> scalar_exp . TMUL scalar_exp [ T_FROM T_AS TPLUS TOPOR TOPAND TMUL TMINUS TDIV TCPAR TCOMMA ]
scalar_exp -> scalar_exp . TDIV scalar_exp [ T_FROM T_AS TPLUS TOPOR TOPAND TMUL TMINUS TDIV TCPAR TCOMMA ]
scalar_exp -> scalar_exp . TOPAND scalar_exp [ T_FROM T_AS TPLUS TOPOR TOPAND TMUL TMINUS TDIV TCPAR TCOMMA ]
scalar_exp -> scalar_exp . TOPOR scalar_exp [ T_FROM T_AS TPLUS TOPOR TOPAND TMUL TMINUS TDIV TCPAR TCOMMA ]
scalar_exp_list -> scalar_exp_list TCOMMA scalar_exp . [ T_FROM TCPAR TCOMMA ]
## Transitions:
-- On T_AS shift to state 48
-- On TPLUS shift to state 50
-- On TOPOR shift to state 61
-- On TOPAND shift to state 63
-- On TMUL shift to state 52
-- On TMINUS shift to state 65
-- On TDIV shift to state 59
## Reductions:
-- On T_FROM TCPAR TCOMMA
--   reduce production scalar_exp_list -> scalar_exp_list TCOMMA scalar_exp

State 48:
## Known stack suffix:
## scalar_exp T_AS
## LR(1) items:
as_expression -> scalar_exp T_AS . T_NAME [ T_WHERE T_UNION T_ORDER T_OR T_ON T_NOT T_MEMCACHE_DIRTY T_LIMIT T_LIKE T_LEFT T_IN T_FROM T_COMPARISON T_AS T_AND TPLUS TOPOR TOPAND TMUL TMINUS TDIV TCPAR TCOMMA EOF ]
## Transitions:
-- On T_NAME shift to state 49
## Reductions:

State 49:
## Known stack suffix:
## scalar_exp T_AS T_NAME
## LR(1) items:
as_expression -> scalar_exp T_AS T_NAME . [ T_WHERE T_UNION T_ORDER T_OR T_ON T_NOT T_MEMCACHE_DIRTY T_LIMIT T_LIKE T_LEFT T_IN T_FROM T_COMPARISON T_AS T_AND TPLUS TOPOR TOPAND TMUL TMINUS TDIV TCPAR TCOMMA EOF ]
## Transitions:
## Reductions:
-- On T_WHERE T_UNION T_ORDER T_OR T_ON T_NOT T_MEMCACHE_DIRTY T_LIMIT T_LIKE T_LEFT T_IN T_FROM T_COMPARISON T_AS T_AND TPLUS TOPOR TOPAND TMUL TMINUS TDIV TCPAR TCOMMA EOF
--   reduce production as_expression -> scalar_exp T_AS T_NAME

State 50:
## Known stack suffix:
## scalar_exp TPLUS
## LR(1) items:
scalar_exp -> scalar_exp TPLUS . scalar_exp [ T_WHERE T_UNION T_ORDER T_OR T_ON T_NOT T_MEMCACHE_DIRTY T_LIMIT T_LIKE T_LEFT T_IN T_FROM T_COMPARISON T_AS T_AND TPLUS TOPOR TOPAND TMUL TMINUS TDIV TCPAR TCOMMA EOF ]
## Transitions:
-- On T_STRING shift to state 14
-- On T_NULLX shift to state 15
-- On T_NAME shift to state 16
-- On T_INTNUM shift to state 31
-- On T_DNUMBER shift to state 32
-- On TPLUS shift to state 33
-- On TOPNOT shift to state 34
-- On TOPNEG shift to state 35
-- On TOPAR shift to state 36
-- On TMUL shift to state 37
-- On TMINUS shift to state 38
-- On APPROXNUM shift to state 39
-- On scalar_exp shift to state 51
-- On q_table_name shift to state 41
-- On literal shift to state 54
-- On function_call shift to state 55
-- On column_ref shift to state 56
-- On atom shift to state 57
-- On as_expression shift to state 58
## Reductions:

State 51:
## Known stack suffix:
## scalar_exp TPLUS scalar_exp
## LR(1) items:
as_expression -> scalar_exp . T_AS T_NAME [ T_WHERE T_UNION T_ORDER T_OR T_ON T_NOT T_MEMCACHE_DIRTY T_LIMIT T_LIKE T_LEFT T_IN T_FROM T_COMPARISON T_AS T_AND TPLUS TOPOR TOPAND TMUL TMINUS TDIV TCPAR TCOMMA EOF ]
scalar_exp -> scalar_exp . TPLUS scalar_exp [ T_WHERE T_UNION T_ORDER T_OR T_ON T_NOT T_MEMCACHE_DIRTY T_LIMIT T_LIKE T_LEFT T_IN T_FROM T_COMPARISON T_AS T_AND TPLUS TOPOR TOPAND TMUL TMINUS TDIV TCPAR TCOMMA EOF ]
scalar_exp -> scalar_exp TPLUS scalar_exp . [ T_WHERE T_UNION T_ORDER T_OR T_ON T_NOT T_MEMCACHE_DIRTY T_LIMIT T_LIKE T_LEFT T_IN T_FROM T_COMPARISON T_AS T_AND TPLUS TOPOR TOPAND TMUL TMINUS TDIV TCPAR TCOMMA EOF ]
scalar_exp -> scalar_exp . TMINUS scalar_exp [ T_WHERE T_UNION T_ORDER T_OR T_ON T_NOT T_MEMCACHE_DIRTY T_LIMIT T_LIKE T_LEFT T_IN T_FROM T_COMPARISON T_AS T_AND TPLUS TOPOR TOPAND TMUL TMINUS TDIV TCPAR TCOMMA EOF ]
scalar_exp -> scalar_exp . TMUL scalar_exp [ T_WHERE T_UNION T_ORDER T_OR T_ON T_NOT T_MEMCACHE_DIRTY T_LIMIT T_LIKE T_LEFT T_IN T_FROM T_COMPARISON T_AS T_AND TPLUS TOPOR TOPAND TMUL TMINUS TDIV TCPAR TCOMMA EOF ]
scalar_exp -> scalar_exp . TDIV scalar_exp [ T_WHERE T_UNION T_ORDER T_OR T_ON T_NOT T_MEMCACHE_DIRTY T_LIMIT T_LIKE T_LEFT T_IN T_FROM T_COMPARISON T_AS T_AND TPLUS TOPOR TOPAND TMUL TMINUS TDIV TCPAR TCOMMA EOF ]
scalar_exp -> scalar_exp . TOPAND scalar_exp [ T_WHERE T_UNION T_ORDER T_OR T_ON T_NOT T_MEMCACHE_DIRTY T_LIMIT T_LIKE T_LEFT T_IN T_FROM T_COMPARISON T_AS T_AND TPLUS TOPOR TOPAND TMUL TMINUS TDIV TCPAR TCOMMA EOF ]
scalar_exp -> scalar_exp . TOPOR scalar_exp [ T_WHERE T_UNION T_ORDER T_OR T_ON T_NOT T_MEMCACHE_DIRTY T_LIMIT T_LIKE T_LEFT T_IN T_FROM T_COMPARISON T_AS T_AND TPLUS TOPOR TOPAND TMUL TMINUS TDIV TCPAR TCOMMA EOF ]
## Transitions:
-- On TMUL shift to state 52
-- On TDIV shift to state 59
## Reductions:
-- On T_WHERE T_UNION T_ORDER T_OR T_ON T_NOT T_MEMCACHE_DIRTY T_LIMIT T_LIKE T_LEFT T_IN T_FROM T_COMPARISON T_AS T_AND TPLUS TOPOR TOPAND TMINUS TCPAR TCOMMA EOF
--   reduce production scalar_exp -> scalar_exp TPLUS scalar_exp

State 52:
## Known stack suffix:
## scalar_exp TMUL
## LR(1) items:
scalar_exp -> scalar_exp TMUL . scalar_exp [ T_WHERE T_UNION T_ORDER T_OR T_ON T_NOT T_MEMCACHE_DIRTY T_LIMIT T_LIKE T_LEFT T_IN T_FROM T_COMPARISON T_AS T_AND TPLUS TOPOR TOPAND TMUL TMINUS TDIV TCPAR TCOMMA EOF ]
## Transitions:
-- On T_STRING shift to state 14
-- On T_NULLX shift to state 15
-- On T_NAME shift to state 16
-- On T_INTNUM shift to state 31
-- On T_DNUMBER shift to state 32
-- On TPLUS shift to state 33
-- On TOPNOT shift to state 34
-- On TOPNEG shift to state 35
-- On TOPAR shift to state 36
-- On TMUL shift to state 37
-- On TMINUS shift to state 38
-- On APPROXNUM shift to state 39
-- On scalar_exp shift to state 53
-- On q_table_name shift to state 41
-- On literal shift to state 54
-- On function_call shift to state 55
-- On column_ref shift to state 56
-- On atom shift to state 57
-- On as_expression shift to state 58
## Reductions:

State 53:
## Known stack suffix:
## scalar_exp TMUL scalar_exp
## LR(1) items:
as_expression -> scalar_exp . T_AS T_NAME [ T_WHERE T_UNION T_ORDER T_OR T_ON T_NOT T_MEMCACHE_DIRTY T_LIMIT T_LIKE T_LEFT T_IN T_FROM T_COMPARISON T_AS T_AND TPLUS TOPOR TOPAND TMUL TMINUS TDIV TCPAR TCOMMA EOF ]
scalar_exp -> scalar_exp . TPLUS scalar_exp [ T_WHERE T_UNION T_ORDER T_OR T_ON T_NOT T_MEMCACHE_DIRTY T_LIMIT T_LIKE T_LEFT T_IN T_FROM T_COMPARISON T_AS T_AND TPLUS TOPOR TOPAND TMUL TMINUS TDIV TCPAR TCOMMA EOF ]
scalar_exp -> scalar_exp . TMINUS scalar_exp [ T_WHERE T_UNION T_ORDER T_OR T_ON T_NOT T_MEMCACHE_DIRTY T_LIMIT T_LIKE T_LEFT T_IN T_FROM T_COMPARISON T_AS T_AND TPLUS TOPOR TOPAND TMUL TMINUS TDIV TCPAR TCOMMA EOF ]
scalar_exp -> scalar_exp . TMUL scalar_exp [ T_WHERE T_UNION T_ORDER T_OR T_ON T_NOT T_MEMCACHE_DIRTY T_LIMIT T_LIKE T_LEFT T_IN T_FROM T_COMPARISON T_AS T_AND TPLUS TOPOR TOPAND TMUL TMINUS TDIV TCPAR TCOMMA EOF ]
scalar_exp -> scalar_exp TMUL scalar_exp . [ T_WHERE T_UNION T_ORDER T_OR T_ON T_NOT T_MEMCACHE_DIRTY T_LIMIT T_LIKE T_LEFT T_IN T_FROM T_COMPARISON T_AS T_AND TPLUS TOPOR TOPAND TMUL TMINUS TDIV TCPAR TCOMMA EOF ]
scalar_exp -> scalar_exp . TDIV scalar_exp [ T_WHERE T_UNION T_ORDER T_OR T_ON T_NOT T_MEMCACHE_DIRTY T_LIMIT T_LIKE T_LEFT T_IN T_FROM T_COMPARISON T_AS T_AND TPLUS TOPOR TOPAND TMUL TMINUS TDIV TCPAR TCOMMA EOF ]
scalar_exp -> scalar_exp . TOPAND scalar_exp [ T_WHERE T_UNION T_ORDER T_OR T_ON T_NOT T_MEMCACHE_DIRTY T_LIMIT T_LIKE T_LEFT T_IN T_FROM T_COMPARISON T_AS T_AND TPLUS TOPOR TOPAND TMUL TMINUS TDIV TCPAR TCOMMA EOF ]
scalar_exp -> scalar_exp . TOPOR scalar_exp [ T_WHERE T_UNION T_ORDER T_OR T_ON T_NOT T_MEMCACHE_DIRTY T_LIMIT T_LIKE T_LEFT T_IN T_FROM T_COMPARISON T_AS T_AND TPLUS TOPOR TOPAND TMUL TMINUS TDIV TCPAR TCOMMA EOF ]
## Transitions:
## Reductions:
-- On T_WHERE T_UNION T_ORDER T_OR T_ON T_NOT T_MEMCACHE_DIRTY T_LIMIT T_LIKE T_LEFT T_IN T_FROM T_COMPARISON T_AS T_AND TPLUS TOPOR TOPAND TMUL TMINUS TDIV TCPAR TCOMMA EOF
--   reduce production scalar_exp -> scalar_exp TMUL scalar_exp

State 54:
## Known stack suffix:
## literal
## LR(1) items:
atom -> literal . [ T_WHERE T_UNION T_ORDER T_OR T_ON T_NOT T_MEMCACHE_DIRTY T_LIMIT T_LIKE T_LEFT T_IN T_FROM T_COMPARISON T_AS T_AND TPLUS TOPOR TOPAND TMUL TMINUS TDIV TCPAR TCOMMA EOF ]
## Transitions:
## Reductions:
-- On T_WHERE T_UNION T_ORDER T_OR T_ON T_NOT T_MEMCACHE_DIRTY T_LIMIT T_LIKE T_LEFT T_IN T_FROM T_COMPARISON T_AS T_AND TPLUS TOPOR TOPAND TMUL TMINUS TDIV TCPAR TCOMMA EOF
--   reduce production atom -> literal

State 55:
## Known stack suffix:
## function_call
## LR(1) items:
scalar_exp -> function_call . [ T_WHERE T_UNION T_ORDER T_OR T_ON T_NOT T_MEMCACHE_DIRTY T_LIMIT T_LIKE T_LEFT T_IN T_FROM T_COMPARISON T_AS T_AND TPLUS TOPOR TOPAND TMUL TMINUS TDIV TCPAR TCOMMA EOF ]
## Transitions:
## Reductions:
-- On T_WHERE T_UNION T_ORDER T_OR T_ON T_NOT T_MEMCACHE_DIRTY T_LIMIT T_LIKE T_LEFT T_IN T_FROM T_COMPARISON T_AS T_AND TPLUS TOPOR TOPAND TMUL TMINUS TDIV TCPAR TCOMMA EOF
--   reduce production scalar_exp -> function_call

State 56:
## Known stack suffix:
## column_ref
## LR(1) items:
scalar_exp -> column_ref . [ T_WHERE T_UNION T_ORDER T_OR T_ON T_NOT T_MEMCACHE_DIRTY T_LIMIT T_LIKE T_LEFT T_IN T_FROM T_COMPARISON T_AS T_AND TPLUS TOPOR TOPAND TMUL TMINUS TDIV TCPAR TCOMMA EOF ]
## Transitions:
## Reductions:
-- On T_WHERE T_UNION T_ORDER T_OR T_ON T_NOT T_MEMCACHE_DIRTY T_LIMIT T_LIKE T_LEFT T_IN T_FROM T_COMPARISON T_AS T_AND TPLUS TOPOR TOPAND TMUL TMINUS TDIV TCPAR TCOMMA EOF
--   reduce production scalar_exp -> column_ref

State 57:
## Known stack suffix:
## atom
## LR(1) items:
scalar_exp -> atom . [ T_WHERE T_UNION T_ORDER T_OR T_ON T_NOT T_MEMCACHE_DIRTY T_LIMIT T_LIKE T_LEFT T_IN T_FROM T_COMPARISON T_AS T_AND TPLUS TOPOR TOPAND TMUL TMINUS TDIV TCPAR TCOMMA EOF ]
## Transitions:
## Reductions:
-- On T_WHERE T_UNION T_ORDER T_OR T_ON T_NOT T_MEMCACHE_DIRTY T_LIMIT T_LIKE T_LEFT T_IN T_FROM T_COMPARISON T_AS T_AND TPLUS TOPOR TOPAND TMUL TMINUS TDIV TCPAR TCOMMA EOF
--   reduce production scalar_exp -> atom

State 58:
## Known stack suffix:
## as_expression
## LR(1) items:
scalar_exp -> as_expression . [ T_WHERE T_UNION T_ORDER T_OR T_ON T_NOT T_MEMCACHE_DIRTY T_LIMIT T_LIKE T_LEFT T_IN T_FROM T_COMPARISON T_AS T_AND TPLUS TOPOR TOPAND TMUL TMINUS TDIV TCPAR TCOMMA EOF ]
## Transitions:
## Reductions:
-- On T_WHERE T_UNION T_ORDER T_OR T_ON T_NOT T_MEMCACHE_DIRTY T_LIMIT T_LIKE T_LEFT T_IN T_FROM T_COMPARISON T_AS T_AND TPLUS TOPOR TOPAND TMUL TMINUS TDIV TCPAR TCOMMA EOF
--   reduce production scalar_exp -> as_expression

State 59:
## Known stack suffix:
## scalar_exp TDIV
## LR(1) items:
scalar_exp -> scalar_exp TDIV . scalar_exp [ T_WHERE T_UNION T_ORDER T_OR T_ON T_NOT T_MEMCACHE_DIRTY T_LIMIT T_LIKE T_LEFT T_IN T_FROM T_COMPARISON T_AS T_AND TPLUS TOPOR TOPAND TMUL TMINUS TDIV TCPAR TCOMMA EOF ]
## Transitions:
-- On T_STRING shift to state 14
-- On T_NULLX shift to state 15
-- On T_NAME shift to state 16
-- On T_INTNUM shift to state 31
-- On T_DNUMBER shift to state 32
-- On TPLUS shift to state 33
-- On TOPNOT shift to state 34
-- On TOPNEG shift to state 35
-- On TOPAR shift to state 36
-- On TMUL shift to state 37
-- On TMINUS shift to state 38
-- On APPROXNUM shift to state 39
-- On scalar_exp shift to state 60
-- On q_table_name shift to state 41
-- On literal shift to state 54
-- On function_call shift to state 55
-- On column_ref shift to state 56
-- On atom shift to state 57
-- On as_expression shift to state 58
## Reductions:

State 60:
## Known stack suffix:
## scalar_exp TDIV scalar_exp
## LR(1) items:
as_expression -> scalar_exp . T_AS T_NAME [ T_WHERE T_UNION T_ORDER T_OR T_ON T_NOT T_MEMCACHE_DIRTY T_LIMIT T_LIKE T_LEFT T_IN T_FROM T_COMPARISON T_AS T_AND TPLUS TOPOR TOPAND TMUL TMINUS TDIV TCPAR TCOMMA EOF ]
scalar_exp -> scalar_exp . TPLUS scalar_exp [ T_WHERE T_UNION T_ORDER T_OR T_ON T_NOT T_MEMCACHE_DIRTY T_LIMIT T_LIKE T_LEFT T_IN T_FROM T_COMPARISON T_AS T_AND TPLUS TOPOR TOPAND TMUL TMINUS TDIV TCPAR TCOMMA EOF ]
scalar_exp -> scalar_exp . TMINUS scalar_exp [ T_WHERE T_UNION T_ORDER T_OR T_ON T_NOT T_MEMCACHE_DIRTY T_LIMIT T_LIKE T_LEFT T_IN T_FROM T_COMPARISON T_AS T_AND TPLUS TOPOR TOPAND TMUL TMINUS TDIV TCPAR TCOMMA EOF ]
scalar_exp -> scalar_exp . TMUL scalar_exp [ T_WHERE T_UNION T_ORDER T_OR T_ON T_NOT T_MEMCACHE_DIRTY T_LIMIT T_LIKE T_LEFT T_IN T_FROM T_COMPARISON T_AS T_AND TPLUS TOPOR TOPAND TMUL TMINUS TDIV TCPAR TCOMMA EOF ]
scalar_exp -> scalar_exp . TDIV scalar_exp [ T_WHERE T_UNION T_ORDER T_OR T_ON T_NOT T_MEMCACHE_DIRTY T_LIMIT T_LIKE T_LEFT T_IN T_FROM T_COMPARISON T_AS T_AND TPLUS TOPOR TOPAND TMUL TMINUS TDIV TCPAR TCOMMA EOF ]
scalar_exp -> scalar_exp TDIV scalar_exp . [ T_WHERE T_UNION T_ORDER T_OR T_ON T_NOT T_MEMCACHE_DIRTY T_LIMIT T_LIKE T_LEFT T_IN T_FROM T_COMPARISON T_AS T_AND TPLUS TOPOR TOPAND TMUL TMINUS TDIV TCPAR TCOMMA EOF ]
scalar_exp -> scalar_exp . TOPAND scalar_exp [ T_WHERE T_UNION T_ORDER T_OR T_ON T_NOT T_MEMCACHE_DIRTY T_LIMIT T_LIKE T_LEFT T_IN T_FROM T_COMPARISON T_AS T_AND TPLUS TOPOR TOPAND TMUL TMINUS TDIV TCPAR TCOMMA EOF ]
scalar_exp -> scalar_exp . TOPOR scalar_exp [ T_WHERE T_UNION T_ORDER T_OR T_ON T_NOT T_MEMCACHE_DIRTY T_LIMIT T_LIKE T_LEFT T_IN T_FROM T_COMPARISON T_AS T_AND TPLUS TOPOR TOPAND TMUL TMINUS TDIV TCPAR TCOMMA EOF ]
## Transitions:
## Reductions:
-- On T_WHERE T_UNION T_ORDER T_OR T_ON T_NOT T_MEMCACHE_DIRTY T_LIMIT T_LIKE T_LEFT T_IN T_FROM T_COMPARISON T_AS T_AND TPLUS TOPOR TOPAND TMUL TMINUS TDIV TCPAR TCOMMA EOF
--   reduce production scalar_exp -> scalar_exp TDIV scalar_exp

State 61:
## Known stack suffix:
## scalar_exp TOPOR
## LR(1) items:
scalar_exp -> scalar_exp TOPOR . scalar_exp [ T_WHERE T_UNION T_ORDER T_OR T_ON T_NOT T_MEMCACHE_DIRTY T_LIMIT T_LIKE T_LEFT T_IN T_FROM T_COMPARISON T_AS T_AND TPLUS TOPOR TOPAND TMUL TMINUS TDIV TCPAR TCOMMA EOF ]
## Transitions:
-- On T_STRING shift to state 14
-- On T_NULLX shift to state 15
-- On T_NAME shift to state 16
-- On T_INTNUM shift to state 31
-- On T_DNUMBER shift to state 32
-- On TPLUS shift to state 33
-- On TOPNOT shift to state 34
-- On TOPNEG shift to state 35
-- On TOPAR shift to state 36
-- On TMUL shift to state 37
-- On TMINUS shift to state 38
-- On APPROXNUM shift to state 39
-- On scalar_exp shift to state 62
-- On q_table_name shift to state 41
-- On literal shift to state 54
-- On function_call shift to state 55
-- On column_ref shift to state 56
-- On atom shift to state 57
-- On as_expression shift to state 58
## Reductions:

State 62:
## Known stack suffix:
## scalar_exp TOPOR scalar_exp
## LR(1) items:
as_expression -> scalar_exp . T_AS T_NAME [ T_WHERE T_UNION T_ORDER T_OR T_ON T_NOT T_MEMCACHE_DIRTY T_LIMIT T_LIKE T_LEFT T_IN T_FROM T_COMPARISON T_AS T_AND TPLUS TOPOR TOPAND TMUL TMINUS TDIV TCPAR TCOMMA EOF ]
scalar_exp -> scalar_exp . TPLUS scalar_exp [ T_WHERE T_UNION T_ORDER T_OR T_ON T_NOT T_MEMCACHE_DIRTY T_LIMIT T_LIKE T_LEFT T_IN T_FROM T_COMPARISON T_AS T_AND TPLUS TOPOR TOPAND TMUL TMINUS TDIV TCPAR TCOMMA EOF ]
scalar_exp -> scalar_exp . TMINUS scalar_exp [ T_WHERE T_UNION T_ORDER T_OR T_ON T_NOT T_MEMCACHE_DIRTY T_LIMIT T_LIKE T_LEFT T_IN T_FROM T_COMPARISON T_AS T_AND TPLUS TOPOR TOPAND TMUL TMINUS TDIV TCPAR TCOMMA EOF ]
scalar_exp -> scalar_exp . TMUL scalar_exp [ T_WHERE T_UNION T_ORDER T_OR T_ON T_NOT T_MEMCACHE_DIRTY T_LIMIT T_LIKE T_LEFT T_IN T_FROM T_COMPARISON T_AS T_AND TPLUS TOPOR TOPAND TMUL TMINUS TDIV TCPAR TCOMMA EOF ]
scalar_exp -> scalar_exp . TDIV scalar_exp [ T_WHERE T_UNION T_ORDER T_OR T_ON T_NOT T_MEMCACHE_DIRTY T_LIMIT T_LIKE T_LEFT T_IN T_FROM T_COMPARISON T_AS T_AND TPLUS TOPOR TOPAND TMUL TMINUS TDIV TCPAR TCOMMA EOF ]
scalar_exp -> scalar_exp . TOPAND scalar_exp [ T_WHERE T_UNION T_ORDER T_OR T_ON T_NOT T_MEMCACHE_DIRTY T_LIMIT T_LIKE T_LEFT T_IN T_FROM T_COMPARISON T_AS T_AND TPLUS TOPOR TOPAND TMUL TMINUS TDIV TCPAR TCOMMA EOF ]
scalar_exp -> scalar_exp . TOPOR scalar_exp [ T_WHERE T_UNION T_ORDER T_OR T_ON T_NOT T_MEMCACHE_DIRTY T_LIMIT T_LIKE T_LEFT T_IN T_FROM T_COMPARISON T_AS T_AND TPLUS TOPOR TOPAND TMUL TMINUS TDIV TCPAR TCOMMA EOF ]
scalar_exp -> scalar_exp TOPOR scalar_exp . [ T_WHERE T_UNION T_ORDER T_OR T_ON T_NOT T_MEMCACHE_DIRTY T_LIMIT T_LIKE T_LEFT T_IN T_FROM T_COMPARISON T_AS T_AND TPLUS TOPOR TOPAND TMUL TMINUS TDIV TCPAR TCOMMA EOF ]
## Transitions:
-- On TPLUS shift to state 50
-- On TOPAND shift to state 63
-- On TMUL shift to state 52
-- On TMINUS shift to state 65
-- On TDIV shift to state 59
## Reductions:
-- On T_WHERE T_UNION T_ORDER T_OR T_ON T_NOT T_MEMCACHE_DIRTY T_LIMIT T_LIKE T_LEFT T_IN T_FROM T_COMPARISON T_AS T_AND TOPOR TCPAR TCOMMA EOF
--   reduce production scalar_exp -> scalar_exp TOPOR scalar_exp

State 63:
## Known stack suffix:
## scalar_exp TOPAND
## LR(1) items:
scalar_exp -> scalar_exp TOPAND . scalar_exp [ T_WHERE T_UNION T_ORDER T_OR T_ON T_NOT T_MEMCACHE_DIRTY T_LIMIT T_LIKE T_LEFT T_IN T_FROM T_COMPARISON T_AS T_AND TPLUS TOPOR TOPAND TMUL TMINUS TDIV TCPAR TCOMMA EOF ]
## Transitions:
-- On T_STRING shift to state 14
-- On T_NULLX shift to state 15
-- On T_NAME shift to state 16
-- On T_INTNUM shift to state 31
-- On T_DNUMBER shift to state 32
-- On TPLUS shift to state 33
-- On TOPNOT shift to state 34
-- On TOPNEG shift to state 35
-- On TOPAR shift to state 36
-- On TMUL shift to state 37
-- On TMINUS shift to state 38
-- On APPROXNUM shift to state 39
-- On scalar_exp shift to state 64
-- On q_table_name shift to state 41
-- On literal shift to state 54
-- On function_call shift to state 55
-- On column_ref shift to state 56
-- On atom shift to state 57
-- On as_expression shift to state 58
## Reductions:

State 64:
## Known stack suffix:
## scalar_exp TOPAND scalar_exp
## LR(1) items:
as_expression -> scalar_exp . T_AS T_NAME [ T_WHERE T_UNION T_ORDER T_OR T_ON T_NOT T_MEMCACHE_DIRTY T_LIMIT T_LIKE T_LEFT T_IN T_FROM T_COMPARISON T_AS T_AND TPLUS TOPOR TOPAND TMUL TMINUS TDIV TCPAR TCOMMA EOF ]
scalar_exp -> scalar_exp . TPLUS scalar_exp [ T_WHERE T_UNION T_ORDER T_OR T_ON T_NOT T_MEMCACHE_DIRTY T_LIMIT T_LIKE T_LEFT T_IN T_FROM T_COMPARISON T_AS T_AND TPLUS TOPOR TOPAND TMUL TMINUS TDIV TCPAR TCOMMA EOF ]
scalar_exp -> scalar_exp . TMINUS scalar_exp [ T_WHERE T_UNION T_ORDER T_OR T_ON T_NOT T_MEMCACHE_DIRTY T_LIMIT T_LIKE T_LEFT T_IN T_FROM T_COMPARISON T_AS T_AND TPLUS TOPOR TOPAND TMUL TMINUS TDIV TCPAR TCOMMA EOF ]
scalar_exp -> scalar_exp . TMUL scalar_exp [ T_WHERE T_UNION T_ORDER T_OR T_ON T_NOT T_MEMCACHE_DIRTY T_LIMIT T_LIKE T_LEFT T_IN T_FROM T_COMPARISON T_AS T_AND TPLUS TOPOR TOPAND TMUL TMINUS TDIV TCPAR TCOMMA EOF ]
scalar_exp -> scalar_exp . TDIV scalar_exp [ T_WHERE T_UNION T_ORDER T_OR T_ON T_NOT T_MEMCACHE_DIRTY T_LIMIT T_LIKE T_LEFT T_IN T_FROM T_COMPARISON T_AS T_AND TPLUS TOPOR TOPAND TMUL TMINUS TDIV TCPAR TCOMMA EOF ]
scalar_exp -> scalar_exp . TOPAND scalar_exp [ T_WHERE T_UNION T_ORDER T_OR T_ON T_NOT T_MEMCACHE_DIRTY T_LIMIT T_LIKE T_LEFT T_IN T_FROM T_COMPARISON T_AS T_AND TPLUS TOPOR TOPAND TMUL TMINUS TDIV TCPAR TCOMMA EOF ]
scalar_exp -> scalar_exp TOPAND scalar_exp . [ T_WHERE T_UNION T_ORDER T_OR T_ON T_NOT T_MEMCACHE_DIRTY T_LIMIT T_LIKE T_LEFT T_IN T_FROM T_COMPARISON T_AS T_AND TPLUS TOPOR TOPAND TMUL TMINUS TDIV TCPAR TCOMMA EOF ]
scalar_exp -> scalar_exp . TOPOR scalar_exp [ T_WHERE T_UNION T_ORDER T_OR T_ON T_NOT T_MEMCACHE_DIRTY T_LIMIT T_LIKE T_LEFT T_IN T_FROM T_COMPARISON T_AS T_AND TPLUS TOPOR TOPAND TMUL TMINUS TDIV TCPAR TCOMMA EOF ]
## Transitions:
-- On TPLUS shift to state 50
-- On TMUL shift to state 52
-- On TMINUS shift to state 65
-- On TDIV shift to state 59
## Reductions:
-- On T_WHERE T_UNION T_ORDER T_OR T_ON T_NOT T_MEMCACHE_DIRTY T_LIMIT T_LIKE T_LEFT T_IN T_FROM T_COMPARISON T_AS T_AND TOPOR TOPAND TCPAR TCOMMA EOF
--   reduce production scalar_exp -> scalar_exp TOPAND scalar_exp

State 65:
## Known stack suffix:
## scalar_exp TMINUS
## LR(1) items:
scalar_exp -> scalar_exp TMINUS . scalar_exp [ T_WHERE T_UNION T_ORDER T_OR T_ON T_NOT T_MEMCACHE_DIRTY T_LIMIT T_LIKE T_LEFT T_IN T_FROM T_COMPARISON T_AS T_AND TPLUS TOPOR TOPAND TMUL TMINUS TDIV TCPAR TCOMMA EOF ]
## Transitions:
-- On T_STRING shift to state 14
-- On T_NULLX shift to state 15
-- On T_NAME shift to state 16
-- On T_INTNUM shift to state 31
-- On T_DNUMBER shift to state 32
-- On TPLUS shift to state 33
-- On TOPNOT shift to state 34
-- On TOPNEG shift to state 35
-- On TOPAR shift to state 36
-- On TMUL shift to state 37
-- On TMINUS shift to state 38
-- On APPROXNUM shift to state 39
-- On scalar_exp shift to state 66
-- On q_table_name shift to state 41
-- On literal shift to state 54
-- On function_call shift to state 55
-- On column_ref shift to state 56
-- On atom shift to state 57
-- On as_expression shift to state 58
## Reductions:

State 66:
## Known stack suffix:
## scalar_exp TMINUS scalar_exp
## LR(1) items:
as_expression -> scalar_exp . T_AS T_NAME [ T_WHERE T_UNION T_ORDER T_OR T_ON T_NOT T_MEMCACHE_DIRTY T_LIMIT T_LIKE T_LEFT T_IN T_FROM T_COMPARISON T_AS T_AND TPLUS TOPOR TOPAND TMUL TMINUS TDIV TCPAR TCOMMA EOF ]
scalar_exp -> scalar_exp . TPLUS scalar_exp [ T_WHERE T_UNION T_ORDER T_OR T_ON T_NOT T_MEMCACHE_DIRTY T_LIMIT T_LIKE T_LEFT T_IN T_FROM T_COMPARISON T_AS T_AND TPLUS TOPOR TOPAND TMUL TMINUS TDIV TCPAR TCOMMA EOF ]
scalar_exp -> scalar_exp . TMINUS scalar_exp [ T_WHERE T_UNION T_ORDER T_OR T_ON T_NOT T_MEMCACHE_DIRTY T_LIMIT T_LIKE T_LEFT T_IN T_FROM T_COMPARISON T_AS T_AND TPLUS TOPOR TOPAND TMUL TMINUS TDIV TCPAR TCOMMA EOF ]
scalar_exp -> scalar_exp TMINUS scalar_exp . [ T_WHERE T_UNION T_ORDER T_OR T_ON T_NOT T_MEMCACHE_DIRTY T_LIMIT T_LIKE T_LEFT T_IN T_FROM T_COMPARISON T_AS T_AND TPLUS TOPOR TOPAND TMUL TMINUS TDIV TCPAR TCOMMA EOF ]
scalar_exp -> scalar_exp . TMUL scalar_exp [ T_WHERE T_UNION T_ORDER T_OR T_ON T_NOT T_MEMCACHE_DIRTY T_LIMIT T_LIKE T_LEFT T_IN T_FROM T_COMPARISON T_AS T_AND TPLUS TOPOR TOPAND TMUL TMINUS TDIV TCPAR TCOMMA EOF ]
scalar_exp -> scalar_exp . TDIV scalar_exp [ T_WHERE T_UNION T_ORDER T_OR T_ON T_NOT T_MEMCACHE_DIRTY T_LIMIT T_LIKE T_LEFT T_IN T_FROM T_COMPARISON T_AS T_AND TPLUS TOPOR TOPAND TMUL TMINUS TDIV TCPAR TCOMMA EOF ]
scalar_exp -> scalar_exp . TOPAND scalar_exp [ T_WHERE T_UNION T_ORDER T_OR T_ON T_NOT T_MEMCACHE_DIRTY T_LIMIT T_LIKE T_LEFT T_IN T_FROM T_COMPARISON T_AS T_AND TPLUS TOPOR TOPAND TMUL TMINUS TDIV TCPAR TCOMMA EOF ]
scalar_exp -> scalar_exp . TOPOR scalar_exp [ T_WHERE T_UNION T_ORDER T_OR T_ON T_NOT T_MEMCACHE_DIRTY T_LIMIT T_LIKE T_LEFT T_IN T_FROM T_COMPARISON T_AS T_AND TPLUS TOPOR TOPAND TMUL TMINUS TDIV TCPAR TCOMMA EOF ]
## Transitions:
-- On TMUL shift to state 52
-- On TDIV shift to state 59
## Reductions:
-- On T_WHERE T_UNION T_ORDER T_OR T_ON T_NOT T_MEMCACHE_DIRTY T_LIMIT T_LIKE T_LEFT T_IN T_FROM T_COMPARISON T_AS T_AND TPLUS TOPOR TOPAND TMINUS TCPAR TCOMMA EOF
--   reduce production scalar_exp -> scalar_exp TMINUS scalar_exp

State 67:
## Known stack suffix:
## scalar_exp
## LR(1) items:
as_expression -> scalar_exp . T_AS T_NAME [ T_FROM T_AS TPLUS TOPOR TOPAND TMUL TMINUS TDIV TCPAR TCOMMA ]
scalar_exp -> scalar_exp . TPLUS scalar_exp [ T_FROM T_AS TPLUS TOPOR TOPAND TMUL TMINUS TDIV TCPAR TCOMMA ]
scalar_exp -> scalar_exp . TMINUS scalar_exp [ T_FROM T_AS TPLUS TOPOR TOPAND TMUL TMINUS TDIV TCPAR TCOMMA ]
scalar_exp -> scalar_exp . TMUL scalar_exp [ T_FROM T_AS TPLUS TOPOR TOPAND TMUL TMINUS TDIV TCPAR TCOMMA ]
scalar_exp -> scalar_exp . TDIV scalar_exp [ T_FROM T_AS TPLUS TOPOR TOPAND TMUL TMINUS TDIV TCPAR TCOMMA ]
scalar_exp -> scalar_exp . TOPAND scalar_exp [ T_FROM T_AS TPLUS TOPOR TOPAND TMUL TMINUS TDIV TCPAR TCOMMA ]
scalar_exp -> scalar_exp . TOPOR scalar_exp [ T_FROM T_AS TPLUS TOPOR TOPAND TMUL TMINUS TDIV TCPAR TCOMMA ]
scalar_exp_list -> scalar_exp . [ T_FROM TCPAR TCOMMA ]
## Transitions:
-- On T_AS shift to state 48
-- On TPLUS shift to state 50
-- On TOPOR shift to state 61
-- On TOPAND shift to state 63
-- On TMUL shift to state 52
-- On TMINUS shift to state 65
-- On TDIV shift to state 59
## Reductions:
-- On T_FROM TCPAR TCOMMA
--   reduce production scalar_exp_list -> scalar_exp

State 68:
## Known stack suffix:
## TOPAR scalar_exp_list
## LR(1) items:
scalar_exp -> TOPAR scalar_exp_list . TCPAR [ T_WHERE T_UNION T_ORDER T_OR T_ON T_NOT T_MEMCACHE_DIRTY T_LIMIT T_LIKE T_LEFT T_IN T_FROM T_COMPARISON T_AS T_AND TPLUS TOPOR TOPAND TMUL TMINUS TDIV TCPAR TCOMMA EOF ]
scalar_exp_list -> scalar_exp_list . TCOMMA scalar_exp [ TCPAR TCOMMA ]
## Transitions:
-- On TCPAR shift to state 69
-- On TCOMMA shift to state 46
## Reductions:

State 69:
## Known stack suffix:
## TOPAR scalar_exp_list TCPAR
## LR(1) items:
scalar_exp -> TOPAR scalar_exp_list TCPAR . [ T_WHERE T_UNION T_ORDER T_OR T_ON T_NOT T_MEMCACHE_DIRTY T_LIMIT T_LIKE T_LEFT T_IN T_FROM T_COMPARISON T_AS T_AND TPLUS TOPOR TOPAND TMUL TMINUS TDIV TCPAR TCOMMA EOF ]
## Transitions:
## Reductions:
-- On T_WHERE T_UNION T_ORDER T_OR T_ON T_NOT T_MEMCACHE_DIRTY T_LIMIT T_LIKE T_LEFT T_IN T_FROM T_COMPARISON T_AS T_AND TPLUS TOPOR TOPAND TMUL TMINUS TDIV TCPAR TCOMMA EOF
--   reduce production scalar_exp -> TOPAR scalar_exp_list TCPAR

State 70:
## Known stack suffix:
## TOPNEG scalar_exp
## LR(1) items:
as_expression -> scalar_exp . T_AS T_NAME [ T_WHERE T_UNION T_ORDER T_OR T_ON T_NOT T_MEMCACHE_DIRTY T_LIMIT T_LIKE T_LEFT T_IN T_FROM T_COMPARISON T_AS T_AND TPLUS TOPOR TOPAND TMUL TMINUS TDIV TCPAR TCOMMA EOF ]
scalar_exp -> scalar_exp . TPLUS scalar_exp [ T_WHERE T_UNION T_ORDER T_OR T_ON T_NOT T_MEMCACHE_DIRTY T_LIMIT T_LIKE T_LEFT T_IN T_FROM T_COMPARISON T_AS T_AND TPLUS TOPOR TOPAND TMUL TMINUS TDIV TCPAR TCOMMA EOF ]
scalar_exp -> scalar_exp . TMINUS scalar_exp [ T_WHERE T_UNION T_ORDER T_OR T_ON T_NOT T_MEMCACHE_DIRTY T_LIMIT T_LIKE T_LEFT T_IN T_FROM T_COMPARISON T_AS T_AND TPLUS TOPOR TOPAND TMUL TMINUS TDIV TCPAR TCOMMA EOF ]
scalar_exp -> scalar_exp . TMUL scalar_exp [ T_WHERE T_UNION T_ORDER T_OR T_ON T_NOT T_MEMCACHE_DIRTY T_LIMIT T_LIKE T_LEFT T_IN T_FROM T_COMPARISON T_AS T_AND TPLUS TOPOR TOPAND TMUL TMINUS TDIV TCPAR TCOMMA EOF ]
scalar_exp -> scalar_exp . TDIV scalar_exp [ T_WHERE T_UNION T_ORDER T_OR T_ON T_NOT T_MEMCACHE_DIRTY T_LIMIT T_LIKE T_LEFT T_IN T_FROM T_COMPARISON T_AS T_AND TPLUS TOPOR TOPAND TMUL TMINUS TDIV TCPAR TCOMMA EOF ]
scalar_exp -> scalar_exp . TOPAND scalar_exp [ T_WHERE T_UNION T_ORDER T_OR T_ON T_NOT T_MEMCACHE_DIRTY T_LIMIT T_LIKE T_LEFT T_IN T_FROM T_COMPARISON T_AS T_AND TPLUS TOPOR TOPAND TMUL TMINUS TDIV TCPAR TCOMMA EOF ]
scalar_exp -> scalar_exp . TOPOR scalar_exp [ T_WHERE T_UNION T_ORDER T_OR T_ON T_NOT T_MEMCACHE_DIRTY T_LIMIT T_LIKE T_LEFT T_IN T_FROM T_COMPARISON T_AS T_AND TPLUS TOPOR TOPAND TMUL TMINUS TDIV TCPAR TCOMMA EOF ]
scalar_exp -> TOPNEG scalar_exp . [ T_WHERE T_UNION T_ORDER T_OR T_ON T_NOT T_MEMCACHE_DIRTY T_LIMIT T_LIKE T_LEFT T_IN T_FROM T_COMPARISON T_AS T_AND TPLUS TOPOR TOPAND TMUL TMINUS TDIV TCPAR TCOMMA EOF ]
## Transitions:
## Reductions:
-- On T_WHERE T_UNION T_ORDER T_OR T_ON T_NOT T_MEMCACHE_DIRTY T_LIMIT T_LIKE T_LEFT T_IN T_FROM T_COMPARISON T_AS T_AND TPLUS TOPOR TOPAND TMUL TMINUS TDIV TCPAR TCOMMA EOF
--   reduce production scalar_exp -> TOPNEG scalar_exp

State 71:
## Known stack suffix:
## TOPNOT scalar_exp
## LR(1) items:
as_expression -> scalar_exp . T_AS T_NAME [ T_WHERE T_UNION T_ORDER T_OR T_ON T_NOT T_MEMCACHE_DIRTY T_LIMIT T_LIKE T_LEFT T_IN T_FROM T_COMPARISON T_AS T_AND TPLUS TOPOR TOPAND TMUL TMINUS TDIV TCPAR TCOMMA EOF ]
scalar_exp -> scalar_exp . TPLUS scalar_exp [ T_WHERE T_UNION T_ORDER T_OR T_ON T_NOT T_MEMCACHE_DIRTY T_LIMIT T_LIKE T_LEFT T_IN T_FROM T_COMPARISON T_AS T_AND TPLUS TOPOR TOPAND TMUL TMINUS TDIV TCPAR TCOMMA EOF ]
scalar_exp -> scalar_exp . TMINUS scalar_exp [ T_WHERE T_UNION T_ORDER T_OR T_ON T_NOT T_MEMCACHE_DIRTY T_LIMIT T_LIKE T_LEFT T_IN T_FROM T_COMPARISON T_AS T_AND TPLUS TOPOR TOPAND TMUL TMINUS TDIV TCPAR TCOMMA EOF ]
scalar_exp -> scalar_exp . TMUL scalar_exp [ T_WHERE T_UNION T_ORDER T_OR T_ON T_NOT T_MEMCACHE_DIRTY T_LIMIT T_LIKE T_LEFT T_IN T_FROM T_COMPARISON T_AS T_AND TPLUS TOPOR TOPAND TMUL TMINUS TDIV TCPAR TCOMMA EOF ]
scalar_exp -> scalar_exp . TDIV scalar_exp [ T_WHERE T_UNION T_ORDER T_OR T_ON T_NOT T_MEMCACHE_DIRTY T_LIMIT T_LIKE T_LEFT T_IN T_FROM T_COMPARISON T_AS T_AND TPLUS TOPOR TOPAND TMUL TMINUS TDIV TCPAR TCOMMA EOF ]
scalar_exp -> scalar_exp . TOPAND scalar_exp [ T_WHERE T_UNION T_ORDER T_OR T_ON T_NOT T_MEMCACHE_DIRTY T_LIMIT T_LIKE T_LEFT T_IN T_FROM T_COMPARISON T_AS T_AND TPLUS TOPOR TOPAND TMUL TMINUS TDIV TCPAR TCOMMA EOF ]
scalar_exp -> scalar_exp . TOPOR scalar_exp [ T_WHERE T_UNION T_ORDER T_OR T_ON T_NOT T_MEMCACHE_DIRTY T_LIMIT T_LIKE T_LEFT T_IN T_FROM T_COMPARISON T_AS T_AND TPLUS TOPOR TOPAND TMUL TMINUS TDIV TCPAR TCOMMA EOF ]
scalar_exp -> TOPNOT scalar_exp . [ T_WHERE T_UNION T_ORDER T_OR T_ON T_NOT T_MEMCACHE_DIRTY T_LIMIT T_LIKE T_LEFT T_IN T_FROM T_COMPARISON T_AS T_AND TPLUS TOPOR TOPAND TMUL TMINUS TDIV TCPAR TCOMMA EOF ]
## Transitions:
## Reductions:
-- On T_WHERE T_UNION T_ORDER T_OR T_ON T_NOT T_MEMCACHE_DIRTY T_LIMIT T_LIKE T_LEFT T_IN T_FROM T_COMPARISON T_AS T_AND TPLUS TOPOR TOPAND TMUL TMINUS TDIV TCPAR TCOMMA EOF
--   reduce production scalar_exp -> TOPNOT scalar_exp

State 72:
## Known stack suffix:
## TPLUS scalar_exp
## LR(1) items:
as_expression -> scalar_exp . T_AS T_NAME [ T_WHERE T_UNION T_ORDER T_OR T_ON T_NOT T_MEMCACHE_DIRTY T_LIMIT T_LIKE T_LEFT T_IN T_FROM T_COMPARISON T_AS T_AND TPLUS TOPOR TOPAND TMUL TMINUS TDIV TCPAR TCOMMA EOF ]
scalar_exp -> scalar_exp . TPLUS scalar_exp [ T_WHERE T_UNION T_ORDER T_OR T_ON T_NOT T_MEMCACHE_DIRTY T_LIMIT T_LIKE T_LEFT T_IN T_FROM T_COMPARISON T_AS T_AND TPLUS TOPOR TOPAND TMUL TMINUS TDIV TCPAR TCOMMA EOF ]
scalar_exp -> scalar_exp . TMINUS scalar_exp [ T_WHERE T_UNION T_ORDER T_OR T_ON T_NOT T_MEMCACHE_DIRTY T_LIMIT T_LIKE T_LEFT T_IN T_FROM T_COMPARISON T_AS T_AND TPLUS TOPOR TOPAND TMUL TMINUS TDIV TCPAR TCOMMA EOF ]
scalar_exp -> scalar_exp . TMUL scalar_exp [ T_WHERE T_UNION T_ORDER T_OR T_ON T_NOT T_MEMCACHE_DIRTY T_LIMIT T_LIKE T_LEFT T_IN T_FROM T_COMPARISON T_AS T_AND TPLUS TOPOR TOPAND TMUL TMINUS TDIV TCPAR TCOMMA EOF ]
scalar_exp -> scalar_exp . TDIV scalar_exp [ T_WHERE T_UNION T_ORDER T_OR T_ON T_NOT T_MEMCACHE_DIRTY T_LIMIT T_LIKE T_LEFT T_IN T_FROM T_COMPARISON T_AS T_AND TPLUS TOPOR TOPAND TMUL TMINUS TDIV TCPAR TCOMMA EOF ]
scalar_exp -> scalar_exp . TOPAND scalar_exp [ T_WHERE T_UNION T_ORDER T_OR T_ON T_NOT T_MEMCACHE_DIRTY T_LIMIT T_LIKE T_LEFT T_IN T_FROM T_COMPARISON T_AS T_AND TPLUS TOPOR TOPAND TMUL TMINUS TDIV TCPAR TCOMMA EOF ]
scalar_exp -> scalar_exp . TOPOR scalar_exp [ T_WHERE T_UNION T_ORDER T_OR T_ON T_NOT T_MEMCACHE_DIRTY T_LIMIT T_LIKE T_LEFT T_IN T_FROM T_COMPARISON T_AS T_AND TPLUS TOPOR TOPAND TMUL TMINUS TDIV TCPAR TCOMMA EOF ]
scalar_exp -> TPLUS scalar_exp . [ T_WHERE T_UNION T_ORDER T_OR T_ON T_NOT T_MEMCACHE_DIRTY T_LIMIT T_LIKE T_LEFT T_IN T_FROM T_COMPARISON T_AS T_AND TPLUS TOPOR TOPAND TMUL TMINUS TDIV TCPAR TCOMMA EOF ]
## Transitions:
## Reductions:
-- On T_WHERE T_UNION T_ORDER T_OR T_ON T_NOT T_MEMCACHE_DIRTY T_LIMIT T_LIKE T_LEFT T_IN T_FROM T_COMPARISON T_AS T_AND TPLUS TOPOR TOPAND TMUL TMINUS TDIV TCPAR TCOMMA EOF
--   reduce production scalar_exp -> TPLUS scalar_exp

State 73:
## Known stack suffix:
## column T_COMPARISON scalar_exp
## LR(1) items:
as_expression -> scalar_exp . T_AS T_NAME [ T_WHERE T_MEMCACHE_DIRTY T_AS TPLUS TOPOR TOPAND TMUL TMINUS TDIV TCOMMA EOF ]
assignment -> column T_COMPARISON scalar_exp . [ T_WHERE T_MEMCACHE_DIRTY TCOMMA EOF ]
scalar_exp -> scalar_exp . TPLUS scalar_exp [ T_WHERE T_MEMCACHE_DIRTY T_AS TPLUS TOPOR TOPAND TMUL TMINUS TDIV TCOMMA EOF ]
scalar_exp -> scalar_exp . TMINUS scalar_exp [ T_WHERE T_MEMCACHE_DIRTY T_AS TPLUS TOPOR TOPAND TMUL TMINUS TDIV TCOMMA EOF ]
scalar_exp -> scalar_exp . TMUL scalar_exp [ T_WHERE T_MEMCACHE_DIRTY T_AS TPLUS TOPOR TOPAND TMUL TMINUS TDIV TCOMMA EOF ]
scalar_exp -> scalar_exp . TDIV scalar_exp [ T_WHERE T_MEMCACHE_DIRTY T_AS TPLUS TOPOR TOPAND TMUL TMINUS TDIV TCOMMA EOF ]
scalar_exp -> scalar_exp . TOPAND scalar_exp [ T_WHERE T_MEMCACHE_DIRTY T_AS TPLUS TOPOR TOPAND TMUL TMINUS TDIV TCOMMA EOF ]
scalar_exp -> scalar_exp . TOPOR scalar_exp [ T_WHERE T_MEMCACHE_DIRTY T_AS TPLUS TOPOR TOPAND TMUL TMINUS TDIV TCOMMA EOF ]
## Transitions:
-- On T_AS shift to state 48
-- On TPLUS shift to state 50
-- On TOPOR shift to state 61
-- On TOPAND shift to state 63
-- On TMUL shift to state 52
-- On TMINUS shift to state 65
-- On TDIV shift to state 59
## Reductions:
-- On T_WHERE T_MEMCACHE_DIRTY TCOMMA EOF
--   reduce production assignment -> column T_COMPARISON scalar_exp

State 74:
## Known stack suffix:
## T_UPDATE table T_SET assignment_list
## LR(1) items:
assignment_list -> assignment_list . TCOMMA assignment [ T_WHERE T_MEMCACHE_DIRTY TCOMMA EOF ]
update_statement_searched -> T_UPDATE table T_SET assignment_list . where_clause_opt memcache_opt [ EOF ]
## Transitions:
-- On T_WHERE shift to state 75
-- On TCOMMA shift to state 195
-- On where_clause_opt shift to state 197
-- On where_clause shift to state 133
## Reductions:
-- On T_MEMCACHE_DIRTY EOF
--   reduce production where_clause_opt ->

State 75:
## Known stack suffix:
## T_WHERE
## LR(1) items:
where_clause -> T_WHERE . search_condition [ T_UNION T_ORDER T_ON T_MEMCACHE_DIRTY T_LIMIT TCPAR EOF ]
## Transitions:
-- On T_STRING shift to state 14
-- On T_NULLX shift to state 15
-- On T_NOT shift to state 76
-- On T_NAME shift to state 16
-- On T_INTNUM shift to state 31
-- On T_DNUMBER shift to state 32
-- On TPLUS shift to state 33
-- On TOPNOT shift to state 34
-- On TOPNEG shift to state 35
-- On TOPAR shift to state 77
-- On TMUL shift to state 37
-- On TMINUS shift to state 38
-- On APPROXNUM shift to state 39
-- On search_condition shift to state 194
-- On scalar_exp_predicate shift to state 83
-- On scalar_exp shift to state 84
-- On q_table_name shift to state 41
-- On predicate shift to state 160
-- On literal shift to state 54
-- On like_predicate shift to state 161
-- On in_predicate shift to state 162
-- On function_call shift to state 55
-- On comparison_predicate shift to state 163
-- On column_ref shift to state 56
-- On atom shift to state 57
-- On as_expression shift to state 58
## Reductions:
-- On T_UNION T_ORDER T_OR T_ON T_MEMCACHE_DIRTY T_LIMIT T_AND TCPAR EOF
--   reduce production search_condition ->

State 76:
## Known stack suffix:
## T_NOT
## LR(1) items:
search_condition -> T_NOT . search_condition [ T_WHERE T_UNION T_ORDER T_OR T_ON T_MEMCACHE_DIRTY T_LIMIT T_LEFT T_AND TCPAR TCOMMA EOF ]
## Transitions:
-- On T_STRING shift to state 14
-- On T_NULLX shift to state 15
-- On T_NOT shift to state 76
-- On T_NAME shift to state 16
-- On T_INTNUM shift to state 31
-- On T_DNUMBER shift to state 32
-- On TPLUS shift to state 33
-- On TOPNOT shift to state 34
-- On TOPNEG shift to state 35
-- On TOPAR shift to state 77
-- On TMUL shift to state 37
-- On TMINUS shift to state 38
-- On APPROXNUM shift to state 39
-- On search_condition shift to state 193
-- On scalar_exp_predicate shift to state 83
-- On scalar_exp shift to state 84
-- On q_table_name shift to state 41
-- On predicate shift to state 160
-- On literal shift to state 54
-- On like_predicate shift to state 161
-- On in_predicate shift to state 162
-- On function_call shift to state 55
-- On comparison_predicate shift to state 163
-- On column_ref shift to state 56
-- On atom shift to state 57
-- On as_expression shift to state 58
## Reductions:
-- On T_WHERE T_UNION T_ORDER T_OR T_ON T_MEMCACHE_DIRTY T_LIMIT T_LEFT T_AND TCPAR TCOMMA EOF
--   reduce production search_condition ->

State 77:
## Known stack suffix:
## TOPAR
## LR(1) items:
scalar_exp -> TOPAR . scalar_exp_list TCPAR [ T_WHERE T_UNION T_ORDER T_OR T_ON T_NOT T_MEMCACHE_DIRTY T_LIMIT T_LIKE T_LEFT T_IN T_COMPARISON T_AS T_AND TPLUS TOPOR TOPAND TMUL TMINUS TDIV TCPAR TCOMMA EOF ]
search_condition -> TOPAR . search_condition TCPAR [ T_WHERE T_UNION T_ORDER T_OR T_ON T_MEMCACHE_DIRTY T_LIMIT T_LEFT T_AND TCPAR TCOMMA EOF ]
## Transitions:
-- On T_STRING shift to state 14
-- On T_NULLX shift to state 15
-- On T_NOT shift to state 76
-- On T_NAME shift to state 16
-- On T_INTNUM shift to state 31
-- On T_DNUMBER shift to state 32
-- On TPLUS shift to state 33
-- On TOPNOT shift to state 34
-- On TOPNEG shift to state 35
-- On TOPAR shift to state 77
-- On TMUL shift to state 37
-- On TMINUS shift to state 38
-- On APPROXNUM shift to state 39
-- On search_condition shift to state 78
-- On scalar_exp_predicate shift to state 83
-- On scalar_exp_list shift to state 68
-- On scalar_exp shift to state 192
-- On q_table_name shift to state 41
-- On predicate shift to state 160
-- On literal shift to state 54
-- On like_predicate shift to state 161
-- On in_predicate shift to state 162
-- On function_call shift to state 55
-- On comparison_predicate shift to state 163
-- On column_ref shift to state 56
-- On atom shift to state 57
-- On as_expression shift to state 58
## Reductions:
-- On T_OR T_AND TCPAR
--   reduce production search_condition ->

State 78:
## Known stack suffix:
## TOPAR search_condition
## LR(1) items:
search_condition -> search_condition . T_OR search_condition [ T_OR T_AND TCPAR ]
search_condition -> search_condition . T_AND search_condition [ T_OR T_AND TCPAR ]
search_condition -> TOPAR search_condition . TCPAR [ T_WHERE T_UNION T_ORDER T_OR T_ON T_MEMCACHE_DIRTY T_LIMIT T_LEFT T_AND TCPAR TCOMMA EOF ]
## Transitions:
-- On T_OR shift to state 79
-- On T_AND shift to state 81
-- On TCPAR shift to state 191
## Reductions:

State 79:
## Known stack suffix:
## search_condition T_OR
## LR(1) items:
search_condition -> search_condition T_OR . search_condition [ T_WHERE T_UNION T_ORDER T_OR T_ON T_MEMCACHE_DIRTY T_LIMIT T_LEFT T_AND TCPAR TCOMMA EOF ]
## Transitions:
-- On T_STRING shift to state 14
-- On T_NULLX shift to state 15
-- On T_NOT shift to state 76
-- On T_NAME shift to state 16
-- On T_INTNUM shift to state 31
-- On T_DNUMBER shift to state 32
-- On TPLUS shift to state 33
-- On TOPNOT shift to state 34
-- On TOPNEG shift to state 35
-- On TOPAR shift to state 77
-- On TMUL shift to state 37
-- On TMINUS shift to state 38
-- On APPROXNUM shift to state 39
-- On search_condition shift to state 80
-- On scalar_exp_predicate shift to state 83
-- On scalar_exp shift to state 84
-- On q_table_name shift to state 41
-- On predicate shift to state 160
-- On literal shift to state 54
-- On like_predicate shift to state 161
-- On in_predicate shift to state 162
-- On function_call shift to state 55
-- On comparison_predicate shift to state 163
-- On column_ref shift to state 56
-- On atom shift to state 57
-- On as_expression shift to state 58
## Reductions:
-- On T_WHERE T_UNION T_ORDER T_OR T_ON T_MEMCACHE_DIRTY T_LIMIT T_LEFT T_AND TCPAR TCOMMA EOF
--   reduce production search_condition ->

State 80:
## Known stack suffix:
## search_condition T_OR search_condition
## LR(1) items:
search_condition -> search_condition . T_OR search_condition [ T_WHERE T_UNION T_ORDER T_OR T_ON T_MEMCACHE_DIRTY T_LIMIT T_LEFT T_AND TCPAR TCOMMA EOF ]
search_condition -> search_condition T_OR search_condition . [ T_WHERE T_UNION T_ORDER T_OR T_ON T_MEMCACHE_DIRTY T_LIMIT T_LEFT T_AND TCPAR TCOMMA EOF ]
search_condition -> search_condition . T_AND search_condition [ T_WHERE T_UNION T_ORDER T_OR T_ON T_MEMCACHE_DIRTY T_LIMIT T_LEFT T_AND TCPAR TCOMMA EOF ]
## Transitions:
-- On T_AND shift to state 81
## Reductions:
-- On T_WHERE T_UNION T_ORDER T_OR T_ON T_MEMCACHE_DIRTY T_LIMIT T_LEFT TCPAR TCOMMA EOF
--   reduce production search_condition -> search_condition T_OR search_condition

State 81:
## Known stack suffix:
## search_condition T_AND
## LR(1) items:
search_condition -> search_condition T_AND . search_condition [ T_WHERE T_UNION T_ORDER T_OR T_ON T_MEMCACHE_DIRTY T_LIMIT T_LEFT T_AND TCPAR TCOMMA EOF ]
## Transitions:
-- On T_STRING shift to state 14
-- On T_NULLX shift to state 15
-- On T_NOT shift to state 76
-- On T_NAME shift to state 16
-- On T_INTNUM shift to state 31
-- On T_DNUMBER shift to state 32
-- On TPLUS shift to state 33
-- On TOPNOT shift to state 34
-- On TOPNEG shift to state 35
-- On TOPAR shift to state 77
-- On TMUL shift to state 37
-- On TMINUS shift to state 38
-- On APPROXNUM shift to state 39
-- On search_condition shift to state 82
-- On scalar_exp_predicate shift to state 83
-- On scalar_exp shift to state 84
-- On q_table_name shift to state 41
-- On predicate shift to state 160
-- On literal shift to state 54
-- On like_predicate shift to state 161
-- On in_predicate shift to state 162
-- On function_call shift to state 55
-- On comparison_predicate shift to state 163
-- On column_ref shift to state 56
-- On atom shift to state 57
-- On as_expression shift to state 58
## Reductions:
-- On T_WHERE T_UNION T_ORDER T_OR T_ON T_MEMCACHE_DIRTY T_LIMIT T_LEFT T_AND TCPAR TCOMMA EOF
--   reduce production search_condition ->

State 82:
## Known stack suffix:
## search_condition T_AND search_condition
## LR(1) items:
search_condition -> search_condition . T_OR search_condition [ T_WHERE T_UNION T_ORDER T_OR T_ON T_MEMCACHE_DIRTY T_LIMIT T_LEFT T_AND TCPAR TCOMMA EOF ]
search_condition -> search_condition . T_AND search_condition [ T_WHERE T_UNION T_ORDER T_OR T_ON T_MEMCACHE_DIRTY T_LIMIT T_LEFT T_AND TCPAR TCOMMA EOF ]
search_condition -> search_condition T_AND search_condition . [ T_WHERE T_UNION T_ORDER T_OR T_ON T_MEMCACHE_DIRTY T_LIMIT T_LEFT T_AND TCPAR TCOMMA EOF ]
## Transitions:
## Reductions:
-- On T_WHERE T_UNION T_ORDER T_OR T_ON T_MEMCACHE_DIRTY T_LIMIT T_LEFT T_AND TCPAR TCOMMA EOF
--   reduce production search_condition -> search_condition T_AND search_condition

State 83:
## Known stack suffix:
## scalar_exp_predicate
## LR(1) items:
predicate -> scalar_exp_predicate . [ T_WHERE T_UNION T_ORDER T_OR T_ON T_MEMCACHE_DIRTY T_LIMIT T_LEFT T_AND TCPAR TCOMMA EOF ]
## Transitions:
## Reductions:
-- On T_WHERE T_UNION T_ORDER T_OR T_ON T_MEMCACHE_DIRTY T_LIMIT T_LEFT T_AND TCPAR TCOMMA EOF
--   reduce production predicate -> scalar_exp_predicate

State 84:
## Known stack suffix:
## scalar_exp
## LR(1) items:
as_expression -> scalar_exp . T_AS T_NAME [ T_WHERE T_UNION T_ORDER T_OR T_ON T_NOT T_MEMCACHE_DIRTY T_LIMIT T_LIKE T_LEFT T_IN T_COMPARISON T_AS T_AND TPLUS TOPOR TOPAND TMUL TMINUS TDIV TCPAR TCOMMA EOF ]
comparison_predicate -> scalar_exp . T_COMPARISON scalar_exp [ T_WHERE T_UNION T_ORDER T_OR T_ON T_MEMCACHE_DIRTY T_LIMIT T_LEFT T_AND TCPAR TCOMMA EOF ]
comparison_predicate -> scalar_exp . T_COMPARISON subquery [ T_WHERE T_UNION T_ORDER T_OR T_ON T_MEMCACHE_DIRTY T_LIMIT T_LEFT T_AND TCPAR TCOMMA EOF ]
in_predicate -> scalar_exp . T_NOT T_IN TOPAR scalar_exp_list TCPAR [ T_WHERE T_UNION T_ORDER T_OR T_ON T_MEMCACHE_DIRTY T_LIMIT T_LEFT T_AND TCPAR TCOMMA EOF ]
in_predicate -> scalar_exp . T_IN TOPAR scalar_exp_list TCPAR [ T_WHERE T_UNION T_ORDER T_OR T_ON T_MEMCACHE_DIRTY T_LIMIT T_LEFT T_AND TCPAR TCOMMA EOF ]
in_predicate -> scalar_exp . T_NOT T_IN subquery [ T_WHERE T_UNION T_ORDER T_OR T_ON T_MEMCACHE_DIRTY T_LIMIT T_LEFT T_AND TCPAR TCOMMA EOF ]
in_predicate -> scalar_exp . T_IN subquery [ T_WHERE T_UNION T_ORDER T_OR T_ON T_MEMCACHE_DIRTY T_LIMIT T_LEFT T_AND TCPAR TCOMMA EOF ]
like_predicate -> scalar_exp . T_NOT T_LIKE scalar_exp opt_escape [ T_WHERE T_UNION T_ORDER T_OR T_ON T_MEMCACHE_DIRTY T_LIMIT T_LEFT T_AND TCPAR TCOMMA EOF ]
like_predicate -> scalar_exp . T_LIKE scalar_exp opt_escape [ T_WHERE T_UNION T_ORDER T_OR T_ON T_MEMCACHE_DIRTY T_LIMIT T_LEFT T_AND TCPAR TCOMMA EOF ]
scalar_exp -> scalar_exp . TPLUS scalar_exp [ T_WHERE T_UNION T_ORDER T_OR T_ON T_NOT T_MEMCACHE_DIRTY T_LIMIT T_LIKE T_LEFT T_IN T_COMPARISON T_AS T_AND TPLUS TOPOR TOPAND TMUL TMINUS TDIV TCPAR TCOMMA EOF ]
scalar_exp -> scalar_exp . TMINUS scalar_exp [ T_WHERE T_UNION T_ORDER T_OR T_ON T_NOT T_MEMCACHE_DIRTY T_LIMIT T_LIKE T_LEFT T_IN T_COMPARISON T_AS T_AND TPLUS TOPOR TOPAND TMUL TMINUS TDIV TCPAR TCOMMA EOF ]
scalar_exp -> scalar_exp . TMUL scalar_exp [ T_WHERE T_UNION T_ORDER T_OR T_ON T_NOT T_MEMCACHE_DIRTY T_LIMIT T_LIKE T_LEFT T_IN T_COMPARISON T_AS T_AND TPLUS TOPOR TOPAND TMUL TMINUS TDIV TCPAR TCOMMA EOF ]
scalar_exp -> scalar_exp . TDIV scalar_exp [ T_WHERE T_UNION T_ORDER T_OR T_ON T_NOT T_MEMCACHE_DIRTY T_LIMIT T_LIKE T_LEFT T_IN T_COMPARISON T_AS T_AND TPLUS TOPOR TOPAND TMUL TMINUS TDIV TCPAR TCOMMA EOF ]
scalar_exp -> scalar_exp . TOPAND scalar_exp [ T_WHERE T_UNION T_ORDER T_OR T_ON T_NOT T_MEMCACHE_DIRTY T_LIMIT T_LIKE T_LEFT T_IN T_COMPARISON T_AS T_AND TPLUS TOPOR TOPAND TMUL TMINUS TDIV TCPAR TCOMMA EOF ]
scalar_exp -> scalar_exp . TOPOR scalar_exp [ T_WHERE T_UNION T_ORDER T_OR T_ON T_NOT T_MEMCACHE_DIRTY T_LIMIT T_LIKE T_LEFT T_IN T_COMPARISON T_AS T_AND TPLUS TOPOR TOPAND TMUL TMINUS TDIV TCPAR TCOMMA EOF ]
scalar_exp_predicate -> scalar_exp . [ T_WHERE T_UNION T_ORDER T_OR T_ON T_MEMCACHE_DIRTY T_LIMIT T_LEFT T_AND TCPAR TCOMMA EOF ]
## Transitions:
-- On T_NOT shift to state 85
-- On T_LIKE shift to state 179
-- On T_IN shift to state 182
-- On T_COMPARISON shift to state 187
-- On T_AS shift to state 48
-- On TPLUS shift to state 50
-- On TOPOR shift to state 61
-- On TOPAND shift to state 63
-- On TMUL shift to state 52
-- On TMINUS shift to state 65
-- On TDIV shift to state 59
## Reductions:
-- On T_WHERE T_UNION T_ORDER T_OR T_ON T_MEMCACHE_DIRTY T_LIMIT T_LEFT T_AND TCPAR TCOMMA EOF
--   reduce production scalar_exp_predicate -> scalar_exp

State 85:
## Known stack suffix:
## scalar_exp T_NOT
## LR(1) items:
in_predicate -> scalar_exp T_NOT . T_IN TOPAR scalar_exp_list TCPAR [ T_WHERE T_UNION T_ORDER T_OR T_ON T_MEMCACHE_DIRTY T_LIMIT T_LEFT T_AND TCPAR TCOMMA EOF ]
in_predicate -> scalar_exp T_NOT . T_IN subquery [ T_WHERE T_UNION T_ORDER T_OR T_ON T_MEMCACHE_DIRTY T_LIMIT T_LEFT T_AND TCPAR TCOMMA EOF ]
like_predicate -> scalar_exp T_NOT . T_LIKE scalar_exp opt_escape [ T_WHERE T_UNION T_ORDER T_OR T_ON T_MEMCACHE_DIRTY T_LIMIT T_LEFT T_AND TCPAR TCOMMA EOF ]
## Transitions:
-- On T_LIKE shift to state 86
-- On T_IN shift to state 89
## Reductions:

State 86:
## Known stack suffix:
## scalar_exp T_NOT T_LIKE
## LR(1) items:
like_predicate -> scalar_exp T_NOT T_LIKE . scalar_exp opt_escape [ T_WHERE T_UNION T_ORDER T_OR T_ON T_MEMCACHE_DIRTY T_LIMIT T_LEFT T_AND TCPAR TCOMMA EOF ]
## Transitions:
-- On T_STRING shift to state 14
-- On T_NULLX shift to state 15
-- On T_NAME shift to state 16
-- On T_INTNUM shift to state 31
-- On T_DNUMBER shift to state 32
-- On TPLUS shift to state 33
-- On TOPNOT shift to state 34
-- On TOPNEG shift to state 35
-- On TOPAR shift to state 36
-- On TMUL shift to state 37
-- On TMINUS shift to state 38
-- On APPROXNUM shift to state 39
-- On scalar_exp shift to state 87
-- On q_table_name shift to state 41
-- On literal shift to state 54
-- On function_call shift to state 55
-- On column_ref shift to state 56
-- On atom shift to state 57
-- On as_expression shift to state 58
## Reductions:

State 87:
## Known stack suffix:
## scalar_exp T_NOT T_LIKE scalar_exp
## LR(1) items:
as_expression -> scalar_exp . T_AS T_NAME [ T_WHERE T_UNION T_ORDER T_OR T_ON T_MEMCACHE_DIRTY T_LIMIT T_LEFT T_AS T_AND TPLUS TOPOR TOPAND TMUL TMINUS TDIV TCPAR TCOMMA EOF ]
like_predicate -> scalar_exp T_NOT T_LIKE scalar_exp . opt_escape [ T_WHERE T_UNION T_ORDER T_OR T_ON T_MEMCACHE_DIRTY T_LIMIT T_LEFT T_AND TCPAR TCOMMA EOF ]
scalar_exp -> scalar_exp . TPLUS scalar_exp [ T_WHERE T_UNION T_ORDER T_OR T_ON T_MEMCACHE_DIRTY T_LIMIT T_LEFT T_AS T_AND TPLUS TOPOR TOPAND TMUL TMINUS TDIV TCPAR TCOMMA EOF ]
scalar_exp -> scalar_exp . TMINUS scalar_exp [ T_WHERE T_UNION T_ORDER T_OR T_ON T_MEMCACHE_DIRTY T_LIMIT T_LEFT T_AS T_AND TPLUS TOPOR TOPAND TMUL TMINUS TDIV TCPAR TCOMMA EOF ]
scalar_exp -> scalar_exp . TMUL scalar_exp [ T_WHERE T_UNION T_ORDER T_OR T_ON T_MEMCACHE_DIRTY T_LIMIT T_LEFT T_AS T_AND TPLUS TOPOR TOPAND TMUL TMINUS TDIV TCPAR TCOMMA EOF ]
scalar_exp -> scalar_exp . TDIV scalar_exp [ T_WHERE T_UNION T_ORDER T_OR T_ON T_MEMCACHE_DIRTY T_LIMIT T_LEFT T_AS T_AND TPLUS TOPOR TOPAND TMUL TMINUS TDIV TCPAR TCOMMA EOF ]
scalar_exp -> scalar_exp . TOPAND scalar_exp [ T_WHERE T_UNION T_ORDER T_OR T_ON T_MEMCACHE_DIRTY T_LIMIT T_LEFT T_AS T_AND TPLUS TOPOR TOPAND TMUL TMINUS TDIV TCPAR TCOMMA EOF ]
scalar_exp -> scalar_exp . TOPOR scalar_exp [ T_WHERE T_UNION T_ORDER T_OR T_ON T_MEMCACHE_DIRTY T_LIMIT T_LEFT T_AS T_AND TPLUS TOPOR TOPAND TMUL TMINUS TDIV TCPAR TCOMMA EOF ]
## Transitions:
-- On T_AS shift to state 48
-- On TPLUS shift to state 50
-- On TOPOR shift to state 61
-- On TOPAND shift to state 63
-- On TMUL shift to state 52
-- On TMINUS shift to state 65
-- On TDIV shift to state 59
-- On opt_escape shift to state 88
## Reductions:
-- On T_WHERE T_UNION T_ORDER T_OR T_ON T_MEMCACHE_DIRTY T_LIMIT T_LEFT T_AND TCPAR TCOMMA EOF
--   reduce production opt_escape ->

State 88:
## Known stack suffix:
## scalar_exp T_NOT T_LIKE scalar_exp opt_escape
## LR(1) items:
like_predicate -> scalar_exp T_NOT T_LIKE scalar_exp opt_escape . [ T_WHERE T_UNION T_ORDER T_OR T_ON T_MEMCACHE_DIRTY T_LIMIT T_LEFT T_AND TCPAR TCOMMA EOF ]
## Transitions:
## Reductions:
-- On T_WHERE T_UNION T_ORDER T_OR T_ON T_MEMCACHE_DIRTY T_LIMIT T_LEFT T_AND TCPAR TCOMMA EOF
--   reduce production like_predicate -> scalar_exp T_NOT T_LIKE scalar_exp opt_escape

State 89:
## Known stack suffix:
## scalar_exp T_NOT T_IN
## LR(1) items:
in_predicate -> scalar_exp T_NOT T_IN . TOPAR scalar_exp_list TCPAR [ T_WHERE T_UNION T_ORDER T_OR T_ON T_MEMCACHE_DIRTY T_LIMIT T_LEFT T_AND TCPAR TCOMMA EOF ]
in_predicate -> scalar_exp T_NOT T_IN . subquery [ T_WHERE T_UNION T_ORDER T_OR T_ON T_MEMCACHE_DIRTY T_LIMIT T_LEFT T_AND TCPAR TCOMMA EOF ]
## Transitions:
-- On TOPAR shift to state 90
-- On subquery shift to state 178
## Reductions:

State 90:
## Known stack suffix:
## scalar_exp T_NOT T_IN TOPAR
## LR(1) items:
in_predicate -> scalar_exp T_NOT T_IN TOPAR . scalar_exp_list TCPAR [ T_WHERE T_UNION T_ORDER T_OR T_ON T_MEMCACHE_DIRTY T_LIMIT T_LEFT T_AND TCPAR TCOMMA EOF ]
subquery -> TOPAR . T_SELECT all_distinct_opt selection table_exp TCPAR [ T_WHERE T_UNION T_ORDER T_OR T_ON T_MEMCACHE_DIRTY T_LIMIT T_LEFT T_AND TCPAR TCOMMA EOF ]
## Transitions:
-- On T_STRING shift to state 14
-- On T_SELECT shift to state 91
-- On T_NULLX shift to state 15
-- On T_NAME shift to state 16
-- On T_INTNUM shift to state 31
-- On T_DNUMBER shift to state 32
-- On TPLUS shift to state 33
-- On TOPNOT shift to state 34
-- On TOPNEG shift to state 35
-- On TOPAR shift to state 36
-- On TMUL shift to state 37
-- On TMINUS shift to state 38
-- On APPROXNUM shift to state 39
-- On scalar_exp_list shift to state 176
-- On scalar_exp shift to state 67
-- On q_table_name shift to state 41
-- On literal shift to state 54
-- On function_call shift to state 55
-- On column_ref shift to state 56
-- On atom shift to state 57
-- On as_expression shift to state 58
## Reductions:

State 91:
## Known stack suffix:
## TOPAR T_SELECT
## LR(1) items:
subquery -> TOPAR T_SELECT . all_distinct_opt selection table_exp TCPAR [ T_WHERE T_UNION T_ORDER T_OR T_ON T_NAME T_MEMCACHE_DIRTY T_LIMIT T_LEFT T_AND TCPAR TCOMMA EOF ]
## Transitions:
-- On T_DISTINCT shift to state 92
-- On T_ALL shift to state 93
-- On all_distinct_opt shift to state 94
-- On all_distinct shift to state 135
## Reductions:
-- On T_STRING T_NULLX T_NAME T_INTNUM T_DNUMBER TPLUS TOPNOT TOPNEG TOPAR TMUL TMINUS APPROXNUM
--   reduce production all_distinct_opt ->

State 92:
## Known stack suffix:
## T_DISTINCT
## LR(1) items:
all_distinct -> T_DISTINCT . [ T_STRING T_NULLX T_NAME T_INTNUM T_DNUMBER TPLUS TOPNOT TOPNEG TOPAR TMUL TMINUS APPROXNUM ]
## Transitions:
## Reductions:
-- On T_STRING T_NULLX T_NAME T_INTNUM T_DNUMBER TPLUS TOPNOT TOPNEG TOPAR TMUL TMINUS APPROXNUM
--   reduce production all_distinct -> T_DISTINCT

State 93:
## Known stack suffix:
## T_ALL
## LR(1) items:
all_distinct -> T_ALL . [ T_STRING T_NULLX T_NAME T_INTNUM T_DNUMBER TPLUS TOPNOT TOPNEG TOPAR TMUL TMINUS APPROXNUM ]
## Transitions:
## Reductions:
-- On T_STRING T_NULLX T_NAME T_INTNUM T_DNUMBER TPLUS TOPNOT TOPNEG TOPAR TMUL TMINUS APPROXNUM
--   reduce production all_distinct -> T_ALL

State 94:
## Known stack suffix:
## TOPAR T_SELECT all_distinct_opt
## LR(1) items:
subquery -> TOPAR T_SELECT all_distinct_opt . selection table_exp TCPAR [ T_WHERE T_UNION T_ORDER T_OR T_ON T_NAME T_MEMCACHE_DIRTY T_LIMIT T_LEFT T_AND TCPAR TCOMMA EOF ]
## Transitions:
-- On T_STRING shift to state 14
-- On T_NULLX shift to state 15
-- On T_NAME shift to state 16
-- On T_INTNUM shift to state 31
-- On T_DNUMBER shift to state 32
-- On TPLUS shift to state 33
-- On TOPNOT shift to state 34
-- On TOPNEG shift to state 35
-- On TOPAR shift to state 36
-- On TMUL shift to state 37
-- On TMINUS shift to state 38
-- On APPROXNUM shift to state 39
-- On selection shift to state 95
-- On scalar_exp_list shift to state 134
-- On scalar_exp shift to state 67
-- On q_table_name shift to state 41
-- On literal shift to state 54
-- On function_call shift to state 55
-- On column_ref shift to state 56
-- On atom shift to state 57
-- On as_expression shift to state 58
## Reductions:

State 95:
## Known stack suffix:
## TOPAR T_SELECT all_distinct_opt selection
## LR(1) items:
subquery -> TOPAR T_SELECT all_distinct_opt selection . table_exp TCPAR [ T_WHERE T_UNION T_ORDER T_OR T_ON T_NAME T_MEMCACHE_DIRTY T_LIMIT T_LEFT T_AND TCPAR TCOMMA EOF ]
## Transitions:
-- On T_FROM shift to state 96
-- On table_exp shift to state 174
-- On from_clause shift to state 102
## Reductions:

State 96:
## Known stack suffix:
## T_FROM
## LR(1) items:
from_clause -> T_FROM . table_ref_list [ T_WHERE T_UNION T_ORDER T_ON T_MEMCACHE_DIRTY T_LIMIT TCPAR EOF ]
## Transitions:
-- On T_NAME shift to state 2
-- On TOPAR shift to state 97
-- On table_ref_list shift to state 148
-- On table_ref shift to state 173
-- On table shift to state 171
-- On q_table_name shift to state 167
-- On joined_table shift to state 172
## Reductions:

State 97:
## Known stack suffix:
## TOPAR
## LR(1) items:
table_ref -> TOPAR . query_exp TCPAR T_NAME [ T_WHERE T_UNION T_ORDER T_ON T_MEMCACHE_DIRTY T_LIMIT T_LEFT TCPAR TCOMMA EOF ]
## Transitions:
-- On T_SELECT shift to state 98
-- On TOPAR shift to state 136
-- On query_term shift to state 137
-- On query_spec shift to state 138
-- On query_exp shift to state 145
## Reductions:

State 98:
## Known stack suffix:
## T_SELECT
## LR(1) items:
query_spec -> T_SELECT . all_distinct_opt selection table_exp [ T_UNION T_ON T_MEMCACHE_DIRTY TCPAR EOF ]
## Transitions:
-- On T_DISTINCT shift to state 92
-- On T_ALL shift to state 93
-- On all_distinct_opt shift to state 99
-- On all_distinct shift to state 135
## Reductions:
-- On T_STRING T_NULLX T_NAME T_INTNUM T_DNUMBER TPLUS TOPNOT TOPNEG TOPAR TMUL TMINUS APPROXNUM
--   reduce production all_distinct_opt ->

State 99:
## Known stack suffix:
## T_SELECT all_distinct_opt
## LR(1) items:
query_spec -> T_SELECT all_distinct_opt . selection table_exp [ T_UNION T_ON T_MEMCACHE_DIRTY TCPAR EOF ]
## Transitions:
-- On T_STRING shift to state 14
-- On T_NULLX shift to state 15
-- On T_NAME shift to state 16
-- On T_INTNUM shift to state 31
-- On T_DNUMBER shift to state 32
-- On TPLUS shift to state 33
-- On TOPNOT shift to state 34
-- On TOPNEG shift to state 35
-- On TOPAR shift to state 36
-- On TMUL shift to state 37
-- On TMINUS shift to state 38
-- On APPROXNUM shift to state 39
-- On selection shift to state 100
-- On scalar_exp_list shift to state 134
-- On scalar_exp shift to state 67
-- On q_table_name shift to state 41
-- On literal shift to state 54
-- On function_call shift to state 55
-- On column_ref shift to state 56
-- On atom shift to state 57
-- On as_expression shift to state 58
## Reductions:

State 100:
## Known stack suffix:
## T_SELECT all_distinct_opt selection
## LR(1) items:
query_spec -> T_SELECT all_distinct_opt selection . table_exp [ T_UNION T_ON T_MEMCACHE_DIRTY TCPAR EOF ]
## Transitions:
-- On T_FROM shift to state 96
-- On table_exp shift to state 101
-- On from_clause shift to state 102
## Reductions:

State 101:
## Known stack suffix:
## T_SELECT all_distinct_opt selection table_exp
## LR(1) items:
query_spec -> T_SELECT all_distinct_opt selection table_exp . [ T_UNION T_ON T_MEMCACHE_DIRTY TCPAR EOF ]
## Transitions:
## Reductions:
-- On T_UNION T_ON T_MEMCACHE_DIRTY TCPAR EOF
--   reduce production query_spec -> T_SELECT all_distinct_opt selection table_exp

State 102:
## Known stack suffix:
## from_clause
## LR(1) items:
table_exp -> from_clause . where_clause_opt order_by_clause_opt limit_clause_opt [ T_UNION T_ON T_MEMCACHE_DIRTY TCPAR EOF ]
## Transitions:
-- On T_WHERE shift to state 75
-- On where_clause_opt shift to state 103
-- On where_clause shift to state 133
## Reductions:
-- On T_UNION T_ORDER T_ON T_MEMCACHE_DIRTY T_LIMIT TCPAR EOF
--   reduce production where_clause_opt ->

State 103:
## Known stack suffix:
## from_clause where_clause_opt
## LR(1) items:
table_exp -> from_clause where_clause_opt . order_by_clause_opt limit_clause_opt [ T_UNION T_ON T_MEMCACHE_DIRTY TCPAR EOF ]
## Transitions:
-- On T_ORDER shift to state 104
-- On order_by_clause_opt shift to state 124
-- On order_by_clause shift to state 132
## Reductions:
-- On T_UNION T_ON T_MEMCACHE_DIRTY T_LIMIT TCPAR EOF
--   reduce production order_by_clause_opt ->

State 104:
## Known stack suffix:
## T_ORDER
## LR(1) items:
order_by_clause -> T_ORDER . T_BY ordering_spec_list [ T_UNION T_ON T_MEMCACHE_DIRTY T_LIMIT TCPAR EOF ]
## Transitions:
-- On T_BY shift to state 105
## Reductions:

State 105:
## Known stack suffix:
## T_ORDER T_BY
## LR(1) items:
order_by_clause -> T_ORDER T_BY . ordering_spec_list [ T_UNION T_ON T_MEMCACHE_DIRTY T_LIMIT TCPAR EOF ]
## Transitions:
-- On T_NAME shift to state 106
-- On T_INTNUM shift to state 113
-- On TMUL shift to state 37
-- On ordering_spec_list shift to state 118
-- On ordering_spec shift to state 123
-- On column_ref shift to state 121
## Reductions:

State 106:
## Known stack suffix:
## T_NAME
## LR(1) items:
column_ref -> T_NAME . [ T_UNION T_ON T_MEMCACHE_DIRTY T_LIMIT T_DESC T_ASC TCPAR TCOMMA EOF ]
column_ref -> T_NAME . TDOT T_NAME [ T_UNION T_ON T_MEMCACHE_DIRTY T_LIMIT T_DESC T_ASC TCPAR TCOMMA EOF ]
column_ref -> T_NAME . TDOT T_NAME TDOT T_NAME [ T_UNION T_ON T_MEMCACHE_DIRTY T_LIMIT T_DESC T_ASC TCPAR TCOMMA EOF ]
column_ref -> T_NAME . TDOT T_NAME TDOT T_NAME TDOT T_NAME [ T_UNION T_ON T_MEMCACHE_DIRTY T_LIMIT T_DESC T_ASC TCPAR TCOMMA EOF ]
column_ref -> T_NAME . TDOT TDOT T_NAME TDOT T_NAME [ T_UNION T_ON T_MEMCACHE_DIRTY T_LIMIT T_DESC T_ASC TCPAR TCOMMA EOF ]
column_ref -> T_NAME . TDOT TMUL [ T_UNION T_ON T_MEMCACHE_DIRTY T_LIMIT T_DESC T_ASC TCPAR TCOMMA EOF ]
column_ref -> T_NAME . TDOT T_NAME TDOT TMUL [ T_UNION T_ON T_MEMCACHE_DIRTY T_LIMIT T_DESC T_ASC TCPAR TCOMMA EOF ]
column_ref -> T_NAME . TDOT T_NAME TDOT T_NAME TDOT TMUL [ T_UNION T_ON T_MEMCACHE_DIRTY T_LIMIT T_DESC T_ASC TCPAR TCOMMA EOF ]
column_ref -> T_NAME . TDOT TDOT T_NAME TDOT TMUL [ T_UNION T_ON T_MEMCACHE_DIRTY T_LIMIT T_DESC T_ASC TCPAR TCOMMA EOF ]
## Transitions:
-- On TDOT shift to state 107
## Reductions:
-- On T_UNION T_ON T_MEMCACHE_DIRTY T_LIMIT T_DESC T_ASC TCPAR TCOMMA EOF
--   reduce production column_ref -> T_NAME

State 107:
## Known stack suffix:
## T_NAME TDOT
## LR(1) items:
column_ref -> T_NAME TDOT . T_NAME [ T_UNION T_ON T_MEMCACHE_DIRTY T_LIMIT T_DESC T_ASC TCPAR TCOMMA EOF ]
column_ref -> T_NAME TDOT . T_NAME TDOT T_NAME [ T_UNION T_ON T_MEMCACHE_DIRTY T_LIMIT T_DESC T_ASC TCPAR TCOMMA EOF ]
column_ref -> T_NAME TDOT . T_NAME TDOT T_NAME TDOT T_NAME [ T_UNION T_ON T_MEMCACHE_DIRTY T_LIMIT T_DESC T_ASC TCPAR TCOMMA EOF ]
column_ref -> T_NAME TDOT . TDOT T_NAME TDOT T_NAME [ T_UNION T_ON T_MEMCACHE_DIRTY T_LIMIT T_DESC T_ASC TCPAR TCOMMA EOF ]
column_ref -> T_NAME TDOT . TMUL [ T_UNION T_ON T_MEMCACHE_DIRTY T_LIMIT T_DESC T_ASC TCPAR TCOMMA EOF ]
column_ref -> T_NAME TDOT . T_NAME TDOT TMUL [ T_UNION T_ON T_MEMCACHE_DIRTY T_LIMIT T_DESC T_ASC TCPAR TCOMMA EOF ]
column_ref -> T_NAME TDOT . T_NAME TDOT T_NAME TDOT TMUL [ T_UNION T_ON T_MEMCACHE_DIRTY T_LIMIT T_DESC T_ASC TCPAR TCOMMA EOF ]
column_ref -> T_NAME TDOT . TDOT T_NAME TDOT TMUL [ T_UNION T_ON T_MEMCACHE_DIRTY T_LIMIT T_DESC T_ASC TCPAR TCOMMA EOF ]
## Transitions:
-- On T_NAME shift to state 108
-- On TMUL shift to state 25
-- On TDOT shift to state 111
## Reductions:

State 108:
## Known stack suffix:
## T_NAME TDOT T_NAME
## LR(1) items:
column_ref -> T_NAME TDOT T_NAME . [ T_UNION T_ON T_MEMCACHE_DIRTY T_LIMIT T_DESC T_ASC TCPAR TCOMMA EOF ]
column_ref -> T_NAME TDOT T_NAME . TDOT T_NAME [ T_UNION T_ON T_MEMCACHE_DIRTY T_LIMIT T_DESC T_ASC TCPAR TCOMMA EOF ]
column_ref -> T_NAME TDOT T_NAME . TDOT T_NAME TDOT T_NAME [ T_UNION T_ON T_MEMCACHE_DIRTY T_LIMIT T_DESC T_ASC TCPAR TCOMMA EOF ]
column_ref -> T_NAME TDOT T_NAME . TDOT TMUL [ T_UNION T_ON T_MEMCACHE_DIRTY T_LIMIT T_DESC T_ASC TCPAR TCOMMA EOF ]
column_ref -> T_NAME TDOT T_NAME . TDOT T_NAME TDOT TMUL [ T_UNION T_ON T_MEMCACHE_DIRTY T_LIMIT T_DESC T_ASC TCPAR TCOMMA EOF ]
## Transitions:
-- On TDOT shift to state 109
## Reductions:
-- On T_UNION T_ON T_MEMCACHE_DIRTY T_LIMIT T_DESC T_ASC TCPAR TCOMMA EOF
--   reduce production column_ref -> T_NAME TDOT T_NAME

State 109:
## Known stack suffix:
## T_NAME TDOT T_NAME TDOT
## LR(1) items:
column_ref -> T_NAME TDOT T_NAME TDOT . T_NAME [ T_UNION T_ON T_MEMCACHE_DIRTY T_LIMIT T_DESC T_ASC TCPAR TCOMMA EOF ]
column_ref -> T_NAME TDOT T_NAME TDOT . T_NAME TDOT T_NAME [ T_UNION T_ON T_MEMCACHE_DIRTY T_LIMIT T_DESC T_ASC TCPAR TCOMMA EOF ]
column_ref -> T_NAME TDOT T_NAME TDOT . TMUL [ T_UNION T_ON T_MEMCACHE_DIRTY T_LIMIT T_DESC T_ASC TCPAR TCOMMA EOF ]
column_ref -> T_NAME TDOT T_NAME TDOT . T_NAME TDOT TMUL [ T_UNION T_ON T_MEMCACHE_DIRTY T_LIMIT T_DESC T_ASC TCPAR TCOMMA EOF ]
## Transitions:
-- On T_NAME shift to state 110
-- On TMUL shift to state 24
## Reductions:

State 110:
## Known stack suffix:
## T_NAME TDOT T_NAME TDOT T_NAME
## LR(1) items:
column_ref -> T_NAME TDOT T_NAME TDOT T_NAME . [ T_UNION T_ON T_MEMCACHE_DIRTY T_LIMIT T_DESC T_ASC TCPAR TCOMMA EOF ]
column_ref -> T_NAME TDOT T_NAME TDOT T_NAME . TDOT T_NAME [ T_UNION T_ON T_MEMCACHE_DIRTY T_LIMIT T_DESC T_ASC TCPAR TCOMMA EOF ]
column_ref -> T_NAME TDOT T_NAME TDOT T_NAME . TDOT TMUL [ T_UNION T_ON T_MEMCACHE_DIRTY T_LIMIT T_DESC T_ASC TCPAR TCOMMA EOF ]
## Transitions:
-- On TDOT shift to state 21
## Reductions:
-- On T_UNION T_ON T_MEMCACHE_DIRTY T_LIMIT T_DESC T_ASC TCPAR TCOMMA EOF
--   reduce production column_ref -> T_NAME TDOT T_NAME TDOT T_NAME

State 111:
## Known stack suffix:
## T_NAME TDOT TDOT
## LR(1) items:
column_ref -> T_NAME TDOT TDOT . T_NAME TDOT T_NAME [ T_UNION T_ON T_MEMCACHE_DIRTY T_LIMIT T_DESC T_ASC TCPAR TCOMMA EOF ]
column_ref -> T_NAME TDOT TDOT . T_NAME TDOT TMUL [ T_UNION T_ON T_MEMCACHE_DIRTY T_LIMIT T_DESC T_ASC TCPAR TCOMMA EOF ]
## Transitions:
-- On T_NAME shift to state 112
## Reductions:

State 112:
## Known stack suffix:
## T_NAME TDOT TDOT T_NAME
## LR(1) items:
column_ref -> T_NAME TDOT TDOT T_NAME . TDOT T_NAME [ T_UNION T_ON T_MEMCACHE_DIRTY T_LIMIT T_DESC T_ASC TCPAR TCOMMA EOF ]
column_ref -> T_NAME TDOT TDOT T_NAME . TDOT TMUL [ T_UNION T_ON T_MEMCACHE_DIRTY T_LIMIT T_DESC T_ASC TCPAR TCOMMA EOF ]
## Transitions:
-- On TDOT shift to state 28
## Reductions:

State 113:
## Known stack suffix:
## T_INTNUM
## LR(1) items:
ordering_spec -> T_INTNUM . asc_desc_opt [ T_UNION T_ON T_MEMCACHE_DIRTY T_LIMIT TCPAR TCOMMA EOF ]
## Transitions:
-- On T_DESC shift to state 114
-- On T_ASC shift to state 115
-- On asc_desc_opt shift to state 116
-- On asc_desc shift to state 117
## Reductions:
-- On T_UNION T_ON T_MEMCACHE_DIRTY T_LIMIT TCPAR TCOMMA EOF
--   reduce production asc_desc_opt ->

State 114:
## Known stack suffix:
## T_DESC
## LR(1) items:
asc_desc -> T_DESC . [ T_UNION T_ON T_MEMCACHE_DIRTY T_LIMIT TCPAR TCOMMA EOF ]
## Transitions:
## Reductions:
-- On T_UNION T_ON T_MEMCACHE_DIRTY T_LIMIT TCPAR TCOMMA EOF
--   reduce production asc_desc -> T_DESC

State 115:
## Known stack suffix:
## T_ASC
## LR(1) items:
asc_desc -> T_ASC . [ T_UNION T_ON T_MEMCACHE_DIRTY T_LIMIT TCPAR TCOMMA EOF ]
## Transitions:
## Reductions:
-- On T_UNION T_ON T_MEMCACHE_DIRTY T_LIMIT TCPAR TCOMMA EOF
--   reduce production asc_desc -> T_ASC

State 116:
## Known stack suffix:
## T_INTNUM asc_desc_opt
## LR(1) items:
ordering_spec -> T_INTNUM asc_desc_opt . [ T_UNION T_ON T_MEMCACHE_DIRTY T_LIMIT TCPAR TCOMMA EOF ]
## Transitions:
## Reductions:
-- On T_UNION T_ON T_MEMCACHE_DIRTY T_LIMIT TCPAR TCOMMA EOF
--   reduce production ordering_spec -> T_INTNUM asc_desc_opt

State 117:
## Known stack suffix:
## asc_desc
## LR(1) items:
asc_desc_opt -> asc_desc . [ T_UNION T_ON T_MEMCACHE_DIRTY T_LIMIT TCPAR TCOMMA EOF ]
## Transitions:
## Reductions:
-- On T_UNION T_ON T_MEMCACHE_DIRTY T_LIMIT TCPAR TCOMMA EOF
--   reduce production asc_desc_opt -> asc_desc

State 118:
## Known stack suffix:
## T_ORDER T_BY ordering_spec_list
## LR(1) items:
order_by_clause -> T_ORDER T_BY ordering_spec_list . [ T_UNION T_ON T_MEMCACHE_DIRTY T_LIMIT TCPAR EOF ]
ordering_spec_list -> ordering_spec_list . TCOMMA ordering_spec [ T_UNION T_ON T_MEMCACHE_DIRTY T_LIMIT TCPAR TCOMMA EOF ]
## Transitions:
-- On TCOMMA shift to state 119
## Reductions:
-- On T_UNION T_ON T_MEMCACHE_DIRTY T_LIMIT TCPAR EOF
--   reduce production order_by_clause -> T_ORDER T_BY ordering_spec_list

State 119:
## Known stack suffix:
## ordering_spec_list TCOMMA
## LR(1) items:
ordering_spec_list -> ordering_spec_list TCOMMA . ordering_spec [ T_UNION T_ON T_MEMCACHE_DIRTY T_LIMIT TCPAR TCOMMA EOF ]
## Transitions:
-- On T_NAME shift to state 106
-- On T_INTNUM shift to state 113
-- On TMUL shift to state 37
-- On ordering_spec shift to state 120
-- On column_ref shift to state 121
## Reductions:

State 120:
## Known stack suffix:
## ordering_spec_list TCOMMA ordering_spec
## LR(1) items:
ordering_spec_list -> ordering_spec_list TCOMMA ordering_spec . [ T_UNION T_ON T_MEMCACHE_DIRTY T_LIMIT TCPAR TCOMMA EOF ]
## Transitions:
## Reductions:
-- On T_UNION T_ON T_MEMCACHE_DIRTY T_LIMIT TCPAR TCOMMA EOF
--   reduce production ordering_spec_list -> ordering_spec_list TCOMMA ordering_spec

State 121:
## Known stack suffix:
## column_ref
## LR(1) items:
ordering_spec -> column_ref . asc_desc_opt [ T_UNION T_ON T_MEMCACHE_DIRTY T_LIMIT TCPAR TCOMMA EOF ]
## Transitions:
-- On T_DESC shift to state 114
-- On T_ASC shift to state 115
-- On asc_desc_opt shift to state 122
-- On asc_desc shift to state 117
## Reductions:
-- On T_UNION T_ON T_MEMCACHE_DIRTY T_LIMIT TCPAR TCOMMA EOF
--   reduce production asc_desc_opt ->

State 122:
## Known stack suffix:
## column_ref asc_desc_opt
## LR(1) items:
ordering_spec -> column_ref asc_desc_opt . [ T_UNION T_ON T_MEMCACHE_DIRTY T_LIMIT TCPAR TCOMMA EOF ]
## Transitions:
## Reductions:
-- On T_UNION T_ON T_MEMCACHE_DIRTY T_LIMIT TCPAR TCOMMA EOF
--   reduce production ordering_spec -> column_ref asc_desc_opt

State 123:
## Known stack suffix:
## ordering_spec
## LR(1) items:
ordering_spec_list -> ordering_spec . [ T_UNION T_ON T_MEMCACHE_DIRTY T_LIMIT TCPAR TCOMMA EOF ]
## Transitions:
## Reductions:
-- On T_UNION T_ON T_MEMCACHE_DIRTY T_LIMIT TCPAR TCOMMA EOF
--   reduce production ordering_spec_list -> ordering_spec

State 124:
## Known stack suffix:
## from_clause where_clause_opt order_by_clause_opt
## LR(1) items:
table_exp -> from_clause where_clause_opt order_by_clause_opt . limit_clause_opt [ T_UNION T_ON T_MEMCACHE_DIRTY TCPAR EOF ]
## Transitions:
-- On T_LIMIT shift to state 125
-- On limit_clause_opt shift to state 130
-- On limit_clause shift to state 131
## Reductions:
-- On T_UNION T_ON T_MEMCACHE_DIRTY TCPAR EOF
--   reduce production limit_clause_opt ->

State 125:
## Known stack suffix:
## T_LIMIT
## LR(1) items:
limit_clause -> T_LIMIT . int_list [ T_UNION T_ON T_MEMCACHE_DIRTY TCPAR EOF ]
## Transitions:
-- On T_INTNUM shift to state 126
-- On int_list shift to state 127
## Reductions:

State 126:
## Known stack suffix:
## T_INTNUM
## LR(1) items:
int_list -> T_INTNUM . [ T_UNION T_ON T_MEMCACHE_DIRTY TCPAR TCOMMA EOF ]
## Transitions:
## Reductions:
-- On T_UNION T_ON T_MEMCACHE_DIRTY TCPAR TCOMMA EOF
--   reduce production int_list -> T_INTNUM

State 127:
## Known stack suffix:
## T_LIMIT int_list
## LR(1) items:
int_list -> int_list . TCOMMA T_INTNUM [ T_UNION T_ON T_MEMCACHE_DIRTY TCPAR TCOMMA EOF ]
limit_clause -> T_LIMIT int_list . [ T_UNION T_ON T_MEMCACHE_DIRTY TCPAR EOF ]
## Transitions:
-- On TCOMMA shift to state 128
## Reductions:
-- On T_UNION T_ON T_MEMCACHE_DIRTY TCPAR EOF
--   reduce production limit_clause -> T_LIMIT int_list

State 128:
## Known stack suffix:
## int_list TCOMMA
## LR(1) items:
int_list -> int_list TCOMMA . T_INTNUM [ T_UNION T_ON T_MEMCACHE_DIRTY TCPAR TCOMMA EOF ]
## Transitions:
-- On T_INTNUM shift to state 129
## Reductions:

State 129:
## Known stack suffix:
## int_list TCOMMA T_INTNUM
## LR(1) items:
int_list -> int_list TCOMMA T_INTNUM . [ T_UNION T_ON T_MEMCACHE_DIRTY TCPAR TCOMMA EOF ]
## Transitions:
## Reductions:
-- On T_UNION T_ON T_MEMCACHE_DIRTY TCPAR TCOMMA EOF
--   reduce production int_list -> int_list TCOMMA T_INTNUM

State 130:
## Known stack suffix:
## from_clause where_clause_opt order_by_clause_opt limit_clause_opt
## LR(1) items:
table_exp -> from_clause where_clause_opt order_by_clause_opt limit_clause_opt . [ T_UNION T_ON T_MEMCACHE_DIRTY TCPAR EOF ]
## Transitions:
## Reductions:
-- On T_UNION T_ON T_MEMCACHE_DIRTY TCPAR EOF
--   reduce production table_exp -> from_clause where_clause_opt order_by_clause_opt limit_clause_opt

State 131:
## Known stack suffix:
## limit_clause
## LR(1) items:
limit_clause_opt -> limit_clause . [ T_UNION T_ON T_MEMCACHE_DIRTY TCPAR EOF ]
## Transitions:
## Reductions:
-- On T_UNION T_ON T_MEMCACHE_DIRTY TCPAR EOF
--   reduce production limit_clause_opt -> limit_clause

State 132:
## Known stack suffix:
## order_by_clause
## LR(1) items:
order_by_clause_opt -> order_by_clause . [ T_UNION T_ON T_MEMCACHE_DIRTY T_LIMIT TCPAR EOF ]
## Transitions:
## Reductions:
-- On T_UNION T_ON T_MEMCACHE_DIRTY T_LIMIT TCPAR EOF
--   reduce production order_by_clause_opt -> order_by_clause

State 133:
## Known stack suffix:
## where_clause
## LR(1) items:
where_clause_opt -> where_clause . [ T_UNION T_ORDER T_ON T_MEMCACHE_DIRTY T_LIMIT TCPAR EOF ]
## Transitions:
## Reductions:
-- On T_UNION T_ORDER T_ON T_MEMCACHE_DIRTY T_LIMIT TCPAR EOF
--   reduce production where_clause_opt -> where_clause

State 134:
## Known stack suffix:
## scalar_exp_list
## LR(1) items:
scalar_exp_list -> scalar_exp_list . TCOMMA scalar_exp [ T_FROM TCOMMA ]
selection -> scalar_exp_list . [ T_FROM ]
## Transitions:
-- On TCOMMA shift to state 46
## Reductions:
-- On T_FROM
--   reduce production selection -> scalar_exp_list

State 135:
## Known stack suffix:
## all_distinct
## LR(1) items:
all_distinct_opt -> all_distinct . [ T_STRING T_NULLX T_NAME T_INTNUM T_DNUMBER TPLUS TOPNOT TOPNEG TOPAR TMUL TMINUS APPROXNUM ]
## Transitions:
## Reductions:
-- On T_STRING T_NULLX T_NAME T_INTNUM T_DNUMBER TPLUS TOPNOT TOPNEG TOPAR TMUL TMINUS APPROXNUM
--   reduce production all_distinct_opt -> all_distinct

State 136:
## Known stack suffix:
## TOPAR
## LR(1) items:
query_term -> TOPAR . query_exp TCPAR [ T_UNION TCPAR ]
## Transitions:
-- On T_SELECT shift to state 98
-- On TOPAR shift to state 136
-- On query_term shift to state 137
-- On query_spec shift to state 138
-- On query_exp shift to state 139
## Reductions:

State 137:
## Known stack suffix:
## query_term
## LR(1) items:
query_exp -> query_term . [ T_UNION TCPAR ]
## Transitions:
## Reductions:
-- On T_UNION TCPAR
--   reduce production query_exp -> query_term

State 138:
## Known stack suffix:
## query_spec
## LR(1) items:
query_term -> query_spec . [ T_UNION TCPAR ]
## Transitions:
## Reductions:
-- On T_UNION TCPAR
--   reduce production query_term -> query_spec

State 139:
## Known stack suffix:
## TOPAR query_exp
## LR(1) items:
query_exp -> query_exp . T_UNION query_term [ T_UNION TCPAR ]
query_exp -> query_exp . T_UNION T_ALL query_term [ T_UNION TCPAR ]
query_term -> TOPAR query_exp . TCPAR [ T_UNION TCPAR ]
## Transitions:
-- On T_UNION shift to state 140
-- On TCPAR shift to state 144
## Reductions:

State 140:
## Known stack suffix:
## query_exp T_UNION
## LR(1) items:
query_exp -> query_exp T_UNION . query_term [ T_UNION TCPAR ]
query_exp -> query_exp T_UNION . T_ALL query_term [ T_UNION TCPAR ]
## Transitions:
-- On T_SELECT shift to state 98
-- On T_ALL shift to state 141
-- On TOPAR shift to state 136
-- On query_term shift to state 143
-- On query_spec shift to state 138
## Reductions:

State 141:
## Known stack suffix:
## query_exp T_UNION T_ALL
## LR(1) items:
query_exp -> query_exp T_UNION T_ALL . query_term [ T_UNION TCPAR ]
## Transitions:
-- On T_SELECT shift to state 98
-- On TOPAR shift to state 136
-- On query_term shift to state 142
-- On query_spec shift to state 138
## Reductions:

State 142:
## Known stack suffix:
## query_exp T_UNION T_ALL query_term
## LR(1) items:
query_exp -> query_exp T_UNION T_ALL query_term . [ T_UNION TCPAR ]
## Transitions:
## Reductions:
-- On T_UNION TCPAR
--   reduce production query_exp -> query_exp T_UNION T_ALL query_term

State 143:
## Known stack suffix:
## query_exp T_UNION query_term
## LR(1) items:
query_exp -> query_exp T_UNION query_term . [ T_UNION TCPAR ]
## Transitions:
## Reductions:
-- On T_UNION TCPAR
--   reduce production query_exp -> query_exp T_UNION query_term

State 144:
## Known stack suffix:
## TOPAR query_exp TCPAR
## LR(1) items:
query_term -> TOPAR query_exp TCPAR . [ T_UNION TCPAR ]
## Transitions:
## Reductions:
-- On T_UNION TCPAR
--   reduce production query_term -> TOPAR query_exp TCPAR

State 145:
## Known stack suffix:
## TOPAR query_exp
## LR(1) items:
query_exp -> query_exp . T_UNION query_term [ T_UNION TCPAR ]
query_exp -> query_exp . T_UNION T_ALL query_term [ T_UNION TCPAR ]
table_ref -> TOPAR query_exp . TCPAR T_NAME [ T_WHERE T_UNION T_ORDER T_ON T_MEMCACHE_DIRTY T_LIMIT T_LEFT TCPAR TCOMMA EOF ]
## Transitions:
-- On T_UNION shift to state 140
-- On TCPAR shift to state 146
## Reductions:

State 146:
## Known stack suffix:
## TOPAR query_exp TCPAR
## LR(1) items:
table_ref -> TOPAR query_exp TCPAR . T_NAME [ T_WHERE T_UNION T_ORDER T_ON T_MEMCACHE_DIRTY T_LIMIT T_LEFT TCPAR TCOMMA EOF ]
## Transitions:
-- On T_NAME shift to state 147
## Reductions:

State 147:
## Known stack suffix:
## TOPAR query_exp TCPAR T_NAME
## LR(1) items:
table_ref -> TOPAR query_exp TCPAR T_NAME . [ T_WHERE T_UNION T_ORDER T_ON T_MEMCACHE_DIRTY T_LIMIT T_LEFT TCPAR TCOMMA EOF ]
## Transitions:
## Reductions:
-- On T_WHERE T_UNION T_ORDER T_ON T_MEMCACHE_DIRTY T_LIMIT T_LEFT TCPAR TCOMMA EOF
--   reduce production table_ref -> TOPAR query_exp TCPAR T_NAME

State 148:
## Known stack suffix:
## T_FROM table_ref_list
## LR(1) items:
from_clause -> T_FROM table_ref_list . [ T_WHERE T_UNION T_ORDER T_ON T_MEMCACHE_DIRTY T_LIMIT TCPAR EOF ]
table_ref_list -> table_ref_list . TCOMMA table_ref [ T_WHERE T_UNION T_ORDER T_ON T_MEMCACHE_DIRTY T_LIMIT TCPAR TCOMMA EOF ]
## Transitions:
-- On TCOMMA shift to state 149
## Reductions:
-- On T_WHERE T_UNION T_ORDER T_ON T_MEMCACHE_DIRTY T_LIMIT TCPAR EOF
--   reduce production from_clause -> T_FROM table_ref_list

State 149:
## Known stack suffix:
## table_ref_list TCOMMA
## LR(1) items:
table_ref_list -> table_ref_list TCOMMA . table_ref [ T_WHERE T_UNION T_ORDER T_ON T_MEMCACHE_DIRTY T_LIMIT TCPAR TCOMMA EOF ]
## Transitions:
-- On T_NAME shift to state 2
-- On TOPAR shift to state 97
-- On table_ref shift to state 150
-- On table shift to state 171
-- On q_table_name shift to state 167
-- On joined_table shift to state 172
## Reductions:

State 150:
## Known stack suffix:
## table_ref_list TCOMMA table_ref
## LR(1) items:
joined_table -> table_ref . jtype outer_opt T_JOIN table_ref_nj T_ON search_condition [ T_WHERE T_UNION T_ORDER T_ON T_MEMCACHE_DIRTY T_LIMIT T_LEFT TCPAR TCOMMA EOF ]
table_ref_list -> table_ref_list TCOMMA table_ref . [ T_WHERE T_UNION T_ORDER T_ON T_MEMCACHE_DIRTY T_LIMIT TCPAR TCOMMA EOF ]
## Transitions:
-- On T_LEFT shift to state 151
-- On jtype shift to state 152
## Reductions:
-- On T_WHERE T_UNION T_ORDER T_ON T_MEMCACHE_DIRTY T_LIMIT TCPAR TCOMMA EOF
--   reduce production table_ref_list -> table_ref_list TCOMMA table_ref

State 151:
## Known stack suffix:
## T_LEFT
## LR(1) items:
jtype -> T_LEFT . [ T_OUTER T_JOIN ]
## Transitions:
## Reductions:
-- On T_OUTER T_JOIN
--   reduce production jtype -> T_LEFT

State 152:
## Known stack suffix:
## table_ref jtype
## LR(1) items:
joined_table -> table_ref jtype . outer_opt T_JOIN table_ref_nj T_ON search_condition [ T_WHERE T_UNION T_ORDER T_ON T_MEMCACHE_DIRTY T_LIMIT T_LEFT TCPAR TCOMMA EOF ]
## Transitions:
-- On T_OUTER shift to state 153
-- On outer_opt shift to state 154
## Reductions:
-- On T_JOIN
--   reduce production outer_opt ->

State 153:
## Known stack suffix:
## T_OUTER
## LR(1) items:
outer_opt -> T_OUTER . [ T_JOIN ]
## Transitions:
## Reductions:
-- On T_JOIN
--   reduce production outer_opt -> T_OUTER

State 154:
## Known stack suffix:
## table_ref jtype outer_opt
## LR(1) items:
joined_table -> table_ref jtype outer_opt . T_JOIN table_ref_nj T_ON search_condition [ T_WHERE T_UNION T_ORDER T_ON T_MEMCACHE_DIRTY T_LIMIT T_LEFT TCPAR TCOMMA EOF ]
## Transitions:
-- On T_JOIN shift to state 155
## Reductions:

State 155:
## Known stack suffix:
## table_ref jtype outer_opt T_JOIN
## LR(1) items:
joined_table -> table_ref jtype outer_opt T_JOIN . table_ref_nj T_ON search_condition [ T_WHERE T_UNION T_ORDER T_ON T_MEMCACHE_DIRTY T_LIMIT T_LEFT TCPAR TCOMMA EOF ]
## Transitions:
-- On T_NAME shift to state 2
-- On TOPAR shift to state 156
-- On table_ref_nj shift to state 157
-- On table shift to state 164
-- On subquery shift to state 165
-- On q_table_name shift to state 167
## Reductions:

State 156:
## Known stack suffix:
## TOPAR
## LR(1) items:
subquery -> TOPAR . T_SELECT all_distinct_opt selection table_exp TCPAR [ T_NAME ]
## Transitions:
-- On T_SELECT shift to state 91
## Reductions:

State 157:
## Known stack suffix:
## table_ref jtype outer_opt T_JOIN table_ref_nj
## LR(1) items:
joined_table -> table_ref jtype outer_opt T_JOIN table_ref_nj . T_ON search_condition [ T_WHERE T_UNION T_ORDER T_ON T_MEMCACHE_DIRTY T_LIMIT T_LEFT TCPAR TCOMMA EOF ]
## Transitions:
-- On T_ON shift to state 158
## Reductions:

State 158:
## Known stack suffix:
## table_ref jtype outer_opt T_JOIN table_ref_nj T_ON
## LR(1) items:
joined_table -> table_ref jtype outer_opt T_JOIN table_ref_nj T_ON . search_condition [ T_WHERE T_UNION T_ORDER T_ON T_MEMCACHE_DIRTY T_LIMIT T_LEFT TCPAR TCOMMA EOF ]
## Transitions:
-- On T_STRING shift to state 14
-- On T_NULLX shift to state 15
-- On T_NOT shift to state 76
-- On T_NAME shift to state 16
-- On T_INTNUM shift to state 31
-- On T_DNUMBER shift to state 32
-- On TPLUS shift to state 33
-- On TOPNOT shift to state 34
-- On TOPNEG shift to state 35
-- On TOPAR shift to state 77
-- On TMUL shift to state 37
-- On TMINUS shift to state 38
-- On APPROXNUM shift to state 39
-- On search_condition shift to state 159
-- On scalar_exp_predicate shift to state 83
-- On scalar_exp shift to state 84
-- On q_table_name shift to state 41
-- On predicate shift to state 160
-- On literal shift to state 54
-- On like_predicate shift to state 161
-- On in_predicate shift to state 162
-- On function_call shift to state 55
-- On comparison_predicate shift to state 163
-- On column_ref shift to state 56
-- On atom shift to state 57
-- On as_expression shift to state 58
## Reductions:
-- On T_WHERE T_UNION T_ORDER T_OR T_ON T_MEMCACHE_DIRTY T_LIMIT T_LEFT T_AND TCPAR TCOMMA EOF
--   reduce production search_condition ->

State 159:
## Known stack suffix:
## table_ref jtype outer_opt T_JOIN table_ref_nj T_ON search_condition
## LR(1) items:
joined_table -> table_ref jtype outer_opt T_JOIN table_ref_nj T_ON search_condition . [ T_WHERE T_UNION T_ORDER T_ON T_MEMCACHE_DIRTY T_LIMIT T_LEFT TCPAR TCOMMA EOF ]
search_condition -> search_condition . T_OR search_condition [ T_WHERE T_UNION T_ORDER T_OR T_ON T_MEMCACHE_DIRTY T_LIMIT T_LEFT T_AND TCPAR TCOMMA EOF ]
search_condition -> search_condition . T_AND search_condition [ T_WHERE T_UNION T_ORDER T_OR T_ON T_MEMCACHE_DIRTY T_LIMIT T_LEFT T_AND TCPAR TCOMMA EOF ]
## Transitions:
-- On T_OR shift to state 79
-- On T_AND shift to state 81
## Reductions:
-- On T_WHERE T_UNION T_ORDER T_ON T_MEMCACHE_DIRTY T_LIMIT T_LEFT TCPAR TCOMMA EOF
--   reduce production joined_table -> table_ref jtype outer_opt T_JOIN table_ref_nj T_ON search_condition

State 160:
## Known stack suffix:
## predicate
## LR(1) items:
search_condition -> predicate . [ T_WHERE T_UNION T_ORDER T_OR T_ON T_MEMCACHE_DIRTY T_LIMIT T_LEFT T_AND TCPAR TCOMMA EOF ]
## Transitions:
## Reductions:
-- On T_WHERE T_UNION T_ORDER T_OR T_ON T_MEMCACHE_DIRTY T_LIMIT T_LEFT T_AND TCPAR TCOMMA EOF
--   reduce production search_condition -> predicate

State 161:
## Known stack suffix:
## like_predicate
## LR(1) items:
predicate -> like_predicate . [ T_WHERE T_UNION T_ORDER T_OR T_ON T_MEMCACHE_DIRTY T_LIMIT T_LEFT T_AND TCPAR TCOMMA EOF ]
## Transitions:
## Reductions:
-- On T_WHERE T_UNION T_ORDER T_OR T_ON T_MEMCACHE_DIRTY T_LIMIT T_LEFT T_AND TCPAR TCOMMA EOF
--   reduce production predicate -> like_predicate

State 162:
## Known stack suffix:
## in_predicate
## LR(1) items:
predicate -> in_predicate . [ T_WHERE T_UNION T_ORDER T_OR T_ON T_MEMCACHE_DIRTY T_LIMIT T_LEFT T_AND TCPAR TCOMMA EOF ]
## Transitions:
## Reductions:
-- On T_WHERE T_UNION T_ORDER T_OR T_ON T_MEMCACHE_DIRTY T_LIMIT T_LEFT T_AND TCPAR TCOMMA EOF
--   reduce production predicate -> in_predicate

State 163:
## Known stack suffix:
## comparison_predicate
## LR(1) items:
predicate -> comparison_predicate . [ T_WHERE T_UNION T_ORDER T_OR T_ON T_MEMCACHE_DIRTY T_LIMIT T_LEFT T_AND TCPAR TCOMMA EOF ]
## Transitions:
## Reductions:
-- On T_WHERE T_UNION T_ORDER T_OR T_ON T_MEMCACHE_DIRTY T_LIMIT T_LEFT T_AND TCPAR TCOMMA EOF
--   reduce production predicate -> comparison_predicate

State 164:
## Known stack suffix:
## table
## LR(1) items:
table_ref_nj -> table . [ T_ON ]
## Transitions:
## Reductions:
-- On T_ON
--   reduce production table_ref_nj -> table

State 165:
## Known stack suffix:
## subquery
## LR(1) items:
table_ref_nj -> subquery . T_NAME [ T_ON ]
## Transitions:
-- On T_NAME shift to state 166
## Reductions:

State 166:
## Known stack suffix:
## subquery T_NAME
## LR(1) items:
table_ref_nj -> subquery T_NAME . [ T_ON ]
## Transitions:
## Reductions:
-- On T_ON
--   reduce production table_ref_nj -> subquery T_NAME

State 167:
## Known stack suffix:
## q_table_name
## LR(1) items:
table -> q_table_name . [ T_WHERE T_VALUES T_UNION T_SET T_SELECT T_ORDER T_ON T_MEMCACHE_DIRTY T_LIMIT T_LEFT TOPAR TCPAR TCOMMA EOF ]
table -> q_table_name . T_AS T_NAME [ T_WHERE T_VALUES T_UNION T_SET T_SELECT T_ORDER T_ON T_MEMCACHE_DIRTY T_LIMIT T_LEFT TOPAR TCPAR TCOMMA EOF ]
table -> q_table_name . T_NAME [ T_WHERE T_VALUES T_UNION T_SET T_SELECT T_ORDER T_ON T_MEMCACHE_DIRTY T_LIMIT T_LEFT TOPAR TCPAR TCOMMA EOF ]
## Transitions:
-- On T_NAME shift to state 168
-- On T_AS shift to state 169
## Reductions:
-- On T_WHERE T_VALUES T_UNION T_SET T_SELECT T_ORDER T_ON T_MEMCACHE_DIRTY T_LIMIT T_LEFT TOPAR TCPAR TCOMMA EOF
--   reduce production table -> q_table_name

State 168:
## Known stack suffix:
## q_table_name T_NAME
## LR(1) items:
table -> q_table_name T_NAME . [ T_WHERE T_VALUES T_UNION T_SET T_SELECT T_ORDER T_ON T_MEMCACHE_DIRTY T_LIMIT T_LEFT TOPAR TCPAR TCOMMA EOF ]
## Transitions:
## Reductions:
-- On T_WHERE T_VALUES T_UNION T_SET T_SELECT T_ORDER T_ON T_MEMCACHE_DIRTY T_LIMIT T_LEFT TOPAR TCPAR TCOMMA EOF
--   reduce production table -> q_table_name T_NAME

State 169:
## Known stack suffix:
## q_table_name T_AS
## LR(1) items:
table -> q_table_name T_AS . T_NAME [ T_WHERE T_VALUES T_UNION T_SET T_SELECT T_ORDER T_ON T_MEMCACHE_DIRTY T_LIMIT T_LEFT TOPAR TCPAR TCOMMA EOF ]
## Transitions:
-- On T_NAME shift to state 170
## Reductions:

State 170:
## Known stack suffix:
## q_table_name T_AS T_NAME
## LR(1) items:
table -> q_table_name T_AS T_NAME . [ T_WHERE T_VALUES T_UNION T_SET T_SELECT T_ORDER T_ON T_MEMCACHE_DIRTY T_LIMIT T_LEFT TOPAR TCPAR TCOMMA EOF ]
## Transitions:
## Reductions:
-- On T_WHERE T_VALUES T_UNION T_SET T_SELECT T_ORDER T_ON T_MEMCACHE_DIRTY T_LIMIT T_LEFT TOPAR TCPAR TCOMMA EOF
--   reduce production table -> q_table_name T_AS T_NAME

State 171:
## Known stack suffix:
## table
## LR(1) items:
table_ref -> table . [ T_WHERE T_UNION T_ORDER T_ON T_MEMCACHE_DIRTY T_LIMIT T_LEFT TCPAR TCOMMA EOF ]
## Transitions:
## Reductions:
-- On T_WHERE T_UNION T_ORDER T_ON T_MEMCACHE_DIRTY T_LIMIT T_LEFT TCPAR TCOMMA EOF
--   reduce production table_ref -> table

State 172:
## Known stack suffix:
## joined_table
## LR(1) items:
table_ref -> joined_table . [ T_WHERE T_UNION T_ORDER T_ON T_MEMCACHE_DIRTY T_LIMIT T_LEFT TCPAR TCOMMA EOF ]
## Transitions:
## Reductions:
-- On T_WHERE T_UNION T_ORDER T_ON T_MEMCACHE_DIRTY T_LIMIT T_LEFT TCPAR TCOMMA EOF
--   reduce production table_ref -> joined_table

State 173:
## Known stack suffix:
## table_ref
## LR(1) items:
joined_table -> table_ref . jtype outer_opt T_JOIN table_ref_nj T_ON search_condition [ T_WHERE T_UNION T_ORDER T_ON T_MEMCACHE_DIRTY T_LIMIT T_LEFT TCPAR TCOMMA EOF ]
table_ref_list -> table_ref . [ T_WHERE T_UNION T_ORDER T_ON T_MEMCACHE_DIRTY T_LIMIT TCPAR TCOMMA EOF ]
## Transitions:
-- On T_LEFT shift to state 151
-- On jtype shift to state 152
## Reductions:
-- On T_WHERE T_UNION T_ORDER T_ON T_MEMCACHE_DIRTY T_LIMIT TCPAR TCOMMA EOF
--   reduce production table_ref_list -> table_ref

State 174:
## Known stack suffix:
## TOPAR T_SELECT all_distinct_opt selection table_exp
## LR(1) items:
subquery -> TOPAR T_SELECT all_distinct_opt selection table_exp . TCPAR [ T_WHERE T_UNION T_ORDER T_OR T_ON T_NAME T_MEMCACHE_DIRTY T_LIMIT T_LEFT T_AND TCPAR TCOMMA EOF ]
## Transitions:
-- On TCPAR shift to state 175
## Reductions:

State 175:
## Known stack suffix:
## TOPAR T_SELECT all_distinct_opt selection table_exp TCPAR
## LR(1) items:
subquery -> TOPAR T_SELECT all_distinct_opt selection table_exp TCPAR . [ T_WHERE T_UNION T_ORDER T_OR T_ON T_NAME T_MEMCACHE_DIRTY T_LIMIT T_LEFT T_AND TCPAR TCOMMA EOF ]
## Transitions:
## Reductions:
-- On T_WHERE T_UNION T_ORDER T_OR T_ON T_NAME T_MEMCACHE_DIRTY T_LIMIT T_LEFT T_AND TCPAR TCOMMA EOF
--   reduce production subquery -> TOPAR T_SELECT all_distinct_opt selection table_exp TCPAR

State 176:
## Known stack suffix:
## scalar_exp T_NOT T_IN TOPAR scalar_exp_list
## LR(1) items:
in_predicate -> scalar_exp T_NOT T_IN TOPAR scalar_exp_list . TCPAR [ T_WHERE T_UNION T_ORDER T_OR T_ON T_MEMCACHE_DIRTY T_LIMIT T_LEFT T_AND TCPAR TCOMMA EOF ]
scalar_exp_list -> scalar_exp_list . TCOMMA scalar_exp [ TCPAR TCOMMA ]
## Transitions:
-- On TCPAR shift to state 177
-- On TCOMMA shift to state 46
## Reductions:

State 177:
## Known stack suffix:
## scalar_exp T_NOT T_IN TOPAR scalar_exp_list TCPAR
## LR(1) items:
in_predicate -> scalar_exp T_NOT T_IN TOPAR scalar_exp_list TCPAR . [ T_WHERE T_UNION T_ORDER T_OR T_ON T_MEMCACHE_DIRTY T_LIMIT T_LEFT T_AND TCPAR TCOMMA EOF ]
## Transitions:
## Reductions:
-- On T_WHERE T_UNION T_ORDER T_OR T_ON T_MEMCACHE_DIRTY T_LIMIT T_LEFT T_AND TCPAR TCOMMA EOF
--   reduce production in_predicate -> scalar_exp T_NOT T_IN TOPAR scalar_exp_list TCPAR

State 178:
## Known stack suffix:
## scalar_exp T_NOT T_IN subquery
## LR(1) items:
in_predicate -> scalar_exp T_NOT T_IN subquery . [ T_WHERE T_UNION T_ORDER T_OR T_ON T_MEMCACHE_DIRTY T_LIMIT T_LEFT T_AND TCPAR TCOMMA EOF ]
## Transitions:
## Reductions:
-- On T_WHERE T_UNION T_ORDER T_OR T_ON T_MEMCACHE_DIRTY T_LIMIT T_LEFT T_AND TCPAR TCOMMA EOF
--   reduce production in_predicate -> scalar_exp T_NOT T_IN subquery

State 179:
## Known stack suffix:
## scalar_exp T_LIKE
## LR(1) items:
like_predicate -> scalar_exp T_LIKE . scalar_exp opt_escape [ T_WHERE T_UNION T_ORDER T_OR T_ON T_MEMCACHE_DIRTY T_LIMIT T_LEFT T_AND TCPAR TCOMMA EOF ]
## Transitions:
-- On T_STRING shift to state 14
-- On T_NULLX shift to state 15
-- On T_NAME shift to state 16
-- On T_INTNUM shift to state 31
-- On T_DNUMBER shift to state 32
-- On TPLUS shift to state 33
-- On TOPNOT shift to state 34
-- On TOPNEG shift to state 35
-- On TOPAR shift to state 36
-- On TMUL shift to state 37
-- On TMINUS shift to state 38
-- On APPROXNUM shift to state 39
-- On scalar_exp shift to state 180
-- On q_table_name shift to state 41
-- On literal shift to state 54
-- On function_call shift to state 55
-- On column_ref shift to state 56
-- On atom shift to state 57
-- On as_expression shift to state 58
## Reductions:

State 180:
## Known stack suffix:
## scalar_exp T_LIKE scalar_exp
## LR(1) items:
as_expression -> scalar_exp . T_AS T_NAME [ T_WHERE T_UNION T_ORDER T_OR T_ON T_MEMCACHE_DIRTY T_LIMIT T_LEFT T_AS T_AND TPLUS TOPOR TOPAND TMUL TMINUS TDIV TCPAR TCOMMA EOF ]
like_predicate -> scalar_exp T_LIKE scalar_exp . opt_escape [ T_WHERE T_UNION T_ORDER T_OR T_ON T_MEMCACHE_DIRTY T_LIMIT T_LEFT T_AND TCPAR TCOMMA EOF ]
scalar_exp -> scalar_exp . TPLUS scalar_exp [ T_WHERE T_UNION T_ORDER T_OR T_ON T_MEMCACHE_DIRTY T_LIMIT T_LEFT T_AS T_AND TPLUS TOPOR TOPAND TMUL TMINUS TDIV TCPAR TCOMMA EOF ]
scalar_exp -> scalar_exp . TMINUS scalar_exp [ T_WHERE T_UNION T_ORDER T_OR T_ON T_MEMCACHE_DIRTY T_LIMIT T_LEFT T_AS T_AND TPLUS TOPOR TOPAND TMUL TMINUS TDIV TCPAR TCOMMA EOF ]
scalar_exp -> scalar_exp . TMUL scalar_exp [ T_WHERE T_UNION T_ORDER T_OR T_ON T_MEMCACHE_DIRTY T_LIMIT T_LEFT T_AS T_AND TPLUS TOPOR TOPAND TMUL TMINUS TDIV TCPAR TCOMMA EOF ]
scalar_exp -> scalar_exp . TDIV scalar_exp [ T_WHERE T_UNION T_ORDER T_OR T_ON T_MEMCACHE_DIRTY T_LIMIT T_LEFT T_AS T_AND TPLUS TOPOR TOPAND TMUL TMINUS TDIV TCPAR TCOMMA EOF ]
scalar_exp -> scalar_exp . TOPAND scalar_exp [ T_WHERE T_UNION T_ORDER T_OR T_ON T_MEMCACHE_DIRTY T_LIMIT T_LEFT T_AS T_AND TPLUS TOPOR TOPAND TMUL TMINUS TDIV TCPAR TCOMMA EOF ]
scalar_exp -> scalar_exp . TOPOR scalar_exp [ T_WHERE T_UNION T_ORDER T_OR T_ON T_MEMCACHE_DIRTY T_LIMIT T_LEFT T_AS T_AND TPLUS TOPOR TOPAND TMUL TMINUS TDIV TCPAR TCOMMA EOF ]
## Transitions:
-- On T_AS shift to state 48
-- On TPLUS shift to state 50
-- On TOPOR shift to state 61
-- On TOPAND shift to state 63
-- On TMUL shift to state 52
-- On TMINUS shift to state 65
-- On TDIV shift to state 59
-- On opt_escape shift to state 181
## Reductions:
-- On T_WHERE T_UNION T_ORDER T_OR T_ON T_MEMCACHE_DIRTY T_LIMIT T_LEFT T_AND TCPAR TCOMMA EOF
--   reduce production opt_escape ->

State 181:
## Known stack suffix:
## scalar_exp T_LIKE scalar_exp opt_escape
## LR(1) items:
like_predicate -> scalar_exp T_LIKE scalar_exp opt_escape . [ T_WHERE T_UNION T_ORDER T_OR T_ON T_MEMCACHE_DIRTY T_LIMIT T_LEFT T_AND TCPAR TCOMMA EOF ]
## Transitions:
## Reductions:
-- On T_WHERE T_UNION T_ORDER T_OR T_ON T_MEMCACHE_DIRTY T_LIMIT T_LEFT T_AND TCPAR TCOMMA EOF
--   reduce production like_predicate -> scalar_exp T_LIKE scalar_exp opt_escape

State 182:
## Known stack suffix:
## scalar_exp T_IN
## LR(1) items:
in_predicate -> scalar_exp T_IN . TOPAR scalar_exp_list TCPAR [ T_WHERE T_UNION T_ORDER T_OR T_ON T_MEMCACHE_DIRTY T_LIMIT T_LEFT T_AND TCPAR TCOMMA EOF ]
in_predicate -> scalar_exp T_IN . subquery [ T_WHERE T_UNION T_ORDER T_OR T_ON T_MEMCACHE_DIRTY T_LIMIT T_LEFT T_AND TCPAR TCOMMA EOF ]
## Transitions:
-- On TOPAR shift to state 183
-- On subquery shift to state 186
## Reductions:

State 183:
## Known stack suffix:
## scalar_exp T_IN TOPAR
## LR(1) items:
in_predicate -> scalar_exp T_IN TOPAR . scalar_exp_list TCPAR [ T_WHERE T_UNION T_ORDER T_OR T_ON T_MEMCACHE_DIRTY T_LIMIT T_LEFT T_AND TCPAR TCOMMA EOF ]
subquery -> TOPAR . T_SELECT all_distinct_opt selection table_exp TCPAR [ T_WHERE T_UNION T_ORDER T_OR T_ON T_MEMCACHE_DIRTY T_LIMIT T_LEFT T_AND TCPAR TCOMMA EOF ]
## Transitions:
-- On T_STRING shift to state 14
-- On T_SELECT shift to state 91
-- On T_NULLX shift to state 15
-- On T_NAME shift to state 16
-- On T_INTNUM shift to state 31
-- On T_DNUMBER shift to state 32
-- On TPLUS shift to state 33
-- On TOPNOT shift to state 34
-- On TOPNEG shift to state 35
-- On TOPAR shift to state 36
-- On TMUL shift to state 37
-- On TMINUS shift to state 38
-- On APPROXNUM shift to state 39
-- On scalar_exp_list shift to state 184
-- On scalar_exp shift to state 67
-- On q_table_name shift to state 41
-- On literal shift to state 54
-- On function_call shift to state 55
-- On column_ref shift to state 56
-- On atom shift to state 57
-- On as_expression shift to state 58
## Reductions:

State 184:
## Known stack suffix:
## scalar_exp T_IN TOPAR scalar_exp_list
## LR(1) items:
in_predicate -> scalar_exp T_IN TOPAR scalar_exp_list . TCPAR [ T_WHERE T_UNION T_ORDER T_OR T_ON T_MEMCACHE_DIRTY T_LIMIT T_LEFT T_AND TCPAR TCOMMA EOF ]
scalar_exp_list -> scalar_exp_list . TCOMMA scalar_exp [ TCPAR TCOMMA ]
## Transitions:
-- On TCPAR shift to state 185
-- On TCOMMA shift to state 46
## Reductions:

State 185:
## Known stack suffix:
## scalar_exp T_IN TOPAR scalar_exp_list TCPAR
## LR(1) items:
in_predicate -> scalar_exp T_IN TOPAR scalar_exp_list TCPAR . [ T_WHERE T_UNION T_ORDER T_OR T_ON T_MEMCACHE_DIRTY T_LIMIT T_LEFT T_AND TCPAR TCOMMA EOF ]
## Transitions:
## Reductions:
-- On T_WHERE T_UNION T_ORDER T_OR T_ON T_MEMCACHE_DIRTY T_LIMIT T_LEFT T_AND TCPAR TCOMMA EOF
--   reduce production in_predicate -> scalar_exp T_IN TOPAR scalar_exp_list TCPAR

State 186:
## Known stack suffix:
## scalar_exp T_IN subquery
## LR(1) items:
in_predicate -> scalar_exp T_IN subquery . [ T_WHERE T_UNION T_ORDER T_OR T_ON T_MEMCACHE_DIRTY T_LIMIT T_LEFT T_AND TCPAR TCOMMA EOF ]
## Transitions:
## Reductions:
-- On T_WHERE T_UNION T_ORDER T_OR T_ON T_MEMCACHE_DIRTY T_LIMIT T_LEFT T_AND TCPAR TCOMMA EOF
--   reduce production in_predicate -> scalar_exp T_IN subquery

State 187:
## Known stack suffix:
## scalar_exp T_COMPARISON
## LR(1) items:
comparison_predicate -> scalar_exp T_COMPARISON . scalar_exp [ T_WHERE T_UNION T_ORDER T_OR T_ON T_MEMCACHE_DIRTY T_LIMIT T_LEFT T_AND TCPAR TCOMMA EOF ]
comparison_predicate -> scalar_exp T_COMPARISON . subquery [ T_WHERE T_UNION T_ORDER T_OR T_ON T_MEMCACHE_DIRTY T_LIMIT T_LEFT T_AND TCPAR TCOMMA EOF ]
## Transitions:
-- On T_STRING shift to state 14
-- On T_NULLX shift to state 15
-- On T_NAME shift to state 16
-- On T_INTNUM shift to state 31
-- On T_DNUMBER shift to state 32
-- On TPLUS shift to state 33
-- On TOPNOT shift to state 34
-- On TOPNEG shift to state 35
-- On TOPAR shift to state 188
-- On TMUL shift to state 37
-- On TMINUS shift to state 38
-- On APPROXNUM shift to state 39
-- On subquery shift to state 189
-- On scalar_exp shift to state 190
-- On q_table_name shift to state 41
-- On literal shift to state 54
-- On function_call shift to state 55
-- On column_ref shift to state 56
-- On atom shift to state 57
-- On as_expression shift to state 58
## Reductions:

State 188:
## Known stack suffix:
## TOPAR
## LR(1) items:
scalar_exp -> TOPAR . scalar_exp_list TCPAR [ T_WHERE T_UNION T_ORDER T_OR T_ON T_MEMCACHE_DIRTY T_LIMIT T_LEFT T_AS T_AND TPLUS TOPOR TOPAND TMUL TMINUS TDIV TCPAR TCOMMA EOF ]
subquery -> TOPAR . T_SELECT all_distinct_opt selection table_exp TCPAR [ T_WHERE T_UNION T_ORDER T_OR T_ON T_MEMCACHE_DIRTY T_LIMIT T_LEFT T_AND TCPAR TCOMMA EOF ]
## Transitions:
-- On T_STRING shift to state 14
-- On T_SELECT shift to state 91
-- On T_NULLX shift to state 15
-- On T_NAME shift to state 16
-- On T_INTNUM shift to state 31
-- On T_DNUMBER shift to state 32
-- On TPLUS shift to state 33
-- On TOPNOT shift to state 34
-- On TOPNEG shift to state 35
-- On TOPAR shift to state 36
-- On TMUL shift to state 37
-- On TMINUS shift to state 38
-- On APPROXNUM shift to state 39
-- On scalar_exp_list shift to state 68
-- On scalar_exp shift to state 67
-- On q_table_name shift to state 41
-- On literal shift to state 54
-- On function_call shift to state 55
-- On column_ref shift to state 56
-- On atom shift to state 57
-- On as_expression shift to state 58
## Reductions:

State 189:
## Known stack suffix:
## scalar_exp T_COMPARISON subquery
## LR(1) items:
comparison_predicate -> scalar_exp T_COMPARISON subquery . [ T_WHERE T_UNION T_ORDER T_OR T_ON T_MEMCACHE_DIRTY T_LIMIT T_LEFT T_AND TCPAR TCOMMA EOF ]
## Transitions:
## Reductions:
-- On T_WHERE T_UNION T_ORDER T_OR T_ON T_MEMCACHE_DIRTY T_LIMIT T_LEFT T_AND TCPAR TCOMMA EOF
--   reduce production comparison_predicate -> scalar_exp T_COMPARISON subquery

State 190:
## Known stack suffix:
## scalar_exp T_COMPARISON scalar_exp
## LR(1) items:
as_expression -> scalar_exp . T_AS T_NAME [ T_WHERE T_UNION T_ORDER T_OR T_ON T_MEMCACHE_DIRTY T_LIMIT T_LEFT T_AS T_AND TPLUS TOPOR TOPAND TMUL TMINUS TDIV TCPAR TCOMMA EOF ]
comparison_predicate -> scalar_exp T_COMPARISON scalar_exp . [ T_WHERE T_UNION T_ORDER T_OR T_ON T_MEMCACHE_DIRTY T_LIMIT T_LEFT T_AND TCPAR TCOMMA EOF ]
scalar_exp -> scalar_exp . TPLUS scalar_exp [ T_WHERE T_UNION T_ORDER T_OR T_ON T_MEMCACHE_DIRTY T_LIMIT T_LEFT T_AS T_AND TPLUS TOPOR TOPAND TMUL TMINUS TDIV TCPAR TCOMMA EOF ]
scalar_exp -> scalar_exp . TMINUS scalar_exp [ T_WHERE T_UNION T_ORDER T_OR T_ON T_MEMCACHE_DIRTY T_LIMIT T_LEFT T_AS T_AND TPLUS TOPOR TOPAND TMUL TMINUS TDIV TCPAR TCOMMA EOF ]
scalar_exp -> scalar_exp . TMUL scalar_exp [ T_WHERE T_UNION T_ORDER T_OR T_ON T_MEMCACHE_DIRTY T_LIMIT T_LEFT T_AS T_AND TPLUS TOPOR TOPAND TMUL TMINUS TDIV TCPAR TCOMMA EOF ]
scalar_exp -> scalar_exp . TDIV scalar_exp [ T_WHERE T_UNION T_ORDER T_OR T_ON T_MEMCACHE_DIRTY T_LIMIT T_LEFT T_AS T_AND TPLUS TOPOR TOPAND TMUL TMINUS TDIV TCPAR TCOMMA EOF ]
scalar_exp -> scalar_exp . TOPAND scalar_exp [ T_WHERE T_UNION T_ORDER T_OR T_ON T_MEMCACHE_DIRTY T_LIMIT T_LEFT T_AS T_AND TPLUS TOPOR TOPAND TMUL TMINUS TDIV TCPAR TCOMMA EOF ]
scalar_exp -> scalar_exp . TOPOR scalar_exp [ T_WHERE T_UNION T_ORDER T_OR T_ON T_MEMCACHE_DIRTY T_LIMIT T_LEFT T_AS T_AND TPLUS TOPOR TOPAND TMUL TMINUS TDIV TCPAR TCOMMA EOF ]
## Transitions:
-- On T_AS shift to state 48
-- On TPLUS shift to state 50
-- On TOPOR shift to state 61
-- On TOPAND shift to state 63
-- On TMUL shift to state 52
-- On TMINUS shift to state 65
-- On TDIV shift to state 59
## Reductions:
-- On T_WHERE T_UNION T_ORDER T_OR T_ON T_MEMCACHE_DIRTY T_LIMIT T_LEFT T_AND TCPAR TCOMMA EOF
--   reduce production comparison_predicate -> scalar_exp T_COMPARISON scalar_exp

State 191:
## Known stack suffix:
## TOPAR search_condition TCPAR
## LR(1) items:
search_condition -> TOPAR search_condition TCPAR . [ T_WHERE T_UNION T_ORDER T_OR T_ON T_MEMCACHE_DIRTY T_LIMIT T_LEFT T_AND TCPAR TCOMMA EOF ]
## Transitions:
## Reductions:
-- On T_WHERE T_UNION T_ORDER T_OR T_ON T_MEMCACHE_DIRTY T_LIMIT T_LEFT T_AND TCPAR TCOMMA EOF
--   reduce production search_condition -> TOPAR search_condition TCPAR

State 192:
## Known stack suffix:
## scalar_exp
## LR(1) items:
as_expression -> scalar_exp . T_AS T_NAME [ T_OR T_NOT T_LIKE T_IN T_COMPARISON T_AS T_AND TPLUS TOPOR TOPAND TMUL TMINUS TDIV TCPAR TCOMMA ]
comparison_predicate -> scalar_exp . T_COMPARISON scalar_exp [ T_OR T_AND TCPAR ]
comparison_predicate -> scalar_exp . T_COMPARISON subquery [ T_OR T_AND TCPAR ]
in_predicate -> scalar_exp . T_NOT T_IN TOPAR scalar_exp_list TCPAR [ T_OR T_AND TCPAR ]
in_predicate -> scalar_exp . T_IN TOPAR scalar_exp_list TCPAR [ T_OR T_AND TCPAR ]
in_predicate -> scalar_exp . T_NOT T_IN subquery [ T_OR T_AND TCPAR ]
in_predicate -> scalar_exp . T_IN subquery [ T_OR T_AND TCPAR ]
like_predicate -> scalar_exp . T_NOT T_LIKE scalar_exp opt_escape [ T_OR T_AND TCPAR ]
like_predicate -> scalar_exp . T_LIKE scalar_exp opt_escape [ T_OR T_AND TCPAR ]
scalar_exp -> scalar_exp . TPLUS scalar_exp [ T_OR T_NOT T_LIKE T_IN T_COMPARISON T_AS T_AND TPLUS TOPOR TOPAND TMUL TMINUS TDIV TCPAR TCOMMA ]
scalar_exp -> scalar_exp . TMINUS scalar_exp [ T_OR T_NOT T_LIKE T_IN T_COMPARISON T_AS T_AND TPLUS TOPOR TOPAND TMUL TMINUS TDIV TCPAR TCOMMA ]
scalar_exp -> scalar_exp . TMUL scalar_exp [ T_OR T_NOT T_LIKE T_IN T_COMPARISON T_AS T_AND TPLUS TOPOR TOPAND TMUL TMINUS TDIV TCPAR TCOMMA ]
scalar_exp -> scalar_exp . TDIV scalar_exp [ T_OR T_NOT T_LIKE T_IN T_COMPARISON T_AS T_AND TPLUS TOPOR TOPAND TMUL TMINUS TDIV TCPAR TCOMMA ]
scalar_exp -> scalar_exp . TOPAND scalar_exp [ T_OR T_NOT T_LIKE T_IN T_COMPARISON T_AS T_AND TPLUS TOPOR TOPAND TMUL TMINUS TDIV TCPAR TCOMMA ]
scalar_exp -> scalar_exp . TOPOR scalar_exp [ T_OR T_NOT T_LIKE T_IN T_COMPARISON T_AS T_AND TPLUS TOPOR TOPAND TMUL TMINUS TDIV TCPAR TCOMMA ]
scalar_exp_list -> scalar_exp . [ TCPAR TCOMMA ]
scalar_exp_predicate -> scalar_exp . [ T_OR T_AND TCPAR ]
## Transitions:
-- On T_NOT shift to state 85
-- On T_LIKE shift to state 179
-- On T_IN shift to state 182
-- On T_COMPARISON shift to state 187
-- On T_AS shift to state 48
-- On TPLUS shift to state 50
-- On TOPOR shift to state 61
-- On TOPAND shift to state 63
-- On TMUL shift to state 52
-- On TMINUS shift to state 65
-- On TDIV shift to state 59
## Reductions:
-- On TCPAR TCOMMA
--   reduce production scalar_exp_list -> scalar_exp
-- On T_OR T_AND TCPAR
--   reduce production scalar_exp_predicate -> scalar_exp
** Conflict on TCPAR

State 193:
## Known stack suffix:
## T_NOT search_condition
## LR(1) items:
search_condition -> search_condition . T_OR search_condition [ T_WHERE T_UNION T_ORDER T_OR T_ON T_MEMCACHE_DIRTY T_LIMIT T_LEFT T_AND TCPAR TCOMMA EOF ]
search_condition -> search_condition . T_AND search_condition [ T_WHERE T_UNION T_ORDER T_OR T_ON T_MEMCACHE_DIRTY T_LIMIT T_LEFT T_AND TCPAR TCOMMA EOF ]
search_condition -> T_NOT search_condition . [ T_WHERE T_UNION T_ORDER T_OR T_ON T_MEMCACHE_DIRTY T_LIMIT T_LEFT T_AND TCPAR TCOMMA EOF ]
## Transitions:
## Reductions:
-- On T_WHERE T_UNION T_ORDER T_OR T_ON T_MEMCACHE_DIRTY T_LIMIT T_LEFT T_AND TCPAR TCOMMA EOF
--   reduce production search_condition -> T_NOT search_condition

State 194:
## Known stack suffix:
## T_WHERE search_condition
## LR(1) items:
search_condition -> search_condition . T_OR search_condition [ T_UNION T_ORDER T_OR T_ON T_MEMCACHE_DIRTY T_LIMIT T_AND TCPAR EOF ]
search_condition -> search_condition . T_AND search_condition [ T_UNION T_ORDER T_OR T_ON T_MEMCACHE_DIRTY T_LIMIT T_AND TCPAR EOF ]
where_clause -> T_WHERE search_condition . [ T_UNION T_ORDER T_ON T_MEMCACHE_DIRTY T_LIMIT TCPAR EOF ]
## Transitions:
-- On T_OR shift to state 79
-- On T_AND shift to state 81
## Reductions:
-- On T_UNION T_ORDER T_ON T_MEMCACHE_DIRTY T_LIMIT TCPAR EOF
--   reduce production where_clause -> T_WHERE search_condition

State 195:
## Known stack suffix:
## assignment_list TCOMMA
## LR(1) items:
assignment_list -> assignment_list TCOMMA . assignment [ T_WHERE T_MEMCACHE_DIRTY TCOMMA EOF ]
## Transitions:
-- On T_NAME shift to state 11
-- On column shift to state 12
-- On assignment shift to state 196
## Reductions:

State 196:
## Known stack suffix:
## assignment_list TCOMMA assignment
## LR(1) items:
assignment_list -> assignment_list TCOMMA assignment . [ T_WHERE T_MEMCACHE_DIRTY TCOMMA EOF ]
## Transitions:
## Reductions:
-- On T_WHERE T_MEMCACHE_DIRTY TCOMMA EOF
--   reduce production assignment_list -> assignment_list TCOMMA assignment

State 197:
## Known stack suffix:
## T_UPDATE table T_SET assignment_list where_clause_opt
## LR(1) items:
update_statement_searched -> T_UPDATE table T_SET assignment_list where_clause_opt . memcache_opt [ EOF ]
## Transitions:
-- On T_MEMCACHE_DIRTY shift to state 198
-- On memcache_opt shift to state 203
-- On memcache shift to state 204
## Reductions:
-- On EOF
--   reduce production memcache_opt ->

State 198:
## Known stack suffix:
## T_MEMCACHE_DIRTY
## LR(1) items:
memcache -> T_MEMCACHE_DIRTY . string_list [ EOF ]
## Transitions:
-- On T_STRING shift to state 199
-- On string_list shift to state 200
## Reductions:

State 199:
## Known stack suffix:
## T_STRING
## LR(1) items:
string_list -> T_STRING . [ TCOMMA EOF ]
## Transitions:
## Reductions:
-- On TCOMMA EOF
--   reduce production string_list -> T_STRING

State 200:
## Known stack suffix:
## T_MEMCACHE_DIRTY string_list
## LR(1) items:
memcache -> T_MEMCACHE_DIRTY string_list . [ EOF ]
string_list -> string_list . TCOMMA T_STRING [ TCOMMA EOF ]
## Transitions:
-- On TCOMMA shift to state 201
## Reductions:
-- On EOF
--   reduce production memcache -> T_MEMCACHE_DIRTY string_list

State 201:
## Known stack suffix:
## string_list TCOMMA
## LR(1) items:
string_list -> string_list TCOMMA . T_STRING [ TCOMMA EOF ]
## Transitions:
-- On T_STRING shift to state 202
## Reductions:

State 202:
## Known stack suffix:
## string_list TCOMMA T_STRING
## LR(1) items:
string_list -> string_list TCOMMA T_STRING . [ TCOMMA EOF ]
## Transitions:
## Reductions:
-- On TCOMMA EOF
--   reduce production string_list -> string_list TCOMMA T_STRING

State 203:
## Known stack suffix:
## T_UPDATE table T_SET assignment_list where_clause_opt memcache_opt
## LR(1) items:
update_statement_searched -> T_UPDATE table T_SET assignment_list where_clause_opt memcache_opt . [ EOF ]
## Transitions:
## Reductions:
-- On EOF
--   reduce production update_statement_searched -> T_UPDATE table T_SET assignment_list where_clause_opt memcache_opt

State 204:
## Known stack suffix:
## memcache
## LR(1) items:
memcache_opt -> memcache . [ EOF ]
## Transitions:
## Reductions:
-- On EOF
--   reduce production memcache_opt -> memcache

State 205:
## Known stack suffix:
## assignment
## LR(1) items:
assignment_list -> assignment . [ T_WHERE T_MEMCACHE_DIRTY TCOMMA EOF ]
## Transitions:
## Reductions:
-- On T_WHERE T_MEMCACHE_DIRTY TCOMMA EOF
--   reduce production assignment_list -> assignment

State 206:
## Known stack suffix:
## T_SELECT
## LR(1) items:
select_statement -> T_SELECT . all_distinct_opt selection table_exp [ TCPAR EOF ]
## Transitions:
-- On T_DISTINCT shift to state 92
-- On T_ALL shift to state 93
-- On all_distinct_opt shift to state 207
-- On all_distinct shift to state 135
## Reductions:
-- On T_STRING T_NULLX T_NAME T_INTNUM T_DNUMBER TPLUS TOPNOT TOPNEG TOPAR TMUL TMINUS APPROXNUM
--   reduce production all_distinct_opt ->

State 207:
## Known stack suffix:
## T_SELECT all_distinct_opt
## LR(1) items:
select_statement -> T_SELECT all_distinct_opt . selection table_exp [ TCPAR EOF ]
## Transitions:
-- On T_STRING shift to state 14
-- On T_NULLX shift to state 15
-- On T_NAME shift to state 16
-- On T_INTNUM shift to state 31
-- On T_DNUMBER shift to state 32
-- On TPLUS shift to state 33
-- On TOPNOT shift to state 34
-- On TOPNEG shift to state 35
-- On TOPAR shift to state 36
-- On TMUL shift to state 37
-- On TMINUS shift to state 38
-- On APPROXNUM shift to state 39
-- On selection shift to state 208
-- On scalar_exp_list shift to state 134
-- On scalar_exp shift to state 67
-- On q_table_name shift to state 41
-- On literal shift to state 54
-- On function_call shift to state 55
-- On column_ref shift to state 56
-- On atom shift to state 57
-- On as_expression shift to state 58
## Reductions:

State 208:
## Known stack suffix:
## T_SELECT all_distinct_opt selection
## LR(1) items:
select_statement -> T_SELECT all_distinct_opt selection . table_exp [ TCPAR EOF ]
## Transitions:
-- On T_FROM shift to state 96
-- On table_exp shift to state 209
-- On from_clause shift to state 102
## Reductions:

State 209:
## Known stack suffix:
## T_SELECT all_distinct_opt selection table_exp
## LR(1) items:
select_statement -> T_SELECT all_distinct_opt selection table_exp . [ TCPAR EOF ]
## Transitions:
## Reductions:
-- On TCPAR EOF
--   reduce production select_statement -> T_SELECT all_distinct_opt selection table_exp

State 210:
## Known stack suffix:
## T_ROLLBACK
## LR(1) items:
toplevel -> T_ROLLBACK . [ EOF ]
## Transitions:
## Reductions:
-- On EOF
--   reduce production toplevel -> T_ROLLBACK

State 211:
## Known stack suffix:
## T_INSERT
## LR(1) items:
insert_statement -> T_INSERT . insert_mode table priv_opt_column_commalist values_or_query_spec on_duplicate_opt memcache_opt [ EOF ]
insert_statement -> T_INSERT . insert_mode table T_SET assignment_list [ EOF ]
## Transitions:
-- On T_SOFT shift to state 212
-- On T_REPLACING shift to state 213
-- On T_INTO shift to state 214
-- On insert_mode shift to state 215
## Reductions:

State 212:
## Known stack suffix:
## T_SOFT
## LR(1) items:
insert_mode -> T_SOFT . [ T_NAME ]
## Transitions:
## Reductions:
-- On T_NAME
--   reduce production insert_mode -> T_SOFT

State 213:
## Known stack suffix:
## T_REPLACING
## LR(1) items:
insert_mode -> T_REPLACING . [ T_NAME ]
## Transitions:
## Reductions:
-- On T_NAME
--   reduce production insert_mode -> T_REPLACING

State 214:
## Known stack suffix:
## T_INTO
## LR(1) items:
insert_mode -> T_INTO . [ T_NAME ]
## Transitions:
## Reductions:
-- On T_NAME
--   reduce production insert_mode -> T_INTO

State 215:
## Known stack suffix:
## T_INSERT insert_mode
## LR(1) items:
insert_statement -> T_INSERT insert_mode . table priv_opt_column_commalist values_or_query_spec on_duplicate_opt memcache_opt [ EOF ]
insert_statement -> T_INSERT insert_mode . table T_SET assignment_list [ EOF ]
## Transitions:
-- On T_NAME shift to state 2
-- On table shift to state 216
-- On q_table_name shift to state 167
## Reductions:

State 216:
## Known stack suffix:
## T_INSERT insert_mode table
## LR(1) items:
insert_statement -> T_INSERT insert_mode table . priv_opt_column_commalist values_or_query_spec on_duplicate_opt memcache_opt [ EOF ]
insert_statement -> T_INSERT insert_mode table . T_SET assignment_list [ EOF ]
## Transitions:
-- On T_SET shift to state 217
-- On TOPAR shift to state 219
-- On priv_opt_column_commalist shift to state 225
## Reductions:
-- On T_VALUES T_SELECT
--   reduce production priv_opt_column_commalist ->

State 217:
## Known stack suffix:
## T_INSERT insert_mode table T_SET
## LR(1) items:
insert_statement -> T_INSERT insert_mode table T_SET . assignment_list [ EOF ]
## Transitions:
-- On T_NAME shift to state 11
-- On column shift to state 12
-- On assignment_list shift to state 218
-- On assignment shift to state 205
## Reductions:

State 218:
## Known stack suffix:
## T_INSERT insert_mode table T_SET assignment_list
## LR(1) items:
assignment_list -> assignment_list . TCOMMA assignment [ TCOMMA EOF ]
insert_statement -> T_INSERT insert_mode table T_SET assignment_list . [ EOF ]
## Transitions:
-- On TCOMMA shift to state 195
## Reductions:
-- On EOF
--   reduce production insert_statement -> T_INSERT insert_mode table T_SET assignment_list

State 219:
## Known stack suffix:
## TOPAR
## LR(1) items:
priv_opt_column_commalist -> TOPAR . column_list TCPAR [ T_VALUES T_SELECT ]
## Transitions:
-- On T_NAME shift to state 11
-- On column_list shift to state 220
-- On column shift to state 224
## Reductions:

State 220:
## Known stack suffix:
## TOPAR column_list
## LR(1) items:
column_list -> column_list . TCOMMA column [ TCPAR TCOMMA ]
priv_opt_column_commalist -> TOPAR column_list . TCPAR [ T_VALUES T_SELECT ]
## Transitions:
-- On TCPAR shift to state 221
-- On TCOMMA shift to state 222
## Reductions:

State 221:
## Known stack suffix:
## TOPAR column_list TCPAR
## LR(1) items:
priv_opt_column_commalist -> TOPAR column_list TCPAR . [ T_VALUES T_SELECT ]
## Transitions:
## Reductions:
-- On T_VALUES T_SELECT
--   reduce production priv_opt_column_commalist -> TOPAR column_list TCPAR

State 222:
## Known stack suffix:
## column_list TCOMMA
## LR(1) items:
column_list -> column_list TCOMMA . column [ TCPAR TCOMMA ]
## Transitions:
-- On T_NAME shift to state 11
-- On column shift to state 223
## Reductions:

State 223:
## Known stack suffix:
## column_list TCOMMA column
## LR(1) items:
column_list -> column_list TCOMMA column . [ TCPAR TCOMMA ]
## Transitions:
## Reductions:
-- On TCPAR TCOMMA
--   reduce production column_list -> column_list TCOMMA column

State 224:
## Known stack suffix:
## column
## LR(1) items:
column_list -> column . [ TCPAR TCOMMA ]
## Transitions:
## Reductions:
-- On TCPAR TCOMMA
--   reduce production column_list -> column

State 225:
## Known stack suffix:
## T_INSERT insert_mode table priv_opt_column_commalist
## LR(1) items:
insert_statement -> T_INSERT insert_mode table priv_opt_column_commalist . values_or_query_spec on_duplicate_opt memcache_opt [ EOF ]
## Transitions:
-- On T_VALUES shift to state 226
-- On T_SELECT shift to state 98
-- On values_or_query_spec shift to state 234
-- On query_spec shift to state 257
## Reductions:

State 226:
## Known stack suffix:
## T_VALUES
## LR(1) items:
values_or_query_spec -> T_VALUES . TOPAR insert_atom_list TCPAR [ T_ON T_MEMCACHE_DIRTY EOF ]
## Transitions:
-- On TOPAR shift to state 227
## Reductions:

State 227:
## Known stack suffix:
## T_VALUES TOPAR
## LR(1) items:
values_or_query_spec -> T_VALUES TOPAR . insert_atom_list TCPAR [ T_ON T_MEMCACHE_DIRTY EOF ]
## Transitions:
-- On T_STRING shift to state 14
-- On T_NULLX shift to state 15
-- On T_NAME shift to state 16
-- On T_INTNUM shift to state 31
-- On T_DNUMBER shift to state 32
-- On TPLUS shift to state 33
-- On TOPNOT shift to state 34
-- On TOPNEG shift to state 35
-- On TOPAR shift to state 36
-- On TMUL shift to state 37
-- On TMINUS shift to state 38
-- On APPROXNUM shift to state 39
-- On scalar_exp shift to state 228
-- On q_table_name shift to state 41
-- On literal shift to state 54
-- On insert_atom_list shift to state 229
-- On insert_atom shift to state 233
-- On function_call shift to state 55
-- On column_ref shift to state 56
-- On atom shift to state 57
-- On as_expression shift to state 58
## Reductions:

State 228:
## Known stack suffix:
## scalar_exp
## LR(1) items:
as_expression -> scalar_exp . T_AS T_NAME [ T_AS TPLUS TOPOR TOPAND TMUL TMINUS TDIV TCPAR TCOMMA ]
insert_atom -> scalar_exp . [ TCPAR TCOMMA ]
scalar_exp -> scalar_exp . TPLUS scalar_exp [ T_AS TPLUS TOPOR TOPAND TMUL TMINUS TDIV TCPAR TCOMMA ]
scalar_exp -> scalar_exp . TMINUS scalar_exp [ T_AS TPLUS TOPOR TOPAND TMUL TMINUS TDIV TCPAR TCOMMA ]
scalar_exp -> scalar_exp . TMUL scalar_exp [ T_AS TPLUS TOPOR TOPAND TMUL TMINUS TDIV TCPAR TCOMMA ]
scalar_exp -> scalar_exp . TDIV scalar_exp [ T_AS TPLUS TOPOR TOPAND TMUL TMINUS TDIV TCPAR TCOMMA ]
scalar_exp -> scalar_exp . TOPAND scalar_exp [ T_AS TPLUS TOPOR TOPAND TMUL TMINUS TDIV TCPAR TCOMMA ]
scalar_exp -> scalar_exp . TOPOR scalar_exp [ T_AS TPLUS TOPOR TOPAND TMUL TMINUS TDIV TCPAR TCOMMA ]
## Transitions:
-- On T_AS shift to state 48
-- On TPLUS shift to state 50
-- On TOPOR shift to state 61
-- On TOPAND shift to state 63
-- On TMUL shift to state 52
-- On TMINUS shift to state 65
-- On TDIV shift to state 59
## Reductions:
-- On TCPAR TCOMMA
--   reduce production insert_atom -> scalar_exp

State 229:
## Known stack suffix:
## T_VALUES TOPAR insert_atom_list
## LR(1) items:
insert_atom_list -> insert_atom_list . TCOMMA insert_atom [ TCPAR TCOMMA ]
values_or_query_spec -> T_VALUES TOPAR insert_atom_list . TCPAR [ T_ON T_MEMCACHE_DIRTY EOF ]
## Transitions:
-- On TCPAR shift to state 230
-- On TCOMMA shift to state 231
## Reductions:

State 230:
## Known stack suffix:
## T_VALUES TOPAR insert_atom_list TCPAR
## LR(1) items:
values_or_query_spec -> T_VALUES TOPAR insert_atom_list TCPAR . [ T_ON T_MEMCACHE_DIRTY EOF ]
## Transitions:
## Reductions:
-- On T_ON T_MEMCACHE_DIRTY EOF
--   reduce production values_or_query_spec -> T_VALUES TOPAR insert_atom_list TCPAR

State 231:
## Known stack suffix:
## insert_atom_list TCOMMA
## LR(1) items:
insert_atom_list -> insert_atom_list TCOMMA . insert_atom [ TCPAR TCOMMA ]
## Transitions:
-- On T_STRING shift to state 14
-- On T_NULLX shift to state 15
-- On T_NAME shift to state 16
-- On T_INTNUM shift to state 31
-- On T_DNUMBER shift to state 32
-- On TPLUS shift to state 33
-- On TOPNOT shift to state 34
-- On TOPNEG shift to state 35
-- On TOPAR shift to state 36
-- On TMUL shift to state 37
-- On TMINUS shift to state 38
-- On APPROXNUM shift to state 39
-- On scalar_exp shift to state 228
-- On q_table_name shift to state 41
-- On literal shift to state 54
-- On insert_atom shift to state 232
-- On function_call shift to state 55
-- On column_ref shift to state 56
-- On atom shift to state 57
-- On as_expression shift to state 58
## Reductions:

State 232:
## Known stack suffix:
## insert_atom_list TCOMMA insert_atom
## LR(1) items:
insert_atom_list -> insert_atom_list TCOMMA insert_atom . [ TCPAR TCOMMA ]
## Transitions:
## Reductions:
-- On TCPAR TCOMMA
--   reduce production insert_atom_list -> insert_atom_list TCOMMA insert_atom

State 233:
## Known stack suffix:
## insert_atom
## LR(1) items:
insert_atom_list -> insert_atom . [ TCPAR TCOMMA ]
## Transitions:
## Reductions:
-- On TCPAR TCOMMA
--   reduce production insert_atom_list -> insert_atom

State 234:
## Known stack suffix:
## T_INSERT insert_mode table priv_opt_column_commalist values_or_query_spec
## LR(1) items:
insert_statement -> T_INSERT insert_mode table priv_opt_column_commalist values_or_query_spec . on_duplicate_opt memcache_opt [ EOF ]
## Transitions:
-- On T_ON shift to state 235
-- On on_duplicate_opt shift to state 255
## Reductions:
-- On T_MEMCACHE_DIRTY EOF
--   reduce production on_duplicate_opt ->

State 235:
## Known stack suffix:
## T_ON
## LR(1) items:
on_duplicate_opt -> T_ON . T_DUPLICATE T_KEY update_statement_duplicate [ T_MEMCACHE_DIRTY EOF ]
## Transitions:
-- On T_DUPLICATE shift to state 236
## Reductions:

State 236:
## Known stack suffix:
## T_ON T_DUPLICATE
## LR(1) items:
on_duplicate_opt -> T_ON T_DUPLICATE . T_KEY update_statement_duplicate [ T_MEMCACHE_DIRTY EOF ]
## Transitions:
-- On T_KEY shift to state 237
## Reductions:

State 237:
## Known stack suffix:
## T_ON T_DUPLICATE T_KEY
## LR(1) items:
on_duplicate_opt -> T_ON T_DUPLICATE T_KEY . update_statement_duplicate [ T_MEMCACHE_DIRTY EOF ]
## Transitions:
-- On T_UPDATE shift to state 238
-- On update_statement_duplicate shift to state 254
## Reductions:

State 238:
## Known stack suffix:
## T_UPDATE
## LR(1) items:
update_statement_duplicate -> T_UPDATE . table T_SET assignment_update_list [ T_MEMCACHE_DIRTY EOF ]
update_statement_duplicate -> T_UPDATE . assignment_update_list [ T_MEMCACHE_DIRTY EOF ]
## Transitions:
-- On T_NAME shift to state 239
-- On table shift to state 240
-- On q_table_name shift to state 167
-- On column shift to state 242
-- On assignment_update_list shift to state 253
-- On assignment_update shift to state 252
## Reductions:

State 239:
## Known stack suffix:
## T_NAME
## LR(1) items:
column -> T_NAME . [ T_COMPARISON ]
q_table_name -> T_NAME . [ T_SET T_NAME T_AS ]
q_table_name -> T_NAME . TDOT T_NAME [ T_SET T_NAME T_AS ]
q_table_name -> T_NAME . TDOT T_NAME TDOT T_NAME [ T_SET T_NAME T_AS ]
q_table_name -> T_NAME . TDOT TDOT T_NAME [ T_SET T_NAME T_AS ]
## Transitions:
-- On TDOT shift to state 3
## Reductions:
-- On T_COMPARISON
--   reduce production column -> T_NAME
-- On T_SET T_NAME T_AS
--   reduce production q_table_name -> T_NAME

State 240:
## Known stack suffix:
## T_UPDATE table
## LR(1) items:
update_statement_duplicate -> T_UPDATE table . T_SET assignment_update_list [ T_MEMCACHE_DIRTY EOF ]
## Transitions:
-- On T_SET shift to state 241
## Reductions:

State 241:
## Known stack suffix:
## T_UPDATE table T_SET
## LR(1) items:
update_statement_duplicate -> T_UPDATE table T_SET . assignment_update_list [ T_MEMCACHE_DIRTY EOF ]
## Transitions:
-- On T_NAME shift to state 11
-- On column shift to state 242
-- On assignment_update_list shift to state 249
-- On assignment_update shift to state 252
## Reductions:

State 242:
## Known stack suffix:
## column
## LR(1) items:
assignment_update -> column . T_COMPARISON scalar_exp [ T_MEMCACHE_DIRTY TCOMMA EOF ]
assignment_update -> column . T_COMPARISON T_VALUES TOPAR insert_atom_list TCPAR [ T_MEMCACHE_DIRTY TCOMMA EOF ]
## Transitions:
-- On T_COMPARISON shift to state 243
## Reductions:

State 243:
## Known stack suffix:
## column T_COMPARISON
## LR(1) items:
assignment_update -> column T_COMPARISON . scalar_exp [ T_MEMCACHE_DIRTY TCOMMA EOF ]
assignment_update -> column T_COMPARISON . T_VALUES TOPAR insert_atom_list TCPAR [ T_MEMCACHE_DIRTY TCOMMA EOF ]
## Transitions:
-- On T_VALUES shift to state 244
-- On T_STRING shift to state 14
-- On T_NULLX shift to state 15
-- On T_NAME shift to state 16
-- On T_INTNUM shift to state 31
-- On T_DNUMBER shift to state 32
-- On TPLUS shift to state 33
-- On TOPNOT shift to state 34
-- On TOPNEG shift to state 35
-- On TOPAR shift to state 36
-- On TMUL shift to state 37
-- On TMINUS shift to state 38
-- On APPROXNUM shift to state 39
-- On scalar_exp shift to state 248
-- On q_table_name shift to state 41
-- On literal shift to state 54
-- On function_call shift to state 55
-- On column_ref shift to state 56
-- On atom shift to state 57
-- On as_expression shift to state 58
## Reductions:

State 244:
## Known stack suffix:
## column T_COMPARISON T_VALUES
## LR(1) items:
assignment_update -> column T_COMPARISON T_VALUES . TOPAR insert_atom_list TCPAR [ T_MEMCACHE_DIRTY TCOMMA EOF ]
## Transitions:
-- On TOPAR shift to state 245
## Reductions:

State 245:
## Known stack suffix:
## column T_COMPARISON T_VALUES TOPAR
## LR(1) items:
assignment_update -> column T_COMPARISON T_VALUES TOPAR . insert_atom_list TCPAR [ T_MEMCACHE_DIRTY TCOMMA EOF ]
## Transitions:
-- On T_STRING shift to state 14
-- On T_NULLX shift to state 15
-- On T_NAME shift to state 16
-- On T_INTNUM shift to state 31
-- On T_DNUMBER shift to state 32
-- On TPLUS shift to state 33
-- On TOPNOT shift to state 34
-- On TOPNEG shift to state 35
-- On TOPAR shift to state 36
-- On TMUL shift to state 37
-- On TMINUS shift to state 38
-- On APPROXNUM shift to state 39
-- On scalar_exp shift to state 228
-- On q_table_name shift to state 41
-- On literal shift to state 54
-- On insert_atom_list shift to state 246
-- On insert_atom shift to state 233
-- On function_call shift to state 55
-- On column_ref shift to state 56
-- On atom shift to state 57
-- On as_expression shift to state 58
## Reductions:

State 246:
## Known stack suffix:
## column T_COMPARISON T_VALUES TOPAR insert_atom_list
## LR(1) items:
assignment_update -> column T_COMPARISON T_VALUES TOPAR insert_atom_list . TCPAR [ T_MEMCACHE_DIRTY TCOMMA EOF ]
insert_atom_list -> insert_atom_list . TCOMMA insert_atom [ TCPAR TCOMMA ]
## Transitions:
-- On TCPAR shift to state 247
-- On TCOMMA shift to state 231
## Reductions:

State 247:
## Known stack suffix:
## column T_COMPARISON T_VALUES TOPAR insert_atom_list TCPAR
## LR(1) items:
assignment_update -> column T_COMPARISON T_VALUES TOPAR insert_atom_list TCPAR . [ T_MEMCACHE_DIRTY TCOMMA EOF ]
## Transitions:
## Reductions:
-- On T_MEMCACHE_DIRTY TCOMMA EOF
--   reduce production assignment_update -> column T_COMPARISON T_VALUES TOPAR insert_atom_list TCPAR

State 248:
## Known stack suffix:
## column T_COMPARISON scalar_exp
## LR(1) items:
as_expression -> scalar_exp . T_AS T_NAME [ T_MEMCACHE_DIRTY T_AS TPLUS TOPOR TOPAND TMUL TMINUS TDIV TCOMMA EOF ]
assignment_update -> column T_COMPARISON scalar_exp . [ T_MEMCACHE_DIRTY TCOMMA EOF ]
scalar_exp -> scalar_exp . TPLUS scalar_exp [ T_MEMCACHE_DIRTY T_AS TPLUS TOPOR TOPAND TMUL TMINUS TDIV TCOMMA EOF ]
scalar_exp -> scalar_exp . TMINUS scalar_exp [ T_MEMCACHE_DIRTY T_AS TPLUS TOPOR TOPAND TMUL TMINUS TDIV TCOMMA EOF ]
scalar_exp -> scalar_exp . TMUL scalar_exp [ T_MEMCACHE_DIRTY T_AS TPLUS TOPOR TOPAND TMUL TMINUS TDIV TCOMMA EOF ]
scalar_exp -> scalar_exp . TDIV scalar_exp [ T_MEMCACHE_DIRTY T_AS TPLUS TOPOR TOPAND TMUL TMINUS TDIV TCOMMA EOF ]
scalar_exp -> scalar_exp . TOPAND scalar_exp [ T_MEMCACHE_DIRTY T_AS TPLUS TOPOR TOPAND TMUL TMINUS TDIV TCOMMA EOF ]
scalar_exp -> scalar_exp . TOPOR scalar_exp [ T_MEMCACHE_DIRTY T_AS TPLUS TOPOR TOPAND TMUL TMINUS TDIV TCOMMA EOF ]
## Transitions:
-- On T_AS shift to state 48
-- On TPLUS shift to state 50
-- On TOPOR shift to state 61
-- On TOPAND shift to state 63
-- On TMUL shift to state 52
-- On TMINUS shift to state 65
-- On TDIV shift to state 59
## Reductions:
-- On T_MEMCACHE_DIRTY TCOMMA EOF
--   reduce production assignment_update -> column T_COMPARISON scalar_exp

State 249:
## Known stack suffix:
## T_UPDATE table T_SET assignment_update_list
## LR(1) items:
assignment_update_list -> assignment_update_list . TCOMMA assignment_update [ T_MEMCACHE_DIRTY TCOMMA EOF ]
update_statement_duplicate -> T_UPDATE table T_SET assignment_update_list . [ T_MEMCACHE_DIRTY EOF ]
## Transitions:
-- On TCOMMA shift to state 250
## Reductions:
-- On T_MEMCACHE_DIRTY EOF
--   reduce production update_statement_duplicate -> T_UPDATE table T_SET assignment_update_list

State 250:
## Known stack suffix:
## assignment_update_list TCOMMA
## LR(1) items:
assignment_update_list -> assignment_update_list TCOMMA . assignment_update [ T_MEMCACHE_DIRTY TCOMMA EOF ]
## Transitions:
-- On T_NAME shift to state 11
-- On column shift to state 242
-- On assignment_update shift to state 251
## Reductions:

State 251:
## Known stack suffix:
## assignment_update_list TCOMMA assignment_update
## LR(1) items:
assignment_update_list -> assignment_update_list TCOMMA assignment_update . [ T_MEMCACHE_DIRTY TCOMMA EOF ]
## Transitions:
## Reductions:
-- On T_MEMCACHE_DIRTY TCOMMA EOF
--   reduce production assignment_update_list -> assignment_update_list TCOMMA assignment_update

State 252:
## Known stack suffix:
## assignment_update
## LR(1) items:
assignment_update_list -> assignment_update . [ T_MEMCACHE_DIRTY TCOMMA EOF ]
## Transitions:
## Reductions:
-- On T_MEMCACHE_DIRTY TCOMMA EOF
--   reduce production assignment_update_list -> assignment_update

State 253:
## Known stack suffix:
## T_UPDATE assignment_update_list
## LR(1) items:
assignment_update_list -> assignment_update_list . TCOMMA assignment_update [ T_MEMCACHE_DIRTY TCOMMA EOF ]
update_statement_duplicate -> T_UPDATE assignment_update_list . [ T_MEMCACHE_DIRTY EOF ]
## Transitions:
-- On TCOMMA shift to state 250
## Reductions:
-- On T_MEMCACHE_DIRTY EOF
--   reduce production update_statement_duplicate -> T_UPDATE assignment_update_list

State 254:
## Known stack suffix:
## T_ON T_DUPLICATE T_KEY update_statement_duplicate
## LR(1) items:
on_duplicate_opt -> T_ON T_DUPLICATE T_KEY update_statement_duplicate . [ T_MEMCACHE_DIRTY EOF ]
## Transitions:
## Reductions:
-- On T_MEMCACHE_DIRTY EOF
--   reduce production on_duplicate_opt -> T_ON T_DUPLICATE T_KEY update_statement_duplicate

State 255:
## Known stack suffix:
## T_INSERT insert_mode table priv_opt_column_commalist values_or_query_spec on_duplicate_opt
## LR(1) items:
insert_statement -> T_INSERT insert_mode table priv_opt_column_commalist values_or_query_spec on_duplicate_opt . memcache_opt [ EOF ]
## Transitions:
-- On T_MEMCACHE_DIRTY shift to state 198
-- On memcache_opt shift to state 256
-- On memcache shift to state 204
## Reductions:
-- On EOF
--   reduce production memcache_opt ->

State 256:
## Known stack suffix:
## T_INSERT insert_mode table priv_opt_column_commalist values_or_query_spec on_duplicate_opt memcache_opt
## LR(1) items:
insert_statement -> T_INSERT insert_mode table priv_opt_column_commalist values_or_query_spec on_duplicate_opt memcache_opt . [ EOF ]
## Transitions:
## Reductions:
-- On EOF
--   reduce production insert_statement -> T_INSERT insert_mode table priv_opt_column_commalist values_or_query_spec on_duplicate_opt memcache_opt

State 257:
## Known stack suffix:
## query_spec
## LR(1) items:
values_or_query_spec -> query_spec . [ T_ON T_MEMCACHE_DIRTY EOF ]
## Transitions:
## Reductions:
-- On T_ON T_MEMCACHE_DIRTY EOF
--   reduce production values_or_query_spec -> query_spec

State 258:
## Known stack suffix:
## T_DELETE
## LR(1) items:
delete_statement_searched -> T_DELETE . T_FROM table where_clause_opt memcache_opt [ EOF ]
## Transitions:
-- On T_FROM shift to state 259
## Reductions:

State 259:
## Known stack suffix:
## T_DELETE T_FROM
## LR(1) items:
delete_statement_searched -> T_DELETE T_FROM . table where_clause_opt memcache_opt [ EOF ]
## Transitions:
-- On T_NAME shift to state 2
-- On table shift to state 260
-- On q_table_name shift to state 167
## Reductions:

State 260:
## Known stack suffix:
## T_DELETE T_FROM table
## LR(1) items:
delete_statement_searched -> T_DELETE T_FROM table . where_clause_opt memcache_opt [ EOF ]
## Transitions:
-- On T_WHERE shift to state 75
-- On where_clause_opt shift to state 261
-- On where_clause shift to state 133
## Reductions:
-- On T_MEMCACHE_DIRTY EOF
--   reduce production where_clause_opt ->

State 261:
## Known stack suffix:
## T_DELETE T_FROM table where_clause_opt
## LR(1) items:
delete_statement_searched -> T_DELETE T_FROM table where_clause_opt . memcache_opt [ EOF ]
## Transitions:
-- On T_MEMCACHE_DIRTY shift to state 198
-- On memcache_opt shift to state 262
-- On memcache shift to state 204
## Reductions:
-- On EOF
--   reduce production memcache_opt ->

State 262:
## Known stack suffix:
## T_DELETE T_FROM table where_clause_opt memcache_opt
## LR(1) items:
delete_statement_searched -> T_DELETE T_FROM table where_clause_opt memcache_opt . [ EOF ]
## Transitions:
## Reductions:
-- On EOF
--   reduce production delete_statement_searched -> T_DELETE T_FROM table where_clause_opt memcache_opt

State 263:
## Known stack suffix:
## T_COMMIT
## LR(1) items:
toplevel -> T_COMMIT . [ EOF ]
## Transitions:
## Reductions:
-- On EOF
--   reduce production toplevel -> T_COMMIT

State 264:
## Known stack suffix:
## T_BEGIN
## LR(1) items:
toplevel -> T_BEGIN . [ EOF ]
## Transitions:
## Reductions:
-- On EOF
--   reduce production toplevel -> T_BEGIN

State 265:
## Known stack suffix:
## TOPAR
## LR(1) items:
toplevel -> TOPAR . select_statement TCPAR [ EOF ]
## Transitions:
-- On T_SELECT shift to state 206
-- On select_statement shift to state 266
## Reductions:

State 266:
## Known stack suffix:
## TOPAR select_statement
## LR(1) items:
toplevel -> TOPAR select_statement . TCPAR [ EOF ]
## Transitions:
-- On TCPAR shift to state 267
## Reductions:

State 267:
## Known stack suffix:
## TOPAR select_statement TCPAR
## LR(1) items:
toplevel -> TOPAR select_statement TCPAR . [ EOF ]
## Transitions:
## Reductions:
-- On EOF
--   reduce production toplevel -> TOPAR select_statement TCPAR

State 268:
## Known stack suffix:
## update_statement_searched
## LR(1) items:
toplevel -> update_statement_searched . [ EOF ]
## Transitions:
## Reductions:
-- On EOF
--   reduce production toplevel -> update_statement_searched

State 269:
## Known stack suffix:
## toplevel
## LR(1) items:
main -> toplevel . EOF [ # ]
## Transitions:
-- On EOF shift to state 270
## Reductions:

State 270:
## Known stack suffix:
## toplevel EOF
## LR(1) items:
main -> toplevel EOF . [ # ]
## Transitions:
## Reductions:
-- On #
--   reduce production main -> toplevel EOF

State 271:
## Known stack suffix:
## select_statement
## LR(1) items:
toplevel -> select_statement . [ EOF ]
## Transitions:
## Reductions:
-- On EOF
--   reduce production toplevel -> select_statement

State 272:
## Known stack suffix:
## main
## LR(1) items:
main' -> main . [ # ]
## Transitions:
## Reductions:
-- On #
--   accept main

State 273:
## Known stack suffix:
## insert_statement
## LR(1) items:
toplevel -> insert_statement . [ EOF ]
## Transitions:
## Reductions:
-- On EOF
--   reduce production toplevel -> insert_statement

State 274:
## Known stack suffix:
## delete_statement_searched
## LR(1) items:
toplevel -> delete_statement_searched . [ EOF ]
## Transitions:
## Reductions:
-- On EOF
--   reduce production toplevel -> delete_statement_searched

