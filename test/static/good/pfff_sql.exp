File "pfff_sql.mly", line 90, characters 10-19:
Warning: the token SHIFTHERE is unused.
File "pfff_sql.mly", line 80, characters 22-32:
Warning: the token TSEMICOLON is unused.
File "pfff_sql.mly", line 84, characters 22-30:
Warning: the token TUnknown is unused.
Grammar has 65 nonterminal symbols, among which 1 start symbols.
Grammar has 57 terminal symbols.
Grammar has 151 productions.
nullable(where_clause_opt) = true
nullable(where_clause) = false
nullable(values_or_query_spec) = false
nullable(update_statement_searched) = false
nullable(update_statement_duplicate) = false
nullable(toplevel) = false
nullable(table_ref_nj) = false
nullable(table_ref_list) = false
nullable(table_ref) = false
nullable(table_exp) = false
nullable(table) = false
nullable(subquery) = false
nullable(string_list) = false
nullable(selection) = false
nullable(select_statement) = false
nullable(search_condition) = true
nullable(scalar_exp_predicate) = false
nullable(scalar_exp_list_opt) = true
nullable(scalar_exp_list) = false
nullable(scalar_exp) = false
nullable(query_term) = false
nullable(query_spec) = false
nullable(query_exp) = false
nullable(q_table_name) = false
nullable(priv_opt_column_commalist) = true
nullable(predicate) = false
nullable(outer_opt) = true
nullable(ordering_spec_list) = false
nullable(ordering_spec) = false
nullable(order_by_clause_opt) = true
nullable(order_by_clause) = false
nullable(opt_escape) = true
nullable(on_duplicate_opt) = true
nullable(memcache_opt) = true
nullable(memcache) = false
nullable(main) = false
nullable(literal) = false
nullable(limit_clause_opt) = true
nullable(limit_clause) = false
nullable(like_predicate) = false
nullable(jtype) = false
nullable(joined_table) = false
nullable(int_list) = false
nullable(insert_statement) = false
nullable(insert_mode) = false
nullable(insert_atom_list) = false
nullable(insert_atom) = false
nullable(in_predicate) = false
nullable(function_call) = false
nullable(from_clause) = false
nullable(delete_statement_searched) = false
nullable(comparison_predicate) = false
nullable(column_ref) = false
nullable(column_list) = false
nullable(column) = false
nullable(atom) = false
nullable(assignment_update_list) = false
nullable(assignment_update) = false
nullable(assignment_list) = false
nullable(assignment) = false
nullable(asc_desc_opt) = true
nullable(asc_desc) = false
nullable(as_expression) = false
nullable(all_distinct_opt) = true
nullable(all_distinct) = false
first(where_clause_opt) = T_WHERE
first(where_clause) = T_WHERE
first(values_or_query_spec) = T_VALUES T_SELECT
first(update_statement_searched) = T_UPDATE
first(update_statement_duplicate) = T_UPDATE
first(toplevel) = T_UPDATE T_SELECT T_ROLLBACK T_INSERT T_DELETE T_COMMIT T_BEGIN TOPAR
first(table_ref_nj) = T_NAME TOPAR
first(table_ref_list) = T_NAME TOPAR
first(table_ref) = T_NAME TOPAR
first(table_exp) = T_FROM
first(table) = T_NAME
first(subquery) = TOPAR
first(string_list) = T_STRING
first(selection) = T_STRING T_NULLX T_NAME T_INTNUM T_DNUMBER TPLUS TOPNOT TOPNEG TOPAR TMUL TMINUS APPROXNUM
first(select_statement) = T_SELECT
first(search_condition) = T_STRING T_OR T_NULLX T_NOT T_NAME T_INTNUM T_DNUMBER T_AND TPLUS TOPNOT TOPNEG TOPAR TMUL TMINUS APPROXNUM
first(scalar_exp_predicate) = T_STRING T_NULLX T_NAME T_INTNUM T_DNUMBER TPLUS TOPNOT TOPNEG TOPAR TMUL TMINUS APPROXNUM
first(scalar_exp_list_opt) = T_STRING T_NULLX T_NAME T_INTNUM T_DNUMBER TPLUS TOPNOT TOPNEG TOPAR TMUL TMINUS APPROXNUM
first(scalar_exp_list) = T_STRING T_NULLX T_NAME T_INTNUM T_DNUMBER TPLUS TOPNOT TOPNEG TOPAR TMUL TMINUS APPROXNUM
first(scalar_exp) = T_STRING T_NULLX T_NAME T_INTNUM T_DNUMBER TPLUS TOPNOT TOPNEG TOPAR TMUL TMINUS APPROXNUM
first(query_term) = T_SELECT TOPAR
first(query_spec) = T_SELECT
first(query_exp) = T_SELECT TOPAR
first(q_table_name) = T_NAME
first(priv_opt_column_commalist) = TOPAR
first(predicate) = T_STRING T_NULLX T_NAME T_INTNUM T_DNUMBER TPLUS TOPNOT TOPNEG TOPAR TMUL TMINUS APPROXNUM
first(outer_opt) = T_OUTER
first(ordering_spec_list) = T_NAME T_INTNUM TMUL
first(ordering_spec) = T_NAME T_INTNUM TMUL
first(order_by_clause_opt) = T_ORDER
first(order_by_clause) = T_ORDER
first(opt_escape) = 
first(on_duplicate_opt) = T_ON
first(memcache_opt) = T_MEMCACHE_DIRTY
first(memcache) = T_MEMCACHE_DIRTY
first(main) = T_UPDATE T_SELECT T_ROLLBACK T_INSERT T_DELETE T_COMMIT T_BEGIN TOPAR
first(literal) = T_STRING T_NULLX T_INTNUM T_DNUMBER APPROXNUM
first(limit_clause_opt) = T_LIMIT
first(limit_clause) = T_LIMIT
first(like_predicate) = T_STRING T_NULLX T_NAME T_INTNUM T_DNUMBER TPLUS TOPNOT TOPNEG TOPAR TMUL TMINUS APPROXNUM
first(jtype) = T_LEFT
first(joined_table) = T_NAME TOPAR
first(int_list) = T_INTNUM
first(insert_statement) = T_INSERT
first(insert_mode) = T_SOFT T_REPLACING T_INTO
first(insert_atom_list) = T_STRING T_NULLX T_NAME T_INTNUM T_DNUMBER TPLUS TOPNOT TOPNEG TOPAR TMUL TMINUS APPROXNUM
first(insert_atom) = T_STRING T_NULLX T_NAME T_INTNUM T_DNUMBER TPLUS TOPNOT TOPNEG TOPAR TMUL TMINUS APPROXNUM
first(in_predicate) = T_STRING T_NULLX T_NAME T_INTNUM T_DNUMBER TPLUS TOPNOT TOPNEG TOPAR TMUL TMINUS APPROXNUM
first(function_call) = T_NAME
first(from_clause) = T_FROM
first(delete_statement_searched) = T_DELETE
first(comparison_predicate) = T_STRING T_NULLX T_NAME T_INTNUM T_DNUMBER TPLUS TOPNOT TOPNEG TOPAR TMUL TMINUS APPROXNUM
first(column_ref) = T_NAME TMUL
first(column_list) = T_NAME
first(column) = T_NAME
first(atom) = T_STRING T_NULLX T_INTNUM T_DNUMBER APPROXNUM
first(assignment_update_list) = T_NAME
first(assignment_update) = T_NAME
first(assignment_list) = T_NAME
first(assignment) = T_NAME
first(asc_desc_opt) = T_DESC T_ASC
first(asc_desc) = T_DESC T_ASC
first(as_expression) = T_STRING T_NULLX T_NAME T_INTNUM T_DNUMBER TPLUS TOPNOT TOPNEG TOPAR TMUL TMINUS APPROXNUM
first(all_distinct_opt) = T_DISTINCT T_ALL
first(all_distinct) = T_DISTINCT T_ALL
minimal(where_clause_opt) = (* 0 *)
minimal(where_clause) = (* 1 *) T_WHERE
minimal(values_or_query_spec) = (* 4 *) T_VALUES TOPAR T_STRING TCPAR
minimal(update_statement_searched) = (* 6 *) T_UPDATE T_NAME T_SET T_NAME T_COMPARISON T_STRING
minimal(update_statement_duplicate) = (* 4 *) T_UPDATE T_NAME T_COMPARISON T_STRING
minimal(toplevel) = (* 1 *) T_COMMIT
minimal(table_ref_nj) = (* 1 *) T_NAME
minimal(table_ref_list) = (* 1 *) T_NAME
minimal(table_ref) = (* 1 *) T_NAME
minimal(table_exp) = (* 2 *) T_FROM T_NAME
minimal(table) = (* 1 *) T_NAME
minimal(subquery) = (* 6 *) TOPAR T_SELECT T_STRING T_FROM T_NAME TCPAR
minimal(string_list) = (* 1 *) T_STRING
minimal(selection) = (* 1 *) T_STRING
minimal(select_statement) = (* 4 *) T_SELECT T_STRING T_FROM T_NAME
minimal(search_condition) = (* 0 *)
minimal(scalar_exp_predicate) = (* 1 *) T_STRING
minimal(scalar_exp_list_opt) = (* 0 *)
minimal(scalar_exp_list) = (* 1 *) T_STRING
minimal(scalar_exp) = (* 1 *) T_STRING
minimal(query_term) = (* 4 *) T_SELECT T_STRING T_FROM T_NAME
minimal(query_spec) = (* 4 *) T_SELECT T_STRING T_FROM T_NAME
minimal(query_exp) = (* 4 *) T_SELECT T_STRING T_FROM T_NAME
minimal(q_table_name) = (* 1 *) T_NAME
minimal(priv_opt_column_commalist) = (* 0 *)
minimal(predicate) = (* 1 *) T_STRING
minimal(outer_opt) = (* 0 *)
minimal(ordering_spec_list) = (* 1 *) T_INTNUM
minimal(ordering_spec) = (* 1 *) T_INTNUM
minimal(order_by_clause_opt) = (* 0 *)
minimal(order_by_clause) = (* 3 *) T_ORDER T_BY T_INTNUM
minimal(opt_escape) = (* 0 *)
minimal(on_duplicate_opt) = (* 0 *)
minimal(memcache_opt) = (* 0 *)
minimal(memcache) = (* 2 *) T_MEMCACHE_DIRTY T_STRING
minimal(main) = (* 2 *) T_COMMIT EOF
minimal(literal) = (* 1 *) T_STRING
minimal(limit_clause_opt) = (* 0 *)
minimal(limit_clause) = (* 2 *) T_LIMIT T_INTNUM
minimal(like_predicate) = (* 3 *) T_STRING T_LIKE T_STRING
minimal(jtype) = (* 1 *) T_LEFT
minimal(joined_table) = (* 5 *) T_NAME T_LEFT T_JOIN T_NAME T_ON
minimal(int_list) = (* 1 *) T_INTNUM
minimal(insert_statement) = (* 7 *) T_INSERT T_INTO T_NAME T_VALUES TOPAR T_STRING TCPAR
minimal(insert_mode) = (* 1 *) T_INTO
minimal(insert_atom_list) = (* 1 *) T_STRING
minimal(insert_atom) = (* 1 *) T_STRING
minimal(in_predicate) = (* 5 *) T_STRING T_IN TOPAR T_STRING TCPAR
minimal(function_call) = (* 3 *) T_NAME TOPAR TCPAR
minimal(from_clause) = (* 2 *) T_FROM T_NAME
minimal(delete_statement_searched) = (* 3 *) T_DELETE T_FROM T_NAME
minimal(comparison_predicate) = (* 3 *) T_STRING T_COMPARISON T_STRING
minimal(column_ref) = (* 1 *) T_NAME
minimal(column_list) = (* 1 *) T_NAME
minimal(column) = (* 1 *) T_NAME
minimal(atom) = (* 1 *) T_STRING
minimal(assignment_update_list) = (* 3 *) T_NAME T_COMPARISON T_STRING
minimal(assignment_update) = (* 3 *) T_NAME T_COMPARISON T_STRING
minimal(assignment_list) = (* 3 *) T_NAME T_COMPARISON T_STRING
minimal(assignment) = (* 3 *) T_NAME T_COMPARISON T_STRING
minimal(asc_desc_opt) = (* 0 *)
minimal(asc_desc) = (* 1 *) T_ASC
minimal(as_expression) = (* 3 *) T_STRING T_AS T_NAME
minimal(all_distinct_opt) = (* 0 *)
minimal(all_distinct) = (* 1 *) T_ALL
maximal(where_clause_opt) = infinity
maximal(where_clause) = infinity
maximal(values_or_query_spec) = infinity
maximal(update_statement_searched) = infinity
maximal(update_statement_duplicate) = infinity
maximal(toplevel) = infinity
maximal(table_ref_nj) = infinity
maximal(table_ref_list) = infinity
maximal(table_ref) = infinity
maximal(table_exp) = infinity
maximal(table) = 7
maximal(subquery) = infinity
maximal(string_list) = infinity
maximal(selection) = infinity
maximal(select_statement) = infinity
maximal(search_condition) = infinity
maximal(scalar_exp_predicate) = infinity
maximal(scalar_exp_list_opt) = infinity
maximal(scalar_exp_list) = infinity
maximal(scalar_exp) = infinity
maximal(query_term) = infinity
maximal(query_spec) = infinity
maximal(query_exp) = infinity
maximal(q_table_name) = 5
maximal(priv_opt_column_commalist) = infinity
maximal(predicate) = infinity
maximal(outer_opt) = 1
maximal(ordering_spec_list) = infinity
maximal(ordering_spec) = 8
maximal(order_by_clause_opt) = infinity
maximal(order_by_clause) = infinity
maximal(opt_escape) = 0
maximal(on_duplicate_opt) = infinity
maximal(memcache_opt) = infinity
maximal(memcache) = infinity
maximal(main) = infinity
maximal(literal) = 1
maximal(limit_clause_opt) = infinity
maximal(limit_clause) = infinity
maximal(like_predicate) = infinity
maximal(jtype) = 1
maximal(joined_table) = infinity
maximal(int_list) = infinity
maximal(insert_statement) = infinity
maximal(insert_mode) = 1
maximal(insert_atom_list) = infinity
maximal(insert_atom) = infinity
maximal(in_predicate) = infinity
maximal(function_call) = infinity
maximal(from_clause) = infinity
maximal(delete_statement_searched) = infinity
maximal(comparison_predicate) = infinity
maximal(column_ref) = 7
maximal(column_list) = infinity
maximal(column) = 1
maximal(atom) = 1
maximal(assignment_update_list) = infinity
maximal(assignment_update) = infinity
maximal(assignment_list) = infinity
maximal(assignment) = infinity
maximal(asc_desc_opt) = 1
maximal(asc_desc) = 1
maximal(as_expression) = infinity
maximal(all_distinct_opt) = 1
maximal(all_distinct) = 1
follow(where_clause_opt) = T_UNION T_ORDER T_ON T_MEMCACHE_DIRTY T_LIMIT TCPAR EOF
follow(where_clause) = T_UNION T_ORDER T_ON T_MEMCACHE_DIRTY T_LIMIT TCPAR EOF
follow(values_or_query_spec) = T_ON T_MEMCACHE_DIRTY EOF
follow(update_statement_searched) = EOF
follow(update_statement_duplicate) = T_MEMCACHE_DIRTY EOF
follow(toplevel) = EOF
follow(table_ref_nj) = T_ON
follow(table_ref_list) = T_WHERE T_UNION T_ORDER T_ON T_MEMCACHE_DIRTY T_LIMIT TCPAR TCOMMA EOF
follow(table_ref) = T_WHERE T_UNION T_ORDER T_ON T_MEMCACHE_DIRTY T_LIMIT T_LEFT TCPAR TCOMMA EOF
follow(table_exp) = T_UNION T_ON T_MEMCACHE_DIRTY TCPAR EOF
follow(table) = T_WHERE T_VALUES T_UNION T_SET T_SELECT T_ORDER T_ON T_MEMCACHE_DIRTY T_LIMIT T_LEFT TOPAR TCPAR TCOMMA EOF
follow(subquery) = T_WHERE T_UNION T_ORDER T_OR T_ON T_NAME T_MEMCACHE_DIRTY T_LIMIT T_LEFT T_AND TCPAR TCOMMA EOF
follow(string_list) = TCOMMA EOF
follow(selection) = T_FROM
follow(select_statement) = TCPAR EOF
follow(search_condition) = T_WHERE T_UNION T_ORDER T_OR T_ON T_MEMCACHE_DIRTY T_LIMIT T_LEFT T_AND TCPAR TCOMMA EOF
follow(scalar_exp_predicate) = T_WHERE T_UNION T_ORDER T_OR T_ON T_MEMCACHE_DIRTY T_LIMIT T_LEFT T_AND TCPAR TCOMMA EOF
follow(scalar_exp_list_opt) = TCPAR
follow(scalar_exp_list) = T_FROM TCPAR TCOMMA
follow(scalar_exp) = T_WHERE T_UNION T_ORDER T_OR T_ON T_NOT T_MEMCACHE_DIRTY T_LIMIT T_LIKE T_LEFT T_IN T_FROM T_COMPARISON T_AS T_AND TPLUS TOPOR TOPAND TMUL TMINUS TDIV TCPAR TCOMMA EOF
follow(query_term) = T_UNION TCPAR
follow(query_spec) = T_UNION T_ON T_MEMCACHE_DIRTY TCPAR EOF
follow(query_exp) = T_UNION TCPAR
follow(q_table_name) = T_WHERE T_VALUES T_UNION T_SET T_SELECT T_ORDER T_ON T_NAME T_MEMCACHE_DIRTY T_LIMIT T_LEFT T_AS TOPAR TCPAR TCOMMA EOF
follow(priv_opt_column_commalist) = T_VALUES T_SELECT
follow(predicate) = T_WHERE T_UNION T_ORDER T_OR T_ON T_MEMCACHE_DIRTY T_LIMIT T_LEFT T_AND TCPAR TCOMMA EOF
follow(outer_opt) = T_JOIN
follow(ordering_spec_list) = T_UNION T_ON T_MEMCACHE_DIRTY T_LIMIT TCPAR TCOMMA EOF
follow(ordering_spec) = T_UNION T_ON T_MEMCACHE_DIRTY T_LIMIT TCPAR TCOMMA EOF
follow(order_by_clause_opt) = T_UNION T_ON T_MEMCACHE_DIRTY T_LIMIT TCPAR EOF
follow(order_by_clause) = T_UNION T_ON T_MEMCACHE_DIRTY T_LIMIT TCPAR EOF
follow(opt_escape) = T_WHERE T_UNION T_ORDER T_OR T_ON T_MEMCACHE_DIRTY T_LIMIT T_LEFT T_AND TCPAR TCOMMA EOF
follow(on_duplicate_opt) = T_MEMCACHE_DIRTY EOF
follow(memcache_opt) = EOF
follow(memcache) = EOF
follow(main) = #
follow(literal) = T_WHERE T_UNION T_ORDER T_OR T_ON T_NOT T_MEMCACHE_DIRTY T_LIMIT T_LIKE T_LEFT T_IN T_FROM T_COMPARISON T_AS T_AND TPLUS TOPOR TOPAND TMUL TMINUS TDIV TCPAR TCOMMA EOF
follow(limit_clause_opt) = T_UNION T_ON T_MEMCACHE_DIRTY TCPAR EOF
follow(limit_clause) = T_UNION T_ON T_MEMCACHE_DIRTY TCPAR EOF
follow(like_predicate) = T_WHERE T_UNION T_ORDER T_OR T_ON T_MEMCACHE_DIRTY T_LIMIT T_LEFT T_AND TCPAR TCOMMA EOF
follow(jtype) = T_OUTER T_JOIN
follow(joined_table) = T_WHERE T_UNION T_ORDER T_ON T_MEMCACHE_DIRTY T_LIMIT T_LEFT TCPAR TCOMMA EOF
follow(int_list) = T_UNION T_ON T_MEMCACHE_DIRTY TCPAR TCOMMA EOF
follow(insert_statement) = EOF
follow(insert_mode) = T_NAME
follow(insert_atom_list) = TCPAR TCOMMA
follow(insert_atom) = TCPAR TCOMMA
follow(in_predicate) = T_WHERE T_UNION T_ORDER T_OR T_ON T_MEMCACHE_DIRTY T_LIMIT T_LEFT T_AND TCPAR TCOMMA EOF
follow(function_call) = T_WHERE T_UNION T_ORDER T_OR T_ON T_NOT T_MEMCACHE_DIRTY T_LIMIT T_LIKE T_LEFT T_IN T_FROM T_COMPARISON T_AS T_AND TPLUS TOPOR TOPAND TMUL TMINUS TDIV TCPAR TCOMMA EOF
follow(from_clause) = T_WHERE T_UNION T_ORDER T_ON T_MEMCACHE_DIRTY T_LIMIT TCPAR EOF
follow(delete_statement_searched) = EOF
follow(comparison_predicate) = T_WHERE T_UNION T_ORDER T_OR T_ON T_MEMCACHE_DIRTY T_LIMIT T_LEFT T_AND TCPAR TCOMMA EOF
follow(column_ref) = T_WHERE T_UNION T_ORDER T_OR T_ON T_NOT T_MEMCACHE_DIRTY T_LIMIT T_LIKE T_LEFT T_IN T_FROM T_DESC T_COMPARISON T_ASC T_AS T_AND TPLUS TOPOR TOPAND TMUL TMINUS TDIV TCPAR TCOMMA EOF
follow(column_list) = TCPAR TCOMMA
follow(column) = T_COMPARISON TCPAR TCOMMA
follow(atom) = T_WHERE T_UNION T_ORDER T_OR T_ON T_NOT T_MEMCACHE_DIRTY T_LIMIT T_LIKE T_LEFT T_IN T_FROM T_COMPARISON T_AS T_AND TPLUS TOPOR TOPAND TMUL TMINUS TDIV TCPAR TCOMMA EOF
follow(assignment_update_list) = T_MEMCACHE_DIRTY TCOMMA EOF
follow(assignment_update) = T_MEMCACHE_DIRTY TCOMMA EOF
follow(assignment_list) = T_WHERE T_MEMCACHE_DIRTY TCOMMA EOF
follow(assignment) = T_WHERE T_MEMCACHE_DIRTY TCOMMA EOF
follow(asc_desc_opt) = T_UNION T_ON T_MEMCACHE_DIRTY T_LIMIT TCPAR TCOMMA EOF
follow(asc_desc) = T_UNION T_ON T_MEMCACHE_DIRTY T_LIMIT TCPAR TCOMMA EOF
follow(as_expression) = T_WHERE T_UNION T_ORDER T_OR T_ON T_NOT T_MEMCACHE_DIRTY T_LIMIT T_LIKE T_LEFT T_IN T_FROM T_COMPARISON T_AS T_AND TPLUS TOPOR TOPAND TMUL TMINUS TDIV TCPAR TCOMMA EOF
follow(all_distinct_opt) = T_STRING T_NULLX T_NAME T_INTNUM T_DNUMBER TPLUS TOPNOT TOPNEG TOPAR TMUL TMINUS APPROXNUM
follow(all_distinct) = T_STRING T_NULLX T_NAME T_INTNUM T_DNUMBER TPLUS TOPNOT TOPNEG TOPAR TMUL TMINUS APPROXNUM
Built an LR(0) automaton with 275 states.
The grammar is not SLR(1) -- 18 states have a conflict.
The construction mode is pager.
Built an LR(1) automaton with 275 states.
76 shift/reduce conflicts were silently solved.
File "pfff_sql.mly", line 90, characters 0-9:
Warning: the precedence level assigned to SHIFTHERE is never useful.
Warning: one state has reduce/reduce conflicts.
Warning: one reduce/reduce conflict was arbitrarily resolved.
109 out of 275 states have a default reduction.
88 out of 275 states are represented.
0 out of 125 symbols keep track of their start position.
0 out of 125 symbols keep track of their end position.
87 out of 152 productions exploit shiftreduce optimization.
0 out of 275 states can peek at an error.
772 functions before inlining, 116 functions after inlining.
