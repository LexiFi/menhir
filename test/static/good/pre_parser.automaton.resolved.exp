State 0:
## Known stack suffix:
##
## LR(1) items:
translation_unit_file' -> . translation_unit_file [ # ]
## Transitions:
-- On VOLATILE shift to state 1
-- On VOID shift to state 2
-- On UNSIGNED shift to state 3
-- On UNION shift to state 4
-- On UNDERSCORE_BOOL shift to state 5
-- On TYPEDEF shift to state 6
-- On STRUCT shift to state 8
-- On STATIC shift to state 9
-- On SIGNED shift to state 10
-- On SHORT shift to state 11
-- On SEMICOLON shift to state 387
-- On RESTRICT shift to state 12
-- On REGISTER shift to state 13
-- On PRE_NAME shift to state 14
-- On PRAGMA shift to state 388
-- On PACKED shift to state 16
-- On LONG shift to state 29
-- On INT shift to state 30
-- On INLINE shift to state 192
-- On FLOAT shift to state 33
-- On EXTERN shift to state 193
-- On EOF shift to state 389
-- On ENUM shift to state 34
-- On DOUBLE shift to state 54
-- On CONST shift to state 148
-- On CHAR shift to state 55
-- On AUTO shift to state 194
-- On ATTRIBUTE shift to state 35
-- On ALIGNAS shift to state 149
-- On typedef_name shift to state 390
-- On type_specifier_no_typedef_name shift to state 394
-- On type_qualifier_noattr shift to state 209
-- On translation_unit_file shift to state 398
-- On translation_unit shift to state 399
-- On struct_or_union_specifier shift to state 155
-- On struct_or_union shift to state 156
-- On storage_class_specifier_no_typedef shift to state 210
-- On rlist(declaration_specifier_no_type) shift to state 402
-- On function_specifier shift to state 212
-- On function_definition1 shift to state 417
-- On function_definition shift to state 567
-- On external_declaration shift to state 596
-- On enum_specifier shift to state 169
-- On declaration_specifiers_typedef shift to state 569
-- On declaration_specifiers(declaration(external_declaration)) shift to state 572
-- On declaration(external_declaration) shift to state 595
-- On attribute_specifier shift to state 214
## Reductions:

State 1:
## Known stack suffix:
## VOLATILE
## LR(1) items:
type_qualifier_noattr -> VOLATILE . [ VOLATILE VOID UNSIGNED UNION UNDERSCORE_BOOL TYPEDEF TILDE STRUCT STRING_LITERAL STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACK PRE_NAME PLUS PACKED MINUS LPAREN LONG LBRACK INT INLINE INC FLOAT EXTERN ENUM DOUBLE DEC CONSTANT CONST COMMA COLON CHAR BUILTIN_VA_ARG BANG AUTO ATTRIBUTE AND ALIGNOF ALIGNAS ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production type_qualifier_noattr -> VOLATILE

State 2:
## Known stack suffix:
## VOID
## LR(1) items:
type_specifier_no_typedef_name -> VOID . [ VOLATILE VOID UNSIGNED UNION UNDERSCORE_BOOL TYPEDEF STRUCT STATIC STAR SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER PRE_NAME PACKED LPAREN LONG LBRACK INT INLINE FLOAT EXTERN ENUM DOUBLE CONST COMMA COLON CHAR AUTO ATTRIBUTE ALIGNAS ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production type_specifier_no_typedef_name -> VOID

State 3:
## Known stack suffix:
## UNSIGNED
## LR(1) items:
type_specifier_no_typedef_name -> UNSIGNED . [ VOLATILE VOID UNSIGNED UNION UNDERSCORE_BOOL TYPEDEF STRUCT STATIC STAR SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER PRE_NAME PACKED LPAREN LONG LBRACK INT INLINE FLOAT EXTERN ENUM DOUBLE CONST COMMA COLON CHAR AUTO ATTRIBUTE ALIGNAS ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production type_specifier_no_typedef_name -> UNSIGNED

State 4:
## Known stack suffix:
## UNION
## LR(1) items:
struct_or_union -> UNION . [ PRE_NAME PACKED LBRACE ATTRIBUTE ALIGNAS ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production struct_or_union -> UNION

State 5:
## Known stack suffix:
## UNDERSCORE_BOOL
## LR(1) items:
type_specifier_no_typedef_name -> UNDERSCORE_BOOL . [ VOLATILE VOID UNSIGNED UNION UNDERSCORE_BOOL TYPEDEF STRUCT STATIC STAR SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER PRE_NAME PACKED LPAREN LONG LBRACK INT INLINE FLOAT EXTERN ENUM DOUBLE CONST COMMA COLON CHAR AUTO ATTRIBUTE ALIGNAS ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production type_specifier_no_typedef_name -> UNDERSCORE_BOOL

State 6:
## Known stack suffix:
## TYPEDEF
## LR(1) items:
declaration_specifiers_typedef -> TYPEDEF . list(declaration_specifier_no_type) typedef_name list(declaration_specifier_no_type) [ STAR SEMICOLON PRE_NAME LPAREN ]
declaration_specifiers_typedef -> TYPEDEF . list(declaration_specifier_no_type) type_specifier_no_typedef_name list(declaration_specifier_no_typedef_name) [ STAR SEMICOLON PRE_NAME LPAREN ]
## Transitions:
-- On list(declaration_specifier_no_type) shift to state 7
## Default reduction:
-- After reading the next token, reduce production list(declaration_specifier_no_type) ->

State 7:
## Known stack suffix:
## TYPEDEF list(declaration_specifier_no_type)
## LR(1) items:
declaration_specifiers_typedef -> TYPEDEF list(declaration_specifier_no_type) . typedef_name list(declaration_specifier_no_type) [ STAR SEMICOLON PRE_NAME LPAREN ]
declaration_specifiers_typedef -> TYPEDEF list(declaration_specifier_no_type) . type_specifier_no_typedef_name list(declaration_specifier_no_typedef_name) [ STAR SEMICOLON PRE_NAME LPAREN ]
list(declaration_specifier_no_type) -> list(declaration_specifier_no_type) . storage_class_specifier_no_typedef [ VOLATILE VOID UNSIGNED UNION UNDERSCORE_BOOL STRUCT STATIC SIGNED SHORT RESTRICT REGISTER PRE_NAME PACKED LONG INT INLINE FLOAT EXTERN ENUM DOUBLE CONST CHAR AUTO ATTRIBUTE ALIGNAS ]
list(declaration_specifier_no_type) -> list(declaration_specifier_no_type) . type_qualifier_noattr [ VOLATILE VOID UNSIGNED UNION UNDERSCORE_BOOL STRUCT STATIC SIGNED SHORT RESTRICT REGISTER PRE_NAME PACKED LONG INT INLINE FLOAT EXTERN ENUM DOUBLE CONST CHAR AUTO ATTRIBUTE ALIGNAS ]
list(declaration_specifier_no_type) -> list(declaration_specifier_no_type) . function_specifier [ VOLATILE VOID UNSIGNED UNION UNDERSCORE_BOOL STRUCT STATIC SIGNED SHORT RESTRICT REGISTER PRE_NAME PACKED LONG INT INLINE FLOAT EXTERN ENUM DOUBLE CONST CHAR AUTO ATTRIBUTE ALIGNAS ]
list(declaration_specifier_no_type) -> list(declaration_specifier_no_type) . attribute_specifier [ VOLATILE VOID UNSIGNED UNION UNDERSCORE_BOOL STRUCT STATIC SIGNED SHORT RESTRICT REGISTER PRE_NAME PACKED LONG INT INLINE FLOAT EXTERN ENUM DOUBLE CONST CHAR AUTO ATTRIBUTE ALIGNAS ]
## Transitions:
-- On VOLATILE shift to state 1
-- On VOID shift to state 2
-- On UNSIGNED shift to state 3
-- On UNION shift to state 4
-- On UNDERSCORE_BOOL shift to state 5
-- On STRUCT shift to state 8
-- On STATIC shift to state 9
-- On SIGNED shift to state 10
-- On SHORT shift to state 11
-- On RESTRICT shift to state 12
-- On REGISTER shift to state 13
-- On PRE_NAME shift to state 14
-- On PACKED shift to state 16
-- On LONG shift to state 29
-- On INT shift to state 30
-- On INLINE shift to state 192
-- On FLOAT shift to state 33
-- On EXTERN shift to state 193
-- On ENUM shift to state 34
-- On DOUBLE shift to state 54
-- On CONST shift to state 148
-- On CHAR shift to state 55
-- On AUTO shift to state 194
-- On ATTRIBUTE shift to state 35
-- On ALIGNAS shift to state 149
-- On typedef_name shift to state 383
-- On type_specifier_no_typedef_name shift to state 385
-- On type_qualifier_noattr shift to state 197
-- On struct_or_union_specifier shift to state 155
-- On struct_or_union shift to state 156
-- On storage_class_specifier_no_typedef shift to state 198
-- On function_specifier shift to state 199
-- On enum_specifier shift to state 169
-- On attribute_specifier shift to state 200
## Reductions:

State 8:
## Known stack suffix:
## STRUCT
## LR(1) items:
struct_or_union -> STRUCT . [ PRE_NAME PACKED LBRACE ATTRIBUTE ALIGNAS ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production struct_or_union -> STRUCT

State 9:
## Known stack suffix:
## STATIC
## LR(1) items:
storage_class_specifier_no_typedef -> STATIC . [ VOLATILE VOID UNSIGNED UNION UNDERSCORE_BOOL TYPEDEF STRUCT STATIC STAR SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER PRE_NAME PACKED LPAREN LONG LBRACK INT INLINE FLOAT EXTERN ENUM DOUBLE CONST COMMA CHAR AUTO ATTRIBUTE ALIGNAS ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production storage_class_specifier_no_typedef -> STATIC

State 10:
## Known stack suffix:
## SIGNED
## LR(1) items:
type_specifier_no_typedef_name -> SIGNED . [ VOLATILE VOID UNSIGNED UNION UNDERSCORE_BOOL TYPEDEF STRUCT STATIC STAR SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER PRE_NAME PACKED LPAREN LONG LBRACK INT INLINE FLOAT EXTERN ENUM DOUBLE CONST COMMA COLON CHAR AUTO ATTRIBUTE ALIGNAS ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production type_specifier_no_typedef_name -> SIGNED

State 11:
## Known stack suffix:
## SHORT
## LR(1) items:
type_specifier_no_typedef_name -> SHORT . [ VOLATILE VOID UNSIGNED UNION UNDERSCORE_BOOL TYPEDEF STRUCT STATIC STAR SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER PRE_NAME PACKED LPAREN LONG LBRACK INT INLINE FLOAT EXTERN ENUM DOUBLE CONST COMMA COLON CHAR AUTO ATTRIBUTE ALIGNAS ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production type_specifier_no_typedef_name -> SHORT

State 12:
## Known stack suffix:
## RESTRICT
## LR(1) items:
type_qualifier_noattr -> RESTRICT . [ VOLATILE VOID UNSIGNED UNION UNDERSCORE_BOOL TYPEDEF TILDE STRUCT STRING_LITERAL STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACK PRE_NAME PLUS PACKED MINUS LPAREN LONG LBRACK INT INLINE INC FLOAT EXTERN ENUM DOUBLE DEC CONSTANT CONST COMMA COLON CHAR BUILTIN_VA_ARG BANG AUTO ATTRIBUTE AND ALIGNOF ALIGNAS ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production type_qualifier_noattr -> RESTRICT

State 13:
## Known stack suffix:
## REGISTER
## LR(1) items:
storage_class_specifier_no_typedef -> REGISTER . [ VOLATILE VOID UNSIGNED UNION UNDERSCORE_BOOL TYPEDEF STRUCT STATIC STAR SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER PRE_NAME PACKED LPAREN LONG LBRACK INT INLINE FLOAT EXTERN ENUM DOUBLE CONST COMMA CHAR AUTO ATTRIBUTE ALIGNAS ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production storage_class_specifier_no_typedef -> REGISTER

State 14:
## Known stack suffix:
## PRE_NAME
## LR(1) items:
typedef_name -> PRE_NAME . TYPEDEF_NAME [ VOLATILE TYPEDEF STATIC STAR SEMICOLON RPAREN RESTRICT REGISTER PRE_NAME PACKED LPAREN LBRACK INLINE EXTERN CONST COMMA COLON AUTO ATTRIBUTE ALIGNAS ]
## Transitions:
-- On TYPEDEF_NAME shift to state 15
## Reductions:

State 15:
## Known stack suffix:
## PRE_NAME TYPEDEF_NAME
## LR(1) items:
typedef_name -> PRE_NAME TYPEDEF_NAME . [ XOR_ASSIGN VOLATILE VOID UNSIGNED UNION UNDERSCORE_BOOL TYPEDEF SUB_ASSIGN STRUCT STATIC STAR SLASH SIGNED SHORT SEMICOLON RPAREN RIGHT_ASSIGN RIGHT RESTRICT REGISTER RBRACK RBRACE QUESTION PTR PRE_NAME PLUS PERCENT PACKED OR_ASSIGN NEQ MUL_ASSIGN MOD_ASSIGN MINUS LT LPAREN LONG LEQ LEFT_ASSIGN LEFT LBRACK LBRACE INT INLINE INC HAT GT GEQ FLOAT EXTERN EQEQ EQ ENUM DOUBLE DOT DIV_ASSIGN DEC CONST COMMA COLON CHAR BARBAR BAR AUTO ATTRIBUTE AND_ASSIGN ANDAND AND ALIGNAS ADD_ASSIGN ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production typedef_name -> PRE_NAME TYPEDEF_NAME

State 16:
## Known stack suffix:
## PACKED
## LR(1) items:
attribute_specifier -> PACKED . LPAREN argument_expression_list RPAREN [ VOLATILE VOID UNSIGNED UNION UNDERSCORE_BOOL TYPEDEF TILDE STRUCT STRING_LITERAL STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACK PRE_NAME PLUS PACKED MINUS LPAREN LONG LBRACK LBRACE INT INLINE INC FLOAT EXTERN EQ ENUM DOUBLE DEC CONSTANT CONST COMMA COLON CHAR BUILTIN_VA_ARG BANG AUTO ATTRIBUTE AND ALIGNOF ALIGNAS ]
## Transitions:
-- On LPAREN shift to state 17
## Reductions:

State 17:
## Known stack suffix:
## PACKED LPAREN
## LR(1) items:
attribute_specifier -> PACKED LPAREN . argument_expression_list RPAREN [ VOLATILE VOID UNSIGNED UNION UNDERSCORE_BOOL TYPEDEF TILDE STRUCT STRING_LITERAL STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACK PRE_NAME PLUS PACKED MINUS LPAREN LONG LBRACK LBRACE INT INLINE INC FLOAT EXTERN EQ ENUM DOUBLE DEC CONSTANT CONST COMMA COLON CHAR BUILTIN_VA_ARG BANG AUTO ATTRIBUTE AND ALIGNOF ALIGNAS ]
## Transitions:
-- On TILDE shift to state 18
-- On STRING_LITERAL shift to state 19
-- On STAR shift to state 20
-- On SIZEOF shift to state 21
-- On PRE_NAME shift to state 22
-- On PLUS shift to state 24
-- On MINUS shift to state 25
-- On LPAREN shift to state 28
-- On INC shift to state 31
-- On DEC shift to state 46
-- On CONSTANT shift to state 47
-- On BUILTIN_VA_ARG shift to state 48
-- On BANG shift to state 50
-- On AND shift to state 51
-- On ALIGNOF shift to state 52
-- On unary_operator shift to state 56
-- On unary_expression shift to state 65
-- On string_literals_list shift to state 58
-- On shift_expression shift to state 78
-- On relational_expression shift to state 94
-- On primary_expression shift to state 60
-- On postfix_expression shift to state 61
-- On multiplicative_expression shift to state 82
-- On logical_or_expression shift to state 102
-- On logical_and_expression shift to state 104
-- On inclusive_or_expression shift to state 120
-- On exclusive_or_expression shift to state 119
-- On equality_expression shift to state 110
-- On conditional_expression shift to state 123
-- On cast_expression shift to state 88
-- On assignment_expression shift to state 133
-- On argument_expression_list shift to state 381
-- On and_expression shift to state 118
-- On additive_expression shift to state 101
## Reductions:

State 18:
## Known stack suffix:
## TILDE
## LR(1) items:
unary_operator -> TILDE . [ TILDE STRING_LITERAL STAR SIZEOF PRE_NAME PLUS MINUS LPAREN INC DEC CONSTANT BUILTIN_VA_ARG BANG AND ALIGNOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production unary_operator -> TILDE

State 19:
## Known stack suffix:
## STRING_LITERAL
## LR(1) items:
string_literals_list -> STRING_LITERAL . [ XOR_ASSIGN SUB_ASSIGN STRING_LITERAL STAR SLASH SEMICOLON RPAREN RIGHT_ASSIGN RIGHT RBRACK RBRACE QUESTION PTR PLUS PERCENT OR_ASSIGN NEQ MUL_ASSIGN MOD_ASSIGN MINUS LT LPAREN LEQ LEFT_ASSIGN LEFT LBRACK INC HAT GT GEQ EQEQ EQ DOT DIV_ASSIGN DEC COMMA COLON BARBAR BAR AND_ASSIGN ANDAND AND ADD_ASSIGN ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production string_literals_list -> STRING_LITERAL

State 20:
## Known stack suffix:
## STAR
## LR(1) items:
unary_operator -> STAR . [ TILDE STRING_LITERAL STAR SIZEOF PRE_NAME PLUS MINUS LPAREN INC DEC CONSTANT BUILTIN_VA_ARG BANG AND ALIGNOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production unary_operator -> STAR

State 21:
## Known stack suffix:
## SIZEOF
## LR(1) items:
unary_expression -> SIZEOF . unary_expression [ XOR_ASSIGN SUB_ASSIGN STAR SLASH SEMICOLON RPAREN RIGHT_ASSIGN RIGHT RBRACK RBRACE QUESTION PLUS PERCENT OR_ASSIGN NEQ MUL_ASSIGN MOD_ASSIGN MINUS LT LEQ LEFT_ASSIGN LEFT HAT GT GEQ EQEQ EQ DIV_ASSIGN COMMA COLON BARBAR BAR AND_ASSIGN ANDAND AND ADD_ASSIGN ]
unary_expression -> SIZEOF . LPAREN type_name RPAREN [ XOR_ASSIGN SUB_ASSIGN STAR SLASH SEMICOLON RPAREN RIGHT_ASSIGN RIGHT RBRACK RBRACE QUESTION PLUS PERCENT OR_ASSIGN NEQ MUL_ASSIGN MOD_ASSIGN MINUS LT LEQ LEFT_ASSIGN LEFT HAT GT GEQ EQEQ EQ DIV_ASSIGN COMMA COLON BARBAR BAR AND_ASSIGN ANDAND AND ADD_ASSIGN ]
## Transitions:
-- On TILDE shift to state 18
-- On STRING_LITERAL shift to state 19
-- On STAR shift to state 20
-- On SIZEOF shift to state 21
-- On PRE_NAME shift to state 22
-- On PLUS shift to state 24
-- On MINUS shift to state 25
-- On LPAREN shift to state 26
-- On INC shift to state 31
-- On DEC shift to state 46
-- On CONSTANT shift to state 47
-- On BUILTIN_VA_ARG shift to state 48
-- On BANG shift to state 50
-- On AND shift to state 51
-- On ALIGNOF shift to state 52
-- On unary_operator shift to state 56
-- On unary_expression shift to state 380
-- On string_literals_list shift to state 58
-- On primary_expression shift to state 60
-- On postfix_expression shift to state 61
## Reductions:

State 22:
## Known stack suffix:
## PRE_NAME
## LR(1) items:
primary_expression -> PRE_NAME . VAR_NAME [ XOR_ASSIGN SUB_ASSIGN STAR SLASH SEMICOLON RPAREN RIGHT_ASSIGN RIGHT RBRACK RBRACE QUESTION PTR PLUS PERCENT OR_ASSIGN NEQ MUL_ASSIGN MOD_ASSIGN MINUS LT LPAREN LEQ LEFT_ASSIGN LEFT LBRACK INC HAT GT GEQ EQEQ EQ DOT DIV_ASSIGN DEC COMMA COLON BARBAR BAR AND_ASSIGN ANDAND AND ADD_ASSIGN ]
## Transitions:
-- On VAR_NAME shift to state 23
## Reductions:

State 23:
## Known stack suffix:
## PRE_NAME VAR_NAME
## LR(1) items:
primary_expression -> PRE_NAME VAR_NAME . [ XOR_ASSIGN SUB_ASSIGN STAR SLASH SEMICOLON RPAREN RIGHT_ASSIGN RIGHT RBRACK RBRACE QUESTION PTR PLUS PERCENT OR_ASSIGN NEQ MUL_ASSIGN MOD_ASSIGN MINUS LT LPAREN LEQ LEFT_ASSIGN LEFT LBRACK INC HAT GT GEQ EQEQ EQ DOT DIV_ASSIGN DEC COMMA COLON BARBAR BAR AND_ASSIGN ANDAND AND ADD_ASSIGN ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production primary_expression -> PRE_NAME VAR_NAME

State 24:
## Known stack suffix:
## PLUS
## LR(1) items:
unary_operator -> PLUS . [ TILDE STRING_LITERAL STAR SIZEOF PRE_NAME PLUS MINUS LPAREN INC DEC CONSTANT BUILTIN_VA_ARG BANG AND ALIGNOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production unary_operator -> PLUS

State 25:
## Known stack suffix:
## MINUS
## LR(1) items:
unary_operator -> MINUS . [ TILDE STRING_LITERAL STAR SIZEOF PRE_NAME PLUS MINUS LPAREN INC DEC CONSTANT BUILTIN_VA_ARG BANG AND ALIGNOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production unary_operator -> MINUS

State 26:
## Known stack suffix:
## SIZEOF LPAREN
## LR(1) items:
postfix_expression -> LPAREN . type_name RPAREN LBRACE initializer_list option(COMMA) RBRACE [ XOR_ASSIGN SUB_ASSIGN STAR SLASH SEMICOLON RPAREN RIGHT_ASSIGN RIGHT RBRACK RBRACE QUESTION PTR PLUS PERCENT OR_ASSIGN NEQ MUL_ASSIGN MOD_ASSIGN MINUS LT LPAREN LEQ LEFT_ASSIGN LEFT LBRACK INC HAT GT GEQ EQEQ EQ DOT DIV_ASSIGN DEC COMMA COLON BARBAR BAR AND_ASSIGN ANDAND AND ADD_ASSIGN ]
primary_expression -> LPAREN . expression RPAREN [ XOR_ASSIGN SUB_ASSIGN STAR SLASH SEMICOLON RPAREN RIGHT_ASSIGN RIGHT RBRACK RBRACE QUESTION PTR PLUS PERCENT OR_ASSIGN NEQ MUL_ASSIGN MOD_ASSIGN MINUS LT LPAREN LEQ LEFT_ASSIGN LEFT LBRACK INC HAT GT GEQ EQEQ EQ DOT DIV_ASSIGN DEC COMMA COLON BARBAR BAR AND_ASSIGN ANDAND AND ADD_ASSIGN ]
unary_expression -> SIZEOF LPAREN . type_name RPAREN [ XOR_ASSIGN SUB_ASSIGN STAR SLASH SEMICOLON RPAREN RIGHT_ASSIGN RIGHT RBRACK RBRACE QUESTION PLUS PERCENT OR_ASSIGN NEQ MUL_ASSIGN MOD_ASSIGN MINUS LT LEQ LEFT_ASSIGN LEFT HAT GT GEQ EQEQ EQ DIV_ASSIGN COMMA COLON BARBAR BAR AND_ASSIGN ANDAND AND ADD_ASSIGN ]
## Transitions:
-- On VOID shift to state 2
-- On UNSIGNED shift to state 3
-- On UNION shift to state 4
-- On UNDERSCORE_BOOL shift to state 5
-- On TILDE shift to state 18
-- On STRUCT shift to state 8
-- On STRING_LITERAL shift to state 19
-- On STAR shift to state 20
-- On SIZEOF shift to state 21
-- On SIGNED shift to state 10
-- On SHORT shift to state 11
-- On PRE_NAME shift to state 27
-- On PLUS shift to state 24
-- On MINUS shift to state 25
-- On LPAREN shift to state 28
-- On LONG shift to state 29
-- On INT shift to state 30
-- On INC shift to state 31
-- On FLOAT shift to state 33
-- On ENUM shift to state 34
-- On DOUBLE shift to state 54
-- On DEC shift to state 46
-- On CONSTANT shift to state 47
-- On CHAR shift to state 55
-- On BUILTIN_VA_ARG shift to state 48
-- On BANG shift to state 50
-- On AND shift to state 51
-- On ALIGNOF shift to state 52
-- On unary_operator shift to state 56
-- On unary_expression shift to state 65
-- On typedef_name shift to state 145
-- On type_specifier_no_typedef_name shift to state 151
-- On type_qualifier_list shift to state 294
-- On type_name shift to state 378
-- On struct_or_union_specifier shift to state 155
-- On struct_or_union shift to state 156
-- On string_literals_list shift to state 58
-- On specifier_qualifier_list(type_name) shift to state 301
-- On shift_expression shift to state 78
-- On relational_expression shift to state 94
-- On primary_expression shift to state 60
-- On postfix_expression shift to state 61
-- On option(type_qualifier_list) shift to state 292
-- On multiplicative_expression shift to state 82
-- On logical_or_expression shift to state 102
-- On logical_and_expression shift to state 104
-- On inclusive_or_expression shift to state 120
-- On expression shift to state 337
-- On exclusive_or_expression shift to state 119
-- On equality_expression shift to state 110
-- On enum_specifier shift to state 169
-- On conditional_expression shift to state 123
-- On cast_expression shift to state 88
-- On assignment_expression shift to state 127
-- On and_expression shift to state 118
-- On additive_expression shift to state 101
## Reductions:
-- On VOLATILE reduce production option(type_qualifier_list) ->
-- On RESTRICT reduce production option(type_qualifier_list) ->
-- On PACKED reduce production option(type_qualifier_list) ->
-- On CONST reduce production option(type_qualifier_list) ->
-- On ATTRIBUTE reduce production option(type_qualifier_list) ->
-- On ALIGNAS reduce production option(type_qualifier_list) ->

State 27:
## Known stack suffix:
## PRE_NAME
## LR(1) items:
primary_expression -> PRE_NAME . VAR_NAME [ XOR_ASSIGN SUB_ASSIGN STAR SLASH SEMICOLON RPAREN RIGHT_ASSIGN RIGHT QUESTION PTR PLUS PERCENT OR_ASSIGN NEQ MUL_ASSIGN MOD_ASSIGN MINUS LT LPAREN LEQ LEFT_ASSIGN LEFT LBRACK INC HAT GT GEQ EQEQ EQ DOT DIV_ASSIGN DEC COMMA BARBAR BAR AND_ASSIGN ANDAND AND ADD_ASSIGN ]
typedef_name -> PRE_NAME . TYPEDEF_NAME [ VOLATILE TYPEDEF STATIC STAR SEMICOLON RPAREN RESTRICT REGISTER PRE_NAME PACKED LPAREN LBRACK INLINE EXTERN CONST COMMA AUTO ATTRIBUTE ALIGNAS ]
## Transitions:
-- On VAR_NAME shift to state 23
-- On TYPEDEF_NAME shift to state 15
## Reductions:

State 28:
## Known stack suffix:
## LPAREN
## LR(1) items:
cast_expression -> LPAREN . type_name RPAREN cast_expression [ XOR_ASSIGN SUB_ASSIGN STAR SLASH SEMICOLON RPAREN RIGHT_ASSIGN RIGHT RBRACK RBRACE QUESTION PLUS PERCENT OR_ASSIGN NEQ MUL_ASSIGN MOD_ASSIGN MINUS LT LEQ LEFT_ASSIGN LEFT HAT GT GEQ EQEQ EQ DIV_ASSIGN COMMA COLON BARBAR BAR AND_ASSIGN ANDAND AND ADD_ASSIGN ]
postfix_expression -> LPAREN . type_name RPAREN LBRACE initializer_list option(COMMA) RBRACE [ XOR_ASSIGN SUB_ASSIGN STAR SLASH SEMICOLON RPAREN RIGHT_ASSIGN RIGHT RBRACK RBRACE QUESTION PTR PLUS PERCENT OR_ASSIGN NEQ MUL_ASSIGN MOD_ASSIGN MINUS LT LPAREN LEQ LEFT_ASSIGN LEFT LBRACK INC HAT GT GEQ EQEQ EQ DOT DIV_ASSIGN DEC COMMA COLON BARBAR BAR AND_ASSIGN ANDAND AND ADD_ASSIGN ]
primary_expression -> LPAREN . expression RPAREN [ XOR_ASSIGN SUB_ASSIGN STAR SLASH SEMICOLON RPAREN RIGHT_ASSIGN RIGHT RBRACK RBRACE QUESTION PTR PLUS PERCENT OR_ASSIGN NEQ MUL_ASSIGN MOD_ASSIGN MINUS LT LPAREN LEQ LEFT_ASSIGN LEFT LBRACK INC HAT GT GEQ EQEQ EQ DOT DIV_ASSIGN DEC COMMA COLON BARBAR BAR AND_ASSIGN ANDAND AND ADD_ASSIGN ]
## Transitions:
-- On VOID shift to state 2
-- On UNSIGNED shift to state 3
-- On UNION shift to state 4
-- On UNDERSCORE_BOOL shift to state 5
-- On TILDE shift to state 18
-- On STRUCT shift to state 8
-- On STRING_LITERAL shift to state 19
-- On STAR shift to state 20
-- On SIZEOF shift to state 21
-- On SIGNED shift to state 10
-- On SHORT shift to state 11
-- On PRE_NAME shift to state 27
-- On PLUS shift to state 24
-- On MINUS shift to state 25
-- On LPAREN shift to state 28
-- On LONG shift to state 29
-- On INT shift to state 30
-- On INC shift to state 31
-- On FLOAT shift to state 33
-- On ENUM shift to state 34
-- On DOUBLE shift to state 54
-- On DEC shift to state 46
-- On CONSTANT shift to state 47
-- On CHAR shift to state 55
-- On BUILTIN_VA_ARG shift to state 48
-- On BANG shift to state 50
-- On AND shift to state 51
-- On ALIGNOF shift to state 52
-- On unary_operator shift to state 56
-- On unary_expression shift to state 65
-- On typedef_name shift to state 145
-- On type_specifier_no_typedef_name shift to state 151
-- On type_qualifier_list shift to state 294
-- On type_name shift to state 375
-- On struct_or_union_specifier shift to state 155
-- On struct_or_union shift to state 156
-- On string_literals_list shift to state 58
-- On specifier_qualifier_list(type_name) shift to state 301
-- On shift_expression shift to state 78
-- On relational_expression shift to state 94
-- On primary_expression shift to state 60
-- On postfix_expression shift to state 61
-- On option(type_qualifier_list) shift to state 292
-- On multiplicative_expression shift to state 82
-- On logical_or_expression shift to state 102
-- On logical_and_expression shift to state 104
-- On inclusive_or_expression shift to state 120
-- On expression shift to state 337
-- On exclusive_or_expression shift to state 119
-- On equality_expression shift to state 110
-- On enum_specifier shift to state 169
-- On conditional_expression shift to state 123
-- On cast_expression shift to state 88
-- On assignment_expression shift to state 127
-- On and_expression shift to state 118
-- On additive_expression shift to state 101
## Reductions:
-- On VOLATILE reduce production option(type_qualifier_list) ->
-- On RESTRICT reduce production option(type_qualifier_list) ->
-- On PACKED reduce production option(type_qualifier_list) ->
-- On CONST reduce production option(type_qualifier_list) ->
-- On ATTRIBUTE reduce production option(type_qualifier_list) ->
-- On ALIGNAS reduce production option(type_qualifier_list) ->

State 29:
## Known stack suffix:
## LONG
## LR(1) items:
type_specifier_no_typedef_name -> LONG . [ VOLATILE VOID UNSIGNED UNION UNDERSCORE_BOOL TYPEDEF STRUCT STATIC STAR SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER PRE_NAME PACKED LPAREN LONG LBRACK INT INLINE FLOAT EXTERN ENUM DOUBLE CONST COMMA COLON CHAR AUTO ATTRIBUTE ALIGNAS ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production type_specifier_no_typedef_name -> LONG

State 30:
## Known stack suffix:
## INT
## LR(1) items:
type_specifier_no_typedef_name -> INT . [ VOLATILE VOID UNSIGNED UNION UNDERSCORE_BOOL TYPEDEF STRUCT STATIC STAR SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER PRE_NAME PACKED LPAREN LONG LBRACK INT INLINE FLOAT EXTERN ENUM DOUBLE CONST COMMA COLON CHAR AUTO ATTRIBUTE ALIGNAS ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production type_specifier_no_typedef_name -> INT

State 31:
## Known stack suffix:
## INC
## LR(1) items:
unary_expression -> INC . unary_expression [ XOR_ASSIGN SUB_ASSIGN STAR SLASH SEMICOLON RPAREN RIGHT_ASSIGN RIGHT RBRACK RBRACE QUESTION PLUS PERCENT OR_ASSIGN NEQ MUL_ASSIGN MOD_ASSIGN MINUS LT LEQ LEFT_ASSIGN LEFT HAT GT GEQ EQEQ EQ DIV_ASSIGN COMMA COLON BARBAR BAR AND_ASSIGN ANDAND AND ADD_ASSIGN ]
## Transitions:
-- On TILDE shift to state 18
-- On STRING_LITERAL shift to state 19
-- On STAR shift to state 20
-- On SIZEOF shift to state 21
-- On PRE_NAME shift to state 22
-- On PLUS shift to state 24
-- On MINUS shift to state 25
-- On LPAREN shift to state 32
-- On INC shift to state 31
-- On DEC shift to state 46
-- On CONSTANT shift to state 47
-- On BUILTIN_VA_ARG shift to state 48
-- On BANG shift to state 50
-- On AND shift to state 51
-- On ALIGNOF shift to state 52
-- On unary_operator shift to state 56
-- On unary_expression shift to state 374
-- On string_literals_list shift to state 58
-- On primary_expression shift to state 60
-- On postfix_expression shift to state 61
## Reductions:

State 32:
## Known stack suffix:
## LPAREN
## LR(1) items:
postfix_expression -> LPAREN . type_name RPAREN LBRACE initializer_list option(COMMA) RBRACE [ XOR_ASSIGN SUB_ASSIGN STAR SLASH SEMICOLON RPAREN RIGHT_ASSIGN RIGHT RBRACK RBRACE QUESTION PTR PLUS PERCENT OR_ASSIGN NEQ MUL_ASSIGN MOD_ASSIGN MINUS LT LPAREN LEQ LEFT_ASSIGN LEFT LBRACK INC HAT GT GEQ EQEQ EQ DOT DIV_ASSIGN DEC COMMA COLON BARBAR BAR AND_ASSIGN ANDAND AND ADD_ASSIGN ]
primary_expression -> LPAREN . expression RPAREN [ XOR_ASSIGN SUB_ASSIGN STAR SLASH SEMICOLON RPAREN RIGHT_ASSIGN RIGHT RBRACK RBRACE QUESTION PTR PLUS PERCENT OR_ASSIGN NEQ MUL_ASSIGN MOD_ASSIGN MINUS LT LPAREN LEQ LEFT_ASSIGN LEFT LBRACK INC HAT GT GEQ EQEQ EQ DOT DIV_ASSIGN DEC COMMA COLON BARBAR BAR AND_ASSIGN ANDAND AND ADD_ASSIGN ]
## Transitions:
-- On VOID shift to state 2
-- On UNSIGNED shift to state 3
-- On UNION shift to state 4
-- On UNDERSCORE_BOOL shift to state 5
-- On TILDE shift to state 18
-- On STRUCT shift to state 8
-- On STRING_LITERAL shift to state 19
-- On STAR shift to state 20
-- On SIZEOF shift to state 21
-- On SIGNED shift to state 10
-- On SHORT shift to state 11
-- On PRE_NAME shift to state 27
-- On PLUS shift to state 24
-- On MINUS shift to state 25
-- On LPAREN shift to state 28
-- On LONG shift to state 29
-- On INT shift to state 30
-- On INC shift to state 31
-- On FLOAT shift to state 33
-- On ENUM shift to state 34
-- On DOUBLE shift to state 54
-- On DEC shift to state 46
-- On CONSTANT shift to state 47
-- On CHAR shift to state 55
-- On BUILTIN_VA_ARG shift to state 48
-- On BANG shift to state 50
-- On AND shift to state 51
-- On ALIGNOF shift to state 52
-- On unary_operator shift to state 56
-- On unary_expression shift to state 65
-- On typedef_name shift to state 145
-- On type_specifier_no_typedef_name shift to state 151
-- On type_qualifier_list shift to state 294
-- On type_name shift to state 372
-- On struct_or_union_specifier shift to state 155
-- On struct_or_union shift to state 156
-- On string_literals_list shift to state 58
-- On specifier_qualifier_list(type_name) shift to state 301
-- On shift_expression shift to state 78
-- On relational_expression shift to state 94
-- On primary_expression shift to state 60
-- On postfix_expression shift to state 61
-- On option(type_qualifier_list) shift to state 292
-- On multiplicative_expression shift to state 82
-- On logical_or_expression shift to state 102
-- On logical_and_expression shift to state 104
-- On inclusive_or_expression shift to state 120
-- On expression shift to state 337
-- On exclusive_or_expression shift to state 119
-- On equality_expression shift to state 110
-- On enum_specifier shift to state 169
-- On conditional_expression shift to state 123
-- On cast_expression shift to state 88
-- On assignment_expression shift to state 127
-- On and_expression shift to state 118
-- On additive_expression shift to state 101
## Reductions:
-- On VOLATILE reduce production option(type_qualifier_list) ->
-- On RESTRICT reduce production option(type_qualifier_list) ->
-- On PACKED reduce production option(type_qualifier_list) ->
-- On CONST reduce production option(type_qualifier_list) ->
-- On ATTRIBUTE reduce production option(type_qualifier_list) ->
-- On ALIGNAS reduce production option(type_qualifier_list) ->

State 33:
## Known stack suffix:
## FLOAT
## LR(1) items:
type_specifier_no_typedef_name -> FLOAT . [ VOLATILE VOID UNSIGNED UNION UNDERSCORE_BOOL TYPEDEF STRUCT STATIC STAR SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER PRE_NAME PACKED LPAREN LONG LBRACK INT INLINE FLOAT EXTERN ENUM DOUBLE CONST COMMA COLON CHAR AUTO ATTRIBUTE ALIGNAS ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production type_specifier_no_typedef_name -> FLOAT

State 34:
## Known stack suffix:
## ENUM
## LR(1) items:
enum_specifier -> ENUM . attribute_specifier_list option(other_identifier) LBRACE enumerator_list option(COMMA) RBRACE [ VOLATILE VOID UNSIGNED UNION UNDERSCORE_BOOL TYPEDEF STRUCT STATIC STAR SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER PRE_NAME PACKED LPAREN LONG LBRACK INT INLINE FLOAT EXTERN ENUM DOUBLE CONST COMMA COLON CHAR AUTO ATTRIBUTE ALIGNAS ]
enum_specifier -> ENUM . attribute_specifier_list general_identifier [ VOLATILE VOID UNSIGNED UNION UNDERSCORE_BOOL TYPEDEF STRUCT STATIC STAR SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER PRE_NAME PACKED LPAREN LONG LBRACK INT INLINE FLOAT EXTERN ENUM DOUBLE CONST COMMA COLON CHAR AUTO ATTRIBUTE ALIGNAS ]
## Transitions:
-- On PACKED shift to state 16
-- On ATTRIBUTE shift to state 35
-- On ALIGNAS shift to state 149
-- On attribute_specifier_list shift to state 357
-- On attribute_specifier shift to state 257
## Reductions:
-- On XOR_ASSIGN reduce production attribute_specifier_list ->
-- On WHILE reduce production attribute_specifier_list ->
-- On VOLATILE reduce production attribute_specifier_list ->
-- On VOID reduce production attribute_specifier_list ->
-- On VAR_NAME reduce production attribute_specifier_list ->
-- On UNSIGNED reduce production attribute_specifier_list ->
-- On UNION reduce production attribute_specifier_list ->
-- On UNDERSCORE_BOOL reduce production attribute_specifier_list ->
-- On TYPEDEF_NAME reduce production attribute_specifier_list ->
-- On TYPEDEF reduce production attribute_specifier_list ->
-- On TILDE reduce production attribute_specifier_list ->
-- On SWITCH reduce production attribute_specifier_list ->
-- On SUB_ASSIGN reduce production attribute_specifier_list ->
-- On STRUCT reduce production attribute_specifier_list ->
-- On STRING_LITERAL reduce production attribute_specifier_list ->
-- On STATIC reduce production attribute_specifier_list ->
-- On STAR reduce production attribute_specifier_list ->
-- On SLASH reduce production attribute_specifier_list ->
-- On SIZEOF reduce production attribute_specifier_list ->
-- On SIGNED reduce production attribute_specifier_list ->
-- On SHORT reduce production attribute_specifier_list ->
-- On SEMICOLON reduce production attribute_specifier_list ->
-- On RPAREN reduce production attribute_specifier_list ->
-- On RIGHT_ASSIGN reduce production attribute_specifier_list ->
-- On RIGHT reduce production attribute_specifier_list ->
-- On RETURN reduce production attribute_specifier_list ->
-- On RESTRICT reduce production attribute_specifier_list ->
-- On REGISTER reduce production attribute_specifier_list ->
-- On RBRACK reduce production attribute_specifier_list ->
-- On RBRACE reduce production attribute_specifier_list ->
-- On QUESTION reduce production attribute_specifier_list ->
-- On PTR reduce production attribute_specifier_list ->
-- On PRE_NAME reduce production attribute_specifier_list ->
-- On PRAGMA reduce production attribute_specifier_list ->
-- On PLUS reduce production attribute_specifier_list ->
-- On PERCENT reduce production attribute_specifier_list ->
-- On OR_ASSIGN reduce production attribute_specifier_list ->
-- On NEQ reduce production attribute_specifier_list ->
-- On MUL_ASSIGN reduce production attribute_specifier_list ->
-- On MOD_ASSIGN reduce production attribute_specifier_list ->
-- On MINUS reduce production attribute_specifier_list ->
-- On LT reduce production attribute_specifier_list ->
-- On LPAREN reduce production attribute_specifier_list ->
-- On LONG reduce production attribute_specifier_list ->
-- On LEQ reduce production attribute_specifier_list ->
-- On LEFT_ASSIGN reduce production attribute_specifier_list ->
-- On LEFT reduce production attribute_specifier_list ->
-- On LBRACK reduce production attribute_specifier_list ->
-- On LBRACE reduce production attribute_specifier_list ->
-- On INT reduce production attribute_specifier_list ->
-- On INLINE reduce production attribute_specifier_list ->
-- On INC reduce production attribute_specifier_list ->
-- On IF reduce production attribute_specifier_list ->
-- On HAT reduce production attribute_specifier_list ->
-- On GT reduce production attribute_specifier_list ->
-- On GOTO reduce production attribute_specifier_list ->
-- On GEQ reduce production attribute_specifier_list ->
-- On FOR reduce production attribute_specifier_list ->
-- On FLOAT reduce production attribute_specifier_list ->
-- On EXTERN reduce production attribute_specifier_list ->
-- On EQEQ reduce production attribute_specifier_list ->
-- On EQ reduce production attribute_specifier_list ->
-- On EOF reduce production attribute_specifier_list ->
-- On ENUM reduce production attribute_specifier_list ->
-- On ELSE reduce production attribute_specifier_list ->
-- On ELLIPSIS reduce production attribute_specifier_list ->
-- On DOUBLE reduce production attribute_specifier_list ->
-- On DOT reduce production attribute_specifier_list ->
-- On DO reduce production attribute_specifier_list ->
-- On DIV_ASSIGN reduce production attribute_specifier_list ->
-- On DEFAULT reduce production attribute_specifier_list ->
-- On DEC reduce production attribute_specifier_list ->
-- On CONTINUE reduce production attribute_specifier_list ->
-- On CONSTANT reduce production attribute_specifier_list ->
-- On CONST reduce production attribute_specifier_list ->
-- On COMMA reduce production attribute_specifier_list ->
-- On COLON reduce production attribute_specifier_list ->
-- On CHAR reduce production attribute_specifier_list ->
-- On CASE reduce production attribute_specifier_list ->
-- On BUILTIN_VA_ARG reduce production attribute_specifier_list ->
-- On BREAK reduce production attribute_specifier_list ->
-- On BARBAR reduce production attribute_specifier_list ->
-- On BAR reduce production attribute_specifier_list ->
-- On BANG reduce production attribute_specifier_list ->
-- On AUTO reduce production attribute_specifier_list ->
-- On ASM reduce production attribute_specifier_list ->
-- On AND_ASSIGN reduce production attribute_specifier_list ->
-- On ANDAND reduce production attribute_specifier_list ->
-- On AND reduce production attribute_specifier_list ->
-- On ALIGNOF reduce production attribute_specifier_list ->
-- On ADD_ASSIGN reduce production attribute_specifier_list ->

State 35:
## Known stack suffix:
## ATTRIBUTE
## LR(1) items:
attribute_specifier -> ATTRIBUTE . LPAREN LPAREN gcc_attribute_list RPAREN RPAREN [ VOLATILE VOID UNSIGNED UNION UNDERSCORE_BOOL TYPEDEF TILDE STRUCT STRING_LITERAL STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACK PRE_NAME PLUS PACKED MINUS LPAREN LONG LBRACK LBRACE INT INLINE INC FLOAT EXTERN EQ ENUM DOUBLE DEC CONSTANT CONST COMMA COLON CHAR BUILTIN_VA_ARG BANG AUTO ATTRIBUTE AND ALIGNOF ALIGNAS ]
## Transitions:
-- On LPAREN shift to state 36
## Reductions:

State 36:
## Known stack suffix:
## ATTRIBUTE LPAREN
## LR(1) items:
attribute_specifier -> ATTRIBUTE LPAREN . LPAREN gcc_attribute_list RPAREN RPAREN [ VOLATILE VOID UNSIGNED UNION UNDERSCORE_BOOL TYPEDEF TILDE STRUCT STRING_LITERAL STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACK PRE_NAME PLUS PACKED MINUS LPAREN LONG LBRACK LBRACE INT INLINE INC FLOAT EXTERN EQ ENUM DOUBLE DEC CONSTANT CONST COMMA COLON CHAR BUILTIN_VA_ARG BANG AUTO ATTRIBUTE AND ALIGNOF ALIGNAS ]
## Transitions:
-- On LPAREN shift to state 37
## Reductions:

State 37:
## Known stack suffix:
## ATTRIBUTE LPAREN LPAREN
## LR(1) items:
attribute_specifier -> ATTRIBUTE LPAREN LPAREN . gcc_attribute_list RPAREN RPAREN [ VOLATILE VOID UNSIGNED UNION UNDERSCORE_BOOL TYPEDEF TILDE STRUCT STRING_LITERAL STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACK PRE_NAME PLUS PACKED MINUS LPAREN LONG LBRACK LBRACE INT INLINE INC FLOAT EXTERN EQ ENUM DOUBLE DEC CONSTANT CONST COMMA COLON CHAR BUILTIN_VA_ARG BANG AUTO ATTRIBUTE AND ALIGNOF ALIGNAS ]
## Transitions:
-- On PRE_NAME shift to state 38
-- On PACKED shift to state 40
-- On CONST shift to state 41
-- On typedef_name shift to state 42
-- On general_identifier shift to state 43
-- On gcc_attribute_word shift to state 44
-- On gcc_attribute_list shift to state 351
-- On gcc_attribute shift to state 356
## Reductions:
-- On RPAREN reduce production gcc_attribute ->
-- On COMMA reduce production gcc_attribute ->

State 38:
## Known stack suffix:
## PRE_NAME
## LR(1) items:
general_identifier -> PRE_NAME . VAR_NAME [ XOR_ASSIGN VOLATILE VOID UNSIGNED UNION UNDERSCORE_BOOL TYPEDEF SUB_ASSIGN STRUCT STATIC STAR SLASH SIGNED SHORT SEMICOLON RPAREN RIGHT_ASSIGN RIGHT RESTRICT REGISTER RBRACK RBRACE QUESTION PTR PRE_NAME PLUS PERCENT PACKED OR_ASSIGN NEQ MUL_ASSIGN MOD_ASSIGN MINUS LT LPAREN LONG LEQ LEFT_ASSIGN LEFT LBRACK LBRACE INT INLINE INC HAT GT GEQ FLOAT EXTERN EQEQ EQ ENUM DOUBLE DOT DIV_ASSIGN DEC CONST COMMA COLON CHAR BARBAR BAR AUTO ATTRIBUTE AND_ASSIGN ANDAND AND ALIGNAS ADD_ASSIGN ]
typedef_name -> PRE_NAME . TYPEDEF_NAME [ XOR_ASSIGN VOLATILE VOID UNSIGNED UNION UNDERSCORE_BOOL TYPEDEF SUB_ASSIGN STRUCT STATIC STAR SLASH SIGNED SHORT SEMICOLON RPAREN RIGHT_ASSIGN RIGHT RESTRICT REGISTER RBRACK RBRACE QUESTION PTR PRE_NAME PLUS PERCENT PACKED OR_ASSIGN NEQ MUL_ASSIGN MOD_ASSIGN MINUS LT LPAREN LONG LEQ LEFT_ASSIGN LEFT LBRACK LBRACE INT INLINE INC HAT GT GEQ FLOAT EXTERN EQEQ EQ ENUM DOUBLE DOT DIV_ASSIGN DEC CONST COMMA COLON CHAR BARBAR BAR AUTO ATTRIBUTE AND_ASSIGN ANDAND AND ALIGNAS ADD_ASSIGN ]
## Transitions:
-- On VAR_NAME shift to state 39
-- On TYPEDEF_NAME shift to state 15
## Reductions:

State 39:
## Known stack suffix:
## PRE_NAME VAR_NAME
## LR(1) items:
general_identifier -> PRE_NAME VAR_NAME . [ XOR_ASSIGN VOLATILE VOID UNSIGNED UNION UNDERSCORE_BOOL TYPEDEF SUB_ASSIGN STRUCT STATIC STAR SLASH SIGNED SHORT SEMICOLON RPAREN RIGHT_ASSIGN RIGHT RESTRICT REGISTER RBRACK RBRACE QUESTION PTR PRE_NAME PLUS PERCENT PACKED OR_ASSIGN NEQ MUL_ASSIGN MOD_ASSIGN MINUS LT LPAREN LONG LEQ LEFT_ASSIGN LEFT LBRACK LBRACE INT INLINE INC HAT GT GEQ FLOAT EXTERN EQEQ EQ ENUM DOUBLE DOT DIV_ASSIGN DEC CONST COMMA COLON CHAR BARBAR BAR AUTO ATTRIBUTE AND_ASSIGN ANDAND AND ALIGNAS ADD_ASSIGN ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production general_identifier -> PRE_NAME VAR_NAME

State 40:
## Known stack suffix:
## PACKED
## LR(1) items:
gcc_attribute_word -> PACKED . [ RPAREN LPAREN COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production gcc_attribute_word -> PACKED

State 41:
## Known stack suffix:
## CONST
## LR(1) items:
gcc_attribute_word -> CONST . [ RPAREN LPAREN COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production gcc_attribute_word -> CONST

State 42:
## Known stack suffix:
## typedef_name
## LR(1) items:
general_identifier -> typedef_name . [ XOR_ASSIGN VOLATILE VOID UNSIGNED UNION UNDERSCORE_BOOL TYPEDEF SUB_ASSIGN STRUCT STATIC STAR SLASH SIGNED SHORT SEMICOLON RPAREN RIGHT_ASSIGN RIGHT RESTRICT REGISTER RBRACK RBRACE QUESTION PTR PRE_NAME PLUS PERCENT PACKED OR_ASSIGN NEQ MUL_ASSIGN MOD_ASSIGN MINUS LT LPAREN LONG LEQ LEFT_ASSIGN LEFT LBRACK LBRACE INT INLINE INC HAT GT GEQ FLOAT EXTERN EQEQ EQ ENUM DOUBLE DOT DIV_ASSIGN DEC CONST COMMA COLON CHAR BARBAR BAR AUTO ATTRIBUTE AND_ASSIGN ANDAND AND ALIGNAS ADD_ASSIGN ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production general_identifier -> typedef_name

State 43:
## Known stack suffix:
## general_identifier
## LR(1) items:
gcc_attribute_word -> general_identifier . [ RPAREN LPAREN COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production gcc_attribute_word -> general_identifier

State 44:
## Known stack suffix:
## gcc_attribute_word
## LR(1) items:
gcc_attribute -> gcc_attribute_word . [ RPAREN COMMA ]
gcc_attribute -> gcc_attribute_word . LPAREN option(argument_expression_list) RPAREN [ RPAREN COMMA ]
gcc_attribute -> gcc_attribute_word . LPAREN typedef_name COMMA argument_expression_list RPAREN [ RPAREN COMMA ]
## Transitions:
-- On LPAREN shift to state 45
## Reductions:
-- On RPAREN reduce production gcc_attribute -> gcc_attribute_word
-- On COMMA reduce production gcc_attribute -> gcc_attribute_word

State 45:
## Known stack suffix:
## gcc_attribute_word LPAREN
## LR(1) items:
gcc_attribute -> gcc_attribute_word LPAREN . option(argument_expression_list) RPAREN [ RPAREN COMMA ]
gcc_attribute -> gcc_attribute_word LPAREN . typedef_name COMMA argument_expression_list RPAREN [ RPAREN COMMA ]
## Transitions:
-- On TILDE shift to state 18
-- On STRING_LITERAL shift to state 19
-- On STAR shift to state 20
-- On SIZEOF shift to state 21
-- On PRE_NAME shift to state 27
-- On PLUS shift to state 24
-- On MINUS shift to state 25
-- On LPAREN shift to state 28
-- On INC shift to state 31
-- On DEC shift to state 46
-- On CONSTANT shift to state 47
-- On BUILTIN_VA_ARG shift to state 48
-- On BANG shift to state 50
-- On AND shift to state 51
-- On ALIGNOF shift to state 52
-- On unary_operator shift to state 56
-- On unary_expression shift to state 65
-- On typedef_name shift to state 345
-- On string_literals_list shift to state 58
-- On shift_expression shift to state 78
-- On relational_expression shift to state 94
-- On primary_expression shift to state 60
-- On postfix_expression shift to state 61
-- On option(argument_expression_list) shift to state 349
-- On multiplicative_expression shift to state 82
-- On logical_or_expression shift to state 102
-- On logical_and_expression shift to state 104
-- On inclusive_or_expression shift to state 120
-- On exclusive_or_expression shift to state 119
-- On equality_expression shift to state 110
-- On conditional_expression shift to state 123
-- On cast_expression shift to state 88
-- On assignment_expression shift to state 133
-- On argument_expression_list shift to state 134
-- On and_expression shift to state 118
-- On additive_expression shift to state 101
## Reductions:
-- On RPAREN reduce production option(argument_expression_list) ->

State 46:
## Known stack suffix:
## DEC
## LR(1) items:
unary_expression -> DEC . unary_expression [ XOR_ASSIGN SUB_ASSIGN STAR SLASH SEMICOLON RPAREN RIGHT_ASSIGN RIGHT RBRACK RBRACE QUESTION PLUS PERCENT OR_ASSIGN NEQ MUL_ASSIGN MOD_ASSIGN MINUS LT LEQ LEFT_ASSIGN LEFT HAT GT GEQ EQEQ EQ DIV_ASSIGN COMMA COLON BARBAR BAR AND_ASSIGN ANDAND AND ADD_ASSIGN ]
## Transitions:
-- On TILDE shift to state 18
-- On STRING_LITERAL shift to state 19
-- On STAR shift to state 20
-- On SIZEOF shift to state 21
-- On PRE_NAME shift to state 22
-- On PLUS shift to state 24
-- On MINUS shift to state 25
-- On LPAREN shift to state 32
-- On INC shift to state 31
-- On DEC shift to state 46
-- On CONSTANT shift to state 47
-- On BUILTIN_VA_ARG shift to state 48
-- On BANG shift to state 50
-- On AND shift to state 51
-- On ALIGNOF shift to state 52
-- On unary_operator shift to state 56
-- On unary_expression shift to state 344
-- On string_literals_list shift to state 58
-- On primary_expression shift to state 60
-- On postfix_expression shift to state 61
## Reductions:

State 47:
## Known stack suffix:
## CONSTANT
## LR(1) items:
primary_expression -> CONSTANT . [ XOR_ASSIGN SUB_ASSIGN STAR SLASH SEMICOLON RPAREN RIGHT_ASSIGN RIGHT RBRACK RBRACE QUESTION PTR PLUS PERCENT OR_ASSIGN NEQ MUL_ASSIGN MOD_ASSIGN MINUS LT LPAREN LEQ LEFT_ASSIGN LEFT LBRACK INC HAT GT GEQ EQEQ EQ DOT DIV_ASSIGN DEC COMMA COLON BARBAR BAR AND_ASSIGN ANDAND AND ADD_ASSIGN ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production primary_expression -> CONSTANT

State 48:
## Known stack suffix:
## BUILTIN_VA_ARG
## LR(1) items:
postfix_expression -> BUILTIN_VA_ARG . LPAREN assignment_expression COMMA type_name RPAREN [ XOR_ASSIGN SUB_ASSIGN STAR SLASH SEMICOLON RPAREN RIGHT_ASSIGN RIGHT RBRACK RBRACE QUESTION PTR PLUS PERCENT OR_ASSIGN NEQ MUL_ASSIGN MOD_ASSIGN MINUS LT LPAREN LEQ LEFT_ASSIGN LEFT LBRACK INC HAT GT GEQ EQEQ EQ DOT DIV_ASSIGN DEC COMMA COLON BARBAR BAR AND_ASSIGN ANDAND AND ADD_ASSIGN ]
## Transitions:
-- On LPAREN shift to state 49
## Reductions:

State 49:
## Known stack suffix:
## BUILTIN_VA_ARG LPAREN
## LR(1) items:
postfix_expression -> BUILTIN_VA_ARG LPAREN . assignment_expression COMMA type_name RPAREN [ XOR_ASSIGN SUB_ASSIGN STAR SLASH SEMICOLON RPAREN RIGHT_ASSIGN RIGHT RBRACK RBRACE QUESTION PTR PLUS PERCENT OR_ASSIGN NEQ MUL_ASSIGN MOD_ASSIGN MINUS LT LPAREN LEQ LEFT_ASSIGN LEFT LBRACK INC HAT GT GEQ EQEQ EQ DOT DIV_ASSIGN DEC COMMA COLON BARBAR BAR AND_ASSIGN ANDAND AND ADD_ASSIGN ]
## Transitions:
-- On TILDE shift to state 18
-- On STRING_LITERAL shift to state 19
-- On STAR shift to state 20
-- On SIZEOF shift to state 21
-- On PRE_NAME shift to state 22
-- On PLUS shift to state 24
-- On MINUS shift to state 25
-- On LPAREN shift to state 28
-- On INC shift to state 31
-- On DEC shift to state 46
-- On CONSTANT shift to state 47
-- On BUILTIN_VA_ARG shift to state 48
-- On BANG shift to state 50
-- On AND shift to state 51
-- On ALIGNOF shift to state 52
-- On unary_operator shift to state 56
-- On unary_expression shift to state 65
-- On string_literals_list shift to state 58
-- On shift_expression shift to state 78
-- On relational_expression shift to state 94
-- On primary_expression shift to state 60
-- On postfix_expression shift to state 61
-- On multiplicative_expression shift to state 82
-- On logical_or_expression shift to state 102
-- On logical_and_expression shift to state 104
-- On inclusive_or_expression shift to state 120
-- On exclusive_or_expression shift to state 119
-- On equality_expression shift to state 110
-- On conditional_expression shift to state 123
-- On cast_expression shift to state 88
-- On assignment_expression shift to state 340
-- On and_expression shift to state 118
-- On additive_expression shift to state 101
## Reductions:

State 50:
## Known stack suffix:
## BANG
## LR(1) items:
unary_operator -> BANG . [ TILDE STRING_LITERAL STAR SIZEOF PRE_NAME PLUS MINUS LPAREN INC DEC CONSTANT BUILTIN_VA_ARG BANG AND ALIGNOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production unary_operator -> BANG

State 51:
## Known stack suffix:
## AND
## LR(1) items:
unary_operator -> AND . [ TILDE STRING_LITERAL STAR SIZEOF PRE_NAME PLUS MINUS LPAREN INC DEC CONSTANT BUILTIN_VA_ARG BANG AND ALIGNOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production unary_operator -> AND

State 52:
## Known stack suffix:
## ALIGNOF
## LR(1) items:
unary_expression -> ALIGNOF . unary_expression [ XOR_ASSIGN SUB_ASSIGN STAR SLASH SEMICOLON RPAREN RIGHT_ASSIGN RIGHT RBRACK RBRACE QUESTION PLUS PERCENT OR_ASSIGN NEQ MUL_ASSIGN MOD_ASSIGN MINUS LT LEQ LEFT_ASSIGN LEFT HAT GT GEQ EQEQ EQ DIV_ASSIGN COMMA COLON BARBAR BAR AND_ASSIGN ANDAND AND ADD_ASSIGN ]
unary_expression -> ALIGNOF . LPAREN type_name RPAREN [ XOR_ASSIGN SUB_ASSIGN STAR SLASH SEMICOLON RPAREN RIGHT_ASSIGN RIGHT RBRACK RBRACE QUESTION PLUS PERCENT OR_ASSIGN NEQ MUL_ASSIGN MOD_ASSIGN MINUS LT LEQ LEFT_ASSIGN LEFT HAT GT GEQ EQEQ EQ DIV_ASSIGN COMMA COLON BARBAR BAR AND_ASSIGN ANDAND AND ADD_ASSIGN ]
## Transitions:
-- On TILDE shift to state 18
-- On STRING_LITERAL shift to state 19
-- On STAR shift to state 20
-- On SIZEOF shift to state 21
-- On PRE_NAME shift to state 22
-- On PLUS shift to state 24
-- On MINUS shift to state 25
-- On LPAREN shift to state 53
-- On INC shift to state 31
-- On DEC shift to state 46
-- On CONSTANT shift to state 47
-- On BUILTIN_VA_ARG shift to state 48
-- On BANG shift to state 50
-- On AND shift to state 51
-- On ALIGNOF shift to state 52
-- On unary_operator shift to state 56
-- On unary_expression shift to state 339
-- On string_literals_list shift to state 58
-- On primary_expression shift to state 60
-- On postfix_expression shift to state 61
## Reductions:

State 53:
## Known stack suffix:
## ALIGNOF LPAREN
## LR(1) items:
postfix_expression -> LPAREN . type_name RPAREN LBRACE initializer_list option(COMMA) RBRACE [ XOR_ASSIGN SUB_ASSIGN STAR SLASH SEMICOLON RPAREN RIGHT_ASSIGN RIGHT RBRACK RBRACE QUESTION PTR PLUS PERCENT OR_ASSIGN NEQ MUL_ASSIGN MOD_ASSIGN MINUS LT LPAREN LEQ LEFT_ASSIGN LEFT LBRACK INC HAT GT GEQ EQEQ EQ DOT DIV_ASSIGN DEC COMMA COLON BARBAR BAR AND_ASSIGN ANDAND AND ADD_ASSIGN ]
primary_expression -> LPAREN . expression RPAREN [ XOR_ASSIGN SUB_ASSIGN STAR SLASH SEMICOLON RPAREN RIGHT_ASSIGN RIGHT RBRACK RBRACE QUESTION PTR PLUS PERCENT OR_ASSIGN NEQ MUL_ASSIGN MOD_ASSIGN MINUS LT LPAREN LEQ LEFT_ASSIGN LEFT LBRACK INC HAT GT GEQ EQEQ EQ DOT DIV_ASSIGN DEC COMMA COLON BARBAR BAR AND_ASSIGN ANDAND AND ADD_ASSIGN ]
unary_expression -> ALIGNOF LPAREN . type_name RPAREN [ XOR_ASSIGN SUB_ASSIGN STAR SLASH SEMICOLON RPAREN RIGHT_ASSIGN RIGHT RBRACK RBRACE QUESTION PLUS PERCENT OR_ASSIGN NEQ MUL_ASSIGN MOD_ASSIGN MINUS LT LEQ LEFT_ASSIGN LEFT HAT GT GEQ EQEQ EQ DIV_ASSIGN COMMA COLON BARBAR BAR AND_ASSIGN ANDAND AND ADD_ASSIGN ]
## Transitions:
-- On VOID shift to state 2
-- On UNSIGNED shift to state 3
-- On UNION shift to state 4
-- On UNDERSCORE_BOOL shift to state 5
-- On TILDE shift to state 18
-- On STRUCT shift to state 8
-- On STRING_LITERAL shift to state 19
-- On STAR shift to state 20
-- On SIZEOF shift to state 21
-- On SIGNED shift to state 10
-- On SHORT shift to state 11
-- On PRE_NAME shift to state 27
-- On PLUS shift to state 24
-- On MINUS shift to state 25
-- On LPAREN shift to state 28
-- On LONG shift to state 29
-- On INT shift to state 30
-- On INC shift to state 31
-- On FLOAT shift to state 33
-- On ENUM shift to state 34
-- On DOUBLE shift to state 54
-- On DEC shift to state 46
-- On CONSTANT shift to state 47
-- On CHAR shift to state 55
-- On BUILTIN_VA_ARG shift to state 48
-- On BANG shift to state 50
-- On AND shift to state 51
-- On ALIGNOF shift to state 52
-- On unary_operator shift to state 56
-- On unary_expression shift to state 65
-- On typedef_name shift to state 145
-- On type_specifier_no_typedef_name shift to state 151
-- On type_qualifier_list shift to state 294
-- On type_name shift to state 311
-- On struct_or_union_specifier shift to state 155
-- On struct_or_union shift to state 156
-- On string_literals_list shift to state 58
-- On specifier_qualifier_list(type_name) shift to state 301
-- On shift_expression shift to state 78
-- On relational_expression shift to state 94
-- On primary_expression shift to state 60
-- On postfix_expression shift to state 61
-- On option(type_qualifier_list) shift to state 292
-- On multiplicative_expression shift to state 82
-- On logical_or_expression shift to state 102
-- On logical_and_expression shift to state 104
-- On inclusive_or_expression shift to state 120
-- On expression shift to state 337
-- On exclusive_or_expression shift to state 119
-- On equality_expression shift to state 110
-- On enum_specifier shift to state 169
-- On conditional_expression shift to state 123
-- On cast_expression shift to state 88
-- On assignment_expression shift to state 127
-- On and_expression shift to state 118
-- On additive_expression shift to state 101
## Reductions:
-- On VOLATILE reduce production option(type_qualifier_list) ->
-- On RESTRICT reduce production option(type_qualifier_list) ->
-- On PACKED reduce production option(type_qualifier_list) ->
-- On CONST reduce production option(type_qualifier_list) ->
-- On ATTRIBUTE reduce production option(type_qualifier_list) ->
-- On ALIGNAS reduce production option(type_qualifier_list) ->

State 54:
## Known stack suffix:
## DOUBLE
## LR(1) items:
type_specifier_no_typedef_name -> DOUBLE . [ VOLATILE VOID UNSIGNED UNION UNDERSCORE_BOOL TYPEDEF STRUCT STATIC STAR SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER PRE_NAME PACKED LPAREN LONG LBRACK INT INLINE FLOAT EXTERN ENUM DOUBLE CONST COMMA COLON CHAR AUTO ATTRIBUTE ALIGNAS ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production type_specifier_no_typedef_name -> DOUBLE

State 55:
## Known stack suffix:
## CHAR
## LR(1) items:
type_specifier_no_typedef_name -> CHAR . [ VOLATILE VOID UNSIGNED UNION UNDERSCORE_BOOL TYPEDEF STRUCT STATIC STAR SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER PRE_NAME PACKED LPAREN LONG LBRACK INT INLINE FLOAT EXTERN ENUM DOUBLE CONST COMMA COLON CHAR AUTO ATTRIBUTE ALIGNAS ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production type_specifier_no_typedef_name -> CHAR

State 56:
## Known stack suffix:
## unary_operator
## LR(1) items:
unary_expression -> unary_operator . cast_expression [ XOR_ASSIGN SUB_ASSIGN STAR SLASH SEMICOLON RPAREN RIGHT_ASSIGN RIGHT RBRACK RBRACE QUESTION PLUS PERCENT OR_ASSIGN NEQ MUL_ASSIGN MOD_ASSIGN MINUS LT LEQ LEFT_ASSIGN LEFT HAT GT GEQ EQEQ EQ DIV_ASSIGN COMMA COLON BARBAR BAR AND_ASSIGN ANDAND AND ADD_ASSIGN ]
## Transitions:
-- On TILDE shift to state 18
-- On STRING_LITERAL shift to state 19
-- On STAR shift to state 20
-- On SIZEOF shift to state 21
-- On PRE_NAME shift to state 22
-- On PLUS shift to state 24
-- On MINUS shift to state 25
-- On LPAREN shift to state 28
-- On INC shift to state 31
-- On DEC shift to state 46
-- On CONSTANT shift to state 47
-- On BUILTIN_VA_ARG shift to state 48
-- On BANG shift to state 50
-- On AND shift to state 51
-- On ALIGNOF shift to state 52
-- On unary_operator shift to state 56
-- On unary_expression shift to state 57
-- On string_literals_list shift to state 58
-- On primary_expression shift to state 60
-- On postfix_expression shift to state 61
-- On cast_expression shift to state 144
## Reductions:

State 57:
## Known stack suffix:
## unary_expression
## LR(1) items:
cast_expression -> unary_expression . [ XOR_ASSIGN SUB_ASSIGN STAR SLASH SEMICOLON RPAREN RIGHT_ASSIGN RIGHT RBRACK RBRACE QUESTION PLUS PERCENT OR_ASSIGN NEQ MUL_ASSIGN MOD_ASSIGN MINUS LT LEQ LEFT_ASSIGN LEFT HAT GT GEQ EQEQ EQ DIV_ASSIGN COMMA COLON BARBAR BAR AND_ASSIGN ANDAND AND ADD_ASSIGN ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production cast_expression -> unary_expression

State 58:
## Known stack suffix:
## string_literals_list
## LR(1) items:
primary_expression -> string_literals_list . [ XOR_ASSIGN SUB_ASSIGN STAR SLASH SEMICOLON RPAREN RIGHT_ASSIGN RIGHT RBRACK RBRACE QUESTION PTR PLUS PERCENT OR_ASSIGN NEQ MUL_ASSIGN MOD_ASSIGN MINUS LT LPAREN LEQ LEFT_ASSIGN LEFT LBRACK INC HAT GT GEQ EQEQ EQ DOT DIV_ASSIGN DEC COMMA COLON BARBAR BAR AND_ASSIGN ANDAND AND ADD_ASSIGN ]
string_literals_list -> string_literals_list . STRING_LITERAL [ XOR_ASSIGN SUB_ASSIGN STRING_LITERAL STAR SLASH SEMICOLON RPAREN RIGHT_ASSIGN RIGHT RBRACK RBRACE QUESTION PTR PLUS PERCENT OR_ASSIGN NEQ MUL_ASSIGN MOD_ASSIGN MINUS LT LPAREN LEQ LEFT_ASSIGN LEFT LBRACK INC HAT GT GEQ EQEQ EQ DOT DIV_ASSIGN DEC COMMA COLON BARBAR BAR AND_ASSIGN ANDAND AND ADD_ASSIGN ]
## Transitions:
-- On STRING_LITERAL shift to state 59
## Reductions:
-- On XOR_ASSIGN reduce production primary_expression -> string_literals_list
-- On WHILE reduce production primary_expression -> string_literals_list
-- On VOLATILE reduce production primary_expression -> string_literals_list
-- On VOID reduce production primary_expression -> string_literals_list
-- On VAR_NAME reduce production primary_expression -> string_literals_list
-- On UNSIGNED reduce production primary_expression -> string_literals_list
-- On UNION reduce production primary_expression -> string_literals_list
-- On UNDERSCORE_BOOL reduce production primary_expression -> string_literals_list
-- On TYPEDEF_NAME reduce production primary_expression -> string_literals_list
-- On TYPEDEF reduce production primary_expression -> string_literals_list
-- On TILDE reduce production primary_expression -> string_literals_list
-- On SWITCH reduce production primary_expression -> string_literals_list
-- On SUB_ASSIGN reduce production primary_expression -> string_literals_list
-- On STRUCT reduce production primary_expression -> string_literals_list
-- On STATIC reduce production primary_expression -> string_literals_list
-- On STAR reduce production primary_expression -> string_literals_list
-- On SLASH reduce production primary_expression -> string_literals_list
-- On SIZEOF reduce production primary_expression -> string_literals_list
-- On SIGNED reduce production primary_expression -> string_literals_list
-- On SHORT reduce production primary_expression -> string_literals_list
-- On SEMICOLON reduce production primary_expression -> string_literals_list
-- On RPAREN reduce production primary_expression -> string_literals_list
-- On RIGHT_ASSIGN reduce production primary_expression -> string_literals_list
-- On RIGHT reduce production primary_expression -> string_literals_list
-- On RETURN reduce production primary_expression -> string_literals_list
-- On RESTRICT reduce production primary_expression -> string_literals_list
-- On REGISTER reduce production primary_expression -> string_literals_list
-- On RBRACK reduce production primary_expression -> string_literals_list
-- On RBRACE reduce production primary_expression -> string_literals_list
-- On QUESTION reduce production primary_expression -> string_literals_list
-- On PTR reduce production primary_expression -> string_literals_list
-- On PRE_NAME reduce production primary_expression -> string_literals_list
-- On PRAGMA reduce production primary_expression -> string_literals_list
-- On PLUS reduce production primary_expression -> string_literals_list
-- On PERCENT reduce production primary_expression -> string_literals_list
-- On PACKED reduce production primary_expression -> string_literals_list
-- On OR_ASSIGN reduce production primary_expression -> string_literals_list
-- On NEQ reduce production primary_expression -> string_literals_list
-- On MUL_ASSIGN reduce production primary_expression -> string_literals_list
-- On MOD_ASSIGN reduce production primary_expression -> string_literals_list
-- On MINUS reduce production primary_expression -> string_literals_list
-- On LT reduce production primary_expression -> string_literals_list
-- On LPAREN reduce production primary_expression -> string_literals_list
-- On LONG reduce production primary_expression -> string_literals_list
-- On LEQ reduce production primary_expression -> string_literals_list
-- On LEFT_ASSIGN reduce production primary_expression -> string_literals_list
-- On LEFT reduce production primary_expression -> string_literals_list
-- On LBRACK reduce production primary_expression -> string_literals_list
-- On LBRACE reduce production primary_expression -> string_literals_list
-- On INT reduce production primary_expression -> string_literals_list
-- On INLINE reduce production primary_expression -> string_literals_list
-- On INC reduce production primary_expression -> string_literals_list
-- On IF reduce production primary_expression -> string_literals_list
-- On HAT reduce production primary_expression -> string_literals_list
-- On GT reduce production primary_expression -> string_literals_list
-- On GOTO reduce production primary_expression -> string_literals_list
-- On GEQ reduce production primary_expression -> string_literals_list
-- On FOR reduce production primary_expression -> string_literals_list
-- On FLOAT reduce production primary_expression -> string_literals_list
-- On EXTERN reduce production primary_expression -> string_literals_list
-- On EQEQ reduce production primary_expression -> string_literals_list
-- On EQ reduce production primary_expression -> string_literals_list
-- On EOF reduce production primary_expression -> string_literals_list
-- On ENUM reduce production primary_expression -> string_literals_list
-- On ELSE reduce production primary_expression -> string_literals_list
-- On ELLIPSIS reduce production primary_expression -> string_literals_list
-- On DOUBLE reduce production primary_expression -> string_literals_list
-- On DOT reduce production primary_expression -> string_literals_list
-- On DO reduce production primary_expression -> string_literals_list
-- On DIV_ASSIGN reduce production primary_expression -> string_literals_list
-- On DEFAULT reduce production primary_expression -> string_literals_list
-- On DEC reduce production primary_expression -> string_literals_list
-- On CONTINUE reduce production primary_expression -> string_literals_list
-- On CONSTANT reduce production primary_expression -> string_literals_list
-- On CONST reduce production primary_expression -> string_literals_list
-- On COMMA reduce production primary_expression -> string_literals_list
-- On COLON reduce production primary_expression -> string_literals_list
-- On CHAR reduce production primary_expression -> string_literals_list
-- On CASE reduce production primary_expression -> string_literals_list
-- On BUILTIN_VA_ARG reduce production primary_expression -> string_literals_list
-- On BREAK reduce production primary_expression -> string_literals_list
-- On BARBAR reduce production primary_expression -> string_literals_list
-- On BAR reduce production primary_expression -> string_literals_list
-- On BANG reduce production primary_expression -> string_literals_list
-- On AUTO reduce production primary_expression -> string_literals_list
-- On ATTRIBUTE reduce production primary_expression -> string_literals_list
-- On ASM reduce production primary_expression -> string_literals_list
-- On AND_ASSIGN reduce production primary_expression -> string_literals_list
-- On ANDAND reduce production primary_expression -> string_literals_list
-- On AND reduce production primary_expression -> string_literals_list
-- On ALIGNOF reduce production primary_expression -> string_literals_list
-- On ALIGNAS reduce production primary_expression -> string_literals_list
-- On ADD_ASSIGN reduce production primary_expression -> string_literals_list

State 59:
## Known stack suffix:
## string_literals_list STRING_LITERAL
## LR(1) items:
string_literals_list -> string_literals_list STRING_LITERAL . [ XOR_ASSIGN SUB_ASSIGN STRING_LITERAL STAR SLASH SEMICOLON RPAREN RIGHT_ASSIGN RIGHT RBRACK RBRACE QUESTION PTR PLUS PERCENT OR_ASSIGN NEQ MUL_ASSIGN MOD_ASSIGN MINUS LT LPAREN LEQ LEFT_ASSIGN LEFT LBRACK INC HAT GT GEQ EQEQ EQ DOT DIV_ASSIGN DEC COMMA COLON BARBAR BAR AND_ASSIGN ANDAND AND ADD_ASSIGN ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production string_literals_list -> string_literals_list STRING_LITERAL

State 60:
## Known stack suffix:
## primary_expression
## LR(1) items:
postfix_expression -> primary_expression . [ XOR_ASSIGN SUB_ASSIGN STAR SLASH SEMICOLON RPAREN RIGHT_ASSIGN RIGHT RBRACK RBRACE QUESTION PTR PLUS PERCENT OR_ASSIGN NEQ MUL_ASSIGN MOD_ASSIGN MINUS LT LPAREN LEQ LEFT_ASSIGN LEFT LBRACK INC HAT GT GEQ EQEQ EQ DOT DIV_ASSIGN DEC COMMA COLON BARBAR BAR AND_ASSIGN ANDAND AND ADD_ASSIGN ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production postfix_expression -> primary_expression

State 61:
## Known stack suffix:
## postfix_expression
## LR(1) items:
postfix_expression -> postfix_expression . LBRACK expression RBRACK [ XOR_ASSIGN SUB_ASSIGN STAR SLASH SEMICOLON RPAREN RIGHT_ASSIGN RIGHT RBRACK RBRACE QUESTION PTR PLUS PERCENT OR_ASSIGN NEQ MUL_ASSIGN MOD_ASSIGN MINUS LT LPAREN LEQ LEFT_ASSIGN LEFT LBRACK INC HAT GT GEQ EQEQ EQ DOT DIV_ASSIGN DEC COMMA COLON BARBAR BAR AND_ASSIGN ANDAND AND ADD_ASSIGN ]
postfix_expression -> postfix_expression . LPAREN option(argument_expression_list) RPAREN [ XOR_ASSIGN SUB_ASSIGN STAR SLASH SEMICOLON RPAREN RIGHT_ASSIGN RIGHT RBRACK RBRACE QUESTION PTR PLUS PERCENT OR_ASSIGN NEQ MUL_ASSIGN MOD_ASSIGN MINUS LT LPAREN LEQ LEFT_ASSIGN LEFT LBRACK INC HAT GT GEQ EQEQ EQ DOT DIV_ASSIGN DEC COMMA COLON BARBAR BAR AND_ASSIGN ANDAND AND ADD_ASSIGN ]
postfix_expression -> postfix_expression . DOT general_identifier [ XOR_ASSIGN SUB_ASSIGN STAR SLASH SEMICOLON RPAREN RIGHT_ASSIGN RIGHT RBRACK RBRACE QUESTION PTR PLUS PERCENT OR_ASSIGN NEQ MUL_ASSIGN MOD_ASSIGN MINUS LT LPAREN LEQ LEFT_ASSIGN LEFT LBRACK INC HAT GT GEQ EQEQ EQ DOT DIV_ASSIGN DEC COMMA COLON BARBAR BAR AND_ASSIGN ANDAND AND ADD_ASSIGN ]
postfix_expression -> postfix_expression . PTR general_identifier [ XOR_ASSIGN SUB_ASSIGN STAR SLASH SEMICOLON RPAREN RIGHT_ASSIGN RIGHT RBRACK RBRACE QUESTION PTR PLUS PERCENT OR_ASSIGN NEQ MUL_ASSIGN MOD_ASSIGN MINUS LT LPAREN LEQ LEFT_ASSIGN LEFT LBRACK INC HAT GT GEQ EQEQ EQ DOT DIV_ASSIGN DEC COMMA COLON BARBAR BAR AND_ASSIGN ANDAND AND ADD_ASSIGN ]
postfix_expression -> postfix_expression . INC [ XOR_ASSIGN SUB_ASSIGN STAR SLASH SEMICOLON RPAREN RIGHT_ASSIGN RIGHT RBRACK RBRACE QUESTION PTR PLUS PERCENT OR_ASSIGN NEQ MUL_ASSIGN MOD_ASSIGN MINUS LT LPAREN LEQ LEFT_ASSIGN LEFT LBRACK INC HAT GT GEQ EQEQ EQ DOT DIV_ASSIGN DEC COMMA COLON BARBAR BAR AND_ASSIGN ANDAND AND ADD_ASSIGN ]
postfix_expression -> postfix_expression . DEC [ XOR_ASSIGN SUB_ASSIGN STAR SLASH SEMICOLON RPAREN RIGHT_ASSIGN RIGHT RBRACK RBRACE QUESTION PTR PLUS PERCENT OR_ASSIGN NEQ MUL_ASSIGN MOD_ASSIGN MINUS LT LPAREN LEQ LEFT_ASSIGN LEFT LBRACK INC HAT GT GEQ EQEQ EQ DOT DIV_ASSIGN DEC COMMA COLON BARBAR BAR AND_ASSIGN ANDAND AND ADD_ASSIGN ]
unary_expression -> postfix_expression . [ XOR_ASSIGN SUB_ASSIGN STAR SLASH SEMICOLON RPAREN RIGHT_ASSIGN RIGHT RBRACK RBRACE QUESTION PLUS PERCENT OR_ASSIGN NEQ MUL_ASSIGN MOD_ASSIGN MINUS LT LEQ LEFT_ASSIGN LEFT HAT GT GEQ EQEQ EQ DIV_ASSIGN COMMA COLON BARBAR BAR AND_ASSIGN ANDAND AND ADD_ASSIGN ]
## Transitions:
-- On PTR shift to state 62
-- On LPAREN shift to state 64
-- On LBRACK shift to state 137
-- On INC shift to state 140
-- On DOT shift to state 141
-- On DEC shift to state 143
## Reductions:
-- On XOR_ASSIGN reduce production unary_expression -> postfix_expression
-- On WHILE reduce production unary_expression -> postfix_expression
-- On VOLATILE reduce production unary_expression -> postfix_expression
-- On VOID reduce production unary_expression -> postfix_expression
-- On VAR_NAME reduce production unary_expression -> postfix_expression
-- On UNSIGNED reduce production unary_expression -> postfix_expression
-- On UNION reduce production unary_expression -> postfix_expression
-- On UNDERSCORE_BOOL reduce production unary_expression -> postfix_expression
-- On TYPEDEF_NAME reduce production unary_expression -> postfix_expression
-- On TYPEDEF reduce production unary_expression -> postfix_expression
-- On TILDE reduce production unary_expression -> postfix_expression
-- On SWITCH reduce production unary_expression -> postfix_expression
-- On SUB_ASSIGN reduce production unary_expression -> postfix_expression
-- On STRUCT reduce production unary_expression -> postfix_expression
-- On STRING_LITERAL reduce production unary_expression -> postfix_expression
-- On STATIC reduce production unary_expression -> postfix_expression
-- On STAR reduce production unary_expression -> postfix_expression
-- On SLASH reduce production unary_expression -> postfix_expression
-- On SIZEOF reduce production unary_expression -> postfix_expression
-- On SIGNED reduce production unary_expression -> postfix_expression
-- On SHORT reduce production unary_expression -> postfix_expression
-- On SEMICOLON reduce production unary_expression -> postfix_expression
-- On RPAREN reduce production unary_expression -> postfix_expression
-- On RIGHT_ASSIGN reduce production unary_expression -> postfix_expression
-- On RIGHT reduce production unary_expression -> postfix_expression
-- On RETURN reduce production unary_expression -> postfix_expression
-- On RESTRICT reduce production unary_expression -> postfix_expression
-- On REGISTER reduce production unary_expression -> postfix_expression
-- On RBRACK reduce production unary_expression -> postfix_expression
-- On RBRACE reduce production unary_expression -> postfix_expression
-- On QUESTION reduce production unary_expression -> postfix_expression
-- On PRE_NAME reduce production unary_expression -> postfix_expression
-- On PRAGMA reduce production unary_expression -> postfix_expression
-- On PLUS reduce production unary_expression -> postfix_expression
-- On PERCENT reduce production unary_expression -> postfix_expression
-- On PACKED reduce production unary_expression -> postfix_expression
-- On OR_ASSIGN reduce production unary_expression -> postfix_expression
-- On NEQ reduce production unary_expression -> postfix_expression
-- On MUL_ASSIGN reduce production unary_expression -> postfix_expression
-- On MOD_ASSIGN reduce production unary_expression -> postfix_expression
-- On MINUS reduce production unary_expression -> postfix_expression
-- On LT reduce production unary_expression -> postfix_expression
-- On LONG reduce production unary_expression -> postfix_expression
-- On LEQ reduce production unary_expression -> postfix_expression
-- On LEFT_ASSIGN reduce production unary_expression -> postfix_expression
-- On LEFT reduce production unary_expression -> postfix_expression
-- On LBRACE reduce production unary_expression -> postfix_expression
-- On INT reduce production unary_expression -> postfix_expression
-- On INLINE reduce production unary_expression -> postfix_expression
-- On IF reduce production unary_expression -> postfix_expression
-- On HAT reduce production unary_expression -> postfix_expression
-- On GT reduce production unary_expression -> postfix_expression
-- On GOTO reduce production unary_expression -> postfix_expression
-- On GEQ reduce production unary_expression -> postfix_expression
-- On FOR reduce production unary_expression -> postfix_expression
-- On FLOAT reduce production unary_expression -> postfix_expression
-- On EXTERN reduce production unary_expression -> postfix_expression
-- On EQEQ reduce production unary_expression -> postfix_expression
-- On EQ reduce production unary_expression -> postfix_expression
-- On EOF reduce production unary_expression -> postfix_expression
-- On ENUM reduce production unary_expression -> postfix_expression
-- On ELSE reduce production unary_expression -> postfix_expression
-- On ELLIPSIS reduce production unary_expression -> postfix_expression
-- On DOUBLE reduce production unary_expression -> postfix_expression
-- On DO reduce production unary_expression -> postfix_expression
-- On DIV_ASSIGN reduce production unary_expression -> postfix_expression
-- On DEFAULT reduce production unary_expression -> postfix_expression
-- On CONTINUE reduce production unary_expression -> postfix_expression
-- On CONSTANT reduce production unary_expression -> postfix_expression
-- On CONST reduce production unary_expression -> postfix_expression
-- On COMMA reduce production unary_expression -> postfix_expression
-- On COLON reduce production unary_expression -> postfix_expression
-- On CHAR reduce production unary_expression -> postfix_expression
-- On CASE reduce production unary_expression -> postfix_expression
-- On BUILTIN_VA_ARG reduce production unary_expression -> postfix_expression
-- On BREAK reduce production unary_expression -> postfix_expression
-- On BARBAR reduce production unary_expression -> postfix_expression
-- On BAR reduce production unary_expression -> postfix_expression
-- On BANG reduce production unary_expression -> postfix_expression
-- On AUTO reduce production unary_expression -> postfix_expression
-- On ATTRIBUTE reduce production unary_expression -> postfix_expression
-- On ASM reduce production unary_expression -> postfix_expression
-- On AND_ASSIGN reduce production unary_expression -> postfix_expression
-- On ANDAND reduce production unary_expression -> postfix_expression
-- On AND reduce production unary_expression -> postfix_expression
-- On ALIGNOF reduce production unary_expression -> postfix_expression
-- On ALIGNAS reduce production unary_expression -> postfix_expression
-- On ADD_ASSIGN reduce production unary_expression -> postfix_expression

State 62:
## Known stack suffix:
## postfix_expression PTR
## LR(1) items:
postfix_expression -> postfix_expression PTR . general_identifier [ XOR_ASSIGN SUB_ASSIGN STAR SLASH SEMICOLON RPAREN RIGHT_ASSIGN RIGHT RBRACK RBRACE QUESTION PTR PLUS PERCENT OR_ASSIGN NEQ MUL_ASSIGN MOD_ASSIGN MINUS LT LPAREN LEQ LEFT_ASSIGN LEFT LBRACK INC HAT GT GEQ EQEQ EQ DOT DIV_ASSIGN DEC COMMA COLON BARBAR BAR AND_ASSIGN ANDAND AND ADD_ASSIGN ]
## Transitions:
-- On PRE_NAME shift to state 38
-- On typedef_name shift to state 42
-- On general_identifier shift to state 63
## Reductions:

State 63:
## Known stack suffix:
## postfix_expression PTR general_identifier
## LR(1) items:
postfix_expression -> postfix_expression PTR general_identifier . [ XOR_ASSIGN SUB_ASSIGN STAR SLASH SEMICOLON RPAREN RIGHT_ASSIGN RIGHT RBRACK RBRACE QUESTION PTR PLUS PERCENT OR_ASSIGN NEQ MUL_ASSIGN MOD_ASSIGN MINUS LT LPAREN LEQ LEFT_ASSIGN LEFT LBRACK INC HAT GT GEQ EQEQ EQ DOT DIV_ASSIGN DEC COMMA COLON BARBAR BAR AND_ASSIGN ANDAND AND ADD_ASSIGN ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production postfix_expression -> postfix_expression PTR general_identifier

State 64:
## Known stack suffix:
## postfix_expression LPAREN
## LR(1) items:
postfix_expression -> postfix_expression LPAREN . option(argument_expression_list) RPAREN [ XOR_ASSIGN SUB_ASSIGN STAR SLASH SEMICOLON RPAREN RIGHT_ASSIGN RIGHT RBRACK RBRACE QUESTION PTR PLUS PERCENT OR_ASSIGN NEQ MUL_ASSIGN MOD_ASSIGN MINUS LT LPAREN LEQ LEFT_ASSIGN LEFT LBRACK INC HAT GT GEQ EQEQ EQ DOT DIV_ASSIGN DEC COMMA COLON BARBAR BAR AND_ASSIGN ANDAND AND ADD_ASSIGN ]
## Transitions:
-- On TILDE shift to state 18
-- On STRING_LITERAL shift to state 19
-- On STAR shift to state 20
-- On SIZEOF shift to state 21
-- On PRE_NAME shift to state 22
-- On PLUS shift to state 24
-- On MINUS shift to state 25
-- On LPAREN shift to state 28
-- On INC shift to state 31
-- On DEC shift to state 46
-- On CONSTANT shift to state 47
-- On BUILTIN_VA_ARG shift to state 48
-- On BANG shift to state 50
-- On AND shift to state 51
-- On ALIGNOF shift to state 52
-- On unary_operator shift to state 56
-- On unary_expression shift to state 65
-- On string_literals_list shift to state 58
-- On shift_expression shift to state 78
-- On relational_expression shift to state 94
-- On primary_expression shift to state 60
-- On postfix_expression shift to state 61
-- On option(argument_expression_list) shift to state 131
-- On multiplicative_expression shift to state 82
-- On logical_or_expression shift to state 102
-- On logical_and_expression shift to state 104
-- On inclusive_or_expression shift to state 120
-- On exclusive_or_expression shift to state 119
-- On equality_expression shift to state 110
-- On conditional_expression shift to state 123
-- On cast_expression shift to state 88
-- On assignment_expression shift to state 133
-- On argument_expression_list shift to state 134
-- On and_expression shift to state 118
-- On additive_expression shift to state 101
## Reductions:
-- On RPAREN reduce production option(argument_expression_list) ->

State 65:
## Known stack suffix:
## unary_expression
## LR(1) items:
assignment_expression -> unary_expression . assignment_operator assignment_expression [ SEMICOLON RPAREN RBRACK RBRACE COMMA COLON ]
cast_expression -> unary_expression . [ STAR SLASH SEMICOLON RPAREN RIGHT RBRACK RBRACE QUESTION PLUS PERCENT NEQ MINUS LT LEQ LEFT HAT GT GEQ EQEQ COMMA COLON BARBAR BAR ANDAND AND ]
## Transitions:
-- On XOR_ASSIGN shift to state 66
-- On SUB_ASSIGN shift to state 67
-- On RIGHT_ASSIGN shift to state 68
-- On OR_ASSIGN shift to state 69
-- On MUL_ASSIGN shift to state 70
-- On MOD_ASSIGN shift to state 71
-- On LEFT_ASSIGN shift to state 72
-- On EQ shift to state 73
-- On DIV_ASSIGN shift to state 74
-- On AND_ASSIGN shift to state 75
-- On ADD_ASSIGN shift to state 76
-- On assignment_operator shift to state 77
## Reductions:
-- On WHILE reduce production cast_expression -> unary_expression
-- On VOLATILE reduce production cast_expression -> unary_expression
-- On VOID reduce production cast_expression -> unary_expression
-- On VAR_NAME reduce production cast_expression -> unary_expression
-- On UNSIGNED reduce production cast_expression -> unary_expression
-- On UNION reduce production cast_expression -> unary_expression
-- On UNDERSCORE_BOOL reduce production cast_expression -> unary_expression
-- On TYPEDEF_NAME reduce production cast_expression -> unary_expression
-- On TYPEDEF reduce production cast_expression -> unary_expression
-- On TILDE reduce production cast_expression -> unary_expression
-- On SWITCH reduce production cast_expression -> unary_expression
-- On STRUCT reduce production cast_expression -> unary_expression
-- On STRING_LITERAL reduce production cast_expression -> unary_expression
-- On STATIC reduce production cast_expression -> unary_expression
-- On STAR reduce production cast_expression -> unary_expression
-- On SLASH reduce production cast_expression -> unary_expression
-- On SIZEOF reduce production cast_expression -> unary_expression
-- On SIGNED reduce production cast_expression -> unary_expression
-- On SHORT reduce production cast_expression -> unary_expression
-- On SEMICOLON reduce production cast_expression -> unary_expression
-- On RPAREN reduce production cast_expression -> unary_expression
-- On RIGHT reduce production cast_expression -> unary_expression
-- On RETURN reduce production cast_expression -> unary_expression
-- On RESTRICT reduce production cast_expression -> unary_expression
-- On REGISTER reduce production cast_expression -> unary_expression
-- On RBRACK reduce production cast_expression -> unary_expression
-- On RBRACE reduce production cast_expression -> unary_expression
-- On QUESTION reduce production cast_expression -> unary_expression
-- On PTR reduce production cast_expression -> unary_expression
-- On PRE_NAME reduce production cast_expression -> unary_expression
-- On PRAGMA reduce production cast_expression -> unary_expression
-- On PLUS reduce production cast_expression -> unary_expression
-- On PERCENT reduce production cast_expression -> unary_expression
-- On PACKED reduce production cast_expression -> unary_expression
-- On NEQ reduce production cast_expression -> unary_expression
-- On MINUS reduce production cast_expression -> unary_expression
-- On LT reduce production cast_expression -> unary_expression
-- On LPAREN reduce production cast_expression -> unary_expression
-- On LONG reduce production cast_expression -> unary_expression
-- On LEQ reduce production cast_expression -> unary_expression
-- On LEFT reduce production cast_expression -> unary_expression
-- On LBRACK reduce production cast_expression -> unary_expression
-- On LBRACE reduce production cast_expression -> unary_expression
-- On INT reduce production cast_expression -> unary_expression
-- On INLINE reduce production cast_expression -> unary_expression
-- On INC reduce production cast_expression -> unary_expression
-- On IF reduce production cast_expression -> unary_expression
-- On HAT reduce production cast_expression -> unary_expression
-- On GT reduce production cast_expression -> unary_expression
-- On GOTO reduce production cast_expression -> unary_expression
-- On GEQ reduce production cast_expression -> unary_expression
-- On FOR reduce production cast_expression -> unary_expression
-- On FLOAT reduce production cast_expression -> unary_expression
-- On EXTERN reduce production cast_expression -> unary_expression
-- On EQEQ reduce production cast_expression -> unary_expression
-- On EOF reduce production cast_expression -> unary_expression
-- On ENUM reduce production cast_expression -> unary_expression
-- On ELSE reduce production cast_expression -> unary_expression
-- On ELLIPSIS reduce production cast_expression -> unary_expression
-- On DOUBLE reduce production cast_expression -> unary_expression
-- On DOT reduce production cast_expression -> unary_expression
-- On DO reduce production cast_expression -> unary_expression
-- On DEFAULT reduce production cast_expression -> unary_expression
-- On DEC reduce production cast_expression -> unary_expression
-- On CONTINUE reduce production cast_expression -> unary_expression
-- On CONSTANT reduce production cast_expression -> unary_expression
-- On CONST reduce production cast_expression -> unary_expression
-- On COMMA reduce production cast_expression -> unary_expression
-- On COLON reduce production cast_expression -> unary_expression
-- On CHAR reduce production cast_expression -> unary_expression
-- On CASE reduce production cast_expression -> unary_expression
-- On BUILTIN_VA_ARG reduce production cast_expression -> unary_expression
-- On BREAK reduce production cast_expression -> unary_expression
-- On BARBAR reduce production cast_expression -> unary_expression
-- On BAR reduce production cast_expression -> unary_expression
-- On BANG reduce production cast_expression -> unary_expression
-- On AUTO reduce production cast_expression -> unary_expression
-- On ATTRIBUTE reduce production cast_expression -> unary_expression
-- On ASM reduce production cast_expression -> unary_expression
-- On ANDAND reduce production cast_expression -> unary_expression
-- On AND reduce production cast_expression -> unary_expression
-- On ALIGNOF reduce production cast_expression -> unary_expression
-- On ALIGNAS reduce production cast_expression -> unary_expression

State 66:
## Known stack suffix:
## XOR_ASSIGN
## LR(1) items:
assignment_operator -> XOR_ASSIGN . [ TILDE STRING_LITERAL STAR SIZEOF PRE_NAME PLUS MINUS LPAREN INC DEC CONSTANT BUILTIN_VA_ARG BANG AND ALIGNOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production assignment_operator -> XOR_ASSIGN

State 67:
## Known stack suffix:
## SUB_ASSIGN
## LR(1) items:
assignment_operator -> SUB_ASSIGN . [ TILDE STRING_LITERAL STAR SIZEOF PRE_NAME PLUS MINUS LPAREN INC DEC CONSTANT BUILTIN_VA_ARG BANG AND ALIGNOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production assignment_operator -> SUB_ASSIGN

State 68:
## Known stack suffix:
## RIGHT_ASSIGN
## LR(1) items:
assignment_operator -> RIGHT_ASSIGN . [ TILDE STRING_LITERAL STAR SIZEOF PRE_NAME PLUS MINUS LPAREN INC DEC CONSTANT BUILTIN_VA_ARG BANG AND ALIGNOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production assignment_operator -> RIGHT_ASSIGN

State 69:
## Known stack suffix:
## OR_ASSIGN
## LR(1) items:
assignment_operator -> OR_ASSIGN . [ TILDE STRING_LITERAL STAR SIZEOF PRE_NAME PLUS MINUS LPAREN INC DEC CONSTANT BUILTIN_VA_ARG BANG AND ALIGNOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production assignment_operator -> OR_ASSIGN

State 70:
## Known stack suffix:
## MUL_ASSIGN
## LR(1) items:
assignment_operator -> MUL_ASSIGN . [ TILDE STRING_LITERAL STAR SIZEOF PRE_NAME PLUS MINUS LPAREN INC DEC CONSTANT BUILTIN_VA_ARG BANG AND ALIGNOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production assignment_operator -> MUL_ASSIGN

State 71:
## Known stack suffix:
## MOD_ASSIGN
## LR(1) items:
assignment_operator -> MOD_ASSIGN . [ TILDE STRING_LITERAL STAR SIZEOF PRE_NAME PLUS MINUS LPAREN INC DEC CONSTANT BUILTIN_VA_ARG BANG AND ALIGNOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production assignment_operator -> MOD_ASSIGN

State 72:
## Known stack suffix:
## LEFT_ASSIGN
## LR(1) items:
assignment_operator -> LEFT_ASSIGN . [ TILDE STRING_LITERAL STAR SIZEOF PRE_NAME PLUS MINUS LPAREN INC DEC CONSTANT BUILTIN_VA_ARG BANG AND ALIGNOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production assignment_operator -> LEFT_ASSIGN

State 73:
## Known stack suffix:
## EQ
## LR(1) items:
assignment_operator -> EQ . [ TILDE STRING_LITERAL STAR SIZEOF PRE_NAME PLUS MINUS LPAREN INC DEC CONSTANT BUILTIN_VA_ARG BANG AND ALIGNOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production assignment_operator -> EQ

State 74:
## Known stack suffix:
## DIV_ASSIGN
## LR(1) items:
assignment_operator -> DIV_ASSIGN . [ TILDE STRING_LITERAL STAR SIZEOF PRE_NAME PLUS MINUS LPAREN INC DEC CONSTANT BUILTIN_VA_ARG BANG AND ALIGNOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production assignment_operator -> DIV_ASSIGN

State 75:
## Known stack suffix:
## AND_ASSIGN
## LR(1) items:
assignment_operator -> AND_ASSIGN . [ TILDE STRING_LITERAL STAR SIZEOF PRE_NAME PLUS MINUS LPAREN INC DEC CONSTANT BUILTIN_VA_ARG BANG AND ALIGNOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production assignment_operator -> AND_ASSIGN

State 76:
## Known stack suffix:
## ADD_ASSIGN
## LR(1) items:
assignment_operator -> ADD_ASSIGN . [ TILDE STRING_LITERAL STAR SIZEOF PRE_NAME PLUS MINUS LPAREN INC DEC CONSTANT BUILTIN_VA_ARG BANG AND ALIGNOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production assignment_operator -> ADD_ASSIGN

State 77:
## Known stack suffix:
## unary_expression assignment_operator
## LR(1) items:
assignment_expression -> unary_expression assignment_operator . assignment_expression [ SEMICOLON RPAREN RBRACK RBRACE COMMA COLON ]
## Transitions:
-- On TILDE shift to state 18
-- On STRING_LITERAL shift to state 19
-- On STAR shift to state 20
-- On SIZEOF shift to state 21
-- On PRE_NAME shift to state 22
-- On PLUS shift to state 24
-- On MINUS shift to state 25
-- On LPAREN shift to state 28
-- On INC shift to state 31
-- On DEC shift to state 46
-- On CONSTANT shift to state 47
-- On BUILTIN_VA_ARG shift to state 48
-- On BANG shift to state 50
-- On AND shift to state 51
-- On ALIGNOF shift to state 52
-- On unary_operator shift to state 56
-- On unary_expression shift to state 65
-- On string_literals_list shift to state 58
-- On shift_expression shift to state 78
-- On relational_expression shift to state 94
-- On primary_expression shift to state 60
-- On postfix_expression shift to state 61
-- On multiplicative_expression shift to state 82
-- On logical_or_expression shift to state 102
-- On logical_and_expression shift to state 104
-- On inclusive_or_expression shift to state 120
-- On exclusive_or_expression shift to state 119
-- On equality_expression shift to state 110
-- On conditional_expression shift to state 123
-- On cast_expression shift to state 88
-- On assignment_expression shift to state 130
-- On and_expression shift to state 118
-- On additive_expression shift to state 101
## Reductions:

State 78:
## Known stack suffix:
## shift_expression
## LR(1) items:
relational_expression -> shift_expression . [ SEMICOLON RPAREN RBRACK RBRACE QUESTION NEQ LT LEQ HAT GT GEQ EQEQ COMMA COLON BARBAR BAR ANDAND AND ]
shift_expression -> shift_expression . shift_operator additive_expression [ SEMICOLON RPAREN RIGHT RBRACK RBRACE QUESTION NEQ LT LEQ LEFT HAT GT GEQ EQEQ COMMA COLON BARBAR BAR ANDAND AND ]
## Transitions:
-- On RIGHT shift to state 79
-- On LEFT shift to state 80
-- On shift_operator shift to state 81
## Reductions:
-- On XOR_ASSIGN reduce production relational_expression -> shift_expression
-- On WHILE reduce production relational_expression -> shift_expression
-- On VOLATILE reduce production relational_expression -> shift_expression
-- On VOID reduce production relational_expression -> shift_expression
-- On VAR_NAME reduce production relational_expression -> shift_expression
-- On UNSIGNED reduce production relational_expression -> shift_expression
-- On UNION reduce production relational_expression -> shift_expression
-- On UNDERSCORE_BOOL reduce production relational_expression -> shift_expression
-- On TYPEDEF_NAME reduce production relational_expression -> shift_expression
-- On TYPEDEF reduce production relational_expression -> shift_expression
-- On TILDE reduce production relational_expression -> shift_expression
-- On SWITCH reduce production relational_expression -> shift_expression
-- On SUB_ASSIGN reduce production relational_expression -> shift_expression
-- On STRUCT reduce production relational_expression -> shift_expression
-- On STRING_LITERAL reduce production relational_expression -> shift_expression
-- On STATIC reduce production relational_expression -> shift_expression
-- On STAR reduce production relational_expression -> shift_expression
-- On SLASH reduce production relational_expression -> shift_expression
-- On SIZEOF reduce production relational_expression -> shift_expression
-- On SIGNED reduce production relational_expression -> shift_expression
-- On SHORT reduce production relational_expression -> shift_expression
-- On SEMICOLON reduce production relational_expression -> shift_expression
-- On RPAREN reduce production relational_expression -> shift_expression
-- On RIGHT_ASSIGN reduce production relational_expression -> shift_expression
-- On RETURN reduce production relational_expression -> shift_expression
-- On RESTRICT reduce production relational_expression -> shift_expression
-- On REGISTER reduce production relational_expression -> shift_expression
-- On RBRACK reduce production relational_expression -> shift_expression
-- On RBRACE reduce production relational_expression -> shift_expression
-- On QUESTION reduce production relational_expression -> shift_expression
-- On PTR reduce production relational_expression -> shift_expression
-- On PRE_NAME reduce production relational_expression -> shift_expression
-- On PRAGMA reduce production relational_expression -> shift_expression
-- On PLUS reduce production relational_expression -> shift_expression
-- On PERCENT reduce production relational_expression -> shift_expression
-- On PACKED reduce production relational_expression -> shift_expression
-- On OR_ASSIGN reduce production relational_expression -> shift_expression
-- On NEQ reduce production relational_expression -> shift_expression
-- On MUL_ASSIGN reduce production relational_expression -> shift_expression
-- On MOD_ASSIGN reduce production relational_expression -> shift_expression
-- On MINUS reduce production relational_expression -> shift_expression
-- On LT reduce production relational_expression -> shift_expression
-- On LPAREN reduce production relational_expression -> shift_expression
-- On LONG reduce production relational_expression -> shift_expression
-- On LEQ reduce production relational_expression -> shift_expression
-- On LEFT_ASSIGN reduce production relational_expression -> shift_expression
-- On LBRACK reduce production relational_expression -> shift_expression
-- On LBRACE reduce production relational_expression -> shift_expression
-- On INT reduce production relational_expression -> shift_expression
-- On INLINE reduce production relational_expression -> shift_expression
-- On INC reduce production relational_expression -> shift_expression
-- On IF reduce production relational_expression -> shift_expression
-- On HAT reduce production relational_expression -> shift_expression
-- On GT reduce production relational_expression -> shift_expression
-- On GOTO reduce production relational_expression -> shift_expression
-- On GEQ reduce production relational_expression -> shift_expression
-- On FOR reduce production relational_expression -> shift_expression
-- On FLOAT reduce production relational_expression -> shift_expression
-- On EXTERN reduce production relational_expression -> shift_expression
-- On EQEQ reduce production relational_expression -> shift_expression
-- On EQ reduce production relational_expression -> shift_expression
-- On EOF reduce production relational_expression -> shift_expression
-- On ENUM reduce production relational_expression -> shift_expression
-- On ELSE reduce production relational_expression -> shift_expression
-- On ELLIPSIS reduce production relational_expression -> shift_expression
-- On DOUBLE reduce production relational_expression -> shift_expression
-- On DOT reduce production relational_expression -> shift_expression
-- On DO reduce production relational_expression -> shift_expression
-- On DIV_ASSIGN reduce production relational_expression -> shift_expression
-- On DEFAULT reduce production relational_expression -> shift_expression
-- On DEC reduce production relational_expression -> shift_expression
-- On CONTINUE reduce production relational_expression -> shift_expression
-- On CONSTANT reduce production relational_expression -> shift_expression
-- On CONST reduce production relational_expression -> shift_expression
-- On COMMA reduce production relational_expression -> shift_expression
-- On COLON reduce production relational_expression -> shift_expression
-- On CHAR reduce production relational_expression -> shift_expression
-- On CASE reduce production relational_expression -> shift_expression
-- On BUILTIN_VA_ARG reduce production relational_expression -> shift_expression
-- On BREAK reduce production relational_expression -> shift_expression
-- On BARBAR reduce production relational_expression -> shift_expression
-- On BAR reduce production relational_expression -> shift_expression
-- On BANG reduce production relational_expression -> shift_expression
-- On AUTO reduce production relational_expression -> shift_expression
-- On ATTRIBUTE reduce production relational_expression -> shift_expression
-- On ASM reduce production relational_expression -> shift_expression
-- On AND_ASSIGN reduce production relational_expression -> shift_expression
-- On ANDAND reduce production relational_expression -> shift_expression
-- On AND reduce production relational_expression -> shift_expression
-- On ALIGNOF reduce production relational_expression -> shift_expression
-- On ALIGNAS reduce production relational_expression -> shift_expression
-- On ADD_ASSIGN reduce production relational_expression -> shift_expression

State 79:
## Known stack suffix:
## RIGHT
## LR(1) items:
shift_operator -> RIGHT . [ TILDE STRING_LITERAL STAR SIZEOF PRE_NAME PLUS MINUS LPAREN INC DEC CONSTANT BUILTIN_VA_ARG BANG AND ALIGNOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production shift_operator -> RIGHT

State 80:
## Known stack suffix:
## LEFT
## LR(1) items:
shift_operator -> LEFT . [ TILDE STRING_LITERAL STAR SIZEOF PRE_NAME PLUS MINUS LPAREN INC DEC CONSTANT BUILTIN_VA_ARG BANG AND ALIGNOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production shift_operator -> LEFT

State 81:
## Known stack suffix:
## shift_expression shift_operator
## LR(1) items:
shift_expression -> shift_expression shift_operator . additive_expression [ SEMICOLON RPAREN RIGHT RBRACK RBRACE QUESTION NEQ LT LEQ LEFT HAT GT GEQ EQEQ COMMA COLON BARBAR BAR ANDAND AND ]
## Transitions:
-- On TILDE shift to state 18
-- On STRING_LITERAL shift to state 19
-- On STAR shift to state 20
-- On SIZEOF shift to state 21
-- On PRE_NAME shift to state 22
-- On PLUS shift to state 24
-- On MINUS shift to state 25
-- On LPAREN shift to state 28
-- On INC shift to state 31
-- On DEC shift to state 46
-- On CONSTANT shift to state 47
-- On BUILTIN_VA_ARG shift to state 48
-- On BANG shift to state 50
-- On AND shift to state 51
-- On ALIGNOF shift to state 52
-- On unary_operator shift to state 56
-- On unary_expression shift to state 57
-- On string_literals_list shift to state 58
-- On primary_expression shift to state 60
-- On postfix_expression shift to state 61
-- On multiplicative_expression shift to state 82
-- On cast_expression shift to state 88
-- On additive_expression shift to state 89
## Reductions:

State 82:
## Known stack suffix:
## multiplicative_expression
## LR(1) items:
additive_expression -> multiplicative_expression . [ SEMICOLON RPAREN RIGHT RBRACK RBRACE QUESTION PLUS NEQ MINUS LT LEQ LEFT HAT GT GEQ EQEQ COMMA COLON BARBAR BAR ANDAND AND ]
multiplicative_expression -> multiplicative_expression . multiplicative_operator cast_expression [ STAR SLASH SEMICOLON RPAREN RIGHT RBRACK RBRACE QUESTION PLUS PERCENT NEQ MINUS LT LEQ LEFT HAT GT GEQ EQEQ COMMA COLON BARBAR BAR ANDAND AND ]
## Transitions:
-- On STAR shift to state 83
-- On SLASH shift to state 84
-- On PERCENT shift to state 85
-- On multiplicative_operator shift to state 86
## Reductions:
-- On XOR_ASSIGN reduce production additive_expression -> multiplicative_expression
-- On WHILE reduce production additive_expression -> multiplicative_expression
-- On VOLATILE reduce production additive_expression -> multiplicative_expression
-- On VOID reduce production additive_expression -> multiplicative_expression
-- On VAR_NAME reduce production additive_expression -> multiplicative_expression
-- On UNSIGNED reduce production additive_expression -> multiplicative_expression
-- On UNION reduce production additive_expression -> multiplicative_expression
-- On UNDERSCORE_BOOL reduce production additive_expression -> multiplicative_expression
-- On TYPEDEF_NAME reduce production additive_expression -> multiplicative_expression
-- On TYPEDEF reduce production additive_expression -> multiplicative_expression
-- On TILDE reduce production additive_expression -> multiplicative_expression
-- On SWITCH reduce production additive_expression -> multiplicative_expression
-- On SUB_ASSIGN reduce production additive_expression -> multiplicative_expression
-- On STRUCT reduce production additive_expression -> multiplicative_expression
-- On STRING_LITERAL reduce production additive_expression -> multiplicative_expression
-- On STATIC reduce production additive_expression -> multiplicative_expression
-- On SIZEOF reduce production additive_expression -> multiplicative_expression
-- On SIGNED reduce production additive_expression -> multiplicative_expression
-- On SHORT reduce production additive_expression -> multiplicative_expression
-- On SEMICOLON reduce production additive_expression -> multiplicative_expression
-- On RPAREN reduce production additive_expression -> multiplicative_expression
-- On RIGHT_ASSIGN reduce production additive_expression -> multiplicative_expression
-- On RIGHT reduce production additive_expression -> multiplicative_expression
-- On RETURN reduce production additive_expression -> multiplicative_expression
-- On RESTRICT reduce production additive_expression -> multiplicative_expression
-- On REGISTER reduce production additive_expression -> multiplicative_expression
-- On RBRACK reduce production additive_expression -> multiplicative_expression
-- On RBRACE reduce production additive_expression -> multiplicative_expression
-- On QUESTION reduce production additive_expression -> multiplicative_expression
-- On PTR reduce production additive_expression -> multiplicative_expression
-- On PRE_NAME reduce production additive_expression -> multiplicative_expression
-- On PRAGMA reduce production additive_expression -> multiplicative_expression
-- On PLUS reduce production additive_expression -> multiplicative_expression
-- On PACKED reduce production additive_expression -> multiplicative_expression
-- On OR_ASSIGN reduce production additive_expression -> multiplicative_expression
-- On NEQ reduce production additive_expression -> multiplicative_expression
-- On MUL_ASSIGN reduce production additive_expression -> multiplicative_expression
-- On MOD_ASSIGN reduce production additive_expression -> multiplicative_expression
-- On MINUS reduce production additive_expression -> multiplicative_expression
-- On LT reduce production additive_expression -> multiplicative_expression
-- On LPAREN reduce production additive_expression -> multiplicative_expression
-- On LONG reduce production additive_expression -> multiplicative_expression
-- On LEQ reduce production additive_expression -> multiplicative_expression
-- On LEFT_ASSIGN reduce production additive_expression -> multiplicative_expression
-- On LEFT reduce production additive_expression -> multiplicative_expression
-- On LBRACK reduce production additive_expression -> multiplicative_expression
-- On LBRACE reduce production additive_expression -> multiplicative_expression
-- On INT reduce production additive_expression -> multiplicative_expression
-- On INLINE reduce production additive_expression -> multiplicative_expression
-- On INC reduce production additive_expression -> multiplicative_expression
-- On IF reduce production additive_expression -> multiplicative_expression
-- On HAT reduce production additive_expression -> multiplicative_expression
-- On GT reduce production additive_expression -> multiplicative_expression
-- On GOTO reduce production additive_expression -> multiplicative_expression
-- On GEQ reduce production additive_expression -> multiplicative_expression
-- On FOR reduce production additive_expression -> multiplicative_expression
-- On FLOAT reduce production additive_expression -> multiplicative_expression
-- On EXTERN reduce production additive_expression -> multiplicative_expression
-- On EQEQ reduce production additive_expression -> multiplicative_expression
-- On EQ reduce production additive_expression -> multiplicative_expression
-- On EOF reduce production additive_expression -> multiplicative_expression
-- On ENUM reduce production additive_expression -> multiplicative_expression
-- On ELSE reduce production additive_expression -> multiplicative_expression
-- On ELLIPSIS reduce production additive_expression -> multiplicative_expression
-- On DOUBLE reduce production additive_expression -> multiplicative_expression
-- On DOT reduce production additive_expression -> multiplicative_expression
-- On DO reduce production additive_expression -> multiplicative_expression
-- On DIV_ASSIGN reduce production additive_expression -> multiplicative_expression
-- On DEFAULT reduce production additive_expression -> multiplicative_expression
-- On DEC reduce production additive_expression -> multiplicative_expression
-- On CONTINUE reduce production additive_expression -> multiplicative_expression
-- On CONSTANT reduce production additive_expression -> multiplicative_expression
-- On CONST reduce production additive_expression -> multiplicative_expression
-- On COMMA reduce production additive_expression -> multiplicative_expression
-- On COLON reduce production additive_expression -> multiplicative_expression
-- On CHAR reduce production additive_expression -> multiplicative_expression
-- On CASE reduce production additive_expression -> multiplicative_expression
-- On BUILTIN_VA_ARG reduce production additive_expression -> multiplicative_expression
-- On BREAK reduce production additive_expression -> multiplicative_expression
-- On BARBAR reduce production additive_expression -> multiplicative_expression
-- On BAR reduce production additive_expression -> multiplicative_expression
-- On BANG reduce production additive_expression -> multiplicative_expression
-- On AUTO reduce production additive_expression -> multiplicative_expression
-- On ATTRIBUTE reduce production additive_expression -> multiplicative_expression
-- On ASM reduce production additive_expression -> multiplicative_expression
-- On AND_ASSIGN reduce production additive_expression -> multiplicative_expression
-- On ANDAND reduce production additive_expression -> multiplicative_expression
-- On AND reduce production additive_expression -> multiplicative_expression
-- On ALIGNOF reduce production additive_expression -> multiplicative_expression
-- On ALIGNAS reduce production additive_expression -> multiplicative_expression
-- On ADD_ASSIGN reduce production additive_expression -> multiplicative_expression

State 83:
## Known stack suffix:
## STAR
## LR(1) items:
multiplicative_operator -> STAR . [ TILDE STRING_LITERAL STAR SIZEOF PRE_NAME PLUS MINUS LPAREN INC DEC CONSTANT BUILTIN_VA_ARG BANG AND ALIGNOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production multiplicative_operator -> STAR

State 84:
## Known stack suffix:
## SLASH
## LR(1) items:
multiplicative_operator -> SLASH . [ TILDE STRING_LITERAL STAR SIZEOF PRE_NAME PLUS MINUS LPAREN INC DEC CONSTANT BUILTIN_VA_ARG BANG AND ALIGNOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production multiplicative_operator -> SLASH

State 85:
## Known stack suffix:
## PERCENT
## LR(1) items:
multiplicative_operator -> PERCENT . [ TILDE STRING_LITERAL STAR SIZEOF PRE_NAME PLUS MINUS LPAREN INC DEC CONSTANT BUILTIN_VA_ARG BANG AND ALIGNOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production multiplicative_operator -> PERCENT

State 86:
## Known stack suffix:
## multiplicative_expression multiplicative_operator
## LR(1) items:
multiplicative_expression -> multiplicative_expression multiplicative_operator . cast_expression [ STAR SLASH SEMICOLON RPAREN RIGHT RBRACK RBRACE QUESTION PLUS PERCENT NEQ MINUS LT LEQ LEFT HAT GT GEQ EQEQ COMMA COLON BARBAR BAR ANDAND AND ]
## Transitions:
-- On TILDE shift to state 18
-- On STRING_LITERAL shift to state 19
-- On STAR shift to state 20
-- On SIZEOF shift to state 21
-- On PRE_NAME shift to state 22
-- On PLUS shift to state 24
-- On MINUS shift to state 25
-- On LPAREN shift to state 28
-- On INC shift to state 31
-- On DEC shift to state 46
-- On CONSTANT shift to state 47
-- On BUILTIN_VA_ARG shift to state 48
-- On BANG shift to state 50
-- On AND shift to state 51
-- On ALIGNOF shift to state 52
-- On unary_operator shift to state 56
-- On unary_expression shift to state 57
-- On string_literals_list shift to state 58
-- On primary_expression shift to state 60
-- On postfix_expression shift to state 61
-- On cast_expression shift to state 87
## Reductions:

State 87:
## Known stack suffix:
## multiplicative_expression multiplicative_operator cast_expression
## LR(1) items:
multiplicative_expression -> multiplicative_expression multiplicative_operator cast_expression . [ STAR SLASH SEMICOLON RPAREN RIGHT RBRACK RBRACE QUESTION PLUS PERCENT NEQ MINUS LT LEQ LEFT HAT GT GEQ EQEQ COMMA COLON BARBAR BAR ANDAND AND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production multiplicative_expression -> multiplicative_expression multiplicative_operator cast_expression

State 88:
## Known stack suffix:
## cast_expression
## LR(1) items:
multiplicative_expression -> cast_expression . [ STAR SLASH SEMICOLON RPAREN RIGHT RBRACK RBRACE QUESTION PLUS PERCENT NEQ MINUS LT LEQ LEFT HAT GT GEQ EQEQ COMMA COLON BARBAR BAR ANDAND AND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production multiplicative_expression -> cast_expression

State 89:
## Known stack suffix:
## shift_expression shift_operator additive_expression
## LR(1) items:
additive_expression -> additive_expression . additive_operator multiplicative_expression [ SEMICOLON RPAREN RIGHT RBRACK RBRACE QUESTION PLUS NEQ MINUS LT LEQ LEFT HAT GT GEQ EQEQ COMMA COLON BARBAR BAR ANDAND AND ]
shift_expression -> shift_expression shift_operator additive_expression . [ SEMICOLON RPAREN RIGHT RBRACK RBRACE QUESTION NEQ LT LEQ LEFT HAT GT GEQ EQEQ COMMA COLON BARBAR BAR ANDAND AND ]
## Transitions:
-- On PLUS shift to state 90
-- On MINUS shift to state 91
-- On additive_operator shift to state 92
## Reductions:
-- On XOR_ASSIGN reduce production shift_expression -> shift_expression shift_operator additive_expression
-- On WHILE reduce production shift_expression -> shift_expression shift_operator additive_expression
-- On VOLATILE reduce production shift_expression -> shift_expression shift_operator additive_expression
-- On VOID reduce production shift_expression -> shift_expression shift_operator additive_expression
-- On VAR_NAME reduce production shift_expression -> shift_expression shift_operator additive_expression
-- On UNSIGNED reduce production shift_expression -> shift_expression shift_operator additive_expression
-- On UNION reduce production shift_expression -> shift_expression shift_operator additive_expression
-- On UNDERSCORE_BOOL reduce production shift_expression -> shift_expression shift_operator additive_expression
-- On TYPEDEF_NAME reduce production shift_expression -> shift_expression shift_operator additive_expression
-- On TYPEDEF reduce production shift_expression -> shift_expression shift_operator additive_expression
-- On TILDE reduce production shift_expression -> shift_expression shift_operator additive_expression
-- On SWITCH reduce production shift_expression -> shift_expression shift_operator additive_expression
-- On SUB_ASSIGN reduce production shift_expression -> shift_expression shift_operator additive_expression
-- On STRUCT reduce production shift_expression -> shift_expression shift_operator additive_expression
-- On STRING_LITERAL reduce production shift_expression -> shift_expression shift_operator additive_expression
-- On STATIC reduce production shift_expression -> shift_expression shift_operator additive_expression
-- On STAR reduce production shift_expression -> shift_expression shift_operator additive_expression
-- On SLASH reduce production shift_expression -> shift_expression shift_operator additive_expression
-- On SIZEOF reduce production shift_expression -> shift_expression shift_operator additive_expression
-- On SIGNED reduce production shift_expression -> shift_expression shift_operator additive_expression
-- On SHORT reduce production shift_expression -> shift_expression shift_operator additive_expression
-- On SEMICOLON reduce production shift_expression -> shift_expression shift_operator additive_expression
-- On RPAREN reduce production shift_expression -> shift_expression shift_operator additive_expression
-- On RIGHT_ASSIGN reduce production shift_expression -> shift_expression shift_operator additive_expression
-- On RIGHT reduce production shift_expression -> shift_expression shift_operator additive_expression
-- On RETURN reduce production shift_expression -> shift_expression shift_operator additive_expression
-- On RESTRICT reduce production shift_expression -> shift_expression shift_operator additive_expression
-- On REGISTER reduce production shift_expression -> shift_expression shift_operator additive_expression
-- On RBRACK reduce production shift_expression -> shift_expression shift_operator additive_expression
-- On RBRACE reduce production shift_expression -> shift_expression shift_operator additive_expression
-- On QUESTION reduce production shift_expression -> shift_expression shift_operator additive_expression
-- On PTR reduce production shift_expression -> shift_expression shift_operator additive_expression
-- On PRE_NAME reduce production shift_expression -> shift_expression shift_operator additive_expression
-- On PRAGMA reduce production shift_expression -> shift_expression shift_operator additive_expression
-- On PERCENT reduce production shift_expression -> shift_expression shift_operator additive_expression
-- On PACKED reduce production shift_expression -> shift_expression shift_operator additive_expression
-- On OR_ASSIGN reduce production shift_expression -> shift_expression shift_operator additive_expression
-- On NEQ reduce production shift_expression -> shift_expression shift_operator additive_expression
-- On MUL_ASSIGN reduce production shift_expression -> shift_expression shift_operator additive_expression
-- On MOD_ASSIGN reduce production shift_expression -> shift_expression shift_operator additive_expression
-- On LT reduce production shift_expression -> shift_expression shift_operator additive_expression
-- On LPAREN reduce production shift_expression -> shift_expression shift_operator additive_expression
-- On LONG reduce production shift_expression -> shift_expression shift_operator additive_expression
-- On LEQ reduce production shift_expression -> shift_expression shift_operator additive_expression
-- On LEFT_ASSIGN reduce production shift_expression -> shift_expression shift_operator additive_expression
-- On LEFT reduce production shift_expression -> shift_expression shift_operator additive_expression
-- On LBRACK reduce production shift_expression -> shift_expression shift_operator additive_expression
-- On LBRACE reduce production shift_expression -> shift_expression shift_operator additive_expression
-- On INT reduce production shift_expression -> shift_expression shift_operator additive_expression
-- On INLINE reduce production shift_expression -> shift_expression shift_operator additive_expression
-- On INC reduce production shift_expression -> shift_expression shift_operator additive_expression
-- On IF reduce production shift_expression -> shift_expression shift_operator additive_expression
-- On HAT reduce production shift_expression -> shift_expression shift_operator additive_expression
-- On GT reduce production shift_expression -> shift_expression shift_operator additive_expression
-- On GOTO reduce production shift_expression -> shift_expression shift_operator additive_expression
-- On GEQ reduce production shift_expression -> shift_expression shift_operator additive_expression
-- On FOR reduce production shift_expression -> shift_expression shift_operator additive_expression
-- On FLOAT reduce production shift_expression -> shift_expression shift_operator additive_expression
-- On EXTERN reduce production shift_expression -> shift_expression shift_operator additive_expression
-- On EQEQ reduce production shift_expression -> shift_expression shift_operator additive_expression
-- On EQ reduce production shift_expression -> shift_expression shift_operator additive_expression
-- On EOF reduce production shift_expression -> shift_expression shift_operator additive_expression
-- On ENUM reduce production shift_expression -> shift_expression shift_operator additive_expression
-- On ELSE reduce production shift_expression -> shift_expression shift_operator additive_expression
-- On ELLIPSIS reduce production shift_expression -> shift_expression shift_operator additive_expression
-- On DOUBLE reduce production shift_expression -> shift_expression shift_operator additive_expression
-- On DOT reduce production shift_expression -> shift_expression shift_operator additive_expression
-- On DO reduce production shift_expression -> shift_expression shift_operator additive_expression
-- On DIV_ASSIGN reduce production shift_expression -> shift_expression shift_operator additive_expression
-- On DEFAULT reduce production shift_expression -> shift_expression shift_operator additive_expression
-- On DEC reduce production shift_expression -> shift_expression shift_operator additive_expression
-- On CONTINUE reduce production shift_expression -> shift_expression shift_operator additive_expression
-- On CONSTANT reduce production shift_expression -> shift_expression shift_operator additive_expression
-- On CONST reduce production shift_expression -> shift_expression shift_operator additive_expression
-- On COMMA reduce production shift_expression -> shift_expression shift_operator additive_expression
-- On COLON reduce production shift_expression -> shift_expression shift_operator additive_expression
-- On CHAR reduce production shift_expression -> shift_expression shift_operator additive_expression
-- On CASE reduce production shift_expression -> shift_expression shift_operator additive_expression
-- On BUILTIN_VA_ARG reduce production shift_expression -> shift_expression shift_operator additive_expression
-- On BREAK reduce production shift_expression -> shift_expression shift_operator additive_expression
-- On BARBAR reduce production shift_expression -> shift_expression shift_operator additive_expression
-- On BAR reduce production shift_expression -> shift_expression shift_operator additive_expression
-- On BANG reduce production shift_expression -> shift_expression shift_operator additive_expression
-- On AUTO reduce production shift_expression -> shift_expression shift_operator additive_expression
-- On ATTRIBUTE reduce production shift_expression -> shift_expression shift_operator additive_expression
-- On ASM reduce production shift_expression -> shift_expression shift_operator additive_expression
-- On AND_ASSIGN reduce production shift_expression -> shift_expression shift_operator additive_expression
-- On ANDAND reduce production shift_expression -> shift_expression shift_operator additive_expression
-- On AND reduce production shift_expression -> shift_expression shift_operator additive_expression
-- On ALIGNOF reduce production shift_expression -> shift_expression shift_operator additive_expression
-- On ALIGNAS reduce production shift_expression -> shift_expression shift_operator additive_expression
-- On ADD_ASSIGN reduce production shift_expression -> shift_expression shift_operator additive_expression

State 90:
## Known stack suffix:
## PLUS
## LR(1) items:
additive_operator -> PLUS . [ TILDE STRING_LITERAL STAR SIZEOF PRE_NAME PLUS MINUS LPAREN INC DEC CONSTANT BUILTIN_VA_ARG BANG AND ALIGNOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production additive_operator -> PLUS

State 91:
## Known stack suffix:
## MINUS
## LR(1) items:
additive_operator -> MINUS . [ TILDE STRING_LITERAL STAR SIZEOF PRE_NAME PLUS MINUS LPAREN INC DEC CONSTANT BUILTIN_VA_ARG BANG AND ALIGNOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production additive_operator -> MINUS

State 92:
## Known stack suffix:
## additive_expression additive_operator
## LR(1) items:
additive_expression -> additive_expression additive_operator . multiplicative_expression [ SEMICOLON RPAREN RIGHT RBRACK RBRACE QUESTION PLUS NEQ MINUS LT LEQ LEFT HAT GT GEQ EQEQ COMMA COLON BARBAR BAR ANDAND AND ]
## Transitions:
-- On TILDE shift to state 18
-- On STRING_LITERAL shift to state 19
-- On STAR shift to state 20
-- On SIZEOF shift to state 21
-- On PRE_NAME shift to state 22
-- On PLUS shift to state 24
-- On MINUS shift to state 25
-- On LPAREN shift to state 28
-- On INC shift to state 31
-- On DEC shift to state 46
-- On CONSTANT shift to state 47
-- On BUILTIN_VA_ARG shift to state 48
-- On BANG shift to state 50
-- On AND shift to state 51
-- On ALIGNOF shift to state 52
-- On unary_operator shift to state 56
-- On unary_expression shift to state 57
-- On string_literals_list shift to state 58
-- On primary_expression shift to state 60
-- On postfix_expression shift to state 61
-- On multiplicative_expression shift to state 93
-- On cast_expression shift to state 88
## Reductions:

State 93:
## Known stack suffix:
## additive_expression additive_operator multiplicative_expression
## LR(1) items:
additive_expression -> additive_expression additive_operator multiplicative_expression . [ SEMICOLON RPAREN RIGHT RBRACK RBRACE QUESTION PLUS NEQ MINUS LT LEQ LEFT HAT GT GEQ EQEQ COMMA COLON BARBAR BAR ANDAND AND ]
multiplicative_expression -> multiplicative_expression . multiplicative_operator cast_expression [ STAR SLASH SEMICOLON RPAREN RIGHT RBRACK RBRACE QUESTION PLUS PERCENT NEQ MINUS LT LEQ LEFT HAT GT GEQ EQEQ COMMA COLON BARBAR BAR ANDAND AND ]
## Transitions:
-- On STAR shift to state 83
-- On SLASH shift to state 84
-- On PERCENT shift to state 85
-- On multiplicative_operator shift to state 86
## Reductions:
-- On XOR_ASSIGN reduce production additive_expression -> additive_expression additive_operator multiplicative_expression
-- On WHILE reduce production additive_expression -> additive_expression additive_operator multiplicative_expression
-- On VOLATILE reduce production additive_expression -> additive_expression additive_operator multiplicative_expression
-- On VOID reduce production additive_expression -> additive_expression additive_operator multiplicative_expression
-- On VAR_NAME reduce production additive_expression -> additive_expression additive_operator multiplicative_expression
-- On UNSIGNED reduce production additive_expression -> additive_expression additive_operator multiplicative_expression
-- On UNION reduce production additive_expression -> additive_expression additive_operator multiplicative_expression
-- On UNDERSCORE_BOOL reduce production additive_expression -> additive_expression additive_operator multiplicative_expression
-- On TYPEDEF_NAME reduce production additive_expression -> additive_expression additive_operator multiplicative_expression
-- On TYPEDEF reduce production additive_expression -> additive_expression additive_operator multiplicative_expression
-- On TILDE reduce production additive_expression -> additive_expression additive_operator multiplicative_expression
-- On SWITCH reduce production additive_expression -> additive_expression additive_operator multiplicative_expression
-- On SUB_ASSIGN reduce production additive_expression -> additive_expression additive_operator multiplicative_expression
-- On STRUCT reduce production additive_expression -> additive_expression additive_operator multiplicative_expression
-- On STRING_LITERAL reduce production additive_expression -> additive_expression additive_operator multiplicative_expression
-- On STATIC reduce production additive_expression -> additive_expression additive_operator multiplicative_expression
-- On SIZEOF reduce production additive_expression -> additive_expression additive_operator multiplicative_expression
-- On SIGNED reduce production additive_expression -> additive_expression additive_operator multiplicative_expression
-- On SHORT reduce production additive_expression -> additive_expression additive_operator multiplicative_expression
-- On SEMICOLON reduce production additive_expression -> additive_expression additive_operator multiplicative_expression
-- On RPAREN reduce production additive_expression -> additive_expression additive_operator multiplicative_expression
-- On RIGHT_ASSIGN reduce production additive_expression -> additive_expression additive_operator multiplicative_expression
-- On RIGHT reduce production additive_expression -> additive_expression additive_operator multiplicative_expression
-- On RETURN reduce production additive_expression -> additive_expression additive_operator multiplicative_expression
-- On RESTRICT reduce production additive_expression -> additive_expression additive_operator multiplicative_expression
-- On REGISTER reduce production additive_expression -> additive_expression additive_operator multiplicative_expression
-- On RBRACK reduce production additive_expression -> additive_expression additive_operator multiplicative_expression
-- On RBRACE reduce production additive_expression -> additive_expression additive_operator multiplicative_expression
-- On QUESTION reduce production additive_expression -> additive_expression additive_operator multiplicative_expression
-- On PTR reduce production additive_expression -> additive_expression additive_operator multiplicative_expression
-- On PRE_NAME reduce production additive_expression -> additive_expression additive_operator multiplicative_expression
-- On PRAGMA reduce production additive_expression -> additive_expression additive_operator multiplicative_expression
-- On PLUS reduce production additive_expression -> additive_expression additive_operator multiplicative_expression
-- On PACKED reduce production additive_expression -> additive_expression additive_operator multiplicative_expression
-- On OR_ASSIGN reduce production additive_expression -> additive_expression additive_operator multiplicative_expression
-- On NEQ reduce production additive_expression -> additive_expression additive_operator multiplicative_expression
-- On MUL_ASSIGN reduce production additive_expression -> additive_expression additive_operator multiplicative_expression
-- On MOD_ASSIGN reduce production additive_expression -> additive_expression additive_operator multiplicative_expression
-- On MINUS reduce production additive_expression -> additive_expression additive_operator multiplicative_expression
-- On LT reduce production additive_expression -> additive_expression additive_operator multiplicative_expression
-- On LPAREN reduce production additive_expression -> additive_expression additive_operator multiplicative_expression
-- On LONG reduce production additive_expression -> additive_expression additive_operator multiplicative_expression
-- On LEQ reduce production additive_expression -> additive_expression additive_operator multiplicative_expression
-- On LEFT_ASSIGN reduce production additive_expression -> additive_expression additive_operator multiplicative_expression
-- On LEFT reduce production additive_expression -> additive_expression additive_operator multiplicative_expression
-- On LBRACK reduce production additive_expression -> additive_expression additive_operator multiplicative_expression
-- On LBRACE reduce production additive_expression -> additive_expression additive_operator multiplicative_expression
-- On INT reduce production additive_expression -> additive_expression additive_operator multiplicative_expression
-- On INLINE reduce production additive_expression -> additive_expression additive_operator multiplicative_expression
-- On INC reduce production additive_expression -> additive_expression additive_operator multiplicative_expression
-- On IF reduce production additive_expression -> additive_expression additive_operator multiplicative_expression
-- On HAT reduce production additive_expression -> additive_expression additive_operator multiplicative_expression
-- On GT reduce production additive_expression -> additive_expression additive_operator multiplicative_expression
-- On GOTO reduce production additive_expression -> additive_expression additive_operator multiplicative_expression
-- On GEQ reduce production additive_expression -> additive_expression additive_operator multiplicative_expression
-- On FOR reduce production additive_expression -> additive_expression additive_operator multiplicative_expression
-- On FLOAT reduce production additive_expression -> additive_expression additive_operator multiplicative_expression
-- On EXTERN reduce production additive_expression -> additive_expression additive_operator multiplicative_expression
-- On EQEQ reduce production additive_expression -> additive_expression additive_operator multiplicative_expression
-- On EQ reduce production additive_expression -> additive_expression additive_operator multiplicative_expression
-- On EOF reduce production additive_expression -> additive_expression additive_operator multiplicative_expression
-- On ENUM reduce production additive_expression -> additive_expression additive_operator multiplicative_expression
-- On ELSE reduce production additive_expression -> additive_expression additive_operator multiplicative_expression
-- On ELLIPSIS reduce production additive_expression -> additive_expression additive_operator multiplicative_expression
-- On DOUBLE reduce production additive_expression -> additive_expression additive_operator multiplicative_expression
-- On DOT reduce production additive_expression -> additive_expression additive_operator multiplicative_expression
-- On DO reduce production additive_expression -> additive_expression additive_operator multiplicative_expression
-- On DIV_ASSIGN reduce production additive_expression -> additive_expression additive_operator multiplicative_expression
-- On DEFAULT reduce production additive_expression -> additive_expression additive_operator multiplicative_expression
-- On DEC reduce production additive_expression -> additive_expression additive_operator multiplicative_expression
-- On CONTINUE reduce production additive_expression -> additive_expression additive_operator multiplicative_expression
-- On CONSTANT reduce production additive_expression -> additive_expression additive_operator multiplicative_expression
-- On CONST reduce production additive_expression -> additive_expression additive_operator multiplicative_expression
-- On COMMA reduce production additive_expression -> additive_expression additive_operator multiplicative_expression
-- On COLON reduce production additive_expression -> additive_expression additive_operator multiplicative_expression
-- On CHAR reduce production additive_expression -> additive_expression additive_operator multiplicative_expression
-- On CASE reduce production additive_expression -> additive_expression additive_operator multiplicative_expression
-- On BUILTIN_VA_ARG reduce production additive_expression -> additive_expression additive_operator multiplicative_expression
-- On BREAK reduce production additive_expression -> additive_expression additive_operator multiplicative_expression
-- On BARBAR reduce production additive_expression -> additive_expression additive_operator multiplicative_expression
-- On BAR reduce production additive_expression -> additive_expression additive_operator multiplicative_expression
-- On BANG reduce production additive_expression -> additive_expression additive_operator multiplicative_expression
-- On AUTO reduce production additive_expression -> additive_expression additive_operator multiplicative_expression
-- On ATTRIBUTE reduce production additive_expression -> additive_expression additive_operator multiplicative_expression
-- On ASM reduce production additive_expression -> additive_expression additive_operator multiplicative_expression
-- On AND_ASSIGN reduce production additive_expression -> additive_expression additive_operator multiplicative_expression
-- On ANDAND reduce production additive_expression -> additive_expression additive_operator multiplicative_expression
-- On AND reduce production additive_expression -> additive_expression additive_operator multiplicative_expression
-- On ALIGNOF reduce production additive_expression -> additive_expression additive_operator multiplicative_expression
-- On ALIGNAS reduce production additive_expression -> additive_expression additive_operator multiplicative_expression
-- On ADD_ASSIGN reduce production additive_expression -> additive_expression additive_operator multiplicative_expression

State 94:
## Known stack suffix:
## relational_expression
## LR(1) items:
equality_expression -> relational_expression . [ SEMICOLON RPAREN RBRACK RBRACE QUESTION NEQ HAT EQEQ COMMA COLON BARBAR BAR ANDAND AND ]
relational_expression -> relational_expression . relational_operator shift_expression [ SEMICOLON RPAREN RBRACK RBRACE QUESTION NEQ LT LEQ HAT GT GEQ EQEQ COMMA COLON BARBAR BAR ANDAND AND ]
## Transitions:
-- On LT shift to state 95
-- On LEQ shift to state 96
-- On GT shift to state 97
-- On GEQ shift to state 98
-- On relational_operator shift to state 99
## Reductions:
-- On XOR_ASSIGN reduce production equality_expression -> relational_expression
-- On WHILE reduce production equality_expression -> relational_expression
-- On VOLATILE reduce production equality_expression -> relational_expression
-- On VOID reduce production equality_expression -> relational_expression
-- On VAR_NAME reduce production equality_expression -> relational_expression
-- On UNSIGNED reduce production equality_expression -> relational_expression
-- On UNION reduce production equality_expression -> relational_expression
-- On UNDERSCORE_BOOL reduce production equality_expression -> relational_expression
-- On TYPEDEF_NAME reduce production equality_expression -> relational_expression
-- On TYPEDEF reduce production equality_expression -> relational_expression
-- On TILDE reduce production equality_expression -> relational_expression
-- On SWITCH reduce production equality_expression -> relational_expression
-- On SUB_ASSIGN reduce production equality_expression -> relational_expression
-- On STRUCT reduce production equality_expression -> relational_expression
-- On STRING_LITERAL reduce production equality_expression -> relational_expression
-- On STATIC reduce production equality_expression -> relational_expression
-- On STAR reduce production equality_expression -> relational_expression
-- On SLASH reduce production equality_expression -> relational_expression
-- On SIZEOF reduce production equality_expression -> relational_expression
-- On SIGNED reduce production equality_expression -> relational_expression
-- On SHORT reduce production equality_expression -> relational_expression
-- On SEMICOLON reduce production equality_expression -> relational_expression
-- On RPAREN reduce production equality_expression -> relational_expression
-- On RIGHT_ASSIGN reduce production equality_expression -> relational_expression
-- On RIGHT reduce production equality_expression -> relational_expression
-- On RETURN reduce production equality_expression -> relational_expression
-- On RESTRICT reduce production equality_expression -> relational_expression
-- On REGISTER reduce production equality_expression -> relational_expression
-- On RBRACK reduce production equality_expression -> relational_expression
-- On RBRACE reduce production equality_expression -> relational_expression
-- On QUESTION reduce production equality_expression -> relational_expression
-- On PTR reduce production equality_expression -> relational_expression
-- On PRE_NAME reduce production equality_expression -> relational_expression
-- On PRAGMA reduce production equality_expression -> relational_expression
-- On PLUS reduce production equality_expression -> relational_expression
-- On PERCENT reduce production equality_expression -> relational_expression
-- On PACKED reduce production equality_expression -> relational_expression
-- On OR_ASSIGN reduce production equality_expression -> relational_expression
-- On NEQ reduce production equality_expression -> relational_expression
-- On MUL_ASSIGN reduce production equality_expression -> relational_expression
-- On MOD_ASSIGN reduce production equality_expression -> relational_expression
-- On MINUS reduce production equality_expression -> relational_expression
-- On LPAREN reduce production equality_expression -> relational_expression
-- On LONG reduce production equality_expression -> relational_expression
-- On LEFT_ASSIGN reduce production equality_expression -> relational_expression
-- On LEFT reduce production equality_expression -> relational_expression
-- On LBRACK reduce production equality_expression -> relational_expression
-- On LBRACE reduce production equality_expression -> relational_expression
-- On INT reduce production equality_expression -> relational_expression
-- On INLINE reduce production equality_expression -> relational_expression
-- On INC reduce production equality_expression -> relational_expression
-- On IF reduce production equality_expression -> relational_expression
-- On HAT reduce production equality_expression -> relational_expression
-- On GOTO reduce production equality_expression -> relational_expression
-- On FOR reduce production equality_expression -> relational_expression
-- On FLOAT reduce production equality_expression -> relational_expression
-- On EXTERN reduce production equality_expression -> relational_expression
-- On EQEQ reduce production equality_expression -> relational_expression
-- On EQ reduce production equality_expression -> relational_expression
-- On EOF reduce production equality_expression -> relational_expression
-- On ENUM reduce production equality_expression -> relational_expression
-- On ELSE reduce production equality_expression -> relational_expression
-- On ELLIPSIS reduce production equality_expression -> relational_expression
-- On DOUBLE reduce production equality_expression -> relational_expression
-- On DOT reduce production equality_expression -> relational_expression
-- On DO reduce production equality_expression -> relational_expression
-- On DIV_ASSIGN reduce production equality_expression -> relational_expression
-- On DEFAULT reduce production equality_expression -> relational_expression
-- On DEC reduce production equality_expression -> relational_expression
-- On CONTINUE reduce production equality_expression -> relational_expression
-- On CONSTANT reduce production equality_expression -> relational_expression
-- On CONST reduce production equality_expression -> relational_expression
-- On COMMA reduce production equality_expression -> relational_expression
-- On COLON reduce production equality_expression -> relational_expression
-- On CHAR reduce production equality_expression -> relational_expression
-- On CASE reduce production equality_expression -> relational_expression
-- On BUILTIN_VA_ARG reduce production equality_expression -> relational_expression
-- On BREAK reduce production equality_expression -> relational_expression
-- On BARBAR reduce production equality_expression -> relational_expression
-- On BAR reduce production equality_expression -> relational_expression
-- On BANG reduce production equality_expression -> relational_expression
-- On AUTO reduce production equality_expression -> relational_expression
-- On ATTRIBUTE reduce production equality_expression -> relational_expression
-- On ASM reduce production equality_expression -> relational_expression
-- On AND_ASSIGN reduce production equality_expression -> relational_expression
-- On ANDAND reduce production equality_expression -> relational_expression
-- On AND reduce production equality_expression -> relational_expression
-- On ALIGNOF reduce production equality_expression -> relational_expression
-- On ALIGNAS reduce production equality_expression -> relational_expression
-- On ADD_ASSIGN reduce production equality_expression -> relational_expression

State 95:
## Known stack suffix:
## LT
## LR(1) items:
relational_operator -> LT . [ TILDE STRING_LITERAL STAR SIZEOF PRE_NAME PLUS MINUS LPAREN INC DEC CONSTANT BUILTIN_VA_ARG BANG AND ALIGNOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production relational_operator -> LT

State 96:
## Known stack suffix:
## LEQ
## LR(1) items:
relational_operator -> LEQ . [ TILDE STRING_LITERAL STAR SIZEOF PRE_NAME PLUS MINUS LPAREN INC DEC CONSTANT BUILTIN_VA_ARG BANG AND ALIGNOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production relational_operator -> LEQ

State 97:
## Known stack suffix:
## GT
## LR(1) items:
relational_operator -> GT . [ TILDE STRING_LITERAL STAR SIZEOF PRE_NAME PLUS MINUS LPAREN INC DEC CONSTANT BUILTIN_VA_ARG BANG AND ALIGNOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production relational_operator -> GT

State 98:
## Known stack suffix:
## GEQ
## LR(1) items:
relational_operator -> GEQ . [ TILDE STRING_LITERAL STAR SIZEOF PRE_NAME PLUS MINUS LPAREN INC DEC CONSTANT BUILTIN_VA_ARG BANG AND ALIGNOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production relational_operator -> GEQ

State 99:
## Known stack suffix:
## relational_expression relational_operator
## LR(1) items:
relational_expression -> relational_expression relational_operator . shift_expression [ SEMICOLON RPAREN RBRACK RBRACE QUESTION NEQ LT LEQ HAT GT GEQ EQEQ COMMA COLON BARBAR BAR ANDAND AND ]
## Transitions:
-- On TILDE shift to state 18
-- On STRING_LITERAL shift to state 19
-- On STAR shift to state 20
-- On SIZEOF shift to state 21
-- On PRE_NAME shift to state 22
-- On PLUS shift to state 24
-- On MINUS shift to state 25
-- On LPAREN shift to state 28
-- On INC shift to state 31
-- On DEC shift to state 46
-- On CONSTANT shift to state 47
-- On BUILTIN_VA_ARG shift to state 48
-- On BANG shift to state 50
-- On AND shift to state 51
-- On ALIGNOF shift to state 52
-- On unary_operator shift to state 56
-- On unary_expression shift to state 57
-- On string_literals_list shift to state 58
-- On shift_expression shift to state 100
-- On primary_expression shift to state 60
-- On postfix_expression shift to state 61
-- On multiplicative_expression shift to state 82
-- On cast_expression shift to state 88
-- On additive_expression shift to state 101
## Reductions:

State 100:
## Known stack suffix:
## relational_expression relational_operator shift_expression
## LR(1) items:
relational_expression -> relational_expression relational_operator shift_expression . [ SEMICOLON RPAREN RBRACK RBRACE QUESTION NEQ LT LEQ HAT GT GEQ EQEQ COMMA COLON BARBAR BAR ANDAND AND ]
shift_expression -> shift_expression . shift_operator additive_expression [ SEMICOLON RPAREN RIGHT RBRACK RBRACE QUESTION NEQ LT LEQ LEFT HAT GT GEQ EQEQ COMMA COLON BARBAR BAR ANDAND AND ]
## Transitions:
-- On RIGHT shift to state 79
-- On LEFT shift to state 80
-- On shift_operator shift to state 81
## Reductions:
-- On XOR_ASSIGN reduce production relational_expression -> relational_expression relational_operator shift_expression
-- On WHILE reduce production relational_expression -> relational_expression relational_operator shift_expression
-- On VOLATILE reduce production relational_expression -> relational_expression relational_operator shift_expression
-- On VOID reduce production relational_expression -> relational_expression relational_operator shift_expression
-- On VAR_NAME reduce production relational_expression -> relational_expression relational_operator shift_expression
-- On UNSIGNED reduce production relational_expression -> relational_expression relational_operator shift_expression
-- On UNION reduce production relational_expression -> relational_expression relational_operator shift_expression
-- On UNDERSCORE_BOOL reduce production relational_expression -> relational_expression relational_operator shift_expression
-- On TYPEDEF_NAME reduce production relational_expression -> relational_expression relational_operator shift_expression
-- On TYPEDEF reduce production relational_expression -> relational_expression relational_operator shift_expression
-- On TILDE reduce production relational_expression -> relational_expression relational_operator shift_expression
-- On SWITCH reduce production relational_expression -> relational_expression relational_operator shift_expression
-- On SUB_ASSIGN reduce production relational_expression -> relational_expression relational_operator shift_expression
-- On STRUCT reduce production relational_expression -> relational_expression relational_operator shift_expression
-- On STRING_LITERAL reduce production relational_expression -> relational_expression relational_operator shift_expression
-- On STATIC reduce production relational_expression -> relational_expression relational_operator shift_expression
-- On STAR reduce production relational_expression -> relational_expression relational_operator shift_expression
-- On SLASH reduce production relational_expression -> relational_expression relational_operator shift_expression
-- On SIZEOF reduce production relational_expression -> relational_expression relational_operator shift_expression
-- On SIGNED reduce production relational_expression -> relational_expression relational_operator shift_expression
-- On SHORT reduce production relational_expression -> relational_expression relational_operator shift_expression
-- On SEMICOLON reduce production relational_expression -> relational_expression relational_operator shift_expression
-- On RPAREN reduce production relational_expression -> relational_expression relational_operator shift_expression
-- On RIGHT_ASSIGN reduce production relational_expression -> relational_expression relational_operator shift_expression
-- On RETURN reduce production relational_expression -> relational_expression relational_operator shift_expression
-- On RESTRICT reduce production relational_expression -> relational_expression relational_operator shift_expression
-- On REGISTER reduce production relational_expression -> relational_expression relational_operator shift_expression
-- On RBRACK reduce production relational_expression -> relational_expression relational_operator shift_expression
-- On RBRACE reduce production relational_expression -> relational_expression relational_operator shift_expression
-- On QUESTION reduce production relational_expression -> relational_expression relational_operator shift_expression
-- On PTR reduce production relational_expression -> relational_expression relational_operator shift_expression
-- On PRE_NAME reduce production relational_expression -> relational_expression relational_operator shift_expression
-- On PRAGMA reduce production relational_expression -> relational_expression relational_operator shift_expression
-- On PLUS reduce production relational_expression -> relational_expression relational_operator shift_expression
-- On PERCENT reduce production relational_expression -> relational_expression relational_operator shift_expression
-- On PACKED reduce production relational_expression -> relational_expression relational_operator shift_expression
-- On OR_ASSIGN reduce production relational_expression -> relational_expression relational_operator shift_expression
-- On NEQ reduce production relational_expression -> relational_expression relational_operator shift_expression
-- On MUL_ASSIGN reduce production relational_expression -> relational_expression relational_operator shift_expression
-- On MOD_ASSIGN reduce production relational_expression -> relational_expression relational_operator shift_expression
-- On MINUS reduce production relational_expression -> relational_expression relational_operator shift_expression
-- On LT reduce production relational_expression -> relational_expression relational_operator shift_expression
-- On LPAREN reduce production relational_expression -> relational_expression relational_operator shift_expression
-- On LONG reduce production relational_expression -> relational_expression relational_operator shift_expression
-- On LEQ reduce production relational_expression -> relational_expression relational_operator shift_expression
-- On LEFT_ASSIGN reduce production relational_expression -> relational_expression relational_operator shift_expression
-- On LBRACK reduce production relational_expression -> relational_expression relational_operator shift_expression
-- On LBRACE reduce production relational_expression -> relational_expression relational_operator shift_expression
-- On INT reduce production relational_expression -> relational_expression relational_operator shift_expression
-- On INLINE reduce production relational_expression -> relational_expression relational_operator shift_expression
-- On INC reduce production relational_expression -> relational_expression relational_operator shift_expression
-- On IF reduce production relational_expression -> relational_expression relational_operator shift_expression
-- On HAT reduce production relational_expression -> relational_expression relational_operator shift_expression
-- On GT reduce production relational_expression -> relational_expression relational_operator shift_expression
-- On GOTO reduce production relational_expression -> relational_expression relational_operator shift_expression
-- On GEQ reduce production relational_expression -> relational_expression relational_operator shift_expression
-- On FOR reduce production relational_expression -> relational_expression relational_operator shift_expression
-- On FLOAT reduce production relational_expression -> relational_expression relational_operator shift_expression
-- On EXTERN reduce production relational_expression -> relational_expression relational_operator shift_expression
-- On EQEQ reduce production relational_expression -> relational_expression relational_operator shift_expression
-- On EQ reduce production relational_expression -> relational_expression relational_operator shift_expression
-- On EOF reduce production relational_expression -> relational_expression relational_operator shift_expression
-- On ENUM reduce production relational_expression -> relational_expression relational_operator shift_expression
-- On ELSE reduce production relational_expression -> relational_expression relational_operator shift_expression
-- On ELLIPSIS reduce production relational_expression -> relational_expression relational_operator shift_expression
-- On DOUBLE reduce production relational_expression -> relational_expression relational_operator shift_expression
-- On DOT reduce production relational_expression -> relational_expression relational_operator shift_expression
-- On DO reduce production relational_expression -> relational_expression relational_operator shift_expression
-- On DIV_ASSIGN reduce production relational_expression -> relational_expression relational_operator shift_expression
-- On DEFAULT reduce production relational_expression -> relational_expression relational_operator shift_expression
-- On DEC reduce production relational_expression -> relational_expression relational_operator shift_expression
-- On CONTINUE reduce production relational_expression -> relational_expression relational_operator shift_expression
-- On CONSTANT reduce production relational_expression -> relational_expression relational_operator shift_expression
-- On CONST reduce production relational_expression -> relational_expression relational_operator shift_expression
-- On COMMA reduce production relational_expression -> relational_expression relational_operator shift_expression
-- On COLON reduce production relational_expression -> relational_expression relational_operator shift_expression
-- On CHAR reduce production relational_expression -> relational_expression relational_operator shift_expression
-- On CASE reduce production relational_expression -> relational_expression relational_operator shift_expression
-- On BUILTIN_VA_ARG reduce production relational_expression -> relational_expression relational_operator shift_expression
-- On BREAK reduce production relational_expression -> relational_expression relational_operator shift_expression
-- On BARBAR reduce production relational_expression -> relational_expression relational_operator shift_expression
-- On BAR reduce production relational_expression -> relational_expression relational_operator shift_expression
-- On BANG reduce production relational_expression -> relational_expression relational_operator shift_expression
-- On AUTO reduce production relational_expression -> relational_expression relational_operator shift_expression
-- On ATTRIBUTE reduce production relational_expression -> relational_expression relational_operator shift_expression
-- On ASM reduce production relational_expression -> relational_expression relational_operator shift_expression
-- On AND_ASSIGN reduce production relational_expression -> relational_expression relational_operator shift_expression
-- On ANDAND reduce production relational_expression -> relational_expression relational_operator shift_expression
-- On AND reduce production relational_expression -> relational_expression relational_operator shift_expression
-- On ALIGNOF reduce production relational_expression -> relational_expression relational_operator shift_expression
-- On ALIGNAS reduce production relational_expression -> relational_expression relational_operator shift_expression
-- On ADD_ASSIGN reduce production relational_expression -> relational_expression relational_operator shift_expression

State 101:
## Known stack suffix:
## additive_expression
## LR(1) items:
additive_expression -> additive_expression . additive_operator multiplicative_expression [ SEMICOLON RPAREN RIGHT RBRACK RBRACE QUESTION PLUS NEQ MINUS LT LEQ LEFT HAT GT GEQ EQEQ COMMA COLON BARBAR BAR ANDAND AND ]
shift_expression -> additive_expression . [ SEMICOLON RPAREN RIGHT RBRACK RBRACE QUESTION NEQ LT LEQ LEFT HAT GT GEQ EQEQ COMMA COLON BARBAR BAR ANDAND AND ]
## Transitions:
-- On PLUS shift to state 90
-- On MINUS shift to state 91
-- On additive_operator shift to state 92
## Reductions:
-- On XOR_ASSIGN reduce production shift_expression -> additive_expression
-- On WHILE reduce production shift_expression -> additive_expression
-- On VOLATILE reduce production shift_expression -> additive_expression
-- On VOID reduce production shift_expression -> additive_expression
-- On VAR_NAME reduce production shift_expression -> additive_expression
-- On UNSIGNED reduce production shift_expression -> additive_expression
-- On UNION reduce production shift_expression -> additive_expression
-- On UNDERSCORE_BOOL reduce production shift_expression -> additive_expression
-- On TYPEDEF_NAME reduce production shift_expression -> additive_expression
-- On TYPEDEF reduce production shift_expression -> additive_expression
-- On TILDE reduce production shift_expression -> additive_expression
-- On SWITCH reduce production shift_expression -> additive_expression
-- On SUB_ASSIGN reduce production shift_expression -> additive_expression
-- On STRUCT reduce production shift_expression -> additive_expression
-- On STRING_LITERAL reduce production shift_expression -> additive_expression
-- On STATIC reduce production shift_expression -> additive_expression
-- On STAR reduce production shift_expression -> additive_expression
-- On SLASH reduce production shift_expression -> additive_expression
-- On SIZEOF reduce production shift_expression -> additive_expression
-- On SIGNED reduce production shift_expression -> additive_expression
-- On SHORT reduce production shift_expression -> additive_expression
-- On SEMICOLON reduce production shift_expression -> additive_expression
-- On RPAREN reduce production shift_expression -> additive_expression
-- On RIGHT_ASSIGN reduce production shift_expression -> additive_expression
-- On RIGHT reduce production shift_expression -> additive_expression
-- On RETURN reduce production shift_expression -> additive_expression
-- On RESTRICT reduce production shift_expression -> additive_expression
-- On REGISTER reduce production shift_expression -> additive_expression
-- On RBRACK reduce production shift_expression -> additive_expression
-- On RBRACE reduce production shift_expression -> additive_expression
-- On QUESTION reduce production shift_expression -> additive_expression
-- On PTR reduce production shift_expression -> additive_expression
-- On PRE_NAME reduce production shift_expression -> additive_expression
-- On PRAGMA reduce production shift_expression -> additive_expression
-- On PERCENT reduce production shift_expression -> additive_expression
-- On PACKED reduce production shift_expression -> additive_expression
-- On OR_ASSIGN reduce production shift_expression -> additive_expression
-- On NEQ reduce production shift_expression -> additive_expression
-- On MUL_ASSIGN reduce production shift_expression -> additive_expression
-- On MOD_ASSIGN reduce production shift_expression -> additive_expression
-- On LT reduce production shift_expression -> additive_expression
-- On LPAREN reduce production shift_expression -> additive_expression
-- On LONG reduce production shift_expression -> additive_expression
-- On LEQ reduce production shift_expression -> additive_expression
-- On LEFT_ASSIGN reduce production shift_expression -> additive_expression
-- On LEFT reduce production shift_expression -> additive_expression
-- On LBRACK reduce production shift_expression -> additive_expression
-- On LBRACE reduce production shift_expression -> additive_expression
-- On INT reduce production shift_expression -> additive_expression
-- On INLINE reduce production shift_expression -> additive_expression
-- On INC reduce production shift_expression -> additive_expression
-- On IF reduce production shift_expression -> additive_expression
-- On HAT reduce production shift_expression -> additive_expression
-- On GT reduce production shift_expression -> additive_expression
-- On GOTO reduce production shift_expression -> additive_expression
-- On GEQ reduce production shift_expression -> additive_expression
-- On FOR reduce production shift_expression -> additive_expression
-- On FLOAT reduce production shift_expression -> additive_expression
-- On EXTERN reduce production shift_expression -> additive_expression
-- On EQEQ reduce production shift_expression -> additive_expression
-- On EQ reduce production shift_expression -> additive_expression
-- On EOF reduce production shift_expression -> additive_expression
-- On ENUM reduce production shift_expression -> additive_expression
-- On ELSE reduce production shift_expression -> additive_expression
-- On ELLIPSIS reduce production shift_expression -> additive_expression
-- On DOUBLE reduce production shift_expression -> additive_expression
-- On DOT reduce production shift_expression -> additive_expression
-- On DO reduce production shift_expression -> additive_expression
-- On DIV_ASSIGN reduce production shift_expression -> additive_expression
-- On DEFAULT reduce production shift_expression -> additive_expression
-- On DEC reduce production shift_expression -> additive_expression
-- On CONTINUE reduce production shift_expression -> additive_expression
-- On CONSTANT reduce production shift_expression -> additive_expression
-- On CONST reduce production shift_expression -> additive_expression
-- On COMMA reduce production shift_expression -> additive_expression
-- On COLON reduce production shift_expression -> additive_expression
-- On CHAR reduce production shift_expression -> additive_expression
-- On CASE reduce production shift_expression -> additive_expression
-- On BUILTIN_VA_ARG reduce production shift_expression -> additive_expression
-- On BREAK reduce production shift_expression -> additive_expression
-- On BARBAR reduce production shift_expression -> additive_expression
-- On BAR reduce production shift_expression -> additive_expression
-- On BANG reduce production shift_expression -> additive_expression
-- On AUTO reduce production shift_expression -> additive_expression
-- On ATTRIBUTE reduce production shift_expression -> additive_expression
-- On ASM reduce production shift_expression -> additive_expression
-- On AND_ASSIGN reduce production shift_expression -> additive_expression
-- On ANDAND reduce production shift_expression -> additive_expression
-- On AND reduce production shift_expression -> additive_expression
-- On ALIGNOF reduce production shift_expression -> additive_expression
-- On ALIGNAS reduce production shift_expression -> additive_expression
-- On ADD_ASSIGN reduce production shift_expression -> additive_expression

State 102:
## Known stack suffix:
## logical_or_expression
## LR(1) items:
conditional_expression -> logical_or_expression . [ SEMICOLON RPAREN RBRACK RBRACE COMMA COLON ]
conditional_expression -> logical_or_expression . QUESTION expression COLON conditional_expression [ SEMICOLON RPAREN RBRACK RBRACE COMMA COLON ]
logical_or_expression -> logical_or_expression . BARBAR logical_and_expression [ SEMICOLON RPAREN RBRACK RBRACE QUESTION COMMA COLON BARBAR ]
## Transitions:
-- On QUESTION shift to state 103
-- On BARBAR shift to state 128
## Reductions:
-- On XOR_ASSIGN reduce production conditional_expression -> logical_or_expression
-- On WHILE reduce production conditional_expression -> logical_or_expression
-- On VOLATILE reduce production conditional_expression -> logical_or_expression
-- On VOID reduce production conditional_expression -> logical_or_expression
-- On VAR_NAME reduce production conditional_expression -> logical_or_expression
-- On UNSIGNED reduce production conditional_expression -> logical_or_expression
-- On UNION reduce production conditional_expression -> logical_or_expression
-- On UNDERSCORE_BOOL reduce production conditional_expression -> logical_or_expression
-- On TYPEDEF_NAME reduce production conditional_expression -> logical_or_expression
-- On TYPEDEF reduce production conditional_expression -> logical_or_expression
-- On TILDE reduce production conditional_expression -> logical_or_expression
-- On SWITCH reduce production conditional_expression -> logical_or_expression
-- On SUB_ASSIGN reduce production conditional_expression -> logical_or_expression
-- On STRUCT reduce production conditional_expression -> logical_or_expression
-- On STRING_LITERAL reduce production conditional_expression -> logical_or_expression
-- On STATIC reduce production conditional_expression -> logical_or_expression
-- On STAR reduce production conditional_expression -> logical_or_expression
-- On SLASH reduce production conditional_expression -> logical_or_expression
-- On SIZEOF reduce production conditional_expression -> logical_or_expression
-- On SIGNED reduce production conditional_expression -> logical_or_expression
-- On SHORT reduce production conditional_expression -> logical_or_expression
-- On SEMICOLON reduce production conditional_expression -> logical_or_expression
-- On RPAREN reduce production conditional_expression -> logical_or_expression
-- On RIGHT_ASSIGN reduce production conditional_expression -> logical_or_expression
-- On RIGHT reduce production conditional_expression -> logical_or_expression
-- On RETURN reduce production conditional_expression -> logical_or_expression
-- On RESTRICT reduce production conditional_expression -> logical_or_expression
-- On REGISTER reduce production conditional_expression -> logical_or_expression
-- On RBRACK reduce production conditional_expression -> logical_or_expression
-- On RBRACE reduce production conditional_expression -> logical_or_expression
-- On PTR reduce production conditional_expression -> logical_or_expression
-- On PRE_NAME reduce production conditional_expression -> logical_or_expression
-- On PRAGMA reduce production conditional_expression -> logical_or_expression
-- On PLUS reduce production conditional_expression -> logical_or_expression
-- On PERCENT reduce production conditional_expression -> logical_or_expression
-- On PACKED reduce production conditional_expression -> logical_or_expression
-- On OR_ASSIGN reduce production conditional_expression -> logical_or_expression
-- On NEQ reduce production conditional_expression -> logical_or_expression
-- On MUL_ASSIGN reduce production conditional_expression -> logical_or_expression
-- On MOD_ASSIGN reduce production conditional_expression -> logical_or_expression
-- On MINUS reduce production conditional_expression -> logical_or_expression
-- On LT reduce production conditional_expression -> logical_or_expression
-- On LPAREN reduce production conditional_expression -> logical_or_expression
-- On LONG reduce production conditional_expression -> logical_or_expression
-- On LEQ reduce production conditional_expression -> logical_or_expression
-- On LEFT_ASSIGN reduce production conditional_expression -> logical_or_expression
-- On LEFT reduce production conditional_expression -> logical_or_expression
-- On LBRACK reduce production conditional_expression -> logical_or_expression
-- On LBRACE reduce production conditional_expression -> logical_or_expression
-- On INT reduce production conditional_expression -> logical_or_expression
-- On INLINE reduce production conditional_expression -> logical_or_expression
-- On INC reduce production conditional_expression -> logical_or_expression
-- On IF reduce production conditional_expression -> logical_or_expression
-- On HAT reduce production conditional_expression -> logical_or_expression
-- On GT reduce production conditional_expression -> logical_or_expression
-- On GOTO reduce production conditional_expression -> logical_or_expression
-- On GEQ reduce production conditional_expression -> logical_or_expression
-- On FOR reduce production conditional_expression -> logical_or_expression
-- On FLOAT reduce production conditional_expression -> logical_or_expression
-- On EXTERN reduce production conditional_expression -> logical_or_expression
-- On EQEQ reduce production conditional_expression -> logical_or_expression
-- On EQ reduce production conditional_expression -> logical_or_expression
-- On EOF reduce production conditional_expression -> logical_or_expression
-- On ENUM reduce production conditional_expression -> logical_or_expression
-- On ELSE reduce production conditional_expression -> logical_or_expression
-- On ELLIPSIS reduce production conditional_expression -> logical_or_expression
-- On DOUBLE reduce production conditional_expression -> logical_or_expression
-- On DOT reduce production conditional_expression -> logical_or_expression
-- On DO reduce production conditional_expression -> logical_or_expression
-- On DIV_ASSIGN reduce production conditional_expression -> logical_or_expression
-- On DEFAULT reduce production conditional_expression -> logical_or_expression
-- On DEC reduce production conditional_expression -> logical_or_expression
-- On CONTINUE reduce production conditional_expression -> logical_or_expression
-- On CONSTANT reduce production conditional_expression -> logical_or_expression
-- On CONST reduce production conditional_expression -> logical_or_expression
-- On COMMA reduce production conditional_expression -> logical_or_expression
-- On COLON reduce production conditional_expression -> logical_or_expression
-- On CHAR reduce production conditional_expression -> logical_or_expression
-- On CASE reduce production conditional_expression -> logical_or_expression
-- On BUILTIN_VA_ARG reduce production conditional_expression -> logical_or_expression
-- On BREAK reduce production conditional_expression -> logical_or_expression
-- On BAR reduce production conditional_expression -> logical_or_expression
-- On BANG reduce production conditional_expression -> logical_or_expression
-- On AUTO reduce production conditional_expression -> logical_or_expression
-- On ATTRIBUTE reduce production conditional_expression -> logical_or_expression
-- On ASM reduce production conditional_expression -> logical_or_expression
-- On AND_ASSIGN reduce production conditional_expression -> logical_or_expression
-- On ANDAND reduce production conditional_expression -> logical_or_expression
-- On AND reduce production conditional_expression -> logical_or_expression
-- On ALIGNOF reduce production conditional_expression -> logical_or_expression
-- On ALIGNAS reduce production conditional_expression -> logical_or_expression
-- On ADD_ASSIGN reduce production conditional_expression -> logical_or_expression

State 103:
## Known stack suffix:
## logical_or_expression QUESTION
## LR(1) items:
conditional_expression -> logical_or_expression QUESTION . expression COLON conditional_expression [ SEMICOLON RPAREN RBRACK RBRACE COMMA COLON ]
## Transitions:
-- On TILDE shift to state 18
-- On STRING_LITERAL shift to state 19
-- On STAR shift to state 20
-- On SIZEOF shift to state 21
-- On PRE_NAME shift to state 22
-- On PLUS shift to state 24
-- On MINUS shift to state 25
-- On LPAREN shift to state 28
-- On INC shift to state 31
-- On DEC shift to state 46
-- On CONSTANT shift to state 47
-- On BUILTIN_VA_ARG shift to state 48
-- On BANG shift to state 50
-- On AND shift to state 51
-- On ALIGNOF shift to state 52
-- On unary_operator shift to state 56
-- On unary_expression shift to state 65
-- On string_literals_list shift to state 58
-- On shift_expression shift to state 78
-- On relational_expression shift to state 94
-- On primary_expression shift to state 60
-- On postfix_expression shift to state 61
-- On multiplicative_expression shift to state 82
-- On logical_or_expression shift to state 102
-- On logical_and_expression shift to state 104
-- On inclusive_or_expression shift to state 120
-- On expression shift to state 121
-- On exclusive_or_expression shift to state 119
-- On equality_expression shift to state 110
-- On conditional_expression shift to state 123
-- On cast_expression shift to state 88
-- On assignment_expression shift to state 127
-- On and_expression shift to state 118
-- On additive_expression shift to state 101
## Reductions:

State 104:
## Known stack suffix:
## logical_and_expression
## LR(1) items:
logical_and_expression -> logical_and_expression . ANDAND inclusive_or_expression [ SEMICOLON RPAREN RBRACK RBRACE QUESTION COMMA COLON BARBAR ANDAND ]
logical_or_expression -> logical_and_expression . [ SEMICOLON RPAREN RBRACK RBRACE QUESTION COMMA COLON BARBAR ]
## Transitions:
-- On ANDAND shift to state 105
## Reductions:
-- On XOR_ASSIGN reduce production logical_or_expression -> logical_and_expression
-- On WHILE reduce production logical_or_expression -> logical_and_expression
-- On VOLATILE reduce production logical_or_expression -> logical_and_expression
-- On VOID reduce production logical_or_expression -> logical_and_expression
-- On VAR_NAME reduce production logical_or_expression -> logical_and_expression
-- On UNSIGNED reduce production logical_or_expression -> logical_and_expression
-- On UNION reduce production logical_or_expression -> logical_and_expression
-- On UNDERSCORE_BOOL reduce production logical_or_expression -> logical_and_expression
-- On TYPEDEF_NAME reduce production logical_or_expression -> logical_and_expression
-- On TYPEDEF reduce production logical_or_expression -> logical_and_expression
-- On TILDE reduce production logical_or_expression -> logical_and_expression
-- On SWITCH reduce production logical_or_expression -> logical_and_expression
-- On SUB_ASSIGN reduce production logical_or_expression -> logical_and_expression
-- On STRUCT reduce production logical_or_expression -> logical_and_expression
-- On STRING_LITERAL reduce production logical_or_expression -> logical_and_expression
-- On STATIC reduce production logical_or_expression -> logical_and_expression
-- On STAR reduce production logical_or_expression -> logical_and_expression
-- On SLASH reduce production logical_or_expression -> logical_and_expression
-- On SIZEOF reduce production logical_or_expression -> logical_and_expression
-- On SIGNED reduce production logical_or_expression -> logical_and_expression
-- On SHORT reduce production logical_or_expression -> logical_and_expression
-- On SEMICOLON reduce production logical_or_expression -> logical_and_expression
-- On RPAREN reduce production logical_or_expression -> logical_and_expression
-- On RIGHT_ASSIGN reduce production logical_or_expression -> logical_and_expression
-- On RIGHT reduce production logical_or_expression -> logical_and_expression
-- On RETURN reduce production logical_or_expression -> logical_and_expression
-- On RESTRICT reduce production logical_or_expression -> logical_and_expression
-- On REGISTER reduce production logical_or_expression -> logical_and_expression
-- On RBRACK reduce production logical_or_expression -> logical_and_expression
-- On RBRACE reduce production logical_or_expression -> logical_and_expression
-- On QUESTION reduce production logical_or_expression -> logical_and_expression
-- On PTR reduce production logical_or_expression -> logical_and_expression
-- On PRE_NAME reduce production logical_or_expression -> logical_and_expression
-- On PRAGMA reduce production logical_or_expression -> logical_and_expression
-- On PLUS reduce production logical_or_expression -> logical_and_expression
-- On PERCENT reduce production logical_or_expression -> logical_and_expression
-- On PACKED reduce production logical_or_expression -> logical_and_expression
-- On OR_ASSIGN reduce production logical_or_expression -> logical_and_expression
-- On NEQ reduce production logical_or_expression -> logical_and_expression
-- On MUL_ASSIGN reduce production logical_or_expression -> logical_and_expression
-- On MOD_ASSIGN reduce production logical_or_expression -> logical_and_expression
-- On MINUS reduce production logical_or_expression -> logical_and_expression
-- On LT reduce production logical_or_expression -> logical_and_expression
-- On LPAREN reduce production logical_or_expression -> logical_and_expression
-- On LONG reduce production logical_or_expression -> logical_and_expression
-- On LEQ reduce production logical_or_expression -> logical_and_expression
-- On LEFT_ASSIGN reduce production logical_or_expression -> logical_and_expression
-- On LEFT reduce production logical_or_expression -> logical_and_expression
-- On LBRACK reduce production logical_or_expression -> logical_and_expression
-- On LBRACE reduce production logical_or_expression -> logical_and_expression
-- On INT reduce production logical_or_expression -> logical_and_expression
-- On INLINE reduce production logical_or_expression -> logical_and_expression
-- On INC reduce production logical_or_expression -> logical_and_expression
-- On IF reduce production logical_or_expression -> logical_and_expression
-- On HAT reduce production logical_or_expression -> logical_and_expression
-- On GT reduce production logical_or_expression -> logical_and_expression
-- On GOTO reduce production logical_or_expression -> logical_and_expression
-- On GEQ reduce production logical_or_expression -> logical_and_expression
-- On FOR reduce production logical_or_expression -> logical_and_expression
-- On FLOAT reduce production logical_or_expression -> logical_and_expression
-- On EXTERN reduce production logical_or_expression -> logical_and_expression
-- On EQEQ reduce production logical_or_expression -> logical_and_expression
-- On EQ reduce production logical_or_expression -> logical_and_expression
-- On EOF reduce production logical_or_expression -> logical_and_expression
-- On ENUM reduce production logical_or_expression -> logical_and_expression
-- On ELSE reduce production logical_or_expression -> logical_and_expression
-- On ELLIPSIS reduce production logical_or_expression -> logical_and_expression
-- On DOUBLE reduce production logical_or_expression -> logical_and_expression
-- On DOT reduce production logical_or_expression -> logical_and_expression
-- On DO reduce production logical_or_expression -> logical_and_expression
-- On DIV_ASSIGN reduce production logical_or_expression -> logical_and_expression
-- On DEFAULT reduce production logical_or_expression -> logical_and_expression
-- On DEC reduce production logical_or_expression -> logical_and_expression
-- On CONTINUE reduce production logical_or_expression -> logical_and_expression
-- On CONSTANT reduce production logical_or_expression -> logical_and_expression
-- On CONST reduce production logical_or_expression -> logical_and_expression
-- On COMMA reduce production logical_or_expression -> logical_and_expression
-- On COLON reduce production logical_or_expression -> logical_and_expression
-- On CHAR reduce production logical_or_expression -> logical_and_expression
-- On CASE reduce production logical_or_expression -> logical_and_expression
-- On BUILTIN_VA_ARG reduce production logical_or_expression -> logical_and_expression
-- On BREAK reduce production logical_or_expression -> logical_and_expression
-- On BARBAR reduce production logical_or_expression -> logical_and_expression
-- On BAR reduce production logical_or_expression -> logical_and_expression
-- On BANG reduce production logical_or_expression -> logical_and_expression
-- On AUTO reduce production logical_or_expression -> logical_and_expression
-- On ATTRIBUTE reduce production logical_or_expression -> logical_and_expression
-- On ASM reduce production logical_or_expression -> logical_and_expression
-- On AND_ASSIGN reduce production logical_or_expression -> logical_and_expression
-- On AND reduce production logical_or_expression -> logical_and_expression
-- On ALIGNOF reduce production logical_or_expression -> logical_and_expression
-- On ALIGNAS reduce production logical_or_expression -> logical_and_expression
-- On ADD_ASSIGN reduce production logical_or_expression -> logical_and_expression

State 105:
## Known stack suffix:
## logical_and_expression ANDAND
## LR(1) items:
logical_and_expression -> logical_and_expression ANDAND . inclusive_or_expression [ SEMICOLON RPAREN RBRACK RBRACE QUESTION COMMA COLON BARBAR ANDAND ]
## Transitions:
-- On TILDE shift to state 18
-- On STRING_LITERAL shift to state 19
-- On STAR shift to state 20
-- On SIZEOF shift to state 21
-- On PRE_NAME shift to state 22
-- On PLUS shift to state 24
-- On MINUS shift to state 25
-- On LPAREN shift to state 28
-- On INC shift to state 31
-- On DEC shift to state 46
-- On CONSTANT shift to state 47
-- On BUILTIN_VA_ARG shift to state 48
-- On BANG shift to state 50
-- On AND shift to state 51
-- On ALIGNOF shift to state 52
-- On unary_operator shift to state 56
-- On unary_expression shift to state 57
-- On string_literals_list shift to state 58
-- On shift_expression shift to state 78
-- On relational_expression shift to state 94
-- On primary_expression shift to state 60
-- On postfix_expression shift to state 61
-- On multiplicative_expression shift to state 82
-- On inclusive_or_expression shift to state 106
-- On exclusive_or_expression shift to state 119
-- On equality_expression shift to state 110
-- On cast_expression shift to state 88
-- On and_expression shift to state 118
-- On additive_expression shift to state 101
## Reductions:

State 106:
## Known stack suffix:
## logical_and_expression ANDAND inclusive_or_expression
## LR(1) items:
inclusive_or_expression -> inclusive_or_expression . BAR exclusive_or_expression [ SEMICOLON RPAREN RBRACK RBRACE QUESTION COMMA COLON BARBAR BAR ANDAND ]
logical_and_expression -> logical_and_expression ANDAND inclusive_or_expression . [ SEMICOLON RPAREN RBRACK RBRACE QUESTION COMMA COLON BARBAR ANDAND ]
## Transitions:
-- On BAR shift to state 107
## Reductions:
-- On XOR_ASSIGN reduce production logical_and_expression -> logical_and_expression ANDAND inclusive_or_expression
-- On WHILE reduce production logical_and_expression -> logical_and_expression ANDAND inclusive_or_expression
-- On VOLATILE reduce production logical_and_expression -> logical_and_expression ANDAND inclusive_or_expression
-- On VOID reduce production logical_and_expression -> logical_and_expression ANDAND inclusive_or_expression
-- On VAR_NAME reduce production logical_and_expression -> logical_and_expression ANDAND inclusive_or_expression
-- On UNSIGNED reduce production logical_and_expression -> logical_and_expression ANDAND inclusive_or_expression
-- On UNION reduce production logical_and_expression -> logical_and_expression ANDAND inclusive_or_expression
-- On UNDERSCORE_BOOL reduce production logical_and_expression -> logical_and_expression ANDAND inclusive_or_expression
-- On TYPEDEF_NAME reduce production logical_and_expression -> logical_and_expression ANDAND inclusive_or_expression
-- On TYPEDEF reduce production logical_and_expression -> logical_and_expression ANDAND inclusive_or_expression
-- On TILDE reduce production logical_and_expression -> logical_and_expression ANDAND inclusive_or_expression
-- On SWITCH reduce production logical_and_expression -> logical_and_expression ANDAND inclusive_or_expression
-- On SUB_ASSIGN reduce production logical_and_expression -> logical_and_expression ANDAND inclusive_or_expression
-- On STRUCT reduce production logical_and_expression -> logical_and_expression ANDAND inclusive_or_expression
-- On STRING_LITERAL reduce production logical_and_expression -> logical_and_expression ANDAND inclusive_or_expression
-- On STATIC reduce production logical_and_expression -> logical_and_expression ANDAND inclusive_or_expression
-- On STAR reduce production logical_and_expression -> logical_and_expression ANDAND inclusive_or_expression
-- On SLASH reduce production logical_and_expression -> logical_and_expression ANDAND inclusive_or_expression
-- On SIZEOF reduce production logical_and_expression -> logical_and_expression ANDAND inclusive_or_expression
-- On SIGNED reduce production logical_and_expression -> logical_and_expression ANDAND inclusive_or_expression
-- On SHORT reduce production logical_and_expression -> logical_and_expression ANDAND inclusive_or_expression
-- On SEMICOLON reduce production logical_and_expression -> logical_and_expression ANDAND inclusive_or_expression
-- On RPAREN reduce production logical_and_expression -> logical_and_expression ANDAND inclusive_or_expression
-- On RIGHT_ASSIGN reduce production logical_and_expression -> logical_and_expression ANDAND inclusive_or_expression
-- On RIGHT reduce production logical_and_expression -> logical_and_expression ANDAND inclusive_or_expression
-- On RETURN reduce production logical_and_expression -> logical_and_expression ANDAND inclusive_or_expression
-- On RESTRICT reduce production logical_and_expression -> logical_and_expression ANDAND inclusive_or_expression
-- On REGISTER reduce production logical_and_expression -> logical_and_expression ANDAND inclusive_or_expression
-- On RBRACK reduce production logical_and_expression -> logical_and_expression ANDAND inclusive_or_expression
-- On RBRACE reduce production logical_and_expression -> logical_and_expression ANDAND inclusive_or_expression
-- On QUESTION reduce production logical_and_expression -> logical_and_expression ANDAND inclusive_or_expression
-- On PTR reduce production logical_and_expression -> logical_and_expression ANDAND inclusive_or_expression
-- On PRE_NAME reduce production logical_and_expression -> logical_and_expression ANDAND inclusive_or_expression
-- On PRAGMA reduce production logical_and_expression -> logical_and_expression ANDAND inclusive_or_expression
-- On PLUS reduce production logical_and_expression -> logical_and_expression ANDAND inclusive_or_expression
-- On PERCENT reduce production logical_and_expression -> logical_and_expression ANDAND inclusive_or_expression
-- On PACKED reduce production logical_and_expression -> logical_and_expression ANDAND inclusive_or_expression
-- On OR_ASSIGN reduce production logical_and_expression -> logical_and_expression ANDAND inclusive_or_expression
-- On NEQ reduce production logical_and_expression -> logical_and_expression ANDAND inclusive_or_expression
-- On MUL_ASSIGN reduce production logical_and_expression -> logical_and_expression ANDAND inclusive_or_expression
-- On MOD_ASSIGN reduce production logical_and_expression -> logical_and_expression ANDAND inclusive_or_expression
-- On MINUS reduce production logical_and_expression -> logical_and_expression ANDAND inclusive_or_expression
-- On LT reduce production logical_and_expression -> logical_and_expression ANDAND inclusive_or_expression
-- On LPAREN reduce production logical_and_expression -> logical_and_expression ANDAND inclusive_or_expression
-- On LONG reduce production logical_and_expression -> logical_and_expression ANDAND inclusive_or_expression
-- On LEQ reduce production logical_and_expression -> logical_and_expression ANDAND inclusive_or_expression
-- On LEFT_ASSIGN reduce production logical_and_expression -> logical_and_expression ANDAND inclusive_or_expression
-- On LEFT reduce production logical_and_expression -> logical_and_expression ANDAND inclusive_or_expression
-- On LBRACK reduce production logical_and_expression -> logical_and_expression ANDAND inclusive_or_expression
-- On LBRACE reduce production logical_and_expression -> logical_and_expression ANDAND inclusive_or_expression
-- On INT reduce production logical_and_expression -> logical_and_expression ANDAND inclusive_or_expression
-- On INLINE reduce production logical_and_expression -> logical_and_expression ANDAND inclusive_or_expression
-- On INC reduce production logical_and_expression -> logical_and_expression ANDAND inclusive_or_expression
-- On IF reduce production logical_and_expression -> logical_and_expression ANDAND inclusive_or_expression
-- On HAT reduce production logical_and_expression -> logical_and_expression ANDAND inclusive_or_expression
-- On GT reduce production logical_and_expression -> logical_and_expression ANDAND inclusive_or_expression
-- On GOTO reduce production logical_and_expression -> logical_and_expression ANDAND inclusive_or_expression
-- On GEQ reduce production logical_and_expression -> logical_and_expression ANDAND inclusive_or_expression
-- On FOR reduce production logical_and_expression -> logical_and_expression ANDAND inclusive_or_expression
-- On FLOAT reduce production logical_and_expression -> logical_and_expression ANDAND inclusive_or_expression
-- On EXTERN reduce production logical_and_expression -> logical_and_expression ANDAND inclusive_or_expression
-- On EQEQ reduce production logical_and_expression -> logical_and_expression ANDAND inclusive_or_expression
-- On EQ reduce production logical_and_expression -> logical_and_expression ANDAND inclusive_or_expression
-- On EOF reduce production logical_and_expression -> logical_and_expression ANDAND inclusive_or_expression
-- On ENUM reduce production logical_and_expression -> logical_and_expression ANDAND inclusive_or_expression
-- On ELSE reduce production logical_and_expression -> logical_and_expression ANDAND inclusive_or_expression
-- On ELLIPSIS reduce production logical_and_expression -> logical_and_expression ANDAND inclusive_or_expression
-- On DOUBLE reduce production logical_and_expression -> logical_and_expression ANDAND inclusive_or_expression
-- On DOT reduce production logical_and_expression -> logical_and_expression ANDAND inclusive_or_expression
-- On DO reduce production logical_and_expression -> logical_and_expression ANDAND inclusive_or_expression
-- On DIV_ASSIGN reduce production logical_and_expression -> logical_and_expression ANDAND inclusive_or_expression
-- On DEFAULT reduce production logical_and_expression -> logical_and_expression ANDAND inclusive_or_expression
-- On DEC reduce production logical_and_expression -> logical_and_expression ANDAND inclusive_or_expression
-- On CONTINUE reduce production logical_and_expression -> logical_and_expression ANDAND inclusive_or_expression
-- On CONSTANT reduce production logical_and_expression -> logical_and_expression ANDAND inclusive_or_expression
-- On CONST reduce production logical_and_expression -> logical_and_expression ANDAND inclusive_or_expression
-- On COMMA reduce production logical_and_expression -> logical_and_expression ANDAND inclusive_or_expression
-- On COLON reduce production logical_and_expression -> logical_and_expression ANDAND inclusive_or_expression
-- On CHAR reduce production logical_and_expression -> logical_and_expression ANDAND inclusive_or_expression
-- On CASE reduce production logical_and_expression -> logical_and_expression ANDAND inclusive_or_expression
-- On BUILTIN_VA_ARG reduce production logical_and_expression -> logical_and_expression ANDAND inclusive_or_expression
-- On BREAK reduce production logical_and_expression -> logical_and_expression ANDAND inclusive_or_expression
-- On BARBAR reduce production logical_and_expression -> logical_and_expression ANDAND inclusive_or_expression
-- On BANG reduce production logical_and_expression -> logical_and_expression ANDAND inclusive_or_expression
-- On AUTO reduce production logical_and_expression -> logical_and_expression ANDAND inclusive_or_expression
-- On ATTRIBUTE reduce production logical_and_expression -> logical_and_expression ANDAND inclusive_or_expression
-- On ASM reduce production logical_and_expression -> logical_and_expression ANDAND inclusive_or_expression
-- On AND_ASSIGN reduce production logical_and_expression -> logical_and_expression ANDAND inclusive_or_expression
-- On ANDAND reduce production logical_and_expression -> logical_and_expression ANDAND inclusive_or_expression
-- On AND reduce production logical_and_expression -> logical_and_expression ANDAND inclusive_or_expression
-- On ALIGNOF reduce production logical_and_expression -> logical_and_expression ANDAND inclusive_or_expression
-- On ALIGNAS reduce production logical_and_expression -> logical_and_expression ANDAND inclusive_or_expression
-- On ADD_ASSIGN reduce production logical_and_expression -> logical_and_expression ANDAND inclusive_or_expression

State 107:
## Known stack suffix:
## inclusive_or_expression BAR
## LR(1) items:
inclusive_or_expression -> inclusive_or_expression BAR . exclusive_or_expression [ SEMICOLON RPAREN RBRACK RBRACE QUESTION COMMA COLON BARBAR BAR ANDAND ]
## Transitions:
-- On TILDE shift to state 18
-- On STRING_LITERAL shift to state 19
-- On STAR shift to state 20
-- On SIZEOF shift to state 21
-- On PRE_NAME shift to state 22
-- On PLUS shift to state 24
-- On MINUS shift to state 25
-- On LPAREN shift to state 28
-- On INC shift to state 31
-- On DEC shift to state 46
-- On CONSTANT shift to state 47
-- On BUILTIN_VA_ARG shift to state 48
-- On BANG shift to state 50
-- On AND shift to state 51
-- On ALIGNOF shift to state 52
-- On unary_operator shift to state 56
-- On unary_expression shift to state 57
-- On string_literals_list shift to state 58
-- On shift_expression shift to state 78
-- On relational_expression shift to state 94
-- On primary_expression shift to state 60
-- On postfix_expression shift to state 61
-- On multiplicative_expression shift to state 82
-- On exclusive_or_expression shift to state 108
-- On equality_expression shift to state 110
-- On cast_expression shift to state 88
-- On and_expression shift to state 118
-- On additive_expression shift to state 101
## Reductions:

State 108:
## Known stack suffix:
## inclusive_or_expression BAR exclusive_or_expression
## LR(1) items:
exclusive_or_expression -> exclusive_or_expression . HAT and_expression [ SEMICOLON RPAREN RBRACK RBRACE QUESTION HAT COMMA COLON BARBAR BAR ANDAND ]
inclusive_or_expression -> inclusive_or_expression BAR exclusive_or_expression . [ SEMICOLON RPAREN RBRACK RBRACE QUESTION COMMA COLON BARBAR BAR ANDAND ]
## Transitions:
-- On HAT shift to state 109
## Reductions:
-- On XOR_ASSIGN reduce production inclusive_or_expression -> inclusive_or_expression BAR exclusive_or_expression
-- On WHILE reduce production inclusive_or_expression -> inclusive_or_expression BAR exclusive_or_expression
-- On VOLATILE reduce production inclusive_or_expression -> inclusive_or_expression BAR exclusive_or_expression
-- On VOID reduce production inclusive_or_expression -> inclusive_or_expression BAR exclusive_or_expression
-- On VAR_NAME reduce production inclusive_or_expression -> inclusive_or_expression BAR exclusive_or_expression
-- On UNSIGNED reduce production inclusive_or_expression -> inclusive_or_expression BAR exclusive_or_expression
-- On UNION reduce production inclusive_or_expression -> inclusive_or_expression BAR exclusive_or_expression
-- On UNDERSCORE_BOOL reduce production inclusive_or_expression -> inclusive_or_expression BAR exclusive_or_expression
-- On TYPEDEF_NAME reduce production inclusive_or_expression -> inclusive_or_expression BAR exclusive_or_expression
-- On TYPEDEF reduce production inclusive_or_expression -> inclusive_or_expression BAR exclusive_or_expression
-- On TILDE reduce production inclusive_or_expression -> inclusive_or_expression BAR exclusive_or_expression
-- On SWITCH reduce production inclusive_or_expression -> inclusive_or_expression BAR exclusive_or_expression
-- On SUB_ASSIGN reduce production inclusive_or_expression -> inclusive_or_expression BAR exclusive_or_expression
-- On STRUCT reduce production inclusive_or_expression -> inclusive_or_expression BAR exclusive_or_expression
-- On STRING_LITERAL reduce production inclusive_or_expression -> inclusive_or_expression BAR exclusive_or_expression
-- On STATIC reduce production inclusive_or_expression -> inclusive_or_expression BAR exclusive_or_expression
-- On STAR reduce production inclusive_or_expression -> inclusive_or_expression BAR exclusive_or_expression
-- On SLASH reduce production inclusive_or_expression -> inclusive_or_expression BAR exclusive_or_expression
-- On SIZEOF reduce production inclusive_or_expression -> inclusive_or_expression BAR exclusive_or_expression
-- On SIGNED reduce production inclusive_or_expression -> inclusive_or_expression BAR exclusive_or_expression
-- On SHORT reduce production inclusive_or_expression -> inclusive_or_expression BAR exclusive_or_expression
-- On SEMICOLON reduce production inclusive_or_expression -> inclusive_or_expression BAR exclusive_or_expression
-- On RPAREN reduce production inclusive_or_expression -> inclusive_or_expression BAR exclusive_or_expression
-- On RIGHT_ASSIGN reduce production inclusive_or_expression -> inclusive_or_expression BAR exclusive_or_expression
-- On RIGHT reduce production inclusive_or_expression -> inclusive_or_expression BAR exclusive_or_expression
-- On RETURN reduce production inclusive_or_expression -> inclusive_or_expression BAR exclusive_or_expression
-- On RESTRICT reduce production inclusive_or_expression -> inclusive_or_expression BAR exclusive_or_expression
-- On REGISTER reduce production inclusive_or_expression -> inclusive_or_expression BAR exclusive_or_expression
-- On RBRACK reduce production inclusive_or_expression -> inclusive_or_expression BAR exclusive_or_expression
-- On RBRACE reduce production inclusive_or_expression -> inclusive_or_expression BAR exclusive_or_expression
-- On QUESTION reduce production inclusive_or_expression -> inclusive_or_expression BAR exclusive_or_expression
-- On PTR reduce production inclusive_or_expression -> inclusive_or_expression BAR exclusive_or_expression
-- On PRE_NAME reduce production inclusive_or_expression -> inclusive_or_expression BAR exclusive_or_expression
-- On PRAGMA reduce production inclusive_or_expression -> inclusive_or_expression BAR exclusive_or_expression
-- On PLUS reduce production inclusive_or_expression -> inclusive_or_expression BAR exclusive_or_expression
-- On PERCENT reduce production inclusive_or_expression -> inclusive_or_expression BAR exclusive_or_expression
-- On PACKED reduce production inclusive_or_expression -> inclusive_or_expression BAR exclusive_or_expression
-- On OR_ASSIGN reduce production inclusive_or_expression -> inclusive_or_expression BAR exclusive_or_expression
-- On NEQ reduce production inclusive_or_expression -> inclusive_or_expression BAR exclusive_or_expression
-- On MUL_ASSIGN reduce production inclusive_or_expression -> inclusive_or_expression BAR exclusive_or_expression
-- On MOD_ASSIGN reduce production inclusive_or_expression -> inclusive_or_expression BAR exclusive_or_expression
-- On MINUS reduce production inclusive_or_expression -> inclusive_or_expression BAR exclusive_or_expression
-- On LT reduce production inclusive_or_expression -> inclusive_or_expression BAR exclusive_or_expression
-- On LPAREN reduce production inclusive_or_expression -> inclusive_or_expression BAR exclusive_or_expression
-- On LONG reduce production inclusive_or_expression -> inclusive_or_expression BAR exclusive_or_expression
-- On LEQ reduce production inclusive_or_expression -> inclusive_or_expression BAR exclusive_or_expression
-- On LEFT_ASSIGN reduce production inclusive_or_expression -> inclusive_or_expression BAR exclusive_or_expression
-- On LEFT reduce production inclusive_or_expression -> inclusive_or_expression BAR exclusive_or_expression
-- On LBRACK reduce production inclusive_or_expression -> inclusive_or_expression BAR exclusive_or_expression
-- On LBRACE reduce production inclusive_or_expression -> inclusive_or_expression BAR exclusive_or_expression
-- On INT reduce production inclusive_or_expression -> inclusive_or_expression BAR exclusive_or_expression
-- On INLINE reduce production inclusive_or_expression -> inclusive_or_expression BAR exclusive_or_expression
-- On INC reduce production inclusive_or_expression -> inclusive_or_expression BAR exclusive_or_expression
-- On IF reduce production inclusive_or_expression -> inclusive_or_expression BAR exclusive_or_expression
-- On GT reduce production inclusive_or_expression -> inclusive_or_expression BAR exclusive_or_expression
-- On GOTO reduce production inclusive_or_expression -> inclusive_or_expression BAR exclusive_or_expression
-- On GEQ reduce production inclusive_or_expression -> inclusive_or_expression BAR exclusive_or_expression
-- On FOR reduce production inclusive_or_expression -> inclusive_or_expression BAR exclusive_or_expression
-- On FLOAT reduce production inclusive_or_expression -> inclusive_or_expression BAR exclusive_or_expression
-- On EXTERN reduce production inclusive_or_expression -> inclusive_or_expression BAR exclusive_or_expression
-- On EQEQ reduce production inclusive_or_expression -> inclusive_or_expression BAR exclusive_or_expression
-- On EQ reduce production inclusive_or_expression -> inclusive_or_expression BAR exclusive_or_expression
-- On EOF reduce production inclusive_or_expression -> inclusive_or_expression BAR exclusive_or_expression
-- On ENUM reduce production inclusive_or_expression -> inclusive_or_expression BAR exclusive_or_expression
-- On ELSE reduce production inclusive_or_expression -> inclusive_or_expression BAR exclusive_or_expression
-- On ELLIPSIS reduce production inclusive_or_expression -> inclusive_or_expression BAR exclusive_or_expression
-- On DOUBLE reduce production inclusive_or_expression -> inclusive_or_expression BAR exclusive_or_expression
-- On DOT reduce production inclusive_or_expression -> inclusive_or_expression BAR exclusive_or_expression
-- On DO reduce production inclusive_or_expression -> inclusive_or_expression BAR exclusive_or_expression
-- On DIV_ASSIGN reduce production inclusive_or_expression -> inclusive_or_expression BAR exclusive_or_expression
-- On DEFAULT reduce production inclusive_or_expression -> inclusive_or_expression BAR exclusive_or_expression
-- On DEC reduce production inclusive_or_expression -> inclusive_or_expression BAR exclusive_or_expression
-- On CONTINUE reduce production inclusive_or_expression -> inclusive_or_expression BAR exclusive_or_expression
-- On CONSTANT reduce production inclusive_or_expression -> inclusive_or_expression BAR exclusive_or_expression
-- On CONST reduce production inclusive_or_expression -> inclusive_or_expression BAR exclusive_or_expression
-- On COMMA reduce production inclusive_or_expression -> inclusive_or_expression BAR exclusive_or_expression
-- On COLON reduce production inclusive_or_expression -> inclusive_or_expression BAR exclusive_or_expression
-- On CHAR reduce production inclusive_or_expression -> inclusive_or_expression BAR exclusive_or_expression
-- On CASE reduce production inclusive_or_expression -> inclusive_or_expression BAR exclusive_or_expression
-- On BUILTIN_VA_ARG reduce production inclusive_or_expression -> inclusive_or_expression BAR exclusive_or_expression
-- On BREAK reduce production inclusive_or_expression -> inclusive_or_expression BAR exclusive_or_expression
-- On BARBAR reduce production inclusive_or_expression -> inclusive_or_expression BAR exclusive_or_expression
-- On BAR reduce production inclusive_or_expression -> inclusive_or_expression BAR exclusive_or_expression
-- On BANG reduce production inclusive_or_expression -> inclusive_or_expression BAR exclusive_or_expression
-- On AUTO reduce production inclusive_or_expression -> inclusive_or_expression BAR exclusive_or_expression
-- On ATTRIBUTE reduce production inclusive_or_expression -> inclusive_or_expression BAR exclusive_or_expression
-- On ASM reduce production inclusive_or_expression -> inclusive_or_expression BAR exclusive_or_expression
-- On AND_ASSIGN reduce production inclusive_or_expression -> inclusive_or_expression BAR exclusive_or_expression
-- On ANDAND reduce production inclusive_or_expression -> inclusive_or_expression BAR exclusive_or_expression
-- On AND reduce production inclusive_or_expression -> inclusive_or_expression BAR exclusive_or_expression
-- On ALIGNOF reduce production inclusive_or_expression -> inclusive_or_expression BAR exclusive_or_expression
-- On ALIGNAS reduce production inclusive_or_expression -> inclusive_or_expression BAR exclusive_or_expression
-- On ADD_ASSIGN reduce production inclusive_or_expression -> inclusive_or_expression BAR exclusive_or_expression

State 109:
## Known stack suffix:
## exclusive_or_expression HAT
## LR(1) items:
exclusive_or_expression -> exclusive_or_expression HAT . and_expression [ SEMICOLON RPAREN RBRACK RBRACE QUESTION HAT COMMA COLON BARBAR BAR ANDAND ]
## Transitions:
-- On TILDE shift to state 18
-- On STRING_LITERAL shift to state 19
-- On STAR shift to state 20
-- On SIZEOF shift to state 21
-- On PRE_NAME shift to state 22
-- On PLUS shift to state 24
-- On MINUS shift to state 25
-- On LPAREN shift to state 28
-- On INC shift to state 31
-- On DEC shift to state 46
-- On CONSTANT shift to state 47
-- On BUILTIN_VA_ARG shift to state 48
-- On BANG shift to state 50
-- On AND shift to state 51
-- On ALIGNOF shift to state 52
-- On unary_operator shift to state 56
-- On unary_expression shift to state 57
-- On string_literals_list shift to state 58
-- On shift_expression shift to state 78
-- On relational_expression shift to state 94
-- On primary_expression shift to state 60
-- On postfix_expression shift to state 61
-- On multiplicative_expression shift to state 82
-- On equality_expression shift to state 110
-- On cast_expression shift to state 88
-- On and_expression shift to state 115
-- On additive_expression shift to state 101
## Reductions:

State 110:
## Known stack suffix:
## equality_expression
## LR(1) items:
and_expression -> equality_expression . [ SEMICOLON RPAREN RBRACK RBRACE QUESTION HAT COMMA COLON BARBAR BAR ANDAND AND ]
equality_expression -> equality_expression . equality_operator relational_expression [ SEMICOLON RPAREN RBRACK RBRACE QUESTION NEQ HAT EQEQ COMMA COLON BARBAR BAR ANDAND AND ]
## Transitions:
-- On NEQ shift to state 111
-- On EQEQ shift to state 112
-- On equality_operator shift to state 113
## Reductions:
-- On XOR_ASSIGN reduce production and_expression -> equality_expression
-- On WHILE reduce production and_expression -> equality_expression
-- On VOLATILE reduce production and_expression -> equality_expression
-- On VOID reduce production and_expression -> equality_expression
-- On VAR_NAME reduce production and_expression -> equality_expression
-- On UNSIGNED reduce production and_expression -> equality_expression
-- On UNION reduce production and_expression -> equality_expression
-- On UNDERSCORE_BOOL reduce production and_expression -> equality_expression
-- On TYPEDEF_NAME reduce production and_expression -> equality_expression
-- On TYPEDEF reduce production and_expression -> equality_expression
-- On TILDE reduce production and_expression -> equality_expression
-- On SWITCH reduce production and_expression -> equality_expression
-- On SUB_ASSIGN reduce production and_expression -> equality_expression
-- On STRUCT reduce production and_expression -> equality_expression
-- On STRING_LITERAL reduce production and_expression -> equality_expression
-- On STATIC reduce production and_expression -> equality_expression
-- On STAR reduce production and_expression -> equality_expression
-- On SLASH reduce production and_expression -> equality_expression
-- On SIZEOF reduce production and_expression -> equality_expression
-- On SIGNED reduce production and_expression -> equality_expression
-- On SHORT reduce production and_expression -> equality_expression
-- On SEMICOLON reduce production and_expression -> equality_expression
-- On RPAREN reduce production and_expression -> equality_expression
-- On RIGHT_ASSIGN reduce production and_expression -> equality_expression
-- On RIGHT reduce production and_expression -> equality_expression
-- On RETURN reduce production and_expression -> equality_expression
-- On RESTRICT reduce production and_expression -> equality_expression
-- On REGISTER reduce production and_expression -> equality_expression
-- On RBRACK reduce production and_expression -> equality_expression
-- On RBRACE reduce production and_expression -> equality_expression
-- On QUESTION reduce production and_expression -> equality_expression
-- On PTR reduce production and_expression -> equality_expression
-- On PRE_NAME reduce production and_expression -> equality_expression
-- On PRAGMA reduce production and_expression -> equality_expression
-- On PLUS reduce production and_expression -> equality_expression
-- On PERCENT reduce production and_expression -> equality_expression
-- On PACKED reduce production and_expression -> equality_expression
-- On OR_ASSIGN reduce production and_expression -> equality_expression
-- On MUL_ASSIGN reduce production and_expression -> equality_expression
-- On MOD_ASSIGN reduce production and_expression -> equality_expression
-- On MINUS reduce production and_expression -> equality_expression
-- On LT reduce production and_expression -> equality_expression
-- On LPAREN reduce production and_expression -> equality_expression
-- On LONG reduce production and_expression -> equality_expression
-- On LEQ reduce production and_expression -> equality_expression
-- On LEFT_ASSIGN reduce production and_expression -> equality_expression
-- On LEFT reduce production and_expression -> equality_expression
-- On LBRACK reduce production and_expression -> equality_expression
-- On LBRACE reduce production and_expression -> equality_expression
-- On INT reduce production and_expression -> equality_expression
-- On INLINE reduce production and_expression -> equality_expression
-- On INC reduce production and_expression -> equality_expression
-- On IF reduce production and_expression -> equality_expression
-- On HAT reduce production and_expression -> equality_expression
-- On GT reduce production and_expression -> equality_expression
-- On GOTO reduce production and_expression -> equality_expression
-- On GEQ reduce production and_expression -> equality_expression
-- On FOR reduce production and_expression -> equality_expression
-- On FLOAT reduce production and_expression -> equality_expression
-- On EXTERN reduce production and_expression -> equality_expression
-- On EQ reduce production and_expression -> equality_expression
-- On EOF reduce production and_expression -> equality_expression
-- On ENUM reduce production and_expression -> equality_expression
-- On ELSE reduce production and_expression -> equality_expression
-- On ELLIPSIS reduce production and_expression -> equality_expression
-- On DOUBLE reduce production and_expression -> equality_expression
-- On DOT reduce production and_expression -> equality_expression
-- On DO reduce production and_expression -> equality_expression
-- On DIV_ASSIGN reduce production and_expression -> equality_expression
-- On DEFAULT reduce production and_expression -> equality_expression
-- On DEC reduce production and_expression -> equality_expression
-- On CONTINUE reduce production and_expression -> equality_expression
-- On CONSTANT reduce production and_expression -> equality_expression
-- On CONST reduce production and_expression -> equality_expression
-- On COMMA reduce production and_expression -> equality_expression
-- On COLON reduce production and_expression -> equality_expression
-- On CHAR reduce production and_expression -> equality_expression
-- On CASE reduce production and_expression -> equality_expression
-- On BUILTIN_VA_ARG reduce production and_expression -> equality_expression
-- On BREAK reduce production and_expression -> equality_expression
-- On BARBAR reduce production and_expression -> equality_expression
-- On BAR reduce production and_expression -> equality_expression
-- On BANG reduce production and_expression -> equality_expression
-- On AUTO reduce production and_expression -> equality_expression
-- On ATTRIBUTE reduce production and_expression -> equality_expression
-- On ASM reduce production and_expression -> equality_expression
-- On AND_ASSIGN reduce production and_expression -> equality_expression
-- On ANDAND reduce production and_expression -> equality_expression
-- On AND reduce production and_expression -> equality_expression
-- On ALIGNOF reduce production and_expression -> equality_expression
-- On ALIGNAS reduce production and_expression -> equality_expression
-- On ADD_ASSIGN reduce production and_expression -> equality_expression

State 111:
## Known stack suffix:
## NEQ
## LR(1) items:
equality_operator -> NEQ . [ TILDE STRING_LITERAL STAR SIZEOF PRE_NAME PLUS MINUS LPAREN INC DEC CONSTANT BUILTIN_VA_ARG BANG AND ALIGNOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production equality_operator -> NEQ

State 112:
## Known stack suffix:
## EQEQ
## LR(1) items:
equality_operator -> EQEQ . [ TILDE STRING_LITERAL STAR SIZEOF PRE_NAME PLUS MINUS LPAREN INC DEC CONSTANT BUILTIN_VA_ARG BANG AND ALIGNOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production equality_operator -> EQEQ

State 113:
## Known stack suffix:
## equality_expression equality_operator
## LR(1) items:
equality_expression -> equality_expression equality_operator . relational_expression [ SEMICOLON RPAREN RBRACK RBRACE QUESTION NEQ HAT EQEQ COMMA COLON BARBAR BAR ANDAND AND ]
## Transitions:
-- On TILDE shift to state 18
-- On STRING_LITERAL shift to state 19
-- On STAR shift to state 20
-- On SIZEOF shift to state 21
-- On PRE_NAME shift to state 22
-- On PLUS shift to state 24
-- On MINUS shift to state 25
-- On LPAREN shift to state 28
-- On INC shift to state 31
-- On DEC shift to state 46
-- On CONSTANT shift to state 47
-- On BUILTIN_VA_ARG shift to state 48
-- On BANG shift to state 50
-- On AND shift to state 51
-- On ALIGNOF shift to state 52
-- On unary_operator shift to state 56
-- On unary_expression shift to state 57
-- On string_literals_list shift to state 58
-- On shift_expression shift to state 78
-- On relational_expression shift to state 114
-- On primary_expression shift to state 60
-- On postfix_expression shift to state 61
-- On multiplicative_expression shift to state 82
-- On cast_expression shift to state 88
-- On additive_expression shift to state 101
## Reductions:

State 114:
## Known stack suffix:
## equality_expression equality_operator relational_expression
## LR(1) items:
equality_expression -> equality_expression equality_operator relational_expression . [ SEMICOLON RPAREN RBRACK RBRACE QUESTION NEQ HAT EQEQ COMMA COLON BARBAR BAR ANDAND AND ]
relational_expression -> relational_expression . relational_operator shift_expression [ SEMICOLON RPAREN RBRACK RBRACE QUESTION NEQ LT LEQ HAT GT GEQ EQEQ COMMA COLON BARBAR BAR ANDAND AND ]
## Transitions:
-- On LT shift to state 95
-- On LEQ shift to state 96
-- On GT shift to state 97
-- On GEQ shift to state 98
-- On relational_operator shift to state 99
## Reductions:
-- On XOR_ASSIGN reduce production equality_expression -> equality_expression equality_operator relational_expression
-- On WHILE reduce production equality_expression -> equality_expression equality_operator relational_expression
-- On VOLATILE reduce production equality_expression -> equality_expression equality_operator relational_expression
-- On VOID reduce production equality_expression -> equality_expression equality_operator relational_expression
-- On VAR_NAME reduce production equality_expression -> equality_expression equality_operator relational_expression
-- On UNSIGNED reduce production equality_expression -> equality_expression equality_operator relational_expression
-- On UNION reduce production equality_expression -> equality_expression equality_operator relational_expression
-- On UNDERSCORE_BOOL reduce production equality_expression -> equality_expression equality_operator relational_expression
-- On TYPEDEF_NAME reduce production equality_expression -> equality_expression equality_operator relational_expression
-- On TYPEDEF reduce production equality_expression -> equality_expression equality_operator relational_expression
-- On TILDE reduce production equality_expression -> equality_expression equality_operator relational_expression
-- On SWITCH reduce production equality_expression -> equality_expression equality_operator relational_expression
-- On SUB_ASSIGN reduce production equality_expression -> equality_expression equality_operator relational_expression
-- On STRUCT reduce production equality_expression -> equality_expression equality_operator relational_expression
-- On STRING_LITERAL reduce production equality_expression -> equality_expression equality_operator relational_expression
-- On STATIC reduce production equality_expression -> equality_expression equality_operator relational_expression
-- On STAR reduce production equality_expression -> equality_expression equality_operator relational_expression
-- On SLASH reduce production equality_expression -> equality_expression equality_operator relational_expression
-- On SIZEOF reduce production equality_expression -> equality_expression equality_operator relational_expression
-- On SIGNED reduce production equality_expression -> equality_expression equality_operator relational_expression
-- On SHORT reduce production equality_expression -> equality_expression equality_operator relational_expression
-- On SEMICOLON reduce production equality_expression -> equality_expression equality_operator relational_expression
-- On RPAREN reduce production equality_expression -> equality_expression equality_operator relational_expression
-- On RIGHT_ASSIGN reduce production equality_expression -> equality_expression equality_operator relational_expression
-- On RIGHT reduce production equality_expression -> equality_expression equality_operator relational_expression
-- On RETURN reduce production equality_expression -> equality_expression equality_operator relational_expression
-- On RESTRICT reduce production equality_expression -> equality_expression equality_operator relational_expression
-- On REGISTER reduce production equality_expression -> equality_expression equality_operator relational_expression
-- On RBRACK reduce production equality_expression -> equality_expression equality_operator relational_expression
-- On RBRACE reduce production equality_expression -> equality_expression equality_operator relational_expression
-- On QUESTION reduce production equality_expression -> equality_expression equality_operator relational_expression
-- On PTR reduce production equality_expression -> equality_expression equality_operator relational_expression
-- On PRE_NAME reduce production equality_expression -> equality_expression equality_operator relational_expression
-- On PRAGMA reduce production equality_expression -> equality_expression equality_operator relational_expression
-- On PLUS reduce production equality_expression -> equality_expression equality_operator relational_expression
-- On PERCENT reduce production equality_expression -> equality_expression equality_operator relational_expression
-- On PACKED reduce production equality_expression -> equality_expression equality_operator relational_expression
-- On OR_ASSIGN reduce production equality_expression -> equality_expression equality_operator relational_expression
-- On NEQ reduce production equality_expression -> equality_expression equality_operator relational_expression
-- On MUL_ASSIGN reduce production equality_expression -> equality_expression equality_operator relational_expression
-- On MOD_ASSIGN reduce production equality_expression -> equality_expression equality_operator relational_expression
-- On MINUS reduce production equality_expression -> equality_expression equality_operator relational_expression
-- On LPAREN reduce production equality_expression -> equality_expression equality_operator relational_expression
-- On LONG reduce production equality_expression -> equality_expression equality_operator relational_expression
-- On LEFT_ASSIGN reduce production equality_expression -> equality_expression equality_operator relational_expression
-- On LEFT reduce production equality_expression -> equality_expression equality_operator relational_expression
-- On LBRACK reduce production equality_expression -> equality_expression equality_operator relational_expression
-- On LBRACE reduce production equality_expression -> equality_expression equality_operator relational_expression
-- On INT reduce production equality_expression -> equality_expression equality_operator relational_expression
-- On INLINE reduce production equality_expression -> equality_expression equality_operator relational_expression
-- On INC reduce production equality_expression -> equality_expression equality_operator relational_expression
-- On IF reduce production equality_expression -> equality_expression equality_operator relational_expression
-- On HAT reduce production equality_expression -> equality_expression equality_operator relational_expression
-- On GOTO reduce production equality_expression -> equality_expression equality_operator relational_expression
-- On FOR reduce production equality_expression -> equality_expression equality_operator relational_expression
-- On FLOAT reduce production equality_expression -> equality_expression equality_operator relational_expression
-- On EXTERN reduce production equality_expression -> equality_expression equality_operator relational_expression
-- On EQEQ reduce production equality_expression -> equality_expression equality_operator relational_expression
-- On EQ reduce production equality_expression -> equality_expression equality_operator relational_expression
-- On EOF reduce production equality_expression -> equality_expression equality_operator relational_expression
-- On ENUM reduce production equality_expression -> equality_expression equality_operator relational_expression
-- On ELSE reduce production equality_expression -> equality_expression equality_operator relational_expression
-- On ELLIPSIS reduce production equality_expression -> equality_expression equality_operator relational_expression
-- On DOUBLE reduce production equality_expression -> equality_expression equality_operator relational_expression
-- On DOT reduce production equality_expression -> equality_expression equality_operator relational_expression
-- On DO reduce production equality_expression -> equality_expression equality_operator relational_expression
-- On DIV_ASSIGN reduce production equality_expression -> equality_expression equality_operator relational_expression
-- On DEFAULT reduce production equality_expression -> equality_expression equality_operator relational_expression
-- On DEC reduce production equality_expression -> equality_expression equality_operator relational_expression
-- On CONTINUE reduce production equality_expression -> equality_expression equality_operator relational_expression
-- On CONSTANT reduce production equality_expression -> equality_expression equality_operator relational_expression
-- On CONST reduce production equality_expression -> equality_expression equality_operator relational_expression
-- On COMMA reduce production equality_expression -> equality_expression equality_operator relational_expression
-- On COLON reduce production equality_expression -> equality_expression equality_operator relational_expression
-- On CHAR reduce production equality_expression -> equality_expression equality_operator relational_expression
-- On CASE reduce production equality_expression -> equality_expression equality_operator relational_expression
-- On BUILTIN_VA_ARG reduce production equality_expression -> equality_expression equality_operator relational_expression
-- On BREAK reduce production equality_expression -> equality_expression equality_operator relational_expression
-- On BARBAR reduce production equality_expression -> equality_expression equality_operator relational_expression
-- On BAR reduce production equality_expression -> equality_expression equality_operator relational_expression
-- On BANG reduce production equality_expression -> equality_expression equality_operator relational_expression
-- On AUTO reduce production equality_expression -> equality_expression equality_operator relational_expression
-- On ATTRIBUTE reduce production equality_expression -> equality_expression equality_operator relational_expression
-- On ASM reduce production equality_expression -> equality_expression equality_operator relational_expression
-- On AND_ASSIGN reduce production equality_expression -> equality_expression equality_operator relational_expression
-- On ANDAND reduce production equality_expression -> equality_expression equality_operator relational_expression
-- On AND reduce production equality_expression -> equality_expression equality_operator relational_expression
-- On ALIGNOF reduce production equality_expression -> equality_expression equality_operator relational_expression
-- On ALIGNAS reduce production equality_expression -> equality_expression equality_operator relational_expression
-- On ADD_ASSIGN reduce production equality_expression -> equality_expression equality_operator relational_expression

State 115:
## Known stack suffix:
## exclusive_or_expression HAT and_expression
## LR(1) items:
and_expression -> and_expression . AND equality_expression [ SEMICOLON RPAREN RBRACK RBRACE QUESTION HAT COMMA COLON BARBAR BAR ANDAND AND ]
exclusive_or_expression -> exclusive_or_expression HAT and_expression . [ SEMICOLON RPAREN RBRACK RBRACE QUESTION HAT COMMA COLON BARBAR BAR ANDAND ]
## Transitions:
-- On AND shift to state 116
## Reductions:
-- On XOR_ASSIGN reduce production exclusive_or_expression -> exclusive_or_expression HAT and_expression
-- On WHILE reduce production exclusive_or_expression -> exclusive_or_expression HAT and_expression
-- On VOLATILE reduce production exclusive_or_expression -> exclusive_or_expression HAT and_expression
-- On VOID reduce production exclusive_or_expression -> exclusive_or_expression HAT and_expression
-- On VAR_NAME reduce production exclusive_or_expression -> exclusive_or_expression HAT and_expression
-- On UNSIGNED reduce production exclusive_or_expression -> exclusive_or_expression HAT and_expression
-- On UNION reduce production exclusive_or_expression -> exclusive_or_expression HAT and_expression
-- On UNDERSCORE_BOOL reduce production exclusive_or_expression -> exclusive_or_expression HAT and_expression
-- On TYPEDEF_NAME reduce production exclusive_or_expression -> exclusive_or_expression HAT and_expression
-- On TYPEDEF reduce production exclusive_or_expression -> exclusive_or_expression HAT and_expression
-- On TILDE reduce production exclusive_or_expression -> exclusive_or_expression HAT and_expression
-- On SWITCH reduce production exclusive_or_expression -> exclusive_or_expression HAT and_expression
-- On SUB_ASSIGN reduce production exclusive_or_expression -> exclusive_or_expression HAT and_expression
-- On STRUCT reduce production exclusive_or_expression -> exclusive_or_expression HAT and_expression
-- On STRING_LITERAL reduce production exclusive_or_expression -> exclusive_or_expression HAT and_expression
-- On STATIC reduce production exclusive_or_expression -> exclusive_or_expression HAT and_expression
-- On STAR reduce production exclusive_or_expression -> exclusive_or_expression HAT and_expression
-- On SLASH reduce production exclusive_or_expression -> exclusive_or_expression HAT and_expression
-- On SIZEOF reduce production exclusive_or_expression -> exclusive_or_expression HAT and_expression
-- On SIGNED reduce production exclusive_or_expression -> exclusive_or_expression HAT and_expression
-- On SHORT reduce production exclusive_or_expression -> exclusive_or_expression HAT and_expression
-- On SEMICOLON reduce production exclusive_or_expression -> exclusive_or_expression HAT and_expression
-- On RPAREN reduce production exclusive_or_expression -> exclusive_or_expression HAT and_expression
-- On RIGHT_ASSIGN reduce production exclusive_or_expression -> exclusive_or_expression HAT and_expression
-- On RIGHT reduce production exclusive_or_expression -> exclusive_or_expression HAT and_expression
-- On RETURN reduce production exclusive_or_expression -> exclusive_or_expression HAT and_expression
-- On RESTRICT reduce production exclusive_or_expression -> exclusive_or_expression HAT and_expression
-- On REGISTER reduce production exclusive_or_expression -> exclusive_or_expression HAT and_expression
-- On RBRACK reduce production exclusive_or_expression -> exclusive_or_expression HAT and_expression
-- On RBRACE reduce production exclusive_or_expression -> exclusive_or_expression HAT and_expression
-- On QUESTION reduce production exclusive_or_expression -> exclusive_or_expression HAT and_expression
-- On PTR reduce production exclusive_or_expression -> exclusive_or_expression HAT and_expression
-- On PRE_NAME reduce production exclusive_or_expression -> exclusive_or_expression HAT and_expression
-- On PRAGMA reduce production exclusive_or_expression -> exclusive_or_expression HAT and_expression
-- On PLUS reduce production exclusive_or_expression -> exclusive_or_expression HAT and_expression
-- On PERCENT reduce production exclusive_or_expression -> exclusive_or_expression HAT and_expression
-- On PACKED reduce production exclusive_or_expression -> exclusive_or_expression HAT and_expression
-- On OR_ASSIGN reduce production exclusive_or_expression -> exclusive_or_expression HAT and_expression
-- On NEQ reduce production exclusive_or_expression -> exclusive_or_expression HAT and_expression
-- On MUL_ASSIGN reduce production exclusive_or_expression -> exclusive_or_expression HAT and_expression
-- On MOD_ASSIGN reduce production exclusive_or_expression -> exclusive_or_expression HAT and_expression
-- On MINUS reduce production exclusive_or_expression -> exclusive_or_expression HAT and_expression
-- On LT reduce production exclusive_or_expression -> exclusive_or_expression HAT and_expression
-- On LPAREN reduce production exclusive_or_expression -> exclusive_or_expression HAT and_expression
-- On LONG reduce production exclusive_or_expression -> exclusive_or_expression HAT and_expression
-- On LEQ reduce production exclusive_or_expression -> exclusive_or_expression HAT and_expression
-- On LEFT_ASSIGN reduce production exclusive_or_expression -> exclusive_or_expression HAT and_expression
-- On LEFT reduce production exclusive_or_expression -> exclusive_or_expression HAT and_expression
-- On LBRACK reduce production exclusive_or_expression -> exclusive_or_expression HAT and_expression
-- On LBRACE reduce production exclusive_or_expression -> exclusive_or_expression HAT and_expression
-- On INT reduce production exclusive_or_expression -> exclusive_or_expression HAT and_expression
-- On INLINE reduce production exclusive_or_expression -> exclusive_or_expression HAT and_expression
-- On INC reduce production exclusive_or_expression -> exclusive_or_expression HAT and_expression
-- On IF reduce production exclusive_or_expression -> exclusive_or_expression HAT and_expression
-- On HAT reduce production exclusive_or_expression -> exclusive_or_expression HAT and_expression
-- On GT reduce production exclusive_or_expression -> exclusive_or_expression HAT and_expression
-- On GOTO reduce production exclusive_or_expression -> exclusive_or_expression HAT and_expression
-- On GEQ reduce production exclusive_or_expression -> exclusive_or_expression HAT and_expression
-- On FOR reduce production exclusive_or_expression -> exclusive_or_expression HAT and_expression
-- On FLOAT reduce production exclusive_or_expression -> exclusive_or_expression HAT and_expression
-- On EXTERN reduce production exclusive_or_expression -> exclusive_or_expression HAT and_expression
-- On EQEQ reduce production exclusive_or_expression -> exclusive_or_expression HAT and_expression
-- On EQ reduce production exclusive_or_expression -> exclusive_or_expression HAT and_expression
-- On EOF reduce production exclusive_or_expression -> exclusive_or_expression HAT and_expression
-- On ENUM reduce production exclusive_or_expression -> exclusive_or_expression HAT and_expression
-- On ELSE reduce production exclusive_or_expression -> exclusive_or_expression HAT and_expression
-- On ELLIPSIS reduce production exclusive_or_expression -> exclusive_or_expression HAT and_expression
-- On DOUBLE reduce production exclusive_or_expression -> exclusive_or_expression HAT and_expression
-- On DOT reduce production exclusive_or_expression -> exclusive_or_expression HAT and_expression
-- On DO reduce production exclusive_or_expression -> exclusive_or_expression HAT and_expression
-- On DIV_ASSIGN reduce production exclusive_or_expression -> exclusive_or_expression HAT and_expression
-- On DEFAULT reduce production exclusive_or_expression -> exclusive_or_expression HAT and_expression
-- On DEC reduce production exclusive_or_expression -> exclusive_or_expression HAT and_expression
-- On CONTINUE reduce production exclusive_or_expression -> exclusive_or_expression HAT and_expression
-- On CONSTANT reduce production exclusive_or_expression -> exclusive_or_expression HAT and_expression
-- On CONST reduce production exclusive_or_expression -> exclusive_or_expression HAT and_expression
-- On COMMA reduce production exclusive_or_expression -> exclusive_or_expression HAT and_expression
-- On COLON reduce production exclusive_or_expression -> exclusive_or_expression HAT and_expression
-- On CHAR reduce production exclusive_or_expression -> exclusive_or_expression HAT and_expression
-- On CASE reduce production exclusive_or_expression -> exclusive_or_expression HAT and_expression
-- On BUILTIN_VA_ARG reduce production exclusive_or_expression -> exclusive_or_expression HAT and_expression
-- On BREAK reduce production exclusive_or_expression -> exclusive_or_expression HAT and_expression
-- On BARBAR reduce production exclusive_or_expression -> exclusive_or_expression HAT and_expression
-- On BAR reduce production exclusive_or_expression -> exclusive_or_expression HAT and_expression
-- On BANG reduce production exclusive_or_expression -> exclusive_or_expression HAT and_expression
-- On AUTO reduce production exclusive_or_expression -> exclusive_or_expression HAT and_expression
-- On ATTRIBUTE reduce production exclusive_or_expression -> exclusive_or_expression HAT and_expression
-- On ASM reduce production exclusive_or_expression -> exclusive_or_expression HAT and_expression
-- On AND_ASSIGN reduce production exclusive_or_expression -> exclusive_or_expression HAT and_expression
-- On ANDAND reduce production exclusive_or_expression -> exclusive_or_expression HAT and_expression
-- On ALIGNOF reduce production exclusive_or_expression -> exclusive_or_expression HAT and_expression
-- On ALIGNAS reduce production exclusive_or_expression -> exclusive_or_expression HAT and_expression
-- On ADD_ASSIGN reduce production exclusive_or_expression -> exclusive_or_expression HAT and_expression

State 116:
## Known stack suffix:
## and_expression AND
## LR(1) items:
and_expression -> and_expression AND . equality_expression [ SEMICOLON RPAREN RBRACK RBRACE QUESTION HAT COMMA COLON BARBAR BAR ANDAND AND ]
## Transitions:
-- On TILDE shift to state 18
-- On STRING_LITERAL shift to state 19
-- On STAR shift to state 20
-- On SIZEOF shift to state 21
-- On PRE_NAME shift to state 22
-- On PLUS shift to state 24
-- On MINUS shift to state 25
-- On LPAREN shift to state 28
-- On INC shift to state 31
-- On DEC shift to state 46
-- On CONSTANT shift to state 47
-- On BUILTIN_VA_ARG shift to state 48
-- On BANG shift to state 50
-- On AND shift to state 51
-- On ALIGNOF shift to state 52
-- On unary_operator shift to state 56
-- On unary_expression shift to state 57
-- On string_literals_list shift to state 58
-- On shift_expression shift to state 78
-- On relational_expression shift to state 94
-- On primary_expression shift to state 60
-- On postfix_expression shift to state 61
-- On multiplicative_expression shift to state 82
-- On equality_expression shift to state 117
-- On cast_expression shift to state 88
-- On additive_expression shift to state 101
## Reductions:

State 117:
## Known stack suffix:
## and_expression AND equality_expression
## LR(1) items:
and_expression -> and_expression AND equality_expression . [ SEMICOLON RPAREN RBRACK RBRACE QUESTION HAT COMMA COLON BARBAR BAR ANDAND AND ]
equality_expression -> equality_expression . equality_operator relational_expression [ SEMICOLON RPAREN RBRACK RBRACE QUESTION NEQ HAT EQEQ COMMA COLON BARBAR BAR ANDAND AND ]
## Transitions:
-- On NEQ shift to state 111
-- On EQEQ shift to state 112
-- On equality_operator shift to state 113
## Reductions:
-- On XOR_ASSIGN reduce production and_expression -> and_expression AND equality_expression
-- On WHILE reduce production and_expression -> and_expression AND equality_expression
-- On VOLATILE reduce production and_expression -> and_expression AND equality_expression
-- On VOID reduce production and_expression -> and_expression AND equality_expression
-- On VAR_NAME reduce production and_expression -> and_expression AND equality_expression
-- On UNSIGNED reduce production and_expression -> and_expression AND equality_expression
-- On UNION reduce production and_expression -> and_expression AND equality_expression
-- On UNDERSCORE_BOOL reduce production and_expression -> and_expression AND equality_expression
-- On TYPEDEF_NAME reduce production and_expression -> and_expression AND equality_expression
-- On TYPEDEF reduce production and_expression -> and_expression AND equality_expression
-- On TILDE reduce production and_expression -> and_expression AND equality_expression
-- On SWITCH reduce production and_expression -> and_expression AND equality_expression
-- On SUB_ASSIGN reduce production and_expression -> and_expression AND equality_expression
-- On STRUCT reduce production and_expression -> and_expression AND equality_expression
-- On STRING_LITERAL reduce production and_expression -> and_expression AND equality_expression
-- On STATIC reduce production and_expression -> and_expression AND equality_expression
-- On STAR reduce production and_expression -> and_expression AND equality_expression
-- On SLASH reduce production and_expression -> and_expression AND equality_expression
-- On SIZEOF reduce production and_expression -> and_expression AND equality_expression
-- On SIGNED reduce production and_expression -> and_expression AND equality_expression
-- On SHORT reduce production and_expression -> and_expression AND equality_expression
-- On SEMICOLON reduce production and_expression -> and_expression AND equality_expression
-- On RPAREN reduce production and_expression -> and_expression AND equality_expression
-- On RIGHT_ASSIGN reduce production and_expression -> and_expression AND equality_expression
-- On RIGHT reduce production and_expression -> and_expression AND equality_expression
-- On RETURN reduce production and_expression -> and_expression AND equality_expression
-- On RESTRICT reduce production and_expression -> and_expression AND equality_expression
-- On REGISTER reduce production and_expression -> and_expression AND equality_expression
-- On RBRACK reduce production and_expression -> and_expression AND equality_expression
-- On RBRACE reduce production and_expression -> and_expression AND equality_expression
-- On QUESTION reduce production and_expression -> and_expression AND equality_expression
-- On PTR reduce production and_expression -> and_expression AND equality_expression
-- On PRE_NAME reduce production and_expression -> and_expression AND equality_expression
-- On PRAGMA reduce production and_expression -> and_expression AND equality_expression
-- On PLUS reduce production and_expression -> and_expression AND equality_expression
-- On PERCENT reduce production and_expression -> and_expression AND equality_expression
-- On PACKED reduce production and_expression -> and_expression AND equality_expression
-- On OR_ASSIGN reduce production and_expression -> and_expression AND equality_expression
-- On MUL_ASSIGN reduce production and_expression -> and_expression AND equality_expression
-- On MOD_ASSIGN reduce production and_expression -> and_expression AND equality_expression
-- On MINUS reduce production and_expression -> and_expression AND equality_expression
-- On LT reduce production and_expression -> and_expression AND equality_expression
-- On LPAREN reduce production and_expression -> and_expression AND equality_expression
-- On LONG reduce production and_expression -> and_expression AND equality_expression
-- On LEQ reduce production and_expression -> and_expression AND equality_expression
-- On LEFT_ASSIGN reduce production and_expression -> and_expression AND equality_expression
-- On LEFT reduce production and_expression -> and_expression AND equality_expression
-- On LBRACK reduce production and_expression -> and_expression AND equality_expression
-- On LBRACE reduce production and_expression -> and_expression AND equality_expression
-- On INT reduce production and_expression -> and_expression AND equality_expression
-- On INLINE reduce production and_expression -> and_expression AND equality_expression
-- On INC reduce production and_expression -> and_expression AND equality_expression
-- On IF reduce production and_expression -> and_expression AND equality_expression
-- On HAT reduce production and_expression -> and_expression AND equality_expression
-- On GT reduce production and_expression -> and_expression AND equality_expression
-- On GOTO reduce production and_expression -> and_expression AND equality_expression
-- On GEQ reduce production and_expression -> and_expression AND equality_expression
-- On FOR reduce production and_expression -> and_expression AND equality_expression
-- On FLOAT reduce production and_expression -> and_expression AND equality_expression
-- On EXTERN reduce production and_expression -> and_expression AND equality_expression
-- On EQ reduce production and_expression -> and_expression AND equality_expression
-- On EOF reduce production and_expression -> and_expression AND equality_expression
-- On ENUM reduce production and_expression -> and_expression AND equality_expression
-- On ELSE reduce production and_expression -> and_expression AND equality_expression
-- On ELLIPSIS reduce production and_expression -> and_expression AND equality_expression
-- On DOUBLE reduce production and_expression -> and_expression AND equality_expression
-- On DOT reduce production and_expression -> and_expression AND equality_expression
-- On DO reduce production and_expression -> and_expression AND equality_expression
-- On DIV_ASSIGN reduce production and_expression -> and_expression AND equality_expression
-- On DEFAULT reduce production and_expression -> and_expression AND equality_expression
-- On DEC reduce production and_expression -> and_expression AND equality_expression
-- On CONTINUE reduce production and_expression -> and_expression AND equality_expression
-- On CONSTANT reduce production and_expression -> and_expression AND equality_expression
-- On CONST reduce production and_expression -> and_expression AND equality_expression
-- On COMMA reduce production and_expression -> and_expression AND equality_expression
-- On COLON reduce production and_expression -> and_expression AND equality_expression
-- On CHAR reduce production and_expression -> and_expression AND equality_expression
-- On CASE reduce production and_expression -> and_expression AND equality_expression
-- On BUILTIN_VA_ARG reduce production and_expression -> and_expression AND equality_expression
-- On BREAK reduce production and_expression -> and_expression AND equality_expression
-- On BARBAR reduce production and_expression -> and_expression AND equality_expression
-- On BAR reduce production and_expression -> and_expression AND equality_expression
-- On BANG reduce production and_expression -> and_expression AND equality_expression
-- On AUTO reduce production and_expression -> and_expression AND equality_expression
-- On ATTRIBUTE reduce production and_expression -> and_expression AND equality_expression
-- On ASM reduce production and_expression -> and_expression AND equality_expression
-- On AND_ASSIGN reduce production and_expression -> and_expression AND equality_expression
-- On ANDAND reduce production and_expression -> and_expression AND equality_expression
-- On AND reduce production and_expression -> and_expression AND equality_expression
-- On ALIGNOF reduce production and_expression -> and_expression AND equality_expression
-- On ALIGNAS reduce production and_expression -> and_expression AND equality_expression
-- On ADD_ASSIGN reduce production and_expression -> and_expression AND equality_expression

State 118:
## Known stack suffix:
## and_expression
## LR(1) items:
and_expression -> and_expression . AND equality_expression [ SEMICOLON RPAREN RBRACK RBRACE QUESTION HAT COMMA COLON BARBAR BAR ANDAND AND ]
exclusive_or_expression -> and_expression . [ SEMICOLON RPAREN RBRACK RBRACE QUESTION HAT COMMA COLON BARBAR BAR ANDAND ]
## Transitions:
-- On AND shift to state 116
## Reductions:
-- On XOR_ASSIGN reduce production exclusive_or_expression -> and_expression
-- On WHILE reduce production exclusive_or_expression -> and_expression
-- On VOLATILE reduce production exclusive_or_expression -> and_expression
-- On VOID reduce production exclusive_or_expression -> and_expression
-- On VAR_NAME reduce production exclusive_or_expression -> and_expression
-- On UNSIGNED reduce production exclusive_or_expression -> and_expression
-- On UNION reduce production exclusive_or_expression -> and_expression
-- On UNDERSCORE_BOOL reduce production exclusive_or_expression -> and_expression
-- On TYPEDEF_NAME reduce production exclusive_or_expression -> and_expression
-- On TYPEDEF reduce production exclusive_or_expression -> and_expression
-- On TILDE reduce production exclusive_or_expression -> and_expression
-- On SWITCH reduce production exclusive_or_expression -> and_expression
-- On SUB_ASSIGN reduce production exclusive_or_expression -> and_expression
-- On STRUCT reduce production exclusive_or_expression -> and_expression
-- On STRING_LITERAL reduce production exclusive_or_expression -> and_expression
-- On STATIC reduce production exclusive_or_expression -> and_expression
-- On STAR reduce production exclusive_or_expression -> and_expression
-- On SLASH reduce production exclusive_or_expression -> and_expression
-- On SIZEOF reduce production exclusive_or_expression -> and_expression
-- On SIGNED reduce production exclusive_or_expression -> and_expression
-- On SHORT reduce production exclusive_or_expression -> and_expression
-- On SEMICOLON reduce production exclusive_or_expression -> and_expression
-- On RPAREN reduce production exclusive_or_expression -> and_expression
-- On RIGHT_ASSIGN reduce production exclusive_or_expression -> and_expression
-- On RIGHT reduce production exclusive_or_expression -> and_expression
-- On RETURN reduce production exclusive_or_expression -> and_expression
-- On RESTRICT reduce production exclusive_or_expression -> and_expression
-- On REGISTER reduce production exclusive_or_expression -> and_expression
-- On RBRACK reduce production exclusive_or_expression -> and_expression
-- On RBRACE reduce production exclusive_or_expression -> and_expression
-- On QUESTION reduce production exclusive_or_expression -> and_expression
-- On PTR reduce production exclusive_or_expression -> and_expression
-- On PRE_NAME reduce production exclusive_or_expression -> and_expression
-- On PRAGMA reduce production exclusive_or_expression -> and_expression
-- On PLUS reduce production exclusive_or_expression -> and_expression
-- On PERCENT reduce production exclusive_or_expression -> and_expression
-- On PACKED reduce production exclusive_or_expression -> and_expression
-- On OR_ASSIGN reduce production exclusive_or_expression -> and_expression
-- On NEQ reduce production exclusive_or_expression -> and_expression
-- On MUL_ASSIGN reduce production exclusive_or_expression -> and_expression
-- On MOD_ASSIGN reduce production exclusive_or_expression -> and_expression
-- On MINUS reduce production exclusive_or_expression -> and_expression
-- On LT reduce production exclusive_or_expression -> and_expression
-- On LPAREN reduce production exclusive_or_expression -> and_expression
-- On LONG reduce production exclusive_or_expression -> and_expression
-- On LEQ reduce production exclusive_or_expression -> and_expression
-- On LEFT_ASSIGN reduce production exclusive_or_expression -> and_expression
-- On LEFT reduce production exclusive_or_expression -> and_expression
-- On LBRACK reduce production exclusive_or_expression -> and_expression
-- On LBRACE reduce production exclusive_or_expression -> and_expression
-- On INT reduce production exclusive_or_expression -> and_expression
-- On INLINE reduce production exclusive_or_expression -> and_expression
-- On INC reduce production exclusive_or_expression -> and_expression
-- On IF reduce production exclusive_or_expression -> and_expression
-- On HAT reduce production exclusive_or_expression -> and_expression
-- On GT reduce production exclusive_or_expression -> and_expression
-- On GOTO reduce production exclusive_or_expression -> and_expression
-- On GEQ reduce production exclusive_or_expression -> and_expression
-- On FOR reduce production exclusive_or_expression -> and_expression
-- On FLOAT reduce production exclusive_or_expression -> and_expression
-- On EXTERN reduce production exclusive_or_expression -> and_expression
-- On EQEQ reduce production exclusive_or_expression -> and_expression
-- On EQ reduce production exclusive_or_expression -> and_expression
-- On EOF reduce production exclusive_or_expression -> and_expression
-- On ENUM reduce production exclusive_or_expression -> and_expression
-- On ELSE reduce production exclusive_or_expression -> and_expression
-- On ELLIPSIS reduce production exclusive_or_expression -> and_expression
-- On DOUBLE reduce production exclusive_or_expression -> and_expression
-- On DOT reduce production exclusive_or_expression -> and_expression
-- On DO reduce production exclusive_or_expression -> and_expression
-- On DIV_ASSIGN reduce production exclusive_or_expression -> and_expression
-- On DEFAULT reduce production exclusive_or_expression -> and_expression
-- On DEC reduce production exclusive_or_expression -> and_expression
-- On CONTINUE reduce production exclusive_or_expression -> and_expression
-- On CONSTANT reduce production exclusive_or_expression -> and_expression
-- On CONST reduce production exclusive_or_expression -> and_expression
-- On COMMA reduce production exclusive_or_expression -> and_expression
-- On COLON reduce production exclusive_or_expression -> and_expression
-- On CHAR reduce production exclusive_or_expression -> and_expression
-- On CASE reduce production exclusive_or_expression -> and_expression
-- On BUILTIN_VA_ARG reduce production exclusive_or_expression -> and_expression
-- On BREAK reduce production exclusive_or_expression -> and_expression
-- On BARBAR reduce production exclusive_or_expression -> and_expression
-- On BAR reduce production exclusive_or_expression -> and_expression
-- On BANG reduce production exclusive_or_expression -> and_expression
-- On AUTO reduce production exclusive_or_expression -> and_expression
-- On ATTRIBUTE reduce production exclusive_or_expression -> and_expression
-- On ASM reduce production exclusive_or_expression -> and_expression
-- On AND_ASSIGN reduce production exclusive_or_expression -> and_expression
-- On ANDAND reduce production exclusive_or_expression -> and_expression
-- On ALIGNOF reduce production exclusive_or_expression -> and_expression
-- On ALIGNAS reduce production exclusive_or_expression -> and_expression
-- On ADD_ASSIGN reduce production exclusive_or_expression -> and_expression

State 119:
## Known stack suffix:
## exclusive_or_expression
## LR(1) items:
exclusive_or_expression -> exclusive_or_expression . HAT and_expression [ SEMICOLON RPAREN RBRACK RBRACE QUESTION HAT COMMA COLON BARBAR BAR ANDAND ]
inclusive_or_expression -> exclusive_or_expression . [ SEMICOLON RPAREN RBRACK RBRACE QUESTION COMMA COLON BARBAR BAR ANDAND ]
## Transitions:
-- On HAT shift to state 109
## Reductions:
-- On XOR_ASSIGN reduce production inclusive_or_expression -> exclusive_or_expression
-- On WHILE reduce production inclusive_or_expression -> exclusive_or_expression
-- On VOLATILE reduce production inclusive_or_expression -> exclusive_or_expression
-- On VOID reduce production inclusive_or_expression -> exclusive_or_expression
-- On VAR_NAME reduce production inclusive_or_expression -> exclusive_or_expression
-- On UNSIGNED reduce production inclusive_or_expression -> exclusive_or_expression
-- On UNION reduce production inclusive_or_expression -> exclusive_or_expression
-- On UNDERSCORE_BOOL reduce production inclusive_or_expression -> exclusive_or_expression
-- On TYPEDEF_NAME reduce production inclusive_or_expression -> exclusive_or_expression
-- On TYPEDEF reduce production inclusive_or_expression -> exclusive_or_expression
-- On TILDE reduce production inclusive_or_expression -> exclusive_or_expression
-- On SWITCH reduce production inclusive_or_expression -> exclusive_or_expression
-- On SUB_ASSIGN reduce production inclusive_or_expression -> exclusive_or_expression
-- On STRUCT reduce production inclusive_or_expression -> exclusive_or_expression
-- On STRING_LITERAL reduce production inclusive_or_expression -> exclusive_or_expression
-- On STATIC reduce production inclusive_or_expression -> exclusive_or_expression
-- On STAR reduce production inclusive_or_expression -> exclusive_or_expression
-- On SLASH reduce production inclusive_or_expression -> exclusive_or_expression
-- On SIZEOF reduce production inclusive_or_expression -> exclusive_or_expression
-- On SIGNED reduce production inclusive_or_expression -> exclusive_or_expression
-- On SHORT reduce production inclusive_or_expression -> exclusive_or_expression
-- On SEMICOLON reduce production inclusive_or_expression -> exclusive_or_expression
-- On RPAREN reduce production inclusive_or_expression -> exclusive_or_expression
-- On RIGHT_ASSIGN reduce production inclusive_or_expression -> exclusive_or_expression
-- On RIGHT reduce production inclusive_or_expression -> exclusive_or_expression
-- On RETURN reduce production inclusive_or_expression -> exclusive_or_expression
-- On RESTRICT reduce production inclusive_or_expression -> exclusive_or_expression
-- On REGISTER reduce production inclusive_or_expression -> exclusive_or_expression
-- On RBRACK reduce production inclusive_or_expression -> exclusive_or_expression
-- On RBRACE reduce production inclusive_or_expression -> exclusive_or_expression
-- On QUESTION reduce production inclusive_or_expression -> exclusive_or_expression
-- On PTR reduce production inclusive_or_expression -> exclusive_or_expression
-- On PRE_NAME reduce production inclusive_or_expression -> exclusive_or_expression
-- On PRAGMA reduce production inclusive_or_expression -> exclusive_or_expression
-- On PLUS reduce production inclusive_or_expression -> exclusive_or_expression
-- On PERCENT reduce production inclusive_or_expression -> exclusive_or_expression
-- On PACKED reduce production inclusive_or_expression -> exclusive_or_expression
-- On OR_ASSIGN reduce production inclusive_or_expression -> exclusive_or_expression
-- On NEQ reduce production inclusive_or_expression -> exclusive_or_expression
-- On MUL_ASSIGN reduce production inclusive_or_expression -> exclusive_or_expression
-- On MOD_ASSIGN reduce production inclusive_or_expression -> exclusive_or_expression
-- On MINUS reduce production inclusive_or_expression -> exclusive_or_expression
-- On LT reduce production inclusive_or_expression -> exclusive_or_expression
-- On LPAREN reduce production inclusive_or_expression -> exclusive_or_expression
-- On LONG reduce production inclusive_or_expression -> exclusive_or_expression
-- On LEQ reduce production inclusive_or_expression -> exclusive_or_expression
-- On LEFT_ASSIGN reduce production inclusive_or_expression -> exclusive_or_expression
-- On LEFT reduce production inclusive_or_expression -> exclusive_or_expression
-- On LBRACK reduce production inclusive_or_expression -> exclusive_or_expression
-- On LBRACE reduce production inclusive_or_expression -> exclusive_or_expression
-- On INT reduce production inclusive_or_expression -> exclusive_or_expression
-- On INLINE reduce production inclusive_or_expression -> exclusive_or_expression
-- On INC reduce production inclusive_or_expression -> exclusive_or_expression
-- On IF reduce production inclusive_or_expression -> exclusive_or_expression
-- On GT reduce production inclusive_or_expression -> exclusive_or_expression
-- On GOTO reduce production inclusive_or_expression -> exclusive_or_expression
-- On GEQ reduce production inclusive_or_expression -> exclusive_or_expression
-- On FOR reduce production inclusive_or_expression -> exclusive_or_expression
-- On FLOAT reduce production inclusive_or_expression -> exclusive_or_expression
-- On EXTERN reduce production inclusive_or_expression -> exclusive_or_expression
-- On EQEQ reduce production inclusive_or_expression -> exclusive_or_expression
-- On EQ reduce production inclusive_or_expression -> exclusive_or_expression
-- On EOF reduce production inclusive_or_expression -> exclusive_or_expression
-- On ENUM reduce production inclusive_or_expression -> exclusive_or_expression
-- On ELSE reduce production inclusive_or_expression -> exclusive_or_expression
-- On ELLIPSIS reduce production inclusive_or_expression -> exclusive_or_expression
-- On DOUBLE reduce production inclusive_or_expression -> exclusive_or_expression
-- On DOT reduce production inclusive_or_expression -> exclusive_or_expression
-- On DO reduce production inclusive_or_expression -> exclusive_or_expression
-- On DIV_ASSIGN reduce production inclusive_or_expression -> exclusive_or_expression
-- On DEFAULT reduce production inclusive_or_expression -> exclusive_or_expression
-- On DEC reduce production inclusive_or_expression -> exclusive_or_expression
-- On CONTINUE reduce production inclusive_or_expression -> exclusive_or_expression
-- On CONSTANT reduce production inclusive_or_expression -> exclusive_or_expression
-- On CONST reduce production inclusive_or_expression -> exclusive_or_expression
-- On COMMA reduce production inclusive_or_expression -> exclusive_or_expression
-- On COLON reduce production inclusive_or_expression -> exclusive_or_expression
-- On CHAR reduce production inclusive_or_expression -> exclusive_or_expression
-- On CASE reduce production inclusive_or_expression -> exclusive_or_expression
-- On BUILTIN_VA_ARG reduce production inclusive_or_expression -> exclusive_or_expression
-- On BREAK reduce production inclusive_or_expression -> exclusive_or_expression
-- On BARBAR reduce production inclusive_or_expression -> exclusive_or_expression
-- On BAR reduce production inclusive_or_expression -> exclusive_or_expression
-- On BANG reduce production inclusive_or_expression -> exclusive_or_expression
-- On AUTO reduce production inclusive_or_expression -> exclusive_or_expression
-- On ATTRIBUTE reduce production inclusive_or_expression -> exclusive_or_expression
-- On ASM reduce production inclusive_or_expression -> exclusive_or_expression
-- On AND_ASSIGN reduce production inclusive_or_expression -> exclusive_or_expression
-- On ANDAND reduce production inclusive_or_expression -> exclusive_or_expression
-- On AND reduce production inclusive_or_expression -> exclusive_or_expression
-- On ALIGNOF reduce production inclusive_or_expression -> exclusive_or_expression
-- On ALIGNAS reduce production inclusive_or_expression -> exclusive_or_expression
-- On ADD_ASSIGN reduce production inclusive_or_expression -> exclusive_or_expression

State 120:
## Known stack suffix:
## inclusive_or_expression
## LR(1) items:
inclusive_or_expression -> inclusive_or_expression . BAR exclusive_or_expression [ SEMICOLON RPAREN RBRACK RBRACE QUESTION COMMA COLON BARBAR BAR ANDAND ]
logical_and_expression -> inclusive_or_expression . [ SEMICOLON RPAREN RBRACK RBRACE QUESTION COMMA COLON BARBAR ANDAND ]
## Transitions:
-- On BAR shift to state 107
## Reductions:
-- On XOR_ASSIGN reduce production logical_and_expression -> inclusive_or_expression
-- On WHILE reduce production logical_and_expression -> inclusive_or_expression
-- On VOLATILE reduce production logical_and_expression -> inclusive_or_expression
-- On VOID reduce production logical_and_expression -> inclusive_or_expression
-- On VAR_NAME reduce production logical_and_expression -> inclusive_or_expression
-- On UNSIGNED reduce production logical_and_expression -> inclusive_or_expression
-- On UNION reduce production logical_and_expression -> inclusive_or_expression
-- On UNDERSCORE_BOOL reduce production logical_and_expression -> inclusive_or_expression
-- On TYPEDEF_NAME reduce production logical_and_expression -> inclusive_or_expression
-- On TYPEDEF reduce production logical_and_expression -> inclusive_or_expression
-- On TILDE reduce production logical_and_expression -> inclusive_or_expression
-- On SWITCH reduce production logical_and_expression -> inclusive_or_expression
-- On SUB_ASSIGN reduce production logical_and_expression -> inclusive_or_expression
-- On STRUCT reduce production logical_and_expression -> inclusive_or_expression
-- On STRING_LITERAL reduce production logical_and_expression -> inclusive_or_expression
-- On STATIC reduce production logical_and_expression -> inclusive_or_expression
-- On STAR reduce production logical_and_expression -> inclusive_or_expression
-- On SLASH reduce production logical_and_expression -> inclusive_or_expression
-- On SIZEOF reduce production logical_and_expression -> inclusive_or_expression
-- On SIGNED reduce production logical_and_expression -> inclusive_or_expression
-- On SHORT reduce production logical_and_expression -> inclusive_or_expression
-- On SEMICOLON reduce production logical_and_expression -> inclusive_or_expression
-- On RPAREN reduce production logical_and_expression -> inclusive_or_expression
-- On RIGHT_ASSIGN reduce production logical_and_expression -> inclusive_or_expression
-- On RIGHT reduce production logical_and_expression -> inclusive_or_expression
-- On RETURN reduce production logical_and_expression -> inclusive_or_expression
-- On RESTRICT reduce production logical_and_expression -> inclusive_or_expression
-- On REGISTER reduce production logical_and_expression -> inclusive_or_expression
-- On RBRACK reduce production logical_and_expression -> inclusive_or_expression
-- On RBRACE reduce production logical_and_expression -> inclusive_or_expression
-- On QUESTION reduce production logical_and_expression -> inclusive_or_expression
-- On PTR reduce production logical_and_expression -> inclusive_or_expression
-- On PRE_NAME reduce production logical_and_expression -> inclusive_or_expression
-- On PRAGMA reduce production logical_and_expression -> inclusive_or_expression
-- On PLUS reduce production logical_and_expression -> inclusive_or_expression
-- On PERCENT reduce production logical_and_expression -> inclusive_or_expression
-- On PACKED reduce production logical_and_expression -> inclusive_or_expression
-- On OR_ASSIGN reduce production logical_and_expression -> inclusive_or_expression
-- On NEQ reduce production logical_and_expression -> inclusive_or_expression
-- On MUL_ASSIGN reduce production logical_and_expression -> inclusive_or_expression
-- On MOD_ASSIGN reduce production logical_and_expression -> inclusive_or_expression
-- On MINUS reduce production logical_and_expression -> inclusive_or_expression
-- On LT reduce production logical_and_expression -> inclusive_or_expression
-- On LPAREN reduce production logical_and_expression -> inclusive_or_expression
-- On LONG reduce production logical_and_expression -> inclusive_or_expression
-- On LEQ reduce production logical_and_expression -> inclusive_or_expression
-- On LEFT_ASSIGN reduce production logical_and_expression -> inclusive_or_expression
-- On LEFT reduce production logical_and_expression -> inclusive_or_expression
-- On LBRACK reduce production logical_and_expression -> inclusive_or_expression
-- On LBRACE reduce production logical_and_expression -> inclusive_or_expression
-- On INT reduce production logical_and_expression -> inclusive_or_expression
-- On INLINE reduce production logical_and_expression -> inclusive_or_expression
-- On INC reduce production logical_and_expression -> inclusive_or_expression
-- On IF reduce production logical_and_expression -> inclusive_or_expression
-- On HAT reduce production logical_and_expression -> inclusive_or_expression
-- On GT reduce production logical_and_expression -> inclusive_or_expression
-- On GOTO reduce production logical_and_expression -> inclusive_or_expression
-- On GEQ reduce production logical_and_expression -> inclusive_or_expression
-- On FOR reduce production logical_and_expression -> inclusive_or_expression
-- On FLOAT reduce production logical_and_expression -> inclusive_or_expression
-- On EXTERN reduce production logical_and_expression -> inclusive_or_expression
-- On EQEQ reduce production logical_and_expression -> inclusive_or_expression
-- On EQ reduce production logical_and_expression -> inclusive_or_expression
-- On EOF reduce production logical_and_expression -> inclusive_or_expression
-- On ENUM reduce production logical_and_expression -> inclusive_or_expression
-- On ELSE reduce production logical_and_expression -> inclusive_or_expression
-- On ELLIPSIS reduce production logical_and_expression -> inclusive_or_expression
-- On DOUBLE reduce production logical_and_expression -> inclusive_or_expression
-- On DOT reduce production logical_and_expression -> inclusive_or_expression
-- On DO reduce production logical_and_expression -> inclusive_or_expression
-- On DIV_ASSIGN reduce production logical_and_expression -> inclusive_or_expression
-- On DEFAULT reduce production logical_and_expression -> inclusive_or_expression
-- On DEC reduce production logical_and_expression -> inclusive_or_expression
-- On CONTINUE reduce production logical_and_expression -> inclusive_or_expression
-- On CONSTANT reduce production logical_and_expression -> inclusive_or_expression
-- On CONST reduce production logical_and_expression -> inclusive_or_expression
-- On COMMA reduce production logical_and_expression -> inclusive_or_expression
-- On COLON reduce production logical_and_expression -> inclusive_or_expression
-- On CHAR reduce production logical_and_expression -> inclusive_or_expression
-- On CASE reduce production logical_and_expression -> inclusive_or_expression
-- On BUILTIN_VA_ARG reduce production logical_and_expression -> inclusive_or_expression
-- On BREAK reduce production logical_and_expression -> inclusive_or_expression
-- On BARBAR reduce production logical_and_expression -> inclusive_or_expression
-- On BANG reduce production logical_and_expression -> inclusive_or_expression
-- On AUTO reduce production logical_and_expression -> inclusive_or_expression
-- On ATTRIBUTE reduce production logical_and_expression -> inclusive_or_expression
-- On ASM reduce production logical_and_expression -> inclusive_or_expression
-- On AND_ASSIGN reduce production logical_and_expression -> inclusive_or_expression
-- On ANDAND reduce production logical_and_expression -> inclusive_or_expression
-- On AND reduce production logical_and_expression -> inclusive_or_expression
-- On ALIGNOF reduce production logical_and_expression -> inclusive_or_expression
-- On ALIGNAS reduce production logical_and_expression -> inclusive_or_expression
-- On ADD_ASSIGN reduce production logical_and_expression -> inclusive_or_expression

State 121:
## Known stack suffix:
## logical_or_expression QUESTION expression
## LR(1) items:
conditional_expression -> logical_or_expression QUESTION expression . COLON conditional_expression [ SEMICOLON RPAREN RBRACK RBRACE COMMA COLON ]
expression -> expression . COMMA assignment_expression [ COMMA COLON ]
## Transitions:
-- On COMMA shift to state 122
-- On COLON shift to state 125
## Reductions:

State 122:
## Known stack suffix:
## expression COMMA
## LR(1) items:
expression -> expression COMMA . assignment_expression [ SEMICOLON RPAREN RBRACK COMMA COLON ]
## Transitions:
-- On TILDE shift to state 18
-- On STRING_LITERAL shift to state 19
-- On STAR shift to state 20
-- On SIZEOF shift to state 21
-- On PRE_NAME shift to state 22
-- On PLUS shift to state 24
-- On MINUS shift to state 25
-- On LPAREN shift to state 28
-- On INC shift to state 31
-- On DEC shift to state 46
-- On CONSTANT shift to state 47
-- On BUILTIN_VA_ARG shift to state 48
-- On BANG shift to state 50
-- On AND shift to state 51
-- On ALIGNOF shift to state 52
-- On unary_operator shift to state 56
-- On unary_expression shift to state 65
-- On string_literals_list shift to state 58
-- On shift_expression shift to state 78
-- On relational_expression shift to state 94
-- On primary_expression shift to state 60
-- On postfix_expression shift to state 61
-- On multiplicative_expression shift to state 82
-- On logical_or_expression shift to state 102
-- On logical_and_expression shift to state 104
-- On inclusive_or_expression shift to state 120
-- On exclusive_or_expression shift to state 119
-- On equality_expression shift to state 110
-- On conditional_expression shift to state 123
-- On cast_expression shift to state 88
-- On assignment_expression shift to state 124
-- On and_expression shift to state 118
-- On additive_expression shift to state 101
## Reductions:

State 123:
## Known stack suffix:
## conditional_expression
## LR(1) items:
assignment_expression -> conditional_expression . [ SEMICOLON RPAREN RBRACK RBRACE COMMA COLON ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production assignment_expression -> conditional_expression

State 124:
## Known stack suffix:
## expression COMMA assignment_expression
## LR(1) items:
expression -> expression COMMA assignment_expression . [ SEMICOLON RPAREN RBRACK COMMA COLON ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production expression -> expression COMMA assignment_expression

State 125:
## Known stack suffix:
## logical_or_expression QUESTION expression COLON
## LR(1) items:
conditional_expression -> logical_or_expression QUESTION expression COLON . conditional_expression [ SEMICOLON RPAREN RBRACK RBRACE COMMA COLON ]
## Transitions:
-- On TILDE shift to state 18
-- On STRING_LITERAL shift to state 19
-- On STAR shift to state 20
-- On SIZEOF shift to state 21
-- On PRE_NAME shift to state 22
-- On PLUS shift to state 24
-- On MINUS shift to state 25
-- On LPAREN shift to state 28
-- On INC shift to state 31
-- On DEC shift to state 46
-- On CONSTANT shift to state 47
-- On BUILTIN_VA_ARG shift to state 48
-- On BANG shift to state 50
-- On AND shift to state 51
-- On ALIGNOF shift to state 52
-- On unary_operator shift to state 56
-- On unary_expression shift to state 57
-- On string_literals_list shift to state 58
-- On shift_expression shift to state 78
-- On relational_expression shift to state 94
-- On primary_expression shift to state 60
-- On postfix_expression shift to state 61
-- On multiplicative_expression shift to state 82
-- On logical_or_expression shift to state 102
-- On logical_and_expression shift to state 104
-- On inclusive_or_expression shift to state 120
-- On exclusive_or_expression shift to state 119
-- On equality_expression shift to state 110
-- On conditional_expression shift to state 126
-- On cast_expression shift to state 88
-- On and_expression shift to state 118
-- On additive_expression shift to state 101
## Reductions:

State 126:
## Known stack suffix:
## logical_or_expression QUESTION expression COLON conditional_expression
## LR(1) items:
conditional_expression -> logical_or_expression QUESTION expression COLON conditional_expression . [ SEMICOLON RPAREN RBRACK RBRACE COMMA COLON ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production conditional_expression -> logical_or_expression QUESTION expression COLON conditional_expression

State 127:
## Known stack suffix:
## assignment_expression
## LR(1) items:
expression -> assignment_expression . [ SEMICOLON RPAREN RBRACK COMMA COLON ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production expression -> assignment_expression

State 128:
## Known stack suffix:
## logical_or_expression BARBAR
## LR(1) items:
logical_or_expression -> logical_or_expression BARBAR . logical_and_expression [ SEMICOLON RPAREN RBRACK RBRACE QUESTION COMMA COLON BARBAR ]
## Transitions:
-- On TILDE shift to state 18
-- On STRING_LITERAL shift to state 19
-- On STAR shift to state 20
-- On SIZEOF shift to state 21
-- On PRE_NAME shift to state 22
-- On PLUS shift to state 24
-- On MINUS shift to state 25
-- On LPAREN shift to state 28
-- On INC shift to state 31
-- On DEC shift to state 46
-- On CONSTANT shift to state 47
-- On BUILTIN_VA_ARG shift to state 48
-- On BANG shift to state 50
-- On AND shift to state 51
-- On ALIGNOF shift to state 52
-- On unary_operator shift to state 56
-- On unary_expression shift to state 57
-- On string_literals_list shift to state 58
-- On shift_expression shift to state 78
-- On relational_expression shift to state 94
-- On primary_expression shift to state 60
-- On postfix_expression shift to state 61
-- On multiplicative_expression shift to state 82
-- On logical_and_expression shift to state 129
-- On inclusive_or_expression shift to state 120
-- On exclusive_or_expression shift to state 119
-- On equality_expression shift to state 110
-- On cast_expression shift to state 88
-- On and_expression shift to state 118
-- On additive_expression shift to state 101
## Reductions:

State 129:
## Known stack suffix:
## logical_or_expression BARBAR logical_and_expression
## LR(1) items:
logical_and_expression -> logical_and_expression . ANDAND inclusive_or_expression [ SEMICOLON RPAREN RBRACK RBRACE QUESTION COMMA COLON BARBAR ANDAND ]
logical_or_expression -> logical_or_expression BARBAR logical_and_expression . [ SEMICOLON RPAREN RBRACK RBRACE QUESTION COMMA COLON BARBAR ]
## Transitions:
-- On ANDAND shift to state 105
## Reductions:
-- On XOR_ASSIGN reduce production logical_or_expression -> logical_or_expression BARBAR logical_and_expression
-- On WHILE reduce production logical_or_expression -> logical_or_expression BARBAR logical_and_expression
-- On VOLATILE reduce production logical_or_expression -> logical_or_expression BARBAR logical_and_expression
-- On VOID reduce production logical_or_expression -> logical_or_expression BARBAR logical_and_expression
-- On VAR_NAME reduce production logical_or_expression -> logical_or_expression BARBAR logical_and_expression
-- On UNSIGNED reduce production logical_or_expression -> logical_or_expression BARBAR logical_and_expression
-- On UNION reduce production logical_or_expression -> logical_or_expression BARBAR logical_and_expression
-- On UNDERSCORE_BOOL reduce production logical_or_expression -> logical_or_expression BARBAR logical_and_expression
-- On TYPEDEF_NAME reduce production logical_or_expression -> logical_or_expression BARBAR logical_and_expression
-- On TYPEDEF reduce production logical_or_expression -> logical_or_expression BARBAR logical_and_expression
-- On TILDE reduce production logical_or_expression -> logical_or_expression BARBAR logical_and_expression
-- On SWITCH reduce production logical_or_expression -> logical_or_expression BARBAR logical_and_expression
-- On SUB_ASSIGN reduce production logical_or_expression -> logical_or_expression BARBAR logical_and_expression
-- On STRUCT reduce production logical_or_expression -> logical_or_expression BARBAR logical_and_expression
-- On STRING_LITERAL reduce production logical_or_expression -> logical_or_expression BARBAR logical_and_expression
-- On STATIC reduce production logical_or_expression -> logical_or_expression BARBAR logical_and_expression
-- On STAR reduce production logical_or_expression -> logical_or_expression BARBAR logical_and_expression
-- On SLASH reduce production logical_or_expression -> logical_or_expression BARBAR logical_and_expression
-- On SIZEOF reduce production logical_or_expression -> logical_or_expression BARBAR logical_and_expression
-- On SIGNED reduce production logical_or_expression -> logical_or_expression BARBAR logical_and_expression
-- On SHORT reduce production logical_or_expression -> logical_or_expression BARBAR logical_and_expression
-- On SEMICOLON reduce production logical_or_expression -> logical_or_expression BARBAR logical_and_expression
-- On RPAREN reduce production logical_or_expression -> logical_or_expression BARBAR logical_and_expression
-- On RIGHT_ASSIGN reduce production logical_or_expression -> logical_or_expression BARBAR logical_and_expression
-- On RIGHT reduce production logical_or_expression -> logical_or_expression BARBAR logical_and_expression
-- On RETURN reduce production logical_or_expression -> logical_or_expression BARBAR logical_and_expression
-- On RESTRICT reduce production logical_or_expression -> logical_or_expression BARBAR logical_and_expression
-- On REGISTER reduce production logical_or_expression -> logical_or_expression BARBAR logical_and_expression
-- On RBRACK reduce production logical_or_expression -> logical_or_expression BARBAR logical_and_expression
-- On RBRACE reduce production logical_or_expression -> logical_or_expression BARBAR logical_and_expression
-- On QUESTION reduce production logical_or_expression -> logical_or_expression BARBAR logical_and_expression
-- On PTR reduce production logical_or_expression -> logical_or_expression BARBAR logical_and_expression
-- On PRE_NAME reduce production logical_or_expression -> logical_or_expression BARBAR logical_and_expression
-- On PRAGMA reduce production logical_or_expression -> logical_or_expression BARBAR logical_and_expression
-- On PLUS reduce production logical_or_expression -> logical_or_expression BARBAR logical_and_expression
-- On PERCENT reduce production logical_or_expression -> logical_or_expression BARBAR logical_and_expression
-- On PACKED reduce production logical_or_expression -> logical_or_expression BARBAR logical_and_expression
-- On OR_ASSIGN reduce production logical_or_expression -> logical_or_expression BARBAR logical_and_expression
-- On NEQ reduce production logical_or_expression -> logical_or_expression BARBAR logical_and_expression
-- On MUL_ASSIGN reduce production logical_or_expression -> logical_or_expression BARBAR logical_and_expression
-- On MOD_ASSIGN reduce production logical_or_expression -> logical_or_expression BARBAR logical_and_expression
-- On MINUS reduce production logical_or_expression -> logical_or_expression BARBAR logical_and_expression
-- On LT reduce production logical_or_expression -> logical_or_expression BARBAR logical_and_expression
-- On LPAREN reduce production logical_or_expression -> logical_or_expression BARBAR logical_and_expression
-- On LONG reduce production logical_or_expression -> logical_or_expression BARBAR logical_and_expression
-- On LEQ reduce production logical_or_expression -> logical_or_expression BARBAR logical_and_expression
-- On LEFT_ASSIGN reduce production logical_or_expression -> logical_or_expression BARBAR logical_and_expression
-- On LEFT reduce production logical_or_expression -> logical_or_expression BARBAR logical_and_expression
-- On LBRACK reduce production logical_or_expression -> logical_or_expression BARBAR logical_and_expression
-- On LBRACE reduce production logical_or_expression -> logical_or_expression BARBAR logical_and_expression
-- On INT reduce production logical_or_expression -> logical_or_expression BARBAR logical_and_expression
-- On INLINE reduce production logical_or_expression -> logical_or_expression BARBAR logical_and_expression
-- On INC reduce production logical_or_expression -> logical_or_expression BARBAR logical_and_expression
-- On IF reduce production logical_or_expression -> logical_or_expression BARBAR logical_and_expression
-- On HAT reduce production logical_or_expression -> logical_or_expression BARBAR logical_and_expression
-- On GT reduce production logical_or_expression -> logical_or_expression BARBAR logical_and_expression
-- On GOTO reduce production logical_or_expression -> logical_or_expression BARBAR logical_and_expression
-- On GEQ reduce production logical_or_expression -> logical_or_expression BARBAR logical_and_expression
-- On FOR reduce production logical_or_expression -> logical_or_expression BARBAR logical_and_expression
-- On FLOAT reduce production logical_or_expression -> logical_or_expression BARBAR logical_and_expression
-- On EXTERN reduce production logical_or_expression -> logical_or_expression BARBAR logical_and_expression
-- On EQEQ reduce production logical_or_expression -> logical_or_expression BARBAR logical_and_expression
-- On EQ reduce production logical_or_expression -> logical_or_expression BARBAR logical_and_expression
-- On EOF reduce production logical_or_expression -> logical_or_expression BARBAR logical_and_expression
-- On ENUM reduce production logical_or_expression -> logical_or_expression BARBAR logical_and_expression
-- On ELSE reduce production logical_or_expression -> logical_or_expression BARBAR logical_and_expression
-- On ELLIPSIS reduce production logical_or_expression -> logical_or_expression BARBAR logical_and_expression
-- On DOUBLE reduce production logical_or_expression -> logical_or_expression BARBAR logical_and_expression
-- On DOT reduce production logical_or_expression -> logical_or_expression BARBAR logical_and_expression
-- On DO reduce production logical_or_expression -> logical_or_expression BARBAR logical_and_expression
-- On DIV_ASSIGN reduce production logical_or_expression -> logical_or_expression BARBAR logical_and_expression
-- On DEFAULT reduce production logical_or_expression -> logical_or_expression BARBAR logical_and_expression
-- On DEC reduce production logical_or_expression -> logical_or_expression BARBAR logical_and_expression
-- On CONTINUE reduce production logical_or_expression -> logical_or_expression BARBAR logical_and_expression
-- On CONSTANT reduce production logical_or_expression -> logical_or_expression BARBAR logical_and_expression
-- On CONST reduce production logical_or_expression -> logical_or_expression BARBAR logical_and_expression
-- On COMMA reduce production logical_or_expression -> logical_or_expression BARBAR logical_and_expression
-- On COLON reduce production logical_or_expression -> logical_or_expression BARBAR logical_and_expression
-- On CHAR reduce production logical_or_expression -> logical_or_expression BARBAR logical_and_expression
-- On CASE reduce production logical_or_expression -> logical_or_expression BARBAR logical_and_expression
-- On BUILTIN_VA_ARG reduce production logical_or_expression -> logical_or_expression BARBAR logical_and_expression
-- On BREAK reduce production logical_or_expression -> logical_or_expression BARBAR logical_and_expression
-- On BARBAR reduce production logical_or_expression -> logical_or_expression BARBAR logical_and_expression
-- On BAR reduce production logical_or_expression -> logical_or_expression BARBAR logical_and_expression
-- On BANG reduce production logical_or_expression -> logical_or_expression BARBAR logical_and_expression
-- On AUTO reduce production logical_or_expression -> logical_or_expression BARBAR logical_and_expression
-- On ATTRIBUTE reduce production logical_or_expression -> logical_or_expression BARBAR logical_and_expression
-- On ASM reduce production logical_or_expression -> logical_or_expression BARBAR logical_and_expression
-- On AND_ASSIGN reduce production logical_or_expression -> logical_or_expression BARBAR logical_and_expression
-- On AND reduce production logical_or_expression -> logical_or_expression BARBAR logical_and_expression
-- On ALIGNOF reduce production logical_or_expression -> logical_or_expression BARBAR logical_and_expression
-- On ALIGNAS reduce production logical_or_expression -> logical_or_expression BARBAR logical_and_expression
-- On ADD_ASSIGN reduce production logical_or_expression -> logical_or_expression BARBAR logical_and_expression

State 130:
## Known stack suffix:
## unary_expression assignment_operator assignment_expression
## LR(1) items:
assignment_expression -> unary_expression assignment_operator assignment_expression . [ SEMICOLON RPAREN RBRACK RBRACE COMMA COLON ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production assignment_expression -> unary_expression assignment_operator assignment_expression

State 131:
## Known stack suffix:
## postfix_expression LPAREN option(argument_expression_list)
## LR(1) items:
postfix_expression -> postfix_expression LPAREN option(argument_expression_list) . RPAREN [ XOR_ASSIGN SUB_ASSIGN STAR SLASH SEMICOLON RPAREN RIGHT_ASSIGN RIGHT RBRACK RBRACE QUESTION PTR PLUS PERCENT OR_ASSIGN NEQ MUL_ASSIGN MOD_ASSIGN MINUS LT LPAREN LEQ LEFT_ASSIGN LEFT LBRACK INC HAT GT GEQ EQEQ EQ DOT DIV_ASSIGN DEC COMMA COLON BARBAR BAR AND_ASSIGN ANDAND AND ADD_ASSIGN ]
## Transitions:
-- On RPAREN shift to state 132
## Reductions:

State 132:
## Known stack suffix:
## postfix_expression LPAREN option(argument_expression_list) RPAREN
## LR(1) items:
postfix_expression -> postfix_expression LPAREN option(argument_expression_list) RPAREN . [ XOR_ASSIGN SUB_ASSIGN STAR SLASH SEMICOLON RPAREN RIGHT_ASSIGN RIGHT RBRACK RBRACE QUESTION PTR PLUS PERCENT OR_ASSIGN NEQ MUL_ASSIGN MOD_ASSIGN MINUS LT LPAREN LEQ LEFT_ASSIGN LEFT LBRACK INC HAT GT GEQ EQEQ EQ DOT DIV_ASSIGN DEC COMMA COLON BARBAR BAR AND_ASSIGN ANDAND AND ADD_ASSIGN ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production postfix_expression -> postfix_expression LPAREN option(argument_expression_list) RPAREN

State 133:
## Known stack suffix:
## assignment_expression
## LR(1) items:
argument_expression_list -> assignment_expression . [ RPAREN COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production argument_expression_list -> assignment_expression

State 134:
## Known stack suffix:
## argument_expression_list
## LR(1) items:
argument_expression_list -> argument_expression_list . COMMA assignment_expression [ RPAREN COMMA ]
option(argument_expression_list) -> argument_expression_list . [ RPAREN ]
## Transitions:
-- On COMMA shift to state 135
## Reductions:
-- On RPAREN reduce production option(argument_expression_list) -> argument_expression_list

State 135:
## Known stack suffix:
## argument_expression_list COMMA
## LR(1) items:
argument_expression_list -> argument_expression_list COMMA . assignment_expression [ RPAREN COMMA ]
## Transitions:
-- On TILDE shift to state 18
-- On STRING_LITERAL shift to state 19
-- On STAR shift to state 20
-- On SIZEOF shift to state 21
-- On PRE_NAME shift to state 22
-- On PLUS shift to state 24
-- On MINUS shift to state 25
-- On LPAREN shift to state 28
-- On INC shift to state 31
-- On DEC shift to state 46
-- On CONSTANT shift to state 47
-- On BUILTIN_VA_ARG shift to state 48
-- On BANG shift to state 50
-- On AND shift to state 51
-- On ALIGNOF shift to state 52
-- On unary_operator shift to state 56
-- On unary_expression shift to state 65
-- On string_literals_list shift to state 58
-- On shift_expression shift to state 78
-- On relational_expression shift to state 94
-- On primary_expression shift to state 60
-- On postfix_expression shift to state 61
-- On multiplicative_expression shift to state 82
-- On logical_or_expression shift to state 102
-- On logical_and_expression shift to state 104
-- On inclusive_or_expression shift to state 120
-- On exclusive_or_expression shift to state 119
-- On equality_expression shift to state 110
-- On conditional_expression shift to state 123
-- On cast_expression shift to state 88
-- On assignment_expression shift to state 136
-- On and_expression shift to state 118
-- On additive_expression shift to state 101
## Reductions:

State 136:
## Known stack suffix:
## argument_expression_list COMMA assignment_expression
## LR(1) items:
argument_expression_list -> argument_expression_list COMMA assignment_expression . [ RPAREN COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production argument_expression_list -> argument_expression_list COMMA assignment_expression

State 137:
## Known stack suffix:
## postfix_expression LBRACK
## LR(1) items:
postfix_expression -> postfix_expression LBRACK . expression RBRACK [ XOR_ASSIGN SUB_ASSIGN STAR SLASH SEMICOLON RPAREN RIGHT_ASSIGN RIGHT RBRACK RBRACE QUESTION PTR PLUS PERCENT OR_ASSIGN NEQ MUL_ASSIGN MOD_ASSIGN MINUS LT LPAREN LEQ LEFT_ASSIGN LEFT LBRACK INC HAT GT GEQ EQEQ EQ DOT DIV_ASSIGN DEC COMMA COLON BARBAR BAR AND_ASSIGN ANDAND AND ADD_ASSIGN ]
## Transitions:
-- On TILDE shift to state 18
-- On STRING_LITERAL shift to state 19
-- On STAR shift to state 20
-- On SIZEOF shift to state 21
-- On PRE_NAME shift to state 22
-- On PLUS shift to state 24
-- On MINUS shift to state 25
-- On LPAREN shift to state 28
-- On INC shift to state 31
-- On DEC shift to state 46
-- On CONSTANT shift to state 47
-- On BUILTIN_VA_ARG shift to state 48
-- On BANG shift to state 50
-- On AND shift to state 51
-- On ALIGNOF shift to state 52
-- On unary_operator shift to state 56
-- On unary_expression shift to state 65
-- On string_literals_list shift to state 58
-- On shift_expression shift to state 78
-- On relational_expression shift to state 94
-- On primary_expression shift to state 60
-- On postfix_expression shift to state 61
-- On multiplicative_expression shift to state 82
-- On logical_or_expression shift to state 102
-- On logical_and_expression shift to state 104
-- On inclusive_or_expression shift to state 120
-- On expression shift to state 138
-- On exclusive_or_expression shift to state 119
-- On equality_expression shift to state 110
-- On conditional_expression shift to state 123
-- On cast_expression shift to state 88
-- On assignment_expression shift to state 127
-- On and_expression shift to state 118
-- On additive_expression shift to state 101
## Reductions:

State 138:
## Known stack suffix:
## postfix_expression LBRACK expression
## LR(1) items:
expression -> expression . COMMA assignment_expression [ RBRACK COMMA ]
postfix_expression -> postfix_expression LBRACK expression . RBRACK [ XOR_ASSIGN SUB_ASSIGN STAR SLASH SEMICOLON RPAREN RIGHT_ASSIGN RIGHT RBRACK RBRACE QUESTION PTR PLUS PERCENT OR_ASSIGN NEQ MUL_ASSIGN MOD_ASSIGN MINUS LT LPAREN LEQ LEFT_ASSIGN LEFT LBRACK INC HAT GT GEQ EQEQ EQ DOT DIV_ASSIGN DEC COMMA COLON BARBAR BAR AND_ASSIGN ANDAND AND ADD_ASSIGN ]
## Transitions:
-- On RBRACK shift to state 139
-- On COMMA shift to state 122
## Reductions:

State 139:
## Known stack suffix:
## postfix_expression LBRACK expression RBRACK
## LR(1) items:
postfix_expression -> postfix_expression LBRACK expression RBRACK . [ XOR_ASSIGN SUB_ASSIGN STAR SLASH SEMICOLON RPAREN RIGHT_ASSIGN RIGHT RBRACK RBRACE QUESTION PTR PLUS PERCENT OR_ASSIGN NEQ MUL_ASSIGN MOD_ASSIGN MINUS LT LPAREN LEQ LEFT_ASSIGN LEFT LBRACK INC HAT GT GEQ EQEQ EQ DOT DIV_ASSIGN DEC COMMA COLON BARBAR BAR AND_ASSIGN ANDAND AND ADD_ASSIGN ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production postfix_expression -> postfix_expression LBRACK expression RBRACK

State 140:
## Known stack suffix:
## postfix_expression INC
## LR(1) items:
postfix_expression -> postfix_expression INC . [ XOR_ASSIGN SUB_ASSIGN STAR SLASH SEMICOLON RPAREN RIGHT_ASSIGN RIGHT RBRACK RBRACE QUESTION PTR PLUS PERCENT OR_ASSIGN NEQ MUL_ASSIGN MOD_ASSIGN MINUS LT LPAREN LEQ LEFT_ASSIGN LEFT LBRACK INC HAT GT GEQ EQEQ EQ DOT DIV_ASSIGN DEC COMMA COLON BARBAR BAR AND_ASSIGN ANDAND AND ADD_ASSIGN ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production postfix_expression -> postfix_expression INC

State 141:
## Known stack suffix:
## postfix_expression DOT
## LR(1) items:
postfix_expression -> postfix_expression DOT . general_identifier [ XOR_ASSIGN SUB_ASSIGN STAR SLASH SEMICOLON RPAREN RIGHT_ASSIGN RIGHT RBRACK RBRACE QUESTION PTR PLUS PERCENT OR_ASSIGN NEQ MUL_ASSIGN MOD_ASSIGN MINUS LT LPAREN LEQ LEFT_ASSIGN LEFT LBRACK INC HAT GT GEQ EQEQ EQ DOT DIV_ASSIGN DEC COMMA COLON BARBAR BAR AND_ASSIGN ANDAND AND ADD_ASSIGN ]
## Transitions:
-- On PRE_NAME shift to state 38
-- On typedef_name shift to state 42
-- On general_identifier shift to state 142
## Reductions:

State 142:
## Known stack suffix:
## postfix_expression DOT general_identifier
## LR(1) items:
postfix_expression -> postfix_expression DOT general_identifier . [ XOR_ASSIGN SUB_ASSIGN STAR SLASH SEMICOLON RPAREN RIGHT_ASSIGN RIGHT RBRACK RBRACE QUESTION PTR PLUS PERCENT OR_ASSIGN NEQ MUL_ASSIGN MOD_ASSIGN MINUS LT LPAREN LEQ LEFT_ASSIGN LEFT LBRACK INC HAT GT GEQ EQEQ EQ DOT DIV_ASSIGN DEC COMMA COLON BARBAR BAR AND_ASSIGN ANDAND AND ADD_ASSIGN ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production postfix_expression -> postfix_expression DOT general_identifier

State 143:
## Known stack suffix:
## postfix_expression DEC
## LR(1) items:
postfix_expression -> postfix_expression DEC . [ XOR_ASSIGN SUB_ASSIGN STAR SLASH SEMICOLON RPAREN RIGHT_ASSIGN RIGHT RBRACK RBRACE QUESTION PTR PLUS PERCENT OR_ASSIGN NEQ MUL_ASSIGN MOD_ASSIGN MINUS LT LPAREN LEQ LEFT_ASSIGN LEFT LBRACK INC HAT GT GEQ EQEQ EQ DOT DIV_ASSIGN DEC COMMA COLON BARBAR BAR AND_ASSIGN ANDAND AND ADD_ASSIGN ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production postfix_expression -> postfix_expression DEC

State 144:
## Known stack suffix:
## unary_operator cast_expression
## LR(1) items:
unary_expression -> unary_operator cast_expression . [ XOR_ASSIGN SUB_ASSIGN STAR SLASH SEMICOLON RPAREN RIGHT_ASSIGN RIGHT RBRACK RBRACE QUESTION PLUS PERCENT OR_ASSIGN NEQ MUL_ASSIGN MOD_ASSIGN MINUS LT LEQ LEFT_ASSIGN LEFT HAT GT GEQ EQEQ EQ DIV_ASSIGN COMMA COLON BARBAR BAR AND_ASSIGN ANDAND AND ADD_ASSIGN ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production unary_expression -> unary_operator cast_expression

State 145:
## Known stack suffix:
## typedef_name
## LR(1) items:
specifier_qualifier_list(type_name) -> typedef_name . option(type_qualifier_list) [ STAR RPAREN LPAREN LBRACK ]
## Transitions:
-- On type_qualifier_list shift to state 146
-- On option(type_qualifier_list) shift to state 147
## Default reduction:
-- After reading the next token, reduce production option(type_qualifier_list) ->

State 146:
## Known stack suffix:
## type_qualifier_list
## LR(1) items:
option(type_qualifier_list) -> type_qualifier_list . [ VOLATILE TILDE STRING_LITERAL STAR SIZEOF SEMICOLON RPAREN RESTRICT RBRACK PRE_NAME PLUS PACKED MINUS LPAREN LBRACK INC DEC CONSTANT CONST COMMA COLON BUILTIN_VA_ARG BANG ATTRIBUTE AND ALIGNOF ALIGNAS ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production option(type_qualifier_list) -> type_qualifier_list

State 147:
## Known stack suffix:
## typedef_name option(type_qualifier_list)
## LR(1) items:
specifier_qualifier_list(type_name) -> typedef_name option(type_qualifier_list) . [ STAR RPAREN LPAREN LBRACK ]
type_qualifier_list -> option(type_qualifier_list) . type_qualifier_noattr [ VOLATILE STAR RPAREN RESTRICT PACKED LPAREN LBRACK CONST ATTRIBUTE ALIGNAS ]
type_qualifier_list -> option(type_qualifier_list) . attribute_specifier [ VOLATILE STAR RPAREN RESTRICT PACKED LPAREN LBRACK CONST ATTRIBUTE ALIGNAS ]
## Transitions:
-- On VOLATILE shift to state 1
-- On RESTRICT shift to state 12
-- On PACKED shift to state 16
-- On CONST shift to state 148
-- On ATTRIBUTE shift to state 35
-- On ALIGNAS shift to state 149
-- On type_qualifier_noattr shift to state 164
-- On attribute_specifier shift to state 165
## Reductions:
-- On XOR_ASSIGN reduce production specifier_qualifier_list(type_name) -> typedef_name option(type_qualifier_list)
-- On WHILE reduce production specifier_qualifier_list(type_name) -> typedef_name option(type_qualifier_list)
-- On VOID reduce production specifier_qualifier_list(type_name) -> typedef_name option(type_qualifier_list)
-- On VAR_NAME reduce production specifier_qualifier_list(type_name) -> typedef_name option(type_qualifier_list)
-- On UNSIGNED reduce production specifier_qualifier_list(type_name) -> typedef_name option(type_qualifier_list)
-- On UNION reduce production specifier_qualifier_list(type_name) -> typedef_name option(type_qualifier_list)
-- On UNDERSCORE_BOOL reduce production specifier_qualifier_list(type_name) -> typedef_name option(type_qualifier_list)
-- On TYPEDEF_NAME reduce production specifier_qualifier_list(type_name) -> typedef_name option(type_qualifier_list)
-- On TYPEDEF reduce production specifier_qualifier_list(type_name) -> typedef_name option(type_qualifier_list)
-- On TILDE reduce production specifier_qualifier_list(type_name) -> typedef_name option(type_qualifier_list)
-- On SWITCH reduce production specifier_qualifier_list(type_name) -> typedef_name option(type_qualifier_list)
-- On SUB_ASSIGN reduce production specifier_qualifier_list(type_name) -> typedef_name option(type_qualifier_list)
-- On STRUCT reduce production specifier_qualifier_list(type_name) -> typedef_name option(type_qualifier_list)
-- On STRING_LITERAL reduce production specifier_qualifier_list(type_name) -> typedef_name option(type_qualifier_list)
-- On STATIC reduce production specifier_qualifier_list(type_name) -> typedef_name option(type_qualifier_list)
-- On STAR reduce production specifier_qualifier_list(type_name) -> typedef_name option(type_qualifier_list)
-- On SLASH reduce production specifier_qualifier_list(type_name) -> typedef_name option(type_qualifier_list)
-- On SIZEOF reduce production specifier_qualifier_list(type_name) -> typedef_name option(type_qualifier_list)
-- On SIGNED reduce production specifier_qualifier_list(type_name) -> typedef_name option(type_qualifier_list)
-- On SHORT reduce production specifier_qualifier_list(type_name) -> typedef_name option(type_qualifier_list)
-- On SEMICOLON reduce production specifier_qualifier_list(type_name) -> typedef_name option(type_qualifier_list)
-- On RPAREN reduce production specifier_qualifier_list(type_name) -> typedef_name option(type_qualifier_list)
-- On RIGHT_ASSIGN reduce production specifier_qualifier_list(type_name) -> typedef_name option(type_qualifier_list)
-- On RIGHT reduce production specifier_qualifier_list(type_name) -> typedef_name option(type_qualifier_list)
-- On RETURN reduce production specifier_qualifier_list(type_name) -> typedef_name option(type_qualifier_list)
-- On REGISTER reduce production specifier_qualifier_list(type_name) -> typedef_name option(type_qualifier_list)
-- On RBRACK reduce production specifier_qualifier_list(type_name) -> typedef_name option(type_qualifier_list)
-- On RBRACE reduce production specifier_qualifier_list(type_name) -> typedef_name option(type_qualifier_list)
-- On QUESTION reduce production specifier_qualifier_list(type_name) -> typedef_name option(type_qualifier_list)
-- On PTR reduce production specifier_qualifier_list(type_name) -> typedef_name option(type_qualifier_list)
-- On PRE_NAME reduce production specifier_qualifier_list(type_name) -> typedef_name option(type_qualifier_list)
-- On PRAGMA reduce production specifier_qualifier_list(type_name) -> typedef_name option(type_qualifier_list)
-- On PLUS reduce production specifier_qualifier_list(type_name) -> typedef_name option(type_qualifier_list)
-- On PERCENT reduce production specifier_qualifier_list(type_name) -> typedef_name option(type_qualifier_list)
-- On OR_ASSIGN reduce production specifier_qualifier_list(type_name) -> typedef_name option(type_qualifier_list)
-- On NEQ reduce production specifier_qualifier_list(type_name) -> typedef_name option(type_qualifier_list)
-- On MUL_ASSIGN reduce production specifier_qualifier_list(type_name) -> typedef_name option(type_qualifier_list)
-- On MOD_ASSIGN reduce production specifier_qualifier_list(type_name) -> typedef_name option(type_qualifier_list)
-- On MINUS reduce production specifier_qualifier_list(type_name) -> typedef_name option(type_qualifier_list)
-- On LT reduce production specifier_qualifier_list(type_name) -> typedef_name option(type_qualifier_list)
-- On LPAREN reduce production specifier_qualifier_list(type_name) -> typedef_name option(type_qualifier_list)
-- On LONG reduce production specifier_qualifier_list(type_name) -> typedef_name option(type_qualifier_list)
-- On LEQ reduce production specifier_qualifier_list(type_name) -> typedef_name option(type_qualifier_list)
-- On LEFT_ASSIGN reduce production specifier_qualifier_list(type_name) -> typedef_name option(type_qualifier_list)
-- On LEFT reduce production specifier_qualifier_list(type_name) -> typedef_name option(type_qualifier_list)
-- On LBRACK reduce production specifier_qualifier_list(type_name) -> typedef_name option(type_qualifier_list)
-- On LBRACE reduce production specifier_qualifier_list(type_name) -> typedef_name option(type_qualifier_list)
-- On INT reduce production specifier_qualifier_list(type_name) -> typedef_name option(type_qualifier_list)
-- On INLINE reduce production specifier_qualifier_list(type_name) -> typedef_name option(type_qualifier_list)
-- On INC reduce production specifier_qualifier_list(type_name) -> typedef_name option(type_qualifier_list)
-- On IF reduce production specifier_qualifier_list(type_name) -> typedef_name option(type_qualifier_list)
-- On HAT reduce production specifier_qualifier_list(type_name) -> typedef_name option(type_qualifier_list)
-- On GT reduce production specifier_qualifier_list(type_name) -> typedef_name option(type_qualifier_list)
-- On GOTO reduce production specifier_qualifier_list(type_name) -> typedef_name option(type_qualifier_list)
-- On GEQ reduce production specifier_qualifier_list(type_name) -> typedef_name option(type_qualifier_list)
-- On FOR reduce production specifier_qualifier_list(type_name) -> typedef_name option(type_qualifier_list)
-- On FLOAT reduce production specifier_qualifier_list(type_name) -> typedef_name option(type_qualifier_list)
-- On EXTERN reduce production specifier_qualifier_list(type_name) -> typedef_name option(type_qualifier_list)
-- On EQEQ reduce production specifier_qualifier_list(type_name) -> typedef_name option(type_qualifier_list)
-- On EQ reduce production specifier_qualifier_list(type_name) -> typedef_name option(type_qualifier_list)
-- On EOF reduce production specifier_qualifier_list(type_name) -> typedef_name option(type_qualifier_list)
-- On ENUM reduce production specifier_qualifier_list(type_name) -> typedef_name option(type_qualifier_list)
-- On ELSE reduce production specifier_qualifier_list(type_name) -> typedef_name option(type_qualifier_list)
-- On ELLIPSIS reduce production specifier_qualifier_list(type_name) -> typedef_name option(type_qualifier_list)
-- On DOUBLE reduce production specifier_qualifier_list(type_name) -> typedef_name option(type_qualifier_list)
-- On DOT reduce production specifier_qualifier_list(type_name) -> typedef_name option(type_qualifier_list)
-- On DO reduce production specifier_qualifier_list(type_name) -> typedef_name option(type_qualifier_list)
-- On DIV_ASSIGN reduce production specifier_qualifier_list(type_name) -> typedef_name option(type_qualifier_list)
-- On DEFAULT reduce production specifier_qualifier_list(type_name) -> typedef_name option(type_qualifier_list)
-- On DEC reduce production specifier_qualifier_list(type_name) -> typedef_name option(type_qualifier_list)
-- On CONTINUE reduce production specifier_qualifier_list(type_name) -> typedef_name option(type_qualifier_list)
-- On CONSTANT reduce production specifier_qualifier_list(type_name) -> typedef_name option(type_qualifier_list)
-- On COMMA reduce production specifier_qualifier_list(type_name) -> typedef_name option(type_qualifier_list)
-- On COLON reduce production specifier_qualifier_list(type_name) -> typedef_name option(type_qualifier_list)
-- On CHAR reduce production specifier_qualifier_list(type_name) -> typedef_name option(type_qualifier_list)
-- On CASE reduce production specifier_qualifier_list(type_name) -> typedef_name option(type_qualifier_list)
-- On BUILTIN_VA_ARG reduce production specifier_qualifier_list(type_name) -> typedef_name option(type_qualifier_list)
-- On BREAK reduce production specifier_qualifier_list(type_name) -> typedef_name option(type_qualifier_list)
-- On BARBAR reduce production specifier_qualifier_list(type_name) -> typedef_name option(type_qualifier_list)
-- On BAR reduce production specifier_qualifier_list(type_name) -> typedef_name option(type_qualifier_list)
-- On BANG reduce production specifier_qualifier_list(type_name) -> typedef_name option(type_qualifier_list)
-- On AUTO reduce production specifier_qualifier_list(type_name) -> typedef_name option(type_qualifier_list)
-- On ASM reduce production specifier_qualifier_list(type_name) -> typedef_name option(type_qualifier_list)
-- On AND_ASSIGN reduce production specifier_qualifier_list(type_name) -> typedef_name option(type_qualifier_list)
-- On ANDAND reduce production specifier_qualifier_list(type_name) -> typedef_name option(type_qualifier_list)
-- On AND reduce production specifier_qualifier_list(type_name) -> typedef_name option(type_qualifier_list)
-- On ALIGNOF reduce production specifier_qualifier_list(type_name) -> typedef_name option(type_qualifier_list)
-- On ADD_ASSIGN reduce production specifier_qualifier_list(type_name) -> typedef_name option(type_qualifier_list)

State 148:
## Known stack suffix:
## CONST
## LR(1) items:
type_qualifier_noattr -> CONST . [ VOLATILE VOID UNSIGNED UNION UNDERSCORE_BOOL TYPEDEF TILDE STRUCT STRING_LITERAL STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACK PRE_NAME PLUS PACKED MINUS LPAREN LONG LBRACK INT INLINE INC FLOAT EXTERN ENUM DOUBLE DEC CONSTANT CONST COMMA COLON CHAR BUILTIN_VA_ARG BANG AUTO ATTRIBUTE AND ALIGNOF ALIGNAS ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production type_qualifier_noattr -> CONST

State 149:
## Known stack suffix:
## ALIGNAS
## LR(1) items:
attribute_specifier -> ALIGNAS . LPAREN argument_expression_list RPAREN [ VOLATILE VOID UNSIGNED UNION UNDERSCORE_BOOL TYPEDEF TILDE STRUCT STRING_LITERAL STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACK PRE_NAME PLUS PACKED MINUS LPAREN LONG LBRACK LBRACE INT INLINE INC FLOAT EXTERN EQ ENUM DOUBLE DEC CONSTANT CONST COMMA COLON CHAR BUILTIN_VA_ARG BANG AUTO ATTRIBUTE AND ALIGNOF ALIGNAS ]
attribute_specifier -> ALIGNAS . LPAREN type_name RPAREN [ VOLATILE VOID UNSIGNED UNION UNDERSCORE_BOOL TYPEDEF TILDE STRUCT STRING_LITERAL STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACK PRE_NAME PLUS PACKED MINUS LPAREN LONG LBRACK LBRACE INT INLINE INC FLOAT EXTERN EQ ENUM DOUBLE DEC CONSTANT CONST COMMA COLON CHAR BUILTIN_VA_ARG BANG AUTO ATTRIBUTE AND ALIGNOF ALIGNAS ]
## Transitions:
-- On LPAREN shift to state 150
## Reductions:

State 150:
## Known stack suffix:
## ALIGNAS LPAREN
## LR(1) items:
attribute_specifier -> ALIGNAS LPAREN . argument_expression_list RPAREN [ VOLATILE VOID UNSIGNED UNION UNDERSCORE_BOOL TYPEDEF TILDE STRUCT STRING_LITERAL STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACK PRE_NAME PLUS PACKED MINUS LPAREN LONG LBRACK LBRACE INT INLINE INC FLOAT EXTERN EQ ENUM DOUBLE DEC CONSTANT CONST COMMA COLON CHAR BUILTIN_VA_ARG BANG AUTO ATTRIBUTE AND ALIGNOF ALIGNAS ]
attribute_specifier -> ALIGNAS LPAREN . type_name RPAREN [ VOLATILE VOID UNSIGNED UNION UNDERSCORE_BOOL TYPEDEF TILDE STRUCT STRING_LITERAL STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACK PRE_NAME PLUS PACKED MINUS LPAREN LONG LBRACK LBRACE INT INLINE INC FLOAT EXTERN EQ ENUM DOUBLE DEC CONSTANT CONST COMMA COLON CHAR BUILTIN_VA_ARG BANG AUTO ATTRIBUTE AND ALIGNOF ALIGNAS ]
## Transitions:
-- On VOID shift to state 2
-- On UNSIGNED shift to state 3
-- On UNION shift to state 4
-- On UNDERSCORE_BOOL shift to state 5
-- On TILDE shift to state 18
-- On STRUCT shift to state 8
-- On STRING_LITERAL shift to state 19
-- On STAR shift to state 20
-- On SIZEOF shift to state 21
-- On SIGNED shift to state 10
-- On SHORT shift to state 11
-- On PRE_NAME shift to state 27
-- On PLUS shift to state 24
-- On MINUS shift to state 25
-- On LPAREN shift to state 28
-- On LONG shift to state 29
-- On INT shift to state 30
-- On INC shift to state 31
-- On FLOAT shift to state 33
-- On ENUM shift to state 34
-- On DOUBLE shift to state 54
-- On DEC shift to state 46
-- On CONSTANT shift to state 47
-- On CHAR shift to state 55
-- On BUILTIN_VA_ARG shift to state 48
-- On BANG shift to state 50
-- On AND shift to state 51
-- On ALIGNOF shift to state 52
-- On unary_operator shift to state 56
-- On unary_expression shift to state 65
-- On typedef_name shift to state 145
-- On type_specifier_no_typedef_name shift to state 151
-- On type_qualifier_list shift to state 294
-- On type_name shift to state 299
-- On struct_or_union_specifier shift to state 155
-- On struct_or_union shift to state 156
-- On string_literals_list shift to state 58
-- On specifier_qualifier_list(type_name) shift to state 301
-- On shift_expression shift to state 78
-- On relational_expression shift to state 94
-- On primary_expression shift to state 60
-- On postfix_expression shift to state 61
-- On option(type_qualifier_list) shift to state 292
-- On multiplicative_expression shift to state 82
-- On logical_or_expression shift to state 102
-- On logical_and_expression shift to state 104
-- On inclusive_or_expression shift to state 120
-- On exclusive_or_expression shift to state 119
-- On equality_expression shift to state 110
-- On enum_specifier shift to state 169
-- On conditional_expression shift to state 123
-- On cast_expression shift to state 88
-- On assignment_expression shift to state 133
-- On argument_expression_list shift to state 309
-- On and_expression shift to state 118
-- On additive_expression shift to state 101
## Reductions:
-- On VOLATILE reduce production option(type_qualifier_list) ->
-- On RESTRICT reduce production option(type_qualifier_list) ->
-- On PACKED reduce production option(type_qualifier_list) ->
-- On CONST reduce production option(type_qualifier_list) ->
-- On ATTRIBUTE reduce production option(type_qualifier_list) ->
-- On ALIGNAS reduce production option(type_qualifier_list) ->

State 151:
## Known stack suffix:
## type_specifier_no_typedef_name
## LR(1) items:
specifier_qualifier_list(type_name) -> type_specifier_no_typedef_name . list(specifier_qualifier_no_typedef_name) [ STAR RPAREN LPAREN LBRACK ]
## Transitions:
-- On list(specifier_qualifier_no_typedef_name) shift to state 152
## Default reduction:
-- After reading the next token, reduce production list(specifier_qualifier_no_typedef_name) ->

State 152:
## Known stack suffix:
## type_specifier_no_typedef_name list(specifier_qualifier_no_typedef_name)
## LR(1) items:
list(specifier_qualifier_no_typedef_name) -> list(specifier_qualifier_no_typedef_name) . specifier_qualifier_no_typedef_name [ VOLATILE VOID UNSIGNED UNION UNDERSCORE_BOOL STRUCT STAR SIGNED SHORT RPAREN RESTRICT PACKED LPAREN LONG LBRACK INT FLOAT ENUM DOUBLE CONST CHAR ATTRIBUTE ALIGNAS ]
specifier_qualifier_list(type_name) -> type_specifier_no_typedef_name list(specifier_qualifier_no_typedef_name) . [ STAR RPAREN LPAREN LBRACK ]
## Transitions:
-- On VOLATILE shift to state 1
-- On VOID shift to state 2
-- On UNSIGNED shift to state 3
-- On UNION shift to state 4
-- On UNDERSCORE_BOOL shift to state 5
-- On STRUCT shift to state 8
-- On SIGNED shift to state 10
-- On SHORT shift to state 11
-- On RESTRICT shift to state 12
-- On PACKED shift to state 16
-- On LONG shift to state 29
-- On INT shift to state 30
-- On FLOAT shift to state 33
-- On ENUM shift to state 34
-- On DOUBLE shift to state 54
-- On CONST shift to state 148
-- On CHAR shift to state 55
-- On ATTRIBUTE shift to state 35
-- On ALIGNAS shift to state 149
-- On type_specifier_no_typedef_name shift to state 153
-- On type_qualifier_noattr shift to state 154
-- On struct_or_union_specifier shift to state 155
-- On struct_or_union shift to state 156
-- On specifier_qualifier_no_typedef_name shift to state 168
-- On enum_specifier shift to state 169
-- On attribute_specifier shift to state 170
## Reductions:
-- On XOR_ASSIGN reduce production specifier_qualifier_list(type_name) -> type_specifier_no_typedef_name list(specifier_qualifier_no_typedef_name)
-- On WHILE reduce production specifier_qualifier_list(type_name) -> type_specifier_no_typedef_name list(specifier_qualifier_no_typedef_name)
-- On VAR_NAME reduce production specifier_qualifier_list(type_name) -> type_specifier_no_typedef_name list(specifier_qualifier_no_typedef_name)
-- On TYPEDEF_NAME reduce production specifier_qualifier_list(type_name) -> type_specifier_no_typedef_name list(specifier_qualifier_no_typedef_name)
-- On TYPEDEF reduce production specifier_qualifier_list(type_name) -> type_specifier_no_typedef_name list(specifier_qualifier_no_typedef_name)
-- On TILDE reduce production specifier_qualifier_list(type_name) -> type_specifier_no_typedef_name list(specifier_qualifier_no_typedef_name)
-- On SWITCH reduce production specifier_qualifier_list(type_name) -> type_specifier_no_typedef_name list(specifier_qualifier_no_typedef_name)
-- On SUB_ASSIGN reduce production specifier_qualifier_list(type_name) -> type_specifier_no_typedef_name list(specifier_qualifier_no_typedef_name)
-- On STRING_LITERAL reduce production specifier_qualifier_list(type_name) -> type_specifier_no_typedef_name list(specifier_qualifier_no_typedef_name)
-- On STATIC reduce production specifier_qualifier_list(type_name) -> type_specifier_no_typedef_name list(specifier_qualifier_no_typedef_name)
-- On STAR reduce production specifier_qualifier_list(type_name) -> type_specifier_no_typedef_name list(specifier_qualifier_no_typedef_name)
-- On SLASH reduce production specifier_qualifier_list(type_name) -> type_specifier_no_typedef_name list(specifier_qualifier_no_typedef_name)
-- On SIZEOF reduce production specifier_qualifier_list(type_name) -> type_specifier_no_typedef_name list(specifier_qualifier_no_typedef_name)
-- On SEMICOLON reduce production specifier_qualifier_list(type_name) -> type_specifier_no_typedef_name list(specifier_qualifier_no_typedef_name)
-- On RPAREN reduce production specifier_qualifier_list(type_name) -> type_specifier_no_typedef_name list(specifier_qualifier_no_typedef_name)
-- On RIGHT_ASSIGN reduce production specifier_qualifier_list(type_name) -> type_specifier_no_typedef_name list(specifier_qualifier_no_typedef_name)
-- On RIGHT reduce production specifier_qualifier_list(type_name) -> type_specifier_no_typedef_name list(specifier_qualifier_no_typedef_name)
-- On RETURN reduce production specifier_qualifier_list(type_name) -> type_specifier_no_typedef_name list(specifier_qualifier_no_typedef_name)
-- On REGISTER reduce production specifier_qualifier_list(type_name) -> type_specifier_no_typedef_name list(specifier_qualifier_no_typedef_name)
-- On RBRACK reduce production specifier_qualifier_list(type_name) -> type_specifier_no_typedef_name list(specifier_qualifier_no_typedef_name)
-- On RBRACE reduce production specifier_qualifier_list(type_name) -> type_specifier_no_typedef_name list(specifier_qualifier_no_typedef_name)
-- On QUESTION reduce production specifier_qualifier_list(type_name) -> type_specifier_no_typedef_name list(specifier_qualifier_no_typedef_name)
-- On PTR reduce production specifier_qualifier_list(type_name) -> type_specifier_no_typedef_name list(specifier_qualifier_no_typedef_name)
-- On PRE_NAME reduce production specifier_qualifier_list(type_name) -> type_specifier_no_typedef_name list(specifier_qualifier_no_typedef_name)
-- On PRAGMA reduce production specifier_qualifier_list(type_name) -> type_specifier_no_typedef_name list(specifier_qualifier_no_typedef_name)
-- On PLUS reduce production specifier_qualifier_list(type_name) -> type_specifier_no_typedef_name list(specifier_qualifier_no_typedef_name)
-- On PERCENT reduce production specifier_qualifier_list(type_name) -> type_specifier_no_typedef_name list(specifier_qualifier_no_typedef_name)
-- On OR_ASSIGN reduce production specifier_qualifier_list(type_name) -> type_specifier_no_typedef_name list(specifier_qualifier_no_typedef_name)
-- On NEQ reduce production specifier_qualifier_list(type_name) -> type_specifier_no_typedef_name list(specifier_qualifier_no_typedef_name)
-- On MUL_ASSIGN reduce production specifier_qualifier_list(type_name) -> type_specifier_no_typedef_name list(specifier_qualifier_no_typedef_name)
-- On MOD_ASSIGN reduce production specifier_qualifier_list(type_name) -> type_specifier_no_typedef_name list(specifier_qualifier_no_typedef_name)
-- On MINUS reduce production specifier_qualifier_list(type_name) -> type_specifier_no_typedef_name list(specifier_qualifier_no_typedef_name)
-- On LT reduce production specifier_qualifier_list(type_name) -> type_specifier_no_typedef_name list(specifier_qualifier_no_typedef_name)
-- On LPAREN reduce production specifier_qualifier_list(type_name) -> type_specifier_no_typedef_name list(specifier_qualifier_no_typedef_name)
-- On LEQ reduce production specifier_qualifier_list(type_name) -> type_specifier_no_typedef_name list(specifier_qualifier_no_typedef_name)
-- On LEFT_ASSIGN reduce production specifier_qualifier_list(type_name) -> type_specifier_no_typedef_name list(specifier_qualifier_no_typedef_name)
-- On LEFT reduce production specifier_qualifier_list(type_name) -> type_specifier_no_typedef_name list(specifier_qualifier_no_typedef_name)
-- On LBRACK reduce production specifier_qualifier_list(type_name) -> type_specifier_no_typedef_name list(specifier_qualifier_no_typedef_name)
-- On LBRACE reduce production specifier_qualifier_list(type_name) -> type_specifier_no_typedef_name list(specifier_qualifier_no_typedef_name)
-- On INLINE reduce production specifier_qualifier_list(type_name) -> type_specifier_no_typedef_name list(specifier_qualifier_no_typedef_name)
-- On INC reduce production specifier_qualifier_list(type_name) -> type_specifier_no_typedef_name list(specifier_qualifier_no_typedef_name)
-- On IF reduce production specifier_qualifier_list(type_name) -> type_specifier_no_typedef_name list(specifier_qualifier_no_typedef_name)
-- On HAT reduce production specifier_qualifier_list(type_name) -> type_specifier_no_typedef_name list(specifier_qualifier_no_typedef_name)
-- On GT reduce production specifier_qualifier_list(type_name) -> type_specifier_no_typedef_name list(specifier_qualifier_no_typedef_name)
-- On GOTO reduce production specifier_qualifier_list(type_name) -> type_specifier_no_typedef_name list(specifier_qualifier_no_typedef_name)
-- On GEQ reduce production specifier_qualifier_list(type_name) -> type_specifier_no_typedef_name list(specifier_qualifier_no_typedef_name)
-- On FOR reduce production specifier_qualifier_list(type_name) -> type_specifier_no_typedef_name list(specifier_qualifier_no_typedef_name)
-- On EXTERN reduce production specifier_qualifier_list(type_name) -> type_specifier_no_typedef_name list(specifier_qualifier_no_typedef_name)
-- On EQEQ reduce production specifier_qualifier_list(type_name) -> type_specifier_no_typedef_name list(specifier_qualifier_no_typedef_name)
-- On EQ reduce production specifier_qualifier_list(type_name) -> type_specifier_no_typedef_name list(specifier_qualifier_no_typedef_name)
-- On EOF reduce production specifier_qualifier_list(type_name) -> type_specifier_no_typedef_name list(specifier_qualifier_no_typedef_name)
-- On ELSE reduce production specifier_qualifier_list(type_name) -> type_specifier_no_typedef_name list(specifier_qualifier_no_typedef_name)
-- On ELLIPSIS reduce production specifier_qualifier_list(type_name) -> type_specifier_no_typedef_name list(specifier_qualifier_no_typedef_name)
-- On DOT reduce production specifier_qualifier_list(type_name) -> type_specifier_no_typedef_name list(specifier_qualifier_no_typedef_name)
-- On DO reduce production specifier_qualifier_list(type_name) -> type_specifier_no_typedef_name list(specifier_qualifier_no_typedef_name)
-- On DIV_ASSIGN reduce production specifier_qualifier_list(type_name) -> type_specifier_no_typedef_name list(specifier_qualifier_no_typedef_name)
-- On DEFAULT reduce production specifier_qualifier_list(type_name) -> type_specifier_no_typedef_name list(specifier_qualifier_no_typedef_name)
-- On DEC reduce production specifier_qualifier_list(type_name) -> type_specifier_no_typedef_name list(specifier_qualifier_no_typedef_name)
-- On CONTINUE reduce production specifier_qualifier_list(type_name) -> type_specifier_no_typedef_name list(specifier_qualifier_no_typedef_name)
-- On CONSTANT reduce production specifier_qualifier_list(type_name) -> type_specifier_no_typedef_name list(specifier_qualifier_no_typedef_name)
-- On COMMA reduce production specifier_qualifier_list(type_name) -> type_specifier_no_typedef_name list(specifier_qualifier_no_typedef_name)
-- On COLON reduce production specifier_qualifier_list(type_name) -> type_specifier_no_typedef_name list(specifier_qualifier_no_typedef_name)
-- On CASE reduce production specifier_qualifier_list(type_name) -> type_specifier_no_typedef_name list(specifier_qualifier_no_typedef_name)
-- On BUILTIN_VA_ARG reduce production specifier_qualifier_list(type_name) -> type_specifier_no_typedef_name list(specifier_qualifier_no_typedef_name)
-- On BREAK reduce production specifier_qualifier_list(type_name) -> type_specifier_no_typedef_name list(specifier_qualifier_no_typedef_name)
-- On BARBAR reduce production specifier_qualifier_list(type_name) -> type_specifier_no_typedef_name list(specifier_qualifier_no_typedef_name)
-- On BAR reduce production specifier_qualifier_list(type_name) -> type_specifier_no_typedef_name list(specifier_qualifier_no_typedef_name)
-- On BANG reduce production specifier_qualifier_list(type_name) -> type_specifier_no_typedef_name list(specifier_qualifier_no_typedef_name)
-- On AUTO reduce production specifier_qualifier_list(type_name) -> type_specifier_no_typedef_name list(specifier_qualifier_no_typedef_name)
-- On ASM reduce production specifier_qualifier_list(type_name) -> type_specifier_no_typedef_name list(specifier_qualifier_no_typedef_name)
-- On AND_ASSIGN reduce production specifier_qualifier_list(type_name) -> type_specifier_no_typedef_name list(specifier_qualifier_no_typedef_name)
-- On ANDAND reduce production specifier_qualifier_list(type_name) -> type_specifier_no_typedef_name list(specifier_qualifier_no_typedef_name)
-- On AND reduce production specifier_qualifier_list(type_name) -> type_specifier_no_typedef_name list(specifier_qualifier_no_typedef_name)
-- On ALIGNOF reduce production specifier_qualifier_list(type_name) -> type_specifier_no_typedef_name list(specifier_qualifier_no_typedef_name)
-- On ADD_ASSIGN reduce production specifier_qualifier_list(type_name) -> type_specifier_no_typedef_name list(specifier_qualifier_no_typedef_name)

State 153:
## Known stack suffix:
## type_specifier_no_typedef_name
## LR(1) items:
specifier_qualifier_no_typedef_name -> type_specifier_no_typedef_name . [ VOLATILE VOID UNSIGNED UNION UNDERSCORE_BOOL STRUCT STAR SIGNED SHORT SEMICOLON RPAREN RESTRICT PRE_NAME PACKED LPAREN LONG LBRACK INT FLOAT ENUM DOUBLE CONST COLON CHAR ATTRIBUTE ALIGNAS ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production specifier_qualifier_no_typedef_name -> type_specifier_no_typedef_name

State 154:
## Known stack suffix:
## type_qualifier_noattr
## LR(1) items:
specifier_qualifier_no_typedef_name -> type_qualifier_noattr . [ VOLATILE VOID UNSIGNED UNION UNDERSCORE_BOOL STRUCT STAR SIGNED SHORT SEMICOLON RPAREN RESTRICT PRE_NAME PACKED LPAREN LONG LBRACK INT FLOAT ENUM DOUBLE CONST COLON CHAR ATTRIBUTE ALIGNAS ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production specifier_qualifier_no_typedef_name -> type_qualifier_noattr

State 155:
## Known stack suffix:
## struct_or_union_specifier
## LR(1) items:
type_specifier_no_typedef_name -> struct_or_union_specifier . [ VOLATILE VOID UNSIGNED UNION UNDERSCORE_BOOL TYPEDEF STRUCT STATIC STAR SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER PRE_NAME PACKED LPAREN LONG LBRACK INT INLINE FLOAT EXTERN ENUM DOUBLE CONST COMMA COLON CHAR AUTO ATTRIBUTE ALIGNAS ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production type_specifier_no_typedef_name -> struct_or_union_specifier

State 156:
## Known stack suffix:
## struct_or_union
## LR(1) items:
struct_or_union_specifier -> struct_or_union . attribute_specifier_list option(other_identifier) LBRACE struct_declaration_list RBRACE [ VOLATILE VOID UNSIGNED UNION UNDERSCORE_BOOL TYPEDEF STRUCT STATIC STAR SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER PRE_NAME PACKED LPAREN LONG LBRACK INT INLINE FLOAT EXTERN ENUM DOUBLE CONST COMMA COLON CHAR AUTO ATTRIBUTE ALIGNAS ]
struct_or_union_specifier -> struct_or_union . attribute_specifier_list general_identifier [ VOLATILE VOID UNSIGNED UNION UNDERSCORE_BOOL TYPEDEF STRUCT STATIC STAR SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER PRE_NAME PACKED LPAREN LONG LBRACK INT INLINE FLOAT EXTERN ENUM DOUBLE CONST COMMA COLON CHAR AUTO ATTRIBUTE ALIGNAS ]
## Transitions:
-- On PACKED shift to state 16
-- On ATTRIBUTE shift to state 35
-- On ALIGNAS shift to state 149
-- On attribute_specifier_list shift to state 157
-- On attribute_specifier shift to state 257
## Reductions:
-- On XOR_ASSIGN reduce production attribute_specifier_list ->
-- On WHILE reduce production attribute_specifier_list ->
-- On VOLATILE reduce production attribute_specifier_list ->
-- On VOID reduce production attribute_specifier_list ->
-- On VAR_NAME reduce production attribute_specifier_list ->
-- On UNSIGNED reduce production attribute_specifier_list ->
-- On UNION reduce production attribute_specifier_list ->
-- On UNDERSCORE_BOOL reduce production attribute_specifier_list ->
-- On TYPEDEF_NAME reduce production attribute_specifier_list ->
-- On TYPEDEF reduce production attribute_specifier_list ->
-- On TILDE reduce production attribute_specifier_list ->
-- On SWITCH reduce production attribute_specifier_list ->
-- On SUB_ASSIGN reduce production attribute_specifier_list ->
-- On STRUCT reduce production attribute_specifier_list ->
-- On STRING_LITERAL reduce production attribute_specifier_list ->
-- On STATIC reduce production attribute_specifier_list ->
-- On STAR reduce production attribute_specifier_list ->
-- On SLASH reduce production attribute_specifier_list ->
-- On SIZEOF reduce production attribute_specifier_list ->
-- On SIGNED reduce production attribute_specifier_list ->
-- On SHORT reduce production attribute_specifier_list ->
-- On SEMICOLON reduce production attribute_specifier_list ->
-- On RPAREN reduce production attribute_specifier_list ->
-- On RIGHT_ASSIGN reduce production attribute_specifier_list ->
-- On RIGHT reduce production attribute_specifier_list ->
-- On RETURN reduce production attribute_specifier_list ->
-- On RESTRICT reduce production attribute_specifier_list ->
-- On REGISTER reduce production attribute_specifier_list ->
-- On RBRACK reduce production attribute_specifier_list ->
-- On RBRACE reduce production attribute_specifier_list ->
-- On QUESTION reduce production attribute_specifier_list ->
-- On PTR reduce production attribute_specifier_list ->
-- On PRE_NAME reduce production attribute_specifier_list ->
-- On PRAGMA reduce production attribute_specifier_list ->
-- On PLUS reduce production attribute_specifier_list ->
-- On PERCENT reduce production attribute_specifier_list ->
-- On OR_ASSIGN reduce production attribute_specifier_list ->
-- On NEQ reduce production attribute_specifier_list ->
-- On MUL_ASSIGN reduce production attribute_specifier_list ->
-- On MOD_ASSIGN reduce production attribute_specifier_list ->
-- On MINUS reduce production attribute_specifier_list ->
-- On LT reduce production attribute_specifier_list ->
-- On LPAREN reduce production attribute_specifier_list ->
-- On LONG reduce production attribute_specifier_list ->
-- On LEQ reduce production attribute_specifier_list ->
-- On LEFT_ASSIGN reduce production attribute_specifier_list ->
-- On LEFT reduce production attribute_specifier_list ->
-- On LBRACK reduce production attribute_specifier_list ->
-- On LBRACE reduce production attribute_specifier_list ->
-- On INT reduce production attribute_specifier_list ->
-- On INLINE reduce production attribute_specifier_list ->
-- On INC reduce production attribute_specifier_list ->
-- On IF reduce production attribute_specifier_list ->
-- On HAT reduce production attribute_specifier_list ->
-- On GT reduce production attribute_specifier_list ->
-- On GOTO reduce production attribute_specifier_list ->
-- On GEQ reduce production attribute_specifier_list ->
-- On FOR reduce production attribute_specifier_list ->
-- On FLOAT reduce production attribute_specifier_list ->
-- On EXTERN reduce production attribute_specifier_list ->
-- On EQEQ reduce production attribute_specifier_list ->
-- On EQ reduce production attribute_specifier_list ->
-- On EOF reduce production attribute_specifier_list ->
-- On ENUM reduce production attribute_specifier_list ->
-- On ELSE reduce production attribute_specifier_list ->
-- On ELLIPSIS reduce production attribute_specifier_list ->
-- On DOUBLE reduce production attribute_specifier_list ->
-- On DOT reduce production attribute_specifier_list ->
-- On DO reduce production attribute_specifier_list ->
-- On DIV_ASSIGN reduce production attribute_specifier_list ->
-- On DEFAULT reduce production attribute_specifier_list ->
-- On DEC reduce production attribute_specifier_list ->
-- On CONTINUE reduce production attribute_specifier_list ->
-- On CONSTANT reduce production attribute_specifier_list ->
-- On CONST reduce production attribute_specifier_list ->
-- On COMMA reduce production attribute_specifier_list ->
-- On COLON reduce production attribute_specifier_list ->
-- On CHAR reduce production attribute_specifier_list ->
-- On CASE reduce production attribute_specifier_list ->
-- On BUILTIN_VA_ARG reduce production attribute_specifier_list ->
-- On BREAK reduce production attribute_specifier_list ->
-- On BARBAR reduce production attribute_specifier_list ->
-- On BAR reduce production attribute_specifier_list ->
-- On BANG reduce production attribute_specifier_list ->
-- On AUTO reduce production attribute_specifier_list ->
-- On ASM reduce production attribute_specifier_list ->
-- On AND_ASSIGN reduce production attribute_specifier_list ->
-- On ANDAND reduce production attribute_specifier_list ->
-- On AND reduce production attribute_specifier_list ->
-- On ALIGNOF reduce production attribute_specifier_list ->
-- On ADD_ASSIGN reduce production attribute_specifier_list ->

State 157:
## Known stack suffix:
## struct_or_union attribute_specifier_list
## LR(1) items:
struct_or_union_specifier -> struct_or_union attribute_specifier_list . option(other_identifier) LBRACE struct_declaration_list RBRACE [ VOLATILE VOID UNSIGNED UNION UNDERSCORE_BOOL TYPEDEF STRUCT STATIC STAR SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER PRE_NAME PACKED LPAREN LONG LBRACK INT INLINE FLOAT EXTERN ENUM DOUBLE CONST COMMA COLON CHAR AUTO ATTRIBUTE ALIGNAS ]
struct_or_union_specifier -> struct_or_union attribute_specifier_list . general_identifier [ VOLATILE VOID UNSIGNED UNION UNDERSCORE_BOOL TYPEDEF STRUCT STATIC STAR SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER PRE_NAME PACKED LPAREN LONG LBRACK INT INLINE FLOAT EXTERN ENUM DOUBLE CONST COMMA COLON CHAR AUTO ATTRIBUTE ALIGNAS ]
## Transitions:
-- On PRE_NAME shift to state 38
-- On typedef_name shift to state 42
-- On option(other_identifier) shift to state 158
-- On general_identifier shift to state 293
## Reductions:
-- On LBRACE reduce production option(other_identifier) ->

State 158:
## Known stack suffix:
## struct_or_union attribute_specifier_list option(other_identifier)
## LR(1) items:
struct_or_union_specifier -> struct_or_union attribute_specifier_list option(other_identifier) . LBRACE struct_declaration_list RBRACE [ VOLATILE VOID UNSIGNED UNION UNDERSCORE_BOOL TYPEDEF STRUCT STATIC STAR SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER PRE_NAME PACKED LPAREN LONG LBRACK INT INLINE FLOAT EXTERN ENUM DOUBLE CONST COMMA COLON CHAR AUTO ATTRIBUTE ALIGNAS ]
## Transitions:
-- On LBRACE shift to state 159
## Reductions:

State 159:
## Known stack suffix:
## struct_or_union attribute_specifier_list option(other_identifier) LBRACE
## LR(1) items:
struct_or_union_specifier -> struct_or_union attribute_specifier_list option(other_identifier) LBRACE . struct_declaration_list RBRACE [ VOLATILE VOID UNSIGNED UNION UNDERSCORE_BOOL TYPEDEF STRUCT STATIC STAR SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER PRE_NAME PACKED LPAREN LONG LBRACK INT INLINE FLOAT EXTERN ENUM DOUBLE CONST COMMA COLON CHAR AUTO ATTRIBUTE ALIGNAS ]
## Transitions:
-- On struct_declaration_list shift to state 160
## Default reduction:
-- After reading the next token, reduce production struct_declaration_list ->

State 160:
## Known stack suffix:
## struct_or_union attribute_specifier_list option(other_identifier) LBRACE struct_declaration_list
## LR(1) items:
struct_declaration_list -> struct_declaration_list . struct_declaration [ VOLATILE VOID UNSIGNED UNION UNDERSCORE_BOOL STRUCT SIGNED SHORT RESTRICT RBRACE PRE_NAME PACKED LONG INT FLOAT ENUM DOUBLE CONST CHAR ATTRIBUTE ALIGNAS ]
struct_or_union_specifier -> struct_or_union attribute_specifier_list option(other_identifier) LBRACE struct_declaration_list . RBRACE [ VOLATILE VOID UNSIGNED UNION UNDERSCORE_BOOL TYPEDEF STRUCT STATIC STAR SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER PRE_NAME PACKED LPAREN LONG LBRACK INT INLINE FLOAT EXTERN ENUM DOUBLE CONST COMMA COLON CHAR AUTO ATTRIBUTE ALIGNAS ]
## Transitions:
-- On VOID shift to state 2
-- On UNSIGNED shift to state 3
-- On UNION shift to state 4
-- On UNDERSCORE_BOOL shift to state 5
-- On STRUCT shift to state 8
-- On SIGNED shift to state 10
-- On SHORT shift to state 11
-- On RBRACE shift to state 161
-- On PRE_NAME shift to state 14
-- On LONG shift to state 29
-- On INT shift to state 30
-- On FLOAT shift to state 33
-- On ENUM shift to state 34
-- On DOUBLE shift to state 54
-- On CHAR shift to state 55
-- On typedef_name shift to state 162
-- On type_specifier_no_typedef_name shift to state 166
-- On type_qualifier_list shift to state 171
-- On struct_or_union_specifier shift to state 155
-- On struct_or_union shift to state 156
-- On struct_declaration shift to state 176
-- On specifier_qualifier_list(struct_declaration) shift to state 177
-- On option(type_qualifier_list) shift to state 292
-- On enum_specifier shift to state 169
## Reductions:
-- On VOLATILE reduce production option(type_qualifier_list) ->
-- On RESTRICT reduce production option(type_qualifier_list) ->
-- On PACKED reduce production option(type_qualifier_list) ->
-- On CONST reduce production option(type_qualifier_list) ->
-- On ATTRIBUTE reduce production option(type_qualifier_list) ->
-- On ALIGNAS reduce production option(type_qualifier_list) ->

State 161:
## Known stack suffix:
## struct_or_union attribute_specifier_list option(other_identifier) LBRACE struct_declaration_list RBRACE
## LR(1) items:
struct_or_union_specifier -> struct_or_union attribute_specifier_list option(other_identifier) LBRACE struct_declaration_list RBRACE . [ VOLATILE VOID UNSIGNED UNION UNDERSCORE_BOOL TYPEDEF STRUCT STATIC STAR SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER PRE_NAME PACKED LPAREN LONG LBRACK INT INLINE FLOAT EXTERN ENUM DOUBLE CONST COMMA COLON CHAR AUTO ATTRIBUTE ALIGNAS ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production struct_or_union_specifier -> struct_or_union attribute_specifier_list option(other_identifier) LBRACE struct_declaration_list RBRACE

State 162:
## Known stack suffix:
## typedef_name
## LR(1) items:
specifier_qualifier_list(struct_declaration) -> typedef_name . option(type_qualifier_list) [ STAR SEMICOLON PRE_NAME LPAREN COLON ]
## Transitions:
-- On type_qualifier_list shift to state 146
-- On option(type_qualifier_list) shift to state 163
## Default reduction:
-- After reading the next token, reduce production option(type_qualifier_list) ->

State 163:
## Known stack suffix:
## typedef_name option(type_qualifier_list)
## LR(1) items:
specifier_qualifier_list(struct_declaration) -> typedef_name option(type_qualifier_list) . [ STAR SEMICOLON PRE_NAME LPAREN COLON ]
type_qualifier_list -> option(type_qualifier_list) . type_qualifier_noattr [ VOLATILE STAR SEMICOLON RESTRICT PRE_NAME PACKED LPAREN CONST COLON ATTRIBUTE ALIGNAS ]
type_qualifier_list -> option(type_qualifier_list) . attribute_specifier [ VOLATILE STAR SEMICOLON RESTRICT PRE_NAME PACKED LPAREN CONST COLON ATTRIBUTE ALIGNAS ]
## Transitions:
-- On VOLATILE shift to state 1
-- On RESTRICT shift to state 12
-- On PACKED shift to state 16
-- On CONST shift to state 148
-- On ATTRIBUTE shift to state 35
-- On ALIGNAS shift to state 149
-- On type_qualifier_noattr shift to state 164
-- On attribute_specifier shift to state 165
## Reductions:
-- On XOR_ASSIGN reduce production specifier_qualifier_list(struct_declaration) -> typedef_name option(type_qualifier_list)
-- On WHILE reduce production specifier_qualifier_list(struct_declaration) -> typedef_name option(type_qualifier_list)
-- On VOID reduce production specifier_qualifier_list(struct_declaration) -> typedef_name option(type_qualifier_list)
-- On VAR_NAME reduce production specifier_qualifier_list(struct_declaration) -> typedef_name option(type_qualifier_list)
-- On UNSIGNED reduce production specifier_qualifier_list(struct_declaration) -> typedef_name option(type_qualifier_list)
-- On UNION reduce production specifier_qualifier_list(struct_declaration) -> typedef_name option(type_qualifier_list)
-- On UNDERSCORE_BOOL reduce production specifier_qualifier_list(struct_declaration) -> typedef_name option(type_qualifier_list)
-- On TYPEDEF_NAME reduce production specifier_qualifier_list(struct_declaration) -> typedef_name option(type_qualifier_list)
-- On TYPEDEF reduce production specifier_qualifier_list(struct_declaration) -> typedef_name option(type_qualifier_list)
-- On TILDE reduce production specifier_qualifier_list(struct_declaration) -> typedef_name option(type_qualifier_list)
-- On SWITCH reduce production specifier_qualifier_list(struct_declaration) -> typedef_name option(type_qualifier_list)
-- On SUB_ASSIGN reduce production specifier_qualifier_list(struct_declaration) -> typedef_name option(type_qualifier_list)
-- On STRUCT reduce production specifier_qualifier_list(struct_declaration) -> typedef_name option(type_qualifier_list)
-- On STRING_LITERAL reduce production specifier_qualifier_list(struct_declaration) -> typedef_name option(type_qualifier_list)
-- On STATIC reduce production specifier_qualifier_list(struct_declaration) -> typedef_name option(type_qualifier_list)
-- On STAR reduce production specifier_qualifier_list(struct_declaration) -> typedef_name option(type_qualifier_list)
-- On SLASH reduce production specifier_qualifier_list(struct_declaration) -> typedef_name option(type_qualifier_list)
-- On SIZEOF reduce production specifier_qualifier_list(struct_declaration) -> typedef_name option(type_qualifier_list)
-- On SIGNED reduce production specifier_qualifier_list(struct_declaration) -> typedef_name option(type_qualifier_list)
-- On SHORT reduce production specifier_qualifier_list(struct_declaration) -> typedef_name option(type_qualifier_list)
-- On SEMICOLON reduce production specifier_qualifier_list(struct_declaration) -> typedef_name option(type_qualifier_list)
-- On RPAREN reduce production specifier_qualifier_list(struct_declaration) -> typedef_name option(type_qualifier_list)
-- On RIGHT_ASSIGN reduce production specifier_qualifier_list(struct_declaration) -> typedef_name option(type_qualifier_list)
-- On RIGHT reduce production specifier_qualifier_list(struct_declaration) -> typedef_name option(type_qualifier_list)
-- On RETURN reduce production specifier_qualifier_list(struct_declaration) -> typedef_name option(type_qualifier_list)
-- On REGISTER reduce production specifier_qualifier_list(struct_declaration) -> typedef_name option(type_qualifier_list)
-- On RBRACK reduce production specifier_qualifier_list(struct_declaration) -> typedef_name option(type_qualifier_list)
-- On RBRACE reduce production specifier_qualifier_list(struct_declaration) -> typedef_name option(type_qualifier_list)
-- On QUESTION reduce production specifier_qualifier_list(struct_declaration) -> typedef_name option(type_qualifier_list)
-- On PTR reduce production specifier_qualifier_list(struct_declaration) -> typedef_name option(type_qualifier_list)
-- On PRE_NAME reduce production specifier_qualifier_list(struct_declaration) -> typedef_name option(type_qualifier_list)
-- On PRAGMA reduce production specifier_qualifier_list(struct_declaration) -> typedef_name option(type_qualifier_list)
-- On PLUS reduce production specifier_qualifier_list(struct_declaration) -> typedef_name option(type_qualifier_list)
-- On PERCENT reduce production specifier_qualifier_list(struct_declaration) -> typedef_name option(type_qualifier_list)
-- On OR_ASSIGN reduce production specifier_qualifier_list(struct_declaration) -> typedef_name option(type_qualifier_list)
-- On NEQ reduce production specifier_qualifier_list(struct_declaration) -> typedef_name option(type_qualifier_list)
-- On MUL_ASSIGN reduce production specifier_qualifier_list(struct_declaration) -> typedef_name option(type_qualifier_list)
-- On MOD_ASSIGN reduce production specifier_qualifier_list(struct_declaration) -> typedef_name option(type_qualifier_list)
-- On MINUS reduce production specifier_qualifier_list(struct_declaration) -> typedef_name option(type_qualifier_list)
-- On LT reduce production specifier_qualifier_list(struct_declaration) -> typedef_name option(type_qualifier_list)
-- On LPAREN reduce production specifier_qualifier_list(struct_declaration) -> typedef_name option(type_qualifier_list)
-- On LONG reduce production specifier_qualifier_list(struct_declaration) -> typedef_name option(type_qualifier_list)
-- On LEQ reduce production specifier_qualifier_list(struct_declaration) -> typedef_name option(type_qualifier_list)
-- On LEFT_ASSIGN reduce production specifier_qualifier_list(struct_declaration) -> typedef_name option(type_qualifier_list)
-- On LEFT reduce production specifier_qualifier_list(struct_declaration) -> typedef_name option(type_qualifier_list)
-- On LBRACK reduce production specifier_qualifier_list(struct_declaration) -> typedef_name option(type_qualifier_list)
-- On LBRACE reduce production specifier_qualifier_list(struct_declaration) -> typedef_name option(type_qualifier_list)
-- On INT reduce production specifier_qualifier_list(struct_declaration) -> typedef_name option(type_qualifier_list)
-- On INLINE reduce production specifier_qualifier_list(struct_declaration) -> typedef_name option(type_qualifier_list)
-- On INC reduce production specifier_qualifier_list(struct_declaration) -> typedef_name option(type_qualifier_list)
-- On IF reduce production specifier_qualifier_list(struct_declaration) -> typedef_name option(type_qualifier_list)
-- On HAT reduce production specifier_qualifier_list(struct_declaration) -> typedef_name option(type_qualifier_list)
-- On GT reduce production specifier_qualifier_list(struct_declaration) -> typedef_name option(type_qualifier_list)
-- On GOTO reduce production specifier_qualifier_list(struct_declaration) -> typedef_name option(type_qualifier_list)
-- On GEQ reduce production specifier_qualifier_list(struct_declaration) -> typedef_name option(type_qualifier_list)
-- On FOR reduce production specifier_qualifier_list(struct_declaration) -> typedef_name option(type_qualifier_list)
-- On FLOAT reduce production specifier_qualifier_list(struct_declaration) -> typedef_name option(type_qualifier_list)
-- On EXTERN reduce production specifier_qualifier_list(struct_declaration) -> typedef_name option(type_qualifier_list)
-- On EQEQ reduce production specifier_qualifier_list(struct_declaration) -> typedef_name option(type_qualifier_list)
-- On EQ reduce production specifier_qualifier_list(struct_declaration) -> typedef_name option(type_qualifier_list)
-- On EOF reduce production specifier_qualifier_list(struct_declaration) -> typedef_name option(type_qualifier_list)
-- On ENUM reduce production specifier_qualifier_list(struct_declaration) -> typedef_name option(type_qualifier_list)
-- On ELSE reduce production specifier_qualifier_list(struct_declaration) -> typedef_name option(type_qualifier_list)
-- On ELLIPSIS reduce production specifier_qualifier_list(struct_declaration) -> typedef_name option(type_qualifier_list)
-- On DOUBLE reduce production specifier_qualifier_list(struct_declaration) -> typedef_name option(type_qualifier_list)
-- On DOT reduce production specifier_qualifier_list(struct_declaration) -> typedef_name option(type_qualifier_list)
-- On DO reduce production specifier_qualifier_list(struct_declaration) -> typedef_name option(type_qualifier_list)
-- On DIV_ASSIGN reduce production specifier_qualifier_list(struct_declaration) -> typedef_name option(type_qualifier_list)
-- On DEFAULT reduce production specifier_qualifier_list(struct_declaration) -> typedef_name option(type_qualifier_list)
-- On DEC reduce production specifier_qualifier_list(struct_declaration) -> typedef_name option(type_qualifier_list)
-- On CONTINUE reduce production specifier_qualifier_list(struct_declaration) -> typedef_name option(type_qualifier_list)
-- On CONSTANT reduce production specifier_qualifier_list(struct_declaration) -> typedef_name option(type_qualifier_list)
-- On COMMA reduce production specifier_qualifier_list(struct_declaration) -> typedef_name option(type_qualifier_list)
-- On COLON reduce production specifier_qualifier_list(struct_declaration) -> typedef_name option(type_qualifier_list)
-- On CHAR reduce production specifier_qualifier_list(struct_declaration) -> typedef_name option(type_qualifier_list)
-- On CASE reduce production specifier_qualifier_list(struct_declaration) -> typedef_name option(type_qualifier_list)
-- On BUILTIN_VA_ARG reduce production specifier_qualifier_list(struct_declaration) -> typedef_name option(type_qualifier_list)
-- On BREAK reduce production specifier_qualifier_list(struct_declaration) -> typedef_name option(type_qualifier_list)
-- On BARBAR reduce production specifier_qualifier_list(struct_declaration) -> typedef_name option(type_qualifier_list)
-- On BAR reduce production specifier_qualifier_list(struct_declaration) -> typedef_name option(type_qualifier_list)
-- On BANG reduce production specifier_qualifier_list(struct_declaration) -> typedef_name option(type_qualifier_list)
-- On AUTO reduce production specifier_qualifier_list(struct_declaration) -> typedef_name option(type_qualifier_list)
-- On ASM reduce production specifier_qualifier_list(struct_declaration) -> typedef_name option(type_qualifier_list)
-- On AND_ASSIGN reduce production specifier_qualifier_list(struct_declaration) -> typedef_name option(type_qualifier_list)
-- On ANDAND reduce production specifier_qualifier_list(struct_declaration) -> typedef_name option(type_qualifier_list)
-- On AND reduce production specifier_qualifier_list(struct_declaration) -> typedef_name option(type_qualifier_list)
-- On ALIGNOF reduce production specifier_qualifier_list(struct_declaration) -> typedef_name option(type_qualifier_list)
-- On ADD_ASSIGN reduce production specifier_qualifier_list(struct_declaration) -> typedef_name option(type_qualifier_list)

State 164:
## Known stack suffix:
## option(type_qualifier_list) type_qualifier_noattr
## LR(1) items:
type_qualifier_list -> option(type_qualifier_list) type_qualifier_noattr . [ VOLATILE VOID UNSIGNED UNION UNDERSCORE_BOOL TILDE STRUCT STRING_LITERAL STAR SIZEOF SIGNED SHORT SEMICOLON RPAREN RESTRICT RBRACK PRE_NAME PLUS PACKED MINUS LPAREN LONG LBRACK INT INC FLOAT ENUM DOUBLE DEC CONSTANT CONST COMMA COLON CHAR BUILTIN_VA_ARG BANG ATTRIBUTE AND ALIGNOF ALIGNAS ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production type_qualifier_list -> option(type_qualifier_list) type_qualifier_noattr

State 165:
## Known stack suffix:
## option(type_qualifier_list) attribute_specifier
## LR(1) items:
type_qualifier_list -> option(type_qualifier_list) attribute_specifier . [ VOLATILE VOID UNSIGNED UNION UNDERSCORE_BOOL TILDE STRUCT STRING_LITERAL STAR SIZEOF SIGNED SHORT SEMICOLON RPAREN RESTRICT RBRACK PRE_NAME PLUS PACKED MINUS LPAREN LONG LBRACK INT INC FLOAT ENUM DOUBLE DEC CONSTANT CONST COMMA COLON CHAR BUILTIN_VA_ARG BANG ATTRIBUTE AND ALIGNOF ALIGNAS ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production type_qualifier_list -> option(type_qualifier_list) attribute_specifier

State 166:
## Known stack suffix:
## type_specifier_no_typedef_name
## LR(1) items:
specifier_qualifier_list(struct_declaration) -> type_specifier_no_typedef_name . list(specifier_qualifier_no_typedef_name) [ STAR SEMICOLON PRE_NAME LPAREN COLON ]
## Transitions:
-- On list(specifier_qualifier_no_typedef_name) shift to state 167
## Default reduction:
-- After reading the next token, reduce production list(specifier_qualifier_no_typedef_name) ->

State 167:
## Known stack suffix:
## type_specifier_no_typedef_name list(specifier_qualifier_no_typedef_name)
## LR(1) items:
list(specifier_qualifier_no_typedef_name) -> list(specifier_qualifier_no_typedef_name) . specifier_qualifier_no_typedef_name [ VOLATILE VOID UNSIGNED UNION UNDERSCORE_BOOL STRUCT STAR SIGNED SHORT SEMICOLON RESTRICT PRE_NAME PACKED LPAREN LONG INT FLOAT ENUM DOUBLE CONST COLON CHAR ATTRIBUTE ALIGNAS ]
specifier_qualifier_list(struct_declaration) -> type_specifier_no_typedef_name list(specifier_qualifier_no_typedef_name) . [ STAR SEMICOLON PRE_NAME LPAREN COLON ]
## Transitions:
-- On VOLATILE shift to state 1
-- On VOID shift to state 2
-- On UNSIGNED shift to state 3
-- On UNION shift to state 4
-- On UNDERSCORE_BOOL shift to state 5
-- On STRUCT shift to state 8
-- On SIGNED shift to state 10
-- On SHORT shift to state 11
-- On RESTRICT shift to state 12
-- On PACKED shift to state 16
-- On LONG shift to state 29
-- On INT shift to state 30
-- On FLOAT shift to state 33
-- On ENUM shift to state 34
-- On DOUBLE shift to state 54
-- On CONST shift to state 148
-- On CHAR shift to state 55
-- On ATTRIBUTE shift to state 35
-- On ALIGNAS shift to state 149
-- On type_specifier_no_typedef_name shift to state 153
-- On type_qualifier_noattr shift to state 154
-- On struct_or_union_specifier shift to state 155
-- On struct_or_union shift to state 156
-- On specifier_qualifier_no_typedef_name shift to state 168
-- On enum_specifier shift to state 169
-- On attribute_specifier shift to state 170
## Reductions:
-- On XOR_ASSIGN reduce production specifier_qualifier_list(struct_declaration) -> type_specifier_no_typedef_name list(specifier_qualifier_no_typedef_name)
-- On WHILE reduce production specifier_qualifier_list(struct_declaration) -> type_specifier_no_typedef_name list(specifier_qualifier_no_typedef_name)
-- On VAR_NAME reduce production specifier_qualifier_list(struct_declaration) -> type_specifier_no_typedef_name list(specifier_qualifier_no_typedef_name)
-- On TYPEDEF_NAME reduce production specifier_qualifier_list(struct_declaration) -> type_specifier_no_typedef_name list(specifier_qualifier_no_typedef_name)
-- On TYPEDEF reduce production specifier_qualifier_list(struct_declaration) -> type_specifier_no_typedef_name list(specifier_qualifier_no_typedef_name)
-- On TILDE reduce production specifier_qualifier_list(struct_declaration) -> type_specifier_no_typedef_name list(specifier_qualifier_no_typedef_name)
-- On SWITCH reduce production specifier_qualifier_list(struct_declaration) -> type_specifier_no_typedef_name list(specifier_qualifier_no_typedef_name)
-- On SUB_ASSIGN reduce production specifier_qualifier_list(struct_declaration) -> type_specifier_no_typedef_name list(specifier_qualifier_no_typedef_name)
-- On STRING_LITERAL reduce production specifier_qualifier_list(struct_declaration) -> type_specifier_no_typedef_name list(specifier_qualifier_no_typedef_name)
-- On STATIC reduce production specifier_qualifier_list(struct_declaration) -> type_specifier_no_typedef_name list(specifier_qualifier_no_typedef_name)
-- On STAR reduce production specifier_qualifier_list(struct_declaration) -> type_specifier_no_typedef_name list(specifier_qualifier_no_typedef_name)
-- On SLASH reduce production specifier_qualifier_list(struct_declaration) -> type_specifier_no_typedef_name list(specifier_qualifier_no_typedef_name)
-- On SIZEOF reduce production specifier_qualifier_list(struct_declaration) -> type_specifier_no_typedef_name list(specifier_qualifier_no_typedef_name)
-- On SEMICOLON reduce production specifier_qualifier_list(struct_declaration) -> type_specifier_no_typedef_name list(specifier_qualifier_no_typedef_name)
-- On RPAREN reduce production specifier_qualifier_list(struct_declaration) -> type_specifier_no_typedef_name list(specifier_qualifier_no_typedef_name)
-- On RIGHT_ASSIGN reduce production specifier_qualifier_list(struct_declaration) -> type_specifier_no_typedef_name list(specifier_qualifier_no_typedef_name)
-- On RIGHT reduce production specifier_qualifier_list(struct_declaration) -> type_specifier_no_typedef_name list(specifier_qualifier_no_typedef_name)
-- On RETURN reduce production specifier_qualifier_list(struct_declaration) -> type_specifier_no_typedef_name list(specifier_qualifier_no_typedef_name)
-- On REGISTER reduce production specifier_qualifier_list(struct_declaration) -> type_specifier_no_typedef_name list(specifier_qualifier_no_typedef_name)
-- On RBRACK reduce production specifier_qualifier_list(struct_declaration) -> type_specifier_no_typedef_name list(specifier_qualifier_no_typedef_name)
-- On RBRACE reduce production specifier_qualifier_list(struct_declaration) -> type_specifier_no_typedef_name list(specifier_qualifier_no_typedef_name)
-- On QUESTION reduce production specifier_qualifier_list(struct_declaration) -> type_specifier_no_typedef_name list(specifier_qualifier_no_typedef_name)
-- On PTR reduce production specifier_qualifier_list(struct_declaration) -> type_specifier_no_typedef_name list(specifier_qualifier_no_typedef_name)
-- On PRE_NAME reduce production specifier_qualifier_list(struct_declaration) -> type_specifier_no_typedef_name list(specifier_qualifier_no_typedef_name)
-- On PRAGMA reduce production specifier_qualifier_list(struct_declaration) -> type_specifier_no_typedef_name list(specifier_qualifier_no_typedef_name)
-- On PLUS reduce production specifier_qualifier_list(struct_declaration) -> type_specifier_no_typedef_name list(specifier_qualifier_no_typedef_name)
-- On PERCENT reduce production specifier_qualifier_list(struct_declaration) -> type_specifier_no_typedef_name list(specifier_qualifier_no_typedef_name)
-- On OR_ASSIGN reduce production specifier_qualifier_list(struct_declaration) -> type_specifier_no_typedef_name list(specifier_qualifier_no_typedef_name)
-- On NEQ reduce production specifier_qualifier_list(struct_declaration) -> type_specifier_no_typedef_name list(specifier_qualifier_no_typedef_name)
-- On MUL_ASSIGN reduce production specifier_qualifier_list(struct_declaration) -> type_specifier_no_typedef_name list(specifier_qualifier_no_typedef_name)
-- On MOD_ASSIGN reduce production specifier_qualifier_list(struct_declaration) -> type_specifier_no_typedef_name list(specifier_qualifier_no_typedef_name)
-- On MINUS reduce production specifier_qualifier_list(struct_declaration) -> type_specifier_no_typedef_name list(specifier_qualifier_no_typedef_name)
-- On LT reduce production specifier_qualifier_list(struct_declaration) -> type_specifier_no_typedef_name list(specifier_qualifier_no_typedef_name)
-- On LPAREN reduce production specifier_qualifier_list(struct_declaration) -> type_specifier_no_typedef_name list(specifier_qualifier_no_typedef_name)
-- On LEQ reduce production specifier_qualifier_list(struct_declaration) -> type_specifier_no_typedef_name list(specifier_qualifier_no_typedef_name)
-- On LEFT_ASSIGN reduce production specifier_qualifier_list(struct_declaration) -> type_specifier_no_typedef_name list(specifier_qualifier_no_typedef_name)
-- On LEFT reduce production specifier_qualifier_list(struct_declaration) -> type_specifier_no_typedef_name list(specifier_qualifier_no_typedef_name)
-- On LBRACK reduce production specifier_qualifier_list(struct_declaration) -> type_specifier_no_typedef_name list(specifier_qualifier_no_typedef_name)
-- On LBRACE reduce production specifier_qualifier_list(struct_declaration) -> type_specifier_no_typedef_name list(specifier_qualifier_no_typedef_name)
-- On INLINE reduce production specifier_qualifier_list(struct_declaration) -> type_specifier_no_typedef_name list(specifier_qualifier_no_typedef_name)
-- On INC reduce production specifier_qualifier_list(struct_declaration) -> type_specifier_no_typedef_name list(specifier_qualifier_no_typedef_name)
-- On IF reduce production specifier_qualifier_list(struct_declaration) -> type_specifier_no_typedef_name list(specifier_qualifier_no_typedef_name)
-- On HAT reduce production specifier_qualifier_list(struct_declaration) -> type_specifier_no_typedef_name list(specifier_qualifier_no_typedef_name)
-- On GT reduce production specifier_qualifier_list(struct_declaration) -> type_specifier_no_typedef_name list(specifier_qualifier_no_typedef_name)
-- On GOTO reduce production specifier_qualifier_list(struct_declaration) -> type_specifier_no_typedef_name list(specifier_qualifier_no_typedef_name)
-- On GEQ reduce production specifier_qualifier_list(struct_declaration) -> type_specifier_no_typedef_name list(specifier_qualifier_no_typedef_name)
-- On FOR reduce production specifier_qualifier_list(struct_declaration) -> type_specifier_no_typedef_name list(specifier_qualifier_no_typedef_name)
-- On EXTERN reduce production specifier_qualifier_list(struct_declaration) -> type_specifier_no_typedef_name list(specifier_qualifier_no_typedef_name)
-- On EQEQ reduce production specifier_qualifier_list(struct_declaration) -> type_specifier_no_typedef_name list(specifier_qualifier_no_typedef_name)
-- On EQ reduce production specifier_qualifier_list(struct_declaration) -> type_specifier_no_typedef_name list(specifier_qualifier_no_typedef_name)
-- On EOF reduce production specifier_qualifier_list(struct_declaration) -> type_specifier_no_typedef_name list(specifier_qualifier_no_typedef_name)
-- On ELSE reduce production specifier_qualifier_list(struct_declaration) -> type_specifier_no_typedef_name list(specifier_qualifier_no_typedef_name)
-- On ELLIPSIS reduce production specifier_qualifier_list(struct_declaration) -> type_specifier_no_typedef_name list(specifier_qualifier_no_typedef_name)
-- On DOT reduce production specifier_qualifier_list(struct_declaration) -> type_specifier_no_typedef_name list(specifier_qualifier_no_typedef_name)
-- On DO reduce production specifier_qualifier_list(struct_declaration) -> type_specifier_no_typedef_name list(specifier_qualifier_no_typedef_name)
-- On DIV_ASSIGN reduce production specifier_qualifier_list(struct_declaration) -> type_specifier_no_typedef_name list(specifier_qualifier_no_typedef_name)
-- On DEFAULT reduce production specifier_qualifier_list(struct_declaration) -> type_specifier_no_typedef_name list(specifier_qualifier_no_typedef_name)
-- On DEC reduce production specifier_qualifier_list(struct_declaration) -> type_specifier_no_typedef_name list(specifier_qualifier_no_typedef_name)
-- On CONTINUE reduce production specifier_qualifier_list(struct_declaration) -> type_specifier_no_typedef_name list(specifier_qualifier_no_typedef_name)
-- On CONSTANT reduce production specifier_qualifier_list(struct_declaration) -> type_specifier_no_typedef_name list(specifier_qualifier_no_typedef_name)
-- On COMMA reduce production specifier_qualifier_list(struct_declaration) -> type_specifier_no_typedef_name list(specifier_qualifier_no_typedef_name)
-- On COLON reduce production specifier_qualifier_list(struct_declaration) -> type_specifier_no_typedef_name list(specifier_qualifier_no_typedef_name)
-- On CASE reduce production specifier_qualifier_list(struct_declaration) -> type_specifier_no_typedef_name list(specifier_qualifier_no_typedef_name)
-- On BUILTIN_VA_ARG reduce production specifier_qualifier_list(struct_declaration) -> type_specifier_no_typedef_name list(specifier_qualifier_no_typedef_name)
-- On BREAK reduce production specifier_qualifier_list(struct_declaration) -> type_specifier_no_typedef_name list(specifier_qualifier_no_typedef_name)
-- On BARBAR reduce production specifier_qualifier_list(struct_declaration) -> type_specifier_no_typedef_name list(specifier_qualifier_no_typedef_name)
-- On BAR reduce production specifier_qualifier_list(struct_declaration) -> type_specifier_no_typedef_name list(specifier_qualifier_no_typedef_name)
-- On BANG reduce production specifier_qualifier_list(struct_declaration) -> type_specifier_no_typedef_name list(specifier_qualifier_no_typedef_name)
-- On AUTO reduce production specifier_qualifier_list(struct_declaration) -> type_specifier_no_typedef_name list(specifier_qualifier_no_typedef_name)
-- On ASM reduce production specifier_qualifier_list(struct_declaration) -> type_specifier_no_typedef_name list(specifier_qualifier_no_typedef_name)
-- On AND_ASSIGN reduce production specifier_qualifier_list(struct_declaration) -> type_specifier_no_typedef_name list(specifier_qualifier_no_typedef_name)
-- On ANDAND reduce production specifier_qualifier_list(struct_declaration) -> type_specifier_no_typedef_name list(specifier_qualifier_no_typedef_name)
-- On AND reduce production specifier_qualifier_list(struct_declaration) -> type_specifier_no_typedef_name list(specifier_qualifier_no_typedef_name)
-- On ALIGNOF reduce production specifier_qualifier_list(struct_declaration) -> type_specifier_no_typedef_name list(specifier_qualifier_no_typedef_name)
-- On ADD_ASSIGN reduce production specifier_qualifier_list(struct_declaration) -> type_specifier_no_typedef_name list(specifier_qualifier_no_typedef_name)

State 168:
## Known stack suffix:
## list(specifier_qualifier_no_typedef_name) specifier_qualifier_no_typedef_name
## LR(1) items:
list(specifier_qualifier_no_typedef_name) -> list(specifier_qualifier_no_typedef_name) specifier_qualifier_no_typedef_name . [ VOLATILE VOID UNSIGNED UNION UNDERSCORE_BOOL STRUCT STAR SIGNED SHORT SEMICOLON RPAREN RESTRICT PRE_NAME PACKED LPAREN LONG LBRACK INT FLOAT ENUM DOUBLE CONST COLON CHAR ATTRIBUTE ALIGNAS ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production list(specifier_qualifier_no_typedef_name) -> list(specifier_qualifier_no_typedef_name) specifier_qualifier_no_typedef_name

State 169:
## Known stack suffix:
## enum_specifier
## LR(1) items:
type_specifier_no_typedef_name -> enum_specifier . [ VOLATILE VOID UNSIGNED UNION UNDERSCORE_BOOL TYPEDEF STRUCT STATIC STAR SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER PRE_NAME PACKED LPAREN LONG LBRACK INT INLINE FLOAT EXTERN ENUM DOUBLE CONST COMMA COLON CHAR AUTO ATTRIBUTE ALIGNAS ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production type_specifier_no_typedef_name -> enum_specifier

State 170:
## Known stack suffix:
## attribute_specifier
## LR(1) items:
specifier_qualifier_no_typedef_name -> attribute_specifier . [ VOLATILE VOID UNSIGNED UNION UNDERSCORE_BOOL STRUCT STAR SIGNED SHORT SEMICOLON RPAREN RESTRICT PRE_NAME PACKED LPAREN LONG LBRACK INT FLOAT ENUM DOUBLE CONST COLON CHAR ATTRIBUTE ALIGNAS ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production specifier_qualifier_no_typedef_name -> attribute_specifier

State 171:
## Known stack suffix:
## type_qualifier_list
## LR(1) items:
option(type_qualifier_list) -> type_qualifier_list . [ VOLATILE RESTRICT PACKED CONST ATTRIBUTE ALIGNAS ]
specifier_qualifier_list(struct_declaration) -> type_qualifier_list . typedef_name option(type_qualifier_list) [ STAR SEMICOLON PRE_NAME LPAREN COLON ]
specifier_qualifier_list(struct_declaration) -> type_qualifier_list . type_specifier_no_typedef_name list(specifier_qualifier_no_typedef_name) [ STAR SEMICOLON PRE_NAME LPAREN COLON ]
## Transitions:
-- On VOID shift to state 2
-- On UNSIGNED shift to state 3
-- On UNION shift to state 4
-- On UNDERSCORE_BOOL shift to state 5
-- On STRUCT shift to state 8
-- On SIGNED shift to state 10
-- On SHORT shift to state 11
-- On PRE_NAME shift to state 14
-- On LONG shift to state 29
-- On INT shift to state 30
-- On FLOAT shift to state 33
-- On ENUM shift to state 34
-- On DOUBLE shift to state 54
-- On CHAR shift to state 55
-- On typedef_name shift to state 172
-- On type_specifier_no_typedef_name shift to state 174
-- On struct_or_union_specifier shift to state 155
-- On struct_or_union shift to state 156
-- On enum_specifier shift to state 169
## Reductions:
-- On VOLATILE reduce production option(type_qualifier_list) -> type_qualifier_list
-- On RESTRICT reduce production option(type_qualifier_list) -> type_qualifier_list
-- On PACKED reduce production option(type_qualifier_list) -> type_qualifier_list
-- On CONST reduce production option(type_qualifier_list) -> type_qualifier_list
-- On ATTRIBUTE reduce production option(type_qualifier_list) -> type_qualifier_list
-- On ALIGNAS reduce production option(type_qualifier_list) -> type_qualifier_list

State 172:
## Known stack suffix:
## type_qualifier_list typedef_name
## LR(1) items:
specifier_qualifier_list(struct_declaration) -> type_qualifier_list typedef_name . option(type_qualifier_list) [ STAR SEMICOLON PRE_NAME LPAREN COLON ]
## Transitions:
-- On type_qualifier_list shift to state 146
-- On option(type_qualifier_list) shift to state 173
## Default reduction:
-- After reading the next token, reduce production option(type_qualifier_list) ->

State 173:
## Known stack suffix:
## type_qualifier_list typedef_name option(type_qualifier_list)
## LR(1) items:
specifier_qualifier_list(struct_declaration) -> type_qualifier_list typedef_name option(type_qualifier_list) . [ STAR SEMICOLON PRE_NAME LPAREN COLON ]
type_qualifier_list -> option(type_qualifier_list) . type_qualifier_noattr [ VOLATILE STAR SEMICOLON RESTRICT PRE_NAME PACKED LPAREN CONST COLON ATTRIBUTE ALIGNAS ]
type_qualifier_list -> option(type_qualifier_list) . attribute_specifier [ VOLATILE STAR SEMICOLON RESTRICT PRE_NAME PACKED LPAREN CONST COLON ATTRIBUTE ALIGNAS ]
## Transitions:
-- On VOLATILE shift to state 1
-- On RESTRICT shift to state 12
-- On PACKED shift to state 16
-- On CONST shift to state 148
-- On ATTRIBUTE shift to state 35
-- On ALIGNAS shift to state 149
-- On type_qualifier_noattr shift to state 164
-- On attribute_specifier shift to state 165
## Reductions:
-- On XOR_ASSIGN reduce production specifier_qualifier_list(struct_declaration) -> type_qualifier_list typedef_name option(type_qualifier_list)
-- On WHILE reduce production specifier_qualifier_list(struct_declaration) -> type_qualifier_list typedef_name option(type_qualifier_list)
-- On VOID reduce production specifier_qualifier_list(struct_declaration) -> type_qualifier_list typedef_name option(type_qualifier_list)
-- On VAR_NAME reduce production specifier_qualifier_list(struct_declaration) -> type_qualifier_list typedef_name option(type_qualifier_list)
-- On UNSIGNED reduce production specifier_qualifier_list(struct_declaration) -> type_qualifier_list typedef_name option(type_qualifier_list)
-- On UNION reduce production specifier_qualifier_list(struct_declaration) -> type_qualifier_list typedef_name option(type_qualifier_list)
-- On UNDERSCORE_BOOL reduce production specifier_qualifier_list(struct_declaration) -> type_qualifier_list typedef_name option(type_qualifier_list)
-- On TYPEDEF_NAME reduce production specifier_qualifier_list(struct_declaration) -> type_qualifier_list typedef_name option(type_qualifier_list)
-- On TYPEDEF reduce production specifier_qualifier_list(struct_declaration) -> type_qualifier_list typedef_name option(type_qualifier_list)
-- On TILDE reduce production specifier_qualifier_list(struct_declaration) -> type_qualifier_list typedef_name option(type_qualifier_list)
-- On SWITCH reduce production specifier_qualifier_list(struct_declaration) -> type_qualifier_list typedef_name option(type_qualifier_list)
-- On SUB_ASSIGN reduce production specifier_qualifier_list(struct_declaration) -> type_qualifier_list typedef_name option(type_qualifier_list)
-- On STRUCT reduce production specifier_qualifier_list(struct_declaration) -> type_qualifier_list typedef_name option(type_qualifier_list)
-- On STRING_LITERAL reduce production specifier_qualifier_list(struct_declaration) -> type_qualifier_list typedef_name option(type_qualifier_list)
-- On STATIC reduce production specifier_qualifier_list(struct_declaration) -> type_qualifier_list typedef_name option(type_qualifier_list)
-- On STAR reduce production specifier_qualifier_list(struct_declaration) -> type_qualifier_list typedef_name option(type_qualifier_list)
-- On SLASH reduce production specifier_qualifier_list(struct_declaration) -> type_qualifier_list typedef_name option(type_qualifier_list)
-- On SIZEOF reduce production specifier_qualifier_list(struct_declaration) -> type_qualifier_list typedef_name option(type_qualifier_list)
-- On SIGNED reduce production specifier_qualifier_list(struct_declaration) -> type_qualifier_list typedef_name option(type_qualifier_list)
-- On SHORT reduce production specifier_qualifier_list(struct_declaration) -> type_qualifier_list typedef_name option(type_qualifier_list)
-- On SEMICOLON reduce production specifier_qualifier_list(struct_declaration) -> type_qualifier_list typedef_name option(type_qualifier_list)
-- On RPAREN reduce production specifier_qualifier_list(struct_declaration) -> type_qualifier_list typedef_name option(type_qualifier_list)
-- On RIGHT_ASSIGN reduce production specifier_qualifier_list(struct_declaration) -> type_qualifier_list typedef_name option(type_qualifier_list)
-- On RIGHT reduce production specifier_qualifier_list(struct_declaration) -> type_qualifier_list typedef_name option(type_qualifier_list)
-- On RETURN reduce production specifier_qualifier_list(struct_declaration) -> type_qualifier_list typedef_name option(type_qualifier_list)
-- On REGISTER reduce production specifier_qualifier_list(struct_declaration) -> type_qualifier_list typedef_name option(type_qualifier_list)
-- On RBRACK reduce production specifier_qualifier_list(struct_declaration) -> type_qualifier_list typedef_name option(type_qualifier_list)
-- On RBRACE reduce production specifier_qualifier_list(struct_declaration) -> type_qualifier_list typedef_name option(type_qualifier_list)
-- On QUESTION reduce production specifier_qualifier_list(struct_declaration) -> type_qualifier_list typedef_name option(type_qualifier_list)
-- On PTR reduce production specifier_qualifier_list(struct_declaration) -> type_qualifier_list typedef_name option(type_qualifier_list)
-- On PRE_NAME reduce production specifier_qualifier_list(struct_declaration) -> type_qualifier_list typedef_name option(type_qualifier_list)
-- On PRAGMA reduce production specifier_qualifier_list(struct_declaration) -> type_qualifier_list typedef_name option(type_qualifier_list)
-- On PLUS reduce production specifier_qualifier_list(struct_declaration) -> type_qualifier_list typedef_name option(type_qualifier_list)
-- On PERCENT reduce production specifier_qualifier_list(struct_declaration) -> type_qualifier_list typedef_name option(type_qualifier_list)
-- On OR_ASSIGN reduce production specifier_qualifier_list(struct_declaration) -> type_qualifier_list typedef_name option(type_qualifier_list)
-- On NEQ reduce production specifier_qualifier_list(struct_declaration) -> type_qualifier_list typedef_name option(type_qualifier_list)
-- On MUL_ASSIGN reduce production specifier_qualifier_list(struct_declaration) -> type_qualifier_list typedef_name option(type_qualifier_list)
-- On MOD_ASSIGN reduce production specifier_qualifier_list(struct_declaration) -> type_qualifier_list typedef_name option(type_qualifier_list)
-- On MINUS reduce production specifier_qualifier_list(struct_declaration) -> type_qualifier_list typedef_name option(type_qualifier_list)
-- On LT reduce production specifier_qualifier_list(struct_declaration) -> type_qualifier_list typedef_name option(type_qualifier_list)
-- On LPAREN reduce production specifier_qualifier_list(struct_declaration) -> type_qualifier_list typedef_name option(type_qualifier_list)
-- On LONG reduce production specifier_qualifier_list(struct_declaration) -> type_qualifier_list typedef_name option(type_qualifier_list)
-- On LEQ reduce production specifier_qualifier_list(struct_declaration) -> type_qualifier_list typedef_name option(type_qualifier_list)
-- On LEFT_ASSIGN reduce production specifier_qualifier_list(struct_declaration) -> type_qualifier_list typedef_name option(type_qualifier_list)
-- On LEFT reduce production specifier_qualifier_list(struct_declaration) -> type_qualifier_list typedef_name option(type_qualifier_list)
-- On LBRACK reduce production specifier_qualifier_list(struct_declaration) -> type_qualifier_list typedef_name option(type_qualifier_list)
-- On LBRACE reduce production specifier_qualifier_list(struct_declaration) -> type_qualifier_list typedef_name option(type_qualifier_list)
-- On INT reduce production specifier_qualifier_list(struct_declaration) -> type_qualifier_list typedef_name option(type_qualifier_list)
-- On INLINE reduce production specifier_qualifier_list(struct_declaration) -> type_qualifier_list typedef_name option(type_qualifier_list)
-- On INC reduce production specifier_qualifier_list(struct_declaration) -> type_qualifier_list typedef_name option(type_qualifier_list)
-- On IF reduce production specifier_qualifier_list(struct_declaration) -> type_qualifier_list typedef_name option(type_qualifier_list)
-- On HAT reduce production specifier_qualifier_list(struct_declaration) -> type_qualifier_list typedef_name option(type_qualifier_list)
-- On GT reduce production specifier_qualifier_list(struct_declaration) -> type_qualifier_list typedef_name option(type_qualifier_list)
-- On GOTO reduce production specifier_qualifier_list(struct_declaration) -> type_qualifier_list typedef_name option(type_qualifier_list)
-- On GEQ reduce production specifier_qualifier_list(struct_declaration) -> type_qualifier_list typedef_name option(type_qualifier_list)
-- On FOR reduce production specifier_qualifier_list(struct_declaration) -> type_qualifier_list typedef_name option(type_qualifier_list)
-- On FLOAT reduce production specifier_qualifier_list(struct_declaration) -> type_qualifier_list typedef_name option(type_qualifier_list)
-- On EXTERN reduce production specifier_qualifier_list(struct_declaration) -> type_qualifier_list typedef_name option(type_qualifier_list)
-- On EQEQ reduce production specifier_qualifier_list(struct_declaration) -> type_qualifier_list typedef_name option(type_qualifier_list)
-- On EQ reduce production specifier_qualifier_list(struct_declaration) -> type_qualifier_list typedef_name option(type_qualifier_list)
-- On EOF reduce production specifier_qualifier_list(struct_declaration) -> type_qualifier_list typedef_name option(type_qualifier_list)
-- On ENUM reduce production specifier_qualifier_list(struct_declaration) -> type_qualifier_list typedef_name option(type_qualifier_list)
-- On ELSE reduce production specifier_qualifier_list(struct_declaration) -> type_qualifier_list typedef_name option(type_qualifier_list)
-- On ELLIPSIS reduce production specifier_qualifier_list(struct_declaration) -> type_qualifier_list typedef_name option(type_qualifier_list)
-- On DOUBLE reduce production specifier_qualifier_list(struct_declaration) -> type_qualifier_list typedef_name option(type_qualifier_list)
-- On DOT reduce production specifier_qualifier_list(struct_declaration) -> type_qualifier_list typedef_name option(type_qualifier_list)
-- On DO reduce production specifier_qualifier_list(struct_declaration) -> type_qualifier_list typedef_name option(type_qualifier_list)
-- On DIV_ASSIGN reduce production specifier_qualifier_list(struct_declaration) -> type_qualifier_list typedef_name option(type_qualifier_list)
-- On DEFAULT reduce production specifier_qualifier_list(struct_declaration) -> type_qualifier_list typedef_name option(type_qualifier_list)
-- On DEC reduce production specifier_qualifier_list(struct_declaration) -> type_qualifier_list typedef_name option(type_qualifier_list)
-- On CONTINUE reduce production specifier_qualifier_list(struct_declaration) -> type_qualifier_list typedef_name option(type_qualifier_list)
-- On CONSTANT reduce production specifier_qualifier_list(struct_declaration) -> type_qualifier_list typedef_name option(type_qualifier_list)
-- On COMMA reduce production specifier_qualifier_list(struct_declaration) -> type_qualifier_list typedef_name option(type_qualifier_list)
-- On COLON reduce production specifier_qualifier_list(struct_declaration) -> type_qualifier_list typedef_name option(type_qualifier_list)
-- On CHAR reduce production specifier_qualifier_list(struct_declaration) -> type_qualifier_list typedef_name option(type_qualifier_list)
-- On CASE reduce production specifier_qualifier_list(struct_declaration) -> type_qualifier_list typedef_name option(type_qualifier_list)
-- On BUILTIN_VA_ARG reduce production specifier_qualifier_list(struct_declaration) -> type_qualifier_list typedef_name option(type_qualifier_list)
-- On BREAK reduce production specifier_qualifier_list(struct_declaration) -> type_qualifier_list typedef_name option(type_qualifier_list)
-- On BARBAR reduce production specifier_qualifier_list(struct_declaration) -> type_qualifier_list typedef_name option(type_qualifier_list)
-- On BAR reduce production specifier_qualifier_list(struct_declaration) -> type_qualifier_list typedef_name option(type_qualifier_list)
-- On BANG reduce production specifier_qualifier_list(struct_declaration) -> type_qualifier_list typedef_name option(type_qualifier_list)
-- On AUTO reduce production specifier_qualifier_list(struct_declaration) -> type_qualifier_list typedef_name option(type_qualifier_list)
-- On ASM reduce production specifier_qualifier_list(struct_declaration) -> type_qualifier_list typedef_name option(type_qualifier_list)
-- On AND_ASSIGN reduce production specifier_qualifier_list(struct_declaration) -> type_qualifier_list typedef_name option(type_qualifier_list)
-- On ANDAND reduce production specifier_qualifier_list(struct_declaration) -> type_qualifier_list typedef_name option(type_qualifier_list)
-- On AND reduce production specifier_qualifier_list(struct_declaration) -> type_qualifier_list typedef_name option(type_qualifier_list)
-- On ALIGNOF reduce production specifier_qualifier_list(struct_declaration) -> type_qualifier_list typedef_name option(type_qualifier_list)
-- On ADD_ASSIGN reduce production specifier_qualifier_list(struct_declaration) -> type_qualifier_list typedef_name option(type_qualifier_list)

State 174:
## Known stack suffix:
## type_qualifier_list type_specifier_no_typedef_name
## LR(1) items:
specifier_qualifier_list(struct_declaration) -> type_qualifier_list type_specifier_no_typedef_name . list(specifier_qualifier_no_typedef_name) [ STAR SEMICOLON PRE_NAME LPAREN COLON ]
## Transitions:
-- On list(specifier_qualifier_no_typedef_name) shift to state 175
## Default reduction:
-- After reading the next token, reduce production list(specifier_qualifier_no_typedef_name) ->

State 175:
## Known stack suffix:
## type_qualifier_list type_specifier_no_typedef_name list(specifier_qualifier_no_typedef_name)
## LR(1) items:
list(specifier_qualifier_no_typedef_name) -> list(specifier_qualifier_no_typedef_name) . specifier_qualifier_no_typedef_name [ VOLATILE VOID UNSIGNED UNION UNDERSCORE_BOOL STRUCT STAR SIGNED SHORT SEMICOLON RESTRICT PRE_NAME PACKED LPAREN LONG INT FLOAT ENUM DOUBLE CONST COLON CHAR ATTRIBUTE ALIGNAS ]
specifier_qualifier_list(struct_declaration) -> type_qualifier_list type_specifier_no_typedef_name list(specifier_qualifier_no_typedef_name) . [ STAR SEMICOLON PRE_NAME LPAREN COLON ]
## Transitions:
-- On VOLATILE shift to state 1
-- On VOID shift to state 2
-- On UNSIGNED shift to state 3
-- On UNION shift to state 4
-- On UNDERSCORE_BOOL shift to state 5
-- On STRUCT shift to state 8
-- On SIGNED shift to state 10
-- On SHORT shift to state 11
-- On RESTRICT shift to state 12
-- On PACKED shift to state 16
-- On LONG shift to state 29
-- On INT shift to state 30
-- On FLOAT shift to state 33
-- On ENUM shift to state 34
-- On DOUBLE shift to state 54
-- On CONST shift to state 148
-- On CHAR shift to state 55
-- On ATTRIBUTE shift to state 35
-- On ALIGNAS shift to state 149
-- On type_specifier_no_typedef_name shift to state 153
-- On type_qualifier_noattr shift to state 154
-- On struct_or_union_specifier shift to state 155
-- On struct_or_union shift to state 156
-- On specifier_qualifier_no_typedef_name shift to state 168
-- On enum_specifier shift to state 169
-- On attribute_specifier shift to state 170
## Reductions:
-- On XOR_ASSIGN reduce production specifier_qualifier_list(struct_declaration) -> type_qualifier_list type_specifier_no_typedef_name list(specifier_qualifier_no_typedef_name)
-- On WHILE reduce production specifier_qualifier_list(struct_declaration) -> type_qualifier_list type_specifier_no_typedef_name list(specifier_qualifier_no_typedef_name)
-- On VAR_NAME reduce production specifier_qualifier_list(struct_declaration) -> type_qualifier_list type_specifier_no_typedef_name list(specifier_qualifier_no_typedef_name)
-- On TYPEDEF_NAME reduce production specifier_qualifier_list(struct_declaration) -> type_qualifier_list type_specifier_no_typedef_name list(specifier_qualifier_no_typedef_name)
-- On TYPEDEF reduce production specifier_qualifier_list(struct_declaration) -> type_qualifier_list type_specifier_no_typedef_name list(specifier_qualifier_no_typedef_name)
-- On TILDE reduce production specifier_qualifier_list(struct_declaration) -> type_qualifier_list type_specifier_no_typedef_name list(specifier_qualifier_no_typedef_name)
-- On SWITCH reduce production specifier_qualifier_list(struct_declaration) -> type_qualifier_list type_specifier_no_typedef_name list(specifier_qualifier_no_typedef_name)
-- On SUB_ASSIGN reduce production specifier_qualifier_list(struct_declaration) -> type_qualifier_list type_specifier_no_typedef_name list(specifier_qualifier_no_typedef_name)
-- On STRING_LITERAL reduce production specifier_qualifier_list(struct_declaration) -> type_qualifier_list type_specifier_no_typedef_name list(specifier_qualifier_no_typedef_name)
-- On STATIC reduce production specifier_qualifier_list(struct_declaration) -> type_qualifier_list type_specifier_no_typedef_name list(specifier_qualifier_no_typedef_name)
-- On STAR reduce production specifier_qualifier_list(struct_declaration) -> type_qualifier_list type_specifier_no_typedef_name list(specifier_qualifier_no_typedef_name)
-- On SLASH reduce production specifier_qualifier_list(struct_declaration) -> type_qualifier_list type_specifier_no_typedef_name list(specifier_qualifier_no_typedef_name)
-- On SIZEOF reduce production specifier_qualifier_list(struct_declaration) -> type_qualifier_list type_specifier_no_typedef_name list(specifier_qualifier_no_typedef_name)
-- On SEMICOLON reduce production specifier_qualifier_list(struct_declaration) -> type_qualifier_list type_specifier_no_typedef_name list(specifier_qualifier_no_typedef_name)
-- On RPAREN reduce production specifier_qualifier_list(struct_declaration) -> type_qualifier_list type_specifier_no_typedef_name list(specifier_qualifier_no_typedef_name)
-- On RIGHT_ASSIGN reduce production specifier_qualifier_list(struct_declaration) -> type_qualifier_list type_specifier_no_typedef_name list(specifier_qualifier_no_typedef_name)
-- On RIGHT reduce production specifier_qualifier_list(struct_declaration) -> type_qualifier_list type_specifier_no_typedef_name list(specifier_qualifier_no_typedef_name)
-- On RETURN reduce production specifier_qualifier_list(struct_declaration) -> type_qualifier_list type_specifier_no_typedef_name list(specifier_qualifier_no_typedef_name)
-- On REGISTER reduce production specifier_qualifier_list(struct_declaration) -> type_qualifier_list type_specifier_no_typedef_name list(specifier_qualifier_no_typedef_name)
-- On RBRACK reduce production specifier_qualifier_list(struct_declaration) -> type_qualifier_list type_specifier_no_typedef_name list(specifier_qualifier_no_typedef_name)
-- On RBRACE reduce production specifier_qualifier_list(struct_declaration) -> type_qualifier_list type_specifier_no_typedef_name list(specifier_qualifier_no_typedef_name)
-- On QUESTION reduce production specifier_qualifier_list(struct_declaration) -> type_qualifier_list type_specifier_no_typedef_name list(specifier_qualifier_no_typedef_name)
-- On PTR reduce production specifier_qualifier_list(struct_declaration) -> type_qualifier_list type_specifier_no_typedef_name list(specifier_qualifier_no_typedef_name)
-- On PRE_NAME reduce production specifier_qualifier_list(struct_declaration) -> type_qualifier_list type_specifier_no_typedef_name list(specifier_qualifier_no_typedef_name)
-- On PRAGMA reduce production specifier_qualifier_list(struct_declaration) -> type_qualifier_list type_specifier_no_typedef_name list(specifier_qualifier_no_typedef_name)
-- On PLUS reduce production specifier_qualifier_list(struct_declaration) -> type_qualifier_list type_specifier_no_typedef_name list(specifier_qualifier_no_typedef_name)
-- On PERCENT reduce production specifier_qualifier_list(struct_declaration) -> type_qualifier_list type_specifier_no_typedef_name list(specifier_qualifier_no_typedef_name)
-- On OR_ASSIGN reduce production specifier_qualifier_list(struct_declaration) -> type_qualifier_list type_specifier_no_typedef_name list(specifier_qualifier_no_typedef_name)
-- On NEQ reduce production specifier_qualifier_list(struct_declaration) -> type_qualifier_list type_specifier_no_typedef_name list(specifier_qualifier_no_typedef_name)
-- On MUL_ASSIGN reduce production specifier_qualifier_list(struct_declaration) -> type_qualifier_list type_specifier_no_typedef_name list(specifier_qualifier_no_typedef_name)
-- On MOD_ASSIGN reduce production specifier_qualifier_list(struct_declaration) -> type_qualifier_list type_specifier_no_typedef_name list(specifier_qualifier_no_typedef_name)
-- On MINUS reduce production specifier_qualifier_list(struct_declaration) -> type_qualifier_list type_specifier_no_typedef_name list(specifier_qualifier_no_typedef_name)
-- On LT reduce production specifier_qualifier_list(struct_declaration) -> type_qualifier_list type_specifier_no_typedef_name list(specifier_qualifier_no_typedef_name)
-- On LPAREN reduce production specifier_qualifier_list(struct_declaration) -> type_qualifier_list type_specifier_no_typedef_name list(specifier_qualifier_no_typedef_name)
-- On LEQ reduce production specifier_qualifier_list(struct_declaration) -> type_qualifier_list type_specifier_no_typedef_name list(specifier_qualifier_no_typedef_name)
-- On LEFT_ASSIGN reduce production specifier_qualifier_list(struct_declaration) -> type_qualifier_list type_specifier_no_typedef_name list(specifier_qualifier_no_typedef_name)
-- On LEFT reduce production specifier_qualifier_list(struct_declaration) -> type_qualifier_list type_specifier_no_typedef_name list(specifier_qualifier_no_typedef_name)
-- On LBRACK reduce production specifier_qualifier_list(struct_declaration) -> type_qualifier_list type_specifier_no_typedef_name list(specifier_qualifier_no_typedef_name)
-- On LBRACE reduce production specifier_qualifier_list(struct_declaration) -> type_qualifier_list type_specifier_no_typedef_name list(specifier_qualifier_no_typedef_name)
-- On INLINE reduce production specifier_qualifier_list(struct_declaration) -> type_qualifier_list type_specifier_no_typedef_name list(specifier_qualifier_no_typedef_name)
-- On INC reduce production specifier_qualifier_list(struct_declaration) -> type_qualifier_list type_specifier_no_typedef_name list(specifier_qualifier_no_typedef_name)
-- On IF reduce production specifier_qualifier_list(struct_declaration) -> type_qualifier_list type_specifier_no_typedef_name list(specifier_qualifier_no_typedef_name)
-- On HAT reduce production specifier_qualifier_list(struct_declaration) -> type_qualifier_list type_specifier_no_typedef_name list(specifier_qualifier_no_typedef_name)
-- On GT reduce production specifier_qualifier_list(struct_declaration) -> type_qualifier_list type_specifier_no_typedef_name list(specifier_qualifier_no_typedef_name)
-- On GOTO reduce production specifier_qualifier_list(struct_declaration) -> type_qualifier_list type_specifier_no_typedef_name list(specifier_qualifier_no_typedef_name)
-- On GEQ reduce production specifier_qualifier_list(struct_declaration) -> type_qualifier_list type_specifier_no_typedef_name list(specifier_qualifier_no_typedef_name)
-- On FOR reduce production specifier_qualifier_list(struct_declaration) -> type_qualifier_list type_specifier_no_typedef_name list(specifier_qualifier_no_typedef_name)
-- On EXTERN reduce production specifier_qualifier_list(struct_declaration) -> type_qualifier_list type_specifier_no_typedef_name list(specifier_qualifier_no_typedef_name)
-- On EQEQ reduce production specifier_qualifier_list(struct_declaration) -> type_qualifier_list type_specifier_no_typedef_name list(specifier_qualifier_no_typedef_name)
-- On EQ reduce production specifier_qualifier_list(struct_declaration) -> type_qualifier_list type_specifier_no_typedef_name list(specifier_qualifier_no_typedef_name)
-- On EOF reduce production specifier_qualifier_list(struct_declaration) -> type_qualifier_list type_specifier_no_typedef_name list(specifier_qualifier_no_typedef_name)
-- On ELSE reduce production specifier_qualifier_list(struct_declaration) -> type_qualifier_list type_specifier_no_typedef_name list(specifier_qualifier_no_typedef_name)
-- On ELLIPSIS reduce production specifier_qualifier_list(struct_declaration) -> type_qualifier_list type_specifier_no_typedef_name list(specifier_qualifier_no_typedef_name)
-- On DOT reduce production specifier_qualifier_list(struct_declaration) -> type_qualifier_list type_specifier_no_typedef_name list(specifier_qualifier_no_typedef_name)
-- On DO reduce production specifier_qualifier_list(struct_declaration) -> type_qualifier_list type_specifier_no_typedef_name list(specifier_qualifier_no_typedef_name)
-- On DIV_ASSIGN reduce production specifier_qualifier_list(struct_declaration) -> type_qualifier_list type_specifier_no_typedef_name list(specifier_qualifier_no_typedef_name)
-- On DEFAULT reduce production specifier_qualifier_list(struct_declaration) -> type_qualifier_list type_specifier_no_typedef_name list(specifier_qualifier_no_typedef_name)
-- On DEC reduce production specifier_qualifier_list(struct_declaration) -> type_qualifier_list type_specifier_no_typedef_name list(specifier_qualifier_no_typedef_name)
-- On CONTINUE reduce production specifier_qualifier_list(struct_declaration) -> type_qualifier_list type_specifier_no_typedef_name list(specifier_qualifier_no_typedef_name)
-- On CONSTANT reduce production specifier_qualifier_list(struct_declaration) -> type_qualifier_list type_specifier_no_typedef_name list(specifier_qualifier_no_typedef_name)
-- On COMMA reduce production specifier_qualifier_list(struct_declaration) -> type_qualifier_list type_specifier_no_typedef_name list(specifier_qualifier_no_typedef_name)
-- On COLON reduce production specifier_qualifier_list(struct_declaration) -> type_qualifier_list type_specifier_no_typedef_name list(specifier_qualifier_no_typedef_name)
-- On CASE reduce production specifier_qualifier_list(struct_declaration) -> type_qualifier_list type_specifier_no_typedef_name list(specifier_qualifier_no_typedef_name)
-- On BUILTIN_VA_ARG reduce production specifier_qualifier_list(struct_declaration) -> type_qualifier_list type_specifier_no_typedef_name list(specifier_qualifier_no_typedef_name)
-- On BREAK reduce production specifier_qualifier_list(struct_declaration) -> type_qualifier_list type_specifier_no_typedef_name list(specifier_qualifier_no_typedef_name)
-- On BARBAR reduce production specifier_qualifier_list(struct_declaration) -> type_qualifier_list type_specifier_no_typedef_name list(specifier_qualifier_no_typedef_name)
-- On BAR reduce production specifier_qualifier_list(struct_declaration) -> type_qualifier_list type_specifier_no_typedef_name list(specifier_qualifier_no_typedef_name)
-- On BANG reduce production specifier_qualifier_list(struct_declaration) -> type_qualifier_list type_specifier_no_typedef_name list(specifier_qualifier_no_typedef_name)
-- On AUTO reduce production specifier_qualifier_list(struct_declaration) -> type_qualifier_list type_specifier_no_typedef_name list(specifier_qualifier_no_typedef_name)
-- On ASM reduce production specifier_qualifier_list(struct_declaration) -> type_qualifier_list type_specifier_no_typedef_name list(specifier_qualifier_no_typedef_name)
-- On AND_ASSIGN reduce production specifier_qualifier_list(struct_declaration) -> type_qualifier_list type_specifier_no_typedef_name list(specifier_qualifier_no_typedef_name)
-- On ANDAND reduce production specifier_qualifier_list(struct_declaration) -> type_qualifier_list type_specifier_no_typedef_name list(specifier_qualifier_no_typedef_name)
-- On AND reduce production specifier_qualifier_list(struct_declaration) -> type_qualifier_list type_specifier_no_typedef_name list(specifier_qualifier_no_typedef_name)
-- On ALIGNOF reduce production specifier_qualifier_list(struct_declaration) -> type_qualifier_list type_specifier_no_typedef_name list(specifier_qualifier_no_typedef_name)
-- On ADD_ASSIGN reduce production specifier_qualifier_list(struct_declaration) -> type_qualifier_list type_specifier_no_typedef_name list(specifier_qualifier_no_typedef_name)

State 176:
## Known stack suffix:
## struct_declaration_list struct_declaration
## LR(1) items:
struct_declaration_list -> struct_declaration_list struct_declaration . [ VOLATILE VOID UNSIGNED UNION UNDERSCORE_BOOL STRUCT SIGNED SHORT RESTRICT RBRACE PRE_NAME PACKED LONG INT FLOAT ENUM DOUBLE CONST CHAR ATTRIBUTE ALIGNAS ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production struct_declaration_list -> struct_declaration_list struct_declaration

State 177:
## Known stack suffix:
## specifier_qualifier_list(struct_declaration)
## LR(1) items:
struct_declaration -> specifier_qualifier_list(struct_declaration) . option(struct_declarator_list) SEMICOLON [ VOLATILE VOID UNSIGNED UNION UNDERSCORE_BOOL STRUCT SIGNED SHORT RESTRICT RBRACE PRE_NAME PACKED LONG INT FLOAT ENUM DOUBLE CONST CHAR ATTRIBUTE ALIGNAS ]
## Transitions:
-- On PRE_NAME shift to state 178
-- On LPAREN shift to state 182
-- On struct_declarator_list shift to state 282
-- On struct_declarator shift to state 289
-- On option(struct_declarator_list) shift to state 290
-- On option(declarator) shift to state 285
-- On list(pointer1) shift to state 184
-- On direct_declarator shift to state 250
-- On declarator_noattrend shift to state 255
-- On declarator_identifier shift to state 249
-- On declarator shift to state 288
## Reductions:
-- On STAR reduce production list(pointer1) ->
-- On SEMICOLON reduce production option(struct_declarator_list) ->
-- On COLON reduce production option(declarator) ->

State 178:
## Known stack suffix:
## PRE_NAME
## LR(1) items:
declarator_identifier -> PRE_NAME . low_prec TYPEDEF_NAME [ VOLATILE VOID UNSIGNED UNION UNDERSCORE_BOOL STRUCT STATIC SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER PRE_NAME PACKED LPAREN LONG LBRACK LBRACE INT INLINE FLOAT EXTERN EQ ENUM DOUBLE CONST COMMA COLON CHAR AUTO ATTRIBUTE ALIGNAS ]
declarator_identifier -> PRE_NAME . VAR_NAME [ VOLATILE VOID UNSIGNED UNION UNDERSCORE_BOOL STRUCT STATIC SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER PRE_NAME PACKED LPAREN LONG LBRACK LBRACE INT INLINE FLOAT EXTERN EQ ENUM DOUBLE CONST COMMA COLON CHAR AUTO ATTRIBUTE ALIGNAS ]
## Transitions:
-- On VAR_NAME shift to state 179
-- On low_prec shift to state 180
## Reductions:
-- On TYPEDEF_NAME reduce production low_prec ->

State 179:
## Known stack suffix:
## PRE_NAME VAR_NAME
## LR(1) items:
declarator_identifier -> PRE_NAME VAR_NAME . [ VOLATILE VOID UNSIGNED UNION UNDERSCORE_BOOL STRUCT STATIC SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER PRE_NAME PACKED LPAREN LONG LBRACK LBRACE INT INLINE FLOAT EXTERN EQ ENUM DOUBLE CONST COMMA COLON CHAR AUTO ATTRIBUTE ALIGNAS ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production declarator_identifier -> PRE_NAME VAR_NAME

State 180:
## Known stack suffix:
## PRE_NAME low_prec
## LR(1) items:
declarator_identifier -> PRE_NAME low_prec . TYPEDEF_NAME [ VOLATILE VOID UNSIGNED UNION UNDERSCORE_BOOL STRUCT STATIC SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER PRE_NAME PACKED LPAREN LONG LBRACK LBRACE INT INLINE FLOAT EXTERN EQ ENUM DOUBLE CONST COMMA COLON CHAR AUTO ATTRIBUTE ALIGNAS ]
## Transitions:
-- On TYPEDEF_NAME shift to state 181
## Reductions:

State 181:
## Known stack suffix:
## PRE_NAME low_prec TYPEDEF_NAME
## LR(1) items:
declarator_identifier -> PRE_NAME low_prec TYPEDEF_NAME . [ VOLATILE VOID UNSIGNED UNION UNDERSCORE_BOOL STRUCT STATIC SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER PRE_NAME PACKED LPAREN LONG LBRACK LBRACE INT INLINE FLOAT EXTERN EQ ENUM DOUBLE CONST COMMA COLON CHAR AUTO ATTRIBUTE ALIGNAS ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production declarator_identifier -> PRE_NAME low_prec TYPEDEF_NAME

State 182:
## Known stack suffix:
## LPAREN
## LR(1) items:
direct_declarator -> LPAREN . save_context declarator RPAREN [ VOLATILE VOID UNSIGNED UNION UNDERSCORE_BOOL STRUCT STATIC SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER PRE_NAME PACKED LPAREN LONG LBRACK LBRACE INT INLINE FLOAT EXTERN EQ ENUM DOUBLE CONST COMMA COLON CHAR AUTO ATTRIBUTE ALIGNAS ]
## Transitions:
-- On save_context shift to state 183
## Default reduction:
-- After reading the next token, reduce production save_context ->

State 183:
## Known stack suffix:
## LPAREN save_context
## LR(1) items:
direct_declarator -> LPAREN save_context . declarator RPAREN [ VOLATILE VOID UNSIGNED UNION UNDERSCORE_BOOL STRUCT STATIC SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER PRE_NAME PACKED LPAREN LONG LBRACK LBRACE INT INLINE FLOAT EXTERN EQ ENUM DOUBLE CONST COMMA COLON CHAR AUTO ATTRIBUTE ALIGNAS ]
## Transitions:
-- On PRE_NAME shift to state 178
-- On LPAREN shift to state 182
-- On list(pointer1) shift to state 184
-- On direct_declarator shift to state 250
-- On declarator_noattrend shift to state 255
-- On declarator_identifier shift to state 249
-- On declarator shift to state 259
## Reductions:
-- On STAR reduce production list(pointer1) ->

State 184:
## Known stack suffix:
## list(pointer1)
## LR(1) items:
declarator_noattrend -> list(pointer1) . STAR option(type_qualifier_list) direct_declarator [ VOLATILE VOID UNSIGNED UNION UNDERSCORE_BOOL STRUCT STATIC SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER PRE_NAME PACKED LONG LBRACE INT INLINE FLOAT EXTERN EQ ENUM DOUBLE CONST COMMA COLON CHAR AUTO ATTRIBUTE ALIGNAS ]
list(pointer1) -> list(pointer1) . STAR option(type_qualifier_list) [ STAR ]
## Transitions:
-- On STAR shift to state 185
## Reductions:

State 185:
## Known stack suffix:
## list(pointer1) STAR
## LR(1) items:
declarator_noattrend -> list(pointer1) STAR . option(type_qualifier_list) direct_declarator [ VOLATILE VOID UNSIGNED UNION UNDERSCORE_BOOL STRUCT STATIC SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER PRE_NAME PACKED LONG LBRACE INT INLINE FLOAT EXTERN EQ ENUM DOUBLE CONST COMMA COLON CHAR AUTO ATTRIBUTE ALIGNAS ]
list(pointer1) -> list(pointer1) STAR . option(type_qualifier_list) [ STAR ]
## Transitions:
-- On type_qualifier_list shift to state 146
-- On option(type_qualifier_list) shift to state 186
## Default reduction:
-- After reading the next token, reduce production option(type_qualifier_list) ->

State 186:
## Known stack suffix:
## list(pointer1) STAR option(type_qualifier_list)
## LR(1) items:
declarator_noattrend -> list(pointer1) STAR option(type_qualifier_list) . direct_declarator [ VOLATILE VOID UNSIGNED UNION UNDERSCORE_BOOL STRUCT STATIC SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER PRE_NAME PACKED LONG LBRACE INT INLINE FLOAT EXTERN EQ ENUM DOUBLE CONST COMMA COLON CHAR AUTO ATTRIBUTE ALIGNAS ]
list(pointer1) -> list(pointer1) STAR option(type_qualifier_list) . [ STAR ]
type_qualifier_list -> option(type_qualifier_list) . type_qualifier_noattr [ VOLATILE STAR RESTRICT PRE_NAME PACKED LPAREN CONST ATTRIBUTE ALIGNAS ]
type_qualifier_list -> option(type_qualifier_list) . attribute_specifier [ VOLATILE STAR RESTRICT PRE_NAME PACKED LPAREN CONST ATTRIBUTE ALIGNAS ]
## Transitions:
-- On VOLATILE shift to state 1
-- On RESTRICT shift to state 12
-- On PRE_NAME shift to state 178
-- On PACKED shift to state 16
-- On LPAREN shift to state 182
-- On CONST shift to state 148
-- On ATTRIBUTE shift to state 35
-- On ALIGNAS shift to state 149
-- On type_qualifier_noattr shift to state 164
-- On direct_declarator shift to state 187
-- On declarator_identifier shift to state 249
-- On attribute_specifier shift to state 165
## Reductions:
-- On STAR reduce production list(pointer1) -> list(pointer1) STAR option(type_qualifier_list)

State 187:
## Known stack suffix:
## list(pointer1) STAR option(type_qualifier_list) direct_declarator
## LR(1) items:
declarator_noattrend -> list(pointer1) STAR option(type_qualifier_list) direct_declarator . [ VOLATILE VOID UNSIGNED UNION UNDERSCORE_BOOL STRUCT STATIC SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER PRE_NAME PACKED LONG LBRACE INT INLINE FLOAT EXTERN EQ ENUM DOUBLE CONST COMMA COLON CHAR AUTO ATTRIBUTE ALIGNAS ]
direct_declarator -> direct_declarator . LBRACK option(type_qualifier_list) optional(assignment_expression,RBRACK) [ VOLATILE VOID UNSIGNED UNION UNDERSCORE_BOOL STRUCT STATIC SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER PRE_NAME PACKED LPAREN LONG LBRACK LBRACE INT INLINE FLOAT EXTERN EQ ENUM DOUBLE CONST COMMA COLON CHAR AUTO ATTRIBUTE ALIGNAS ]
direct_declarator -> direct_declarator . LPAREN context_parameter_type_list RPAREN [ VOLATILE VOID UNSIGNED UNION UNDERSCORE_BOOL STRUCT STATIC SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER PRE_NAME PACKED LPAREN LONG LBRACK LBRACE INT INLINE FLOAT EXTERN EQ ENUM DOUBLE CONST COMMA COLON CHAR AUTO ATTRIBUTE ALIGNAS ]
direct_declarator -> direct_declarator . LPAREN save_context option(identifier_list) RPAREN [ VOLATILE VOID UNSIGNED UNION UNDERSCORE_BOOL STRUCT STATIC SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER PRE_NAME PACKED LPAREN LONG LBRACK LBRACE INT INLINE FLOAT EXTERN EQ ENUM DOUBLE CONST COMMA COLON CHAR AUTO ATTRIBUTE ALIGNAS ]
## Transitions:
-- On LPAREN shift to state 188
-- On LBRACK shift to state 251
## Reductions:
-- On XOR_ASSIGN reduce production declarator_noattrend -> list(pointer1) STAR option(type_qualifier_list) direct_declarator
-- On WHILE reduce production declarator_noattrend -> list(pointer1) STAR option(type_qualifier_list) direct_declarator
-- On VOLATILE reduce production declarator_noattrend -> list(pointer1) STAR option(type_qualifier_list) direct_declarator
-- On VOID reduce production declarator_noattrend -> list(pointer1) STAR option(type_qualifier_list) direct_declarator
-- On VAR_NAME reduce production declarator_noattrend -> list(pointer1) STAR option(type_qualifier_list) direct_declarator
-- On UNSIGNED reduce production declarator_noattrend -> list(pointer1) STAR option(type_qualifier_list) direct_declarator
-- On UNION reduce production declarator_noattrend -> list(pointer1) STAR option(type_qualifier_list) direct_declarator
-- On UNDERSCORE_BOOL reduce production declarator_noattrend -> list(pointer1) STAR option(type_qualifier_list) direct_declarator
-- On TYPEDEF_NAME reduce production declarator_noattrend -> list(pointer1) STAR option(type_qualifier_list) direct_declarator
-- On TYPEDEF reduce production declarator_noattrend -> list(pointer1) STAR option(type_qualifier_list) direct_declarator
-- On TILDE reduce production declarator_noattrend -> list(pointer1) STAR option(type_qualifier_list) direct_declarator
-- On SWITCH reduce production declarator_noattrend -> list(pointer1) STAR option(type_qualifier_list) direct_declarator
-- On SUB_ASSIGN reduce production declarator_noattrend -> list(pointer1) STAR option(type_qualifier_list) direct_declarator
-- On STRUCT reduce production declarator_noattrend -> list(pointer1) STAR option(type_qualifier_list) direct_declarator
-- On STRING_LITERAL reduce production declarator_noattrend -> list(pointer1) STAR option(type_qualifier_list) direct_declarator
-- On STATIC reduce production declarator_noattrend -> list(pointer1) STAR option(type_qualifier_list) direct_declarator
-- On STAR reduce production declarator_noattrend -> list(pointer1) STAR option(type_qualifier_list) direct_declarator
-- On SLASH reduce production declarator_noattrend -> list(pointer1) STAR option(type_qualifier_list) direct_declarator
-- On SIZEOF reduce production declarator_noattrend -> list(pointer1) STAR option(type_qualifier_list) direct_declarator
-- On SIGNED reduce production declarator_noattrend -> list(pointer1) STAR option(type_qualifier_list) direct_declarator
-- On SHORT reduce production declarator_noattrend -> list(pointer1) STAR option(type_qualifier_list) direct_declarator
-- On SEMICOLON reduce production declarator_noattrend -> list(pointer1) STAR option(type_qualifier_list) direct_declarator
-- On RPAREN reduce production declarator_noattrend -> list(pointer1) STAR option(type_qualifier_list) direct_declarator
-- On RIGHT_ASSIGN reduce production declarator_noattrend -> list(pointer1) STAR option(type_qualifier_list) direct_declarator
-- On RIGHT reduce production declarator_noattrend -> list(pointer1) STAR option(type_qualifier_list) direct_declarator
-- On RETURN reduce production declarator_noattrend -> list(pointer1) STAR option(type_qualifier_list) direct_declarator
-- On RESTRICT reduce production declarator_noattrend -> list(pointer1) STAR option(type_qualifier_list) direct_declarator
-- On REGISTER reduce production declarator_noattrend -> list(pointer1) STAR option(type_qualifier_list) direct_declarator
-- On RBRACK reduce production declarator_noattrend -> list(pointer1) STAR option(type_qualifier_list) direct_declarator
-- On RBRACE reduce production declarator_noattrend -> list(pointer1) STAR option(type_qualifier_list) direct_declarator
-- On QUESTION reduce production declarator_noattrend -> list(pointer1) STAR option(type_qualifier_list) direct_declarator
-- On PTR reduce production declarator_noattrend -> list(pointer1) STAR option(type_qualifier_list) direct_declarator
-- On PRE_NAME reduce production declarator_noattrend -> list(pointer1) STAR option(type_qualifier_list) direct_declarator
-- On PRAGMA reduce production declarator_noattrend -> list(pointer1) STAR option(type_qualifier_list) direct_declarator
-- On PLUS reduce production declarator_noattrend -> list(pointer1) STAR option(type_qualifier_list) direct_declarator
-- On PERCENT reduce production declarator_noattrend -> list(pointer1) STAR option(type_qualifier_list) direct_declarator
-- On PACKED reduce production declarator_noattrend -> list(pointer1) STAR option(type_qualifier_list) direct_declarator
-- On OR_ASSIGN reduce production declarator_noattrend -> list(pointer1) STAR option(type_qualifier_list) direct_declarator
-- On NEQ reduce production declarator_noattrend -> list(pointer1) STAR option(type_qualifier_list) direct_declarator
-- On MUL_ASSIGN reduce production declarator_noattrend -> list(pointer1) STAR option(type_qualifier_list) direct_declarator
-- On MOD_ASSIGN reduce production declarator_noattrend -> list(pointer1) STAR option(type_qualifier_list) direct_declarator
-- On MINUS reduce production declarator_noattrend -> list(pointer1) STAR option(type_qualifier_list) direct_declarator
-- On LT reduce production declarator_noattrend -> list(pointer1) STAR option(type_qualifier_list) direct_declarator
-- On LONG reduce production declarator_noattrend -> list(pointer1) STAR option(type_qualifier_list) direct_declarator
-- On LEQ reduce production declarator_noattrend -> list(pointer1) STAR option(type_qualifier_list) direct_declarator
-- On LEFT_ASSIGN reduce production declarator_noattrend -> list(pointer1) STAR option(type_qualifier_list) direct_declarator
-- On LEFT reduce production declarator_noattrend -> list(pointer1) STAR option(type_qualifier_list) direct_declarator
-- On LBRACE reduce production declarator_noattrend -> list(pointer1) STAR option(type_qualifier_list) direct_declarator
-- On INT reduce production declarator_noattrend -> list(pointer1) STAR option(type_qualifier_list) direct_declarator
-- On INLINE reduce production declarator_noattrend -> list(pointer1) STAR option(type_qualifier_list) direct_declarator
-- On INC reduce production declarator_noattrend -> list(pointer1) STAR option(type_qualifier_list) direct_declarator
-- On IF reduce production declarator_noattrend -> list(pointer1) STAR option(type_qualifier_list) direct_declarator
-- On HAT reduce production declarator_noattrend -> list(pointer1) STAR option(type_qualifier_list) direct_declarator
-- On GT reduce production declarator_noattrend -> list(pointer1) STAR option(type_qualifier_list) direct_declarator
-- On GOTO reduce production declarator_noattrend -> list(pointer1) STAR option(type_qualifier_list) direct_declarator
-- On GEQ reduce production declarator_noattrend -> list(pointer1) STAR option(type_qualifier_list) direct_declarator
-- On FOR reduce production declarator_noattrend -> list(pointer1) STAR option(type_qualifier_list) direct_declarator
-- On FLOAT reduce production declarator_noattrend -> list(pointer1) STAR option(type_qualifier_list) direct_declarator
-- On EXTERN reduce production declarator_noattrend -> list(pointer1) STAR option(type_qualifier_list) direct_declarator
-- On EQEQ reduce production declarator_noattrend -> list(pointer1) STAR option(type_qualifier_list) direct_declarator
-- On EQ reduce production declarator_noattrend -> list(pointer1) STAR option(type_qualifier_list) direct_declarator
-- On EOF reduce production declarator_noattrend -> list(pointer1) STAR option(type_qualifier_list) direct_declarator
-- On ENUM reduce production declarator_noattrend -> list(pointer1) STAR option(type_qualifier_list) direct_declarator
-- On ELSE reduce production declarator_noattrend -> list(pointer1) STAR option(type_qualifier_list) direct_declarator
-- On ELLIPSIS reduce production declarator_noattrend -> list(pointer1) STAR option(type_qualifier_list) direct_declarator
-- On DOUBLE reduce production declarator_noattrend -> list(pointer1) STAR option(type_qualifier_list) direct_declarator
-- On DOT reduce production declarator_noattrend -> list(pointer1) STAR option(type_qualifier_list) direct_declarator
-- On DO reduce production declarator_noattrend -> list(pointer1) STAR option(type_qualifier_list) direct_declarator
-- On DIV_ASSIGN reduce production declarator_noattrend -> list(pointer1) STAR option(type_qualifier_list) direct_declarator
-- On DEFAULT reduce production declarator_noattrend -> list(pointer1) STAR option(type_qualifier_list) direct_declarator
-- On DEC reduce production declarator_noattrend -> list(pointer1) STAR option(type_qualifier_list) direct_declarator
-- On CONTINUE reduce production declarator_noattrend -> list(pointer1) STAR option(type_qualifier_list) direct_declarator
-- On CONSTANT reduce production declarator_noattrend -> list(pointer1) STAR option(type_qualifier_list) direct_declarator
-- On CONST reduce production declarator_noattrend -> list(pointer1) STAR option(type_qualifier_list) direct_declarator
-- On COMMA reduce production declarator_noattrend -> list(pointer1) STAR option(type_qualifier_list) direct_declarator
-- On COLON reduce production declarator_noattrend -> list(pointer1) STAR option(type_qualifier_list) direct_declarator
-- On CHAR reduce production declarator_noattrend -> list(pointer1) STAR option(type_qualifier_list) direct_declarator
-- On CASE reduce production declarator_noattrend -> list(pointer1) STAR option(type_qualifier_list) direct_declarator
-- On BUILTIN_VA_ARG reduce production declarator_noattrend -> list(pointer1) STAR option(type_qualifier_list) direct_declarator
-- On BREAK reduce production declarator_noattrend -> list(pointer1) STAR option(type_qualifier_list) direct_declarator
-- On BARBAR reduce production declarator_noattrend -> list(pointer1) STAR option(type_qualifier_list) direct_declarator
-- On BAR reduce production declarator_noattrend -> list(pointer1) STAR option(type_qualifier_list) direct_declarator
-- On BANG reduce production declarator_noattrend -> list(pointer1) STAR option(type_qualifier_list) direct_declarator
-- On AUTO reduce production declarator_noattrend -> list(pointer1) STAR option(type_qualifier_list) direct_declarator
-- On ATTRIBUTE reduce production declarator_noattrend -> list(pointer1) STAR option(type_qualifier_list) direct_declarator
-- On ASM reduce production declarator_noattrend -> list(pointer1) STAR option(type_qualifier_list) direct_declarator
-- On AND_ASSIGN reduce production declarator_noattrend -> list(pointer1) STAR option(type_qualifier_list) direct_declarator
-- On ANDAND reduce production declarator_noattrend -> list(pointer1) STAR option(type_qualifier_list) direct_declarator
-- On AND reduce production declarator_noattrend -> list(pointer1) STAR option(type_qualifier_list) direct_declarator
-- On ALIGNOF reduce production declarator_noattrend -> list(pointer1) STAR option(type_qualifier_list) direct_declarator
-- On ALIGNAS reduce production declarator_noattrend -> list(pointer1) STAR option(type_qualifier_list) direct_declarator
-- On ADD_ASSIGN reduce production declarator_noattrend -> list(pointer1) STAR option(type_qualifier_list) direct_declarator

State 188:
## Known stack suffix:
## direct_declarator LPAREN
## LR(1) items:
direct_declarator -> direct_declarator LPAREN . context_parameter_type_list RPAREN [ VOLATILE VOID UNSIGNED UNION UNDERSCORE_BOOL STRUCT STATIC SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER PRE_NAME PACKED LPAREN LONG LBRACK LBRACE INT INLINE FLOAT EXTERN EQ ENUM DOUBLE CONST COMMA COLON CHAR AUTO ATTRIBUTE ALIGNAS ]
direct_declarator -> direct_declarator LPAREN . save_context option(identifier_list) RPAREN [ VOLATILE VOID UNSIGNED UNION UNDERSCORE_BOOL STRUCT STATIC SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER PRE_NAME PACKED LPAREN LONG LBRACK LBRACE INT INLINE FLOAT EXTERN EQ ENUM DOUBLE CONST COMMA COLON CHAR AUTO ATTRIBUTE ALIGNAS ]
## Transitions:
-- On save_context shift to state 189
-- On context_parameter_type_list shift to state 280
## Default reduction:
-- After reading the next token, reduce production save_context ->

State 189:
## Known stack suffix:
## direct_declarator LPAREN save_context
## LR(1) items:
context_parameter_type_list -> save_context . parameter_type_list save_context [ RPAREN ]
direct_declarator -> direct_declarator LPAREN save_context . option(identifier_list) RPAREN [ VOLATILE VOID UNSIGNED UNION UNDERSCORE_BOOL STRUCT STATIC SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER PRE_NAME PACKED LPAREN LONG LBRACK LBRACE INT INLINE FLOAT EXTERN EQ ENUM DOUBLE CONST COMMA COLON CHAR AUTO ATTRIBUTE ALIGNAS ]
## Transitions:
-- On VOLATILE shift to state 1
-- On VOID shift to state 2
-- On UNSIGNED shift to state 3
-- On UNION shift to state 4
-- On UNDERSCORE_BOOL shift to state 5
-- On STRUCT shift to state 8
-- On STATIC shift to state 9
-- On SIGNED shift to state 10
-- On SHORT shift to state 11
-- On RESTRICT shift to state 12
-- On REGISTER shift to state 13
-- On PRE_NAME shift to state 190
-- On PACKED shift to state 16
-- On LONG shift to state 29
-- On INT shift to state 30
-- On INLINE shift to state 192
-- On FLOAT shift to state 33
-- On EXTERN shift to state 193
-- On ENUM shift to state 34
-- On DOUBLE shift to state 54
-- On CONST shift to state 148
-- On CHAR shift to state 55
-- On AUTO shift to state 194
-- On ATTRIBUTE shift to state 35
-- On ALIGNAS shift to state 149
-- On typedef_name shift to state 195
-- On type_specifier_no_typedef_name shift to state 201
-- On type_qualifier_noattr shift to state 209
-- On struct_or_union_specifier shift to state 155
-- On struct_or_union shift to state 156
-- On storage_class_specifier_no_typedef shift to state 210
-- On rlist(declaration_specifier_no_type) shift to state 217
-- On parameter_type_list shift to state 222
-- On parameter_list shift to state 224
-- On parameter_declaration shift to state 232
-- On option(identifier_list) shift to state 274
-- On identifier_list shift to state 276
-- On function_specifier shift to state 212
-- On enum_specifier shift to state 169
-- On declaration_specifiers(parameter_declaration) shift to state 228
-- On attribute_specifier shift to state 214
## Reductions:
-- On RPAREN reduce production option(identifier_list) ->

State 190:
## Known stack suffix:
## PRE_NAME
## LR(1) items:
identifier_list -> PRE_NAME . VAR_NAME [ RPAREN COMMA ]
typedef_name -> PRE_NAME . TYPEDEF_NAME [ VOLATILE STATIC STAR RPAREN RESTRICT REGISTER PRE_NAME PACKED LPAREN LBRACK INLINE EXTERN CONST COMMA AUTO ATTRIBUTE ALIGNAS ]
## Transitions:
-- On VAR_NAME shift to state 191
-- On TYPEDEF_NAME shift to state 15
## Reductions:

State 191:
## Known stack suffix:
## PRE_NAME VAR_NAME
## LR(1) items:
identifier_list -> PRE_NAME VAR_NAME . [ RPAREN COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production identifier_list -> PRE_NAME VAR_NAME

State 192:
## Known stack suffix:
## INLINE
## LR(1) items:
function_specifier -> INLINE . [ VOLATILE VOID UNSIGNED UNION UNDERSCORE_BOOL TYPEDEF STRUCT STATIC STAR SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER PRE_NAME PACKED LPAREN LONG LBRACK INT INLINE FLOAT EXTERN ENUM DOUBLE CONST COMMA CHAR AUTO ATTRIBUTE ALIGNAS ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production function_specifier -> INLINE

State 193:
## Known stack suffix:
## EXTERN
## LR(1) items:
storage_class_specifier_no_typedef -> EXTERN . [ VOLATILE VOID UNSIGNED UNION UNDERSCORE_BOOL TYPEDEF STRUCT STATIC STAR SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER PRE_NAME PACKED LPAREN LONG LBRACK INT INLINE FLOAT EXTERN ENUM DOUBLE CONST COMMA CHAR AUTO ATTRIBUTE ALIGNAS ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production storage_class_specifier_no_typedef -> EXTERN

State 194:
## Known stack suffix:
## AUTO
## LR(1) items:
storage_class_specifier_no_typedef -> AUTO . [ VOLATILE VOID UNSIGNED UNION UNDERSCORE_BOOL TYPEDEF STRUCT STATIC STAR SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER PRE_NAME PACKED LPAREN LONG LBRACK INT INLINE FLOAT EXTERN ENUM DOUBLE CONST COMMA CHAR AUTO ATTRIBUTE ALIGNAS ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production storage_class_specifier_no_typedef -> AUTO

State 195:
## Known stack suffix:
## typedef_name
## LR(1) items:
declaration_specifiers(parameter_declaration) -> typedef_name . list(declaration_specifier_no_type) [ STAR RPAREN PRE_NAME LPAREN LBRACK COMMA ]
## Transitions:
-- On list(declaration_specifier_no_type) shift to state 196
## Default reduction:
-- After reading the next token, reduce production list(declaration_specifier_no_type) ->

State 196:
## Known stack suffix:
## typedef_name list(declaration_specifier_no_type)
## LR(1) items:
declaration_specifiers(parameter_declaration) -> typedef_name list(declaration_specifier_no_type) . [ STAR RPAREN PRE_NAME LPAREN LBRACK COMMA ]
list(declaration_specifier_no_type) -> list(declaration_specifier_no_type) . storage_class_specifier_no_typedef [ VOLATILE STATIC STAR RPAREN RESTRICT REGISTER PRE_NAME PACKED LPAREN LBRACK INLINE EXTERN CONST COMMA AUTO ATTRIBUTE ALIGNAS ]
list(declaration_specifier_no_type) -> list(declaration_specifier_no_type) . type_qualifier_noattr [ VOLATILE STATIC STAR RPAREN RESTRICT REGISTER PRE_NAME PACKED LPAREN LBRACK INLINE EXTERN CONST COMMA AUTO ATTRIBUTE ALIGNAS ]
list(declaration_specifier_no_type) -> list(declaration_specifier_no_type) . function_specifier [ VOLATILE STATIC STAR RPAREN RESTRICT REGISTER PRE_NAME PACKED LPAREN LBRACK INLINE EXTERN CONST COMMA AUTO ATTRIBUTE ALIGNAS ]
list(declaration_specifier_no_type) -> list(declaration_specifier_no_type) . attribute_specifier [ VOLATILE STATIC STAR RPAREN RESTRICT REGISTER PRE_NAME PACKED LPAREN LBRACK INLINE EXTERN CONST COMMA AUTO ATTRIBUTE ALIGNAS ]
## Transitions:
-- On VOLATILE shift to state 1
-- On STATIC shift to state 9
-- On RESTRICT shift to state 12
-- On REGISTER shift to state 13
-- On PACKED shift to state 16
-- On INLINE shift to state 192
-- On EXTERN shift to state 193
-- On CONST shift to state 148
-- On AUTO shift to state 194
-- On ATTRIBUTE shift to state 35
-- On ALIGNAS shift to state 149
-- On type_qualifier_noattr shift to state 197
-- On storage_class_specifier_no_typedef shift to state 198
-- On function_specifier shift to state 199
-- On attribute_specifier shift to state 200
## Reductions:
-- On STAR reduce production declaration_specifiers(parameter_declaration) -> typedef_name list(declaration_specifier_no_type)
-- On RPAREN reduce production declaration_specifiers(parameter_declaration) -> typedef_name list(declaration_specifier_no_type)
-- On PRE_NAME reduce production declaration_specifiers(parameter_declaration) -> typedef_name list(declaration_specifier_no_type)
-- On LPAREN reduce production declaration_specifiers(parameter_declaration) -> typedef_name list(declaration_specifier_no_type)
-- On LBRACK reduce production declaration_specifiers(parameter_declaration) -> typedef_name list(declaration_specifier_no_type)
-- On COMMA reduce production declaration_specifiers(parameter_declaration) -> typedef_name list(declaration_specifier_no_type)

State 197:
## Known stack suffix:
## list(declaration_specifier_no_type) type_qualifier_noattr
## LR(1) items:
list(declaration_specifier_no_type) -> list(declaration_specifier_no_type) type_qualifier_noattr . [ VOLATILE VOID UNSIGNED UNION UNDERSCORE_BOOL TYPEDEF STRUCT STATIC STAR SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER PRE_NAME PACKED LPAREN LONG LBRACK INT INLINE FLOAT EXTERN ENUM DOUBLE CONST COMMA CHAR AUTO ATTRIBUTE ALIGNAS ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production list(declaration_specifier_no_type) -> list(declaration_specifier_no_type) type_qualifier_noattr

State 198:
## Known stack suffix:
## list(declaration_specifier_no_type) storage_class_specifier_no_typedef
## LR(1) items:
list(declaration_specifier_no_type) -> list(declaration_specifier_no_type) storage_class_specifier_no_typedef . [ VOLATILE VOID UNSIGNED UNION UNDERSCORE_BOOL TYPEDEF STRUCT STATIC STAR SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER PRE_NAME PACKED LPAREN LONG LBRACK INT INLINE FLOAT EXTERN ENUM DOUBLE CONST COMMA CHAR AUTO ATTRIBUTE ALIGNAS ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production list(declaration_specifier_no_type) -> list(declaration_specifier_no_type) storage_class_specifier_no_typedef

State 199:
## Known stack suffix:
## list(declaration_specifier_no_type) function_specifier
## LR(1) items:
list(declaration_specifier_no_type) -> list(declaration_specifier_no_type) function_specifier . [ VOLATILE VOID UNSIGNED UNION UNDERSCORE_BOOL TYPEDEF STRUCT STATIC STAR SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER PRE_NAME PACKED LPAREN LONG LBRACK INT INLINE FLOAT EXTERN ENUM DOUBLE CONST COMMA CHAR AUTO ATTRIBUTE ALIGNAS ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production list(declaration_specifier_no_type) -> list(declaration_specifier_no_type) function_specifier

State 200:
## Known stack suffix:
## list(declaration_specifier_no_type) attribute_specifier
## LR(1) items:
list(declaration_specifier_no_type) -> list(declaration_specifier_no_type) attribute_specifier . [ VOLATILE VOID UNSIGNED UNION UNDERSCORE_BOOL TYPEDEF STRUCT STATIC STAR SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER PRE_NAME PACKED LPAREN LONG LBRACK INT INLINE FLOAT EXTERN ENUM DOUBLE CONST COMMA CHAR AUTO ATTRIBUTE ALIGNAS ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production list(declaration_specifier_no_type) -> list(declaration_specifier_no_type) attribute_specifier

State 201:
## Known stack suffix:
## type_specifier_no_typedef_name
## LR(1) items:
declaration_specifiers(parameter_declaration) -> type_specifier_no_typedef_name . list(declaration_specifier_no_typedef_name) [ STAR RPAREN PRE_NAME LPAREN LBRACK COMMA ]
## Transitions:
-- On list(declaration_specifier_no_typedef_name) shift to state 202
## Default reduction:
-- After reading the next token, reduce production list(declaration_specifier_no_typedef_name) ->

State 202:
## Known stack suffix:
## type_specifier_no_typedef_name list(declaration_specifier_no_typedef_name)
## LR(1) items:
declaration_specifiers(parameter_declaration) -> type_specifier_no_typedef_name list(declaration_specifier_no_typedef_name) . [ STAR RPAREN PRE_NAME LPAREN LBRACK COMMA ]
list(declaration_specifier_no_typedef_name) -> list(declaration_specifier_no_typedef_name) . declaration_specifier_no_typedef_name [ VOLATILE VOID UNSIGNED UNION UNDERSCORE_BOOL STRUCT STATIC STAR SIGNED SHORT RPAREN RESTRICT REGISTER PRE_NAME PACKED LPAREN LONG LBRACK INT INLINE FLOAT EXTERN ENUM DOUBLE CONST COMMA CHAR AUTO ATTRIBUTE ALIGNAS ]
## Transitions:
-- On VOLATILE shift to state 1
-- On VOID shift to state 2
-- On UNSIGNED shift to state 3
-- On UNION shift to state 4
-- On UNDERSCORE_BOOL shift to state 5
-- On STRUCT shift to state 8
-- On STATIC shift to state 9
-- On SIGNED shift to state 10
-- On SHORT shift to state 11
-- On RESTRICT shift to state 12
-- On REGISTER shift to state 13
-- On PACKED shift to state 16
-- On LONG shift to state 29
-- On INT shift to state 30
-- On INLINE shift to state 192
-- On FLOAT shift to state 33
-- On EXTERN shift to state 193
-- On ENUM shift to state 34
-- On DOUBLE shift to state 54
-- On CONST shift to state 148
-- On CHAR shift to state 55
-- On AUTO shift to state 194
-- On ATTRIBUTE shift to state 35
-- On ALIGNAS shift to state 149
-- On type_specifier_no_typedef_name shift to state 203
-- On type_qualifier_noattr shift to state 204
-- On struct_or_union_specifier shift to state 155
-- On struct_or_union shift to state 156
-- On storage_class_specifier_no_typedef shift to state 205
-- On function_specifier shift to state 206
-- On enum_specifier shift to state 169
-- On declaration_specifier_no_typedef_name shift to state 207
-- On attribute_specifier shift to state 208
## Reductions:
-- On STAR reduce production declaration_specifiers(parameter_declaration) -> type_specifier_no_typedef_name list(declaration_specifier_no_typedef_name)
-- On RPAREN reduce production declaration_specifiers(parameter_declaration) -> type_specifier_no_typedef_name list(declaration_specifier_no_typedef_name)
-- On PRE_NAME reduce production declaration_specifiers(parameter_declaration) -> type_specifier_no_typedef_name list(declaration_specifier_no_typedef_name)
-- On LPAREN reduce production declaration_specifiers(parameter_declaration) -> type_specifier_no_typedef_name list(declaration_specifier_no_typedef_name)
-- On LBRACK reduce production declaration_specifiers(parameter_declaration) -> type_specifier_no_typedef_name list(declaration_specifier_no_typedef_name)
-- On COMMA reduce production declaration_specifiers(parameter_declaration) -> type_specifier_no_typedef_name list(declaration_specifier_no_typedef_name)

State 203:
## Known stack suffix:
## type_specifier_no_typedef_name
## LR(1) items:
declaration_specifier_no_typedef_name -> type_specifier_no_typedef_name . [ VOLATILE VOID UNSIGNED UNION UNDERSCORE_BOOL TYPEDEF STRUCT STATIC STAR SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER PRE_NAME PACKED LPAREN LONG LBRACK INT INLINE FLOAT EXTERN ENUM DOUBLE CONST COMMA CHAR AUTO ATTRIBUTE ALIGNAS ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production declaration_specifier_no_typedef_name -> type_specifier_no_typedef_name

State 204:
## Known stack suffix:
## type_qualifier_noattr
## LR(1) items:
declaration_specifier_no_typedef_name -> type_qualifier_noattr . [ VOLATILE VOID UNSIGNED UNION UNDERSCORE_BOOL TYPEDEF STRUCT STATIC STAR SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER PRE_NAME PACKED LPAREN LONG LBRACK INT INLINE FLOAT EXTERN ENUM DOUBLE CONST COMMA CHAR AUTO ATTRIBUTE ALIGNAS ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production declaration_specifier_no_typedef_name -> type_qualifier_noattr

State 205:
## Known stack suffix:
## storage_class_specifier_no_typedef
## LR(1) items:
declaration_specifier_no_typedef_name -> storage_class_specifier_no_typedef . [ VOLATILE VOID UNSIGNED UNION UNDERSCORE_BOOL TYPEDEF STRUCT STATIC STAR SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER PRE_NAME PACKED LPAREN LONG LBRACK INT INLINE FLOAT EXTERN ENUM DOUBLE CONST COMMA CHAR AUTO ATTRIBUTE ALIGNAS ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production declaration_specifier_no_typedef_name -> storage_class_specifier_no_typedef

State 206:
## Known stack suffix:
## function_specifier
## LR(1) items:
declaration_specifier_no_typedef_name -> function_specifier . [ VOLATILE VOID UNSIGNED UNION UNDERSCORE_BOOL TYPEDEF STRUCT STATIC STAR SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER PRE_NAME PACKED LPAREN LONG LBRACK INT INLINE FLOAT EXTERN ENUM DOUBLE CONST COMMA CHAR AUTO ATTRIBUTE ALIGNAS ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production declaration_specifier_no_typedef_name -> function_specifier

State 207:
## Known stack suffix:
## list(declaration_specifier_no_typedef_name) declaration_specifier_no_typedef_name
## LR(1) items:
list(declaration_specifier_no_typedef_name) -> list(declaration_specifier_no_typedef_name) declaration_specifier_no_typedef_name . [ VOLATILE VOID UNSIGNED UNION UNDERSCORE_BOOL TYPEDEF STRUCT STATIC STAR SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER PRE_NAME PACKED LPAREN LONG LBRACK INT INLINE FLOAT EXTERN ENUM DOUBLE CONST COMMA CHAR AUTO ATTRIBUTE ALIGNAS ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production list(declaration_specifier_no_typedef_name) -> list(declaration_specifier_no_typedef_name) declaration_specifier_no_typedef_name

State 208:
## Known stack suffix:
## attribute_specifier
## LR(1) items:
declaration_specifier_no_typedef_name -> attribute_specifier . [ VOLATILE VOID UNSIGNED UNION UNDERSCORE_BOOL TYPEDEF STRUCT STATIC STAR SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER PRE_NAME PACKED LPAREN LONG LBRACK INT INLINE FLOAT EXTERN ENUM DOUBLE CONST COMMA CHAR AUTO ATTRIBUTE ALIGNAS ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production declaration_specifier_no_typedef_name -> attribute_specifier

State 209:
## Known stack suffix:
## type_qualifier_noattr
## LR(1) items:
rlist(declaration_specifier_no_type) -> type_qualifier_noattr . [ VOID UNSIGNED UNION UNDERSCORE_BOOL TYPEDEF STRUCT SIGNED SHORT PRE_NAME LONG INT FLOAT ENUM DOUBLE CHAR ]
rlist(declaration_specifier_no_type) -> type_qualifier_noattr . rlist(declaration_specifier_no_type) [ VOID UNSIGNED UNION UNDERSCORE_BOOL TYPEDEF STRUCT SIGNED SHORT PRE_NAME LONG INT FLOAT ENUM DOUBLE CHAR ]
## Transitions:
-- On VOLATILE shift to state 1
-- On STATIC shift to state 9
-- On RESTRICT shift to state 12
-- On REGISTER shift to state 13
-- On PACKED shift to state 16
-- On INLINE shift to state 192
-- On EXTERN shift to state 193
-- On CONST shift to state 148
-- On AUTO shift to state 194
-- On ATTRIBUTE shift to state 35
-- On ALIGNAS shift to state 149
-- On type_qualifier_noattr shift to state 209
-- On storage_class_specifier_no_typedef shift to state 210
-- On rlist(declaration_specifier_no_type) shift to state 216
-- On function_specifier shift to state 212
-- On attribute_specifier shift to state 214
## Reductions:
-- On XOR_ASSIGN reduce production rlist(declaration_specifier_no_type) -> type_qualifier_noattr
-- On WHILE reduce production rlist(declaration_specifier_no_type) -> type_qualifier_noattr
-- On VOID reduce production rlist(declaration_specifier_no_type) -> type_qualifier_noattr
-- On VAR_NAME reduce production rlist(declaration_specifier_no_type) -> type_qualifier_noattr
-- On UNSIGNED reduce production rlist(declaration_specifier_no_type) -> type_qualifier_noattr
-- On UNION reduce production rlist(declaration_specifier_no_type) -> type_qualifier_noattr
-- On UNDERSCORE_BOOL reduce production rlist(declaration_specifier_no_type) -> type_qualifier_noattr
-- On TYPEDEF_NAME reduce production rlist(declaration_specifier_no_type) -> type_qualifier_noattr
-- On TYPEDEF reduce production rlist(declaration_specifier_no_type) -> type_qualifier_noattr
-- On TILDE reduce production rlist(declaration_specifier_no_type) -> type_qualifier_noattr
-- On SWITCH reduce production rlist(declaration_specifier_no_type) -> type_qualifier_noattr
-- On SUB_ASSIGN reduce production rlist(declaration_specifier_no_type) -> type_qualifier_noattr
-- On STRUCT reduce production rlist(declaration_specifier_no_type) -> type_qualifier_noattr
-- On STRING_LITERAL reduce production rlist(declaration_specifier_no_type) -> type_qualifier_noattr
-- On STAR reduce production rlist(declaration_specifier_no_type) -> type_qualifier_noattr
-- On SLASH reduce production rlist(declaration_specifier_no_type) -> type_qualifier_noattr
-- On SIZEOF reduce production rlist(declaration_specifier_no_type) -> type_qualifier_noattr
-- On SIGNED reduce production rlist(declaration_specifier_no_type) -> type_qualifier_noattr
-- On SHORT reduce production rlist(declaration_specifier_no_type) -> type_qualifier_noattr
-- On SEMICOLON reduce production rlist(declaration_specifier_no_type) -> type_qualifier_noattr
-- On RPAREN reduce production rlist(declaration_specifier_no_type) -> type_qualifier_noattr
-- On RIGHT_ASSIGN reduce production rlist(declaration_specifier_no_type) -> type_qualifier_noattr
-- On RIGHT reduce production rlist(declaration_specifier_no_type) -> type_qualifier_noattr
-- On RETURN reduce production rlist(declaration_specifier_no_type) -> type_qualifier_noattr
-- On RBRACK reduce production rlist(declaration_specifier_no_type) -> type_qualifier_noattr
-- On RBRACE reduce production rlist(declaration_specifier_no_type) -> type_qualifier_noattr
-- On QUESTION reduce production rlist(declaration_specifier_no_type) -> type_qualifier_noattr
-- On PTR reduce production rlist(declaration_specifier_no_type) -> type_qualifier_noattr
-- On PRE_NAME reduce production rlist(declaration_specifier_no_type) -> type_qualifier_noattr
-- On PRAGMA reduce production rlist(declaration_specifier_no_type) -> type_qualifier_noattr
-- On PLUS reduce production rlist(declaration_specifier_no_type) -> type_qualifier_noattr
-- On PERCENT reduce production rlist(declaration_specifier_no_type) -> type_qualifier_noattr
-- On OR_ASSIGN reduce production rlist(declaration_specifier_no_type) -> type_qualifier_noattr
-- On NEQ reduce production rlist(declaration_specifier_no_type) -> type_qualifier_noattr
-- On MUL_ASSIGN reduce production rlist(declaration_specifier_no_type) -> type_qualifier_noattr
-- On MOD_ASSIGN reduce production rlist(declaration_specifier_no_type) -> type_qualifier_noattr
-- On MINUS reduce production rlist(declaration_specifier_no_type) -> type_qualifier_noattr
-- On LT reduce production rlist(declaration_specifier_no_type) -> type_qualifier_noattr
-- On LPAREN reduce production rlist(declaration_specifier_no_type) -> type_qualifier_noattr
-- On LONG reduce production rlist(declaration_specifier_no_type) -> type_qualifier_noattr
-- On LEQ reduce production rlist(declaration_specifier_no_type) -> type_qualifier_noattr
-- On LEFT_ASSIGN reduce production rlist(declaration_specifier_no_type) -> type_qualifier_noattr
-- On LEFT reduce production rlist(declaration_specifier_no_type) -> type_qualifier_noattr
-- On LBRACK reduce production rlist(declaration_specifier_no_type) -> type_qualifier_noattr
-- On LBRACE reduce production rlist(declaration_specifier_no_type) -> type_qualifier_noattr
-- On INT reduce production rlist(declaration_specifier_no_type) -> type_qualifier_noattr
-- On INC reduce production rlist(declaration_specifier_no_type) -> type_qualifier_noattr
-- On IF reduce production rlist(declaration_specifier_no_type) -> type_qualifier_noattr
-- On HAT reduce production rlist(declaration_specifier_no_type) -> type_qualifier_noattr
-- On GT reduce production rlist(declaration_specifier_no_type) -> type_qualifier_noattr
-- On GOTO reduce production rlist(declaration_specifier_no_type) -> type_qualifier_noattr
-- On GEQ reduce production rlist(declaration_specifier_no_type) -> type_qualifier_noattr
-- On FOR reduce production rlist(declaration_specifier_no_type) -> type_qualifier_noattr
-- On FLOAT reduce production rlist(declaration_specifier_no_type) -> type_qualifier_noattr
-- On EQEQ reduce production rlist(declaration_specifier_no_type) -> type_qualifier_noattr
-- On EQ reduce production rlist(declaration_specifier_no_type) -> type_qualifier_noattr
-- On EOF reduce production rlist(declaration_specifier_no_type) -> type_qualifier_noattr
-- On ENUM reduce production rlist(declaration_specifier_no_type) -> type_qualifier_noattr
-- On ELSE reduce production rlist(declaration_specifier_no_type) -> type_qualifier_noattr
-- On ELLIPSIS reduce production rlist(declaration_specifier_no_type) -> type_qualifier_noattr
-- On DOUBLE reduce production rlist(declaration_specifier_no_type) -> type_qualifier_noattr
-- On DOT reduce production rlist(declaration_specifier_no_type) -> type_qualifier_noattr
-- On DO reduce production rlist(declaration_specifier_no_type) -> type_qualifier_noattr
-- On DIV_ASSIGN reduce production rlist(declaration_specifier_no_type) -> type_qualifier_noattr
-- On DEFAULT reduce production rlist(declaration_specifier_no_type) -> type_qualifier_noattr
-- On DEC reduce production rlist(declaration_specifier_no_type) -> type_qualifier_noattr
-- On CONTINUE reduce production rlist(declaration_specifier_no_type) -> type_qualifier_noattr
-- On CONSTANT reduce production rlist(declaration_specifier_no_type) -> type_qualifier_noattr
-- On COMMA reduce production rlist(declaration_specifier_no_type) -> type_qualifier_noattr
-- On COLON reduce production rlist(declaration_specifier_no_type) -> type_qualifier_noattr
-- On CHAR reduce production rlist(declaration_specifier_no_type) -> type_qualifier_noattr
-- On CASE reduce production rlist(declaration_specifier_no_type) -> type_qualifier_noattr
-- On BUILTIN_VA_ARG reduce production rlist(declaration_specifier_no_type) -> type_qualifier_noattr
-- On BREAK reduce production rlist(declaration_specifier_no_type) -> type_qualifier_noattr
-- On BARBAR reduce production rlist(declaration_specifier_no_type) -> type_qualifier_noattr
-- On BAR reduce production rlist(declaration_specifier_no_type) -> type_qualifier_noattr
-- On BANG reduce production rlist(declaration_specifier_no_type) -> type_qualifier_noattr
-- On ASM reduce production rlist(declaration_specifier_no_type) -> type_qualifier_noattr
-- On AND_ASSIGN reduce production rlist(declaration_specifier_no_type) -> type_qualifier_noattr
-- On ANDAND reduce production rlist(declaration_specifier_no_type) -> type_qualifier_noattr
-- On AND reduce production rlist(declaration_specifier_no_type) -> type_qualifier_noattr
-- On ALIGNOF reduce production rlist(declaration_specifier_no_type) -> type_qualifier_noattr
-- On ADD_ASSIGN reduce production rlist(declaration_specifier_no_type) -> type_qualifier_noattr

State 210:
## Known stack suffix:
## storage_class_specifier_no_typedef
## LR(1) items:
rlist(declaration_specifier_no_type) -> storage_class_specifier_no_typedef . [ VOID UNSIGNED UNION UNDERSCORE_BOOL TYPEDEF STRUCT SIGNED SHORT PRE_NAME LONG INT FLOAT ENUM DOUBLE CHAR ]
rlist(declaration_specifier_no_type) -> storage_class_specifier_no_typedef . rlist(declaration_specifier_no_type) [ VOID UNSIGNED UNION UNDERSCORE_BOOL TYPEDEF STRUCT SIGNED SHORT PRE_NAME LONG INT FLOAT ENUM DOUBLE CHAR ]
## Transitions:
-- On VOLATILE shift to state 1
-- On STATIC shift to state 9
-- On RESTRICT shift to state 12
-- On REGISTER shift to state 13
-- On PACKED shift to state 16
-- On INLINE shift to state 192
-- On EXTERN shift to state 193
-- On CONST shift to state 148
-- On AUTO shift to state 194
-- On ATTRIBUTE shift to state 35
-- On ALIGNAS shift to state 149
-- On type_qualifier_noattr shift to state 209
-- On storage_class_specifier_no_typedef shift to state 210
-- On rlist(declaration_specifier_no_type) shift to state 211
-- On function_specifier shift to state 212
-- On attribute_specifier shift to state 214
## Reductions:
-- On XOR_ASSIGN reduce production rlist(declaration_specifier_no_type) -> storage_class_specifier_no_typedef
-- On WHILE reduce production rlist(declaration_specifier_no_type) -> storage_class_specifier_no_typedef
-- On VOID reduce production rlist(declaration_specifier_no_type) -> storage_class_specifier_no_typedef
-- On VAR_NAME reduce production rlist(declaration_specifier_no_type) -> storage_class_specifier_no_typedef
-- On UNSIGNED reduce production rlist(declaration_specifier_no_type) -> storage_class_specifier_no_typedef
-- On UNION reduce production rlist(declaration_specifier_no_type) -> storage_class_specifier_no_typedef
-- On UNDERSCORE_BOOL reduce production rlist(declaration_specifier_no_type) -> storage_class_specifier_no_typedef
-- On TYPEDEF_NAME reduce production rlist(declaration_specifier_no_type) -> storage_class_specifier_no_typedef
-- On TYPEDEF reduce production rlist(declaration_specifier_no_type) -> storage_class_specifier_no_typedef
-- On TILDE reduce production rlist(declaration_specifier_no_type) -> storage_class_specifier_no_typedef
-- On SWITCH reduce production rlist(declaration_specifier_no_type) -> storage_class_specifier_no_typedef
-- On SUB_ASSIGN reduce production rlist(declaration_specifier_no_type) -> storage_class_specifier_no_typedef
-- On STRUCT reduce production rlist(declaration_specifier_no_type) -> storage_class_specifier_no_typedef
-- On STRING_LITERAL reduce production rlist(declaration_specifier_no_type) -> storage_class_specifier_no_typedef
-- On STAR reduce production rlist(declaration_specifier_no_type) -> storage_class_specifier_no_typedef
-- On SLASH reduce production rlist(declaration_specifier_no_type) -> storage_class_specifier_no_typedef
-- On SIZEOF reduce production rlist(declaration_specifier_no_type) -> storage_class_specifier_no_typedef
-- On SIGNED reduce production rlist(declaration_specifier_no_type) -> storage_class_specifier_no_typedef
-- On SHORT reduce production rlist(declaration_specifier_no_type) -> storage_class_specifier_no_typedef
-- On SEMICOLON reduce production rlist(declaration_specifier_no_type) -> storage_class_specifier_no_typedef
-- On RPAREN reduce production rlist(declaration_specifier_no_type) -> storage_class_specifier_no_typedef
-- On RIGHT_ASSIGN reduce production rlist(declaration_specifier_no_type) -> storage_class_specifier_no_typedef
-- On RIGHT reduce production rlist(declaration_specifier_no_type) -> storage_class_specifier_no_typedef
-- On RETURN reduce production rlist(declaration_specifier_no_type) -> storage_class_specifier_no_typedef
-- On RBRACK reduce production rlist(declaration_specifier_no_type) -> storage_class_specifier_no_typedef
-- On RBRACE reduce production rlist(declaration_specifier_no_type) -> storage_class_specifier_no_typedef
-- On QUESTION reduce production rlist(declaration_specifier_no_type) -> storage_class_specifier_no_typedef
-- On PTR reduce production rlist(declaration_specifier_no_type) -> storage_class_specifier_no_typedef
-- On PRE_NAME reduce production rlist(declaration_specifier_no_type) -> storage_class_specifier_no_typedef
-- On PRAGMA reduce production rlist(declaration_specifier_no_type) -> storage_class_specifier_no_typedef
-- On PLUS reduce production rlist(declaration_specifier_no_type) -> storage_class_specifier_no_typedef
-- On PERCENT reduce production rlist(declaration_specifier_no_type) -> storage_class_specifier_no_typedef
-- On OR_ASSIGN reduce production rlist(declaration_specifier_no_type) -> storage_class_specifier_no_typedef
-- On NEQ reduce production rlist(declaration_specifier_no_type) -> storage_class_specifier_no_typedef
-- On MUL_ASSIGN reduce production rlist(declaration_specifier_no_type) -> storage_class_specifier_no_typedef
-- On MOD_ASSIGN reduce production rlist(declaration_specifier_no_type) -> storage_class_specifier_no_typedef
-- On MINUS reduce production rlist(declaration_specifier_no_type) -> storage_class_specifier_no_typedef
-- On LT reduce production rlist(declaration_specifier_no_type) -> storage_class_specifier_no_typedef
-- On LPAREN reduce production rlist(declaration_specifier_no_type) -> storage_class_specifier_no_typedef
-- On LONG reduce production rlist(declaration_specifier_no_type) -> storage_class_specifier_no_typedef
-- On LEQ reduce production rlist(declaration_specifier_no_type) -> storage_class_specifier_no_typedef
-- On LEFT_ASSIGN reduce production rlist(declaration_specifier_no_type) -> storage_class_specifier_no_typedef
-- On LEFT reduce production rlist(declaration_specifier_no_type) -> storage_class_specifier_no_typedef
-- On LBRACK reduce production rlist(declaration_specifier_no_type) -> storage_class_specifier_no_typedef
-- On LBRACE reduce production rlist(declaration_specifier_no_type) -> storage_class_specifier_no_typedef
-- On INT reduce production rlist(declaration_specifier_no_type) -> storage_class_specifier_no_typedef
-- On INC reduce production rlist(declaration_specifier_no_type) -> storage_class_specifier_no_typedef
-- On IF reduce production rlist(declaration_specifier_no_type) -> storage_class_specifier_no_typedef
-- On HAT reduce production rlist(declaration_specifier_no_type) -> storage_class_specifier_no_typedef
-- On GT reduce production rlist(declaration_specifier_no_type) -> storage_class_specifier_no_typedef
-- On GOTO reduce production rlist(declaration_specifier_no_type) -> storage_class_specifier_no_typedef
-- On GEQ reduce production rlist(declaration_specifier_no_type) -> storage_class_specifier_no_typedef
-- On FOR reduce production rlist(declaration_specifier_no_type) -> storage_class_specifier_no_typedef
-- On FLOAT reduce production rlist(declaration_specifier_no_type) -> storage_class_specifier_no_typedef
-- On EQEQ reduce production rlist(declaration_specifier_no_type) -> storage_class_specifier_no_typedef
-- On EQ reduce production rlist(declaration_specifier_no_type) -> storage_class_specifier_no_typedef
-- On EOF reduce production rlist(declaration_specifier_no_type) -> storage_class_specifier_no_typedef
-- On ENUM reduce production rlist(declaration_specifier_no_type) -> storage_class_specifier_no_typedef
-- On ELSE reduce production rlist(declaration_specifier_no_type) -> storage_class_specifier_no_typedef
-- On ELLIPSIS reduce production rlist(declaration_specifier_no_type) -> storage_class_specifier_no_typedef
-- On DOUBLE reduce production rlist(declaration_specifier_no_type) -> storage_class_specifier_no_typedef
-- On DOT reduce production rlist(declaration_specifier_no_type) -> storage_class_specifier_no_typedef
-- On DO reduce production rlist(declaration_specifier_no_type) -> storage_class_specifier_no_typedef
-- On DIV_ASSIGN reduce production rlist(declaration_specifier_no_type) -> storage_class_specifier_no_typedef
-- On DEFAULT reduce production rlist(declaration_specifier_no_type) -> storage_class_specifier_no_typedef
-- On DEC reduce production rlist(declaration_specifier_no_type) -> storage_class_specifier_no_typedef
-- On CONTINUE reduce production rlist(declaration_specifier_no_type) -> storage_class_specifier_no_typedef
-- On CONSTANT reduce production rlist(declaration_specifier_no_type) -> storage_class_specifier_no_typedef
-- On COMMA reduce production rlist(declaration_specifier_no_type) -> storage_class_specifier_no_typedef
-- On COLON reduce production rlist(declaration_specifier_no_type) -> storage_class_specifier_no_typedef
-- On CHAR reduce production rlist(declaration_specifier_no_type) -> storage_class_specifier_no_typedef
-- On CASE reduce production rlist(declaration_specifier_no_type) -> storage_class_specifier_no_typedef
-- On BUILTIN_VA_ARG reduce production rlist(declaration_specifier_no_type) -> storage_class_specifier_no_typedef
-- On BREAK reduce production rlist(declaration_specifier_no_type) -> storage_class_specifier_no_typedef
-- On BARBAR reduce production rlist(declaration_specifier_no_type) -> storage_class_specifier_no_typedef
-- On BAR reduce production rlist(declaration_specifier_no_type) -> storage_class_specifier_no_typedef
-- On BANG reduce production rlist(declaration_specifier_no_type) -> storage_class_specifier_no_typedef
-- On ASM reduce production rlist(declaration_specifier_no_type) -> storage_class_specifier_no_typedef
-- On AND_ASSIGN reduce production rlist(declaration_specifier_no_type) -> storage_class_specifier_no_typedef
-- On ANDAND reduce production rlist(declaration_specifier_no_type) -> storage_class_specifier_no_typedef
-- On AND reduce production rlist(declaration_specifier_no_type) -> storage_class_specifier_no_typedef
-- On ALIGNOF reduce production rlist(declaration_specifier_no_type) -> storage_class_specifier_no_typedef
-- On ADD_ASSIGN reduce production rlist(declaration_specifier_no_type) -> storage_class_specifier_no_typedef

State 211:
## Known stack suffix:
## storage_class_specifier_no_typedef rlist(declaration_specifier_no_type)
## LR(1) items:
rlist(declaration_specifier_no_type) -> storage_class_specifier_no_typedef rlist(declaration_specifier_no_type) . [ VOID UNSIGNED UNION UNDERSCORE_BOOL TYPEDEF STRUCT SIGNED SHORT PRE_NAME LONG INT FLOAT ENUM DOUBLE CHAR ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production rlist(declaration_specifier_no_type) -> storage_class_specifier_no_typedef rlist(declaration_specifier_no_type)

State 212:
## Known stack suffix:
## function_specifier
## LR(1) items:
rlist(declaration_specifier_no_type) -> function_specifier . [ VOID UNSIGNED UNION UNDERSCORE_BOOL TYPEDEF STRUCT SIGNED SHORT PRE_NAME LONG INT FLOAT ENUM DOUBLE CHAR ]
rlist(declaration_specifier_no_type) -> function_specifier . rlist(declaration_specifier_no_type) [ VOID UNSIGNED UNION UNDERSCORE_BOOL TYPEDEF STRUCT SIGNED SHORT PRE_NAME LONG INT FLOAT ENUM DOUBLE CHAR ]
## Transitions:
-- On VOLATILE shift to state 1
-- On STATIC shift to state 9
-- On RESTRICT shift to state 12
-- On REGISTER shift to state 13
-- On PACKED shift to state 16
-- On INLINE shift to state 192
-- On EXTERN shift to state 193
-- On CONST shift to state 148
-- On AUTO shift to state 194
-- On ATTRIBUTE shift to state 35
-- On ALIGNAS shift to state 149
-- On type_qualifier_noattr shift to state 209
-- On storage_class_specifier_no_typedef shift to state 210
-- On rlist(declaration_specifier_no_type) shift to state 213
-- On function_specifier shift to state 212
-- On attribute_specifier shift to state 214
## Reductions:
-- On XOR_ASSIGN reduce production rlist(declaration_specifier_no_type) -> function_specifier
-- On WHILE reduce production rlist(declaration_specifier_no_type) -> function_specifier
-- On VOID reduce production rlist(declaration_specifier_no_type) -> function_specifier
-- On VAR_NAME reduce production rlist(declaration_specifier_no_type) -> function_specifier
-- On UNSIGNED reduce production rlist(declaration_specifier_no_type) -> function_specifier
-- On UNION reduce production rlist(declaration_specifier_no_type) -> function_specifier
-- On UNDERSCORE_BOOL reduce production rlist(declaration_specifier_no_type) -> function_specifier
-- On TYPEDEF_NAME reduce production rlist(declaration_specifier_no_type) -> function_specifier
-- On TYPEDEF reduce production rlist(declaration_specifier_no_type) -> function_specifier
-- On TILDE reduce production rlist(declaration_specifier_no_type) -> function_specifier
-- On SWITCH reduce production rlist(declaration_specifier_no_type) -> function_specifier
-- On SUB_ASSIGN reduce production rlist(declaration_specifier_no_type) -> function_specifier
-- On STRUCT reduce production rlist(declaration_specifier_no_type) -> function_specifier
-- On STRING_LITERAL reduce production rlist(declaration_specifier_no_type) -> function_specifier
-- On STAR reduce production rlist(declaration_specifier_no_type) -> function_specifier
-- On SLASH reduce production rlist(declaration_specifier_no_type) -> function_specifier
-- On SIZEOF reduce production rlist(declaration_specifier_no_type) -> function_specifier
-- On SIGNED reduce production rlist(declaration_specifier_no_type) -> function_specifier
-- On SHORT reduce production rlist(declaration_specifier_no_type) -> function_specifier
-- On SEMICOLON reduce production rlist(declaration_specifier_no_type) -> function_specifier
-- On RPAREN reduce production rlist(declaration_specifier_no_type) -> function_specifier
-- On RIGHT_ASSIGN reduce production rlist(declaration_specifier_no_type) -> function_specifier
-- On RIGHT reduce production rlist(declaration_specifier_no_type) -> function_specifier
-- On RETURN reduce production rlist(declaration_specifier_no_type) -> function_specifier
-- On RBRACK reduce production rlist(declaration_specifier_no_type) -> function_specifier
-- On RBRACE reduce production rlist(declaration_specifier_no_type) -> function_specifier
-- On QUESTION reduce production rlist(declaration_specifier_no_type) -> function_specifier
-- On PTR reduce production rlist(declaration_specifier_no_type) -> function_specifier
-- On PRE_NAME reduce production rlist(declaration_specifier_no_type) -> function_specifier
-- On PRAGMA reduce production rlist(declaration_specifier_no_type) -> function_specifier
-- On PLUS reduce production rlist(declaration_specifier_no_type) -> function_specifier
-- On PERCENT reduce production rlist(declaration_specifier_no_type) -> function_specifier
-- On OR_ASSIGN reduce production rlist(declaration_specifier_no_type) -> function_specifier
-- On NEQ reduce production rlist(declaration_specifier_no_type) -> function_specifier
-- On MUL_ASSIGN reduce production rlist(declaration_specifier_no_type) -> function_specifier
-- On MOD_ASSIGN reduce production rlist(declaration_specifier_no_type) -> function_specifier
-- On MINUS reduce production rlist(declaration_specifier_no_type) -> function_specifier
-- On LT reduce production rlist(declaration_specifier_no_type) -> function_specifier
-- On LPAREN reduce production rlist(declaration_specifier_no_type) -> function_specifier
-- On LONG reduce production rlist(declaration_specifier_no_type) -> function_specifier
-- On LEQ reduce production rlist(declaration_specifier_no_type) -> function_specifier
-- On LEFT_ASSIGN reduce production rlist(declaration_specifier_no_type) -> function_specifier
-- On LEFT reduce production rlist(declaration_specifier_no_type) -> function_specifier
-- On LBRACK reduce production rlist(declaration_specifier_no_type) -> function_specifier
-- On LBRACE reduce production rlist(declaration_specifier_no_type) -> function_specifier
-- On INT reduce production rlist(declaration_specifier_no_type) -> function_specifier
-- On INC reduce production rlist(declaration_specifier_no_type) -> function_specifier
-- On IF reduce production rlist(declaration_specifier_no_type) -> function_specifier
-- On HAT reduce production rlist(declaration_specifier_no_type) -> function_specifier
-- On GT reduce production rlist(declaration_specifier_no_type) -> function_specifier
-- On GOTO reduce production rlist(declaration_specifier_no_type) -> function_specifier
-- On GEQ reduce production rlist(declaration_specifier_no_type) -> function_specifier
-- On FOR reduce production rlist(declaration_specifier_no_type) -> function_specifier
-- On FLOAT reduce production rlist(declaration_specifier_no_type) -> function_specifier
-- On EQEQ reduce production rlist(declaration_specifier_no_type) -> function_specifier
-- On EQ reduce production rlist(declaration_specifier_no_type) -> function_specifier
-- On EOF reduce production rlist(declaration_specifier_no_type) -> function_specifier
-- On ENUM reduce production rlist(declaration_specifier_no_type) -> function_specifier
-- On ELSE reduce production rlist(declaration_specifier_no_type) -> function_specifier
-- On ELLIPSIS reduce production rlist(declaration_specifier_no_type) -> function_specifier
-- On DOUBLE reduce production rlist(declaration_specifier_no_type) -> function_specifier
-- On DOT reduce production rlist(declaration_specifier_no_type) -> function_specifier
-- On DO reduce production rlist(declaration_specifier_no_type) -> function_specifier
-- On DIV_ASSIGN reduce production rlist(declaration_specifier_no_type) -> function_specifier
-- On DEFAULT reduce production rlist(declaration_specifier_no_type) -> function_specifier
-- On DEC reduce production rlist(declaration_specifier_no_type) -> function_specifier
-- On CONTINUE reduce production rlist(declaration_specifier_no_type) -> function_specifier
-- On CONSTANT reduce production rlist(declaration_specifier_no_type) -> function_specifier
-- On COMMA reduce production rlist(declaration_specifier_no_type) -> function_specifier
-- On COLON reduce production rlist(declaration_specifier_no_type) -> function_specifier
-- On CHAR reduce production rlist(declaration_specifier_no_type) -> function_specifier
-- On CASE reduce production rlist(declaration_specifier_no_type) -> function_specifier
-- On BUILTIN_VA_ARG reduce production rlist(declaration_specifier_no_type) -> function_specifier
-- On BREAK reduce production rlist(declaration_specifier_no_type) -> function_specifier
-- On BARBAR reduce production rlist(declaration_specifier_no_type) -> function_specifier
-- On BAR reduce production rlist(declaration_specifier_no_type) -> function_specifier
-- On BANG reduce production rlist(declaration_specifier_no_type) -> function_specifier
-- On ASM reduce production rlist(declaration_specifier_no_type) -> function_specifier
-- On AND_ASSIGN reduce production rlist(declaration_specifier_no_type) -> function_specifier
-- On ANDAND reduce production rlist(declaration_specifier_no_type) -> function_specifier
-- On AND reduce production rlist(declaration_specifier_no_type) -> function_specifier
-- On ALIGNOF reduce production rlist(declaration_specifier_no_type) -> function_specifier
-- On ADD_ASSIGN reduce production rlist(declaration_specifier_no_type) -> function_specifier

State 213:
## Known stack suffix:
## function_specifier rlist(declaration_specifier_no_type)
## LR(1) items:
rlist(declaration_specifier_no_type) -> function_specifier rlist(declaration_specifier_no_type) . [ VOID UNSIGNED UNION UNDERSCORE_BOOL TYPEDEF STRUCT SIGNED SHORT PRE_NAME LONG INT FLOAT ENUM DOUBLE CHAR ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production rlist(declaration_specifier_no_type) -> function_specifier rlist(declaration_specifier_no_type)

State 214:
## Known stack suffix:
## attribute_specifier
## LR(1) items:
rlist(declaration_specifier_no_type) -> attribute_specifier . [ VOID UNSIGNED UNION UNDERSCORE_BOOL TYPEDEF STRUCT SIGNED SHORT PRE_NAME LONG INT FLOAT ENUM DOUBLE CHAR ]
rlist(declaration_specifier_no_type) -> attribute_specifier . rlist(declaration_specifier_no_type) [ VOID UNSIGNED UNION UNDERSCORE_BOOL TYPEDEF STRUCT SIGNED SHORT PRE_NAME LONG INT FLOAT ENUM DOUBLE CHAR ]
## Transitions:
-- On VOLATILE shift to state 1
-- On STATIC shift to state 9
-- On RESTRICT shift to state 12
-- On REGISTER shift to state 13
-- On PACKED shift to state 16
-- On INLINE shift to state 192
-- On EXTERN shift to state 193
-- On CONST shift to state 148
-- On AUTO shift to state 194
-- On ATTRIBUTE shift to state 35
-- On ALIGNAS shift to state 149
-- On type_qualifier_noattr shift to state 209
-- On storage_class_specifier_no_typedef shift to state 210
-- On rlist(declaration_specifier_no_type) shift to state 215
-- On function_specifier shift to state 212
-- On attribute_specifier shift to state 214
## Reductions:
-- On XOR_ASSIGN reduce production rlist(declaration_specifier_no_type) -> attribute_specifier
-- On WHILE reduce production rlist(declaration_specifier_no_type) -> attribute_specifier
-- On VOID reduce production rlist(declaration_specifier_no_type) -> attribute_specifier
-- On VAR_NAME reduce production rlist(declaration_specifier_no_type) -> attribute_specifier
-- On UNSIGNED reduce production rlist(declaration_specifier_no_type) -> attribute_specifier
-- On UNION reduce production rlist(declaration_specifier_no_type) -> attribute_specifier
-- On UNDERSCORE_BOOL reduce production rlist(declaration_specifier_no_type) -> attribute_specifier
-- On TYPEDEF_NAME reduce production rlist(declaration_specifier_no_type) -> attribute_specifier
-- On TYPEDEF reduce production rlist(declaration_specifier_no_type) -> attribute_specifier
-- On TILDE reduce production rlist(declaration_specifier_no_type) -> attribute_specifier
-- On SWITCH reduce production rlist(declaration_specifier_no_type) -> attribute_specifier
-- On SUB_ASSIGN reduce production rlist(declaration_specifier_no_type) -> attribute_specifier
-- On STRUCT reduce production rlist(declaration_specifier_no_type) -> attribute_specifier
-- On STRING_LITERAL reduce production rlist(declaration_specifier_no_type) -> attribute_specifier
-- On STAR reduce production rlist(declaration_specifier_no_type) -> attribute_specifier
-- On SLASH reduce production rlist(declaration_specifier_no_type) -> attribute_specifier
-- On SIZEOF reduce production rlist(declaration_specifier_no_type) -> attribute_specifier
-- On SIGNED reduce production rlist(declaration_specifier_no_type) -> attribute_specifier
-- On SHORT reduce production rlist(declaration_specifier_no_type) -> attribute_specifier
-- On SEMICOLON reduce production rlist(declaration_specifier_no_type) -> attribute_specifier
-- On RPAREN reduce production rlist(declaration_specifier_no_type) -> attribute_specifier
-- On RIGHT_ASSIGN reduce production rlist(declaration_specifier_no_type) -> attribute_specifier
-- On RIGHT reduce production rlist(declaration_specifier_no_type) -> attribute_specifier
-- On RETURN reduce production rlist(declaration_specifier_no_type) -> attribute_specifier
-- On RBRACK reduce production rlist(declaration_specifier_no_type) -> attribute_specifier
-- On RBRACE reduce production rlist(declaration_specifier_no_type) -> attribute_specifier
-- On QUESTION reduce production rlist(declaration_specifier_no_type) -> attribute_specifier
-- On PTR reduce production rlist(declaration_specifier_no_type) -> attribute_specifier
-- On PRE_NAME reduce production rlist(declaration_specifier_no_type) -> attribute_specifier
-- On PRAGMA reduce production rlist(declaration_specifier_no_type) -> attribute_specifier
-- On PLUS reduce production rlist(declaration_specifier_no_type) -> attribute_specifier
-- On PERCENT reduce production rlist(declaration_specifier_no_type) -> attribute_specifier
-- On OR_ASSIGN reduce production rlist(declaration_specifier_no_type) -> attribute_specifier
-- On NEQ reduce production rlist(declaration_specifier_no_type) -> attribute_specifier
-- On MUL_ASSIGN reduce production rlist(declaration_specifier_no_type) -> attribute_specifier
-- On MOD_ASSIGN reduce production rlist(declaration_specifier_no_type) -> attribute_specifier
-- On MINUS reduce production rlist(declaration_specifier_no_type) -> attribute_specifier
-- On LT reduce production rlist(declaration_specifier_no_type) -> attribute_specifier
-- On LPAREN reduce production rlist(declaration_specifier_no_type) -> attribute_specifier
-- On LONG reduce production rlist(declaration_specifier_no_type) -> attribute_specifier
-- On LEQ reduce production rlist(declaration_specifier_no_type) -> attribute_specifier
-- On LEFT_ASSIGN reduce production rlist(declaration_specifier_no_type) -> attribute_specifier
-- On LEFT reduce production rlist(declaration_specifier_no_type) -> attribute_specifier
-- On LBRACK reduce production rlist(declaration_specifier_no_type) -> attribute_specifier
-- On LBRACE reduce production rlist(declaration_specifier_no_type) -> attribute_specifier
-- On INT reduce production rlist(declaration_specifier_no_type) -> attribute_specifier
-- On INC reduce production rlist(declaration_specifier_no_type) -> attribute_specifier
-- On IF reduce production rlist(declaration_specifier_no_type) -> attribute_specifier
-- On HAT reduce production rlist(declaration_specifier_no_type) -> attribute_specifier
-- On GT reduce production rlist(declaration_specifier_no_type) -> attribute_specifier
-- On GOTO reduce production rlist(declaration_specifier_no_type) -> attribute_specifier
-- On GEQ reduce production rlist(declaration_specifier_no_type) -> attribute_specifier
-- On FOR reduce production rlist(declaration_specifier_no_type) -> attribute_specifier
-- On FLOAT reduce production rlist(declaration_specifier_no_type) -> attribute_specifier
-- On EQEQ reduce production rlist(declaration_specifier_no_type) -> attribute_specifier
-- On EQ reduce production rlist(declaration_specifier_no_type) -> attribute_specifier
-- On EOF reduce production rlist(declaration_specifier_no_type) -> attribute_specifier
-- On ENUM reduce production rlist(declaration_specifier_no_type) -> attribute_specifier
-- On ELSE reduce production rlist(declaration_specifier_no_type) -> attribute_specifier
-- On ELLIPSIS reduce production rlist(declaration_specifier_no_type) -> attribute_specifier
-- On DOUBLE reduce production rlist(declaration_specifier_no_type) -> attribute_specifier
-- On DOT reduce production rlist(declaration_specifier_no_type) -> attribute_specifier
-- On DO reduce production rlist(declaration_specifier_no_type) -> attribute_specifier
-- On DIV_ASSIGN reduce production rlist(declaration_specifier_no_type) -> attribute_specifier
-- On DEFAULT reduce production rlist(declaration_specifier_no_type) -> attribute_specifier
-- On DEC reduce production rlist(declaration_specifier_no_type) -> attribute_specifier
-- On CONTINUE reduce production rlist(declaration_specifier_no_type) -> attribute_specifier
-- On CONSTANT reduce production rlist(declaration_specifier_no_type) -> attribute_specifier
-- On COMMA reduce production rlist(declaration_specifier_no_type) -> attribute_specifier
-- On COLON reduce production rlist(declaration_specifier_no_type) -> attribute_specifier
-- On CHAR reduce production rlist(declaration_specifier_no_type) -> attribute_specifier
-- On CASE reduce production rlist(declaration_specifier_no_type) -> attribute_specifier
-- On BUILTIN_VA_ARG reduce production rlist(declaration_specifier_no_type) -> attribute_specifier
-- On BREAK reduce production rlist(declaration_specifier_no_type) -> attribute_specifier
-- On BARBAR reduce production rlist(declaration_specifier_no_type) -> attribute_specifier
-- On BAR reduce production rlist(declaration_specifier_no_type) -> attribute_specifier
-- On BANG reduce production rlist(declaration_specifier_no_type) -> attribute_specifier
-- On ASM reduce production rlist(declaration_specifier_no_type) -> attribute_specifier
-- On AND_ASSIGN reduce production rlist(declaration_specifier_no_type) -> attribute_specifier
-- On ANDAND reduce production rlist(declaration_specifier_no_type) -> attribute_specifier
-- On AND reduce production rlist(declaration_specifier_no_type) -> attribute_specifier
-- On ALIGNOF reduce production rlist(declaration_specifier_no_type) -> attribute_specifier
-- On ADD_ASSIGN reduce production rlist(declaration_specifier_no_type) -> attribute_specifier

State 215:
## Known stack suffix:
## attribute_specifier rlist(declaration_specifier_no_type)
## LR(1) items:
rlist(declaration_specifier_no_type) -> attribute_specifier rlist(declaration_specifier_no_type) . [ VOID UNSIGNED UNION UNDERSCORE_BOOL TYPEDEF STRUCT SIGNED SHORT PRE_NAME LONG INT FLOAT ENUM DOUBLE CHAR ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production rlist(declaration_specifier_no_type) -> attribute_specifier rlist(declaration_specifier_no_type)

State 216:
## Known stack suffix:
## type_qualifier_noattr rlist(declaration_specifier_no_type)
## LR(1) items:
rlist(declaration_specifier_no_type) -> type_qualifier_noattr rlist(declaration_specifier_no_type) . [ VOID UNSIGNED UNION UNDERSCORE_BOOL TYPEDEF STRUCT SIGNED SHORT PRE_NAME LONG INT FLOAT ENUM DOUBLE CHAR ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production rlist(declaration_specifier_no_type) -> type_qualifier_noattr rlist(declaration_specifier_no_type)

State 217:
## Known stack suffix:
## rlist(declaration_specifier_no_type)
## LR(1) items:
declaration_specifiers(parameter_declaration) -> rlist(declaration_specifier_no_type) . typedef_name list(declaration_specifier_no_type) [ STAR RPAREN PRE_NAME LPAREN LBRACK COMMA ]
declaration_specifiers(parameter_declaration) -> rlist(declaration_specifier_no_type) . type_specifier_no_typedef_name list(declaration_specifier_no_typedef_name) [ STAR RPAREN PRE_NAME LPAREN LBRACK COMMA ]
## Transitions:
-- On VOID shift to state 2
-- On UNSIGNED shift to state 3
-- On UNION shift to state 4
-- On UNDERSCORE_BOOL shift to state 5
-- On STRUCT shift to state 8
-- On SIGNED shift to state 10
-- On SHORT shift to state 11
-- On PRE_NAME shift to state 14
-- On LONG shift to state 29
-- On INT shift to state 30
-- On FLOAT shift to state 33
-- On ENUM shift to state 34
-- On DOUBLE shift to state 54
-- On CHAR shift to state 55
-- On typedef_name shift to state 218
-- On type_specifier_no_typedef_name shift to state 220
-- On struct_or_union_specifier shift to state 155
-- On struct_or_union shift to state 156
-- On enum_specifier shift to state 169
## Reductions:

State 218:
## Known stack suffix:
## rlist(declaration_specifier_no_type) typedef_name
## LR(1) items:
declaration_specifiers(parameter_declaration) -> rlist(declaration_specifier_no_type) typedef_name . list(declaration_specifier_no_type) [ STAR RPAREN PRE_NAME LPAREN LBRACK COMMA ]
## Transitions:
-- On list(declaration_specifier_no_type) shift to state 219
## Default reduction:
-- After reading the next token, reduce production list(declaration_specifier_no_type) ->

State 219:
## Known stack suffix:
## rlist(declaration_specifier_no_type) typedef_name list(declaration_specifier_no_type)
## LR(1) items:
declaration_specifiers(parameter_declaration) -> rlist(declaration_specifier_no_type) typedef_name list(declaration_specifier_no_type) . [ STAR RPAREN PRE_NAME LPAREN LBRACK COMMA ]
list(declaration_specifier_no_type) -> list(declaration_specifier_no_type) . storage_class_specifier_no_typedef [ VOLATILE STATIC STAR RPAREN RESTRICT REGISTER PRE_NAME PACKED LPAREN LBRACK INLINE EXTERN CONST COMMA AUTO ATTRIBUTE ALIGNAS ]
list(declaration_specifier_no_type) -> list(declaration_specifier_no_type) . type_qualifier_noattr [ VOLATILE STATIC STAR RPAREN RESTRICT REGISTER PRE_NAME PACKED LPAREN LBRACK INLINE EXTERN CONST COMMA AUTO ATTRIBUTE ALIGNAS ]
list(declaration_specifier_no_type) -> list(declaration_specifier_no_type) . function_specifier [ VOLATILE STATIC STAR RPAREN RESTRICT REGISTER PRE_NAME PACKED LPAREN LBRACK INLINE EXTERN CONST COMMA AUTO ATTRIBUTE ALIGNAS ]
list(declaration_specifier_no_type) -> list(declaration_specifier_no_type) . attribute_specifier [ VOLATILE STATIC STAR RPAREN RESTRICT REGISTER PRE_NAME PACKED LPAREN LBRACK INLINE EXTERN CONST COMMA AUTO ATTRIBUTE ALIGNAS ]
## Transitions:
-- On VOLATILE shift to state 1
-- On STATIC shift to state 9
-- On RESTRICT shift to state 12
-- On REGISTER shift to state 13
-- On PACKED shift to state 16
-- On INLINE shift to state 192
-- On EXTERN shift to state 193
-- On CONST shift to state 148
-- On AUTO shift to state 194
-- On ATTRIBUTE shift to state 35
-- On ALIGNAS shift to state 149
-- On type_qualifier_noattr shift to state 197
-- On storage_class_specifier_no_typedef shift to state 198
-- On function_specifier shift to state 199
-- On attribute_specifier shift to state 200
## Reductions:
-- On STAR reduce production declaration_specifiers(parameter_declaration) -> rlist(declaration_specifier_no_type) typedef_name list(declaration_specifier_no_type)
-- On RPAREN reduce production declaration_specifiers(parameter_declaration) -> rlist(declaration_specifier_no_type) typedef_name list(declaration_specifier_no_type)
-- On PRE_NAME reduce production declaration_specifiers(parameter_declaration) -> rlist(declaration_specifier_no_type) typedef_name list(declaration_specifier_no_type)
-- On LPAREN reduce production declaration_specifiers(parameter_declaration) -> rlist(declaration_specifier_no_type) typedef_name list(declaration_specifier_no_type)
-- On LBRACK reduce production declaration_specifiers(parameter_declaration) -> rlist(declaration_specifier_no_type) typedef_name list(declaration_specifier_no_type)
-- On COMMA reduce production declaration_specifiers(parameter_declaration) -> rlist(declaration_specifier_no_type) typedef_name list(declaration_specifier_no_type)

State 220:
## Known stack suffix:
## rlist(declaration_specifier_no_type) type_specifier_no_typedef_name
## LR(1) items:
declaration_specifiers(parameter_declaration) -> rlist(declaration_specifier_no_type) type_specifier_no_typedef_name . list(declaration_specifier_no_typedef_name) [ STAR RPAREN PRE_NAME LPAREN LBRACK COMMA ]
## Transitions:
-- On list(declaration_specifier_no_typedef_name) shift to state 221
## Default reduction:
-- After reading the next token, reduce production list(declaration_specifier_no_typedef_name) ->

State 221:
## Known stack suffix:
## rlist(declaration_specifier_no_type) type_specifier_no_typedef_name list(declaration_specifier_no_typedef_name)
## LR(1) items:
declaration_specifiers(parameter_declaration) -> rlist(declaration_specifier_no_type) type_specifier_no_typedef_name list(declaration_specifier_no_typedef_name) . [ STAR RPAREN PRE_NAME LPAREN LBRACK COMMA ]
list(declaration_specifier_no_typedef_name) -> list(declaration_specifier_no_typedef_name) . declaration_specifier_no_typedef_name [ VOLATILE VOID UNSIGNED UNION UNDERSCORE_BOOL STRUCT STATIC STAR SIGNED SHORT RPAREN RESTRICT REGISTER PRE_NAME PACKED LPAREN LONG LBRACK INT INLINE FLOAT EXTERN ENUM DOUBLE CONST COMMA CHAR AUTO ATTRIBUTE ALIGNAS ]
## Transitions:
-- On VOLATILE shift to state 1
-- On VOID shift to state 2
-- On UNSIGNED shift to state 3
-- On UNION shift to state 4
-- On UNDERSCORE_BOOL shift to state 5
-- On STRUCT shift to state 8
-- On STATIC shift to state 9
-- On SIGNED shift to state 10
-- On SHORT shift to state 11
-- On RESTRICT shift to state 12
-- On REGISTER shift to state 13
-- On PACKED shift to state 16
-- On LONG shift to state 29
-- On INT shift to state 30
-- On INLINE shift to state 192
-- On FLOAT shift to state 33
-- On EXTERN shift to state 193
-- On ENUM shift to state 34
-- On DOUBLE shift to state 54
-- On CONST shift to state 148
-- On CHAR shift to state 55
-- On AUTO shift to state 194
-- On ATTRIBUTE shift to state 35
-- On ALIGNAS shift to state 149
-- On type_specifier_no_typedef_name shift to state 203
-- On type_qualifier_noattr shift to state 204
-- On struct_or_union_specifier shift to state 155
-- On struct_or_union shift to state 156
-- On storage_class_specifier_no_typedef shift to state 205
-- On function_specifier shift to state 206
-- On enum_specifier shift to state 169
-- On declaration_specifier_no_typedef_name shift to state 207
-- On attribute_specifier shift to state 208
## Reductions:
-- On STAR reduce production declaration_specifiers(parameter_declaration) -> rlist(declaration_specifier_no_type) type_specifier_no_typedef_name list(declaration_specifier_no_typedef_name)
-- On RPAREN reduce production declaration_specifiers(parameter_declaration) -> rlist(declaration_specifier_no_type) type_specifier_no_typedef_name list(declaration_specifier_no_typedef_name)
-- On PRE_NAME reduce production declaration_specifiers(parameter_declaration) -> rlist(declaration_specifier_no_type) type_specifier_no_typedef_name list(declaration_specifier_no_typedef_name)
-- On LPAREN reduce production declaration_specifiers(parameter_declaration) -> rlist(declaration_specifier_no_type) type_specifier_no_typedef_name list(declaration_specifier_no_typedef_name)
-- On LBRACK reduce production declaration_specifiers(parameter_declaration) -> rlist(declaration_specifier_no_type) type_specifier_no_typedef_name list(declaration_specifier_no_typedef_name)
-- On COMMA reduce production declaration_specifiers(parameter_declaration) -> rlist(declaration_specifier_no_type) type_specifier_no_typedef_name list(declaration_specifier_no_typedef_name)

State 222:
## Known stack suffix:
## save_context parameter_type_list
## LR(1) items:
context_parameter_type_list -> save_context parameter_type_list . save_context [ RPAREN ]
## Transitions:
-- On save_context shift to state 223
## Default reduction:
-- After reading the next token, reduce production save_context ->

State 223:
## Known stack suffix:
## save_context parameter_type_list save_context
## LR(1) items:
context_parameter_type_list -> save_context parameter_type_list save_context . [ RPAREN ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production context_parameter_type_list -> save_context parameter_type_list save_context

State 224:
## Known stack suffix:
## parameter_list
## LR(1) items:
parameter_list -> parameter_list . COMMA parameter_declaration [ RPAREN COMMA ]
parameter_type_list -> parameter_list . [ RPAREN ]
parameter_type_list -> parameter_list . COMMA ELLIPSIS [ RPAREN ]
## Transitions:
-- On COMMA shift to state 225
## Reductions:
-- On RPAREN reduce production parameter_type_list -> parameter_list

State 225:
## Known stack suffix:
## parameter_list COMMA
## LR(1) items:
parameter_list -> parameter_list COMMA . parameter_declaration [ RPAREN COMMA ]
parameter_type_list -> parameter_list COMMA . ELLIPSIS [ RPAREN ]
## Transitions:
-- On VOLATILE shift to state 1
-- On VOID shift to state 2
-- On UNSIGNED shift to state 3
-- On UNION shift to state 4
-- On UNDERSCORE_BOOL shift to state 5
-- On STRUCT shift to state 8
-- On STATIC shift to state 9
-- On SIGNED shift to state 10
-- On SHORT shift to state 11
-- On RESTRICT shift to state 12
-- On REGISTER shift to state 13
-- On PRE_NAME shift to state 14
-- On PACKED shift to state 16
-- On LONG shift to state 29
-- On INT shift to state 30
-- On INLINE shift to state 192
-- On FLOAT shift to state 33
-- On EXTERN shift to state 193
-- On ENUM shift to state 34
-- On ELLIPSIS shift to state 226
-- On DOUBLE shift to state 54
-- On CONST shift to state 148
-- On CHAR shift to state 55
-- On AUTO shift to state 194
-- On ATTRIBUTE shift to state 35
-- On ALIGNAS shift to state 149
-- On typedef_name shift to state 195
-- On type_specifier_no_typedef_name shift to state 201
-- On type_qualifier_noattr shift to state 209
-- On struct_or_union_specifier shift to state 155
-- On struct_or_union shift to state 156
-- On storage_class_specifier_no_typedef shift to state 210
-- On rlist(declaration_specifier_no_type) shift to state 217
-- On parameter_declaration shift to state 227
-- On function_specifier shift to state 212
-- On enum_specifier shift to state 169
-- On declaration_specifiers(parameter_declaration) shift to state 228
-- On attribute_specifier shift to state 214
## Reductions:

State 226:
## Known stack suffix:
## parameter_list COMMA ELLIPSIS
## LR(1) items:
parameter_type_list -> parameter_list COMMA ELLIPSIS . [ RPAREN ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production parameter_type_list -> parameter_list COMMA ELLIPSIS

State 227:
## Known stack suffix:
## parameter_list COMMA parameter_declaration
## LR(1) items:
parameter_list -> parameter_list COMMA parameter_declaration . [ RPAREN COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production parameter_list -> parameter_list COMMA parameter_declaration

State 228:
## Known stack suffix:
## declaration_specifiers(parameter_declaration)
## LR(1) items:
parameter_declaration -> declaration_specifiers(parameter_declaration) . declare_varname(declarator) [ RPAREN COMMA ]
parameter_declaration -> declaration_specifiers(parameter_declaration) . option(abstract_declarator(parameter_declaration)) [ RPAREN COMMA ]
## Transitions:
-- On PRE_NAME shift to state 178
-- On LPAREN shift to state 229
-- On option(direct_abstract_declarator) shift to state 233
-- On option(abstract_declarator(parameter_declaration)) shift to state 265
-- On list(pointer1) shift to state 266
-- On direct_declarator shift to state 250
-- On direct_abstract_declarator shift to state 270
-- On declare_varname(declarator) shift to state 271
-- On declarator_noattrend shift to state 255
-- On declarator_identifier shift to state 249
-- On declarator shift to state 272
-- On abstract_declarator(parameter_declaration) shift to state 273
## Reductions:
-- On STAR reduce production list(pointer1) ->
-- On RPAREN reduce production option(abstract_declarator(parameter_declaration)) ->
-- On LBRACK reduce production option(direct_abstract_declarator) ->
-- On COMMA reduce production option(abstract_declarator(parameter_declaration)) ->

State 229:
## Known stack suffix:
## LPAREN
## LR(1) items:
direct_abstract_declarator -> LPAREN . save_context abstract_declarator(type_name) RPAREN [ RPAREN LPAREN LBRACK COMMA ]
direct_abstract_declarator -> LPAREN . option(context_parameter_type_list) RPAREN [ RPAREN LPAREN LBRACK COMMA ]
direct_declarator -> LPAREN . save_context declarator RPAREN [ RPAREN PACKED LPAREN LBRACK COMMA ATTRIBUTE ALIGNAS ]
## Transitions:
-- On save_context shift to state 230
-- On option(context_parameter_type_list) shift to state 263
-- On context_parameter_type_list shift to state 248
## Reductions:
-- On VOLATILE reduce production save_context ->
-- On VOID reduce production save_context ->
-- On UNSIGNED reduce production save_context ->
-- On UNION reduce production save_context ->
-- On UNDERSCORE_BOOL reduce production save_context ->
-- On STRUCT reduce production save_context ->
-- On STATIC reduce production save_context ->
-- On STAR reduce production save_context ->
-- On SIGNED reduce production save_context ->
-- On SHORT reduce production save_context ->
-- On RPAREN reduce production option(context_parameter_type_list) ->
-- On RESTRICT reduce production save_context ->
-- On REGISTER reduce production save_context ->
-- On PRE_NAME reduce production save_context ->
-- On PACKED reduce production save_context ->
-- On LPAREN reduce production save_context ->
-- On LONG reduce production save_context ->
-- On LBRACK reduce production save_context ->
-- On INT reduce production save_context ->
-- On INLINE reduce production save_context ->
-- On FLOAT reduce production save_context ->
-- On EXTERN reduce production save_context ->
-- On ENUM reduce production save_context ->
-- On DOUBLE reduce production save_context ->
-- On CONST reduce production save_context ->
-- On CHAR reduce production save_context ->
-- On AUTO reduce production save_context ->
-- On ATTRIBUTE reduce production save_context ->
-- On ALIGNAS reduce production save_context ->

State 230:
## Known stack suffix:
## LPAREN save_context
## LR(1) items:
context_parameter_type_list -> save_context . parameter_type_list save_context [ RPAREN ]
direct_abstract_declarator -> LPAREN save_context . abstract_declarator(type_name) RPAREN [ RPAREN LPAREN LBRACK COMMA ]
direct_declarator -> LPAREN save_context . declarator RPAREN [ RPAREN PACKED LPAREN LBRACK COMMA ATTRIBUTE ALIGNAS ]
## Transitions:
-- On VOLATILE shift to state 1
-- On VOID shift to state 2
-- On UNSIGNED shift to state 3
-- On UNION shift to state 4
-- On UNDERSCORE_BOOL shift to state 5
-- On STRUCT shift to state 8
-- On STATIC shift to state 9
-- On SIGNED shift to state 10
-- On SHORT shift to state 11
-- On RESTRICT shift to state 12
-- On REGISTER shift to state 13
-- On PRE_NAME shift to state 231
-- On PACKED shift to state 16
-- On LPAREN shift to state 229
-- On LONG shift to state 29
-- On INT shift to state 30
-- On INLINE shift to state 192
-- On FLOAT shift to state 33
-- On EXTERN shift to state 193
-- On ENUM shift to state 34
-- On DOUBLE shift to state 54
-- On CONST shift to state 148
-- On CHAR shift to state 55
-- On AUTO shift to state 194
-- On ATTRIBUTE shift to state 35
-- On ALIGNAS shift to state 149
-- On typedef_name shift to state 195
-- On type_specifier_no_typedef_name shift to state 201
-- On type_qualifier_noattr shift to state 209
-- On struct_or_union_specifier shift to state 155
-- On struct_or_union shift to state 156
-- On storage_class_specifier_no_typedef shift to state 210
-- On rlist(declaration_specifier_no_type) shift to state 217
-- On parameter_type_list shift to state 222
-- On parameter_list shift to state 224
-- On parameter_declaration shift to state 232
-- On option(direct_abstract_declarator) shift to state 233
-- On list(pointer1) shift to state 240
-- On function_specifier shift to state 212
-- On enum_specifier shift to state 169
-- On direct_declarator shift to state 250
-- On direct_abstract_declarator shift to state 254
-- On declarator_noattrend shift to state 255
-- On declarator_identifier shift to state 249
-- On declarator shift to state 259
-- On declaration_specifiers(parameter_declaration) shift to state 228
-- On attribute_specifier shift to state 214
-- On abstract_declarator(type_name) shift to state 261
## Reductions:
-- On STAR reduce production list(pointer1) ->
-- On LBRACK reduce production option(direct_abstract_declarator) ->

State 231:
## Known stack suffix:
## PRE_NAME
## LR(1) items:
declarator_identifier -> PRE_NAME . low_prec TYPEDEF_NAME [ RPAREN PACKED LPAREN LBRACK ATTRIBUTE ALIGNAS ]
declarator_identifier -> PRE_NAME . VAR_NAME [ RPAREN PACKED LPAREN LBRACK ATTRIBUTE ALIGNAS ]
typedef_name -> PRE_NAME . TYPEDEF_NAME [ VOLATILE STATIC STAR RPAREN RESTRICT REGISTER PRE_NAME PACKED LPAREN LBRACK INLINE EXTERN CONST COMMA AUTO ATTRIBUTE ALIGNAS ]
## Transitions:
-- On VAR_NAME shift to state 179
-- On TYPEDEF_NAME shift to state 15
-- On low_prec shift to state 180
## Reductions:

State 232:
## Known stack suffix:
## parameter_declaration
## LR(1) items:
parameter_list -> parameter_declaration . [ RPAREN COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production parameter_list -> parameter_declaration

State 233:
## Known stack suffix:
## option(direct_abstract_declarator)
## LR(1) items:
direct_abstract_declarator -> option(direct_abstract_declarator) . LBRACK option(type_qualifier_list) optional(assignment_expression,RBRACK) [ RPAREN LPAREN LBRACK COMMA ]
## Transitions:
-- On LBRACK shift to state 234
## Reductions:

State 234:
## Known stack suffix:
## option(direct_abstract_declarator) LBRACK
## LR(1) items:
direct_abstract_declarator -> option(direct_abstract_declarator) LBRACK . option(type_qualifier_list) optional(assignment_expression,RBRACK) [ RPAREN LPAREN LBRACK COMMA ]
## Transitions:
-- On type_qualifier_list shift to state 146
-- On option(type_qualifier_list) shift to state 235
## Default reduction:
-- After reading the next token, reduce production option(type_qualifier_list) ->

State 235:
## Known stack suffix:
## option(direct_abstract_declarator) LBRACK option(type_qualifier_list)
## LR(1) items:
direct_abstract_declarator -> option(direct_abstract_declarator) LBRACK option(type_qualifier_list) . optional(assignment_expression,RBRACK) [ RPAREN LPAREN LBRACK COMMA ]
type_qualifier_list -> option(type_qualifier_list) . type_qualifier_noattr [ VOLATILE TILDE STRING_LITERAL STAR SIZEOF RESTRICT RBRACK PRE_NAME PLUS PACKED MINUS LPAREN INC DEC CONSTANT CONST BUILTIN_VA_ARG BANG ATTRIBUTE AND ALIGNOF ALIGNAS ]
type_qualifier_list -> option(type_qualifier_list) . attribute_specifier [ VOLATILE TILDE STRING_LITERAL STAR SIZEOF RESTRICT RBRACK PRE_NAME PLUS PACKED MINUS LPAREN INC DEC CONSTANT CONST BUILTIN_VA_ARG BANG ATTRIBUTE AND ALIGNOF ALIGNAS ]
## Transitions:
-- On VOLATILE shift to state 1
-- On TILDE shift to state 18
-- On STRING_LITERAL shift to state 19
-- On STAR shift to state 20
-- On SIZEOF shift to state 21
-- On RESTRICT shift to state 12
-- On RBRACK shift to state 236
-- On PRE_NAME shift to state 22
-- On PLUS shift to state 24
-- On PACKED shift to state 16
-- On MINUS shift to state 25
-- On LPAREN shift to state 28
-- On INC shift to state 31
-- On DEC shift to state 46
-- On CONSTANT shift to state 47
-- On CONST shift to state 148
-- On BUILTIN_VA_ARG shift to state 48
-- On BANG shift to state 50
-- On ATTRIBUTE shift to state 35
-- On AND shift to state 51
-- On ALIGNOF shift to state 52
-- On ALIGNAS shift to state 149
-- On unary_operator shift to state 56
-- On unary_expression shift to state 65
-- On type_qualifier_noattr shift to state 164
-- On string_literals_list shift to state 58
-- On shift_expression shift to state 78
-- On relational_expression shift to state 94
-- On primary_expression shift to state 60
-- On postfix_expression shift to state 61
-- On optional(assignment_expression,RBRACK) shift to state 237
-- On multiplicative_expression shift to state 82
-- On logical_or_expression shift to state 102
-- On logical_and_expression shift to state 104
-- On inclusive_or_expression shift to state 120
-- On exclusive_or_expression shift to state 119
-- On equality_expression shift to state 110
-- On conditional_expression shift to state 123
-- On cast_expression shift to state 88
-- On attribute_specifier shift to state 165
-- On assignment_expression shift to state 238
-- On and_expression shift to state 118
-- On additive_expression shift to state 101
## Reductions:

State 236:
## Known stack suffix:
## RBRACK
## LR(1) items:
optional(assignment_expression,RBRACK) -> RBRACK . [ VOLATILE VOID UNSIGNED UNION UNDERSCORE_BOOL STRUCT STATIC SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER PRE_NAME PACKED LPAREN LONG LBRACK LBRACE INT INLINE FLOAT EXTERN EQ ENUM DOUBLE CONST COMMA COLON CHAR AUTO ATTRIBUTE ALIGNAS ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production optional(assignment_expression,RBRACK) -> RBRACK

State 237:
## Known stack suffix:
## option(direct_abstract_declarator) LBRACK option(type_qualifier_list) optional(assignment_expression,RBRACK)
## LR(1) items:
direct_abstract_declarator -> option(direct_abstract_declarator) LBRACK option(type_qualifier_list) optional(assignment_expression,RBRACK) . [ RPAREN LPAREN LBRACK COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production direct_abstract_declarator -> option(direct_abstract_declarator) LBRACK option(type_qualifier_list) optional(assignment_expression,RBRACK)

State 238:
## Known stack suffix:
## assignment_expression
## LR(1) items:
optional(assignment_expression,RBRACK) -> assignment_expression . RBRACK [ VOLATILE VOID UNSIGNED UNION UNDERSCORE_BOOL STRUCT STATIC SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER PRE_NAME PACKED LPAREN LONG LBRACK LBRACE INT INLINE FLOAT EXTERN EQ ENUM DOUBLE CONST COMMA COLON CHAR AUTO ATTRIBUTE ALIGNAS ]
## Transitions:
-- On RBRACK shift to state 239
## Reductions:

State 239:
## Known stack suffix:
## assignment_expression RBRACK
## LR(1) items:
optional(assignment_expression,RBRACK) -> assignment_expression RBRACK . [ VOLATILE VOID UNSIGNED UNION UNDERSCORE_BOOL STRUCT STATIC SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER PRE_NAME PACKED LPAREN LONG LBRACK LBRACE INT INLINE FLOAT EXTERN EQ ENUM DOUBLE CONST COMMA COLON CHAR AUTO ATTRIBUTE ALIGNAS ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production optional(assignment_expression,RBRACK) -> assignment_expression RBRACK

State 240:
## Known stack suffix:
## list(pointer1)
## LR(1) items:
abstract_declarator(type_name) -> list(pointer1) . STAR option(type_qualifier_list) [ RPAREN ]
abstract_declarator(type_name) -> list(pointer1) . STAR option(type_qualifier_list) direct_abstract_declarator [ RPAREN ]
declarator_noattrend -> list(pointer1) . STAR option(type_qualifier_list) direct_declarator [ RPAREN PACKED ATTRIBUTE ALIGNAS ]
list(pointer1) -> list(pointer1) . STAR option(type_qualifier_list) [ STAR ]
## Transitions:
-- On STAR shift to state 241
## Reductions:

State 241:
## Known stack suffix:
## list(pointer1) STAR
## LR(1) items:
abstract_declarator(type_name) -> list(pointer1) STAR . option(type_qualifier_list) [ RPAREN ]
abstract_declarator(type_name) -> list(pointer1) STAR . option(type_qualifier_list) direct_abstract_declarator [ RPAREN ]
declarator_noattrend -> list(pointer1) STAR . option(type_qualifier_list) direct_declarator [ RPAREN PACKED ATTRIBUTE ALIGNAS ]
list(pointer1) -> list(pointer1) STAR . option(type_qualifier_list) [ STAR ]
## Transitions:
-- On type_qualifier_list shift to state 146
-- On option(type_qualifier_list) shift to state 242
## Default reduction:
-- After reading the next token, reduce production option(type_qualifier_list) ->

State 242:
## Known stack suffix:
## list(pointer1) STAR option(type_qualifier_list)
## LR(1) items:
abstract_declarator(type_name) -> list(pointer1) STAR option(type_qualifier_list) . [ RPAREN ]
abstract_declarator(type_name) -> list(pointer1) STAR option(type_qualifier_list) . direct_abstract_declarator [ RPAREN ]
declarator_noattrend -> list(pointer1) STAR option(type_qualifier_list) . direct_declarator [ RPAREN PACKED ATTRIBUTE ALIGNAS ]
list(pointer1) -> list(pointer1) STAR option(type_qualifier_list) . [ STAR ]
type_qualifier_list -> option(type_qualifier_list) . type_qualifier_noattr [ VOLATILE STAR RPAREN RESTRICT PRE_NAME PACKED LPAREN LBRACK CONST ATTRIBUTE ALIGNAS ]
type_qualifier_list -> option(type_qualifier_list) . attribute_specifier [ VOLATILE STAR RPAREN RESTRICT PRE_NAME PACKED LPAREN LBRACK CONST ATTRIBUTE ALIGNAS ]
## Transitions:
-- On VOLATILE shift to state 1
-- On RESTRICT shift to state 12
-- On PRE_NAME shift to state 178
-- On PACKED shift to state 16
-- On LPAREN shift to state 229
-- On CONST shift to state 148
-- On ATTRIBUTE shift to state 35
-- On ALIGNAS shift to state 149
-- On type_qualifier_noattr shift to state 164
-- On option(direct_abstract_declarator) shift to state 233
-- On direct_declarator shift to state 187
-- On direct_abstract_declarator shift to state 243
-- On declarator_identifier shift to state 249
-- On attribute_specifier shift to state 165
## Reductions:
-- On XOR_ASSIGN reduce production abstract_declarator(type_name) -> list(pointer1) STAR option(type_qualifier_list)
-- On WHILE reduce production abstract_declarator(type_name) -> list(pointer1) STAR option(type_qualifier_list)
-- On VOID reduce production abstract_declarator(type_name) -> list(pointer1) STAR option(type_qualifier_list)
-- On VAR_NAME reduce production abstract_declarator(type_name) -> list(pointer1) STAR option(type_qualifier_list)
-- On UNSIGNED reduce production abstract_declarator(type_name) -> list(pointer1) STAR option(type_qualifier_list)
-- On UNION reduce production abstract_declarator(type_name) -> list(pointer1) STAR option(type_qualifier_list)
-- On UNDERSCORE_BOOL reduce production abstract_declarator(type_name) -> list(pointer1) STAR option(type_qualifier_list)
-- On TYPEDEF_NAME reduce production abstract_declarator(type_name) -> list(pointer1) STAR option(type_qualifier_list)
-- On TYPEDEF reduce production abstract_declarator(type_name) -> list(pointer1) STAR option(type_qualifier_list)
-- On TILDE reduce production abstract_declarator(type_name) -> list(pointer1) STAR option(type_qualifier_list)
-- On SWITCH reduce production abstract_declarator(type_name) -> list(pointer1) STAR option(type_qualifier_list)
-- On SUB_ASSIGN reduce production abstract_declarator(type_name) -> list(pointer1) STAR option(type_qualifier_list)
-- On STRUCT reduce production abstract_declarator(type_name) -> list(pointer1) STAR option(type_qualifier_list)
-- On STRING_LITERAL reduce production abstract_declarator(type_name) -> list(pointer1) STAR option(type_qualifier_list)
-- On STATIC reduce production abstract_declarator(type_name) -> list(pointer1) STAR option(type_qualifier_list)
-- On STAR reduce production list(pointer1) -> list(pointer1) STAR option(type_qualifier_list)
-- On SLASH reduce production abstract_declarator(type_name) -> list(pointer1) STAR option(type_qualifier_list)
-- On SIZEOF reduce production abstract_declarator(type_name) -> list(pointer1) STAR option(type_qualifier_list)
-- On SIGNED reduce production abstract_declarator(type_name) -> list(pointer1) STAR option(type_qualifier_list)
-- On SHORT reduce production abstract_declarator(type_name) -> list(pointer1) STAR option(type_qualifier_list)
-- On SEMICOLON reduce production abstract_declarator(type_name) -> list(pointer1) STAR option(type_qualifier_list)
-- On RPAREN reduce production abstract_declarator(type_name) -> list(pointer1) STAR option(type_qualifier_list)
-- On RIGHT_ASSIGN reduce production abstract_declarator(type_name) -> list(pointer1) STAR option(type_qualifier_list)
-- On RIGHT reduce production abstract_declarator(type_name) -> list(pointer1) STAR option(type_qualifier_list)
-- On RETURN reduce production abstract_declarator(type_name) -> list(pointer1) STAR option(type_qualifier_list)
-- On REGISTER reduce production abstract_declarator(type_name) -> list(pointer1) STAR option(type_qualifier_list)
-- On RBRACK reduce production abstract_declarator(type_name) -> list(pointer1) STAR option(type_qualifier_list)
-- On RBRACE reduce production abstract_declarator(type_name) -> list(pointer1) STAR option(type_qualifier_list)
-- On QUESTION reduce production abstract_declarator(type_name) -> list(pointer1) STAR option(type_qualifier_list)
-- On PTR reduce production abstract_declarator(type_name) -> list(pointer1) STAR option(type_qualifier_list)
-- On PRAGMA reduce production abstract_declarator(type_name) -> list(pointer1) STAR option(type_qualifier_list)
-- On PLUS reduce production abstract_declarator(type_name) -> list(pointer1) STAR option(type_qualifier_list)
-- On PERCENT reduce production abstract_declarator(type_name) -> list(pointer1) STAR option(type_qualifier_list)
-- On OR_ASSIGN reduce production abstract_declarator(type_name) -> list(pointer1) STAR option(type_qualifier_list)
-- On NEQ reduce production abstract_declarator(type_name) -> list(pointer1) STAR option(type_qualifier_list)
-- On MUL_ASSIGN reduce production abstract_declarator(type_name) -> list(pointer1) STAR option(type_qualifier_list)
-- On MOD_ASSIGN reduce production abstract_declarator(type_name) -> list(pointer1) STAR option(type_qualifier_list)
-- On MINUS reduce production abstract_declarator(type_name) -> list(pointer1) STAR option(type_qualifier_list)
-- On LT reduce production abstract_declarator(type_name) -> list(pointer1) STAR option(type_qualifier_list)
-- On LONG reduce production abstract_declarator(type_name) -> list(pointer1) STAR option(type_qualifier_list)
-- On LEQ reduce production abstract_declarator(type_name) -> list(pointer1) STAR option(type_qualifier_list)
-- On LEFT_ASSIGN reduce production abstract_declarator(type_name) -> list(pointer1) STAR option(type_qualifier_list)
-- On LEFT reduce production abstract_declarator(type_name) -> list(pointer1) STAR option(type_qualifier_list)
-- On LBRACK reduce production option(direct_abstract_declarator) ->
-- On LBRACE reduce production abstract_declarator(type_name) -> list(pointer1) STAR option(type_qualifier_list)
-- On INT reduce production abstract_declarator(type_name) -> list(pointer1) STAR option(type_qualifier_list)
-- On INLINE reduce production abstract_declarator(type_name) -> list(pointer1) STAR option(type_qualifier_list)
-- On INC reduce production abstract_declarator(type_name) -> list(pointer1) STAR option(type_qualifier_list)
-- On IF reduce production abstract_declarator(type_name) -> list(pointer1) STAR option(type_qualifier_list)
-- On HAT reduce production abstract_declarator(type_name) -> list(pointer1) STAR option(type_qualifier_list)
-- On GT reduce production abstract_declarator(type_name) -> list(pointer1) STAR option(type_qualifier_list)
-- On GOTO reduce production abstract_declarator(type_name) -> list(pointer1) STAR option(type_qualifier_list)
-- On GEQ reduce production abstract_declarator(type_name) -> list(pointer1) STAR option(type_qualifier_list)
-- On FOR reduce production abstract_declarator(type_name) -> list(pointer1) STAR option(type_qualifier_list)
-- On FLOAT reduce production abstract_declarator(type_name) -> list(pointer1) STAR option(type_qualifier_list)
-- On EXTERN reduce production abstract_declarator(type_name) -> list(pointer1) STAR option(type_qualifier_list)
-- On EQEQ reduce production abstract_declarator(type_name) -> list(pointer1) STAR option(type_qualifier_list)
-- On EQ reduce production abstract_declarator(type_name) -> list(pointer1) STAR option(type_qualifier_list)
-- On EOF reduce production abstract_declarator(type_name) -> list(pointer1) STAR option(type_qualifier_list)
-- On ENUM reduce production abstract_declarator(type_name) -> list(pointer1) STAR option(type_qualifier_list)
-- On ELSE reduce production abstract_declarator(type_name) -> list(pointer1) STAR option(type_qualifier_list)
-- On ELLIPSIS reduce production abstract_declarator(type_name) -> list(pointer1) STAR option(type_qualifier_list)
-- On DOUBLE reduce production abstract_declarator(type_name) -> list(pointer1) STAR option(type_qualifier_list)
-- On DOT reduce production abstract_declarator(type_name) -> list(pointer1) STAR option(type_qualifier_list)
-- On DO reduce production abstract_declarator(type_name) -> list(pointer1) STAR option(type_qualifier_list)
-- On DIV_ASSIGN reduce production abstract_declarator(type_name) -> list(pointer1) STAR option(type_qualifier_list)
-- On DEFAULT reduce production abstract_declarator(type_name) -> list(pointer1) STAR option(type_qualifier_list)
-- On DEC reduce production abstract_declarator(type_name) -> list(pointer1) STAR option(type_qualifier_list)
-- On CONTINUE reduce production abstract_declarator(type_name) -> list(pointer1) STAR option(type_qualifier_list)
-- On CONSTANT reduce production abstract_declarator(type_name) -> list(pointer1) STAR option(type_qualifier_list)
-- On COMMA reduce production abstract_declarator(type_name) -> list(pointer1) STAR option(type_qualifier_list)
-- On COLON reduce production abstract_declarator(type_name) -> list(pointer1) STAR option(type_qualifier_list)
-- On CHAR reduce production abstract_declarator(type_name) -> list(pointer1) STAR option(type_qualifier_list)
-- On CASE reduce production abstract_declarator(type_name) -> list(pointer1) STAR option(type_qualifier_list)
-- On BUILTIN_VA_ARG reduce production abstract_declarator(type_name) -> list(pointer1) STAR option(type_qualifier_list)
-- On BREAK reduce production abstract_declarator(type_name) -> list(pointer1) STAR option(type_qualifier_list)
-- On BARBAR reduce production abstract_declarator(type_name) -> list(pointer1) STAR option(type_qualifier_list)
-- On BAR reduce production abstract_declarator(type_name) -> list(pointer1) STAR option(type_qualifier_list)
-- On BANG reduce production abstract_declarator(type_name) -> list(pointer1) STAR option(type_qualifier_list)
-- On AUTO reduce production abstract_declarator(type_name) -> list(pointer1) STAR option(type_qualifier_list)
-- On ASM reduce production abstract_declarator(type_name) -> list(pointer1) STAR option(type_qualifier_list)
-- On AND_ASSIGN reduce production abstract_declarator(type_name) -> list(pointer1) STAR option(type_qualifier_list)
-- On ANDAND reduce production abstract_declarator(type_name) -> list(pointer1) STAR option(type_qualifier_list)
-- On AND reduce production abstract_declarator(type_name) -> list(pointer1) STAR option(type_qualifier_list)
-- On ALIGNOF reduce production abstract_declarator(type_name) -> list(pointer1) STAR option(type_qualifier_list)
-- On ADD_ASSIGN reduce production abstract_declarator(type_name) -> list(pointer1) STAR option(type_qualifier_list)

State 243:
## Known stack suffix:
## list(pointer1) STAR option(type_qualifier_list) direct_abstract_declarator
## LR(1) items:
abstract_declarator(type_name) -> list(pointer1) STAR option(type_qualifier_list) direct_abstract_declarator . [ RPAREN ]
direct_abstract_declarator -> direct_abstract_declarator . LPAREN option(context_parameter_type_list) RPAREN [ RPAREN LPAREN LBRACK ]
option(direct_abstract_declarator) -> direct_abstract_declarator . [ LBRACK ]
## Transitions:
-- On LPAREN shift to state 244
## Reductions:
-- On XOR_ASSIGN reduce production abstract_declarator(type_name) -> list(pointer1) STAR option(type_qualifier_list) direct_abstract_declarator
-- On WHILE reduce production abstract_declarator(type_name) -> list(pointer1) STAR option(type_qualifier_list) direct_abstract_declarator
-- On VOLATILE reduce production abstract_declarator(type_name) -> list(pointer1) STAR option(type_qualifier_list) direct_abstract_declarator
-- On VOID reduce production abstract_declarator(type_name) -> list(pointer1) STAR option(type_qualifier_list) direct_abstract_declarator
-- On VAR_NAME reduce production abstract_declarator(type_name) -> list(pointer1) STAR option(type_qualifier_list) direct_abstract_declarator
-- On UNSIGNED reduce production abstract_declarator(type_name) -> list(pointer1) STAR option(type_qualifier_list) direct_abstract_declarator
-- On UNION reduce production abstract_declarator(type_name) -> list(pointer1) STAR option(type_qualifier_list) direct_abstract_declarator
-- On UNDERSCORE_BOOL reduce production abstract_declarator(type_name) -> list(pointer1) STAR option(type_qualifier_list) direct_abstract_declarator
-- On TYPEDEF_NAME reduce production abstract_declarator(type_name) -> list(pointer1) STAR option(type_qualifier_list) direct_abstract_declarator
-- On TYPEDEF reduce production abstract_declarator(type_name) -> list(pointer1) STAR option(type_qualifier_list) direct_abstract_declarator
-- On TILDE reduce production abstract_declarator(type_name) -> list(pointer1) STAR option(type_qualifier_list) direct_abstract_declarator
-- On SWITCH reduce production abstract_declarator(type_name) -> list(pointer1) STAR option(type_qualifier_list) direct_abstract_declarator
-- On SUB_ASSIGN reduce production abstract_declarator(type_name) -> list(pointer1) STAR option(type_qualifier_list) direct_abstract_declarator
-- On STRUCT reduce production abstract_declarator(type_name) -> list(pointer1) STAR option(type_qualifier_list) direct_abstract_declarator
-- On STRING_LITERAL reduce production abstract_declarator(type_name) -> list(pointer1) STAR option(type_qualifier_list) direct_abstract_declarator
-- On STATIC reduce production abstract_declarator(type_name) -> list(pointer1) STAR option(type_qualifier_list) direct_abstract_declarator
-- On STAR reduce production abstract_declarator(type_name) -> list(pointer1) STAR option(type_qualifier_list) direct_abstract_declarator
-- On SLASH reduce production abstract_declarator(type_name) -> list(pointer1) STAR option(type_qualifier_list) direct_abstract_declarator
-- On SIZEOF reduce production abstract_declarator(type_name) -> list(pointer1) STAR option(type_qualifier_list) direct_abstract_declarator
-- On SIGNED reduce production abstract_declarator(type_name) -> list(pointer1) STAR option(type_qualifier_list) direct_abstract_declarator
-- On SHORT reduce production abstract_declarator(type_name) -> list(pointer1) STAR option(type_qualifier_list) direct_abstract_declarator
-- On SEMICOLON reduce production abstract_declarator(type_name) -> list(pointer1) STAR option(type_qualifier_list) direct_abstract_declarator
-- On RPAREN reduce production abstract_declarator(type_name) -> list(pointer1) STAR option(type_qualifier_list) direct_abstract_declarator
-- On RIGHT_ASSIGN reduce production abstract_declarator(type_name) -> list(pointer1) STAR option(type_qualifier_list) direct_abstract_declarator
-- On RIGHT reduce production abstract_declarator(type_name) -> list(pointer1) STAR option(type_qualifier_list) direct_abstract_declarator
-- On RETURN reduce production abstract_declarator(type_name) -> list(pointer1) STAR option(type_qualifier_list) direct_abstract_declarator
-- On RESTRICT reduce production abstract_declarator(type_name) -> list(pointer1) STAR option(type_qualifier_list) direct_abstract_declarator
-- On REGISTER reduce production abstract_declarator(type_name) -> list(pointer1) STAR option(type_qualifier_list) direct_abstract_declarator
-- On RBRACK reduce production abstract_declarator(type_name) -> list(pointer1) STAR option(type_qualifier_list) direct_abstract_declarator
-- On RBRACE reduce production abstract_declarator(type_name) -> list(pointer1) STAR option(type_qualifier_list) direct_abstract_declarator
-- On QUESTION reduce production abstract_declarator(type_name) -> list(pointer1) STAR option(type_qualifier_list) direct_abstract_declarator
-- On PTR reduce production abstract_declarator(type_name) -> list(pointer1) STAR option(type_qualifier_list) direct_abstract_declarator
-- On PRE_NAME reduce production abstract_declarator(type_name) -> list(pointer1) STAR option(type_qualifier_list) direct_abstract_declarator
-- On PRAGMA reduce production abstract_declarator(type_name) -> list(pointer1) STAR option(type_qualifier_list) direct_abstract_declarator
-- On PLUS reduce production abstract_declarator(type_name) -> list(pointer1) STAR option(type_qualifier_list) direct_abstract_declarator
-- On PERCENT reduce production abstract_declarator(type_name) -> list(pointer1) STAR option(type_qualifier_list) direct_abstract_declarator
-- On PACKED reduce production abstract_declarator(type_name) -> list(pointer1) STAR option(type_qualifier_list) direct_abstract_declarator
-- On OR_ASSIGN reduce production abstract_declarator(type_name) -> list(pointer1) STAR option(type_qualifier_list) direct_abstract_declarator
-- On NEQ reduce production abstract_declarator(type_name) -> list(pointer1) STAR option(type_qualifier_list) direct_abstract_declarator
-- On MUL_ASSIGN reduce production abstract_declarator(type_name) -> list(pointer1) STAR option(type_qualifier_list) direct_abstract_declarator
-- On MOD_ASSIGN reduce production abstract_declarator(type_name) -> list(pointer1) STAR option(type_qualifier_list) direct_abstract_declarator
-- On MINUS reduce production abstract_declarator(type_name) -> list(pointer1) STAR option(type_qualifier_list) direct_abstract_declarator
-- On LT reduce production abstract_declarator(type_name) -> list(pointer1) STAR option(type_qualifier_list) direct_abstract_declarator
-- On LONG reduce production abstract_declarator(type_name) -> list(pointer1) STAR option(type_qualifier_list) direct_abstract_declarator
-- On LEQ reduce production abstract_declarator(type_name) -> list(pointer1) STAR option(type_qualifier_list) direct_abstract_declarator
-- On LEFT_ASSIGN reduce production abstract_declarator(type_name) -> list(pointer1) STAR option(type_qualifier_list) direct_abstract_declarator
-- On LEFT reduce production abstract_declarator(type_name) -> list(pointer1) STAR option(type_qualifier_list) direct_abstract_declarator
-- On LBRACK reduce production option(direct_abstract_declarator) -> direct_abstract_declarator
-- On LBRACE reduce production abstract_declarator(type_name) -> list(pointer1) STAR option(type_qualifier_list) direct_abstract_declarator
-- On INT reduce production abstract_declarator(type_name) -> list(pointer1) STAR option(type_qualifier_list) direct_abstract_declarator
-- On INLINE reduce production abstract_declarator(type_name) -> list(pointer1) STAR option(type_qualifier_list) direct_abstract_declarator
-- On INC reduce production abstract_declarator(type_name) -> list(pointer1) STAR option(type_qualifier_list) direct_abstract_declarator
-- On IF reduce production abstract_declarator(type_name) -> list(pointer1) STAR option(type_qualifier_list) direct_abstract_declarator
-- On HAT reduce production abstract_declarator(type_name) -> list(pointer1) STAR option(type_qualifier_list) direct_abstract_declarator
-- On GT reduce production abstract_declarator(type_name) -> list(pointer1) STAR option(type_qualifier_list) direct_abstract_declarator
-- On GOTO reduce production abstract_declarator(type_name) -> list(pointer1) STAR option(type_qualifier_list) direct_abstract_declarator
-- On GEQ reduce production abstract_declarator(type_name) -> list(pointer1) STAR option(type_qualifier_list) direct_abstract_declarator
-- On FOR reduce production abstract_declarator(type_name) -> list(pointer1) STAR option(type_qualifier_list) direct_abstract_declarator
-- On FLOAT reduce production abstract_declarator(type_name) -> list(pointer1) STAR option(type_qualifier_list) direct_abstract_declarator
-- On EXTERN reduce production abstract_declarator(type_name) -> list(pointer1) STAR option(type_qualifier_list) direct_abstract_declarator
-- On EQEQ reduce production abstract_declarator(type_name) -> list(pointer1) STAR option(type_qualifier_list) direct_abstract_declarator
-- On EQ reduce production abstract_declarator(type_name) -> list(pointer1) STAR option(type_qualifier_list) direct_abstract_declarator
-- On EOF reduce production abstract_declarator(type_name) -> list(pointer1) STAR option(type_qualifier_list) direct_abstract_declarator
-- On ENUM reduce production abstract_declarator(type_name) -> list(pointer1) STAR option(type_qualifier_list) direct_abstract_declarator
-- On ELSE reduce production abstract_declarator(type_name) -> list(pointer1) STAR option(type_qualifier_list) direct_abstract_declarator
-- On ELLIPSIS reduce production abstract_declarator(type_name) -> list(pointer1) STAR option(type_qualifier_list) direct_abstract_declarator
-- On DOUBLE reduce production abstract_declarator(type_name) -> list(pointer1) STAR option(type_qualifier_list) direct_abstract_declarator
-- On DOT reduce production abstract_declarator(type_name) -> list(pointer1) STAR option(type_qualifier_list) direct_abstract_declarator
-- On DO reduce production abstract_declarator(type_name) -> list(pointer1) STAR option(type_qualifier_list) direct_abstract_declarator
-- On DIV_ASSIGN reduce production abstract_declarator(type_name) -> list(pointer1) STAR option(type_qualifier_list) direct_abstract_declarator
-- On DEFAULT reduce production abstract_declarator(type_name) -> list(pointer1) STAR option(type_qualifier_list) direct_abstract_declarator
-- On DEC reduce production abstract_declarator(type_name) -> list(pointer1) STAR option(type_qualifier_list) direct_abstract_declarator
-- On CONTINUE reduce production abstract_declarator(type_name) -> list(pointer1) STAR option(type_qualifier_list) direct_abstract_declarator
-- On CONSTANT reduce production abstract_declarator(type_name) -> list(pointer1) STAR option(type_qualifier_list) direct_abstract_declarator
-- On CONST reduce production abstract_declarator(type_name) -> list(pointer1) STAR option(type_qualifier_list) direct_abstract_declarator
-- On COMMA reduce production abstract_declarator(type_name) -> list(pointer1) STAR option(type_qualifier_list) direct_abstract_declarator
-- On COLON reduce production abstract_declarator(type_name) -> list(pointer1) STAR option(type_qualifier_list) direct_abstract_declarator
-- On CHAR reduce production abstract_declarator(type_name) -> list(pointer1) STAR option(type_qualifier_list) direct_abstract_declarator
-- On CASE reduce production abstract_declarator(type_name) -> list(pointer1) STAR option(type_qualifier_list) direct_abstract_declarator
-- On BUILTIN_VA_ARG reduce production abstract_declarator(type_name) -> list(pointer1) STAR option(type_qualifier_list) direct_abstract_declarator
-- On BREAK reduce production abstract_declarator(type_name) -> list(pointer1) STAR option(type_qualifier_list) direct_abstract_declarator
-- On BARBAR reduce production abstract_declarator(type_name) -> list(pointer1) STAR option(type_qualifier_list) direct_abstract_declarator
-- On BAR reduce production abstract_declarator(type_name) -> list(pointer1) STAR option(type_qualifier_list) direct_abstract_declarator
-- On BANG reduce production abstract_declarator(type_name) -> list(pointer1) STAR option(type_qualifier_list) direct_abstract_declarator
-- On AUTO reduce production abstract_declarator(type_name) -> list(pointer1) STAR option(type_qualifier_list) direct_abstract_declarator
-- On ATTRIBUTE reduce production abstract_declarator(type_name) -> list(pointer1) STAR option(type_qualifier_list) direct_abstract_declarator
-- On ASM reduce production abstract_declarator(type_name) -> list(pointer1) STAR option(type_qualifier_list) direct_abstract_declarator
-- On AND_ASSIGN reduce production abstract_declarator(type_name) -> list(pointer1) STAR option(type_qualifier_list) direct_abstract_declarator
-- On ANDAND reduce production abstract_declarator(type_name) -> list(pointer1) STAR option(type_qualifier_list) direct_abstract_declarator
-- On AND reduce production abstract_declarator(type_name) -> list(pointer1) STAR option(type_qualifier_list) direct_abstract_declarator
-- On ALIGNOF reduce production abstract_declarator(type_name) -> list(pointer1) STAR option(type_qualifier_list) direct_abstract_declarator
-- On ALIGNAS reduce production abstract_declarator(type_name) -> list(pointer1) STAR option(type_qualifier_list) direct_abstract_declarator
-- On ADD_ASSIGN reduce production abstract_declarator(type_name) -> list(pointer1) STAR option(type_qualifier_list) direct_abstract_declarator

State 244:
## Known stack suffix:
## direct_abstract_declarator LPAREN
## LR(1) items:
direct_abstract_declarator -> direct_abstract_declarator LPAREN . option(context_parameter_type_list) RPAREN [ RPAREN LPAREN LBRACK COMMA ]
## Transitions:
-- On save_context shift to state 245
-- On option(context_parameter_type_list) shift to state 246
-- On context_parameter_type_list shift to state 248
## Reductions:
-- On VOLATILE reduce production save_context ->
-- On VOID reduce production save_context ->
-- On UNSIGNED reduce production save_context ->
-- On UNION reduce production save_context ->
-- On UNDERSCORE_BOOL reduce production save_context ->
-- On STRUCT reduce production save_context ->
-- On STATIC reduce production save_context ->
-- On SIGNED reduce production save_context ->
-- On SHORT reduce production save_context ->
-- On RPAREN reduce production option(context_parameter_type_list) ->
-- On RESTRICT reduce production save_context ->
-- On REGISTER reduce production save_context ->
-- On PRE_NAME reduce production save_context ->
-- On PACKED reduce production save_context ->
-- On LONG reduce production save_context ->
-- On INT reduce production save_context ->
-- On INLINE reduce production save_context ->
-- On FLOAT reduce production save_context ->
-- On EXTERN reduce production save_context ->
-- On ENUM reduce production save_context ->
-- On DOUBLE reduce production save_context ->
-- On CONST reduce production save_context ->
-- On CHAR reduce production save_context ->
-- On AUTO reduce production save_context ->
-- On ATTRIBUTE reduce production save_context ->
-- On ALIGNAS reduce production save_context ->

State 245:
## Known stack suffix:
## save_context
## LR(1) items:
context_parameter_type_list -> save_context . parameter_type_list save_context [ RPAREN ]
## Transitions:
-- On VOLATILE shift to state 1
-- On VOID shift to state 2
-- On UNSIGNED shift to state 3
-- On UNION shift to state 4
-- On UNDERSCORE_BOOL shift to state 5
-- On STRUCT shift to state 8
-- On STATIC shift to state 9
-- On SIGNED shift to state 10
-- On SHORT shift to state 11
-- On RESTRICT shift to state 12
-- On REGISTER shift to state 13
-- On PRE_NAME shift to state 14
-- On PACKED shift to state 16
-- On LONG shift to state 29
-- On INT shift to state 30
-- On INLINE shift to state 192
-- On FLOAT shift to state 33
-- On EXTERN shift to state 193
-- On ENUM shift to state 34
-- On DOUBLE shift to state 54
-- On CONST shift to state 148
-- On CHAR shift to state 55
-- On AUTO shift to state 194
-- On ATTRIBUTE shift to state 35
-- On ALIGNAS shift to state 149
-- On typedef_name shift to state 195
-- On type_specifier_no_typedef_name shift to state 201
-- On type_qualifier_noattr shift to state 209
-- On struct_or_union_specifier shift to state 155
-- On struct_or_union shift to state 156
-- On storage_class_specifier_no_typedef shift to state 210
-- On rlist(declaration_specifier_no_type) shift to state 217
-- On parameter_type_list shift to state 222
-- On parameter_list shift to state 224
-- On parameter_declaration shift to state 232
-- On function_specifier shift to state 212
-- On enum_specifier shift to state 169
-- On declaration_specifiers(parameter_declaration) shift to state 228
-- On attribute_specifier shift to state 214
## Reductions:

State 246:
## Known stack suffix:
## direct_abstract_declarator LPAREN option(context_parameter_type_list)
## LR(1) items:
direct_abstract_declarator -> direct_abstract_declarator LPAREN option(context_parameter_type_list) . RPAREN [ RPAREN LPAREN LBRACK COMMA ]
## Transitions:
-- On RPAREN shift to state 247
## Reductions:

State 247:
## Known stack suffix:
## direct_abstract_declarator LPAREN option(context_parameter_type_list) RPAREN
## LR(1) items:
direct_abstract_declarator -> direct_abstract_declarator LPAREN option(context_parameter_type_list) RPAREN . [ RPAREN LPAREN LBRACK COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production direct_abstract_declarator -> direct_abstract_declarator LPAREN option(context_parameter_type_list) RPAREN

State 248:
## Known stack suffix:
## context_parameter_type_list
## LR(1) items:
option(context_parameter_type_list) -> context_parameter_type_list . [ RPAREN ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production option(context_parameter_type_list) -> context_parameter_type_list

State 249:
## Known stack suffix:
## declarator_identifier
## LR(1) items:
direct_declarator -> declarator_identifier . [ VOLATILE VOID UNSIGNED UNION UNDERSCORE_BOOL STRUCT STATIC SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER PRE_NAME PACKED LPAREN LONG LBRACK LBRACE INT INLINE FLOAT EXTERN EQ ENUM DOUBLE CONST COMMA COLON CHAR AUTO ATTRIBUTE ALIGNAS ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production direct_declarator -> declarator_identifier

State 250:
## Known stack suffix:
## direct_declarator
## LR(1) items:
declarator_noattrend -> direct_declarator . [ VOLATILE VOID UNSIGNED UNION UNDERSCORE_BOOL STRUCT STATIC SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER PRE_NAME PACKED LONG LBRACE INT INLINE FLOAT EXTERN EQ ENUM DOUBLE CONST COMMA COLON CHAR AUTO ATTRIBUTE ALIGNAS ]
direct_declarator -> direct_declarator . LBRACK option(type_qualifier_list) optional(assignment_expression,RBRACK) [ VOLATILE VOID UNSIGNED UNION UNDERSCORE_BOOL STRUCT STATIC SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER PRE_NAME PACKED LPAREN LONG LBRACK LBRACE INT INLINE FLOAT EXTERN EQ ENUM DOUBLE CONST COMMA COLON CHAR AUTO ATTRIBUTE ALIGNAS ]
direct_declarator -> direct_declarator . LPAREN context_parameter_type_list RPAREN [ VOLATILE VOID UNSIGNED UNION UNDERSCORE_BOOL STRUCT STATIC SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER PRE_NAME PACKED LPAREN LONG LBRACK LBRACE INT INLINE FLOAT EXTERN EQ ENUM DOUBLE CONST COMMA COLON CHAR AUTO ATTRIBUTE ALIGNAS ]
direct_declarator -> direct_declarator . LPAREN save_context option(identifier_list) RPAREN [ VOLATILE VOID UNSIGNED UNION UNDERSCORE_BOOL STRUCT STATIC SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER PRE_NAME PACKED LPAREN LONG LBRACK LBRACE INT INLINE FLOAT EXTERN EQ ENUM DOUBLE CONST COMMA COLON CHAR AUTO ATTRIBUTE ALIGNAS ]
## Transitions:
-- On LPAREN shift to state 188
-- On LBRACK shift to state 251
## Reductions:
-- On XOR_ASSIGN reduce production declarator_noattrend -> direct_declarator
-- On WHILE reduce production declarator_noattrend -> direct_declarator
-- On VOLATILE reduce production declarator_noattrend -> direct_declarator
-- On VOID reduce production declarator_noattrend -> direct_declarator
-- On VAR_NAME reduce production declarator_noattrend -> direct_declarator
-- On UNSIGNED reduce production declarator_noattrend -> direct_declarator
-- On UNION reduce production declarator_noattrend -> direct_declarator
-- On UNDERSCORE_BOOL reduce production declarator_noattrend -> direct_declarator
-- On TYPEDEF_NAME reduce production declarator_noattrend -> direct_declarator
-- On TYPEDEF reduce production declarator_noattrend -> direct_declarator
-- On TILDE reduce production declarator_noattrend -> direct_declarator
-- On SWITCH reduce production declarator_noattrend -> direct_declarator
-- On SUB_ASSIGN reduce production declarator_noattrend -> direct_declarator
-- On STRUCT reduce production declarator_noattrend -> direct_declarator
-- On STRING_LITERAL reduce production declarator_noattrend -> direct_declarator
-- On STATIC reduce production declarator_noattrend -> direct_declarator
-- On STAR reduce production declarator_noattrend -> direct_declarator
-- On SLASH reduce production declarator_noattrend -> direct_declarator
-- On SIZEOF reduce production declarator_noattrend -> direct_declarator
-- On SIGNED reduce production declarator_noattrend -> direct_declarator
-- On SHORT reduce production declarator_noattrend -> direct_declarator
-- On SEMICOLON reduce production declarator_noattrend -> direct_declarator
-- On RPAREN reduce production declarator_noattrend -> direct_declarator
-- On RIGHT_ASSIGN reduce production declarator_noattrend -> direct_declarator
-- On RIGHT reduce production declarator_noattrend -> direct_declarator
-- On RETURN reduce production declarator_noattrend -> direct_declarator
-- On RESTRICT reduce production declarator_noattrend -> direct_declarator
-- On REGISTER reduce production declarator_noattrend -> direct_declarator
-- On RBRACK reduce production declarator_noattrend -> direct_declarator
-- On RBRACE reduce production declarator_noattrend -> direct_declarator
-- On QUESTION reduce production declarator_noattrend -> direct_declarator
-- On PTR reduce production declarator_noattrend -> direct_declarator
-- On PRE_NAME reduce production declarator_noattrend -> direct_declarator
-- On PRAGMA reduce production declarator_noattrend -> direct_declarator
-- On PLUS reduce production declarator_noattrend -> direct_declarator
-- On PERCENT reduce production declarator_noattrend -> direct_declarator
-- On PACKED reduce production declarator_noattrend -> direct_declarator
-- On OR_ASSIGN reduce production declarator_noattrend -> direct_declarator
-- On NEQ reduce production declarator_noattrend -> direct_declarator
-- On MUL_ASSIGN reduce production declarator_noattrend -> direct_declarator
-- On MOD_ASSIGN reduce production declarator_noattrend -> direct_declarator
-- On MINUS reduce production declarator_noattrend -> direct_declarator
-- On LT reduce production declarator_noattrend -> direct_declarator
-- On LONG reduce production declarator_noattrend -> direct_declarator
-- On LEQ reduce production declarator_noattrend -> direct_declarator
-- On LEFT_ASSIGN reduce production declarator_noattrend -> direct_declarator
-- On LEFT reduce production declarator_noattrend -> direct_declarator
-- On LBRACE reduce production declarator_noattrend -> direct_declarator
-- On INT reduce production declarator_noattrend -> direct_declarator
-- On INLINE reduce production declarator_noattrend -> direct_declarator
-- On INC reduce production declarator_noattrend -> direct_declarator
-- On IF reduce production declarator_noattrend -> direct_declarator
-- On HAT reduce production declarator_noattrend -> direct_declarator
-- On GT reduce production declarator_noattrend -> direct_declarator
-- On GOTO reduce production declarator_noattrend -> direct_declarator
-- On GEQ reduce production declarator_noattrend -> direct_declarator
-- On FOR reduce production declarator_noattrend -> direct_declarator
-- On FLOAT reduce production declarator_noattrend -> direct_declarator
-- On EXTERN reduce production declarator_noattrend -> direct_declarator
-- On EQEQ reduce production declarator_noattrend -> direct_declarator
-- On EQ reduce production declarator_noattrend -> direct_declarator
-- On EOF reduce production declarator_noattrend -> direct_declarator
-- On ENUM reduce production declarator_noattrend -> direct_declarator
-- On ELSE reduce production declarator_noattrend -> direct_declarator
-- On ELLIPSIS reduce production declarator_noattrend -> direct_declarator
-- On DOUBLE reduce production declarator_noattrend -> direct_declarator
-- On DOT reduce production declarator_noattrend -> direct_declarator
-- On DO reduce production declarator_noattrend -> direct_declarator
-- On DIV_ASSIGN reduce production declarator_noattrend -> direct_declarator
-- On DEFAULT reduce production declarator_noattrend -> direct_declarator
-- On DEC reduce production declarator_noattrend -> direct_declarator
-- On CONTINUE reduce production declarator_noattrend -> direct_declarator
-- On CONSTANT reduce production declarator_noattrend -> direct_declarator
-- On CONST reduce production declarator_noattrend -> direct_declarator
-- On COMMA reduce production declarator_noattrend -> direct_declarator
-- On COLON reduce production declarator_noattrend -> direct_declarator
-- On CHAR reduce production declarator_noattrend -> direct_declarator
-- On CASE reduce production declarator_noattrend -> direct_declarator
-- On BUILTIN_VA_ARG reduce production declarator_noattrend -> direct_declarator
-- On BREAK reduce production declarator_noattrend -> direct_declarator
-- On BARBAR reduce production declarator_noattrend -> direct_declarator
-- On BAR reduce production declarator_noattrend -> direct_declarator
-- On BANG reduce production declarator_noattrend -> direct_declarator
-- On AUTO reduce production declarator_noattrend -> direct_declarator
-- On ATTRIBUTE reduce production declarator_noattrend -> direct_declarator
-- On ASM reduce production declarator_noattrend -> direct_declarator
-- On AND_ASSIGN reduce production declarator_noattrend -> direct_declarator
-- On ANDAND reduce production declarator_noattrend -> direct_declarator
-- On AND reduce production declarator_noattrend -> direct_declarator
-- On ALIGNOF reduce production declarator_noattrend -> direct_declarator
-- On ALIGNAS reduce production declarator_noattrend -> direct_declarator
-- On ADD_ASSIGN reduce production declarator_noattrend -> direct_declarator

State 251:
## Known stack suffix:
## direct_declarator LBRACK
## LR(1) items:
direct_declarator -> direct_declarator LBRACK . option(type_qualifier_list) optional(assignment_expression,RBRACK) [ VOLATILE VOID UNSIGNED UNION UNDERSCORE_BOOL STRUCT STATIC SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER PRE_NAME PACKED LPAREN LONG LBRACK LBRACE INT INLINE FLOAT EXTERN EQ ENUM DOUBLE CONST COMMA COLON CHAR AUTO ATTRIBUTE ALIGNAS ]
## Transitions:
-- On type_qualifier_list shift to state 146
-- On option(type_qualifier_list) shift to state 252
## Default reduction:
-- After reading the next token, reduce production option(type_qualifier_list) ->

State 252:
## Known stack suffix:
## direct_declarator LBRACK option(type_qualifier_list)
## LR(1) items:
direct_declarator -> direct_declarator LBRACK option(type_qualifier_list) . optional(assignment_expression,RBRACK) [ VOLATILE VOID UNSIGNED UNION UNDERSCORE_BOOL STRUCT STATIC SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER PRE_NAME PACKED LPAREN LONG LBRACK LBRACE INT INLINE FLOAT EXTERN EQ ENUM DOUBLE CONST COMMA COLON CHAR AUTO ATTRIBUTE ALIGNAS ]
type_qualifier_list -> option(type_qualifier_list) . type_qualifier_noattr [ VOLATILE TILDE STRING_LITERAL STAR SIZEOF RESTRICT RBRACK PRE_NAME PLUS PACKED MINUS LPAREN INC DEC CONSTANT CONST BUILTIN_VA_ARG BANG ATTRIBUTE AND ALIGNOF ALIGNAS ]
type_qualifier_list -> option(type_qualifier_list) . attribute_specifier [ VOLATILE TILDE STRING_LITERAL STAR SIZEOF RESTRICT RBRACK PRE_NAME PLUS PACKED MINUS LPAREN INC DEC CONSTANT CONST BUILTIN_VA_ARG BANG ATTRIBUTE AND ALIGNOF ALIGNAS ]
## Transitions:
-- On VOLATILE shift to state 1
-- On TILDE shift to state 18
-- On STRING_LITERAL shift to state 19
-- On STAR shift to state 20
-- On SIZEOF shift to state 21
-- On RESTRICT shift to state 12
-- On RBRACK shift to state 236
-- On PRE_NAME shift to state 22
-- On PLUS shift to state 24
-- On PACKED shift to state 16
-- On MINUS shift to state 25
-- On LPAREN shift to state 28
-- On INC shift to state 31
-- On DEC shift to state 46
-- On CONSTANT shift to state 47
-- On CONST shift to state 148
-- On BUILTIN_VA_ARG shift to state 48
-- On BANG shift to state 50
-- On ATTRIBUTE shift to state 35
-- On AND shift to state 51
-- On ALIGNOF shift to state 52
-- On ALIGNAS shift to state 149
-- On unary_operator shift to state 56
-- On unary_expression shift to state 65
-- On type_qualifier_noattr shift to state 164
-- On string_literals_list shift to state 58
-- On shift_expression shift to state 78
-- On relational_expression shift to state 94
-- On primary_expression shift to state 60
-- On postfix_expression shift to state 61
-- On optional(assignment_expression,RBRACK) shift to state 253
-- On multiplicative_expression shift to state 82
-- On logical_or_expression shift to state 102
-- On logical_and_expression shift to state 104
-- On inclusive_or_expression shift to state 120
-- On exclusive_or_expression shift to state 119
-- On equality_expression shift to state 110
-- On conditional_expression shift to state 123
-- On cast_expression shift to state 88
-- On attribute_specifier shift to state 165
-- On assignment_expression shift to state 238
-- On and_expression shift to state 118
-- On additive_expression shift to state 101
## Reductions:

State 253:
## Known stack suffix:
## direct_declarator LBRACK option(type_qualifier_list) optional(assignment_expression,RBRACK)
## LR(1) items:
direct_declarator -> direct_declarator LBRACK option(type_qualifier_list) optional(assignment_expression,RBRACK) . [ VOLATILE VOID UNSIGNED UNION UNDERSCORE_BOOL STRUCT STATIC SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER PRE_NAME PACKED LPAREN LONG LBRACK LBRACE INT INLINE FLOAT EXTERN EQ ENUM DOUBLE CONST COMMA COLON CHAR AUTO ATTRIBUTE ALIGNAS ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production direct_declarator -> direct_declarator LBRACK option(type_qualifier_list) optional(assignment_expression,RBRACK)

State 254:
## Known stack suffix:
## direct_abstract_declarator
## LR(1) items:
abstract_declarator(type_name) -> direct_abstract_declarator . [ RPAREN ]
direct_abstract_declarator -> direct_abstract_declarator . LPAREN option(context_parameter_type_list) RPAREN [ RPAREN LPAREN LBRACK ]
option(direct_abstract_declarator) -> direct_abstract_declarator . [ LBRACK ]
## Transitions:
-- On LPAREN shift to state 244
## Reductions:
-- On XOR_ASSIGN reduce production abstract_declarator(type_name) -> direct_abstract_declarator
-- On WHILE reduce production abstract_declarator(type_name) -> direct_abstract_declarator
-- On VOLATILE reduce production abstract_declarator(type_name) -> direct_abstract_declarator
-- On VOID reduce production abstract_declarator(type_name) -> direct_abstract_declarator
-- On VAR_NAME reduce production abstract_declarator(type_name) -> direct_abstract_declarator
-- On UNSIGNED reduce production abstract_declarator(type_name) -> direct_abstract_declarator
-- On UNION reduce production abstract_declarator(type_name) -> direct_abstract_declarator
-- On UNDERSCORE_BOOL reduce production abstract_declarator(type_name) -> direct_abstract_declarator
-- On TYPEDEF_NAME reduce production abstract_declarator(type_name) -> direct_abstract_declarator
-- On TYPEDEF reduce production abstract_declarator(type_name) -> direct_abstract_declarator
-- On TILDE reduce production abstract_declarator(type_name) -> direct_abstract_declarator
-- On SWITCH reduce production abstract_declarator(type_name) -> direct_abstract_declarator
-- On SUB_ASSIGN reduce production abstract_declarator(type_name) -> direct_abstract_declarator
-- On STRUCT reduce production abstract_declarator(type_name) -> direct_abstract_declarator
-- On STRING_LITERAL reduce production abstract_declarator(type_name) -> direct_abstract_declarator
-- On STATIC reduce production abstract_declarator(type_name) -> direct_abstract_declarator
-- On STAR reduce production abstract_declarator(type_name) -> direct_abstract_declarator
-- On SLASH reduce production abstract_declarator(type_name) -> direct_abstract_declarator
-- On SIZEOF reduce production abstract_declarator(type_name) -> direct_abstract_declarator
-- On SIGNED reduce production abstract_declarator(type_name) -> direct_abstract_declarator
-- On SHORT reduce production abstract_declarator(type_name) -> direct_abstract_declarator
-- On SEMICOLON reduce production abstract_declarator(type_name) -> direct_abstract_declarator
-- On RPAREN reduce production abstract_declarator(type_name) -> direct_abstract_declarator
-- On RIGHT_ASSIGN reduce production abstract_declarator(type_name) -> direct_abstract_declarator
-- On RIGHT reduce production abstract_declarator(type_name) -> direct_abstract_declarator
-- On RETURN reduce production abstract_declarator(type_name) -> direct_abstract_declarator
-- On RESTRICT reduce production abstract_declarator(type_name) -> direct_abstract_declarator
-- On REGISTER reduce production abstract_declarator(type_name) -> direct_abstract_declarator
-- On RBRACK reduce production abstract_declarator(type_name) -> direct_abstract_declarator
-- On RBRACE reduce production abstract_declarator(type_name) -> direct_abstract_declarator
-- On QUESTION reduce production abstract_declarator(type_name) -> direct_abstract_declarator
-- On PTR reduce production abstract_declarator(type_name) -> direct_abstract_declarator
-- On PRE_NAME reduce production abstract_declarator(type_name) -> direct_abstract_declarator
-- On PRAGMA reduce production abstract_declarator(type_name) -> direct_abstract_declarator
-- On PLUS reduce production abstract_declarator(type_name) -> direct_abstract_declarator
-- On PERCENT reduce production abstract_declarator(type_name) -> direct_abstract_declarator
-- On PACKED reduce production abstract_declarator(type_name) -> direct_abstract_declarator
-- On OR_ASSIGN reduce production abstract_declarator(type_name) -> direct_abstract_declarator
-- On NEQ reduce production abstract_declarator(type_name) -> direct_abstract_declarator
-- On MUL_ASSIGN reduce production abstract_declarator(type_name) -> direct_abstract_declarator
-- On MOD_ASSIGN reduce production abstract_declarator(type_name) -> direct_abstract_declarator
-- On MINUS reduce production abstract_declarator(type_name) -> direct_abstract_declarator
-- On LT reduce production abstract_declarator(type_name) -> direct_abstract_declarator
-- On LONG reduce production abstract_declarator(type_name) -> direct_abstract_declarator
-- On LEQ reduce production abstract_declarator(type_name) -> direct_abstract_declarator
-- On LEFT_ASSIGN reduce production abstract_declarator(type_name) -> direct_abstract_declarator
-- On LEFT reduce production abstract_declarator(type_name) -> direct_abstract_declarator
-- On LBRACK reduce production option(direct_abstract_declarator) -> direct_abstract_declarator
-- On LBRACE reduce production abstract_declarator(type_name) -> direct_abstract_declarator
-- On INT reduce production abstract_declarator(type_name) -> direct_abstract_declarator
-- On INLINE reduce production abstract_declarator(type_name) -> direct_abstract_declarator
-- On INC reduce production abstract_declarator(type_name) -> direct_abstract_declarator
-- On IF reduce production abstract_declarator(type_name) -> direct_abstract_declarator
-- On HAT reduce production abstract_declarator(type_name) -> direct_abstract_declarator
-- On GT reduce production abstract_declarator(type_name) -> direct_abstract_declarator
-- On GOTO reduce production abstract_declarator(type_name) -> direct_abstract_declarator
-- On GEQ reduce production abstract_declarator(type_name) -> direct_abstract_declarator
-- On FOR reduce production abstract_declarator(type_name) -> direct_abstract_declarator
-- On FLOAT reduce production abstract_declarator(type_name) -> direct_abstract_declarator
-- On EXTERN reduce production abstract_declarator(type_name) -> direct_abstract_declarator
-- On EQEQ reduce production abstract_declarator(type_name) -> direct_abstract_declarator
-- On EQ reduce production abstract_declarator(type_name) -> direct_abstract_declarator
-- On EOF reduce production abstract_declarator(type_name) -> direct_abstract_declarator
-- On ENUM reduce production abstract_declarator(type_name) -> direct_abstract_declarator
-- On ELSE reduce production abstract_declarator(type_name) -> direct_abstract_declarator
-- On ELLIPSIS reduce production abstract_declarator(type_name) -> direct_abstract_declarator
-- On DOUBLE reduce production abstract_declarator(type_name) -> direct_abstract_declarator
-- On DOT reduce production abstract_declarator(type_name) -> direct_abstract_declarator
-- On DO reduce production abstract_declarator(type_name) -> direct_abstract_declarator
-- On DIV_ASSIGN reduce production abstract_declarator(type_name) -> direct_abstract_declarator
-- On DEFAULT reduce production abstract_declarator(type_name) -> direct_abstract_declarator
-- On DEC reduce production abstract_declarator(type_name) -> direct_abstract_declarator
-- On CONTINUE reduce production abstract_declarator(type_name) -> direct_abstract_declarator
-- On CONSTANT reduce production abstract_declarator(type_name) -> direct_abstract_declarator
-- On CONST reduce production abstract_declarator(type_name) -> direct_abstract_declarator
-- On COMMA reduce production abstract_declarator(type_name) -> direct_abstract_declarator
-- On COLON reduce production abstract_declarator(type_name) -> direct_abstract_declarator
-- On CHAR reduce production abstract_declarator(type_name) -> direct_abstract_declarator
-- On CASE reduce production abstract_declarator(type_name) -> direct_abstract_declarator
-- On BUILTIN_VA_ARG reduce production abstract_declarator(type_name) -> direct_abstract_declarator
-- On BREAK reduce production abstract_declarator(type_name) -> direct_abstract_declarator
-- On BARBAR reduce production abstract_declarator(type_name) -> direct_abstract_declarator
-- On BAR reduce production abstract_declarator(type_name) -> direct_abstract_declarator
-- On BANG reduce production abstract_declarator(type_name) -> direct_abstract_declarator
-- On AUTO reduce production abstract_declarator(type_name) -> direct_abstract_declarator
-- On ATTRIBUTE reduce production abstract_declarator(type_name) -> direct_abstract_declarator
-- On ASM reduce production abstract_declarator(type_name) -> direct_abstract_declarator
-- On AND_ASSIGN reduce production abstract_declarator(type_name) -> direct_abstract_declarator
-- On ANDAND reduce production abstract_declarator(type_name) -> direct_abstract_declarator
-- On AND reduce production abstract_declarator(type_name) -> direct_abstract_declarator
-- On ALIGNOF reduce production abstract_declarator(type_name) -> direct_abstract_declarator
-- On ALIGNAS reduce production abstract_declarator(type_name) -> direct_abstract_declarator
-- On ADD_ASSIGN reduce production abstract_declarator(type_name) -> direct_abstract_declarator

State 255:
## Known stack suffix:
## declarator_noattrend
## LR(1) items:
declarator -> declarator_noattrend . attribute_specifier_list [ SEMICOLON RPAREN COMMA COLON ]
## Transitions:
-- On PACKED shift to state 16
-- On ATTRIBUTE shift to state 35
-- On ALIGNAS shift to state 149
-- On attribute_specifier_list shift to state 256
-- On attribute_specifier shift to state 257
## Reductions:
-- On XOR_ASSIGN reduce production attribute_specifier_list ->
-- On WHILE reduce production attribute_specifier_list ->
-- On VOLATILE reduce production attribute_specifier_list ->
-- On VOID reduce production attribute_specifier_list ->
-- On VAR_NAME reduce production attribute_specifier_list ->
-- On UNSIGNED reduce production attribute_specifier_list ->
-- On UNION reduce production attribute_specifier_list ->
-- On UNDERSCORE_BOOL reduce production attribute_specifier_list ->
-- On TYPEDEF_NAME reduce production attribute_specifier_list ->
-- On TYPEDEF reduce production attribute_specifier_list ->
-- On TILDE reduce production attribute_specifier_list ->
-- On SWITCH reduce production attribute_specifier_list ->
-- On SUB_ASSIGN reduce production attribute_specifier_list ->
-- On STRUCT reduce production attribute_specifier_list ->
-- On STRING_LITERAL reduce production attribute_specifier_list ->
-- On STATIC reduce production attribute_specifier_list ->
-- On STAR reduce production attribute_specifier_list ->
-- On SLASH reduce production attribute_specifier_list ->
-- On SIZEOF reduce production attribute_specifier_list ->
-- On SIGNED reduce production attribute_specifier_list ->
-- On SHORT reduce production attribute_specifier_list ->
-- On SEMICOLON reduce production attribute_specifier_list ->
-- On RPAREN reduce production attribute_specifier_list ->
-- On RIGHT_ASSIGN reduce production attribute_specifier_list ->
-- On RIGHT reduce production attribute_specifier_list ->
-- On RETURN reduce production attribute_specifier_list ->
-- On RESTRICT reduce production attribute_specifier_list ->
-- On REGISTER reduce production attribute_specifier_list ->
-- On RBRACK reduce production attribute_specifier_list ->
-- On RBRACE reduce production attribute_specifier_list ->
-- On QUESTION reduce production attribute_specifier_list ->
-- On PTR reduce production attribute_specifier_list ->
-- On PRE_NAME reduce production attribute_specifier_list ->
-- On PRAGMA reduce production attribute_specifier_list ->
-- On PLUS reduce production attribute_specifier_list ->
-- On PERCENT reduce production attribute_specifier_list ->
-- On OR_ASSIGN reduce production attribute_specifier_list ->
-- On NEQ reduce production attribute_specifier_list ->
-- On MUL_ASSIGN reduce production attribute_specifier_list ->
-- On MOD_ASSIGN reduce production attribute_specifier_list ->
-- On MINUS reduce production attribute_specifier_list ->
-- On LT reduce production attribute_specifier_list ->
-- On LPAREN reduce production attribute_specifier_list ->
-- On LONG reduce production attribute_specifier_list ->
-- On LEQ reduce production attribute_specifier_list ->
-- On LEFT_ASSIGN reduce production attribute_specifier_list ->
-- On LEFT reduce production attribute_specifier_list ->
-- On LBRACK reduce production attribute_specifier_list ->
-- On LBRACE reduce production attribute_specifier_list ->
-- On INT reduce production attribute_specifier_list ->
-- On INLINE reduce production attribute_specifier_list ->
-- On INC reduce production attribute_specifier_list ->
-- On IF reduce production attribute_specifier_list ->
-- On HAT reduce production attribute_specifier_list ->
-- On GT reduce production attribute_specifier_list ->
-- On GOTO reduce production attribute_specifier_list ->
-- On GEQ reduce production attribute_specifier_list ->
-- On FOR reduce production attribute_specifier_list ->
-- On FLOAT reduce production attribute_specifier_list ->
-- On EXTERN reduce production attribute_specifier_list ->
-- On EQEQ reduce production attribute_specifier_list ->
-- On EQ reduce production attribute_specifier_list ->
-- On EOF reduce production attribute_specifier_list ->
-- On ENUM reduce production attribute_specifier_list ->
-- On ELSE reduce production attribute_specifier_list ->
-- On ELLIPSIS reduce production attribute_specifier_list ->
-- On DOUBLE reduce production attribute_specifier_list ->
-- On DOT reduce production attribute_specifier_list ->
-- On DO reduce production attribute_specifier_list ->
-- On DIV_ASSIGN reduce production attribute_specifier_list ->
-- On DEFAULT reduce production attribute_specifier_list ->
-- On DEC reduce production attribute_specifier_list ->
-- On CONTINUE reduce production attribute_specifier_list ->
-- On CONSTANT reduce production attribute_specifier_list ->
-- On CONST reduce production attribute_specifier_list ->
-- On COMMA reduce production attribute_specifier_list ->
-- On COLON reduce production attribute_specifier_list ->
-- On CHAR reduce production attribute_specifier_list ->
-- On CASE reduce production attribute_specifier_list ->
-- On BUILTIN_VA_ARG reduce production attribute_specifier_list ->
-- On BREAK reduce production attribute_specifier_list ->
-- On BARBAR reduce production attribute_specifier_list ->
-- On BAR reduce production attribute_specifier_list ->
-- On BANG reduce production attribute_specifier_list ->
-- On AUTO reduce production attribute_specifier_list ->
-- On ASM reduce production attribute_specifier_list ->
-- On AND_ASSIGN reduce production attribute_specifier_list ->
-- On ANDAND reduce production attribute_specifier_list ->
-- On AND reduce production attribute_specifier_list ->
-- On ALIGNOF reduce production attribute_specifier_list ->
-- On ADD_ASSIGN reduce production attribute_specifier_list ->

State 256:
## Known stack suffix:
## declarator_noattrend attribute_specifier_list
## LR(1) items:
declarator -> declarator_noattrend attribute_specifier_list . [ SEMICOLON RPAREN COMMA COLON ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production declarator -> declarator_noattrend attribute_specifier_list

State 257:
## Known stack suffix:
## attribute_specifier
## LR(1) items:
attribute_specifier_list -> attribute_specifier . attribute_specifier_list [ SEMICOLON RPAREN PRE_NAME LBRACE EQ COMMA COLON ]
## Transitions:
-- On PACKED shift to state 16
-- On ATTRIBUTE shift to state 35
-- On ALIGNAS shift to state 149
-- On attribute_specifier_list shift to state 258
-- On attribute_specifier shift to state 257
## Reductions:
-- On XOR_ASSIGN reduce production attribute_specifier_list ->
-- On WHILE reduce production attribute_specifier_list ->
-- On VOLATILE reduce production attribute_specifier_list ->
-- On VOID reduce production attribute_specifier_list ->
-- On VAR_NAME reduce production attribute_specifier_list ->
-- On UNSIGNED reduce production attribute_specifier_list ->
-- On UNION reduce production attribute_specifier_list ->
-- On UNDERSCORE_BOOL reduce production attribute_specifier_list ->
-- On TYPEDEF_NAME reduce production attribute_specifier_list ->
-- On TYPEDEF reduce production attribute_specifier_list ->
-- On TILDE reduce production attribute_specifier_list ->
-- On SWITCH reduce production attribute_specifier_list ->
-- On SUB_ASSIGN reduce production attribute_specifier_list ->
-- On STRUCT reduce production attribute_specifier_list ->
-- On STRING_LITERAL reduce production attribute_specifier_list ->
-- On STATIC reduce production attribute_specifier_list ->
-- On STAR reduce production attribute_specifier_list ->
-- On SLASH reduce production attribute_specifier_list ->
-- On SIZEOF reduce production attribute_specifier_list ->
-- On SIGNED reduce production attribute_specifier_list ->
-- On SHORT reduce production attribute_specifier_list ->
-- On SEMICOLON reduce production attribute_specifier_list ->
-- On RPAREN reduce production attribute_specifier_list ->
-- On RIGHT_ASSIGN reduce production attribute_specifier_list ->
-- On RIGHT reduce production attribute_specifier_list ->
-- On RETURN reduce production attribute_specifier_list ->
-- On RESTRICT reduce production attribute_specifier_list ->
-- On REGISTER reduce production attribute_specifier_list ->
-- On RBRACK reduce production attribute_specifier_list ->
-- On RBRACE reduce production attribute_specifier_list ->
-- On QUESTION reduce production attribute_specifier_list ->
-- On PTR reduce production attribute_specifier_list ->
-- On PRE_NAME reduce production attribute_specifier_list ->
-- On PRAGMA reduce production attribute_specifier_list ->
-- On PLUS reduce production attribute_specifier_list ->
-- On PERCENT reduce production attribute_specifier_list ->
-- On OR_ASSIGN reduce production attribute_specifier_list ->
-- On NEQ reduce production attribute_specifier_list ->
-- On MUL_ASSIGN reduce production attribute_specifier_list ->
-- On MOD_ASSIGN reduce production attribute_specifier_list ->
-- On MINUS reduce production attribute_specifier_list ->
-- On LT reduce production attribute_specifier_list ->
-- On LPAREN reduce production attribute_specifier_list ->
-- On LONG reduce production attribute_specifier_list ->
-- On LEQ reduce production attribute_specifier_list ->
-- On LEFT_ASSIGN reduce production attribute_specifier_list ->
-- On LEFT reduce production attribute_specifier_list ->
-- On LBRACK reduce production attribute_specifier_list ->
-- On LBRACE reduce production attribute_specifier_list ->
-- On INT reduce production attribute_specifier_list ->
-- On INLINE reduce production attribute_specifier_list ->
-- On INC reduce production attribute_specifier_list ->
-- On IF reduce production attribute_specifier_list ->
-- On HAT reduce production attribute_specifier_list ->
-- On GT reduce production attribute_specifier_list ->
-- On GOTO reduce production attribute_specifier_list ->
-- On GEQ reduce production attribute_specifier_list ->
-- On FOR reduce production attribute_specifier_list ->
-- On FLOAT reduce production attribute_specifier_list ->
-- On EXTERN reduce production attribute_specifier_list ->
-- On EQEQ reduce production attribute_specifier_list ->
-- On EQ reduce production attribute_specifier_list ->
-- On EOF reduce production attribute_specifier_list ->
-- On ENUM reduce production attribute_specifier_list ->
-- On ELSE reduce production attribute_specifier_list ->
-- On ELLIPSIS reduce production attribute_specifier_list ->
-- On DOUBLE reduce production attribute_specifier_list ->
-- On DOT reduce production attribute_specifier_list ->
-- On DO reduce production attribute_specifier_list ->
-- On DIV_ASSIGN reduce production attribute_specifier_list ->
-- On DEFAULT reduce production attribute_specifier_list ->
-- On DEC reduce production attribute_specifier_list ->
-- On CONTINUE reduce production attribute_specifier_list ->
-- On CONSTANT reduce production attribute_specifier_list ->
-- On CONST reduce production attribute_specifier_list ->
-- On COMMA reduce production attribute_specifier_list ->
-- On COLON reduce production attribute_specifier_list ->
-- On CHAR reduce production attribute_specifier_list ->
-- On CASE reduce production attribute_specifier_list ->
-- On BUILTIN_VA_ARG reduce production attribute_specifier_list ->
-- On BREAK reduce production attribute_specifier_list ->
-- On BARBAR reduce production attribute_specifier_list ->
-- On BAR reduce production attribute_specifier_list ->
-- On BANG reduce production attribute_specifier_list ->
-- On AUTO reduce production attribute_specifier_list ->
-- On ASM reduce production attribute_specifier_list ->
-- On AND_ASSIGN reduce production attribute_specifier_list ->
-- On ANDAND reduce production attribute_specifier_list ->
-- On AND reduce production attribute_specifier_list ->
-- On ALIGNOF reduce production attribute_specifier_list ->
-- On ADD_ASSIGN reduce production attribute_specifier_list ->

State 258:
## Known stack suffix:
## attribute_specifier attribute_specifier_list
## LR(1) items:
attribute_specifier_list -> attribute_specifier attribute_specifier_list . [ SEMICOLON RPAREN PRE_NAME LBRACE EQ COMMA COLON ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production attribute_specifier_list -> attribute_specifier attribute_specifier_list

State 259:
## Known stack suffix:
## LPAREN save_context declarator
## LR(1) items:
direct_declarator -> LPAREN save_context declarator . RPAREN [ VOLATILE VOID UNSIGNED UNION UNDERSCORE_BOOL STRUCT STATIC SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER PRE_NAME PACKED LPAREN LONG LBRACK LBRACE INT INLINE FLOAT EXTERN EQ ENUM DOUBLE CONST COMMA COLON CHAR AUTO ATTRIBUTE ALIGNAS ]
## Transitions:
-- On RPAREN shift to state 260
## Reductions:

State 260:
## Known stack suffix:
## LPAREN save_context declarator RPAREN
## LR(1) items:
direct_declarator -> LPAREN save_context declarator RPAREN . [ VOLATILE VOID UNSIGNED UNION UNDERSCORE_BOOL STRUCT STATIC SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER PRE_NAME PACKED LPAREN LONG LBRACK LBRACE INT INLINE FLOAT EXTERN EQ ENUM DOUBLE CONST COMMA COLON CHAR AUTO ATTRIBUTE ALIGNAS ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production direct_declarator -> LPAREN save_context declarator RPAREN

State 261:
## Known stack suffix:
## LPAREN save_context abstract_declarator(type_name)
## LR(1) items:
direct_abstract_declarator -> LPAREN save_context abstract_declarator(type_name) . RPAREN [ RPAREN LPAREN LBRACK COMMA ]
## Transitions:
-- On RPAREN shift to state 262
## Reductions:

State 262:
## Known stack suffix:
## LPAREN save_context abstract_declarator(type_name) RPAREN
## LR(1) items:
direct_abstract_declarator -> LPAREN save_context abstract_declarator(type_name) RPAREN . [ RPAREN LPAREN LBRACK COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production direct_abstract_declarator -> LPAREN save_context abstract_declarator(type_name) RPAREN

State 263:
## Known stack suffix:
## LPAREN option(context_parameter_type_list)
## LR(1) items:
direct_abstract_declarator -> LPAREN option(context_parameter_type_list) . RPAREN [ RPAREN LPAREN LBRACK COMMA ]
## Transitions:
-- On RPAREN shift to state 264
## Reductions:

State 264:
## Known stack suffix:
## LPAREN option(context_parameter_type_list) RPAREN
## LR(1) items:
direct_abstract_declarator -> LPAREN option(context_parameter_type_list) RPAREN . [ RPAREN LPAREN LBRACK COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production direct_abstract_declarator -> LPAREN option(context_parameter_type_list) RPAREN

State 265:
## Known stack suffix:
## declaration_specifiers(parameter_declaration) option(abstract_declarator(parameter_declaration))
## LR(1) items:
parameter_declaration -> declaration_specifiers(parameter_declaration) option(abstract_declarator(parameter_declaration)) . [ RPAREN COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production parameter_declaration -> declaration_specifiers(parameter_declaration) option(abstract_declarator(parameter_declaration))

State 266:
## Known stack suffix:
## list(pointer1)
## LR(1) items:
abstract_declarator(parameter_declaration) -> list(pointer1) . STAR option(type_qualifier_list) [ RPAREN COMMA ]
abstract_declarator(parameter_declaration) -> list(pointer1) . STAR option(type_qualifier_list) direct_abstract_declarator [ RPAREN COMMA ]
declarator_noattrend -> list(pointer1) . STAR option(type_qualifier_list) direct_declarator [ RPAREN PACKED COMMA ATTRIBUTE ALIGNAS ]
list(pointer1) -> list(pointer1) . STAR option(type_qualifier_list) [ STAR ]
## Transitions:
-- On STAR shift to state 267
## Reductions:

State 267:
## Known stack suffix:
## list(pointer1) STAR
## LR(1) items:
abstract_declarator(parameter_declaration) -> list(pointer1) STAR . option(type_qualifier_list) [ RPAREN COMMA ]
abstract_declarator(parameter_declaration) -> list(pointer1) STAR . option(type_qualifier_list) direct_abstract_declarator [ RPAREN COMMA ]
declarator_noattrend -> list(pointer1) STAR . option(type_qualifier_list) direct_declarator [ RPAREN PACKED COMMA ATTRIBUTE ALIGNAS ]
list(pointer1) -> list(pointer1) STAR . option(type_qualifier_list) [ STAR ]
## Transitions:
-- On type_qualifier_list shift to state 146
-- On option(type_qualifier_list) shift to state 268
## Default reduction:
-- After reading the next token, reduce production option(type_qualifier_list) ->

State 268:
## Known stack suffix:
## list(pointer1) STAR option(type_qualifier_list)
## LR(1) items:
abstract_declarator(parameter_declaration) -> list(pointer1) STAR option(type_qualifier_list) . [ RPAREN COMMA ]
abstract_declarator(parameter_declaration) -> list(pointer1) STAR option(type_qualifier_list) . direct_abstract_declarator [ RPAREN COMMA ]
declarator_noattrend -> list(pointer1) STAR option(type_qualifier_list) . direct_declarator [ RPAREN PACKED COMMA ATTRIBUTE ALIGNAS ]
list(pointer1) -> list(pointer1) STAR option(type_qualifier_list) . [ STAR ]
type_qualifier_list -> option(type_qualifier_list) . type_qualifier_noattr [ VOLATILE STAR RPAREN RESTRICT PRE_NAME PACKED LPAREN LBRACK CONST COMMA ATTRIBUTE ALIGNAS ]
type_qualifier_list -> option(type_qualifier_list) . attribute_specifier [ VOLATILE STAR RPAREN RESTRICT PRE_NAME PACKED LPAREN LBRACK CONST COMMA ATTRIBUTE ALIGNAS ]
## Transitions:
-- On VOLATILE shift to state 1
-- On RESTRICT shift to state 12
-- On PRE_NAME shift to state 178
-- On PACKED shift to state 16
-- On LPAREN shift to state 229
-- On CONST shift to state 148
-- On ATTRIBUTE shift to state 35
-- On ALIGNAS shift to state 149
-- On type_qualifier_noattr shift to state 164
-- On option(direct_abstract_declarator) shift to state 233
-- On direct_declarator shift to state 187
-- On direct_abstract_declarator shift to state 269
-- On declarator_identifier shift to state 249
-- On attribute_specifier shift to state 165
## Reductions:
-- On XOR_ASSIGN reduce production abstract_declarator(parameter_declaration) -> list(pointer1) STAR option(type_qualifier_list)
-- On WHILE reduce production abstract_declarator(parameter_declaration) -> list(pointer1) STAR option(type_qualifier_list)
-- On VOID reduce production abstract_declarator(parameter_declaration) -> list(pointer1) STAR option(type_qualifier_list)
-- On VAR_NAME reduce production abstract_declarator(parameter_declaration) -> list(pointer1) STAR option(type_qualifier_list)
-- On UNSIGNED reduce production abstract_declarator(parameter_declaration) -> list(pointer1) STAR option(type_qualifier_list)
-- On UNION reduce production abstract_declarator(parameter_declaration) -> list(pointer1) STAR option(type_qualifier_list)
-- On UNDERSCORE_BOOL reduce production abstract_declarator(parameter_declaration) -> list(pointer1) STAR option(type_qualifier_list)
-- On TYPEDEF_NAME reduce production abstract_declarator(parameter_declaration) -> list(pointer1) STAR option(type_qualifier_list)
-- On TYPEDEF reduce production abstract_declarator(parameter_declaration) -> list(pointer1) STAR option(type_qualifier_list)
-- On TILDE reduce production abstract_declarator(parameter_declaration) -> list(pointer1) STAR option(type_qualifier_list)
-- On SWITCH reduce production abstract_declarator(parameter_declaration) -> list(pointer1) STAR option(type_qualifier_list)
-- On SUB_ASSIGN reduce production abstract_declarator(parameter_declaration) -> list(pointer1) STAR option(type_qualifier_list)
-- On STRUCT reduce production abstract_declarator(parameter_declaration) -> list(pointer1) STAR option(type_qualifier_list)
-- On STRING_LITERAL reduce production abstract_declarator(parameter_declaration) -> list(pointer1) STAR option(type_qualifier_list)
-- On STATIC reduce production abstract_declarator(parameter_declaration) -> list(pointer1) STAR option(type_qualifier_list)
-- On STAR reduce production list(pointer1) -> list(pointer1) STAR option(type_qualifier_list)
-- On SLASH reduce production abstract_declarator(parameter_declaration) -> list(pointer1) STAR option(type_qualifier_list)
-- On SIZEOF reduce production abstract_declarator(parameter_declaration) -> list(pointer1) STAR option(type_qualifier_list)
-- On SIGNED reduce production abstract_declarator(parameter_declaration) -> list(pointer1) STAR option(type_qualifier_list)
-- On SHORT reduce production abstract_declarator(parameter_declaration) -> list(pointer1) STAR option(type_qualifier_list)
-- On SEMICOLON reduce production abstract_declarator(parameter_declaration) -> list(pointer1) STAR option(type_qualifier_list)
-- On RPAREN reduce production abstract_declarator(parameter_declaration) -> list(pointer1) STAR option(type_qualifier_list)
-- On RIGHT_ASSIGN reduce production abstract_declarator(parameter_declaration) -> list(pointer1) STAR option(type_qualifier_list)
-- On RIGHT reduce production abstract_declarator(parameter_declaration) -> list(pointer1) STAR option(type_qualifier_list)
-- On RETURN reduce production abstract_declarator(parameter_declaration) -> list(pointer1) STAR option(type_qualifier_list)
-- On REGISTER reduce production abstract_declarator(parameter_declaration) -> list(pointer1) STAR option(type_qualifier_list)
-- On RBRACK reduce production abstract_declarator(parameter_declaration) -> list(pointer1) STAR option(type_qualifier_list)
-- On RBRACE reduce production abstract_declarator(parameter_declaration) -> list(pointer1) STAR option(type_qualifier_list)
-- On QUESTION reduce production abstract_declarator(parameter_declaration) -> list(pointer1) STAR option(type_qualifier_list)
-- On PTR reduce production abstract_declarator(parameter_declaration) -> list(pointer1) STAR option(type_qualifier_list)
-- On PRAGMA reduce production abstract_declarator(parameter_declaration) -> list(pointer1) STAR option(type_qualifier_list)
-- On PLUS reduce production abstract_declarator(parameter_declaration) -> list(pointer1) STAR option(type_qualifier_list)
-- On PERCENT reduce production abstract_declarator(parameter_declaration) -> list(pointer1) STAR option(type_qualifier_list)
-- On OR_ASSIGN reduce production abstract_declarator(parameter_declaration) -> list(pointer1) STAR option(type_qualifier_list)
-- On NEQ reduce production abstract_declarator(parameter_declaration) -> list(pointer1) STAR option(type_qualifier_list)
-- On MUL_ASSIGN reduce production abstract_declarator(parameter_declaration) -> list(pointer1) STAR option(type_qualifier_list)
-- On MOD_ASSIGN reduce production abstract_declarator(parameter_declaration) -> list(pointer1) STAR option(type_qualifier_list)
-- On MINUS reduce production abstract_declarator(parameter_declaration) -> list(pointer1) STAR option(type_qualifier_list)
-- On LT reduce production abstract_declarator(parameter_declaration) -> list(pointer1) STAR option(type_qualifier_list)
-- On LONG reduce production abstract_declarator(parameter_declaration) -> list(pointer1) STAR option(type_qualifier_list)
-- On LEQ reduce production abstract_declarator(parameter_declaration) -> list(pointer1) STAR option(type_qualifier_list)
-- On LEFT_ASSIGN reduce production abstract_declarator(parameter_declaration) -> list(pointer1) STAR option(type_qualifier_list)
-- On LEFT reduce production abstract_declarator(parameter_declaration) -> list(pointer1) STAR option(type_qualifier_list)
-- On LBRACK reduce production option(direct_abstract_declarator) ->
-- On LBRACE reduce production abstract_declarator(parameter_declaration) -> list(pointer1) STAR option(type_qualifier_list)
-- On INT reduce production abstract_declarator(parameter_declaration) -> list(pointer1) STAR option(type_qualifier_list)
-- On INLINE reduce production abstract_declarator(parameter_declaration) -> list(pointer1) STAR option(type_qualifier_list)
-- On INC reduce production abstract_declarator(parameter_declaration) -> list(pointer1) STAR option(type_qualifier_list)
-- On IF reduce production abstract_declarator(parameter_declaration) -> list(pointer1) STAR option(type_qualifier_list)
-- On HAT reduce production abstract_declarator(parameter_declaration) -> list(pointer1) STAR option(type_qualifier_list)
-- On GT reduce production abstract_declarator(parameter_declaration) -> list(pointer1) STAR option(type_qualifier_list)
-- On GOTO reduce production abstract_declarator(parameter_declaration) -> list(pointer1) STAR option(type_qualifier_list)
-- On GEQ reduce production abstract_declarator(parameter_declaration) -> list(pointer1) STAR option(type_qualifier_list)
-- On FOR reduce production abstract_declarator(parameter_declaration) -> list(pointer1) STAR option(type_qualifier_list)
-- On FLOAT reduce production abstract_declarator(parameter_declaration) -> list(pointer1) STAR option(type_qualifier_list)
-- On EXTERN reduce production abstract_declarator(parameter_declaration) -> list(pointer1) STAR option(type_qualifier_list)
-- On EQEQ reduce production abstract_declarator(parameter_declaration) -> list(pointer1) STAR option(type_qualifier_list)
-- On EQ reduce production abstract_declarator(parameter_declaration) -> list(pointer1) STAR option(type_qualifier_list)
-- On EOF reduce production abstract_declarator(parameter_declaration) -> list(pointer1) STAR option(type_qualifier_list)
-- On ENUM reduce production abstract_declarator(parameter_declaration) -> list(pointer1) STAR option(type_qualifier_list)
-- On ELSE reduce production abstract_declarator(parameter_declaration) -> list(pointer1) STAR option(type_qualifier_list)
-- On ELLIPSIS reduce production abstract_declarator(parameter_declaration) -> list(pointer1) STAR option(type_qualifier_list)
-- On DOUBLE reduce production abstract_declarator(parameter_declaration) -> list(pointer1) STAR option(type_qualifier_list)
-- On DOT reduce production abstract_declarator(parameter_declaration) -> list(pointer1) STAR option(type_qualifier_list)
-- On DO reduce production abstract_declarator(parameter_declaration) -> list(pointer1) STAR option(type_qualifier_list)
-- On DIV_ASSIGN reduce production abstract_declarator(parameter_declaration) -> list(pointer1) STAR option(type_qualifier_list)
-- On DEFAULT reduce production abstract_declarator(parameter_declaration) -> list(pointer1) STAR option(type_qualifier_list)
-- On DEC reduce production abstract_declarator(parameter_declaration) -> list(pointer1) STAR option(type_qualifier_list)
-- On CONTINUE reduce production abstract_declarator(parameter_declaration) -> list(pointer1) STAR option(type_qualifier_list)
-- On CONSTANT reduce production abstract_declarator(parameter_declaration) -> list(pointer1) STAR option(type_qualifier_list)
-- On COMMA reduce production abstract_declarator(parameter_declaration) -> list(pointer1) STAR option(type_qualifier_list)
-- On COLON reduce production abstract_declarator(parameter_declaration) -> list(pointer1) STAR option(type_qualifier_list)
-- On CHAR reduce production abstract_declarator(parameter_declaration) -> list(pointer1) STAR option(type_qualifier_list)
-- On CASE reduce production abstract_declarator(parameter_declaration) -> list(pointer1) STAR option(type_qualifier_list)
-- On BUILTIN_VA_ARG reduce production abstract_declarator(parameter_declaration) -> list(pointer1) STAR option(type_qualifier_list)
-- On BREAK reduce production abstract_declarator(parameter_declaration) -> list(pointer1) STAR option(type_qualifier_list)
-- On BARBAR reduce production abstract_declarator(parameter_declaration) -> list(pointer1) STAR option(type_qualifier_list)
-- On BAR reduce production abstract_declarator(parameter_declaration) -> list(pointer1) STAR option(type_qualifier_list)
-- On BANG reduce production abstract_declarator(parameter_declaration) -> list(pointer1) STAR option(type_qualifier_list)
-- On AUTO reduce production abstract_declarator(parameter_declaration) -> list(pointer1) STAR option(type_qualifier_list)
-- On ASM reduce production abstract_declarator(parameter_declaration) -> list(pointer1) STAR option(type_qualifier_list)
-- On AND_ASSIGN reduce production abstract_declarator(parameter_declaration) -> list(pointer1) STAR option(type_qualifier_list)
-- On ANDAND reduce production abstract_declarator(parameter_declaration) -> list(pointer1) STAR option(type_qualifier_list)
-- On AND reduce production abstract_declarator(parameter_declaration) -> list(pointer1) STAR option(type_qualifier_list)
-- On ALIGNOF reduce production abstract_declarator(parameter_declaration) -> list(pointer1) STAR option(type_qualifier_list)
-- On ADD_ASSIGN reduce production abstract_declarator(parameter_declaration) -> list(pointer1) STAR option(type_qualifier_list)

State 269:
## Known stack suffix:
## list(pointer1) STAR option(type_qualifier_list) direct_abstract_declarator
## LR(1) items:
abstract_declarator(parameter_declaration) -> list(pointer1) STAR option(type_qualifier_list) direct_abstract_declarator . [ RPAREN COMMA ]
direct_abstract_declarator -> direct_abstract_declarator . LPAREN option(context_parameter_type_list) RPAREN [ RPAREN LPAREN LBRACK COMMA ]
option(direct_abstract_declarator) -> direct_abstract_declarator . [ LBRACK ]
## Transitions:
-- On LPAREN shift to state 244
## Reductions:
-- On XOR_ASSIGN reduce production abstract_declarator(parameter_declaration) -> list(pointer1) STAR option(type_qualifier_list) direct_abstract_declarator
-- On WHILE reduce production abstract_declarator(parameter_declaration) -> list(pointer1) STAR option(type_qualifier_list) direct_abstract_declarator
-- On VOLATILE reduce production abstract_declarator(parameter_declaration) -> list(pointer1) STAR option(type_qualifier_list) direct_abstract_declarator
-- On VOID reduce production abstract_declarator(parameter_declaration) -> list(pointer1) STAR option(type_qualifier_list) direct_abstract_declarator
-- On VAR_NAME reduce production abstract_declarator(parameter_declaration) -> list(pointer1) STAR option(type_qualifier_list) direct_abstract_declarator
-- On UNSIGNED reduce production abstract_declarator(parameter_declaration) -> list(pointer1) STAR option(type_qualifier_list) direct_abstract_declarator
-- On UNION reduce production abstract_declarator(parameter_declaration) -> list(pointer1) STAR option(type_qualifier_list) direct_abstract_declarator
-- On UNDERSCORE_BOOL reduce production abstract_declarator(parameter_declaration) -> list(pointer1) STAR option(type_qualifier_list) direct_abstract_declarator
-- On TYPEDEF_NAME reduce production abstract_declarator(parameter_declaration) -> list(pointer1) STAR option(type_qualifier_list) direct_abstract_declarator
-- On TYPEDEF reduce production abstract_declarator(parameter_declaration) -> list(pointer1) STAR option(type_qualifier_list) direct_abstract_declarator
-- On TILDE reduce production abstract_declarator(parameter_declaration) -> list(pointer1) STAR option(type_qualifier_list) direct_abstract_declarator
-- On SWITCH reduce production abstract_declarator(parameter_declaration) -> list(pointer1) STAR option(type_qualifier_list) direct_abstract_declarator
-- On SUB_ASSIGN reduce production abstract_declarator(parameter_declaration) -> list(pointer1) STAR option(type_qualifier_list) direct_abstract_declarator
-- On STRUCT reduce production abstract_declarator(parameter_declaration) -> list(pointer1) STAR option(type_qualifier_list) direct_abstract_declarator
-- On STRING_LITERAL reduce production abstract_declarator(parameter_declaration) -> list(pointer1) STAR option(type_qualifier_list) direct_abstract_declarator
-- On STATIC reduce production abstract_declarator(parameter_declaration) -> list(pointer1) STAR option(type_qualifier_list) direct_abstract_declarator
-- On STAR reduce production abstract_declarator(parameter_declaration) -> list(pointer1) STAR option(type_qualifier_list) direct_abstract_declarator
-- On SLASH reduce production abstract_declarator(parameter_declaration) -> list(pointer1) STAR option(type_qualifier_list) direct_abstract_declarator
-- On SIZEOF reduce production abstract_declarator(parameter_declaration) -> list(pointer1) STAR option(type_qualifier_list) direct_abstract_declarator
-- On SIGNED reduce production abstract_declarator(parameter_declaration) -> list(pointer1) STAR option(type_qualifier_list) direct_abstract_declarator
-- On SHORT reduce production abstract_declarator(parameter_declaration) -> list(pointer1) STAR option(type_qualifier_list) direct_abstract_declarator
-- On SEMICOLON reduce production abstract_declarator(parameter_declaration) -> list(pointer1) STAR option(type_qualifier_list) direct_abstract_declarator
-- On RPAREN reduce production abstract_declarator(parameter_declaration) -> list(pointer1) STAR option(type_qualifier_list) direct_abstract_declarator
-- On RIGHT_ASSIGN reduce production abstract_declarator(parameter_declaration) -> list(pointer1) STAR option(type_qualifier_list) direct_abstract_declarator
-- On RIGHT reduce production abstract_declarator(parameter_declaration) -> list(pointer1) STAR option(type_qualifier_list) direct_abstract_declarator
-- On RETURN reduce production abstract_declarator(parameter_declaration) -> list(pointer1) STAR option(type_qualifier_list) direct_abstract_declarator
-- On RESTRICT reduce production abstract_declarator(parameter_declaration) -> list(pointer1) STAR option(type_qualifier_list) direct_abstract_declarator
-- On REGISTER reduce production abstract_declarator(parameter_declaration) -> list(pointer1) STAR option(type_qualifier_list) direct_abstract_declarator
-- On RBRACK reduce production abstract_declarator(parameter_declaration) -> list(pointer1) STAR option(type_qualifier_list) direct_abstract_declarator
-- On RBRACE reduce production abstract_declarator(parameter_declaration) -> list(pointer1) STAR option(type_qualifier_list) direct_abstract_declarator
-- On QUESTION reduce production abstract_declarator(parameter_declaration) -> list(pointer1) STAR option(type_qualifier_list) direct_abstract_declarator
-- On PTR reduce production abstract_declarator(parameter_declaration) -> list(pointer1) STAR option(type_qualifier_list) direct_abstract_declarator
-- On PRE_NAME reduce production abstract_declarator(parameter_declaration) -> list(pointer1) STAR option(type_qualifier_list) direct_abstract_declarator
-- On PRAGMA reduce production abstract_declarator(parameter_declaration) -> list(pointer1) STAR option(type_qualifier_list) direct_abstract_declarator
-- On PLUS reduce production abstract_declarator(parameter_declaration) -> list(pointer1) STAR option(type_qualifier_list) direct_abstract_declarator
-- On PERCENT reduce production abstract_declarator(parameter_declaration) -> list(pointer1) STAR option(type_qualifier_list) direct_abstract_declarator
-- On PACKED reduce production abstract_declarator(parameter_declaration) -> list(pointer1) STAR option(type_qualifier_list) direct_abstract_declarator
-- On OR_ASSIGN reduce production abstract_declarator(parameter_declaration) -> list(pointer1) STAR option(type_qualifier_list) direct_abstract_declarator
-- On NEQ reduce production abstract_declarator(parameter_declaration) -> list(pointer1) STAR option(type_qualifier_list) direct_abstract_declarator
-- On MUL_ASSIGN reduce production abstract_declarator(parameter_declaration) -> list(pointer1) STAR option(type_qualifier_list) direct_abstract_declarator
-- On MOD_ASSIGN reduce production abstract_declarator(parameter_declaration) -> list(pointer1) STAR option(type_qualifier_list) direct_abstract_declarator
-- On MINUS reduce production abstract_declarator(parameter_declaration) -> list(pointer1) STAR option(type_qualifier_list) direct_abstract_declarator
-- On LT reduce production abstract_declarator(parameter_declaration) -> list(pointer1) STAR option(type_qualifier_list) direct_abstract_declarator
-- On LONG reduce production abstract_declarator(parameter_declaration) -> list(pointer1) STAR option(type_qualifier_list) direct_abstract_declarator
-- On LEQ reduce production abstract_declarator(parameter_declaration) -> list(pointer1) STAR option(type_qualifier_list) direct_abstract_declarator
-- On LEFT_ASSIGN reduce production abstract_declarator(parameter_declaration) -> list(pointer1) STAR option(type_qualifier_list) direct_abstract_declarator
-- On LEFT reduce production abstract_declarator(parameter_declaration) -> list(pointer1) STAR option(type_qualifier_list) direct_abstract_declarator
-- On LBRACK reduce production option(direct_abstract_declarator) -> direct_abstract_declarator
-- On LBRACE reduce production abstract_declarator(parameter_declaration) -> list(pointer1) STAR option(type_qualifier_list) direct_abstract_declarator
-- On INT reduce production abstract_declarator(parameter_declaration) -> list(pointer1) STAR option(type_qualifier_list) direct_abstract_declarator
-- On INLINE reduce production abstract_declarator(parameter_declaration) -> list(pointer1) STAR option(type_qualifier_list) direct_abstract_declarator
-- On INC reduce production abstract_declarator(parameter_declaration) -> list(pointer1) STAR option(type_qualifier_list) direct_abstract_declarator
-- On IF reduce production abstract_declarator(parameter_declaration) -> list(pointer1) STAR option(type_qualifier_list) direct_abstract_declarator
-- On HAT reduce production abstract_declarator(parameter_declaration) -> list(pointer1) STAR option(type_qualifier_list) direct_abstract_declarator
-- On GT reduce production abstract_declarator(parameter_declaration) -> list(pointer1) STAR option(type_qualifier_list) direct_abstract_declarator
-- On GOTO reduce production abstract_declarator(parameter_declaration) -> list(pointer1) STAR option(type_qualifier_list) direct_abstract_declarator
-- On GEQ reduce production abstract_declarator(parameter_declaration) -> list(pointer1) STAR option(type_qualifier_list) direct_abstract_declarator
-- On FOR reduce production abstract_declarator(parameter_declaration) -> list(pointer1) STAR option(type_qualifier_list) direct_abstract_declarator
-- On FLOAT reduce production abstract_declarator(parameter_declaration) -> list(pointer1) STAR option(type_qualifier_list) direct_abstract_declarator
-- On EXTERN reduce production abstract_declarator(parameter_declaration) -> list(pointer1) STAR option(type_qualifier_list) direct_abstract_declarator
-- On EQEQ reduce production abstract_declarator(parameter_declaration) -> list(pointer1) STAR option(type_qualifier_list) direct_abstract_declarator
-- On EQ reduce production abstract_declarator(parameter_declaration) -> list(pointer1) STAR option(type_qualifier_list) direct_abstract_declarator
-- On EOF reduce production abstract_declarator(parameter_declaration) -> list(pointer1) STAR option(type_qualifier_list) direct_abstract_declarator
-- On ENUM reduce production abstract_declarator(parameter_declaration) -> list(pointer1) STAR option(type_qualifier_list) direct_abstract_declarator
-- On ELSE reduce production abstract_declarator(parameter_declaration) -> list(pointer1) STAR option(type_qualifier_list) direct_abstract_declarator
-- On ELLIPSIS reduce production abstract_declarator(parameter_declaration) -> list(pointer1) STAR option(type_qualifier_list) direct_abstract_declarator
-- On DOUBLE reduce production abstract_declarator(parameter_declaration) -> list(pointer1) STAR option(type_qualifier_list) direct_abstract_declarator
-- On DOT reduce production abstract_declarator(parameter_declaration) -> list(pointer1) STAR option(type_qualifier_list) direct_abstract_declarator
-- On DO reduce production abstract_declarator(parameter_declaration) -> list(pointer1) STAR option(type_qualifier_list) direct_abstract_declarator
-- On DIV_ASSIGN reduce production abstract_declarator(parameter_declaration) -> list(pointer1) STAR option(type_qualifier_list) direct_abstract_declarator
-- On DEFAULT reduce production abstract_declarator(parameter_declaration) -> list(pointer1) STAR option(type_qualifier_list) direct_abstract_declarator
-- On DEC reduce production abstract_declarator(parameter_declaration) -> list(pointer1) STAR option(type_qualifier_list) direct_abstract_declarator
-- On CONTINUE reduce production abstract_declarator(parameter_declaration) -> list(pointer1) STAR option(type_qualifier_list) direct_abstract_declarator
-- On CONSTANT reduce production abstract_declarator(parameter_declaration) -> list(pointer1) STAR option(type_qualifier_list) direct_abstract_declarator
-- On CONST reduce production abstract_declarator(parameter_declaration) -> list(pointer1) STAR option(type_qualifier_list) direct_abstract_declarator
-- On COMMA reduce production abstract_declarator(parameter_declaration) -> list(pointer1) STAR option(type_qualifier_list) direct_abstract_declarator
-- On COLON reduce production abstract_declarator(parameter_declaration) -> list(pointer1) STAR option(type_qualifier_list) direct_abstract_declarator
-- On CHAR reduce production abstract_declarator(parameter_declaration) -> list(pointer1) STAR option(type_qualifier_list) direct_abstract_declarator
-- On CASE reduce production abstract_declarator(parameter_declaration) -> list(pointer1) STAR option(type_qualifier_list) direct_abstract_declarator
-- On BUILTIN_VA_ARG reduce production abstract_declarator(parameter_declaration) -> list(pointer1) STAR option(type_qualifier_list) direct_abstract_declarator
-- On BREAK reduce production abstract_declarator(parameter_declaration) -> list(pointer1) STAR option(type_qualifier_list) direct_abstract_declarator
-- On BARBAR reduce production abstract_declarator(parameter_declaration) -> list(pointer1) STAR option(type_qualifier_list) direct_abstract_declarator
-- On BAR reduce production abstract_declarator(parameter_declaration) -> list(pointer1) STAR option(type_qualifier_list) direct_abstract_declarator
-- On BANG reduce production abstract_declarator(parameter_declaration) -> list(pointer1) STAR option(type_qualifier_list) direct_abstract_declarator
-- On AUTO reduce production abstract_declarator(parameter_declaration) -> list(pointer1) STAR option(type_qualifier_list) direct_abstract_declarator
-- On ATTRIBUTE reduce production abstract_declarator(parameter_declaration) -> list(pointer1) STAR option(type_qualifier_list) direct_abstract_declarator
-- On ASM reduce production abstract_declarator(parameter_declaration) -> list(pointer1) STAR option(type_qualifier_list) direct_abstract_declarator
-- On AND_ASSIGN reduce production abstract_declarator(parameter_declaration) -> list(pointer1) STAR option(type_qualifier_list) direct_abstract_declarator
-- On ANDAND reduce production abstract_declarator(parameter_declaration) -> list(pointer1) STAR option(type_qualifier_list) direct_abstract_declarator
-- On AND reduce production abstract_declarator(parameter_declaration) -> list(pointer1) STAR option(type_qualifier_list) direct_abstract_declarator
-- On ALIGNOF reduce production abstract_declarator(parameter_declaration) -> list(pointer1) STAR option(type_qualifier_list) direct_abstract_declarator
-- On ALIGNAS reduce production abstract_declarator(parameter_declaration) -> list(pointer1) STAR option(type_qualifier_list) direct_abstract_declarator
-- On ADD_ASSIGN reduce production abstract_declarator(parameter_declaration) -> list(pointer1) STAR option(type_qualifier_list) direct_abstract_declarator

State 270:
## Known stack suffix:
## direct_abstract_declarator
## LR(1) items:
abstract_declarator(parameter_declaration) -> direct_abstract_declarator . [ RPAREN COMMA ]
direct_abstract_declarator -> direct_abstract_declarator . LPAREN option(context_parameter_type_list) RPAREN [ RPAREN LPAREN LBRACK COMMA ]
option(direct_abstract_declarator) -> direct_abstract_declarator . [ LBRACK ]
## Transitions:
-- On LPAREN shift to state 244
## Reductions:
-- On XOR_ASSIGN reduce production abstract_declarator(parameter_declaration) -> direct_abstract_declarator
-- On WHILE reduce production abstract_declarator(parameter_declaration) -> direct_abstract_declarator
-- On VOLATILE reduce production abstract_declarator(parameter_declaration) -> direct_abstract_declarator
-- On VOID reduce production abstract_declarator(parameter_declaration) -> direct_abstract_declarator
-- On VAR_NAME reduce production abstract_declarator(parameter_declaration) -> direct_abstract_declarator
-- On UNSIGNED reduce production abstract_declarator(parameter_declaration) -> direct_abstract_declarator
-- On UNION reduce production abstract_declarator(parameter_declaration) -> direct_abstract_declarator
-- On UNDERSCORE_BOOL reduce production abstract_declarator(parameter_declaration) -> direct_abstract_declarator
-- On TYPEDEF_NAME reduce production abstract_declarator(parameter_declaration) -> direct_abstract_declarator
-- On TYPEDEF reduce production abstract_declarator(parameter_declaration) -> direct_abstract_declarator
-- On TILDE reduce production abstract_declarator(parameter_declaration) -> direct_abstract_declarator
-- On SWITCH reduce production abstract_declarator(parameter_declaration) -> direct_abstract_declarator
-- On SUB_ASSIGN reduce production abstract_declarator(parameter_declaration) -> direct_abstract_declarator
-- On STRUCT reduce production abstract_declarator(parameter_declaration) -> direct_abstract_declarator
-- On STRING_LITERAL reduce production abstract_declarator(parameter_declaration) -> direct_abstract_declarator
-- On STATIC reduce production abstract_declarator(parameter_declaration) -> direct_abstract_declarator
-- On STAR reduce production abstract_declarator(parameter_declaration) -> direct_abstract_declarator
-- On SLASH reduce production abstract_declarator(parameter_declaration) -> direct_abstract_declarator
-- On SIZEOF reduce production abstract_declarator(parameter_declaration) -> direct_abstract_declarator
-- On SIGNED reduce production abstract_declarator(parameter_declaration) -> direct_abstract_declarator
-- On SHORT reduce production abstract_declarator(parameter_declaration) -> direct_abstract_declarator
-- On SEMICOLON reduce production abstract_declarator(parameter_declaration) -> direct_abstract_declarator
-- On RPAREN reduce production abstract_declarator(parameter_declaration) -> direct_abstract_declarator
-- On RIGHT_ASSIGN reduce production abstract_declarator(parameter_declaration) -> direct_abstract_declarator
-- On RIGHT reduce production abstract_declarator(parameter_declaration) -> direct_abstract_declarator
-- On RETURN reduce production abstract_declarator(parameter_declaration) -> direct_abstract_declarator
-- On RESTRICT reduce production abstract_declarator(parameter_declaration) -> direct_abstract_declarator
-- On REGISTER reduce production abstract_declarator(parameter_declaration) -> direct_abstract_declarator
-- On RBRACK reduce production abstract_declarator(parameter_declaration) -> direct_abstract_declarator
-- On RBRACE reduce production abstract_declarator(parameter_declaration) -> direct_abstract_declarator
-- On QUESTION reduce production abstract_declarator(parameter_declaration) -> direct_abstract_declarator
-- On PTR reduce production abstract_declarator(parameter_declaration) -> direct_abstract_declarator
-- On PRE_NAME reduce production abstract_declarator(parameter_declaration) -> direct_abstract_declarator
-- On PRAGMA reduce production abstract_declarator(parameter_declaration) -> direct_abstract_declarator
-- On PLUS reduce production abstract_declarator(parameter_declaration) -> direct_abstract_declarator
-- On PERCENT reduce production abstract_declarator(parameter_declaration) -> direct_abstract_declarator
-- On PACKED reduce production abstract_declarator(parameter_declaration) -> direct_abstract_declarator
-- On OR_ASSIGN reduce production abstract_declarator(parameter_declaration) -> direct_abstract_declarator
-- On NEQ reduce production abstract_declarator(parameter_declaration) -> direct_abstract_declarator
-- On MUL_ASSIGN reduce production abstract_declarator(parameter_declaration) -> direct_abstract_declarator
-- On MOD_ASSIGN reduce production abstract_declarator(parameter_declaration) -> direct_abstract_declarator
-- On MINUS reduce production abstract_declarator(parameter_declaration) -> direct_abstract_declarator
-- On LT reduce production abstract_declarator(parameter_declaration) -> direct_abstract_declarator
-- On LONG reduce production abstract_declarator(parameter_declaration) -> direct_abstract_declarator
-- On LEQ reduce production abstract_declarator(parameter_declaration) -> direct_abstract_declarator
-- On LEFT_ASSIGN reduce production abstract_declarator(parameter_declaration) -> direct_abstract_declarator
-- On LEFT reduce production abstract_declarator(parameter_declaration) -> direct_abstract_declarator
-- On LBRACK reduce production option(direct_abstract_declarator) -> direct_abstract_declarator
-- On LBRACE reduce production abstract_declarator(parameter_declaration) -> direct_abstract_declarator
-- On INT reduce production abstract_declarator(parameter_declaration) -> direct_abstract_declarator
-- On INLINE reduce production abstract_declarator(parameter_declaration) -> direct_abstract_declarator
-- On INC reduce production abstract_declarator(parameter_declaration) -> direct_abstract_declarator
-- On IF reduce production abstract_declarator(parameter_declaration) -> direct_abstract_declarator
-- On HAT reduce production abstract_declarator(parameter_declaration) -> direct_abstract_declarator
-- On GT reduce production abstract_declarator(parameter_declaration) -> direct_abstract_declarator
-- On GOTO reduce production abstract_declarator(parameter_declaration) -> direct_abstract_declarator
-- On GEQ reduce production abstract_declarator(parameter_declaration) -> direct_abstract_declarator
-- On FOR reduce production abstract_declarator(parameter_declaration) -> direct_abstract_declarator
-- On FLOAT reduce production abstract_declarator(parameter_declaration) -> direct_abstract_declarator
-- On EXTERN reduce production abstract_declarator(parameter_declaration) -> direct_abstract_declarator
-- On EQEQ reduce production abstract_declarator(parameter_declaration) -> direct_abstract_declarator
-- On EQ reduce production abstract_declarator(parameter_declaration) -> direct_abstract_declarator
-- On EOF reduce production abstract_declarator(parameter_declaration) -> direct_abstract_declarator
-- On ENUM reduce production abstract_declarator(parameter_declaration) -> direct_abstract_declarator
-- On ELSE reduce production abstract_declarator(parameter_declaration) -> direct_abstract_declarator
-- On ELLIPSIS reduce production abstract_declarator(parameter_declaration) -> direct_abstract_declarator
-- On DOUBLE reduce production abstract_declarator(parameter_declaration) -> direct_abstract_declarator
-- On DOT reduce production abstract_declarator(parameter_declaration) -> direct_abstract_declarator
-- On DO reduce production abstract_declarator(parameter_declaration) -> direct_abstract_declarator
-- On DIV_ASSIGN reduce production abstract_declarator(parameter_declaration) -> direct_abstract_declarator
-- On DEFAULT reduce production abstract_declarator(parameter_declaration) -> direct_abstract_declarator
-- On DEC reduce production abstract_declarator(parameter_declaration) -> direct_abstract_declarator
-- On CONTINUE reduce production abstract_declarator(parameter_declaration) -> direct_abstract_declarator
-- On CONSTANT reduce production abstract_declarator(parameter_declaration) -> direct_abstract_declarator
-- On CONST reduce production abstract_declarator(parameter_declaration) -> direct_abstract_declarator
-- On COMMA reduce production abstract_declarator(parameter_declaration) -> direct_abstract_declarator
-- On COLON reduce production abstract_declarator(parameter_declaration) -> direct_abstract_declarator
-- On CHAR reduce production abstract_declarator(parameter_declaration) -> direct_abstract_declarator
-- On CASE reduce production abstract_declarator(parameter_declaration) -> direct_abstract_declarator
-- On BUILTIN_VA_ARG reduce production abstract_declarator(parameter_declaration) -> direct_abstract_declarator
-- On BREAK reduce production abstract_declarator(parameter_declaration) -> direct_abstract_declarator
-- On BARBAR reduce production abstract_declarator(parameter_declaration) -> direct_abstract_declarator
-- On BAR reduce production abstract_declarator(parameter_declaration) -> direct_abstract_declarator
-- On BANG reduce production abstract_declarator(parameter_declaration) -> direct_abstract_declarator
-- On AUTO reduce production abstract_declarator(parameter_declaration) -> direct_abstract_declarator
-- On ATTRIBUTE reduce production abstract_declarator(parameter_declaration) -> direct_abstract_declarator
-- On ASM reduce production abstract_declarator(parameter_declaration) -> direct_abstract_declarator
-- On AND_ASSIGN reduce production abstract_declarator(parameter_declaration) -> direct_abstract_declarator
-- On ANDAND reduce production abstract_declarator(parameter_declaration) -> direct_abstract_declarator
-- On AND reduce production abstract_declarator(parameter_declaration) -> direct_abstract_declarator
-- On ALIGNOF reduce production abstract_declarator(parameter_declaration) -> direct_abstract_declarator
-- On ALIGNAS reduce production abstract_declarator(parameter_declaration) -> direct_abstract_declarator
-- On ADD_ASSIGN reduce production abstract_declarator(parameter_declaration) -> direct_abstract_declarator

State 271:
## Known stack suffix:
## declaration_specifiers(parameter_declaration) declare_varname(declarator)
## LR(1) items:
parameter_declaration -> declaration_specifiers(parameter_declaration) declare_varname(declarator) . [ RPAREN COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production parameter_declaration -> declaration_specifiers(parameter_declaration) declare_varname(declarator)

State 272:
## Known stack suffix:
## declarator
## LR(1) items:
declare_varname(declarator) -> declarator . [ RPAREN COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production declare_varname(declarator) -> declarator

State 273:
## Known stack suffix:
## abstract_declarator(parameter_declaration)
## LR(1) items:
option(abstract_declarator(parameter_declaration)) -> abstract_declarator(parameter_declaration) . [ RPAREN COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production option(abstract_declarator(parameter_declaration)) -> abstract_declarator(parameter_declaration)

State 274:
## Known stack suffix:
## direct_declarator LPAREN save_context option(identifier_list)
## LR(1) items:
direct_declarator -> direct_declarator LPAREN save_context option(identifier_list) . RPAREN [ VOLATILE VOID UNSIGNED UNION UNDERSCORE_BOOL STRUCT STATIC SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER PRE_NAME PACKED LPAREN LONG LBRACK LBRACE INT INLINE FLOAT EXTERN EQ ENUM DOUBLE CONST COMMA COLON CHAR AUTO ATTRIBUTE ALIGNAS ]
## Transitions:
-- On RPAREN shift to state 275
## Reductions:

State 275:
## Known stack suffix:
## direct_declarator LPAREN save_context option(identifier_list) RPAREN
## LR(1) items:
direct_declarator -> direct_declarator LPAREN save_context option(identifier_list) RPAREN . [ VOLATILE VOID UNSIGNED UNION UNDERSCORE_BOOL STRUCT STATIC SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER PRE_NAME PACKED LPAREN LONG LBRACK LBRACE INT INLINE FLOAT EXTERN EQ ENUM DOUBLE CONST COMMA COLON CHAR AUTO ATTRIBUTE ALIGNAS ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production direct_declarator -> direct_declarator LPAREN save_context option(identifier_list) RPAREN

State 276:
## Known stack suffix:
## identifier_list
## LR(1) items:
identifier_list -> identifier_list . COMMA PRE_NAME VAR_NAME [ RPAREN COMMA ]
option(identifier_list) -> identifier_list . [ RPAREN ]
## Transitions:
-- On COMMA shift to state 277
## Reductions:
-- On RPAREN reduce production option(identifier_list) -> identifier_list

State 277:
## Known stack suffix:
## identifier_list COMMA
## LR(1) items:
identifier_list -> identifier_list COMMA . PRE_NAME VAR_NAME [ RPAREN COMMA ]
## Transitions:
-- On PRE_NAME shift to state 278
## Reductions:

State 278:
## Known stack suffix:
## identifier_list COMMA PRE_NAME
## LR(1) items:
identifier_list -> identifier_list COMMA PRE_NAME . VAR_NAME [ RPAREN COMMA ]
## Transitions:
-- On VAR_NAME shift to state 279
## Reductions:

State 279:
## Known stack suffix:
## identifier_list COMMA PRE_NAME VAR_NAME
## LR(1) items:
identifier_list -> identifier_list COMMA PRE_NAME VAR_NAME . [ RPAREN COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production identifier_list -> identifier_list COMMA PRE_NAME VAR_NAME

State 280:
## Known stack suffix:
## direct_declarator LPAREN context_parameter_type_list
## LR(1) items:
direct_declarator -> direct_declarator LPAREN context_parameter_type_list . RPAREN [ VOLATILE VOID UNSIGNED UNION UNDERSCORE_BOOL STRUCT STATIC SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER PRE_NAME PACKED LPAREN LONG LBRACK LBRACE INT INLINE FLOAT EXTERN EQ ENUM DOUBLE CONST COMMA COLON CHAR AUTO ATTRIBUTE ALIGNAS ]
## Transitions:
-- On RPAREN shift to state 281
## Reductions:

State 281:
## Known stack suffix:
## direct_declarator LPAREN context_parameter_type_list RPAREN
## LR(1) items:
direct_declarator -> direct_declarator LPAREN context_parameter_type_list RPAREN . [ VOLATILE VOID UNSIGNED UNION UNDERSCORE_BOOL STRUCT STATIC SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER PRE_NAME PACKED LPAREN LONG LBRACK LBRACE INT INLINE FLOAT EXTERN EQ ENUM DOUBLE CONST COMMA COLON CHAR AUTO ATTRIBUTE ALIGNAS ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production direct_declarator -> direct_declarator LPAREN context_parameter_type_list RPAREN

State 282:
## Known stack suffix:
## struct_declarator_list
## LR(1) items:
option(struct_declarator_list) -> struct_declarator_list . [ SEMICOLON ]
struct_declarator_list -> struct_declarator_list . COMMA struct_declarator [ SEMICOLON COMMA ]
## Transitions:
-- On COMMA shift to state 283
## Reductions:
-- On SEMICOLON reduce production option(struct_declarator_list) -> struct_declarator_list

State 283:
## Known stack suffix:
## struct_declarator_list COMMA
## LR(1) items:
struct_declarator_list -> struct_declarator_list COMMA . struct_declarator [ SEMICOLON COMMA ]
## Transitions:
-- On PRE_NAME shift to state 178
-- On LPAREN shift to state 182
-- On struct_declarator shift to state 284
-- On option(declarator) shift to state 285
-- On list(pointer1) shift to state 184
-- On direct_declarator shift to state 250
-- On declarator_noattrend shift to state 255
-- On declarator_identifier shift to state 249
-- On declarator shift to state 288
## Reductions:
-- On STAR reduce production list(pointer1) ->
-- On COLON reduce production option(declarator) ->

State 284:
## Known stack suffix:
## struct_declarator_list COMMA struct_declarator
## LR(1) items:
struct_declarator_list -> struct_declarator_list COMMA struct_declarator . [ SEMICOLON COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production struct_declarator_list -> struct_declarator_list COMMA struct_declarator

State 285:
## Known stack suffix:
## option(declarator)
## LR(1) items:
struct_declarator -> option(declarator) . COLON conditional_expression [ SEMICOLON COMMA ]
## Transitions:
-- On COLON shift to state 286
## Reductions:

State 286:
## Known stack suffix:
## option(declarator) COLON
## LR(1) items:
struct_declarator -> option(declarator) COLON . conditional_expression [ SEMICOLON COMMA ]
## Transitions:
-- On TILDE shift to state 18
-- On STRING_LITERAL shift to state 19
-- On STAR shift to state 20
-- On SIZEOF shift to state 21
-- On PRE_NAME shift to state 22
-- On PLUS shift to state 24
-- On MINUS shift to state 25
-- On LPAREN shift to state 28
-- On INC shift to state 31
-- On DEC shift to state 46
-- On CONSTANT shift to state 47
-- On BUILTIN_VA_ARG shift to state 48
-- On BANG shift to state 50
-- On AND shift to state 51
-- On ALIGNOF shift to state 52
-- On unary_operator shift to state 56
-- On unary_expression shift to state 57
-- On string_literals_list shift to state 58
-- On shift_expression shift to state 78
-- On relational_expression shift to state 94
-- On primary_expression shift to state 60
-- On postfix_expression shift to state 61
-- On multiplicative_expression shift to state 82
-- On logical_or_expression shift to state 102
-- On logical_and_expression shift to state 104
-- On inclusive_or_expression shift to state 120
-- On exclusive_or_expression shift to state 119
-- On equality_expression shift to state 110
-- On conditional_expression shift to state 287
-- On cast_expression shift to state 88
-- On and_expression shift to state 118
-- On additive_expression shift to state 101
## Reductions:

State 287:
## Known stack suffix:
## option(declarator) COLON conditional_expression
## LR(1) items:
struct_declarator -> option(declarator) COLON conditional_expression . [ SEMICOLON COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production struct_declarator -> option(declarator) COLON conditional_expression

State 288:
## Known stack suffix:
## declarator
## LR(1) items:
option(declarator) -> declarator . [ COLON ]
struct_declarator -> declarator . [ SEMICOLON COMMA ]
## Transitions:
## Reductions:
-- On SEMICOLON reduce production struct_declarator -> declarator
-- On COMMA reduce production struct_declarator -> declarator
-- On COLON reduce production option(declarator) -> declarator

State 289:
## Known stack suffix:
## struct_declarator
## LR(1) items:
struct_declarator_list -> struct_declarator . [ SEMICOLON COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production struct_declarator_list -> struct_declarator

State 290:
## Known stack suffix:
## specifier_qualifier_list(struct_declaration) option(struct_declarator_list)
## LR(1) items:
struct_declaration -> specifier_qualifier_list(struct_declaration) option(struct_declarator_list) . SEMICOLON [ VOLATILE VOID UNSIGNED UNION UNDERSCORE_BOOL STRUCT SIGNED SHORT RESTRICT RBRACE PRE_NAME PACKED LONG INT FLOAT ENUM DOUBLE CONST CHAR ATTRIBUTE ALIGNAS ]
## Transitions:
-- On SEMICOLON shift to state 291
## Reductions:

State 291:
## Known stack suffix:
## specifier_qualifier_list(struct_declaration) option(struct_declarator_list) SEMICOLON
## LR(1) items:
struct_declaration -> specifier_qualifier_list(struct_declaration) option(struct_declarator_list) SEMICOLON . [ VOLATILE VOID UNSIGNED UNION UNDERSCORE_BOOL STRUCT SIGNED SHORT RESTRICT RBRACE PRE_NAME PACKED LONG INT FLOAT ENUM DOUBLE CONST CHAR ATTRIBUTE ALIGNAS ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production struct_declaration -> specifier_qualifier_list(struct_declaration) option(struct_declarator_list) SEMICOLON

State 292:
## Known stack suffix:
## option(type_qualifier_list)
## LR(1) items:
type_qualifier_list -> option(type_qualifier_list) . type_qualifier_noattr [ VOLATILE VOID UNSIGNED UNION UNDERSCORE_BOOL STRUCT SIGNED SHORT RESTRICT PRE_NAME PACKED LONG INT FLOAT ENUM DOUBLE CONST CHAR ATTRIBUTE ALIGNAS ]
type_qualifier_list -> option(type_qualifier_list) . attribute_specifier [ VOLATILE VOID UNSIGNED UNION UNDERSCORE_BOOL STRUCT SIGNED SHORT RESTRICT PRE_NAME PACKED LONG INT FLOAT ENUM DOUBLE CONST CHAR ATTRIBUTE ALIGNAS ]
## Transitions:
-- On VOLATILE shift to state 1
-- On RESTRICT shift to state 12
-- On PACKED shift to state 16
-- On CONST shift to state 148
-- On ATTRIBUTE shift to state 35
-- On ALIGNAS shift to state 149
-- On type_qualifier_noattr shift to state 164
-- On attribute_specifier shift to state 165
## Reductions:

State 293:
## Known stack suffix:
## struct_or_union attribute_specifier_list general_identifier
## LR(1) items:
option(other_identifier) -> general_identifier . [ LBRACE ]
struct_or_union_specifier -> struct_or_union attribute_specifier_list general_identifier . [ VOLATILE VOID UNSIGNED UNION UNDERSCORE_BOOL TYPEDEF STRUCT STATIC STAR SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER PRE_NAME PACKED LPAREN LONG LBRACK INT INLINE FLOAT EXTERN ENUM DOUBLE CONST COMMA COLON CHAR AUTO ATTRIBUTE ALIGNAS ]
## Transitions:
## Reductions:
-- On XOR_ASSIGN reduce production struct_or_union_specifier -> struct_or_union attribute_specifier_list general_identifier
-- On WHILE reduce production struct_or_union_specifier -> struct_or_union attribute_specifier_list general_identifier
-- On VOLATILE reduce production struct_or_union_specifier -> struct_or_union attribute_specifier_list general_identifier
-- On VOID reduce production struct_or_union_specifier -> struct_or_union attribute_specifier_list general_identifier
-- On VAR_NAME reduce production struct_or_union_specifier -> struct_or_union attribute_specifier_list general_identifier
-- On UNSIGNED reduce production struct_or_union_specifier -> struct_or_union attribute_specifier_list general_identifier
-- On UNION reduce production struct_or_union_specifier -> struct_or_union attribute_specifier_list general_identifier
-- On UNDERSCORE_BOOL reduce production struct_or_union_specifier -> struct_or_union attribute_specifier_list general_identifier
-- On TYPEDEF_NAME reduce production struct_or_union_specifier -> struct_or_union attribute_specifier_list general_identifier
-- On TYPEDEF reduce production struct_or_union_specifier -> struct_or_union attribute_specifier_list general_identifier
-- On TILDE reduce production struct_or_union_specifier -> struct_or_union attribute_specifier_list general_identifier
-- On SWITCH reduce production struct_or_union_specifier -> struct_or_union attribute_specifier_list general_identifier
-- On SUB_ASSIGN reduce production struct_or_union_specifier -> struct_or_union attribute_specifier_list general_identifier
-- On STRUCT reduce production struct_or_union_specifier -> struct_or_union attribute_specifier_list general_identifier
-- On STRING_LITERAL reduce production struct_or_union_specifier -> struct_or_union attribute_specifier_list general_identifier
-- On STATIC reduce production struct_or_union_specifier -> struct_or_union attribute_specifier_list general_identifier
-- On STAR reduce production struct_or_union_specifier -> struct_or_union attribute_specifier_list general_identifier
-- On SLASH reduce production struct_or_union_specifier -> struct_or_union attribute_specifier_list general_identifier
-- On SIZEOF reduce production struct_or_union_specifier -> struct_or_union attribute_specifier_list general_identifier
-- On SIGNED reduce production struct_or_union_specifier -> struct_or_union attribute_specifier_list general_identifier
-- On SHORT reduce production struct_or_union_specifier -> struct_or_union attribute_specifier_list general_identifier
-- On SEMICOLON reduce production struct_or_union_specifier -> struct_or_union attribute_specifier_list general_identifier
-- On RPAREN reduce production struct_or_union_specifier -> struct_or_union attribute_specifier_list general_identifier
-- On RIGHT_ASSIGN reduce production struct_or_union_specifier -> struct_or_union attribute_specifier_list general_identifier
-- On RIGHT reduce production struct_or_union_specifier -> struct_or_union attribute_specifier_list general_identifier
-- On RETURN reduce production struct_or_union_specifier -> struct_or_union attribute_specifier_list general_identifier
-- On RESTRICT reduce production struct_or_union_specifier -> struct_or_union attribute_specifier_list general_identifier
-- On REGISTER reduce production struct_or_union_specifier -> struct_or_union attribute_specifier_list general_identifier
-- On RBRACK reduce production struct_or_union_specifier -> struct_or_union attribute_specifier_list general_identifier
-- On RBRACE reduce production struct_or_union_specifier -> struct_or_union attribute_specifier_list general_identifier
-- On QUESTION reduce production struct_or_union_specifier -> struct_or_union attribute_specifier_list general_identifier
-- On PTR reduce production struct_or_union_specifier -> struct_or_union attribute_specifier_list general_identifier
-- On PRE_NAME reduce production struct_or_union_specifier -> struct_or_union attribute_specifier_list general_identifier
-- On PRAGMA reduce production struct_or_union_specifier -> struct_or_union attribute_specifier_list general_identifier
-- On PLUS reduce production struct_or_union_specifier -> struct_or_union attribute_specifier_list general_identifier
-- On PERCENT reduce production struct_or_union_specifier -> struct_or_union attribute_specifier_list general_identifier
-- On PACKED reduce production struct_or_union_specifier -> struct_or_union attribute_specifier_list general_identifier
-- On OR_ASSIGN reduce production struct_or_union_specifier -> struct_or_union attribute_specifier_list general_identifier
-- On NEQ reduce production struct_or_union_specifier -> struct_or_union attribute_specifier_list general_identifier
-- On MUL_ASSIGN reduce production struct_or_union_specifier -> struct_or_union attribute_specifier_list general_identifier
-- On MOD_ASSIGN reduce production struct_or_union_specifier -> struct_or_union attribute_specifier_list general_identifier
-- On MINUS reduce production struct_or_union_specifier -> struct_or_union attribute_specifier_list general_identifier
-- On LT reduce production struct_or_union_specifier -> struct_or_union attribute_specifier_list general_identifier
-- On LPAREN reduce production struct_or_union_specifier -> struct_or_union attribute_specifier_list general_identifier
-- On LONG reduce production struct_or_union_specifier -> struct_or_union attribute_specifier_list general_identifier
-- On LEQ reduce production struct_or_union_specifier -> struct_or_union attribute_specifier_list general_identifier
-- On LEFT_ASSIGN reduce production struct_or_union_specifier -> struct_or_union attribute_specifier_list general_identifier
-- On LEFT reduce production struct_or_union_specifier -> struct_or_union attribute_specifier_list general_identifier
-- On LBRACK reduce production struct_or_union_specifier -> struct_or_union attribute_specifier_list general_identifier
-- On LBRACE reduce production option(other_identifier) -> general_identifier
-- On INT reduce production struct_or_union_specifier -> struct_or_union attribute_specifier_list general_identifier
-- On INLINE reduce production struct_or_union_specifier -> struct_or_union attribute_specifier_list general_identifier
-- On INC reduce production struct_or_union_specifier -> struct_or_union attribute_specifier_list general_identifier
-- On IF reduce production struct_or_union_specifier -> struct_or_union attribute_specifier_list general_identifier
-- On HAT reduce production struct_or_union_specifier -> struct_or_union attribute_specifier_list general_identifier
-- On GT reduce production struct_or_union_specifier -> struct_or_union attribute_specifier_list general_identifier
-- On GOTO reduce production struct_or_union_specifier -> struct_or_union attribute_specifier_list general_identifier
-- On GEQ reduce production struct_or_union_specifier -> struct_or_union attribute_specifier_list general_identifier
-- On FOR reduce production struct_or_union_specifier -> struct_or_union attribute_specifier_list general_identifier
-- On FLOAT reduce production struct_or_union_specifier -> struct_or_union attribute_specifier_list general_identifier
-- On EXTERN reduce production struct_or_union_specifier -> struct_or_union attribute_specifier_list general_identifier
-- On EQEQ reduce production struct_or_union_specifier -> struct_or_union attribute_specifier_list general_identifier
-- On EQ reduce production struct_or_union_specifier -> struct_or_union attribute_specifier_list general_identifier
-- On EOF reduce production struct_or_union_specifier -> struct_or_union attribute_specifier_list general_identifier
-- On ENUM reduce production struct_or_union_specifier -> struct_or_union attribute_specifier_list general_identifier
-- On ELSE reduce production struct_or_union_specifier -> struct_or_union attribute_specifier_list general_identifier
-- On ELLIPSIS reduce production struct_or_union_specifier -> struct_or_union attribute_specifier_list general_identifier
-- On DOUBLE reduce production struct_or_union_specifier -> struct_or_union attribute_specifier_list general_identifier
-- On DOT reduce production struct_or_union_specifier -> struct_or_union attribute_specifier_list general_identifier
-- On DO reduce production struct_or_union_specifier -> struct_or_union attribute_specifier_list general_identifier
-- On DIV_ASSIGN reduce production struct_or_union_specifier -> struct_or_union attribute_specifier_list general_identifier
-- On DEFAULT reduce production struct_or_union_specifier -> struct_or_union attribute_specifier_list general_identifier
-- On DEC reduce production struct_or_union_specifier -> struct_or_union attribute_specifier_list general_identifier
-- On CONTINUE reduce production struct_or_union_specifier -> struct_or_union attribute_specifier_list general_identifier
-- On CONSTANT reduce production struct_or_union_specifier -> struct_or_union attribute_specifier_list general_identifier
-- On CONST reduce production struct_or_union_specifier -> struct_or_union attribute_specifier_list general_identifier
-- On COMMA reduce production struct_or_union_specifier -> struct_or_union attribute_specifier_list general_identifier
-- On COLON reduce production struct_or_union_specifier -> struct_or_union attribute_specifier_list general_identifier
-- On CHAR reduce production struct_or_union_specifier -> struct_or_union attribute_specifier_list general_identifier
-- On CASE reduce production struct_or_union_specifier -> struct_or_union attribute_specifier_list general_identifier
-- On BUILTIN_VA_ARG reduce production struct_or_union_specifier -> struct_or_union attribute_specifier_list general_identifier
-- On BREAK reduce production struct_or_union_specifier -> struct_or_union attribute_specifier_list general_identifier
-- On BARBAR reduce production struct_or_union_specifier -> struct_or_union attribute_specifier_list general_identifier
-- On BAR reduce production struct_or_union_specifier -> struct_or_union attribute_specifier_list general_identifier
-- On BANG reduce production struct_or_union_specifier -> struct_or_union attribute_specifier_list general_identifier
-- On AUTO reduce production struct_or_union_specifier -> struct_or_union attribute_specifier_list general_identifier
-- On ATTRIBUTE reduce production struct_or_union_specifier -> struct_or_union attribute_specifier_list general_identifier
-- On ASM reduce production struct_or_union_specifier -> struct_or_union attribute_specifier_list general_identifier
-- On AND_ASSIGN reduce production struct_or_union_specifier -> struct_or_union attribute_specifier_list general_identifier
-- On ANDAND reduce production struct_or_union_specifier -> struct_or_union attribute_specifier_list general_identifier
-- On AND reduce production struct_or_union_specifier -> struct_or_union attribute_specifier_list general_identifier
-- On ALIGNOF reduce production struct_or_union_specifier -> struct_or_union attribute_specifier_list general_identifier
-- On ALIGNAS reduce production struct_or_union_specifier -> struct_or_union attribute_specifier_list general_identifier
-- On ADD_ASSIGN reduce production struct_or_union_specifier -> struct_or_union attribute_specifier_list general_identifier

State 294:
## Known stack suffix:
## type_qualifier_list
## LR(1) items:
option(type_qualifier_list) -> type_qualifier_list . [ VOLATILE RESTRICT PACKED CONST ATTRIBUTE ALIGNAS ]
specifier_qualifier_list(type_name) -> type_qualifier_list . typedef_name option(type_qualifier_list) [ STAR RPAREN LPAREN LBRACK ]
specifier_qualifier_list(type_name) -> type_qualifier_list . type_specifier_no_typedef_name list(specifier_qualifier_no_typedef_name) [ STAR RPAREN LPAREN LBRACK ]
## Transitions:
-- On VOID shift to state 2
-- On UNSIGNED shift to state 3
-- On UNION shift to state 4
-- On UNDERSCORE_BOOL shift to state 5
-- On STRUCT shift to state 8
-- On SIGNED shift to state 10
-- On SHORT shift to state 11
-- On PRE_NAME shift to state 14
-- On LONG shift to state 29
-- On INT shift to state 30
-- On FLOAT shift to state 33
-- On ENUM shift to state 34
-- On DOUBLE shift to state 54
-- On CHAR shift to state 55
-- On typedef_name shift to state 295
-- On type_specifier_no_typedef_name shift to state 297
-- On struct_or_union_specifier shift to state 155
-- On struct_or_union shift to state 156
-- On enum_specifier shift to state 169
## Reductions:
-- On VOLATILE reduce production option(type_qualifier_list) -> type_qualifier_list
-- On RESTRICT reduce production option(type_qualifier_list) -> type_qualifier_list
-- On PACKED reduce production option(type_qualifier_list) -> type_qualifier_list
-- On CONST reduce production option(type_qualifier_list) -> type_qualifier_list
-- On ATTRIBUTE reduce production option(type_qualifier_list) -> type_qualifier_list
-- On ALIGNAS reduce production option(type_qualifier_list) -> type_qualifier_list

State 295:
## Known stack suffix:
## type_qualifier_list typedef_name
## LR(1) items:
specifier_qualifier_list(type_name) -> type_qualifier_list typedef_name . option(type_qualifier_list) [ STAR RPAREN LPAREN LBRACK ]
## Transitions:
-- On type_qualifier_list shift to state 146
-- On option(type_qualifier_list) shift to state 296
## Default reduction:
-- After reading the next token, reduce production option(type_qualifier_list) ->

State 296:
## Known stack suffix:
## type_qualifier_list typedef_name option(type_qualifier_list)
## LR(1) items:
specifier_qualifier_list(type_name) -> type_qualifier_list typedef_name option(type_qualifier_list) . [ STAR RPAREN LPAREN LBRACK ]
type_qualifier_list -> option(type_qualifier_list) . type_qualifier_noattr [ VOLATILE STAR RPAREN RESTRICT PACKED LPAREN LBRACK CONST ATTRIBUTE ALIGNAS ]
type_qualifier_list -> option(type_qualifier_list) . attribute_specifier [ VOLATILE STAR RPAREN RESTRICT PACKED LPAREN LBRACK CONST ATTRIBUTE ALIGNAS ]
## Transitions:
-- On VOLATILE shift to state 1
-- On RESTRICT shift to state 12
-- On PACKED shift to state 16
-- On CONST shift to state 148
-- On ATTRIBUTE shift to state 35
-- On ALIGNAS shift to state 149
-- On type_qualifier_noattr shift to state 164
-- On attribute_specifier shift to state 165
## Reductions:
-- On XOR_ASSIGN reduce production specifier_qualifier_list(type_name) -> type_qualifier_list typedef_name option(type_qualifier_list)
-- On WHILE reduce production specifier_qualifier_list(type_name) -> type_qualifier_list typedef_name option(type_qualifier_list)
-- On VOID reduce production specifier_qualifier_list(type_name) -> type_qualifier_list typedef_name option(type_qualifier_list)
-- On VAR_NAME reduce production specifier_qualifier_list(type_name) -> type_qualifier_list typedef_name option(type_qualifier_list)
-- On UNSIGNED reduce production specifier_qualifier_list(type_name) -> type_qualifier_list typedef_name option(type_qualifier_list)
-- On UNION reduce production specifier_qualifier_list(type_name) -> type_qualifier_list typedef_name option(type_qualifier_list)
-- On UNDERSCORE_BOOL reduce production specifier_qualifier_list(type_name) -> type_qualifier_list typedef_name option(type_qualifier_list)
-- On TYPEDEF_NAME reduce production specifier_qualifier_list(type_name) -> type_qualifier_list typedef_name option(type_qualifier_list)
-- On TYPEDEF reduce production specifier_qualifier_list(type_name) -> type_qualifier_list typedef_name option(type_qualifier_list)
-- On TILDE reduce production specifier_qualifier_list(type_name) -> type_qualifier_list typedef_name option(type_qualifier_list)
-- On SWITCH reduce production specifier_qualifier_list(type_name) -> type_qualifier_list typedef_name option(type_qualifier_list)
-- On SUB_ASSIGN reduce production specifier_qualifier_list(type_name) -> type_qualifier_list typedef_name option(type_qualifier_list)
-- On STRUCT reduce production specifier_qualifier_list(type_name) -> type_qualifier_list typedef_name option(type_qualifier_list)
-- On STRING_LITERAL reduce production specifier_qualifier_list(type_name) -> type_qualifier_list typedef_name option(type_qualifier_list)
-- On STATIC reduce production specifier_qualifier_list(type_name) -> type_qualifier_list typedef_name option(type_qualifier_list)
-- On STAR reduce production specifier_qualifier_list(type_name) -> type_qualifier_list typedef_name option(type_qualifier_list)
-- On SLASH reduce production specifier_qualifier_list(type_name) -> type_qualifier_list typedef_name option(type_qualifier_list)
-- On SIZEOF reduce production specifier_qualifier_list(type_name) -> type_qualifier_list typedef_name option(type_qualifier_list)
-- On SIGNED reduce production specifier_qualifier_list(type_name) -> type_qualifier_list typedef_name option(type_qualifier_list)
-- On SHORT reduce production specifier_qualifier_list(type_name) -> type_qualifier_list typedef_name option(type_qualifier_list)
-- On SEMICOLON reduce production specifier_qualifier_list(type_name) -> type_qualifier_list typedef_name option(type_qualifier_list)
-- On RPAREN reduce production specifier_qualifier_list(type_name) -> type_qualifier_list typedef_name option(type_qualifier_list)
-- On RIGHT_ASSIGN reduce production specifier_qualifier_list(type_name) -> type_qualifier_list typedef_name option(type_qualifier_list)
-- On RIGHT reduce production specifier_qualifier_list(type_name) -> type_qualifier_list typedef_name option(type_qualifier_list)
-- On RETURN reduce production specifier_qualifier_list(type_name) -> type_qualifier_list typedef_name option(type_qualifier_list)
-- On REGISTER reduce production specifier_qualifier_list(type_name) -> type_qualifier_list typedef_name option(type_qualifier_list)
-- On RBRACK reduce production specifier_qualifier_list(type_name) -> type_qualifier_list typedef_name option(type_qualifier_list)
-- On RBRACE reduce production specifier_qualifier_list(type_name) -> type_qualifier_list typedef_name option(type_qualifier_list)
-- On QUESTION reduce production specifier_qualifier_list(type_name) -> type_qualifier_list typedef_name option(type_qualifier_list)
-- On PTR reduce production specifier_qualifier_list(type_name) -> type_qualifier_list typedef_name option(type_qualifier_list)
-- On PRE_NAME reduce production specifier_qualifier_list(type_name) -> type_qualifier_list typedef_name option(type_qualifier_list)
-- On PRAGMA reduce production specifier_qualifier_list(type_name) -> type_qualifier_list typedef_name option(type_qualifier_list)
-- On PLUS reduce production specifier_qualifier_list(type_name) -> type_qualifier_list typedef_name option(type_qualifier_list)
-- On PERCENT reduce production specifier_qualifier_list(type_name) -> type_qualifier_list typedef_name option(type_qualifier_list)
-- On OR_ASSIGN reduce production specifier_qualifier_list(type_name) -> type_qualifier_list typedef_name option(type_qualifier_list)
-- On NEQ reduce production specifier_qualifier_list(type_name) -> type_qualifier_list typedef_name option(type_qualifier_list)
-- On MUL_ASSIGN reduce production specifier_qualifier_list(type_name) -> type_qualifier_list typedef_name option(type_qualifier_list)
-- On MOD_ASSIGN reduce production specifier_qualifier_list(type_name) -> type_qualifier_list typedef_name option(type_qualifier_list)
-- On MINUS reduce production specifier_qualifier_list(type_name) -> type_qualifier_list typedef_name option(type_qualifier_list)
-- On LT reduce production specifier_qualifier_list(type_name) -> type_qualifier_list typedef_name option(type_qualifier_list)
-- On LPAREN reduce production specifier_qualifier_list(type_name) -> type_qualifier_list typedef_name option(type_qualifier_list)
-- On LONG reduce production specifier_qualifier_list(type_name) -> type_qualifier_list typedef_name option(type_qualifier_list)
-- On LEQ reduce production specifier_qualifier_list(type_name) -> type_qualifier_list typedef_name option(type_qualifier_list)
-- On LEFT_ASSIGN reduce production specifier_qualifier_list(type_name) -> type_qualifier_list typedef_name option(type_qualifier_list)
-- On LEFT reduce production specifier_qualifier_list(type_name) -> type_qualifier_list typedef_name option(type_qualifier_list)
-- On LBRACK reduce production specifier_qualifier_list(type_name) -> type_qualifier_list typedef_name option(type_qualifier_list)
-- On LBRACE reduce production specifier_qualifier_list(type_name) -> type_qualifier_list typedef_name option(type_qualifier_list)
-- On INT reduce production specifier_qualifier_list(type_name) -> type_qualifier_list typedef_name option(type_qualifier_list)
-- On INLINE reduce production specifier_qualifier_list(type_name) -> type_qualifier_list typedef_name option(type_qualifier_list)
-- On INC reduce production specifier_qualifier_list(type_name) -> type_qualifier_list typedef_name option(type_qualifier_list)
-- On IF reduce production specifier_qualifier_list(type_name) -> type_qualifier_list typedef_name option(type_qualifier_list)
-- On HAT reduce production specifier_qualifier_list(type_name) -> type_qualifier_list typedef_name option(type_qualifier_list)
-- On GT reduce production specifier_qualifier_list(type_name) -> type_qualifier_list typedef_name option(type_qualifier_list)
-- On GOTO reduce production specifier_qualifier_list(type_name) -> type_qualifier_list typedef_name option(type_qualifier_list)
-- On GEQ reduce production specifier_qualifier_list(type_name) -> type_qualifier_list typedef_name option(type_qualifier_list)
-- On FOR reduce production specifier_qualifier_list(type_name) -> type_qualifier_list typedef_name option(type_qualifier_list)
-- On FLOAT reduce production specifier_qualifier_list(type_name) -> type_qualifier_list typedef_name option(type_qualifier_list)
-- On EXTERN reduce production specifier_qualifier_list(type_name) -> type_qualifier_list typedef_name option(type_qualifier_list)
-- On EQEQ reduce production specifier_qualifier_list(type_name) -> type_qualifier_list typedef_name option(type_qualifier_list)
-- On EQ reduce production specifier_qualifier_list(type_name) -> type_qualifier_list typedef_name option(type_qualifier_list)
-- On EOF reduce production specifier_qualifier_list(type_name) -> type_qualifier_list typedef_name option(type_qualifier_list)
-- On ENUM reduce production specifier_qualifier_list(type_name) -> type_qualifier_list typedef_name option(type_qualifier_list)
-- On ELSE reduce production specifier_qualifier_list(type_name) -> type_qualifier_list typedef_name option(type_qualifier_list)
-- On ELLIPSIS reduce production specifier_qualifier_list(type_name) -> type_qualifier_list typedef_name option(type_qualifier_list)
-- On DOUBLE reduce production specifier_qualifier_list(type_name) -> type_qualifier_list typedef_name option(type_qualifier_list)
-- On DOT reduce production specifier_qualifier_list(type_name) -> type_qualifier_list typedef_name option(type_qualifier_list)
-- On DO reduce production specifier_qualifier_list(type_name) -> type_qualifier_list typedef_name option(type_qualifier_list)
-- On DIV_ASSIGN reduce production specifier_qualifier_list(type_name) -> type_qualifier_list typedef_name option(type_qualifier_list)
-- On DEFAULT reduce production specifier_qualifier_list(type_name) -> type_qualifier_list typedef_name option(type_qualifier_list)
-- On DEC reduce production specifier_qualifier_list(type_name) -> type_qualifier_list typedef_name option(type_qualifier_list)
-- On CONTINUE reduce production specifier_qualifier_list(type_name) -> type_qualifier_list typedef_name option(type_qualifier_list)
-- On CONSTANT reduce production specifier_qualifier_list(type_name) -> type_qualifier_list typedef_name option(type_qualifier_list)
-- On COMMA reduce production specifier_qualifier_list(type_name) -> type_qualifier_list typedef_name option(type_qualifier_list)
-- On COLON reduce production specifier_qualifier_list(type_name) -> type_qualifier_list typedef_name option(type_qualifier_list)
-- On CHAR reduce production specifier_qualifier_list(type_name) -> type_qualifier_list typedef_name option(type_qualifier_list)
-- On CASE reduce production specifier_qualifier_list(type_name) -> type_qualifier_list typedef_name option(type_qualifier_list)
-- On BUILTIN_VA_ARG reduce production specifier_qualifier_list(type_name) -> type_qualifier_list typedef_name option(type_qualifier_list)
-- On BREAK reduce production specifier_qualifier_list(type_name) -> type_qualifier_list typedef_name option(type_qualifier_list)
-- On BARBAR reduce production specifier_qualifier_list(type_name) -> type_qualifier_list typedef_name option(type_qualifier_list)
-- On BAR reduce production specifier_qualifier_list(type_name) -> type_qualifier_list typedef_name option(type_qualifier_list)
-- On BANG reduce production specifier_qualifier_list(type_name) -> type_qualifier_list typedef_name option(type_qualifier_list)
-- On AUTO reduce production specifier_qualifier_list(type_name) -> type_qualifier_list typedef_name option(type_qualifier_list)
-- On ASM reduce production specifier_qualifier_list(type_name) -> type_qualifier_list typedef_name option(type_qualifier_list)
-- On AND_ASSIGN reduce production specifier_qualifier_list(type_name) -> type_qualifier_list typedef_name option(type_qualifier_list)
-- On ANDAND reduce production specifier_qualifier_list(type_name) -> type_qualifier_list typedef_name option(type_qualifier_list)
-- On AND reduce production specifier_qualifier_list(type_name) -> type_qualifier_list typedef_name option(type_qualifier_list)
-- On ALIGNOF reduce production specifier_qualifier_list(type_name) -> type_qualifier_list typedef_name option(type_qualifier_list)
-- On ADD_ASSIGN reduce production specifier_qualifier_list(type_name) -> type_qualifier_list typedef_name option(type_qualifier_list)

State 297:
## Known stack suffix:
## type_qualifier_list type_specifier_no_typedef_name
## LR(1) items:
specifier_qualifier_list(type_name) -> type_qualifier_list type_specifier_no_typedef_name . list(specifier_qualifier_no_typedef_name) [ STAR RPAREN LPAREN LBRACK ]
## Transitions:
-- On list(specifier_qualifier_no_typedef_name) shift to state 298
## Default reduction:
-- After reading the next token, reduce production list(specifier_qualifier_no_typedef_name) ->

State 298:
## Known stack suffix:
## type_qualifier_list type_specifier_no_typedef_name list(specifier_qualifier_no_typedef_name)
## LR(1) items:
list(specifier_qualifier_no_typedef_name) -> list(specifier_qualifier_no_typedef_name) . specifier_qualifier_no_typedef_name [ VOLATILE VOID UNSIGNED UNION UNDERSCORE_BOOL STRUCT STAR SIGNED SHORT RPAREN RESTRICT PACKED LPAREN LONG LBRACK INT FLOAT ENUM DOUBLE CONST CHAR ATTRIBUTE ALIGNAS ]
specifier_qualifier_list(type_name) -> type_qualifier_list type_specifier_no_typedef_name list(specifier_qualifier_no_typedef_name) . [ STAR RPAREN LPAREN LBRACK ]
## Transitions:
-- On VOLATILE shift to state 1
-- On VOID shift to state 2
-- On UNSIGNED shift to state 3
-- On UNION shift to state 4
-- On UNDERSCORE_BOOL shift to state 5
-- On STRUCT shift to state 8
-- On SIGNED shift to state 10
-- On SHORT shift to state 11
-- On RESTRICT shift to state 12
-- On PACKED shift to state 16
-- On LONG shift to state 29
-- On INT shift to state 30
-- On FLOAT shift to state 33
-- On ENUM shift to state 34
-- On DOUBLE shift to state 54
-- On CONST shift to state 148
-- On CHAR shift to state 55
-- On ATTRIBUTE shift to state 35
-- On ALIGNAS shift to state 149
-- On type_specifier_no_typedef_name shift to state 153
-- On type_qualifier_noattr shift to state 154
-- On struct_or_union_specifier shift to state 155
-- On struct_or_union shift to state 156
-- On specifier_qualifier_no_typedef_name shift to state 168
-- On enum_specifier shift to state 169
-- On attribute_specifier shift to state 170
## Reductions:
-- On XOR_ASSIGN reduce production specifier_qualifier_list(type_name) -> type_qualifier_list type_specifier_no_typedef_name list(specifier_qualifier_no_typedef_name)
-- On WHILE reduce production specifier_qualifier_list(type_name) -> type_qualifier_list type_specifier_no_typedef_name list(specifier_qualifier_no_typedef_name)
-- On VAR_NAME reduce production specifier_qualifier_list(type_name) -> type_qualifier_list type_specifier_no_typedef_name list(specifier_qualifier_no_typedef_name)
-- On TYPEDEF_NAME reduce production specifier_qualifier_list(type_name) -> type_qualifier_list type_specifier_no_typedef_name list(specifier_qualifier_no_typedef_name)
-- On TYPEDEF reduce production specifier_qualifier_list(type_name) -> type_qualifier_list type_specifier_no_typedef_name list(specifier_qualifier_no_typedef_name)
-- On TILDE reduce production specifier_qualifier_list(type_name) -> type_qualifier_list type_specifier_no_typedef_name list(specifier_qualifier_no_typedef_name)
-- On SWITCH reduce production specifier_qualifier_list(type_name) -> type_qualifier_list type_specifier_no_typedef_name list(specifier_qualifier_no_typedef_name)
-- On SUB_ASSIGN reduce production specifier_qualifier_list(type_name) -> type_qualifier_list type_specifier_no_typedef_name list(specifier_qualifier_no_typedef_name)
-- On STRING_LITERAL reduce production specifier_qualifier_list(type_name) -> type_qualifier_list type_specifier_no_typedef_name list(specifier_qualifier_no_typedef_name)
-- On STATIC reduce production specifier_qualifier_list(type_name) -> type_qualifier_list type_specifier_no_typedef_name list(specifier_qualifier_no_typedef_name)
-- On STAR reduce production specifier_qualifier_list(type_name) -> type_qualifier_list type_specifier_no_typedef_name list(specifier_qualifier_no_typedef_name)
-- On SLASH reduce production specifier_qualifier_list(type_name) -> type_qualifier_list type_specifier_no_typedef_name list(specifier_qualifier_no_typedef_name)
-- On SIZEOF reduce production specifier_qualifier_list(type_name) -> type_qualifier_list type_specifier_no_typedef_name list(specifier_qualifier_no_typedef_name)
-- On SEMICOLON reduce production specifier_qualifier_list(type_name) -> type_qualifier_list type_specifier_no_typedef_name list(specifier_qualifier_no_typedef_name)
-- On RPAREN reduce production specifier_qualifier_list(type_name) -> type_qualifier_list type_specifier_no_typedef_name list(specifier_qualifier_no_typedef_name)
-- On RIGHT_ASSIGN reduce production specifier_qualifier_list(type_name) -> type_qualifier_list type_specifier_no_typedef_name list(specifier_qualifier_no_typedef_name)
-- On RIGHT reduce production specifier_qualifier_list(type_name) -> type_qualifier_list type_specifier_no_typedef_name list(specifier_qualifier_no_typedef_name)
-- On RETURN reduce production specifier_qualifier_list(type_name) -> type_qualifier_list type_specifier_no_typedef_name list(specifier_qualifier_no_typedef_name)
-- On REGISTER reduce production specifier_qualifier_list(type_name) -> type_qualifier_list type_specifier_no_typedef_name list(specifier_qualifier_no_typedef_name)
-- On RBRACK reduce production specifier_qualifier_list(type_name) -> type_qualifier_list type_specifier_no_typedef_name list(specifier_qualifier_no_typedef_name)
-- On RBRACE reduce production specifier_qualifier_list(type_name) -> type_qualifier_list type_specifier_no_typedef_name list(specifier_qualifier_no_typedef_name)
-- On QUESTION reduce production specifier_qualifier_list(type_name) -> type_qualifier_list type_specifier_no_typedef_name list(specifier_qualifier_no_typedef_name)
-- On PTR reduce production specifier_qualifier_list(type_name) -> type_qualifier_list type_specifier_no_typedef_name list(specifier_qualifier_no_typedef_name)
-- On PRE_NAME reduce production specifier_qualifier_list(type_name) -> type_qualifier_list type_specifier_no_typedef_name list(specifier_qualifier_no_typedef_name)
-- On PRAGMA reduce production specifier_qualifier_list(type_name) -> type_qualifier_list type_specifier_no_typedef_name list(specifier_qualifier_no_typedef_name)
-- On PLUS reduce production specifier_qualifier_list(type_name) -> type_qualifier_list type_specifier_no_typedef_name list(specifier_qualifier_no_typedef_name)
-- On PERCENT reduce production specifier_qualifier_list(type_name) -> type_qualifier_list type_specifier_no_typedef_name list(specifier_qualifier_no_typedef_name)
-- On OR_ASSIGN reduce production specifier_qualifier_list(type_name) -> type_qualifier_list type_specifier_no_typedef_name list(specifier_qualifier_no_typedef_name)
-- On NEQ reduce production specifier_qualifier_list(type_name) -> type_qualifier_list type_specifier_no_typedef_name list(specifier_qualifier_no_typedef_name)
-- On MUL_ASSIGN reduce production specifier_qualifier_list(type_name) -> type_qualifier_list type_specifier_no_typedef_name list(specifier_qualifier_no_typedef_name)
-- On MOD_ASSIGN reduce production specifier_qualifier_list(type_name) -> type_qualifier_list type_specifier_no_typedef_name list(specifier_qualifier_no_typedef_name)
-- On MINUS reduce production specifier_qualifier_list(type_name) -> type_qualifier_list type_specifier_no_typedef_name list(specifier_qualifier_no_typedef_name)
-- On LT reduce production specifier_qualifier_list(type_name) -> type_qualifier_list type_specifier_no_typedef_name list(specifier_qualifier_no_typedef_name)
-- On LPAREN reduce production specifier_qualifier_list(type_name) -> type_qualifier_list type_specifier_no_typedef_name list(specifier_qualifier_no_typedef_name)
-- On LEQ reduce production specifier_qualifier_list(type_name) -> type_qualifier_list type_specifier_no_typedef_name list(specifier_qualifier_no_typedef_name)
-- On LEFT_ASSIGN reduce production specifier_qualifier_list(type_name) -> type_qualifier_list type_specifier_no_typedef_name list(specifier_qualifier_no_typedef_name)
-- On LEFT reduce production specifier_qualifier_list(type_name) -> type_qualifier_list type_specifier_no_typedef_name list(specifier_qualifier_no_typedef_name)
-- On LBRACK reduce production specifier_qualifier_list(type_name) -> type_qualifier_list type_specifier_no_typedef_name list(specifier_qualifier_no_typedef_name)
-- On LBRACE reduce production specifier_qualifier_list(type_name) -> type_qualifier_list type_specifier_no_typedef_name list(specifier_qualifier_no_typedef_name)
-- On INLINE reduce production specifier_qualifier_list(type_name) -> type_qualifier_list type_specifier_no_typedef_name list(specifier_qualifier_no_typedef_name)
-- On INC reduce production specifier_qualifier_list(type_name) -> type_qualifier_list type_specifier_no_typedef_name list(specifier_qualifier_no_typedef_name)
-- On IF reduce production specifier_qualifier_list(type_name) -> type_qualifier_list type_specifier_no_typedef_name list(specifier_qualifier_no_typedef_name)
-- On HAT reduce production specifier_qualifier_list(type_name) -> type_qualifier_list type_specifier_no_typedef_name list(specifier_qualifier_no_typedef_name)
-- On GT reduce production specifier_qualifier_list(type_name) -> type_qualifier_list type_specifier_no_typedef_name list(specifier_qualifier_no_typedef_name)
-- On GOTO reduce production specifier_qualifier_list(type_name) -> type_qualifier_list type_specifier_no_typedef_name list(specifier_qualifier_no_typedef_name)
-- On GEQ reduce production specifier_qualifier_list(type_name) -> type_qualifier_list type_specifier_no_typedef_name list(specifier_qualifier_no_typedef_name)
-- On FOR reduce production specifier_qualifier_list(type_name) -> type_qualifier_list type_specifier_no_typedef_name list(specifier_qualifier_no_typedef_name)
-- On EXTERN reduce production specifier_qualifier_list(type_name) -> type_qualifier_list type_specifier_no_typedef_name list(specifier_qualifier_no_typedef_name)
-- On EQEQ reduce production specifier_qualifier_list(type_name) -> type_qualifier_list type_specifier_no_typedef_name list(specifier_qualifier_no_typedef_name)
-- On EQ reduce production specifier_qualifier_list(type_name) -> type_qualifier_list type_specifier_no_typedef_name list(specifier_qualifier_no_typedef_name)
-- On EOF reduce production specifier_qualifier_list(type_name) -> type_qualifier_list type_specifier_no_typedef_name list(specifier_qualifier_no_typedef_name)
-- On ELSE reduce production specifier_qualifier_list(type_name) -> type_qualifier_list type_specifier_no_typedef_name list(specifier_qualifier_no_typedef_name)
-- On ELLIPSIS reduce production specifier_qualifier_list(type_name) -> type_qualifier_list type_specifier_no_typedef_name list(specifier_qualifier_no_typedef_name)
-- On DOT reduce production specifier_qualifier_list(type_name) -> type_qualifier_list type_specifier_no_typedef_name list(specifier_qualifier_no_typedef_name)
-- On DO reduce production specifier_qualifier_list(type_name) -> type_qualifier_list type_specifier_no_typedef_name list(specifier_qualifier_no_typedef_name)
-- On DIV_ASSIGN reduce production specifier_qualifier_list(type_name) -> type_qualifier_list type_specifier_no_typedef_name list(specifier_qualifier_no_typedef_name)
-- On DEFAULT reduce production specifier_qualifier_list(type_name) -> type_qualifier_list type_specifier_no_typedef_name list(specifier_qualifier_no_typedef_name)
-- On DEC reduce production specifier_qualifier_list(type_name) -> type_qualifier_list type_specifier_no_typedef_name list(specifier_qualifier_no_typedef_name)
-- On CONTINUE reduce production specifier_qualifier_list(type_name) -> type_qualifier_list type_specifier_no_typedef_name list(specifier_qualifier_no_typedef_name)
-- On CONSTANT reduce production specifier_qualifier_list(type_name) -> type_qualifier_list type_specifier_no_typedef_name list(specifier_qualifier_no_typedef_name)
-- On COMMA reduce production specifier_qualifier_list(type_name) -> type_qualifier_list type_specifier_no_typedef_name list(specifier_qualifier_no_typedef_name)
-- On COLON reduce production specifier_qualifier_list(type_name) -> type_qualifier_list type_specifier_no_typedef_name list(specifier_qualifier_no_typedef_name)
-- On CASE reduce production specifier_qualifier_list(type_name) -> type_qualifier_list type_specifier_no_typedef_name list(specifier_qualifier_no_typedef_name)
-- On BUILTIN_VA_ARG reduce production specifier_qualifier_list(type_name) -> type_qualifier_list type_specifier_no_typedef_name list(specifier_qualifier_no_typedef_name)
-- On BREAK reduce production specifier_qualifier_list(type_name) -> type_qualifier_list type_specifier_no_typedef_name list(specifier_qualifier_no_typedef_name)
-- On BARBAR reduce production specifier_qualifier_list(type_name) -> type_qualifier_list type_specifier_no_typedef_name list(specifier_qualifier_no_typedef_name)
-- On BAR reduce production specifier_qualifier_list(type_name) -> type_qualifier_list type_specifier_no_typedef_name list(specifier_qualifier_no_typedef_name)
-- On BANG reduce production specifier_qualifier_list(type_name) -> type_qualifier_list type_specifier_no_typedef_name list(specifier_qualifier_no_typedef_name)
-- On AUTO reduce production specifier_qualifier_list(type_name) -> type_qualifier_list type_specifier_no_typedef_name list(specifier_qualifier_no_typedef_name)
-- On ASM reduce production specifier_qualifier_list(type_name) -> type_qualifier_list type_specifier_no_typedef_name list(specifier_qualifier_no_typedef_name)
-- On AND_ASSIGN reduce production specifier_qualifier_list(type_name) -> type_qualifier_list type_specifier_no_typedef_name list(specifier_qualifier_no_typedef_name)
-- On ANDAND reduce production specifier_qualifier_list(type_name) -> type_qualifier_list type_specifier_no_typedef_name list(specifier_qualifier_no_typedef_name)
-- On AND reduce production specifier_qualifier_list(type_name) -> type_qualifier_list type_specifier_no_typedef_name list(specifier_qualifier_no_typedef_name)
-- On ALIGNOF reduce production specifier_qualifier_list(type_name) -> type_qualifier_list type_specifier_no_typedef_name list(specifier_qualifier_no_typedef_name)
-- On ADD_ASSIGN reduce production specifier_qualifier_list(type_name) -> type_qualifier_list type_specifier_no_typedef_name list(specifier_qualifier_no_typedef_name)

State 299:
## Known stack suffix:
## ALIGNAS LPAREN type_name
## LR(1) items:
attribute_specifier -> ALIGNAS LPAREN type_name . RPAREN [ VOLATILE VOID UNSIGNED UNION UNDERSCORE_BOOL TYPEDEF TILDE STRUCT STRING_LITERAL STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACK PRE_NAME PLUS PACKED MINUS LPAREN LONG LBRACK LBRACE INT INLINE INC FLOAT EXTERN EQ ENUM DOUBLE DEC CONSTANT CONST COMMA COLON CHAR BUILTIN_VA_ARG BANG AUTO ATTRIBUTE AND ALIGNOF ALIGNAS ]
## Transitions:
-- On RPAREN shift to state 300
## Reductions:

State 300:
## Known stack suffix:
## ALIGNAS LPAREN type_name RPAREN
## LR(1) items:
attribute_specifier -> ALIGNAS LPAREN type_name RPAREN . [ VOLATILE VOID UNSIGNED UNION UNDERSCORE_BOOL TYPEDEF TILDE STRUCT STRING_LITERAL STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACK PRE_NAME PLUS PACKED MINUS LPAREN LONG LBRACK LBRACE INT INLINE INC FLOAT EXTERN EQ ENUM DOUBLE DEC CONSTANT CONST COMMA COLON CHAR BUILTIN_VA_ARG BANG AUTO ATTRIBUTE AND ALIGNOF ALIGNAS ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production attribute_specifier -> ALIGNAS LPAREN type_name RPAREN

State 301:
## Known stack suffix:
## specifier_qualifier_list(type_name)
## LR(1) items:
type_name -> specifier_qualifier_list(type_name) . option(abstract_declarator(type_name)) [ RPAREN ]
## Transitions:
-- On LPAREN shift to state 302
-- On option(direct_abstract_declarator) shift to state 233
-- On option(abstract_declarator(type_name)) shift to state 307
-- On list(pointer1) shift to state 304
-- On direct_abstract_declarator shift to state 254
-- On abstract_declarator(type_name) shift to state 308
## Reductions:
-- On XOR_ASSIGN reduce production option(abstract_declarator(type_name)) ->
-- On WHILE reduce production option(abstract_declarator(type_name)) ->
-- On VOLATILE reduce production option(abstract_declarator(type_name)) ->
-- On VOID reduce production option(abstract_declarator(type_name)) ->
-- On VAR_NAME reduce production option(abstract_declarator(type_name)) ->
-- On UNSIGNED reduce production option(abstract_declarator(type_name)) ->
-- On UNION reduce production option(abstract_declarator(type_name)) ->
-- On UNDERSCORE_BOOL reduce production option(abstract_declarator(type_name)) ->
-- On TYPEDEF_NAME reduce production option(abstract_declarator(type_name)) ->
-- On TYPEDEF reduce production option(abstract_declarator(type_name)) ->
-- On TILDE reduce production option(abstract_declarator(type_name)) ->
-- On SWITCH reduce production option(abstract_declarator(type_name)) ->
-- On SUB_ASSIGN reduce production option(abstract_declarator(type_name)) ->
-- On STRUCT reduce production option(abstract_declarator(type_name)) ->
-- On STRING_LITERAL reduce production option(abstract_declarator(type_name)) ->
-- On STATIC reduce production option(abstract_declarator(type_name)) ->
-- On STAR reduce production list(pointer1) ->
-- On SLASH reduce production option(abstract_declarator(type_name)) ->
-- On SIZEOF reduce production option(abstract_declarator(type_name)) ->
-- On SIGNED reduce production option(abstract_declarator(type_name)) ->
-- On SHORT reduce production option(abstract_declarator(type_name)) ->
-- On SEMICOLON reduce production option(abstract_declarator(type_name)) ->
-- On RPAREN reduce production option(abstract_declarator(type_name)) ->
-- On RIGHT_ASSIGN reduce production option(abstract_declarator(type_name)) ->
-- On RIGHT reduce production option(abstract_declarator(type_name)) ->
-- On RETURN reduce production option(abstract_declarator(type_name)) ->
-- On RESTRICT reduce production option(abstract_declarator(type_name)) ->
-- On REGISTER reduce production option(abstract_declarator(type_name)) ->
-- On RBRACK reduce production option(abstract_declarator(type_name)) ->
-- On RBRACE reduce production option(abstract_declarator(type_name)) ->
-- On QUESTION reduce production option(abstract_declarator(type_name)) ->
-- On PTR reduce production option(abstract_declarator(type_name)) ->
-- On PRE_NAME reduce production option(abstract_declarator(type_name)) ->
-- On PRAGMA reduce production option(abstract_declarator(type_name)) ->
-- On PLUS reduce production option(abstract_declarator(type_name)) ->
-- On PERCENT reduce production option(abstract_declarator(type_name)) ->
-- On PACKED reduce production option(abstract_declarator(type_name)) ->
-- On OR_ASSIGN reduce production option(abstract_declarator(type_name)) ->
-- On NEQ reduce production option(abstract_declarator(type_name)) ->
-- On MUL_ASSIGN reduce production option(abstract_declarator(type_name)) ->
-- On MOD_ASSIGN reduce production option(abstract_declarator(type_name)) ->
-- On MINUS reduce production option(abstract_declarator(type_name)) ->
-- On LT reduce production option(abstract_declarator(type_name)) ->
-- On LONG reduce production option(abstract_declarator(type_name)) ->
-- On LEQ reduce production option(abstract_declarator(type_name)) ->
-- On LEFT_ASSIGN reduce production option(abstract_declarator(type_name)) ->
-- On LEFT reduce production option(abstract_declarator(type_name)) ->
-- On LBRACK reduce production option(direct_abstract_declarator) ->
-- On LBRACE reduce production option(abstract_declarator(type_name)) ->
-- On INT reduce production option(abstract_declarator(type_name)) ->
-- On INLINE reduce production option(abstract_declarator(type_name)) ->
-- On INC reduce production option(abstract_declarator(type_name)) ->
-- On IF reduce production option(abstract_declarator(type_name)) ->
-- On HAT reduce production option(abstract_declarator(type_name)) ->
-- On GT reduce production option(abstract_declarator(type_name)) ->
-- On GOTO reduce production option(abstract_declarator(type_name)) ->
-- On GEQ reduce production option(abstract_declarator(type_name)) ->
-- On FOR reduce production option(abstract_declarator(type_name)) ->
-- On FLOAT reduce production option(abstract_declarator(type_name)) ->
-- On EXTERN reduce production option(abstract_declarator(type_name)) ->
-- On EQEQ reduce production option(abstract_declarator(type_name)) ->
-- On EQ reduce production option(abstract_declarator(type_name)) ->
-- On EOF reduce production option(abstract_declarator(type_name)) ->
-- On ENUM reduce production option(abstract_declarator(type_name)) ->
-- On ELSE reduce production option(abstract_declarator(type_name)) ->
-- On ELLIPSIS reduce production option(abstract_declarator(type_name)) ->
-- On DOUBLE reduce production option(abstract_declarator(type_name)) ->
-- On DOT reduce production option(abstract_declarator(type_name)) ->
-- On DO reduce production option(abstract_declarator(type_name)) ->
-- On DIV_ASSIGN reduce production option(abstract_declarator(type_name)) ->
-- On DEFAULT reduce production option(abstract_declarator(type_name)) ->
-- On DEC reduce production option(abstract_declarator(type_name)) ->
-- On CONTINUE reduce production option(abstract_declarator(type_name)) ->
-- On CONSTANT reduce production option(abstract_declarator(type_name)) ->
-- On CONST reduce production option(abstract_declarator(type_name)) ->
-- On COMMA reduce production option(abstract_declarator(type_name)) ->
-- On COLON reduce production option(abstract_declarator(type_name)) ->
-- On CHAR reduce production option(abstract_declarator(type_name)) ->
-- On CASE reduce production option(abstract_declarator(type_name)) ->
-- On BUILTIN_VA_ARG reduce production option(abstract_declarator(type_name)) ->
-- On BREAK reduce production option(abstract_declarator(type_name)) ->
-- On BARBAR reduce production option(abstract_declarator(type_name)) ->
-- On BAR reduce production option(abstract_declarator(type_name)) ->
-- On BANG reduce production option(abstract_declarator(type_name)) ->
-- On AUTO reduce production option(abstract_declarator(type_name)) ->
-- On ATTRIBUTE reduce production option(abstract_declarator(type_name)) ->
-- On ASM reduce production option(abstract_declarator(type_name)) ->
-- On AND_ASSIGN reduce production option(abstract_declarator(type_name)) ->
-- On ANDAND reduce production option(abstract_declarator(type_name)) ->
-- On AND reduce production option(abstract_declarator(type_name)) ->
-- On ALIGNOF reduce production option(abstract_declarator(type_name)) ->
-- On ALIGNAS reduce production option(abstract_declarator(type_name)) ->
-- On ADD_ASSIGN reduce production option(abstract_declarator(type_name)) ->

State 302:
## Known stack suffix:
## LPAREN
## LR(1) items:
direct_abstract_declarator -> LPAREN . save_context abstract_declarator(type_name) RPAREN [ RPAREN LPAREN LBRACK ]
direct_abstract_declarator -> LPAREN . option(context_parameter_type_list) RPAREN [ RPAREN LPAREN LBRACK ]
## Transitions:
-- On save_context shift to state 303
-- On option(context_parameter_type_list) shift to state 263
-- On context_parameter_type_list shift to state 248
## Reductions:
-- On VOLATILE reduce production save_context ->
-- On VOID reduce production save_context ->
-- On UNSIGNED reduce production save_context ->
-- On UNION reduce production save_context ->
-- On UNDERSCORE_BOOL reduce production save_context ->
-- On STRUCT reduce production save_context ->
-- On STATIC reduce production save_context ->
-- On STAR reduce production save_context ->
-- On SIGNED reduce production save_context ->
-- On SHORT reduce production save_context ->
-- On RPAREN reduce production option(context_parameter_type_list) ->
-- On RESTRICT reduce production save_context ->
-- On REGISTER reduce production save_context ->
-- On PRE_NAME reduce production save_context ->
-- On PACKED reduce production save_context ->
-- On LPAREN reduce production save_context ->
-- On LONG reduce production save_context ->
-- On LBRACK reduce production save_context ->
-- On INT reduce production save_context ->
-- On INLINE reduce production save_context ->
-- On FLOAT reduce production save_context ->
-- On EXTERN reduce production save_context ->
-- On ENUM reduce production save_context ->
-- On DOUBLE reduce production save_context ->
-- On CONST reduce production save_context ->
-- On CHAR reduce production save_context ->
-- On AUTO reduce production save_context ->
-- On ATTRIBUTE reduce production save_context ->
-- On ALIGNAS reduce production save_context ->

State 303:
## Known stack suffix:
## LPAREN save_context
## LR(1) items:
context_parameter_type_list -> save_context . parameter_type_list save_context [ RPAREN ]
direct_abstract_declarator -> LPAREN save_context . abstract_declarator(type_name) RPAREN [ RPAREN LPAREN LBRACK ]
## Transitions:
-- On VOLATILE shift to state 1
-- On VOID shift to state 2
-- On UNSIGNED shift to state 3
-- On UNION shift to state 4
-- On UNDERSCORE_BOOL shift to state 5
-- On STRUCT shift to state 8
-- On STATIC shift to state 9
-- On SIGNED shift to state 10
-- On SHORT shift to state 11
-- On RESTRICT shift to state 12
-- On REGISTER shift to state 13
-- On PRE_NAME shift to state 14
-- On PACKED shift to state 16
-- On LPAREN shift to state 302
-- On LONG shift to state 29
-- On INT shift to state 30
-- On INLINE shift to state 192
-- On FLOAT shift to state 33
-- On EXTERN shift to state 193
-- On ENUM shift to state 34
-- On DOUBLE shift to state 54
-- On CONST shift to state 148
-- On CHAR shift to state 55
-- On AUTO shift to state 194
-- On ATTRIBUTE shift to state 35
-- On ALIGNAS shift to state 149
-- On typedef_name shift to state 195
-- On type_specifier_no_typedef_name shift to state 201
-- On type_qualifier_noattr shift to state 209
-- On struct_or_union_specifier shift to state 155
-- On struct_or_union shift to state 156
-- On storage_class_specifier_no_typedef shift to state 210
-- On rlist(declaration_specifier_no_type) shift to state 217
-- On parameter_type_list shift to state 222
-- On parameter_list shift to state 224
-- On parameter_declaration shift to state 232
-- On option(direct_abstract_declarator) shift to state 233
-- On list(pointer1) shift to state 304
-- On function_specifier shift to state 212
-- On enum_specifier shift to state 169
-- On direct_abstract_declarator shift to state 254
-- On declaration_specifiers(parameter_declaration) shift to state 228
-- On attribute_specifier shift to state 214
-- On abstract_declarator(type_name) shift to state 261
## Reductions:
-- On STAR reduce production list(pointer1) ->
-- On LBRACK reduce production option(direct_abstract_declarator) ->

State 304:
## Known stack suffix:
## list(pointer1)
## LR(1) items:
abstract_declarator(type_name) -> list(pointer1) . STAR option(type_qualifier_list) [ RPAREN ]
abstract_declarator(type_name) -> list(pointer1) . STAR option(type_qualifier_list) direct_abstract_declarator [ RPAREN ]
list(pointer1) -> list(pointer1) . STAR option(type_qualifier_list) [ STAR ]
## Transitions:
-- On STAR shift to state 305
## Reductions:

State 305:
## Known stack suffix:
## list(pointer1) STAR
## LR(1) items:
abstract_declarator(type_name) -> list(pointer1) STAR . option(type_qualifier_list) [ RPAREN ]
abstract_declarator(type_name) -> list(pointer1) STAR . option(type_qualifier_list) direct_abstract_declarator [ RPAREN ]
list(pointer1) -> list(pointer1) STAR . option(type_qualifier_list) [ STAR ]
## Transitions:
-- On type_qualifier_list shift to state 146
-- On option(type_qualifier_list) shift to state 306
## Default reduction:
-- After reading the next token, reduce production option(type_qualifier_list) ->

State 306:
## Known stack suffix:
## list(pointer1) STAR option(type_qualifier_list)
## LR(1) items:
abstract_declarator(type_name) -> list(pointer1) STAR option(type_qualifier_list) . [ RPAREN ]
abstract_declarator(type_name) -> list(pointer1) STAR option(type_qualifier_list) . direct_abstract_declarator [ RPAREN ]
list(pointer1) -> list(pointer1) STAR option(type_qualifier_list) . [ STAR ]
type_qualifier_list -> option(type_qualifier_list) . type_qualifier_noattr [ VOLATILE STAR RPAREN RESTRICT PACKED LPAREN LBRACK CONST ATTRIBUTE ALIGNAS ]
type_qualifier_list -> option(type_qualifier_list) . attribute_specifier [ VOLATILE STAR RPAREN RESTRICT PACKED LPAREN LBRACK CONST ATTRIBUTE ALIGNAS ]
## Transitions:
-- On VOLATILE shift to state 1
-- On RESTRICT shift to state 12
-- On PACKED shift to state 16
-- On LPAREN shift to state 302
-- On CONST shift to state 148
-- On ATTRIBUTE shift to state 35
-- On ALIGNAS shift to state 149
-- On type_qualifier_noattr shift to state 164
-- On option(direct_abstract_declarator) shift to state 233
-- On direct_abstract_declarator shift to state 243
-- On attribute_specifier shift to state 165
## Reductions:
-- On XOR_ASSIGN reduce production abstract_declarator(type_name) -> list(pointer1) STAR option(type_qualifier_list)
-- On WHILE reduce production abstract_declarator(type_name) -> list(pointer1) STAR option(type_qualifier_list)
-- On VOID reduce production abstract_declarator(type_name) -> list(pointer1) STAR option(type_qualifier_list)
-- On VAR_NAME reduce production abstract_declarator(type_name) -> list(pointer1) STAR option(type_qualifier_list)
-- On UNSIGNED reduce production abstract_declarator(type_name) -> list(pointer1) STAR option(type_qualifier_list)
-- On UNION reduce production abstract_declarator(type_name) -> list(pointer1) STAR option(type_qualifier_list)
-- On UNDERSCORE_BOOL reduce production abstract_declarator(type_name) -> list(pointer1) STAR option(type_qualifier_list)
-- On TYPEDEF_NAME reduce production abstract_declarator(type_name) -> list(pointer1) STAR option(type_qualifier_list)
-- On TYPEDEF reduce production abstract_declarator(type_name) -> list(pointer1) STAR option(type_qualifier_list)
-- On TILDE reduce production abstract_declarator(type_name) -> list(pointer1) STAR option(type_qualifier_list)
-- On SWITCH reduce production abstract_declarator(type_name) -> list(pointer1) STAR option(type_qualifier_list)
-- On SUB_ASSIGN reduce production abstract_declarator(type_name) -> list(pointer1) STAR option(type_qualifier_list)
-- On STRUCT reduce production abstract_declarator(type_name) -> list(pointer1) STAR option(type_qualifier_list)
-- On STRING_LITERAL reduce production abstract_declarator(type_name) -> list(pointer1) STAR option(type_qualifier_list)
-- On STATIC reduce production abstract_declarator(type_name) -> list(pointer1) STAR option(type_qualifier_list)
-- On STAR reduce production list(pointer1) -> list(pointer1) STAR option(type_qualifier_list)
-- On SLASH reduce production abstract_declarator(type_name) -> list(pointer1) STAR option(type_qualifier_list)
-- On SIZEOF reduce production abstract_declarator(type_name) -> list(pointer1) STAR option(type_qualifier_list)
-- On SIGNED reduce production abstract_declarator(type_name) -> list(pointer1) STAR option(type_qualifier_list)
-- On SHORT reduce production abstract_declarator(type_name) -> list(pointer1) STAR option(type_qualifier_list)
-- On SEMICOLON reduce production abstract_declarator(type_name) -> list(pointer1) STAR option(type_qualifier_list)
-- On RPAREN reduce production abstract_declarator(type_name) -> list(pointer1) STAR option(type_qualifier_list)
-- On RIGHT_ASSIGN reduce production abstract_declarator(type_name) -> list(pointer1) STAR option(type_qualifier_list)
-- On RIGHT reduce production abstract_declarator(type_name) -> list(pointer1) STAR option(type_qualifier_list)
-- On RETURN reduce production abstract_declarator(type_name) -> list(pointer1) STAR option(type_qualifier_list)
-- On REGISTER reduce production abstract_declarator(type_name) -> list(pointer1) STAR option(type_qualifier_list)
-- On RBRACK reduce production abstract_declarator(type_name) -> list(pointer1) STAR option(type_qualifier_list)
-- On RBRACE reduce production abstract_declarator(type_name) -> list(pointer1) STAR option(type_qualifier_list)
-- On QUESTION reduce production abstract_declarator(type_name) -> list(pointer1) STAR option(type_qualifier_list)
-- On PTR reduce production abstract_declarator(type_name) -> list(pointer1) STAR option(type_qualifier_list)
-- On PRE_NAME reduce production abstract_declarator(type_name) -> list(pointer1) STAR option(type_qualifier_list)
-- On PRAGMA reduce production abstract_declarator(type_name) -> list(pointer1) STAR option(type_qualifier_list)
-- On PLUS reduce production abstract_declarator(type_name) -> list(pointer1) STAR option(type_qualifier_list)
-- On PERCENT reduce production abstract_declarator(type_name) -> list(pointer1) STAR option(type_qualifier_list)
-- On OR_ASSIGN reduce production abstract_declarator(type_name) -> list(pointer1) STAR option(type_qualifier_list)
-- On NEQ reduce production abstract_declarator(type_name) -> list(pointer1) STAR option(type_qualifier_list)
-- On MUL_ASSIGN reduce production abstract_declarator(type_name) -> list(pointer1) STAR option(type_qualifier_list)
-- On MOD_ASSIGN reduce production abstract_declarator(type_name) -> list(pointer1) STAR option(type_qualifier_list)
-- On MINUS reduce production abstract_declarator(type_name) -> list(pointer1) STAR option(type_qualifier_list)
-- On LT reduce production abstract_declarator(type_name) -> list(pointer1) STAR option(type_qualifier_list)
-- On LONG reduce production abstract_declarator(type_name) -> list(pointer1) STAR option(type_qualifier_list)
-- On LEQ reduce production abstract_declarator(type_name) -> list(pointer1) STAR option(type_qualifier_list)
-- On LEFT_ASSIGN reduce production abstract_declarator(type_name) -> list(pointer1) STAR option(type_qualifier_list)
-- On LEFT reduce production abstract_declarator(type_name) -> list(pointer1) STAR option(type_qualifier_list)
-- On LBRACK reduce production option(direct_abstract_declarator) ->
-- On LBRACE reduce production abstract_declarator(type_name) -> list(pointer1) STAR option(type_qualifier_list)
-- On INT reduce production abstract_declarator(type_name) -> list(pointer1) STAR option(type_qualifier_list)
-- On INLINE reduce production abstract_declarator(type_name) -> list(pointer1) STAR option(type_qualifier_list)
-- On INC reduce production abstract_declarator(type_name) -> list(pointer1) STAR option(type_qualifier_list)
-- On IF reduce production abstract_declarator(type_name) -> list(pointer1) STAR option(type_qualifier_list)
-- On HAT reduce production abstract_declarator(type_name) -> list(pointer1) STAR option(type_qualifier_list)
-- On GT reduce production abstract_declarator(type_name) -> list(pointer1) STAR option(type_qualifier_list)
-- On GOTO reduce production abstract_declarator(type_name) -> list(pointer1) STAR option(type_qualifier_list)
-- On GEQ reduce production abstract_declarator(type_name) -> list(pointer1) STAR option(type_qualifier_list)
-- On FOR reduce production abstract_declarator(type_name) -> list(pointer1) STAR option(type_qualifier_list)
-- On FLOAT reduce production abstract_declarator(type_name) -> list(pointer1) STAR option(type_qualifier_list)
-- On EXTERN reduce production abstract_declarator(type_name) -> list(pointer1) STAR option(type_qualifier_list)
-- On EQEQ reduce production abstract_declarator(type_name) -> list(pointer1) STAR option(type_qualifier_list)
-- On EQ reduce production abstract_declarator(type_name) -> list(pointer1) STAR option(type_qualifier_list)
-- On EOF reduce production abstract_declarator(type_name) -> list(pointer1) STAR option(type_qualifier_list)
-- On ENUM reduce production abstract_declarator(type_name) -> list(pointer1) STAR option(type_qualifier_list)
-- On ELSE reduce production abstract_declarator(type_name) -> list(pointer1) STAR option(type_qualifier_list)
-- On ELLIPSIS reduce production abstract_declarator(type_name) -> list(pointer1) STAR option(type_qualifier_list)
-- On DOUBLE reduce production abstract_declarator(type_name) -> list(pointer1) STAR option(type_qualifier_list)
-- On DOT reduce production abstract_declarator(type_name) -> list(pointer1) STAR option(type_qualifier_list)
-- On DO reduce production abstract_declarator(type_name) -> list(pointer1) STAR option(type_qualifier_list)
-- On DIV_ASSIGN reduce production abstract_declarator(type_name) -> list(pointer1) STAR option(type_qualifier_list)
-- On DEFAULT reduce production abstract_declarator(type_name) -> list(pointer1) STAR option(type_qualifier_list)
-- On DEC reduce production abstract_declarator(type_name) -> list(pointer1) STAR option(type_qualifier_list)
-- On CONTINUE reduce production abstract_declarator(type_name) -> list(pointer1) STAR option(type_qualifier_list)
-- On CONSTANT reduce production abstract_declarator(type_name) -> list(pointer1) STAR option(type_qualifier_list)
-- On COMMA reduce production abstract_declarator(type_name) -> list(pointer1) STAR option(type_qualifier_list)
-- On COLON reduce production abstract_declarator(type_name) -> list(pointer1) STAR option(type_qualifier_list)
-- On CHAR reduce production abstract_declarator(type_name) -> list(pointer1) STAR option(type_qualifier_list)
-- On CASE reduce production abstract_declarator(type_name) -> list(pointer1) STAR option(type_qualifier_list)
-- On BUILTIN_VA_ARG reduce production abstract_declarator(type_name) -> list(pointer1) STAR option(type_qualifier_list)
-- On BREAK reduce production abstract_declarator(type_name) -> list(pointer1) STAR option(type_qualifier_list)
-- On BARBAR reduce production abstract_declarator(type_name) -> list(pointer1) STAR option(type_qualifier_list)
-- On BAR reduce production abstract_declarator(type_name) -> list(pointer1) STAR option(type_qualifier_list)
-- On BANG reduce production abstract_declarator(type_name) -> list(pointer1) STAR option(type_qualifier_list)
-- On AUTO reduce production abstract_declarator(type_name) -> list(pointer1) STAR option(type_qualifier_list)
-- On ASM reduce production abstract_declarator(type_name) -> list(pointer1) STAR option(type_qualifier_list)
-- On AND_ASSIGN reduce production abstract_declarator(type_name) -> list(pointer1) STAR option(type_qualifier_list)
-- On ANDAND reduce production abstract_declarator(type_name) -> list(pointer1) STAR option(type_qualifier_list)
-- On AND reduce production abstract_declarator(type_name) -> list(pointer1) STAR option(type_qualifier_list)
-- On ALIGNOF reduce production abstract_declarator(type_name) -> list(pointer1) STAR option(type_qualifier_list)
-- On ADD_ASSIGN reduce production abstract_declarator(type_name) -> list(pointer1) STAR option(type_qualifier_list)

State 307:
## Known stack suffix:
## specifier_qualifier_list(type_name) option(abstract_declarator(type_name))
## LR(1) items:
type_name -> specifier_qualifier_list(type_name) option(abstract_declarator(type_name)) . [ RPAREN ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production type_name -> specifier_qualifier_list(type_name) option(abstract_declarator(type_name))

State 308:
## Known stack suffix:
## abstract_declarator(type_name)
## LR(1) items:
option(abstract_declarator(type_name)) -> abstract_declarator(type_name) . [ RPAREN ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production option(abstract_declarator(type_name)) -> abstract_declarator(type_name)

State 309:
## Known stack suffix:
## ALIGNAS LPAREN argument_expression_list
## LR(1) items:
argument_expression_list -> argument_expression_list . COMMA assignment_expression [ RPAREN COMMA ]
attribute_specifier -> ALIGNAS LPAREN argument_expression_list . RPAREN [ VOLATILE VOID UNSIGNED UNION UNDERSCORE_BOOL TYPEDEF TILDE STRUCT STRING_LITERAL STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACK PRE_NAME PLUS PACKED MINUS LPAREN LONG LBRACK LBRACE INT INLINE INC FLOAT EXTERN EQ ENUM DOUBLE DEC CONSTANT CONST COMMA COLON CHAR BUILTIN_VA_ARG BANG AUTO ATTRIBUTE AND ALIGNOF ALIGNAS ]
## Transitions:
-- On RPAREN shift to state 310
-- On COMMA shift to state 135
## Reductions:

State 310:
## Known stack suffix:
## ALIGNAS LPAREN argument_expression_list RPAREN
## LR(1) items:
attribute_specifier -> ALIGNAS LPAREN argument_expression_list RPAREN . [ VOLATILE VOID UNSIGNED UNION UNDERSCORE_BOOL TYPEDEF TILDE STRUCT STRING_LITERAL STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACK PRE_NAME PLUS PACKED MINUS LPAREN LONG LBRACK LBRACE INT INLINE INC FLOAT EXTERN EQ ENUM DOUBLE DEC CONSTANT CONST COMMA COLON CHAR BUILTIN_VA_ARG BANG AUTO ATTRIBUTE AND ALIGNOF ALIGNAS ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production attribute_specifier -> ALIGNAS LPAREN argument_expression_list RPAREN

State 311:
## Known stack suffix:
## ALIGNOF LPAREN type_name
## LR(1) items:
postfix_expression -> LPAREN type_name . RPAREN LBRACE initializer_list option(COMMA) RBRACE [ XOR_ASSIGN SUB_ASSIGN STAR SLASH SEMICOLON RPAREN RIGHT_ASSIGN RIGHT RBRACK RBRACE QUESTION PTR PLUS PERCENT OR_ASSIGN NEQ MUL_ASSIGN MOD_ASSIGN MINUS LT LPAREN LEQ LEFT_ASSIGN LEFT LBRACK INC HAT GT GEQ EQEQ EQ DOT DIV_ASSIGN DEC COMMA COLON BARBAR BAR AND_ASSIGN ANDAND AND ADD_ASSIGN ]
unary_expression -> ALIGNOF LPAREN type_name . RPAREN [ XOR_ASSIGN SUB_ASSIGN STAR SLASH SEMICOLON RPAREN RIGHT_ASSIGN RIGHT RBRACK RBRACE QUESTION PLUS PERCENT OR_ASSIGN NEQ MUL_ASSIGN MOD_ASSIGN MINUS LT LEQ LEFT_ASSIGN LEFT HAT GT GEQ EQEQ EQ DIV_ASSIGN COMMA COLON BARBAR BAR AND_ASSIGN ANDAND AND ADD_ASSIGN ]
## Transitions:
-- On RPAREN shift to state 312
## Reductions:

State 312:
## Known stack suffix:
## ALIGNOF LPAREN type_name RPAREN
## LR(1) items:
postfix_expression -> LPAREN type_name RPAREN . LBRACE initializer_list option(COMMA) RBRACE [ XOR_ASSIGN SUB_ASSIGN STAR SLASH SEMICOLON RPAREN RIGHT_ASSIGN RIGHT RBRACK RBRACE QUESTION PTR PLUS PERCENT OR_ASSIGN NEQ MUL_ASSIGN MOD_ASSIGN MINUS LT LPAREN LEQ LEFT_ASSIGN LEFT LBRACK INC HAT GT GEQ EQEQ EQ DOT DIV_ASSIGN DEC COMMA COLON BARBAR BAR AND_ASSIGN ANDAND AND ADD_ASSIGN ]
unary_expression -> ALIGNOF LPAREN type_name RPAREN . [ XOR_ASSIGN SUB_ASSIGN STAR SLASH SEMICOLON RPAREN RIGHT_ASSIGN RIGHT RBRACK RBRACE QUESTION PLUS PERCENT OR_ASSIGN NEQ MUL_ASSIGN MOD_ASSIGN MINUS LT LEQ LEFT_ASSIGN LEFT HAT GT GEQ EQEQ EQ DIV_ASSIGN COMMA COLON BARBAR BAR AND_ASSIGN ANDAND AND ADD_ASSIGN ]
## Transitions:
-- On LBRACE shift to state 313
## Reductions:
-- On XOR_ASSIGN reduce production unary_expression -> ALIGNOF LPAREN type_name RPAREN
-- On WHILE reduce production unary_expression -> ALIGNOF LPAREN type_name RPAREN
-- On VOLATILE reduce production unary_expression -> ALIGNOF LPAREN type_name RPAREN
-- On VOID reduce production unary_expression -> ALIGNOF LPAREN type_name RPAREN
-- On VAR_NAME reduce production unary_expression -> ALIGNOF LPAREN type_name RPAREN
-- On UNSIGNED reduce production unary_expression -> ALIGNOF LPAREN type_name RPAREN
-- On UNION reduce production unary_expression -> ALIGNOF LPAREN type_name RPAREN
-- On UNDERSCORE_BOOL reduce production unary_expression -> ALIGNOF LPAREN type_name RPAREN
-- On TYPEDEF_NAME reduce production unary_expression -> ALIGNOF LPAREN type_name RPAREN
-- On TYPEDEF reduce production unary_expression -> ALIGNOF LPAREN type_name RPAREN
-- On TILDE reduce production unary_expression -> ALIGNOF LPAREN type_name RPAREN
-- On SWITCH reduce production unary_expression -> ALIGNOF LPAREN type_name RPAREN
-- On SUB_ASSIGN reduce production unary_expression -> ALIGNOF LPAREN type_name RPAREN
-- On STRUCT reduce production unary_expression -> ALIGNOF LPAREN type_name RPAREN
-- On STRING_LITERAL reduce production unary_expression -> ALIGNOF LPAREN type_name RPAREN
-- On STATIC reduce production unary_expression -> ALIGNOF LPAREN type_name RPAREN
-- On STAR reduce production unary_expression -> ALIGNOF LPAREN type_name RPAREN
-- On SLASH reduce production unary_expression -> ALIGNOF LPAREN type_name RPAREN
-- On SIZEOF reduce production unary_expression -> ALIGNOF LPAREN type_name RPAREN
-- On SIGNED reduce production unary_expression -> ALIGNOF LPAREN type_name RPAREN
-- On SHORT reduce production unary_expression -> ALIGNOF LPAREN type_name RPAREN
-- On SEMICOLON reduce production unary_expression -> ALIGNOF LPAREN type_name RPAREN
-- On RPAREN reduce production unary_expression -> ALIGNOF LPAREN type_name RPAREN
-- On RIGHT_ASSIGN reduce production unary_expression -> ALIGNOF LPAREN type_name RPAREN
-- On RIGHT reduce production unary_expression -> ALIGNOF LPAREN type_name RPAREN
-- On RETURN reduce production unary_expression -> ALIGNOF LPAREN type_name RPAREN
-- On RESTRICT reduce production unary_expression -> ALIGNOF LPAREN type_name RPAREN
-- On REGISTER reduce production unary_expression -> ALIGNOF LPAREN type_name RPAREN
-- On RBRACK reduce production unary_expression -> ALIGNOF LPAREN type_name RPAREN
-- On RBRACE reduce production unary_expression -> ALIGNOF LPAREN type_name RPAREN
-- On QUESTION reduce production unary_expression -> ALIGNOF LPAREN type_name RPAREN
-- On PTR reduce production unary_expression -> ALIGNOF LPAREN type_name RPAREN
-- On PRE_NAME reduce production unary_expression -> ALIGNOF LPAREN type_name RPAREN
-- On PRAGMA reduce production unary_expression -> ALIGNOF LPAREN type_name RPAREN
-- On PLUS reduce production unary_expression -> ALIGNOF LPAREN type_name RPAREN
-- On PERCENT reduce production unary_expression -> ALIGNOF LPAREN type_name RPAREN
-- On PACKED reduce production unary_expression -> ALIGNOF LPAREN type_name RPAREN
-- On OR_ASSIGN reduce production unary_expression -> ALIGNOF LPAREN type_name RPAREN
-- On NEQ reduce production unary_expression -> ALIGNOF LPAREN type_name RPAREN
-- On MUL_ASSIGN reduce production unary_expression -> ALIGNOF LPAREN type_name RPAREN
-- On MOD_ASSIGN reduce production unary_expression -> ALIGNOF LPAREN type_name RPAREN
-- On MINUS reduce production unary_expression -> ALIGNOF LPAREN type_name RPAREN
-- On LT reduce production unary_expression -> ALIGNOF LPAREN type_name RPAREN
-- On LPAREN reduce production unary_expression -> ALIGNOF LPAREN type_name RPAREN
-- On LONG reduce production unary_expression -> ALIGNOF LPAREN type_name RPAREN
-- On LEQ reduce production unary_expression -> ALIGNOF LPAREN type_name RPAREN
-- On LEFT_ASSIGN reduce production unary_expression -> ALIGNOF LPAREN type_name RPAREN
-- On LEFT reduce production unary_expression -> ALIGNOF LPAREN type_name RPAREN
-- On LBRACK reduce production unary_expression -> ALIGNOF LPAREN type_name RPAREN
-- On INT reduce production unary_expression -> ALIGNOF LPAREN type_name RPAREN
-- On INLINE reduce production unary_expression -> ALIGNOF LPAREN type_name RPAREN
-- On INC reduce production unary_expression -> ALIGNOF LPAREN type_name RPAREN
-- On IF reduce production unary_expression -> ALIGNOF LPAREN type_name RPAREN
-- On HAT reduce production unary_expression -> ALIGNOF LPAREN type_name RPAREN
-- On GT reduce production unary_expression -> ALIGNOF LPAREN type_name RPAREN
-- On GOTO reduce production unary_expression -> ALIGNOF LPAREN type_name RPAREN
-- On GEQ reduce production unary_expression -> ALIGNOF LPAREN type_name RPAREN
-- On FOR reduce production unary_expression -> ALIGNOF LPAREN type_name RPAREN
-- On FLOAT reduce production unary_expression -> ALIGNOF LPAREN type_name RPAREN
-- On EXTERN reduce production unary_expression -> ALIGNOF LPAREN type_name RPAREN
-- On EQEQ reduce production unary_expression -> ALIGNOF LPAREN type_name RPAREN
-- On EQ reduce production unary_expression -> ALIGNOF LPAREN type_name RPAREN
-- On EOF reduce production unary_expression -> ALIGNOF LPAREN type_name RPAREN
-- On ENUM reduce production unary_expression -> ALIGNOF LPAREN type_name RPAREN
-- On ELSE reduce production unary_expression -> ALIGNOF LPAREN type_name RPAREN
-- On ELLIPSIS reduce production unary_expression -> ALIGNOF LPAREN type_name RPAREN
-- On DOUBLE reduce production unary_expression -> ALIGNOF LPAREN type_name RPAREN
-- On DOT reduce production unary_expression -> ALIGNOF LPAREN type_name RPAREN
-- On DO reduce production unary_expression -> ALIGNOF LPAREN type_name RPAREN
-- On DIV_ASSIGN reduce production unary_expression -> ALIGNOF LPAREN type_name RPAREN
-- On DEFAULT reduce production unary_expression -> ALIGNOF LPAREN type_name RPAREN
-- On DEC reduce production unary_expression -> ALIGNOF LPAREN type_name RPAREN
-- On CONTINUE reduce production unary_expression -> ALIGNOF LPAREN type_name RPAREN
-- On CONSTANT reduce production unary_expression -> ALIGNOF LPAREN type_name RPAREN
-- On CONST reduce production unary_expression -> ALIGNOF LPAREN type_name RPAREN
-- On COMMA reduce production unary_expression -> ALIGNOF LPAREN type_name RPAREN
-- On COLON reduce production unary_expression -> ALIGNOF LPAREN type_name RPAREN
-- On CHAR reduce production unary_expression -> ALIGNOF LPAREN type_name RPAREN
-- On CASE reduce production unary_expression -> ALIGNOF LPAREN type_name RPAREN
-- On BUILTIN_VA_ARG reduce production unary_expression -> ALIGNOF LPAREN type_name RPAREN
-- On BREAK reduce production unary_expression -> ALIGNOF LPAREN type_name RPAREN
-- On BARBAR reduce production unary_expression -> ALIGNOF LPAREN type_name RPAREN
-- On BAR reduce production unary_expression -> ALIGNOF LPAREN type_name RPAREN
-- On BANG reduce production unary_expression -> ALIGNOF LPAREN type_name RPAREN
-- On AUTO reduce production unary_expression -> ALIGNOF LPAREN type_name RPAREN
-- On ATTRIBUTE reduce production unary_expression -> ALIGNOF LPAREN type_name RPAREN
-- On ASM reduce production unary_expression -> ALIGNOF LPAREN type_name RPAREN
-- On AND_ASSIGN reduce production unary_expression -> ALIGNOF LPAREN type_name RPAREN
-- On ANDAND reduce production unary_expression -> ALIGNOF LPAREN type_name RPAREN
-- On AND reduce production unary_expression -> ALIGNOF LPAREN type_name RPAREN
-- On ALIGNOF reduce production unary_expression -> ALIGNOF LPAREN type_name RPAREN
-- On ALIGNAS reduce production unary_expression -> ALIGNOF LPAREN type_name RPAREN
-- On ADD_ASSIGN reduce production unary_expression -> ALIGNOF LPAREN type_name RPAREN

State 313:
## Known stack suffix:
## LPAREN type_name RPAREN LBRACE
## LR(1) items:
postfix_expression -> LPAREN type_name RPAREN LBRACE . initializer_list option(COMMA) RBRACE [ XOR_ASSIGN SUB_ASSIGN STAR SLASH SEMICOLON RPAREN RIGHT_ASSIGN RIGHT RBRACK RBRACE QUESTION PTR PLUS PERCENT OR_ASSIGN NEQ MUL_ASSIGN MOD_ASSIGN MINUS LT LPAREN LEQ LEFT_ASSIGN LEFT LBRACK INC HAT GT GEQ EQEQ EQ DOT DIV_ASSIGN DEC COMMA COLON BARBAR BAR AND_ASSIGN ANDAND AND ADD_ASSIGN ]
## Transitions:
-- On option(designator_list) shift to state 314
-- On option(designation) shift to state 321
-- On initializer_list shift to state 334
-- On designator_list shift to state 328
-- On designation shift to state 330
## Reductions:
-- On TILDE reduce production option(designation) ->
-- On STRING_LITERAL reduce production option(designation) ->
-- On STAR reduce production option(designation) ->
-- On SIZEOF reduce production option(designation) ->
-- On PRE_NAME reduce production option(designation) ->
-- On PLUS reduce production option(designation) ->
-- On MINUS reduce production option(designation) ->
-- On LPAREN reduce production option(designation) ->
-- On LBRACK reduce production option(designator_list) ->
-- On LBRACE reduce production option(designation) ->
-- On INC reduce production option(designation) ->
-- On DOT reduce production option(designator_list) ->
-- On DEC reduce production option(designation) ->
-- On CONSTANT reduce production option(designation) ->
-- On BUILTIN_VA_ARG reduce production option(designation) ->
-- On BANG reduce production option(designation) ->
-- On AND reduce production option(designation) ->
-- On ALIGNOF reduce production option(designation) ->

State 314:
## Known stack suffix:
## option(designator_list)
## LR(1) items:
designator_list -> option(designator_list) . designator [ LBRACK EQ DOT ]
## Transitions:
-- On LBRACK shift to state 315
-- On DOT shift to state 318
-- On designator shift to state 320
## Reductions:

State 315:
## Known stack suffix:
## LBRACK
## LR(1) items:
designator -> LBRACK . conditional_expression RBRACK [ LBRACK EQ DOT ]
## Transitions:
-- On TILDE shift to state 18
-- On STRING_LITERAL shift to state 19
-- On STAR shift to state 20
-- On SIZEOF shift to state 21
-- On PRE_NAME shift to state 22
-- On PLUS shift to state 24
-- On MINUS shift to state 25
-- On LPAREN shift to state 28
-- On INC shift to state 31
-- On DEC shift to state 46
-- On CONSTANT shift to state 47
-- On BUILTIN_VA_ARG shift to state 48
-- On BANG shift to state 50
-- On AND shift to state 51
-- On ALIGNOF shift to state 52
-- On unary_operator shift to state 56
-- On unary_expression shift to state 57
-- On string_literals_list shift to state 58
-- On shift_expression shift to state 78
-- On relational_expression shift to state 94
-- On primary_expression shift to state 60
-- On postfix_expression shift to state 61
-- On multiplicative_expression shift to state 82
-- On logical_or_expression shift to state 102
-- On logical_and_expression shift to state 104
-- On inclusive_or_expression shift to state 120
-- On exclusive_or_expression shift to state 119
-- On equality_expression shift to state 110
-- On conditional_expression shift to state 316
-- On cast_expression shift to state 88
-- On and_expression shift to state 118
-- On additive_expression shift to state 101
## Reductions:

State 316:
## Known stack suffix:
## LBRACK conditional_expression
## LR(1) items:
designator -> LBRACK conditional_expression . RBRACK [ LBRACK EQ DOT ]
## Transitions:
-- On RBRACK shift to state 317
## Reductions:

State 317:
## Known stack suffix:
## LBRACK conditional_expression RBRACK
## LR(1) items:
designator -> LBRACK conditional_expression RBRACK . [ LBRACK EQ DOT ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production designator -> LBRACK conditional_expression RBRACK

State 318:
## Known stack suffix:
## DOT
## LR(1) items:
designator -> DOT . general_identifier [ LBRACK EQ DOT ]
## Transitions:
-- On PRE_NAME shift to state 38
-- On typedef_name shift to state 42
-- On general_identifier shift to state 319
## Reductions:

State 319:
## Known stack suffix:
## DOT general_identifier
## LR(1) items:
designator -> DOT general_identifier . [ LBRACK EQ DOT ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production designator -> DOT general_identifier

State 320:
## Known stack suffix:
## option(designator_list) designator
## LR(1) items:
designator_list -> option(designator_list) designator . [ LBRACK EQ DOT ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production designator_list -> option(designator_list) designator

State 321:
## Known stack suffix:
## option(designation)
## LR(1) items:
initializer_list -> option(designation) . c_initializer [ RBRACE COMMA ]
## Transitions:
-- On TILDE shift to state 18
-- On STRING_LITERAL shift to state 19
-- On STAR shift to state 20
-- On SIZEOF shift to state 21
-- On PRE_NAME shift to state 22
-- On PLUS shift to state 24
-- On MINUS shift to state 25
-- On LPAREN shift to state 28
-- On LBRACE shift to state 322
-- On INC shift to state 31
-- On DEC shift to state 46
-- On CONSTANT shift to state 47
-- On BUILTIN_VA_ARG shift to state 48
-- On BANG shift to state 50
-- On AND shift to state 51
-- On ALIGNOF shift to state 52
-- On unary_operator shift to state 56
-- On unary_expression shift to state 65
-- On string_literals_list shift to state 58
-- On shift_expression shift to state 78
-- On relational_expression shift to state 94
-- On primary_expression shift to state 60
-- On postfix_expression shift to state 61
-- On multiplicative_expression shift to state 82
-- On logical_or_expression shift to state 102
-- On logical_and_expression shift to state 104
-- On inclusive_or_expression shift to state 120
-- On exclusive_or_expression shift to state 119
-- On equality_expression shift to state 110
-- On conditional_expression shift to state 123
-- On cast_expression shift to state 88
-- On c_initializer shift to state 333
-- On assignment_expression shift to state 327
-- On and_expression shift to state 118
-- On additive_expression shift to state 101
## Reductions:

State 322:
## Known stack suffix:
## LBRACE
## LR(1) items:
c_initializer -> LBRACE . initializer_list option(COMMA) RBRACE [ SEMICOLON RBRACE COMMA ]
## Transitions:
-- On option(designator_list) shift to state 314
-- On option(designation) shift to state 321
-- On initializer_list shift to state 323
-- On designator_list shift to state 328
-- On designation shift to state 330
## Reductions:
-- On TILDE reduce production option(designation) ->
-- On STRING_LITERAL reduce production option(designation) ->
-- On STAR reduce production option(designation) ->
-- On SIZEOF reduce production option(designation) ->
-- On PRE_NAME reduce production option(designation) ->
-- On PLUS reduce production option(designation) ->
-- On MINUS reduce production option(designation) ->
-- On LPAREN reduce production option(designation) ->
-- On LBRACK reduce production option(designator_list) ->
-- On LBRACE reduce production option(designation) ->
-- On INC reduce production option(designation) ->
-- On DOT reduce production option(designator_list) ->
-- On DEC reduce production option(designation) ->
-- On CONSTANT reduce production option(designation) ->
-- On BUILTIN_VA_ARG reduce production option(designation) ->
-- On BANG reduce production option(designation) ->
-- On AND reduce production option(designation) ->
-- On ALIGNOF reduce production option(designation) ->

State 323:
## Known stack suffix:
## LBRACE initializer_list
## LR(1) items:
c_initializer -> LBRACE initializer_list . option(COMMA) RBRACE [ SEMICOLON RBRACE COMMA ]
initializer_list -> initializer_list . COMMA option(designation) c_initializer [ RBRACE COMMA ]
## Transitions:
-- On COMMA shift to state 324
-- On option(COMMA) shift to state 331
## Reductions:
-- On RBRACE reduce production option(COMMA) ->

State 324:
## Known stack suffix:
## initializer_list COMMA
## LR(1) items:
initializer_list -> initializer_list COMMA . option(designation) c_initializer [ RBRACE COMMA ]
option(COMMA) -> COMMA . [ RBRACE ]
## Transitions:
-- On option(designator_list) shift to state 314
-- On option(designation) shift to state 325
-- On designator_list shift to state 328
-- On designation shift to state 330
## Reductions:
-- On TILDE reduce production option(designation) ->
-- On STRING_LITERAL reduce production option(designation) ->
-- On STAR reduce production option(designation) ->
-- On SIZEOF reduce production option(designation) ->
-- On RBRACE reduce production option(COMMA) -> COMMA
-- On PRE_NAME reduce production option(designation) ->
-- On PLUS reduce production option(designation) ->
-- On MINUS reduce production option(designation) ->
-- On LPAREN reduce production option(designation) ->
-- On LBRACK reduce production option(designator_list) ->
-- On LBRACE reduce production option(designation) ->
-- On INC reduce production option(designation) ->
-- On DOT reduce production option(designator_list) ->
-- On DEC reduce production option(designation) ->
-- On CONSTANT reduce production option(designation) ->
-- On BUILTIN_VA_ARG reduce production option(designation) ->
-- On BANG reduce production option(designation) ->
-- On AND reduce production option(designation) ->
-- On ALIGNOF reduce production option(designation) ->

State 325:
## Known stack suffix:
## initializer_list COMMA option(designation)
## LR(1) items:
initializer_list -> initializer_list COMMA option(designation) . c_initializer [ RBRACE COMMA ]
## Transitions:
-- On TILDE shift to state 18
-- On STRING_LITERAL shift to state 19
-- On STAR shift to state 20
-- On SIZEOF shift to state 21
-- On PRE_NAME shift to state 22
-- On PLUS shift to state 24
-- On MINUS shift to state 25
-- On LPAREN shift to state 28
-- On LBRACE shift to state 322
-- On INC shift to state 31
-- On DEC shift to state 46
-- On CONSTANT shift to state 47
-- On BUILTIN_VA_ARG shift to state 48
-- On BANG shift to state 50
-- On AND shift to state 51
-- On ALIGNOF shift to state 52
-- On unary_operator shift to state 56
-- On unary_expression shift to state 65
-- On string_literals_list shift to state 58
-- On shift_expression shift to state 78
-- On relational_expression shift to state 94
-- On primary_expression shift to state 60
-- On postfix_expression shift to state 61
-- On multiplicative_expression shift to state 82
-- On logical_or_expression shift to state 102
-- On logical_and_expression shift to state 104
-- On inclusive_or_expression shift to state 120
-- On exclusive_or_expression shift to state 119
-- On equality_expression shift to state 110
-- On conditional_expression shift to state 123
-- On cast_expression shift to state 88
-- On c_initializer shift to state 326
-- On assignment_expression shift to state 327
-- On and_expression shift to state 118
-- On additive_expression shift to state 101
## Reductions:

State 326:
## Known stack suffix:
## initializer_list COMMA option(designation) c_initializer
## LR(1) items:
initializer_list -> initializer_list COMMA option(designation) c_initializer . [ RBRACE COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production initializer_list -> initializer_list COMMA option(designation) c_initializer

State 327:
## Known stack suffix:
## assignment_expression
## LR(1) items:
c_initializer -> assignment_expression . [ SEMICOLON RBRACE COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production c_initializer -> assignment_expression

State 328:
## Known stack suffix:
## designator_list
## LR(1) items:
designation -> designator_list . EQ [ TILDE STRING_LITERAL STAR SIZEOF PRE_NAME PLUS MINUS LPAREN LBRACE INC DEC CONSTANT BUILTIN_VA_ARG BANG AND ALIGNOF ]
option(designator_list) -> designator_list . [ LBRACK DOT ]
## Transitions:
-- On EQ shift to state 329
## Reductions:
-- On LBRACK reduce production option(designator_list) -> designator_list
-- On DOT reduce production option(designator_list) -> designator_list

State 329:
## Known stack suffix:
## designator_list EQ
## LR(1) items:
designation -> designator_list EQ . [ TILDE STRING_LITERAL STAR SIZEOF PRE_NAME PLUS MINUS LPAREN LBRACE INC DEC CONSTANT BUILTIN_VA_ARG BANG AND ALIGNOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production designation -> designator_list EQ

State 330:
## Known stack suffix:
## designation
## LR(1) items:
option(designation) -> designation . [ TILDE STRING_LITERAL STAR SIZEOF PRE_NAME PLUS MINUS LPAREN LBRACE INC DEC CONSTANT BUILTIN_VA_ARG BANG AND ALIGNOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production option(designation) -> designation

State 331:
## Known stack suffix:
## LBRACE initializer_list option(COMMA)
## LR(1) items:
c_initializer -> LBRACE initializer_list option(COMMA) . RBRACE [ SEMICOLON RBRACE COMMA ]
## Transitions:
-- On RBRACE shift to state 332
## Reductions:

State 332:
## Known stack suffix:
## LBRACE initializer_list option(COMMA) RBRACE
## LR(1) items:
c_initializer -> LBRACE initializer_list option(COMMA) RBRACE . [ SEMICOLON RBRACE COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production c_initializer -> LBRACE initializer_list option(COMMA) RBRACE

State 333:
## Known stack suffix:
## option(designation) c_initializer
## LR(1) items:
initializer_list -> option(designation) c_initializer . [ RBRACE COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production initializer_list -> option(designation) c_initializer

State 334:
## Known stack suffix:
## LPAREN type_name RPAREN LBRACE initializer_list
## LR(1) items:
initializer_list -> initializer_list . COMMA option(designation) c_initializer [ RBRACE COMMA ]
postfix_expression -> LPAREN type_name RPAREN LBRACE initializer_list . option(COMMA) RBRACE [ XOR_ASSIGN SUB_ASSIGN STAR SLASH SEMICOLON RPAREN RIGHT_ASSIGN RIGHT RBRACK RBRACE QUESTION PTR PLUS PERCENT OR_ASSIGN NEQ MUL_ASSIGN MOD_ASSIGN MINUS LT LPAREN LEQ LEFT_ASSIGN LEFT LBRACK INC HAT GT GEQ EQEQ EQ DOT DIV_ASSIGN DEC COMMA COLON BARBAR BAR AND_ASSIGN ANDAND AND ADD_ASSIGN ]
## Transitions:
-- On COMMA shift to state 324
-- On option(COMMA) shift to state 335
## Reductions:
-- On RBRACE reduce production option(COMMA) ->

State 335:
## Known stack suffix:
## LPAREN type_name RPAREN LBRACE initializer_list option(COMMA)
## LR(1) items:
postfix_expression -> LPAREN type_name RPAREN LBRACE initializer_list option(COMMA) . RBRACE [ XOR_ASSIGN SUB_ASSIGN STAR SLASH SEMICOLON RPAREN RIGHT_ASSIGN RIGHT RBRACK RBRACE QUESTION PTR PLUS PERCENT OR_ASSIGN NEQ MUL_ASSIGN MOD_ASSIGN MINUS LT LPAREN LEQ LEFT_ASSIGN LEFT LBRACK INC HAT GT GEQ EQEQ EQ DOT DIV_ASSIGN DEC COMMA COLON BARBAR BAR AND_ASSIGN ANDAND AND ADD_ASSIGN ]
## Transitions:
-- On RBRACE shift to state 336
## Reductions:

State 336:
## Known stack suffix:
## LPAREN type_name RPAREN LBRACE initializer_list option(COMMA) RBRACE
## LR(1) items:
postfix_expression -> LPAREN type_name RPAREN LBRACE initializer_list option(COMMA) RBRACE . [ XOR_ASSIGN SUB_ASSIGN STAR SLASH SEMICOLON RPAREN RIGHT_ASSIGN RIGHT RBRACK RBRACE QUESTION PTR PLUS PERCENT OR_ASSIGN NEQ MUL_ASSIGN MOD_ASSIGN MINUS LT LPAREN LEQ LEFT_ASSIGN LEFT LBRACK INC HAT GT GEQ EQEQ EQ DOT DIV_ASSIGN DEC COMMA COLON BARBAR BAR AND_ASSIGN ANDAND AND ADD_ASSIGN ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production postfix_expression -> LPAREN type_name RPAREN LBRACE initializer_list option(COMMA) RBRACE

State 337:
## Known stack suffix:
## LPAREN expression
## LR(1) items:
expression -> expression . COMMA assignment_expression [ RPAREN COMMA ]
primary_expression -> LPAREN expression . RPAREN [ XOR_ASSIGN SUB_ASSIGN STAR SLASH SEMICOLON RPAREN RIGHT_ASSIGN RIGHT RBRACK RBRACE QUESTION PTR PLUS PERCENT OR_ASSIGN NEQ MUL_ASSIGN MOD_ASSIGN MINUS LT LPAREN LEQ LEFT_ASSIGN LEFT LBRACK INC HAT GT GEQ EQEQ EQ DOT DIV_ASSIGN DEC COMMA COLON BARBAR BAR AND_ASSIGN ANDAND AND ADD_ASSIGN ]
## Transitions:
-- On RPAREN shift to state 338
-- On COMMA shift to state 122
## Reductions:

State 338:
## Known stack suffix:
## LPAREN expression RPAREN
## LR(1) items:
primary_expression -> LPAREN expression RPAREN . [ XOR_ASSIGN SUB_ASSIGN STAR SLASH SEMICOLON RPAREN RIGHT_ASSIGN RIGHT RBRACK RBRACE QUESTION PTR PLUS PERCENT OR_ASSIGN NEQ MUL_ASSIGN MOD_ASSIGN MINUS LT LPAREN LEQ LEFT_ASSIGN LEFT LBRACK INC HAT GT GEQ EQEQ EQ DOT DIV_ASSIGN DEC COMMA COLON BARBAR BAR AND_ASSIGN ANDAND AND ADD_ASSIGN ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production primary_expression -> LPAREN expression RPAREN

State 339:
## Known stack suffix:
## ALIGNOF unary_expression
## LR(1) items:
unary_expression -> ALIGNOF unary_expression . [ XOR_ASSIGN SUB_ASSIGN STAR SLASH SEMICOLON RPAREN RIGHT_ASSIGN RIGHT RBRACK RBRACE QUESTION PLUS PERCENT OR_ASSIGN NEQ MUL_ASSIGN MOD_ASSIGN MINUS LT LEQ LEFT_ASSIGN LEFT HAT GT GEQ EQEQ EQ DIV_ASSIGN COMMA COLON BARBAR BAR AND_ASSIGN ANDAND AND ADD_ASSIGN ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production unary_expression -> ALIGNOF unary_expression

State 340:
## Known stack suffix:
## BUILTIN_VA_ARG LPAREN assignment_expression
## LR(1) items:
postfix_expression -> BUILTIN_VA_ARG LPAREN assignment_expression . COMMA type_name RPAREN [ XOR_ASSIGN SUB_ASSIGN STAR SLASH SEMICOLON RPAREN RIGHT_ASSIGN RIGHT RBRACK RBRACE QUESTION PTR PLUS PERCENT OR_ASSIGN NEQ MUL_ASSIGN MOD_ASSIGN MINUS LT LPAREN LEQ LEFT_ASSIGN LEFT LBRACK INC HAT GT GEQ EQEQ EQ DOT DIV_ASSIGN DEC COMMA COLON BARBAR BAR AND_ASSIGN ANDAND AND ADD_ASSIGN ]
## Transitions:
-- On COMMA shift to state 341
## Reductions:

State 341:
## Known stack suffix:
## BUILTIN_VA_ARG LPAREN assignment_expression COMMA
## LR(1) items:
postfix_expression -> BUILTIN_VA_ARG LPAREN assignment_expression COMMA . type_name RPAREN [ XOR_ASSIGN SUB_ASSIGN STAR SLASH SEMICOLON RPAREN RIGHT_ASSIGN RIGHT RBRACK RBRACE QUESTION PTR PLUS PERCENT OR_ASSIGN NEQ MUL_ASSIGN MOD_ASSIGN MINUS LT LPAREN LEQ LEFT_ASSIGN LEFT LBRACK INC HAT GT GEQ EQEQ EQ DOT DIV_ASSIGN DEC COMMA COLON BARBAR BAR AND_ASSIGN ANDAND AND ADD_ASSIGN ]
## Transitions:
-- On VOID shift to state 2
-- On UNSIGNED shift to state 3
-- On UNION shift to state 4
-- On UNDERSCORE_BOOL shift to state 5
-- On STRUCT shift to state 8
-- On SIGNED shift to state 10
-- On SHORT shift to state 11
-- On PRE_NAME shift to state 14
-- On LONG shift to state 29
-- On INT shift to state 30
-- On FLOAT shift to state 33
-- On ENUM shift to state 34
-- On DOUBLE shift to state 54
-- On CHAR shift to state 55
-- On typedef_name shift to state 145
-- On type_specifier_no_typedef_name shift to state 151
-- On type_qualifier_list shift to state 294
-- On type_name shift to state 342
-- On struct_or_union_specifier shift to state 155
-- On struct_or_union shift to state 156
-- On specifier_qualifier_list(type_name) shift to state 301
-- On option(type_qualifier_list) shift to state 292
-- On enum_specifier shift to state 169
## Reductions:
-- On VOLATILE reduce production option(type_qualifier_list) ->
-- On RESTRICT reduce production option(type_qualifier_list) ->
-- On PACKED reduce production option(type_qualifier_list) ->
-- On CONST reduce production option(type_qualifier_list) ->
-- On ATTRIBUTE reduce production option(type_qualifier_list) ->
-- On ALIGNAS reduce production option(type_qualifier_list) ->

State 342:
## Known stack suffix:
## BUILTIN_VA_ARG LPAREN assignment_expression COMMA type_name
## LR(1) items:
postfix_expression -> BUILTIN_VA_ARG LPAREN assignment_expression COMMA type_name . RPAREN [ XOR_ASSIGN SUB_ASSIGN STAR SLASH SEMICOLON RPAREN RIGHT_ASSIGN RIGHT RBRACK RBRACE QUESTION PTR PLUS PERCENT OR_ASSIGN NEQ MUL_ASSIGN MOD_ASSIGN MINUS LT LPAREN LEQ LEFT_ASSIGN LEFT LBRACK INC HAT GT GEQ EQEQ EQ DOT DIV_ASSIGN DEC COMMA COLON BARBAR BAR AND_ASSIGN ANDAND AND ADD_ASSIGN ]
## Transitions:
-- On RPAREN shift to state 343
## Reductions:

State 343:
## Known stack suffix:
## BUILTIN_VA_ARG LPAREN assignment_expression COMMA type_name RPAREN
## LR(1) items:
postfix_expression -> BUILTIN_VA_ARG LPAREN assignment_expression COMMA type_name RPAREN . [ XOR_ASSIGN SUB_ASSIGN STAR SLASH SEMICOLON RPAREN RIGHT_ASSIGN RIGHT RBRACK RBRACE QUESTION PTR PLUS PERCENT OR_ASSIGN NEQ MUL_ASSIGN MOD_ASSIGN MINUS LT LPAREN LEQ LEFT_ASSIGN LEFT LBRACK INC HAT GT GEQ EQEQ EQ DOT DIV_ASSIGN DEC COMMA COLON BARBAR BAR AND_ASSIGN ANDAND AND ADD_ASSIGN ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production postfix_expression -> BUILTIN_VA_ARG LPAREN assignment_expression COMMA type_name RPAREN

State 344:
## Known stack suffix:
## DEC unary_expression
## LR(1) items:
unary_expression -> DEC unary_expression . [ XOR_ASSIGN SUB_ASSIGN STAR SLASH SEMICOLON RPAREN RIGHT_ASSIGN RIGHT RBRACK RBRACE QUESTION PLUS PERCENT OR_ASSIGN NEQ MUL_ASSIGN MOD_ASSIGN MINUS LT LEQ LEFT_ASSIGN LEFT HAT GT GEQ EQEQ EQ DIV_ASSIGN COMMA COLON BARBAR BAR AND_ASSIGN ANDAND AND ADD_ASSIGN ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production unary_expression -> DEC unary_expression

State 345:
## Known stack suffix:
## gcc_attribute_word LPAREN typedef_name
## LR(1) items:
gcc_attribute -> gcc_attribute_word LPAREN typedef_name . COMMA argument_expression_list RPAREN [ RPAREN COMMA ]
## Transitions:
-- On COMMA shift to state 346
## Reductions:

State 346:
## Known stack suffix:
## gcc_attribute_word LPAREN typedef_name COMMA
## LR(1) items:
gcc_attribute -> gcc_attribute_word LPAREN typedef_name COMMA . argument_expression_list RPAREN [ RPAREN COMMA ]
## Transitions:
-- On TILDE shift to state 18
-- On STRING_LITERAL shift to state 19
-- On STAR shift to state 20
-- On SIZEOF shift to state 21
-- On PRE_NAME shift to state 22
-- On PLUS shift to state 24
-- On MINUS shift to state 25
-- On LPAREN shift to state 28
-- On INC shift to state 31
-- On DEC shift to state 46
-- On CONSTANT shift to state 47
-- On BUILTIN_VA_ARG shift to state 48
-- On BANG shift to state 50
-- On AND shift to state 51
-- On ALIGNOF shift to state 52
-- On unary_operator shift to state 56
-- On unary_expression shift to state 65
-- On string_literals_list shift to state 58
-- On shift_expression shift to state 78
-- On relational_expression shift to state 94
-- On primary_expression shift to state 60
-- On postfix_expression shift to state 61
-- On multiplicative_expression shift to state 82
-- On logical_or_expression shift to state 102
-- On logical_and_expression shift to state 104
-- On inclusive_or_expression shift to state 120
-- On exclusive_or_expression shift to state 119
-- On equality_expression shift to state 110
-- On conditional_expression shift to state 123
-- On cast_expression shift to state 88
-- On assignment_expression shift to state 133
-- On argument_expression_list shift to state 347
-- On and_expression shift to state 118
-- On additive_expression shift to state 101
## Reductions:

State 347:
## Known stack suffix:
## gcc_attribute_word LPAREN typedef_name COMMA argument_expression_list
## LR(1) items:
argument_expression_list -> argument_expression_list . COMMA assignment_expression [ RPAREN COMMA ]
gcc_attribute -> gcc_attribute_word LPAREN typedef_name COMMA argument_expression_list . RPAREN [ RPAREN COMMA ]
## Transitions:
-- On RPAREN shift to state 348
-- On COMMA shift to state 135
## Reductions:

State 348:
## Known stack suffix:
## gcc_attribute_word LPAREN typedef_name COMMA argument_expression_list RPAREN
## LR(1) items:
gcc_attribute -> gcc_attribute_word LPAREN typedef_name COMMA argument_expression_list RPAREN . [ RPAREN COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production gcc_attribute -> gcc_attribute_word LPAREN typedef_name COMMA argument_expression_list RPAREN

State 349:
## Known stack suffix:
## gcc_attribute_word LPAREN option(argument_expression_list)
## LR(1) items:
gcc_attribute -> gcc_attribute_word LPAREN option(argument_expression_list) . RPAREN [ RPAREN COMMA ]
## Transitions:
-- On RPAREN shift to state 350
## Reductions:

State 350:
## Known stack suffix:
## gcc_attribute_word LPAREN option(argument_expression_list) RPAREN
## LR(1) items:
gcc_attribute -> gcc_attribute_word LPAREN option(argument_expression_list) RPAREN . [ RPAREN COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production gcc_attribute -> gcc_attribute_word LPAREN option(argument_expression_list) RPAREN

State 351:
## Known stack suffix:
## ATTRIBUTE LPAREN LPAREN gcc_attribute_list
## LR(1) items:
attribute_specifier -> ATTRIBUTE LPAREN LPAREN gcc_attribute_list . RPAREN RPAREN [ VOLATILE VOID UNSIGNED UNION UNDERSCORE_BOOL TYPEDEF TILDE STRUCT STRING_LITERAL STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACK PRE_NAME PLUS PACKED MINUS LPAREN LONG LBRACK LBRACE INT INLINE INC FLOAT EXTERN EQ ENUM DOUBLE DEC CONSTANT CONST COMMA COLON CHAR BUILTIN_VA_ARG BANG AUTO ATTRIBUTE AND ALIGNOF ALIGNAS ]
gcc_attribute_list -> gcc_attribute_list . COMMA gcc_attribute [ RPAREN COMMA ]
## Transitions:
-- On RPAREN shift to state 352
-- On COMMA shift to state 354
## Reductions:

State 352:
## Known stack suffix:
## ATTRIBUTE LPAREN LPAREN gcc_attribute_list RPAREN
## LR(1) items:
attribute_specifier -> ATTRIBUTE LPAREN LPAREN gcc_attribute_list RPAREN . RPAREN [ VOLATILE VOID UNSIGNED UNION UNDERSCORE_BOOL TYPEDEF TILDE STRUCT STRING_LITERAL STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACK PRE_NAME PLUS PACKED MINUS LPAREN LONG LBRACK LBRACE INT INLINE INC FLOAT EXTERN EQ ENUM DOUBLE DEC CONSTANT CONST COMMA COLON CHAR BUILTIN_VA_ARG BANG AUTO ATTRIBUTE AND ALIGNOF ALIGNAS ]
## Transitions:
-- On RPAREN shift to state 353
## Reductions:

State 353:
## Known stack suffix:
## ATTRIBUTE LPAREN LPAREN gcc_attribute_list RPAREN RPAREN
## LR(1) items:
attribute_specifier -> ATTRIBUTE LPAREN LPAREN gcc_attribute_list RPAREN RPAREN . [ VOLATILE VOID UNSIGNED UNION UNDERSCORE_BOOL TYPEDEF TILDE STRUCT STRING_LITERAL STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACK PRE_NAME PLUS PACKED MINUS LPAREN LONG LBRACK LBRACE INT INLINE INC FLOAT EXTERN EQ ENUM DOUBLE DEC CONSTANT CONST COMMA COLON CHAR BUILTIN_VA_ARG BANG AUTO ATTRIBUTE AND ALIGNOF ALIGNAS ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production attribute_specifier -> ATTRIBUTE LPAREN LPAREN gcc_attribute_list RPAREN RPAREN

State 354:
## Known stack suffix:
## gcc_attribute_list COMMA
## LR(1) items:
gcc_attribute_list -> gcc_attribute_list COMMA . gcc_attribute [ RPAREN COMMA ]
## Transitions:
-- On PRE_NAME shift to state 38
-- On PACKED shift to state 40
-- On CONST shift to state 41
-- On typedef_name shift to state 42
-- On general_identifier shift to state 43
-- On gcc_attribute_word shift to state 44
-- On gcc_attribute shift to state 355
## Reductions:
-- On RPAREN reduce production gcc_attribute ->
-- On COMMA reduce production gcc_attribute ->

State 355:
## Known stack suffix:
## gcc_attribute_list COMMA gcc_attribute
## LR(1) items:
gcc_attribute_list -> gcc_attribute_list COMMA gcc_attribute . [ RPAREN COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production gcc_attribute_list -> gcc_attribute_list COMMA gcc_attribute

State 356:
## Known stack suffix:
## gcc_attribute
## LR(1) items:
gcc_attribute_list -> gcc_attribute . [ RPAREN COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production gcc_attribute_list -> gcc_attribute

State 357:
## Known stack suffix:
## ENUM attribute_specifier_list
## LR(1) items:
enum_specifier -> ENUM attribute_specifier_list . option(other_identifier) LBRACE enumerator_list option(COMMA) RBRACE [ VOLATILE VOID UNSIGNED UNION UNDERSCORE_BOOL TYPEDEF STRUCT STATIC STAR SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER PRE_NAME PACKED LPAREN LONG LBRACK INT INLINE FLOAT EXTERN ENUM DOUBLE CONST COMMA COLON CHAR AUTO ATTRIBUTE ALIGNAS ]
enum_specifier -> ENUM attribute_specifier_list . general_identifier [ VOLATILE VOID UNSIGNED UNION UNDERSCORE_BOOL TYPEDEF STRUCT STATIC STAR SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER PRE_NAME PACKED LPAREN LONG LBRACK INT INLINE FLOAT EXTERN ENUM DOUBLE CONST COMMA COLON CHAR AUTO ATTRIBUTE ALIGNAS ]
## Transitions:
-- On PRE_NAME shift to state 38
-- On typedef_name shift to state 42
-- On option(other_identifier) shift to state 358
-- On general_identifier shift to state 371
## Reductions:
-- On LBRACE reduce production option(other_identifier) ->

State 358:
## Known stack suffix:
## ENUM attribute_specifier_list option(other_identifier)
## LR(1) items:
enum_specifier -> ENUM attribute_specifier_list option(other_identifier) . LBRACE enumerator_list option(COMMA) RBRACE [ VOLATILE VOID UNSIGNED UNION UNDERSCORE_BOOL TYPEDEF STRUCT STATIC STAR SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER PRE_NAME PACKED LPAREN LONG LBRACK INT INLINE FLOAT EXTERN ENUM DOUBLE CONST COMMA COLON CHAR AUTO ATTRIBUTE ALIGNAS ]
## Transitions:
-- On LBRACE shift to state 359
## Reductions:

State 359:
## Known stack suffix:
## ENUM attribute_specifier_list option(other_identifier) LBRACE
## LR(1) items:
enum_specifier -> ENUM attribute_specifier_list option(other_identifier) LBRACE . enumerator_list option(COMMA) RBRACE [ VOLATILE VOID UNSIGNED UNION UNDERSCORE_BOOL TYPEDEF STRUCT STATIC STAR SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER PRE_NAME PACKED LPAREN LONG LBRACK INT INLINE FLOAT EXTERN ENUM DOUBLE CONST COMMA COLON CHAR AUTO ATTRIBUTE ALIGNAS ]
## Transitions:
-- On PRE_NAME shift to state 38
-- On typedef_name shift to state 42
-- On general_identifier shift to state 360
-- On enumerator_list shift to state 361
-- On enumerator shift to state 363
-- On enumeration_constant shift to state 364
-- On declare_varname(enumerator) shift to state 370
## Reductions:

State 360:
## Known stack suffix:
## general_identifier
## LR(1) items:
enumeration_constant -> general_identifier . [ RBRACE EQ COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production enumeration_constant -> general_identifier

State 361:
## Known stack suffix:
## ENUM attribute_specifier_list option(other_identifier) LBRACE enumerator_list
## LR(1) items:
enum_specifier -> ENUM attribute_specifier_list option(other_identifier) LBRACE enumerator_list . option(COMMA) RBRACE [ VOLATILE VOID UNSIGNED UNION UNDERSCORE_BOOL TYPEDEF STRUCT STATIC STAR SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER PRE_NAME PACKED LPAREN LONG LBRACK INT INLINE FLOAT EXTERN ENUM DOUBLE CONST COMMA COLON CHAR AUTO ATTRIBUTE ALIGNAS ]
enumerator_list -> enumerator_list . COMMA declare_varname(enumerator) [ RBRACE COMMA ]
## Transitions:
-- On COMMA shift to state 362
-- On option(COMMA) shift to state 368
## Reductions:
-- On RBRACE reduce production option(COMMA) ->

State 362:
## Known stack suffix:
## enumerator_list COMMA
## LR(1) items:
enumerator_list -> enumerator_list COMMA . declare_varname(enumerator) [ RBRACE COMMA ]
option(COMMA) -> COMMA . [ RBRACE ]
## Transitions:
-- On PRE_NAME shift to state 38
-- On typedef_name shift to state 42
-- On general_identifier shift to state 360
-- On enumerator shift to state 363
-- On enumeration_constant shift to state 364
-- On declare_varname(enumerator) shift to state 367
## Reductions:
-- On RBRACE reduce production option(COMMA) -> COMMA

State 363:
## Known stack suffix:
## enumerator
## LR(1) items:
declare_varname(enumerator) -> enumerator . [ RBRACE COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production declare_varname(enumerator) -> enumerator

State 364:
## Known stack suffix:
## enumeration_constant
## LR(1) items:
enumerator -> enumeration_constant . [ RBRACE COMMA ]
enumerator -> enumeration_constant . EQ conditional_expression [ RBRACE COMMA ]
## Transitions:
-- On EQ shift to state 365
## Reductions:
-- On RBRACE reduce production enumerator -> enumeration_constant
-- On COMMA reduce production enumerator -> enumeration_constant

State 365:
## Known stack suffix:
## enumeration_constant EQ
## LR(1) items:
enumerator -> enumeration_constant EQ . conditional_expression [ RBRACE COMMA ]
## Transitions:
-- On TILDE shift to state 18
-- On STRING_LITERAL shift to state 19
-- On STAR shift to state 20
-- On SIZEOF shift to state 21
-- On PRE_NAME shift to state 22
-- On PLUS shift to state 24
-- On MINUS shift to state 25
-- On LPAREN shift to state 28
-- On INC shift to state 31
-- On DEC shift to state 46
-- On CONSTANT shift to state 47
-- On BUILTIN_VA_ARG shift to state 48
-- On BANG shift to state 50
-- On AND shift to state 51
-- On ALIGNOF shift to state 52
-- On unary_operator shift to state 56
-- On unary_expression shift to state 57
-- On string_literals_list shift to state 58
-- On shift_expression shift to state 78
-- On relational_expression shift to state 94
-- On primary_expression shift to state 60
-- On postfix_expression shift to state 61
-- On multiplicative_expression shift to state 82
-- On logical_or_expression shift to state 102
-- On logical_and_expression shift to state 104
-- On inclusive_or_expression shift to state 120
-- On exclusive_or_expression shift to state 119
-- On equality_expression shift to state 110
-- On conditional_expression shift to state 366
-- On cast_expression shift to state 88
-- On and_expression shift to state 118
-- On additive_expression shift to state 101
## Reductions:

State 366:
## Known stack suffix:
## enumeration_constant EQ conditional_expression
## LR(1) items:
enumerator -> enumeration_constant EQ conditional_expression . [ RBRACE COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production enumerator -> enumeration_constant EQ conditional_expression

State 367:
## Known stack suffix:
## enumerator_list COMMA declare_varname(enumerator)
## LR(1) items:
enumerator_list -> enumerator_list COMMA declare_varname(enumerator) . [ RBRACE COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production enumerator_list -> enumerator_list COMMA declare_varname(enumerator)

State 368:
## Known stack suffix:
## ENUM attribute_specifier_list option(other_identifier) LBRACE enumerator_list option(COMMA)
## LR(1) items:
enum_specifier -> ENUM attribute_specifier_list option(other_identifier) LBRACE enumerator_list option(COMMA) . RBRACE [ VOLATILE VOID UNSIGNED UNION UNDERSCORE_BOOL TYPEDEF STRUCT STATIC STAR SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER PRE_NAME PACKED LPAREN LONG LBRACK INT INLINE FLOAT EXTERN ENUM DOUBLE CONST COMMA COLON CHAR AUTO ATTRIBUTE ALIGNAS ]
## Transitions:
-- On RBRACE shift to state 369
## Reductions:

State 369:
## Known stack suffix:
## ENUM attribute_specifier_list option(other_identifier) LBRACE enumerator_list option(COMMA) RBRACE
## LR(1) items:
enum_specifier -> ENUM attribute_specifier_list option(other_identifier) LBRACE enumerator_list option(COMMA) RBRACE . [ VOLATILE VOID UNSIGNED UNION UNDERSCORE_BOOL TYPEDEF STRUCT STATIC STAR SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER PRE_NAME PACKED LPAREN LONG LBRACK INT INLINE FLOAT EXTERN ENUM DOUBLE CONST COMMA COLON CHAR AUTO ATTRIBUTE ALIGNAS ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production enum_specifier -> ENUM attribute_specifier_list option(other_identifier) LBRACE enumerator_list option(COMMA) RBRACE

State 370:
## Known stack suffix:
## declare_varname(enumerator)
## LR(1) items:
enumerator_list -> declare_varname(enumerator) . [ RBRACE COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production enumerator_list -> declare_varname(enumerator)

State 371:
## Known stack suffix:
## ENUM attribute_specifier_list general_identifier
## LR(1) items:
enum_specifier -> ENUM attribute_specifier_list general_identifier . [ VOLATILE VOID UNSIGNED UNION UNDERSCORE_BOOL TYPEDEF STRUCT STATIC STAR SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER PRE_NAME PACKED LPAREN LONG LBRACK INT INLINE FLOAT EXTERN ENUM DOUBLE CONST COMMA COLON CHAR AUTO ATTRIBUTE ALIGNAS ]
option(other_identifier) -> general_identifier . [ LBRACE ]
## Transitions:
## Reductions:
-- On XOR_ASSIGN reduce production enum_specifier -> ENUM attribute_specifier_list general_identifier
-- On WHILE reduce production enum_specifier -> ENUM attribute_specifier_list general_identifier
-- On VOLATILE reduce production enum_specifier -> ENUM attribute_specifier_list general_identifier
-- On VOID reduce production enum_specifier -> ENUM attribute_specifier_list general_identifier
-- On VAR_NAME reduce production enum_specifier -> ENUM attribute_specifier_list general_identifier
-- On UNSIGNED reduce production enum_specifier -> ENUM attribute_specifier_list general_identifier
-- On UNION reduce production enum_specifier -> ENUM attribute_specifier_list general_identifier
-- On UNDERSCORE_BOOL reduce production enum_specifier -> ENUM attribute_specifier_list general_identifier
-- On TYPEDEF_NAME reduce production enum_specifier -> ENUM attribute_specifier_list general_identifier
-- On TYPEDEF reduce production enum_specifier -> ENUM attribute_specifier_list general_identifier
-- On TILDE reduce production enum_specifier -> ENUM attribute_specifier_list general_identifier
-- On SWITCH reduce production enum_specifier -> ENUM attribute_specifier_list general_identifier
-- On SUB_ASSIGN reduce production enum_specifier -> ENUM attribute_specifier_list general_identifier
-- On STRUCT reduce production enum_specifier -> ENUM attribute_specifier_list general_identifier
-- On STRING_LITERAL reduce production enum_specifier -> ENUM attribute_specifier_list general_identifier
-- On STATIC reduce production enum_specifier -> ENUM attribute_specifier_list general_identifier
-- On STAR reduce production enum_specifier -> ENUM attribute_specifier_list general_identifier
-- On SLASH reduce production enum_specifier -> ENUM attribute_specifier_list general_identifier
-- On SIZEOF reduce production enum_specifier -> ENUM attribute_specifier_list general_identifier
-- On SIGNED reduce production enum_specifier -> ENUM attribute_specifier_list general_identifier
-- On SHORT reduce production enum_specifier -> ENUM attribute_specifier_list general_identifier
-- On SEMICOLON reduce production enum_specifier -> ENUM attribute_specifier_list general_identifier
-- On RPAREN reduce production enum_specifier -> ENUM attribute_specifier_list general_identifier
-- On RIGHT_ASSIGN reduce production enum_specifier -> ENUM attribute_specifier_list general_identifier
-- On RIGHT reduce production enum_specifier -> ENUM attribute_specifier_list general_identifier
-- On RETURN reduce production enum_specifier -> ENUM attribute_specifier_list general_identifier
-- On RESTRICT reduce production enum_specifier -> ENUM attribute_specifier_list general_identifier
-- On REGISTER reduce production enum_specifier -> ENUM attribute_specifier_list general_identifier
-- On RBRACK reduce production enum_specifier -> ENUM attribute_specifier_list general_identifier
-- On RBRACE reduce production enum_specifier -> ENUM attribute_specifier_list general_identifier
-- On QUESTION reduce production enum_specifier -> ENUM attribute_specifier_list general_identifier
-- On PTR reduce production enum_specifier -> ENUM attribute_specifier_list general_identifier
-- On PRE_NAME reduce production enum_specifier -> ENUM attribute_specifier_list general_identifier
-- On PRAGMA reduce production enum_specifier -> ENUM attribute_specifier_list general_identifier
-- On PLUS reduce production enum_specifier -> ENUM attribute_specifier_list general_identifier
-- On PERCENT reduce production enum_specifier -> ENUM attribute_specifier_list general_identifier
-- On PACKED reduce production enum_specifier -> ENUM attribute_specifier_list general_identifier
-- On OR_ASSIGN reduce production enum_specifier -> ENUM attribute_specifier_list general_identifier
-- On NEQ reduce production enum_specifier -> ENUM attribute_specifier_list general_identifier
-- On MUL_ASSIGN reduce production enum_specifier -> ENUM attribute_specifier_list general_identifier
-- On MOD_ASSIGN reduce production enum_specifier -> ENUM attribute_specifier_list general_identifier
-- On MINUS reduce production enum_specifier -> ENUM attribute_specifier_list general_identifier
-- On LT reduce production enum_specifier -> ENUM attribute_specifier_list general_identifier
-- On LPAREN reduce production enum_specifier -> ENUM attribute_specifier_list general_identifier
-- On LONG reduce production enum_specifier -> ENUM attribute_specifier_list general_identifier
-- On LEQ reduce production enum_specifier -> ENUM attribute_specifier_list general_identifier
-- On LEFT_ASSIGN reduce production enum_specifier -> ENUM attribute_specifier_list general_identifier
-- On LEFT reduce production enum_specifier -> ENUM attribute_specifier_list general_identifier
-- On LBRACK reduce production enum_specifier -> ENUM attribute_specifier_list general_identifier
-- On LBRACE reduce production option(other_identifier) -> general_identifier
-- On INT reduce production enum_specifier -> ENUM attribute_specifier_list general_identifier
-- On INLINE reduce production enum_specifier -> ENUM attribute_specifier_list general_identifier
-- On INC reduce production enum_specifier -> ENUM attribute_specifier_list general_identifier
-- On IF reduce production enum_specifier -> ENUM attribute_specifier_list general_identifier
-- On HAT reduce production enum_specifier -> ENUM attribute_specifier_list general_identifier
-- On GT reduce production enum_specifier -> ENUM attribute_specifier_list general_identifier
-- On GOTO reduce production enum_specifier -> ENUM attribute_specifier_list general_identifier
-- On GEQ reduce production enum_specifier -> ENUM attribute_specifier_list general_identifier
-- On FOR reduce production enum_specifier -> ENUM attribute_specifier_list general_identifier
-- On FLOAT reduce production enum_specifier -> ENUM attribute_specifier_list general_identifier
-- On EXTERN reduce production enum_specifier -> ENUM attribute_specifier_list general_identifier
-- On EQEQ reduce production enum_specifier -> ENUM attribute_specifier_list general_identifier
-- On EQ reduce production enum_specifier -> ENUM attribute_specifier_list general_identifier
-- On EOF reduce production enum_specifier -> ENUM attribute_specifier_list general_identifier
-- On ENUM reduce production enum_specifier -> ENUM attribute_specifier_list general_identifier
-- On ELSE reduce production enum_specifier -> ENUM attribute_specifier_list general_identifier
-- On ELLIPSIS reduce production enum_specifier -> ENUM attribute_specifier_list general_identifier
-- On DOUBLE reduce production enum_specifier -> ENUM attribute_specifier_list general_identifier
-- On DOT reduce production enum_specifier -> ENUM attribute_specifier_list general_identifier
-- On DO reduce production enum_specifier -> ENUM attribute_specifier_list general_identifier
-- On DIV_ASSIGN reduce production enum_specifier -> ENUM attribute_specifier_list general_identifier
-- On DEFAULT reduce production enum_specifier -> ENUM attribute_specifier_list general_identifier
-- On DEC reduce production enum_specifier -> ENUM attribute_specifier_list general_identifier
-- On CONTINUE reduce production enum_specifier -> ENUM attribute_specifier_list general_identifier
-- On CONSTANT reduce production enum_specifier -> ENUM attribute_specifier_list general_identifier
-- On CONST reduce production enum_specifier -> ENUM attribute_specifier_list general_identifier
-- On COMMA reduce production enum_specifier -> ENUM attribute_specifier_list general_identifier
-- On COLON reduce production enum_specifier -> ENUM attribute_specifier_list general_identifier
-- On CHAR reduce production enum_specifier -> ENUM attribute_specifier_list general_identifier
-- On CASE reduce production enum_specifier -> ENUM attribute_specifier_list general_identifier
-- On BUILTIN_VA_ARG reduce production enum_specifier -> ENUM attribute_specifier_list general_identifier
-- On BREAK reduce production enum_specifier -> ENUM attribute_specifier_list general_identifier
-- On BARBAR reduce production enum_specifier -> ENUM attribute_specifier_list general_identifier
-- On BAR reduce production enum_specifier -> ENUM attribute_specifier_list general_identifier
-- On BANG reduce production enum_specifier -> ENUM attribute_specifier_list general_identifier
-- On AUTO reduce production enum_specifier -> ENUM attribute_specifier_list general_identifier
-- On ATTRIBUTE reduce production enum_specifier -> ENUM attribute_specifier_list general_identifier
-- On ASM reduce production enum_specifier -> ENUM attribute_specifier_list general_identifier
-- On AND_ASSIGN reduce production enum_specifier -> ENUM attribute_specifier_list general_identifier
-- On ANDAND reduce production enum_specifier -> ENUM attribute_specifier_list general_identifier
-- On AND reduce production enum_specifier -> ENUM attribute_specifier_list general_identifier
-- On ALIGNOF reduce production enum_specifier -> ENUM attribute_specifier_list general_identifier
-- On ALIGNAS reduce production enum_specifier -> ENUM attribute_specifier_list general_identifier
-- On ADD_ASSIGN reduce production enum_specifier -> ENUM attribute_specifier_list general_identifier

State 372:
## Known stack suffix:
## LPAREN type_name
## LR(1) items:
postfix_expression -> LPAREN type_name . RPAREN LBRACE initializer_list option(COMMA) RBRACE [ XOR_ASSIGN SUB_ASSIGN STAR SLASH SEMICOLON RPAREN RIGHT_ASSIGN RIGHT RBRACK RBRACE QUESTION PTR PLUS PERCENT OR_ASSIGN NEQ MUL_ASSIGN MOD_ASSIGN MINUS LT LPAREN LEQ LEFT_ASSIGN LEFT LBRACK INC HAT GT GEQ EQEQ EQ DOT DIV_ASSIGN DEC COMMA COLON BARBAR BAR AND_ASSIGN ANDAND AND ADD_ASSIGN ]
## Transitions:
-- On RPAREN shift to state 373
## Reductions:

State 373:
## Known stack suffix:
## LPAREN type_name RPAREN
## LR(1) items:
postfix_expression -> LPAREN type_name RPAREN . LBRACE initializer_list option(COMMA) RBRACE [ XOR_ASSIGN SUB_ASSIGN STAR SLASH SEMICOLON RPAREN RIGHT_ASSIGN RIGHT RBRACK RBRACE QUESTION PTR PLUS PERCENT OR_ASSIGN NEQ MUL_ASSIGN MOD_ASSIGN MINUS LT LPAREN LEQ LEFT_ASSIGN LEFT LBRACK INC HAT GT GEQ EQEQ EQ DOT DIV_ASSIGN DEC COMMA COLON BARBAR BAR AND_ASSIGN ANDAND AND ADD_ASSIGN ]
## Transitions:
-- On LBRACE shift to state 313
## Reductions:

State 374:
## Known stack suffix:
## INC unary_expression
## LR(1) items:
unary_expression -> INC unary_expression . [ XOR_ASSIGN SUB_ASSIGN STAR SLASH SEMICOLON RPAREN RIGHT_ASSIGN RIGHT RBRACK RBRACE QUESTION PLUS PERCENT OR_ASSIGN NEQ MUL_ASSIGN MOD_ASSIGN MINUS LT LEQ LEFT_ASSIGN LEFT HAT GT GEQ EQEQ EQ DIV_ASSIGN COMMA COLON BARBAR BAR AND_ASSIGN ANDAND AND ADD_ASSIGN ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production unary_expression -> INC unary_expression

State 375:
## Known stack suffix:
## LPAREN type_name
## LR(1) items:
cast_expression -> LPAREN type_name . RPAREN cast_expression [ XOR_ASSIGN SUB_ASSIGN STAR SLASH SEMICOLON RPAREN RIGHT_ASSIGN RIGHT RBRACK RBRACE QUESTION PLUS PERCENT OR_ASSIGN NEQ MUL_ASSIGN MOD_ASSIGN MINUS LT LEQ LEFT_ASSIGN LEFT HAT GT GEQ EQEQ EQ DIV_ASSIGN COMMA COLON BARBAR BAR AND_ASSIGN ANDAND AND ADD_ASSIGN ]
postfix_expression -> LPAREN type_name . RPAREN LBRACE initializer_list option(COMMA) RBRACE [ XOR_ASSIGN SUB_ASSIGN STAR SLASH SEMICOLON RPAREN RIGHT_ASSIGN RIGHT RBRACK RBRACE QUESTION PTR PLUS PERCENT OR_ASSIGN NEQ MUL_ASSIGN MOD_ASSIGN MINUS LT LPAREN LEQ LEFT_ASSIGN LEFT LBRACK INC HAT GT GEQ EQEQ EQ DOT DIV_ASSIGN DEC COMMA COLON BARBAR BAR AND_ASSIGN ANDAND AND ADD_ASSIGN ]
## Transitions:
-- On RPAREN shift to state 376
## Reductions:

State 376:
## Known stack suffix:
## LPAREN type_name RPAREN
## LR(1) items:
cast_expression -> LPAREN type_name RPAREN . cast_expression [ XOR_ASSIGN SUB_ASSIGN STAR SLASH SEMICOLON RPAREN RIGHT_ASSIGN RIGHT RBRACK RBRACE QUESTION PLUS PERCENT OR_ASSIGN NEQ MUL_ASSIGN MOD_ASSIGN MINUS LT LEQ LEFT_ASSIGN LEFT HAT GT GEQ EQEQ EQ DIV_ASSIGN COMMA COLON BARBAR BAR AND_ASSIGN ANDAND AND ADD_ASSIGN ]
postfix_expression -> LPAREN type_name RPAREN . LBRACE initializer_list option(COMMA) RBRACE [ XOR_ASSIGN SUB_ASSIGN STAR SLASH SEMICOLON RPAREN RIGHT_ASSIGN RIGHT RBRACK RBRACE QUESTION PTR PLUS PERCENT OR_ASSIGN NEQ MUL_ASSIGN MOD_ASSIGN MINUS LT LPAREN LEQ LEFT_ASSIGN LEFT LBRACK INC HAT GT GEQ EQEQ EQ DOT DIV_ASSIGN DEC COMMA COLON BARBAR BAR AND_ASSIGN ANDAND AND ADD_ASSIGN ]
## Transitions:
-- On TILDE shift to state 18
-- On STRING_LITERAL shift to state 19
-- On STAR shift to state 20
-- On SIZEOF shift to state 21
-- On PRE_NAME shift to state 22
-- On PLUS shift to state 24
-- On MINUS shift to state 25
-- On LPAREN shift to state 28
-- On LBRACE shift to state 313
-- On INC shift to state 31
-- On DEC shift to state 46
-- On CONSTANT shift to state 47
-- On BUILTIN_VA_ARG shift to state 48
-- On BANG shift to state 50
-- On AND shift to state 51
-- On ALIGNOF shift to state 52
-- On unary_operator shift to state 56
-- On unary_expression shift to state 57
-- On string_literals_list shift to state 58
-- On primary_expression shift to state 60
-- On postfix_expression shift to state 61
-- On cast_expression shift to state 377
## Reductions:

State 377:
## Known stack suffix:
## LPAREN type_name RPAREN cast_expression
## LR(1) items:
cast_expression -> LPAREN type_name RPAREN cast_expression . [ XOR_ASSIGN SUB_ASSIGN STAR SLASH SEMICOLON RPAREN RIGHT_ASSIGN RIGHT RBRACK RBRACE QUESTION PLUS PERCENT OR_ASSIGN NEQ MUL_ASSIGN MOD_ASSIGN MINUS LT LEQ LEFT_ASSIGN LEFT HAT GT GEQ EQEQ EQ DIV_ASSIGN COMMA COLON BARBAR BAR AND_ASSIGN ANDAND AND ADD_ASSIGN ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production cast_expression -> LPAREN type_name RPAREN cast_expression

State 378:
## Known stack suffix:
## SIZEOF LPAREN type_name
## LR(1) items:
postfix_expression -> LPAREN type_name . RPAREN LBRACE initializer_list option(COMMA) RBRACE [ XOR_ASSIGN SUB_ASSIGN STAR SLASH SEMICOLON RPAREN RIGHT_ASSIGN RIGHT RBRACK RBRACE QUESTION PTR PLUS PERCENT OR_ASSIGN NEQ MUL_ASSIGN MOD_ASSIGN MINUS LT LPAREN LEQ LEFT_ASSIGN LEFT LBRACK INC HAT GT GEQ EQEQ EQ DOT DIV_ASSIGN DEC COMMA COLON BARBAR BAR AND_ASSIGN ANDAND AND ADD_ASSIGN ]
unary_expression -> SIZEOF LPAREN type_name . RPAREN [ XOR_ASSIGN SUB_ASSIGN STAR SLASH SEMICOLON RPAREN RIGHT_ASSIGN RIGHT RBRACK RBRACE QUESTION PLUS PERCENT OR_ASSIGN NEQ MUL_ASSIGN MOD_ASSIGN MINUS LT LEQ LEFT_ASSIGN LEFT HAT GT GEQ EQEQ EQ DIV_ASSIGN COMMA COLON BARBAR BAR AND_ASSIGN ANDAND AND ADD_ASSIGN ]
## Transitions:
-- On RPAREN shift to state 379
## Reductions:

State 379:
## Known stack suffix:
## SIZEOF LPAREN type_name RPAREN
## LR(1) items:
postfix_expression -> LPAREN type_name RPAREN . LBRACE initializer_list option(COMMA) RBRACE [ XOR_ASSIGN SUB_ASSIGN STAR SLASH SEMICOLON RPAREN RIGHT_ASSIGN RIGHT RBRACK RBRACE QUESTION PTR PLUS PERCENT OR_ASSIGN NEQ MUL_ASSIGN MOD_ASSIGN MINUS LT LPAREN LEQ LEFT_ASSIGN LEFT LBRACK INC HAT GT GEQ EQEQ EQ DOT DIV_ASSIGN DEC COMMA COLON BARBAR BAR AND_ASSIGN ANDAND AND ADD_ASSIGN ]
unary_expression -> SIZEOF LPAREN type_name RPAREN . [ XOR_ASSIGN SUB_ASSIGN STAR SLASH SEMICOLON RPAREN RIGHT_ASSIGN RIGHT RBRACK RBRACE QUESTION PLUS PERCENT OR_ASSIGN NEQ MUL_ASSIGN MOD_ASSIGN MINUS LT LEQ LEFT_ASSIGN LEFT HAT GT GEQ EQEQ EQ DIV_ASSIGN COMMA COLON BARBAR BAR AND_ASSIGN ANDAND AND ADD_ASSIGN ]
## Transitions:
-- On LBRACE shift to state 313
## Reductions:
-- On XOR_ASSIGN reduce production unary_expression -> SIZEOF LPAREN type_name RPAREN
-- On WHILE reduce production unary_expression -> SIZEOF LPAREN type_name RPAREN
-- On VOLATILE reduce production unary_expression -> SIZEOF LPAREN type_name RPAREN
-- On VOID reduce production unary_expression -> SIZEOF LPAREN type_name RPAREN
-- On VAR_NAME reduce production unary_expression -> SIZEOF LPAREN type_name RPAREN
-- On UNSIGNED reduce production unary_expression -> SIZEOF LPAREN type_name RPAREN
-- On UNION reduce production unary_expression -> SIZEOF LPAREN type_name RPAREN
-- On UNDERSCORE_BOOL reduce production unary_expression -> SIZEOF LPAREN type_name RPAREN
-- On TYPEDEF_NAME reduce production unary_expression -> SIZEOF LPAREN type_name RPAREN
-- On TYPEDEF reduce production unary_expression -> SIZEOF LPAREN type_name RPAREN
-- On TILDE reduce production unary_expression -> SIZEOF LPAREN type_name RPAREN
-- On SWITCH reduce production unary_expression -> SIZEOF LPAREN type_name RPAREN
-- On SUB_ASSIGN reduce production unary_expression -> SIZEOF LPAREN type_name RPAREN
-- On STRUCT reduce production unary_expression -> SIZEOF LPAREN type_name RPAREN
-- On STRING_LITERAL reduce production unary_expression -> SIZEOF LPAREN type_name RPAREN
-- On STATIC reduce production unary_expression -> SIZEOF LPAREN type_name RPAREN
-- On STAR reduce production unary_expression -> SIZEOF LPAREN type_name RPAREN
-- On SLASH reduce production unary_expression -> SIZEOF LPAREN type_name RPAREN
-- On SIZEOF reduce production unary_expression -> SIZEOF LPAREN type_name RPAREN
-- On SIGNED reduce production unary_expression -> SIZEOF LPAREN type_name RPAREN
-- On SHORT reduce production unary_expression -> SIZEOF LPAREN type_name RPAREN
-- On SEMICOLON reduce production unary_expression -> SIZEOF LPAREN type_name RPAREN
-- On RPAREN reduce production unary_expression -> SIZEOF LPAREN type_name RPAREN
-- On RIGHT_ASSIGN reduce production unary_expression -> SIZEOF LPAREN type_name RPAREN
-- On RIGHT reduce production unary_expression -> SIZEOF LPAREN type_name RPAREN
-- On RETURN reduce production unary_expression -> SIZEOF LPAREN type_name RPAREN
-- On RESTRICT reduce production unary_expression -> SIZEOF LPAREN type_name RPAREN
-- On REGISTER reduce production unary_expression -> SIZEOF LPAREN type_name RPAREN
-- On RBRACK reduce production unary_expression -> SIZEOF LPAREN type_name RPAREN
-- On RBRACE reduce production unary_expression -> SIZEOF LPAREN type_name RPAREN
-- On QUESTION reduce production unary_expression -> SIZEOF LPAREN type_name RPAREN
-- On PTR reduce production unary_expression -> SIZEOF LPAREN type_name RPAREN
-- On PRE_NAME reduce production unary_expression -> SIZEOF LPAREN type_name RPAREN
-- On PRAGMA reduce production unary_expression -> SIZEOF LPAREN type_name RPAREN
-- On PLUS reduce production unary_expression -> SIZEOF LPAREN type_name RPAREN
-- On PERCENT reduce production unary_expression -> SIZEOF LPAREN type_name RPAREN
-- On PACKED reduce production unary_expression -> SIZEOF LPAREN type_name RPAREN
-- On OR_ASSIGN reduce production unary_expression -> SIZEOF LPAREN type_name RPAREN
-- On NEQ reduce production unary_expression -> SIZEOF LPAREN type_name RPAREN
-- On MUL_ASSIGN reduce production unary_expression -> SIZEOF LPAREN type_name RPAREN
-- On MOD_ASSIGN reduce production unary_expression -> SIZEOF LPAREN type_name RPAREN
-- On MINUS reduce production unary_expression -> SIZEOF LPAREN type_name RPAREN
-- On LT reduce production unary_expression -> SIZEOF LPAREN type_name RPAREN
-- On LPAREN reduce production unary_expression -> SIZEOF LPAREN type_name RPAREN
-- On LONG reduce production unary_expression -> SIZEOF LPAREN type_name RPAREN
-- On LEQ reduce production unary_expression -> SIZEOF LPAREN type_name RPAREN
-- On LEFT_ASSIGN reduce production unary_expression -> SIZEOF LPAREN type_name RPAREN
-- On LEFT reduce production unary_expression -> SIZEOF LPAREN type_name RPAREN
-- On LBRACK reduce production unary_expression -> SIZEOF LPAREN type_name RPAREN
-- On INT reduce production unary_expression -> SIZEOF LPAREN type_name RPAREN
-- On INLINE reduce production unary_expression -> SIZEOF LPAREN type_name RPAREN
-- On INC reduce production unary_expression -> SIZEOF LPAREN type_name RPAREN
-- On IF reduce production unary_expression -> SIZEOF LPAREN type_name RPAREN
-- On HAT reduce production unary_expression -> SIZEOF LPAREN type_name RPAREN
-- On GT reduce production unary_expression -> SIZEOF LPAREN type_name RPAREN
-- On GOTO reduce production unary_expression -> SIZEOF LPAREN type_name RPAREN
-- On GEQ reduce production unary_expression -> SIZEOF LPAREN type_name RPAREN
-- On FOR reduce production unary_expression -> SIZEOF LPAREN type_name RPAREN
-- On FLOAT reduce production unary_expression -> SIZEOF LPAREN type_name RPAREN
-- On EXTERN reduce production unary_expression -> SIZEOF LPAREN type_name RPAREN
-- On EQEQ reduce production unary_expression -> SIZEOF LPAREN type_name RPAREN
-- On EQ reduce production unary_expression -> SIZEOF LPAREN type_name RPAREN
-- On EOF reduce production unary_expression -> SIZEOF LPAREN type_name RPAREN
-- On ENUM reduce production unary_expression -> SIZEOF LPAREN type_name RPAREN
-- On ELSE reduce production unary_expression -> SIZEOF LPAREN type_name RPAREN
-- On ELLIPSIS reduce production unary_expression -> SIZEOF LPAREN type_name RPAREN
-- On DOUBLE reduce production unary_expression -> SIZEOF LPAREN type_name RPAREN
-- On DOT reduce production unary_expression -> SIZEOF LPAREN type_name RPAREN
-- On DO reduce production unary_expression -> SIZEOF LPAREN type_name RPAREN
-- On DIV_ASSIGN reduce production unary_expression -> SIZEOF LPAREN type_name RPAREN
-- On DEFAULT reduce production unary_expression -> SIZEOF LPAREN type_name RPAREN
-- On DEC reduce production unary_expression -> SIZEOF LPAREN type_name RPAREN
-- On CONTINUE reduce production unary_expression -> SIZEOF LPAREN type_name RPAREN
-- On CONSTANT reduce production unary_expression -> SIZEOF LPAREN type_name RPAREN
-- On CONST reduce production unary_expression -> SIZEOF LPAREN type_name RPAREN
-- On COMMA reduce production unary_expression -> SIZEOF LPAREN type_name RPAREN
-- On COLON reduce production unary_expression -> SIZEOF LPAREN type_name RPAREN
-- On CHAR reduce production unary_expression -> SIZEOF LPAREN type_name RPAREN
-- On CASE reduce production unary_expression -> SIZEOF LPAREN type_name RPAREN
-- On BUILTIN_VA_ARG reduce production unary_expression -> SIZEOF LPAREN type_name RPAREN
-- On BREAK reduce production unary_expression -> SIZEOF LPAREN type_name RPAREN
-- On BARBAR reduce production unary_expression -> SIZEOF LPAREN type_name RPAREN
-- On BAR reduce production unary_expression -> SIZEOF LPAREN type_name RPAREN
-- On BANG reduce production unary_expression -> SIZEOF LPAREN type_name RPAREN
-- On AUTO reduce production unary_expression -> SIZEOF LPAREN type_name RPAREN
-- On ATTRIBUTE reduce production unary_expression -> SIZEOF LPAREN type_name RPAREN
-- On ASM reduce production unary_expression -> SIZEOF LPAREN type_name RPAREN
-- On AND_ASSIGN reduce production unary_expression -> SIZEOF LPAREN type_name RPAREN
-- On ANDAND reduce production unary_expression -> SIZEOF LPAREN type_name RPAREN
-- On AND reduce production unary_expression -> SIZEOF LPAREN type_name RPAREN
-- On ALIGNOF reduce production unary_expression -> SIZEOF LPAREN type_name RPAREN
-- On ALIGNAS reduce production unary_expression -> SIZEOF LPAREN type_name RPAREN
-- On ADD_ASSIGN reduce production unary_expression -> SIZEOF LPAREN type_name RPAREN

State 380:
## Known stack suffix:
## SIZEOF unary_expression
## LR(1) items:
unary_expression -> SIZEOF unary_expression . [ XOR_ASSIGN SUB_ASSIGN STAR SLASH SEMICOLON RPAREN RIGHT_ASSIGN RIGHT RBRACK RBRACE QUESTION PLUS PERCENT OR_ASSIGN NEQ MUL_ASSIGN MOD_ASSIGN MINUS LT LEQ LEFT_ASSIGN LEFT HAT GT GEQ EQEQ EQ DIV_ASSIGN COMMA COLON BARBAR BAR AND_ASSIGN ANDAND AND ADD_ASSIGN ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production unary_expression -> SIZEOF unary_expression

State 381:
## Known stack suffix:
## PACKED LPAREN argument_expression_list
## LR(1) items:
argument_expression_list -> argument_expression_list . COMMA assignment_expression [ RPAREN COMMA ]
attribute_specifier -> PACKED LPAREN argument_expression_list . RPAREN [ VOLATILE VOID UNSIGNED UNION UNDERSCORE_BOOL TYPEDEF TILDE STRUCT STRING_LITERAL STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACK PRE_NAME PLUS PACKED MINUS LPAREN LONG LBRACK LBRACE INT INLINE INC FLOAT EXTERN EQ ENUM DOUBLE DEC CONSTANT CONST COMMA COLON CHAR BUILTIN_VA_ARG BANG AUTO ATTRIBUTE AND ALIGNOF ALIGNAS ]
## Transitions:
-- On RPAREN shift to state 382
-- On COMMA shift to state 135
## Reductions:

State 382:
## Known stack suffix:
## PACKED LPAREN argument_expression_list RPAREN
## LR(1) items:
attribute_specifier -> PACKED LPAREN argument_expression_list RPAREN . [ VOLATILE VOID UNSIGNED UNION UNDERSCORE_BOOL TYPEDEF TILDE STRUCT STRING_LITERAL STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RPAREN RESTRICT REGISTER RBRACK PRE_NAME PLUS PACKED MINUS LPAREN LONG LBRACK LBRACE INT INLINE INC FLOAT EXTERN EQ ENUM DOUBLE DEC CONSTANT CONST COMMA COLON CHAR BUILTIN_VA_ARG BANG AUTO ATTRIBUTE AND ALIGNOF ALIGNAS ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production attribute_specifier -> PACKED LPAREN argument_expression_list RPAREN

State 383:
## Known stack suffix:
## TYPEDEF list(declaration_specifier_no_type) typedef_name
## LR(1) items:
declaration_specifiers_typedef -> TYPEDEF list(declaration_specifier_no_type) typedef_name . list(declaration_specifier_no_type) [ STAR SEMICOLON PRE_NAME LPAREN ]
## Transitions:
-- On list(declaration_specifier_no_type) shift to state 384
## Default reduction:
-- After reading the next token, reduce production list(declaration_specifier_no_type) ->

State 384:
## Known stack suffix:
## TYPEDEF list(declaration_specifier_no_type) typedef_name list(declaration_specifier_no_type)
## LR(1) items:
declaration_specifiers_typedef -> TYPEDEF list(declaration_specifier_no_type) typedef_name list(declaration_specifier_no_type) . [ STAR SEMICOLON PRE_NAME LPAREN ]
list(declaration_specifier_no_type) -> list(declaration_specifier_no_type) . storage_class_specifier_no_typedef [ VOLATILE STATIC STAR SEMICOLON RESTRICT REGISTER PRE_NAME PACKED LPAREN INLINE EXTERN CONST AUTO ATTRIBUTE ALIGNAS ]
list(declaration_specifier_no_type) -> list(declaration_specifier_no_type) . type_qualifier_noattr [ VOLATILE STATIC STAR SEMICOLON RESTRICT REGISTER PRE_NAME PACKED LPAREN INLINE EXTERN CONST AUTO ATTRIBUTE ALIGNAS ]
list(declaration_specifier_no_type) -> list(declaration_specifier_no_type) . function_specifier [ VOLATILE STATIC STAR SEMICOLON RESTRICT REGISTER PRE_NAME PACKED LPAREN INLINE EXTERN CONST AUTO ATTRIBUTE ALIGNAS ]
list(declaration_specifier_no_type) -> list(declaration_specifier_no_type) . attribute_specifier [ VOLATILE STATIC STAR SEMICOLON RESTRICT REGISTER PRE_NAME PACKED LPAREN INLINE EXTERN CONST AUTO ATTRIBUTE ALIGNAS ]
## Transitions:
-- On VOLATILE shift to state 1
-- On STATIC shift to state 9
-- On RESTRICT shift to state 12
-- On REGISTER shift to state 13
-- On PACKED shift to state 16
-- On INLINE shift to state 192
-- On EXTERN shift to state 193
-- On CONST shift to state 148
-- On AUTO shift to state 194
-- On ATTRIBUTE shift to state 35
-- On ALIGNAS shift to state 149
-- On type_qualifier_noattr shift to state 197
-- On storage_class_specifier_no_typedef shift to state 198
-- On function_specifier shift to state 199
-- On attribute_specifier shift to state 200
## Reductions:
-- On STAR reduce production declaration_specifiers_typedef -> TYPEDEF list(declaration_specifier_no_type) typedef_name list(declaration_specifier_no_type)
-- On SEMICOLON reduce production declaration_specifiers_typedef -> TYPEDEF list(declaration_specifier_no_type) typedef_name list(declaration_specifier_no_type)
-- On PRE_NAME reduce production declaration_specifiers_typedef -> TYPEDEF list(declaration_specifier_no_type) typedef_name list(declaration_specifier_no_type)
-- On LPAREN reduce production declaration_specifiers_typedef -> TYPEDEF list(declaration_specifier_no_type) typedef_name list(declaration_specifier_no_type)

State 385:
## Known stack suffix:
## TYPEDEF list(declaration_specifier_no_type) type_specifier_no_typedef_name
## LR(1) items:
declaration_specifiers_typedef -> TYPEDEF list(declaration_specifier_no_type) type_specifier_no_typedef_name . list(declaration_specifier_no_typedef_name) [ STAR SEMICOLON PRE_NAME LPAREN ]
## Transitions:
-- On list(declaration_specifier_no_typedef_name) shift to state 386
## Default reduction:
-- After reading the next token, reduce production list(declaration_specifier_no_typedef_name) ->

State 386:
## Known stack suffix:
## TYPEDEF list(declaration_specifier_no_type) type_specifier_no_typedef_name list(declaration_specifier_no_typedef_name)
## LR(1) items:
declaration_specifiers_typedef -> TYPEDEF list(declaration_specifier_no_type) type_specifier_no_typedef_name list(declaration_specifier_no_typedef_name) . [ STAR SEMICOLON PRE_NAME LPAREN ]
list(declaration_specifier_no_typedef_name) -> list(declaration_specifier_no_typedef_name) . declaration_specifier_no_typedef_name [ VOLATILE VOID UNSIGNED UNION UNDERSCORE_BOOL STRUCT STATIC STAR SIGNED SHORT SEMICOLON RESTRICT REGISTER PRE_NAME PACKED LPAREN LONG INT INLINE FLOAT EXTERN ENUM DOUBLE CONST CHAR AUTO ATTRIBUTE ALIGNAS ]
## Transitions:
-- On VOLATILE shift to state 1
-- On VOID shift to state 2
-- On UNSIGNED shift to state 3
-- On UNION shift to state 4
-- On UNDERSCORE_BOOL shift to state 5
-- On STRUCT shift to state 8
-- On STATIC shift to state 9
-- On SIGNED shift to state 10
-- On SHORT shift to state 11
-- On RESTRICT shift to state 12
-- On REGISTER shift to state 13
-- On PACKED shift to state 16
-- On LONG shift to state 29
-- On INT shift to state 30
-- On INLINE shift to state 192
-- On FLOAT shift to state 33
-- On EXTERN shift to state 193
-- On ENUM shift to state 34
-- On DOUBLE shift to state 54
-- On CONST shift to state 148
-- On CHAR shift to state 55
-- On AUTO shift to state 194
-- On ATTRIBUTE shift to state 35
-- On ALIGNAS shift to state 149
-- On type_specifier_no_typedef_name shift to state 203
-- On type_qualifier_noattr shift to state 204
-- On struct_or_union_specifier shift to state 155
-- On struct_or_union shift to state 156
-- On storage_class_specifier_no_typedef shift to state 205
-- On function_specifier shift to state 206
-- On enum_specifier shift to state 169
-- On declaration_specifier_no_typedef_name shift to state 207
-- On attribute_specifier shift to state 208
## Reductions:
-- On STAR reduce production declaration_specifiers_typedef -> TYPEDEF list(declaration_specifier_no_type) type_specifier_no_typedef_name list(declaration_specifier_no_typedef_name)
-- On SEMICOLON reduce production declaration_specifiers_typedef -> TYPEDEF list(declaration_specifier_no_type) type_specifier_no_typedef_name list(declaration_specifier_no_typedef_name)
-- On PRE_NAME reduce production declaration_specifiers_typedef -> TYPEDEF list(declaration_specifier_no_type) type_specifier_no_typedef_name list(declaration_specifier_no_typedef_name)
-- On LPAREN reduce production declaration_specifiers_typedef -> TYPEDEF list(declaration_specifier_no_type) type_specifier_no_typedef_name list(declaration_specifier_no_typedef_name)

State 387:
## Known stack suffix:
## SEMICOLON
## LR(1) items:
translation_unit -> SEMICOLON . [ VOLATILE VOID UNSIGNED UNION UNDERSCORE_BOOL TYPEDEF STRUCT STATIC SIGNED SHORT SEMICOLON RESTRICT REGISTER PRE_NAME PRAGMA PACKED LONG INT INLINE FLOAT EXTERN EOF ENUM DOUBLE CONST CHAR AUTO ATTRIBUTE ALIGNAS ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production translation_unit -> SEMICOLON

State 388:
## Known stack suffix:
## PRAGMA
## LR(1) items:
external_declaration -> PRAGMA . [ VOLATILE VOID UNSIGNED UNION UNDERSCORE_BOOL TYPEDEF STRUCT STATIC SIGNED SHORT SEMICOLON RESTRICT REGISTER PRE_NAME PRAGMA PACKED LONG INT INLINE FLOAT EXTERN EOF ENUM DOUBLE CONST CHAR AUTO ATTRIBUTE ALIGNAS ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production external_declaration -> PRAGMA

State 389:
## Known stack suffix:
## EOF
## LR(1) items:
translation_unit_file -> EOF . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, reduce production translation_unit_file -> EOF

State 390:
## Known stack suffix:
## typedef_name
## LR(1) items:
declaration_specifiers(declaration(external_declaration)) -> typedef_name . list(declaration_specifier_no_type) [ STAR SEMICOLON PRE_NAME LPAREN ]
declaration_specifiers_typedef -> typedef_name . list(declaration_specifier_no_type) TYPEDEF list(declaration_specifier_no_type) [ STAR SEMICOLON PRE_NAME LPAREN ]
## Transitions:
-- On list(declaration_specifier_no_type) shift to state 391
## Default reduction:
-- After reading the next token, reduce production list(declaration_specifier_no_type) ->

State 391:
## Known stack suffix:
## typedef_name list(declaration_specifier_no_type)
## LR(1) items:
declaration_specifiers(declaration(external_declaration)) -> typedef_name list(declaration_specifier_no_type) . [ STAR SEMICOLON PRE_NAME LPAREN ]
declaration_specifiers_typedef -> typedef_name list(declaration_specifier_no_type) . TYPEDEF list(declaration_specifier_no_type) [ STAR SEMICOLON PRE_NAME LPAREN ]
list(declaration_specifier_no_type) -> list(declaration_specifier_no_type) . storage_class_specifier_no_typedef [ VOLATILE TYPEDEF STATIC STAR SEMICOLON RESTRICT REGISTER PRE_NAME PACKED LPAREN INLINE EXTERN CONST AUTO ATTRIBUTE ALIGNAS ]
list(declaration_specifier_no_type) -> list(declaration_specifier_no_type) . type_qualifier_noattr [ VOLATILE TYPEDEF STATIC STAR SEMICOLON RESTRICT REGISTER PRE_NAME PACKED LPAREN INLINE EXTERN CONST AUTO ATTRIBUTE ALIGNAS ]
list(declaration_specifier_no_type) -> list(declaration_specifier_no_type) . function_specifier [ VOLATILE TYPEDEF STATIC STAR SEMICOLON RESTRICT REGISTER PRE_NAME PACKED LPAREN INLINE EXTERN CONST AUTO ATTRIBUTE ALIGNAS ]
list(declaration_specifier_no_type) -> list(declaration_specifier_no_type) . attribute_specifier [ VOLATILE TYPEDEF STATIC STAR SEMICOLON RESTRICT REGISTER PRE_NAME PACKED LPAREN INLINE EXTERN CONST AUTO ATTRIBUTE ALIGNAS ]
## Transitions:
-- On VOLATILE shift to state 1
-- On TYPEDEF shift to state 392
-- On STATIC shift to state 9
-- On RESTRICT shift to state 12
-- On REGISTER shift to state 13
-- On PACKED shift to state 16
-- On INLINE shift to state 192
-- On EXTERN shift to state 193
-- On CONST shift to state 148
-- On AUTO shift to state 194
-- On ATTRIBUTE shift to state 35
-- On ALIGNAS shift to state 149
-- On type_qualifier_noattr shift to state 197
-- On storage_class_specifier_no_typedef shift to state 198
-- On function_specifier shift to state 199
-- On attribute_specifier shift to state 200
## Reductions:
-- On STAR reduce production declaration_specifiers(declaration(external_declaration)) -> typedef_name list(declaration_specifier_no_type)
-- On SEMICOLON reduce production declaration_specifiers(declaration(external_declaration)) -> typedef_name list(declaration_specifier_no_type)
-- On PRE_NAME reduce production declaration_specifiers(declaration(external_declaration)) -> typedef_name list(declaration_specifier_no_type)
-- On LPAREN reduce production declaration_specifiers(declaration(external_declaration)) -> typedef_name list(declaration_specifier_no_type)

State 392:
## Known stack suffix:
## typedef_name list(declaration_specifier_no_type) TYPEDEF
## LR(1) items:
declaration_specifiers_typedef -> typedef_name list(declaration_specifier_no_type) TYPEDEF . list(declaration_specifier_no_type) [ STAR SEMICOLON PRE_NAME LPAREN ]
## Transitions:
-- On list(declaration_specifier_no_type) shift to state 393
## Default reduction:
-- After reading the next token, reduce production list(declaration_specifier_no_type) ->

State 393:
## Known stack suffix:
## typedef_name list(declaration_specifier_no_type) TYPEDEF list(declaration_specifier_no_type)
## LR(1) items:
declaration_specifiers_typedef -> typedef_name list(declaration_specifier_no_type) TYPEDEF list(declaration_specifier_no_type) . [ STAR SEMICOLON PRE_NAME LPAREN ]
list(declaration_specifier_no_type) -> list(declaration_specifier_no_type) . storage_class_specifier_no_typedef [ VOLATILE STATIC STAR SEMICOLON RESTRICT REGISTER PRE_NAME PACKED LPAREN INLINE EXTERN CONST AUTO ATTRIBUTE ALIGNAS ]
list(declaration_specifier_no_type) -> list(declaration_specifier_no_type) . type_qualifier_noattr [ VOLATILE STATIC STAR SEMICOLON RESTRICT REGISTER PRE_NAME PACKED LPAREN INLINE EXTERN CONST AUTO ATTRIBUTE ALIGNAS ]
list(declaration_specifier_no_type) -> list(declaration_specifier_no_type) . function_specifier [ VOLATILE STATIC STAR SEMICOLON RESTRICT REGISTER PRE_NAME PACKED LPAREN INLINE EXTERN CONST AUTO ATTRIBUTE ALIGNAS ]
list(declaration_specifier_no_type) -> list(declaration_specifier_no_type) . attribute_specifier [ VOLATILE STATIC STAR SEMICOLON RESTRICT REGISTER PRE_NAME PACKED LPAREN INLINE EXTERN CONST AUTO ATTRIBUTE ALIGNAS ]
## Transitions:
-- On VOLATILE shift to state 1
-- On STATIC shift to state 9
-- On RESTRICT shift to state 12
-- On REGISTER shift to state 13
-- On PACKED shift to state 16
-- On INLINE shift to state 192
-- On EXTERN shift to state 193
-- On CONST shift to state 148
-- On AUTO shift to state 194
-- On ATTRIBUTE shift to state 35
-- On ALIGNAS shift to state 149
-- On type_qualifier_noattr shift to state 197
-- On storage_class_specifier_no_typedef shift to state 198
-- On function_specifier shift to state 199
-- On attribute_specifier shift to state 200
## Reductions:
-- On STAR reduce production declaration_specifiers_typedef -> typedef_name list(declaration_specifier_no_type) TYPEDEF list(declaration_specifier_no_type)
-- On SEMICOLON reduce production declaration_specifiers_typedef -> typedef_name list(declaration_specifier_no_type) TYPEDEF list(declaration_specifier_no_type)
-- On PRE_NAME reduce production declaration_specifiers_typedef -> typedef_name list(declaration_specifier_no_type) TYPEDEF list(declaration_specifier_no_type)
-- On LPAREN reduce production declaration_specifiers_typedef -> typedef_name list(declaration_specifier_no_type) TYPEDEF list(declaration_specifier_no_type)

State 394:
## Known stack suffix:
## type_specifier_no_typedef_name
## LR(1) items:
declaration_specifiers(declaration(external_declaration)) -> type_specifier_no_typedef_name . list(declaration_specifier_no_typedef_name) [ STAR SEMICOLON PRE_NAME LPAREN ]
declaration_specifiers_typedef -> type_specifier_no_typedef_name . list(declaration_specifier_no_typedef_name) TYPEDEF list(declaration_specifier_no_typedef_name) [ STAR SEMICOLON PRE_NAME LPAREN ]
## Transitions:
-- On list(declaration_specifier_no_typedef_name) shift to state 395
## Default reduction:
-- After reading the next token, reduce production list(declaration_specifier_no_typedef_name) ->

State 395:
## Known stack suffix:
## type_specifier_no_typedef_name list(declaration_specifier_no_typedef_name)
## LR(1) items:
declaration_specifiers(declaration(external_declaration)) -> type_specifier_no_typedef_name list(declaration_specifier_no_typedef_name) . [ STAR SEMICOLON PRE_NAME LPAREN ]
declaration_specifiers_typedef -> type_specifier_no_typedef_name list(declaration_specifier_no_typedef_name) . TYPEDEF list(declaration_specifier_no_typedef_name) [ STAR SEMICOLON PRE_NAME LPAREN ]
list(declaration_specifier_no_typedef_name) -> list(declaration_specifier_no_typedef_name) . declaration_specifier_no_typedef_name [ VOLATILE VOID UNSIGNED UNION UNDERSCORE_BOOL TYPEDEF STRUCT STATIC STAR SIGNED SHORT SEMICOLON RESTRICT REGISTER PRE_NAME PACKED LPAREN LONG INT INLINE FLOAT EXTERN ENUM DOUBLE CONST CHAR AUTO ATTRIBUTE ALIGNAS ]
## Transitions:
-- On VOLATILE shift to state 1
-- On VOID shift to state 2
-- On UNSIGNED shift to state 3
-- On UNION shift to state 4
-- On UNDERSCORE_BOOL shift to state 5
-- On TYPEDEF shift to state 396
-- On STRUCT shift to state 8
-- On STATIC shift to state 9
-- On SIGNED shift to state 10
-- On SHORT shift to state 11
-- On RESTRICT shift to state 12
-- On REGISTER shift to state 13
-- On PACKED shift to state 16
-- On LONG shift to state 29
-- On INT shift to state 30
-- On INLINE shift to state 192
-- On FLOAT shift to state 33
-- On EXTERN shift to state 193
-- On ENUM shift to state 34
-- On DOUBLE shift to state 54
-- On CONST shift to state 148
-- On CHAR shift to state 55
-- On AUTO shift to state 194
-- On ATTRIBUTE shift to state 35
-- On ALIGNAS shift to state 149
-- On type_specifier_no_typedef_name shift to state 203
-- On type_qualifier_noattr shift to state 204
-- On struct_or_union_specifier shift to state 155
-- On struct_or_union shift to state 156
-- On storage_class_specifier_no_typedef shift to state 205
-- On function_specifier shift to state 206
-- On enum_specifier shift to state 169
-- On declaration_specifier_no_typedef_name shift to state 207
-- On attribute_specifier shift to state 208
## Reductions:
-- On STAR reduce production declaration_specifiers(declaration(external_declaration)) -> type_specifier_no_typedef_name list(declaration_specifier_no_typedef_name)
-- On SEMICOLON reduce production declaration_specifiers(declaration(external_declaration)) -> type_specifier_no_typedef_name list(declaration_specifier_no_typedef_name)
-- On PRE_NAME reduce production declaration_specifiers(declaration(external_declaration)) -> type_specifier_no_typedef_name list(declaration_specifier_no_typedef_name)
-- On LPAREN reduce production declaration_specifiers(declaration(external_declaration)) -> type_specifier_no_typedef_name list(declaration_specifier_no_typedef_name)

State 396:
## Known stack suffix:
## type_specifier_no_typedef_name list(declaration_specifier_no_typedef_name) TYPEDEF
## LR(1) items:
declaration_specifiers_typedef -> type_specifier_no_typedef_name list(declaration_specifier_no_typedef_name) TYPEDEF . list(declaration_specifier_no_typedef_name) [ STAR SEMICOLON PRE_NAME LPAREN ]
## Transitions:
-- On list(declaration_specifier_no_typedef_name) shift to state 397
## Default reduction:
-- After reading the next token, reduce production list(declaration_specifier_no_typedef_name) ->

State 397:
## Known stack suffix:
## type_specifier_no_typedef_name list(declaration_specifier_no_typedef_name) TYPEDEF list(declaration_specifier_no_typedef_name)
## LR(1) items:
declaration_specifiers_typedef -> type_specifier_no_typedef_name list(declaration_specifier_no_typedef_name) TYPEDEF list(declaration_specifier_no_typedef_name) . [ STAR SEMICOLON PRE_NAME LPAREN ]
list(declaration_specifier_no_typedef_name) -> list(declaration_specifier_no_typedef_name) . declaration_specifier_no_typedef_name [ VOLATILE VOID UNSIGNED UNION UNDERSCORE_BOOL STRUCT STATIC STAR SIGNED SHORT SEMICOLON RESTRICT REGISTER PRE_NAME PACKED LPAREN LONG INT INLINE FLOAT EXTERN ENUM DOUBLE CONST CHAR AUTO ATTRIBUTE ALIGNAS ]
## Transitions:
-- On VOLATILE shift to state 1
-- On VOID shift to state 2
-- On UNSIGNED shift to state 3
-- On UNION shift to state 4
-- On UNDERSCORE_BOOL shift to state 5
-- On STRUCT shift to state 8
-- On STATIC shift to state 9
-- On SIGNED shift to state 10
-- On SHORT shift to state 11
-- On RESTRICT shift to state 12
-- On REGISTER shift to state 13
-- On PACKED shift to state 16
-- On LONG shift to state 29
-- On INT shift to state 30
-- On INLINE shift to state 192
-- On FLOAT shift to state 33
-- On EXTERN shift to state 193
-- On ENUM shift to state 34
-- On DOUBLE shift to state 54
-- On CONST shift to state 148
-- On CHAR shift to state 55
-- On AUTO shift to state 194
-- On ATTRIBUTE shift to state 35
-- On ALIGNAS shift to state 149
-- On type_specifier_no_typedef_name shift to state 203
-- On type_qualifier_noattr shift to state 204
-- On struct_or_union_specifier shift to state 155
-- On struct_or_union shift to state 156
-- On storage_class_specifier_no_typedef shift to state 205
-- On function_specifier shift to state 206
-- On enum_specifier shift to state 169
-- On declaration_specifier_no_typedef_name shift to state 207
-- On attribute_specifier shift to state 208
## Reductions:
-- On STAR reduce production declaration_specifiers_typedef -> type_specifier_no_typedef_name list(declaration_specifier_no_typedef_name) TYPEDEF list(declaration_specifier_no_typedef_name)
-- On SEMICOLON reduce production declaration_specifiers_typedef -> type_specifier_no_typedef_name list(declaration_specifier_no_typedef_name) TYPEDEF list(declaration_specifier_no_typedef_name)
-- On PRE_NAME reduce production declaration_specifiers_typedef -> type_specifier_no_typedef_name list(declaration_specifier_no_typedef_name) TYPEDEF list(declaration_specifier_no_typedef_name)
-- On LPAREN reduce production declaration_specifiers_typedef -> type_specifier_no_typedef_name list(declaration_specifier_no_typedef_name) TYPEDEF list(declaration_specifier_no_typedef_name)

State 398:
## Known stack suffix:
## translation_unit_file
## LR(1) items:
translation_unit_file' -> translation_unit_file . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, accept translation_unit_file

State 399:
## Known stack suffix:
## translation_unit
## LR(1) items:
translation_unit -> translation_unit . external_declaration [ VOLATILE VOID UNSIGNED UNION UNDERSCORE_BOOL TYPEDEF STRUCT STATIC SIGNED SHORT SEMICOLON RESTRICT REGISTER PRE_NAME PRAGMA PACKED LONG INT INLINE FLOAT EXTERN EOF ENUM DOUBLE CONST CHAR AUTO ATTRIBUTE ALIGNAS ]
translation_unit -> translation_unit . SEMICOLON [ VOLATILE VOID UNSIGNED UNION UNDERSCORE_BOOL TYPEDEF STRUCT STATIC SIGNED SHORT SEMICOLON RESTRICT REGISTER PRE_NAME PRAGMA PACKED LONG INT INLINE FLOAT EXTERN EOF ENUM DOUBLE CONST CHAR AUTO ATTRIBUTE ALIGNAS ]
translation_unit_file -> translation_unit . EOF [ # ]
## Transitions:
-- On VOLATILE shift to state 1
-- On VOID shift to state 2
-- On UNSIGNED shift to state 3
-- On UNION shift to state 4
-- On UNDERSCORE_BOOL shift to state 5
-- On TYPEDEF shift to state 6
-- On STRUCT shift to state 8
-- On STATIC shift to state 9
-- On SIGNED shift to state 10
-- On SHORT shift to state 11
-- On SEMICOLON shift to state 400
-- On RESTRICT shift to state 12
-- On REGISTER shift to state 13
-- On PRE_NAME shift to state 14
-- On PRAGMA shift to state 388
-- On PACKED shift to state 16
-- On LONG shift to state 29
-- On INT shift to state 30
-- On INLINE shift to state 192
-- On FLOAT shift to state 33
-- On EXTERN shift to state 193
-- On EOF shift to state 401
-- On ENUM shift to state 34
-- On DOUBLE shift to state 54
-- On CONST shift to state 148
-- On CHAR shift to state 55
-- On AUTO shift to state 194
-- On ATTRIBUTE shift to state 35
-- On ALIGNAS shift to state 149
-- On typedef_name shift to state 390
-- On type_specifier_no_typedef_name shift to state 394
-- On type_qualifier_noattr shift to state 209
-- On struct_or_union_specifier shift to state 155
-- On struct_or_union shift to state 156
-- On storage_class_specifier_no_typedef shift to state 210
-- On rlist(declaration_specifier_no_type) shift to state 402
-- On function_specifier shift to state 212
-- On function_definition1 shift to state 417
-- On function_definition shift to state 567
-- On external_declaration shift to state 568
-- On enum_specifier shift to state 169
-- On declaration_specifiers_typedef shift to state 569
-- On declaration_specifiers(declaration(external_declaration)) shift to state 572
-- On declaration(external_declaration) shift to state 595
-- On attribute_specifier shift to state 214
## Reductions:

State 400:
## Known stack suffix:
## translation_unit SEMICOLON
## LR(1) items:
translation_unit -> translation_unit SEMICOLON . [ VOLATILE VOID UNSIGNED UNION UNDERSCORE_BOOL TYPEDEF STRUCT STATIC SIGNED SHORT SEMICOLON RESTRICT REGISTER PRE_NAME PRAGMA PACKED LONG INT INLINE FLOAT EXTERN EOF ENUM DOUBLE CONST CHAR AUTO ATTRIBUTE ALIGNAS ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production translation_unit -> translation_unit SEMICOLON

State 401:
## Known stack suffix:
## translation_unit EOF
## LR(1) items:
translation_unit_file -> translation_unit EOF . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, reduce production translation_unit_file -> translation_unit EOF

State 402:
## Known stack suffix:
## rlist(declaration_specifier_no_type)
## LR(1) items:
declaration_specifiers(declaration(external_declaration)) -> rlist(declaration_specifier_no_type) . typedef_name list(declaration_specifier_no_type) [ STAR SEMICOLON PRE_NAME LPAREN ]
declaration_specifiers(declaration(external_declaration)) -> rlist(declaration_specifier_no_type) . type_specifier_no_typedef_name list(declaration_specifier_no_typedef_name) [ STAR SEMICOLON PRE_NAME LPAREN ]
declaration_specifiers_typedef -> rlist(declaration_specifier_no_type) . TYPEDEF list(declaration_specifier_no_type) typedef_name list(declaration_specifier_no_type) [ STAR SEMICOLON PRE_NAME LPAREN ]
declaration_specifiers_typedef -> rlist(declaration_specifier_no_type) . typedef_name list(declaration_specifier_no_type) TYPEDEF list(declaration_specifier_no_type) [ STAR SEMICOLON PRE_NAME LPAREN ]
declaration_specifiers_typedef -> rlist(declaration_specifier_no_type) . TYPEDEF list(declaration_specifier_no_type) type_specifier_no_typedef_name list(declaration_specifier_no_typedef_name) [ STAR SEMICOLON PRE_NAME LPAREN ]
declaration_specifiers_typedef -> rlist(declaration_specifier_no_type) . type_specifier_no_typedef_name list(declaration_specifier_no_typedef_name) TYPEDEF list(declaration_specifier_no_typedef_name) [ STAR SEMICOLON PRE_NAME LPAREN ]
## Transitions:
-- On VOID shift to state 2
-- On UNSIGNED shift to state 3
-- On UNION shift to state 4
-- On UNDERSCORE_BOOL shift to state 5
-- On TYPEDEF shift to state 403
-- On STRUCT shift to state 8
-- On SIGNED shift to state 10
-- On SHORT shift to state 11
-- On PRE_NAME shift to state 14
-- On LONG shift to state 29
-- On INT shift to state 30
-- On FLOAT shift to state 33
-- On ENUM shift to state 34
-- On DOUBLE shift to state 54
-- On CHAR shift to state 55
-- On typedef_name shift to state 409
-- On type_specifier_no_typedef_name shift to state 413
-- On struct_or_union_specifier shift to state 155
-- On struct_or_union shift to state 156
-- On enum_specifier shift to state 169
## Reductions:

State 403:
## Known stack suffix:
## rlist(declaration_specifier_no_type) TYPEDEF
## LR(1) items:
declaration_specifiers_typedef -> rlist(declaration_specifier_no_type) TYPEDEF . list(declaration_specifier_no_type) typedef_name list(declaration_specifier_no_type) [ STAR SEMICOLON PRE_NAME LPAREN ]
declaration_specifiers_typedef -> rlist(declaration_specifier_no_type) TYPEDEF . list(declaration_specifier_no_type) type_specifier_no_typedef_name list(declaration_specifier_no_typedef_name) [ STAR SEMICOLON PRE_NAME LPAREN ]
## Transitions:
-- On list(declaration_specifier_no_type) shift to state 404
## Default reduction:
-- After reading the next token, reduce production list(declaration_specifier_no_type) ->

State 404:
## Known stack suffix:
## rlist(declaration_specifier_no_type) TYPEDEF list(declaration_specifier_no_type)
## LR(1) items:
declaration_specifiers_typedef -> rlist(declaration_specifier_no_type) TYPEDEF list(declaration_specifier_no_type) . typedef_name list(declaration_specifier_no_type) [ STAR SEMICOLON PRE_NAME LPAREN ]
declaration_specifiers_typedef -> rlist(declaration_specifier_no_type) TYPEDEF list(declaration_specifier_no_type) . type_specifier_no_typedef_name list(declaration_specifier_no_typedef_name) [ STAR SEMICOLON PRE_NAME LPAREN ]
list(declaration_specifier_no_type) -> list(declaration_specifier_no_type) . storage_class_specifier_no_typedef [ VOLATILE VOID UNSIGNED UNION UNDERSCORE_BOOL STRUCT STATIC SIGNED SHORT RESTRICT REGISTER PRE_NAME PACKED LONG INT INLINE FLOAT EXTERN ENUM DOUBLE CONST CHAR AUTO ATTRIBUTE ALIGNAS ]
list(declaration_specifier_no_type) -> list(declaration_specifier_no_type) . type_qualifier_noattr [ VOLATILE VOID UNSIGNED UNION UNDERSCORE_BOOL STRUCT STATIC SIGNED SHORT RESTRICT REGISTER PRE_NAME PACKED LONG INT INLINE FLOAT EXTERN ENUM DOUBLE CONST CHAR AUTO ATTRIBUTE ALIGNAS ]
list(declaration_specifier_no_type) -> list(declaration_specifier_no_type) . function_specifier [ VOLATILE VOID UNSIGNED UNION UNDERSCORE_BOOL STRUCT STATIC SIGNED SHORT RESTRICT REGISTER PRE_NAME PACKED LONG INT INLINE FLOAT EXTERN ENUM DOUBLE CONST CHAR AUTO ATTRIBUTE ALIGNAS ]
list(declaration_specifier_no_type) -> list(declaration_specifier_no_type) . attribute_specifier [ VOLATILE VOID UNSIGNED UNION UNDERSCORE_BOOL STRUCT STATIC SIGNED SHORT RESTRICT REGISTER PRE_NAME PACKED LONG INT INLINE FLOAT EXTERN ENUM DOUBLE CONST CHAR AUTO ATTRIBUTE ALIGNAS ]
## Transitions:
-- On VOLATILE shift to state 1
-- On VOID shift to state 2
-- On UNSIGNED shift to state 3
-- On UNION shift to state 4
-- On UNDERSCORE_BOOL shift to state 5
-- On STRUCT shift to state 8
-- On STATIC shift to state 9
-- On SIGNED shift to state 10
-- On SHORT shift to state 11
-- On RESTRICT shift to state 12
-- On REGISTER shift to state 13
-- On PRE_NAME shift to state 14
-- On PACKED shift to state 16
-- On LONG shift to state 29
-- On INT shift to state 30
-- On INLINE shift to state 192
-- On FLOAT shift to state 33
-- On EXTERN shift to state 193
-- On ENUM shift to state 34
-- On DOUBLE shift to state 54
-- On CONST shift to state 148
-- On CHAR shift to state 55
-- On AUTO shift to state 194
-- On ATTRIBUTE shift to state 35
-- On ALIGNAS shift to state 149
-- On typedef_name shift to state 405
-- On type_specifier_no_typedef_name shift to state 407
-- On type_qualifier_noattr shift to state 197
-- On struct_or_union_specifier shift to state 155
-- On struct_or_union shift to state 156
-- On storage_class_specifier_no_typedef shift to state 198
-- On function_specifier shift to state 199
-- On enum_specifier shift to state 169
-- On attribute_specifier shift to state 200
## Reductions:

State 405:
## Known stack suffix:
## rlist(declaration_specifier_no_type) TYPEDEF list(declaration_specifier_no_type) typedef_name
## LR(1) items:
declaration_specifiers_typedef -> rlist(declaration_specifier_no_type) TYPEDEF list(declaration_specifier_no_type) typedef_name . list(declaration_specifier_no_type) [ STAR SEMICOLON PRE_NAME LPAREN ]
## Transitions:
-- On list(declaration_specifier_no_type) shift to state 406
## Default reduction:
-- After reading the next token, reduce production list(declaration_specifier_no_type) ->

State 406:
## Known stack suffix:
## rlist(declaration_specifier_no_type) TYPEDEF list(declaration_specifier_no_type) typedef_name list(declaration_specifier_no_type)
## LR(1) items:
declaration_specifiers_typedef -> rlist(declaration_specifier_no_type) TYPEDEF list(declaration_specifier_no_type) typedef_name list(declaration_specifier_no_type) . [ STAR SEMICOLON PRE_NAME LPAREN ]
list(declaration_specifier_no_type) -> list(declaration_specifier_no_type) . storage_class_specifier_no_typedef [ VOLATILE STATIC STAR SEMICOLON RESTRICT REGISTER PRE_NAME PACKED LPAREN INLINE EXTERN CONST AUTO ATTRIBUTE ALIGNAS ]
list(declaration_specifier_no_type) -> list(declaration_specifier_no_type) . type_qualifier_noattr [ VOLATILE STATIC STAR SEMICOLON RESTRICT REGISTER PRE_NAME PACKED LPAREN INLINE EXTERN CONST AUTO ATTRIBUTE ALIGNAS ]
list(declaration_specifier_no_type) -> list(declaration_specifier_no_type) . function_specifier [ VOLATILE STATIC STAR SEMICOLON RESTRICT REGISTER PRE_NAME PACKED LPAREN INLINE EXTERN CONST AUTO ATTRIBUTE ALIGNAS ]
list(declaration_specifier_no_type) -> list(declaration_specifier_no_type) . attribute_specifier [ VOLATILE STATIC STAR SEMICOLON RESTRICT REGISTER PRE_NAME PACKED LPAREN INLINE EXTERN CONST AUTO ATTRIBUTE ALIGNAS ]
## Transitions:
-- On VOLATILE shift to state 1
-- On STATIC shift to state 9
-- On RESTRICT shift to state 12
-- On REGISTER shift to state 13
-- On PACKED shift to state 16
-- On INLINE shift to state 192
-- On EXTERN shift to state 193
-- On CONST shift to state 148
-- On AUTO shift to state 194
-- On ATTRIBUTE shift to state 35
-- On ALIGNAS shift to state 149
-- On type_qualifier_noattr shift to state 197
-- On storage_class_specifier_no_typedef shift to state 198
-- On function_specifier shift to state 199
-- On attribute_specifier shift to state 200
## Reductions:
-- On STAR reduce production declaration_specifiers_typedef -> rlist(declaration_specifier_no_type) TYPEDEF list(declaration_specifier_no_type) typedef_name list(declaration_specifier_no_type)
-- On SEMICOLON reduce production declaration_specifiers_typedef -> rlist(declaration_specifier_no_type) TYPEDEF list(declaration_specifier_no_type) typedef_name list(declaration_specifier_no_type)
-- On PRE_NAME reduce production declaration_specifiers_typedef -> rlist(declaration_specifier_no_type) TYPEDEF list(declaration_specifier_no_type) typedef_name list(declaration_specifier_no_type)
-- On LPAREN reduce production declaration_specifiers_typedef -> rlist(declaration_specifier_no_type) TYPEDEF list(declaration_specifier_no_type) typedef_name list(declaration_specifier_no_type)

State 407:
## Known stack suffix:
## rlist(declaration_specifier_no_type) TYPEDEF list(declaration_specifier_no_type) type_specifier_no_typedef_name
## LR(1) items:
declaration_specifiers_typedef -> rlist(declaration_specifier_no_type) TYPEDEF list(declaration_specifier_no_type) type_specifier_no_typedef_name . list(declaration_specifier_no_typedef_name) [ STAR SEMICOLON PRE_NAME LPAREN ]
## Transitions:
-- On list(declaration_specifier_no_typedef_name) shift to state 408
## Default reduction:
-- After reading the next token, reduce production list(declaration_specifier_no_typedef_name) ->

State 408:
## Known stack suffix:
## rlist(declaration_specifier_no_type) TYPEDEF list(declaration_specifier_no_type) type_specifier_no_typedef_name list(declaration_specifier_no_typedef_name)
## LR(1) items:
declaration_specifiers_typedef -> rlist(declaration_specifier_no_type) TYPEDEF list(declaration_specifier_no_type) type_specifier_no_typedef_name list(declaration_specifier_no_typedef_name) . [ STAR SEMICOLON PRE_NAME LPAREN ]
list(declaration_specifier_no_typedef_name) -> list(declaration_specifier_no_typedef_name) . declaration_specifier_no_typedef_name [ VOLATILE VOID UNSIGNED UNION UNDERSCORE_BOOL STRUCT STATIC STAR SIGNED SHORT SEMICOLON RESTRICT REGISTER PRE_NAME PACKED LPAREN LONG INT INLINE FLOAT EXTERN ENUM DOUBLE CONST CHAR AUTO ATTRIBUTE ALIGNAS ]
## Transitions:
-- On VOLATILE shift to state 1
-- On VOID shift to state 2
-- On UNSIGNED shift to state 3
-- On UNION shift to state 4
-- On UNDERSCORE_BOOL shift to state 5
-- On STRUCT shift to state 8
-- On STATIC shift to state 9
-- On SIGNED shift to state 10
-- On SHORT shift to state 11
-- On RESTRICT shift to state 12
-- On REGISTER shift to state 13
-- On PACKED shift to state 16
-- On LONG shift to state 29
-- On INT shift to state 30
-- On INLINE shift to state 192
-- On FLOAT shift to state 33
-- On EXTERN shift to state 193
-- On ENUM shift to state 34
-- On DOUBLE shift to state 54
-- On CONST shift to state 148
-- On CHAR shift to state 55
-- On AUTO shift to state 194
-- On ATTRIBUTE shift to state 35
-- On ALIGNAS shift to state 149
-- On type_specifier_no_typedef_name shift to state 203
-- On type_qualifier_noattr shift to state 204
-- On struct_or_union_specifier shift to state 155
-- On struct_or_union shift to state 156
-- On storage_class_specifier_no_typedef shift to state 205
-- On function_specifier shift to state 206
-- On enum_specifier shift to state 169
-- On declaration_specifier_no_typedef_name shift to state 207
-- On attribute_specifier shift to state 208
## Reductions:
-- On STAR reduce production declaration_specifiers_typedef -> rlist(declaration_specifier_no_type) TYPEDEF list(declaration_specifier_no_type) type_specifier_no_typedef_name list(declaration_specifier_no_typedef_name)
-- On SEMICOLON reduce production declaration_specifiers_typedef -> rlist(declaration_specifier_no_type) TYPEDEF list(declaration_specifier_no_type) type_specifier_no_typedef_name list(declaration_specifier_no_typedef_name)
-- On PRE_NAME reduce production declaration_specifiers_typedef -> rlist(declaration_specifier_no_type) TYPEDEF list(declaration_specifier_no_type) type_specifier_no_typedef_name list(declaration_specifier_no_typedef_name)
-- On LPAREN reduce production declaration_specifiers_typedef -> rlist(declaration_specifier_no_type) TYPEDEF list(declaration_specifier_no_type) type_specifier_no_typedef_name list(declaration_specifier_no_typedef_name)

State 409:
## Known stack suffix:
## rlist(declaration_specifier_no_type) typedef_name
## LR(1) items:
declaration_specifiers(declaration(external_declaration)) -> rlist(declaration_specifier_no_type) typedef_name . list(declaration_specifier_no_type) [ STAR SEMICOLON PRE_NAME LPAREN ]
declaration_specifiers_typedef -> rlist(declaration_specifier_no_type) typedef_name . list(declaration_specifier_no_type) TYPEDEF list(declaration_specifier_no_type) [ STAR SEMICOLON PRE_NAME LPAREN ]
## Transitions:
-- On list(declaration_specifier_no_type) shift to state 410
## Default reduction:
-- After reading the next token, reduce production list(declaration_specifier_no_type) ->

State 410:
## Known stack suffix:
## rlist(declaration_specifier_no_type) typedef_name list(declaration_specifier_no_type)
## LR(1) items:
declaration_specifiers(declaration(external_declaration)) -> rlist(declaration_specifier_no_type) typedef_name list(declaration_specifier_no_type) . [ STAR SEMICOLON PRE_NAME LPAREN ]
declaration_specifiers_typedef -> rlist(declaration_specifier_no_type) typedef_name list(declaration_specifier_no_type) . TYPEDEF list(declaration_specifier_no_type) [ STAR SEMICOLON PRE_NAME LPAREN ]
list(declaration_specifier_no_type) -> list(declaration_specifier_no_type) . storage_class_specifier_no_typedef [ VOLATILE TYPEDEF STATIC STAR SEMICOLON RESTRICT REGISTER PRE_NAME PACKED LPAREN INLINE EXTERN CONST AUTO ATTRIBUTE ALIGNAS ]
list(declaration_specifier_no_type) -> list(declaration_specifier_no_type) . type_qualifier_noattr [ VOLATILE TYPEDEF STATIC STAR SEMICOLON RESTRICT REGISTER PRE_NAME PACKED LPAREN INLINE EXTERN CONST AUTO ATTRIBUTE ALIGNAS ]
list(declaration_specifier_no_type) -> list(declaration_specifier_no_type) . function_specifier [ VOLATILE TYPEDEF STATIC STAR SEMICOLON RESTRICT REGISTER PRE_NAME PACKED LPAREN INLINE EXTERN CONST AUTO ATTRIBUTE ALIGNAS ]
list(declaration_specifier_no_type) -> list(declaration_specifier_no_type) . attribute_specifier [ VOLATILE TYPEDEF STATIC STAR SEMICOLON RESTRICT REGISTER PRE_NAME PACKED LPAREN INLINE EXTERN CONST AUTO ATTRIBUTE ALIGNAS ]
## Transitions:
-- On VOLATILE shift to state 1
-- On TYPEDEF shift to state 411
-- On STATIC shift to state 9
-- On RESTRICT shift to state 12
-- On REGISTER shift to state 13
-- On PACKED shift to state 16
-- On INLINE shift to state 192
-- On EXTERN shift to state 193
-- On CONST shift to state 148
-- On AUTO shift to state 194
-- On ATTRIBUTE shift to state 35
-- On ALIGNAS shift to state 149
-- On type_qualifier_noattr shift to state 197
-- On storage_class_specifier_no_typedef shift to state 198
-- On function_specifier shift to state 199
-- On attribute_specifier shift to state 200
## Reductions:
-- On STAR reduce production declaration_specifiers(declaration(external_declaration)) -> rlist(declaration_specifier_no_type) typedef_name list(declaration_specifier_no_type)
-- On SEMICOLON reduce production declaration_specifiers(declaration(external_declaration)) -> rlist(declaration_specifier_no_type) typedef_name list(declaration_specifier_no_type)
-- On PRE_NAME reduce production declaration_specifiers(declaration(external_declaration)) -> rlist(declaration_specifier_no_type) typedef_name list(declaration_specifier_no_type)
-- On LPAREN reduce production declaration_specifiers(declaration(external_declaration)) -> rlist(declaration_specifier_no_type) typedef_name list(declaration_specifier_no_type)

State 411:
## Known stack suffix:
## rlist(declaration_specifier_no_type) typedef_name list(declaration_specifier_no_type) TYPEDEF
## LR(1) items:
declaration_specifiers_typedef -> rlist(declaration_specifier_no_type) typedef_name list(declaration_specifier_no_type) TYPEDEF . list(declaration_specifier_no_type) [ STAR SEMICOLON PRE_NAME LPAREN ]
## Transitions:
-- On list(declaration_specifier_no_type) shift to state 412
## Default reduction:
-- After reading the next token, reduce production list(declaration_specifier_no_type) ->

State 412:
## Known stack suffix:
## rlist(declaration_specifier_no_type) typedef_name list(declaration_specifier_no_type) TYPEDEF list(declaration_specifier_no_type)
## LR(1) items:
declaration_specifiers_typedef -> rlist(declaration_specifier_no_type) typedef_name list(declaration_specifier_no_type) TYPEDEF list(declaration_specifier_no_type) . [ STAR SEMICOLON PRE_NAME LPAREN ]
list(declaration_specifier_no_type) -> list(declaration_specifier_no_type) . storage_class_specifier_no_typedef [ VOLATILE STATIC STAR SEMICOLON RESTRICT REGISTER PRE_NAME PACKED LPAREN INLINE EXTERN CONST AUTO ATTRIBUTE ALIGNAS ]
list(declaration_specifier_no_type) -> list(declaration_specifier_no_type) . type_qualifier_noattr [ VOLATILE STATIC STAR SEMICOLON RESTRICT REGISTER PRE_NAME PACKED LPAREN INLINE EXTERN CONST AUTO ATTRIBUTE ALIGNAS ]
list(declaration_specifier_no_type) -> list(declaration_specifier_no_type) . function_specifier [ VOLATILE STATIC STAR SEMICOLON RESTRICT REGISTER PRE_NAME PACKED LPAREN INLINE EXTERN CONST AUTO ATTRIBUTE ALIGNAS ]
list(declaration_specifier_no_type) -> list(declaration_specifier_no_type) . attribute_specifier [ VOLATILE STATIC STAR SEMICOLON RESTRICT REGISTER PRE_NAME PACKED LPAREN INLINE EXTERN CONST AUTO ATTRIBUTE ALIGNAS ]
## Transitions:
-- On VOLATILE shift to state 1
-- On STATIC shift to state 9
-- On RESTRICT shift to state 12
-- On REGISTER shift to state 13
-- On PACKED shift to state 16
-- On INLINE shift to state 192
-- On EXTERN shift to state 193
-- On CONST shift to state 148
-- On AUTO shift to state 194
-- On ATTRIBUTE shift to state 35
-- On ALIGNAS shift to state 149
-- On type_qualifier_noattr shift to state 197
-- On storage_class_specifier_no_typedef shift to state 198
-- On function_specifier shift to state 199
-- On attribute_specifier shift to state 200
## Reductions:
-- On STAR reduce production declaration_specifiers_typedef -> rlist(declaration_specifier_no_type) typedef_name list(declaration_specifier_no_type) TYPEDEF list(declaration_specifier_no_type)
-- On SEMICOLON reduce production declaration_specifiers_typedef -> rlist(declaration_specifier_no_type) typedef_name list(declaration_specifier_no_type) TYPEDEF list(declaration_specifier_no_type)
-- On PRE_NAME reduce production declaration_specifiers_typedef -> rlist(declaration_specifier_no_type) typedef_name list(declaration_specifier_no_type) TYPEDEF list(declaration_specifier_no_type)
-- On LPAREN reduce production declaration_specifiers_typedef -> rlist(declaration_specifier_no_type) typedef_name list(declaration_specifier_no_type) TYPEDEF list(declaration_specifier_no_type)

State 413:
## Known stack suffix:
## rlist(declaration_specifier_no_type) type_specifier_no_typedef_name
## LR(1) items:
declaration_specifiers(declaration(external_declaration)) -> rlist(declaration_specifier_no_type) type_specifier_no_typedef_name . list(declaration_specifier_no_typedef_name) [ STAR SEMICOLON PRE_NAME LPAREN ]
declaration_specifiers_typedef -> rlist(declaration_specifier_no_type) type_specifier_no_typedef_name . list(declaration_specifier_no_typedef_name) TYPEDEF list(declaration_specifier_no_typedef_name) [ STAR SEMICOLON PRE_NAME LPAREN ]
## Transitions:
-- On list(declaration_specifier_no_typedef_name) shift to state 414
## Default reduction:
-- After reading the next token, reduce production list(declaration_specifier_no_typedef_name) ->

State 414:
## Known stack suffix:
## rlist(declaration_specifier_no_type) type_specifier_no_typedef_name list(declaration_specifier_no_typedef_name)
## LR(1) items:
declaration_specifiers(declaration(external_declaration)) -> rlist(declaration_specifier_no_type) type_specifier_no_typedef_name list(declaration_specifier_no_typedef_name) . [ STAR SEMICOLON PRE_NAME LPAREN ]
declaration_specifiers_typedef -> rlist(declaration_specifier_no_type) type_specifier_no_typedef_name list(declaration_specifier_no_typedef_name) . TYPEDEF list(declaration_specifier_no_typedef_name) [ STAR SEMICOLON PRE_NAME LPAREN ]
list(declaration_specifier_no_typedef_name) -> list(declaration_specifier_no_typedef_name) . declaration_specifier_no_typedef_name [ VOLATILE VOID UNSIGNED UNION UNDERSCORE_BOOL TYPEDEF STRUCT STATIC STAR SIGNED SHORT SEMICOLON RESTRICT REGISTER PRE_NAME PACKED LPAREN LONG INT INLINE FLOAT EXTERN ENUM DOUBLE CONST CHAR AUTO ATTRIBUTE ALIGNAS ]
## Transitions:
-- On VOLATILE shift to state 1
-- On VOID shift to state 2
-- On UNSIGNED shift to state 3
-- On UNION shift to state 4
-- On UNDERSCORE_BOOL shift to state 5
-- On TYPEDEF shift to state 415
-- On STRUCT shift to state 8
-- On STATIC shift to state 9
-- On SIGNED shift to state 10
-- On SHORT shift to state 11
-- On RESTRICT shift to state 12
-- On REGISTER shift to state 13
-- On PACKED shift to state 16
-- On LONG shift to state 29
-- On INT shift to state 30
-- On INLINE shift to state 192
-- On FLOAT shift to state 33
-- On EXTERN shift to state 193
-- On ENUM shift to state 34
-- On DOUBLE shift to state 54
-- On CONST shift to state 148
-- On CHAR shift to state 55
-- On AUTO shift to state 194
-- On ATTRIBUTE shift to state 35
-- On ALIGNAS shift to state 149
-- On type_specifier_no_typedef_name shift to state 203
-- On type_qualifier_noattr shift to state 204
-- On struct_or_union_specifier shift to state 155
-- On struct_or_union shift to state 156
-- On storage_class_specifier_no_typedef shift to state 205
-- On function_specifier shift to state 206
-- On enum_specifier shift to state 169
-- On declaration_specifier_no_typedef_name shift to state 207
-- On attribute_specifier shift to state 208
## Reductions:
-- On STAR reduce production declaration_specifiers(declaration(external_declaration)) -> rlist(declaration_specifier_no_type) type_specifier_no_typedef_name list(declaration_specifier_no_typedef_name)
-- On SEMICOLON reduce production declaration_specifiers(declaration(external_declaration)) -> rlist(declaration_specifier_no_type) type_specifier_no_typedef_name list(declaration_specifier_no_typedef_name)
-- On PRE_NAME reduce production declaration_specifiers(declaration(external_declaration)) -> rlist(declaration_specifier_no_type) type_specifier_no_typedef_name list(declaration_specifier_no_typedef_name)
-- On LPAREN reduce production declaration_specifiers(declaration(external_declaration)) -> rlist(declaration_specifier_no_type) type_specifier_no_typedef_name list(declaration_specifier_no_typedef_name)

State 415:
## Known stack suffix:
## rlist(declaration_specifier_no_type) type_specifier_no_typedef_name list(declaration_specifier_no_typedef_name) TYPEDEF
## LR(1) items:
declaration_specifiers_typedef -> rlist(declaration_specifier_no_type) type_specifier_no_typedef_name list(declaration_specifier_no_typedef_name) TYPEDEF . list(declaration_specifier_no_typedef_name) [ STAR SEMICOLON PRE_NAME LPAREN ]
## Transitions:
-- On list(declaration_specifier_no_typedef_name) shift to state 416
## Default reduction:
-- After reading the next token, reduce production list(declaration_specifier_no_typedef_name) ->

State 416:
## Known stack suffix:
## rlist(declaration_specifier_no_type) type_specifier_no_typedef_name list(declaration_specifier_no_typedef_name) TYPEDEF list(declaration_specifier_no_typedef_name)
## LR(1) items:
declaration_specifiers_typedef -> rlist(declaration_specifier_no_type) type_specifier_no_typedef_name list(declaration_specifier_no_typedef_name) TYPEDEF list(declaration_specifier_no_typedef_name) . [ STAR SEMICOLON PRE_NAME LPAREN ]
list(declaration_specifier_no_typedef_name) -> list(declaration_specifier_no_typedef_name) . declaration_specifier_no_typedef_name [ VOLATILE VOID UNSIGNED UNION UNDERSCORE_BOOL STRUCT STATIC STAR SIGNED SHORT SEMICOLON RESTRICT REGISTER PRE_NAME PACKED LPAREN LONG INT INLINE FLOAT EXTERN ENUM DOUBLE CONST CHAR AUTO ATTRIBUTE ALIGNAS ]
## Transitions:
-- On VOLATILE shift to state 1
-- On VOID shift to state 2
-- On UNSIGNED shift to state 3
-- On UNION shift to state 4
-- On UNDERSCORE_BOOL shift to state 5
-- On STRUCT shift to state 8
-- On STATIC shift to state 9
-- On SIGNED shift to state 10
-- On SHORT shift to state 11
-- On RESTRICT shift to state 12
-- On REGISTER shift to state 13
-- On PACKED shift to state 16
-- On LONG shift to state 29
-- On INT shift to state 30
-- On INLINE shift to state 192
-- On FLOAT shift to state 33
-- On EXTERN shift to state 193
-- On ENUM shift to state 34
-- On DOUBLE shift to state 54
-- On CONST shift to state 148
-- On CHAR shift to state 55
-- On AUTO shift to state 194
-- On ATTRIBUTE shift to state 35
-- On ALIGNAS shift to state 149
-- On type_specifier_no_typedef_name shift to state 203
-- On type_qualifier_noattr shift to state 204
-- On struct_or_union_specifier shift to state 155
-- On struct_or_union shift to state 156
-- On storage_class_specifier_no_typedef shift to state 205
-- On function_specifier shift to state 206
-- On enum_specifier shift to state 169
-- On declaration_specifier_no_typedef_name shift to state 207
-- On attribute_specifier shift to state 208
## Reductions:
-- On STAR reduce production declaration_specifiers_typedef -> rlist(declaration_specifier_no_type) type_specifier_no_typedef_name list(declaration_specifier_no_typedef_name) TYPEDEF list(declaration_specifier_no_typedef_name)
-- On SEMICOLON reduce production declaration_specifiers_typedef -> rlist(declaration_specifier_no_type) type_specifier_no_typedef_name list(declaration_specifier_no_typedef_name) TYPEDEF list(declaration_specifier_no_typedef_name)
-- On PRE_NAME reduce production declaration_specifiers_typedef -> rlist(declaration_specifier_no_type) type_specifier_no_typedef_name list(declaration_specifier_no_typedef_name) TYPEDEF list(declaration_specifier_no_typedef_name)
-- On LPAREN reduce production declaration_specifiers_typedef -> rlist(declaration_specifier_no_type) type_specifier_no_typedef_name list(declaration_specifier_no_typedef_name) TYPEDEF list(declaration_specifier_no_typedef_name)

State 417:
## Known stack suffix:
## function_definition1
## LR(1) items:
function_definition -> function_definition1 . compound_statement [ VOLATILE VOID UNSIGNED UNION UNDERSCORE_BOOL TYPEDEF STRUCT STATIC SIGNED SHORT SEMICOLON RESTRICT REGISTER PRE_NAME PRAGMA PACKED LONG INT INLINE FLOAT EXTERN EOF ENUM DOUBLE CONST CHAR AUTO ATTRIBUTE ALIGNAS ]
## Transitions:
-- On save_context shift to state 418
-- On compound_statement shift to state 566
## Default reduction:
-- After reading the next token, reduce production save_context ->

State 418:
## Known stack suffix:
## save_context
## LR(1) items:
compound_statement -> save_context . LBRACE option(block_item_list) RBRACE [ VOLATILE VOID UNSIGNED UNION UNDERSCORE_BOOL TYPEDEF STRUCT STATIC SIGNED SHORT SEMICOLON RESTRICT REGISTER PRE_NAME PRAGMA PACKED LONG INT INLINE FLOAT EXTERN EOF ENUM DOUBLE CONST CHAR AUTO ATTRIBUTE ALIGNAS ]
## Transitions:
-- On LBRACE shift to state 419
## Reductions:

State 419:
## Known stack suffix:
## save_context LBRACE
## LR(1) items:
compound_statement -> save_context LBRACE . option(block_item_list) RBRACE [ WHILE VOLATILE VOID UNSIGNED UNION UNDERSCORE_BOOL TYPEDEF TILDE SWITCH STRUCT STRING_LITERAL STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACE PRE_NAME PRAGMA PLUS PACKED MINUS LPAREN LONG LBRACE INT INLINE INC IF GOTO FOR FLOAT EXTERN EOF ENUM ELSE DOUBLE DO DEFAULT DEC CONTINUE CONSTANT CONST CHAR CASE BUILTIN_VA_ARG BREAK BANG AUTO ATTRIBUTE ASM AND ALIGNOF ALIGNAS ]
## Transitions:
-- On option(block_item_list) shift to state 420
-- On block_item_list shift to state 565
## Default reduction:
-- After reading the next token, reduce production option(block_item_list) ->

State 420:
## Known stack suffix:
## save_context LBRACE option(block_item_list)
## LR(1) items:
block_item_list -> option(block_item_list) . block_item [ WHILE VOLATILE VOID UNSIGNED UNION UNDERSCORE_BOOL TYPEDEF TILDE SWITCH STRUCT STRING_LITERAL STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACE PRE_NAME PRAGMA PLUS PACKED MINUS LPAREN LONG LBRACE INT INLINE INC IF GOTO FOR FLOAT EXTERN ENUM DOUBLE DO DEFAULT DEC CONTINUE CONSTANT CONST CHAR CASE BUILTIN_VA_ARG BREAK BANG AUTO ATTRIBUTE ASM AND ALIGNOF ALIGNAS ]
compound_statement -> save_context LBRACE option(block_item_list) . RBRACE [ WHILE VOLATILE VOID UNSIGNED UNION UNDERSCORE_BOOL TYPEDEF TILDE SWITCH STRUCT STRING_LITERAL STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACE PRE_NAME PRAGMA PLUS PACKED MINUS LPAREN LONG LBRACE INT INLINE INC IF GOTO FOR FLOAT EXTERN EOF ENUM ELSE DOUBLE DO DEFAULT DEC CONTINUE CONSTANT CONST CHAR CASE BUILTIN_VA_ARG BREAK BANG AUTO ATTRIBUTE ASM AND ALIGNOF ALIGNAS ]
## Transitions:
-- On VOLATILE shift to state 1
-- On VOID shift to state 2
-- On UNSIGNED shift to state 3
-- On UNION shift to state 4
-- On UNDERSCORE_BOOL shift to state 5
-- On TYPEDEF shift to state 6
-- On TILDE shift to state 18
-- On STRUCT shift to state 8
-- On STRING_LITERAL shift to state 19
-- On STATIC shift to state 9
-- On STAR shift to state 20
-- On SIZEOF shift to state 21
-- On SIGNED shift to state 10
-- On SHORT shift to state 11
-- On RETURN shift to state 421
-- On RESTRICT shift to state 12
-- On REGISTER shift to state 13
-- On RBRACE shift to state 425
-- On PRE_NAME shift to state 426
-- On PRAGMA shift to state 428
-- On PLUS shift to state 24
-- On PACKED shift to state 16
-- On MINUS shift to state 25
-- On LPAREN shift to state 28
-- On LONG shift to state 29
-- On INT shift to state 30
-- On INLINE shift to state 192
-- On INC shift to state 31
-- On GOTO shift to state 429
-- On FLOAT shift to state 33
-- On EXTERN shift to state 193
-- On ENUM shift to state 34
-- On DOUBLE shift to state 54
-- On DEFAULT shift to state 432
-- On DEC shift to state 46
-- On CONTINUE shift to state 434
-- On CONSTANT shift to state 47
-- On CONST shift to state 148
-- On CHAR shift to state 55
-- On CASE shift to state 436
-- On BUILTIN_VA_ARG shift to state 48
-- On BREAK shift to state 439
-- On BANG shift to state 50
-- On AUTO shift to state 194
-- On ATTRIBUTE shift to state 35
-- On ASM shift to state 441
-- On AND shift to state 51
-- On ALIGNOF shift to state 52
-- On ALIGNAS shift to state 149
-- On unary_operator shift to state 56
-- On unary_expression shift to state 65
-- On typedef_name shift to state 561
-- On type_specifier_no_typedef_name shift to state 509
-- On type_qualifier_noattr shift to state 209
-- On struct_or_union_specifier shift to state 155
-- On struct_or_union shift to state 156
-- On string_literals_list shift to state 58
-- On storage_class_specifier_no_typedef shift to state 210
-- On statement shift to state 562
-- On shift_expression shift to state 78
-- On selection_statement shift to state 474
-- On save_context shift to state 475
-- On rlist(declaration_specifier_no_type) shift to state 511
-- On relational_expression shift to state 94
-- On primary_expression shift to state 60
-- On postfix_expression shift to state 61
-- On option(expression) shift to state 481
-- On multiplicative_expression shift to state 82
-- On logical_or_expression shift to state 102
-- On logical_and_expression shift to state 104
-- On labeled_statement shift to state 483
-- On jump_statement shift to state 484
-- On iteration_statement shift to state 485
-- On inclusive_or_expression shift to state 120
-- On general_identifier shift to state 486
-- On function_specifier shift to state 212
-- On expression_statement shift to state 489
-- On expression shift to state 424
-- On exclusive_or_expression shift to state 119
-- On equality_expression shift to state 110
-- On enum_specifier shift to state 169
-- On declaration_specifiers_typedef shift to state 526
-- On declaration_specifiers(declaration(block_item)) shift to state 535
-- On declaration(block_item) shift to state 563
-- On conditional_expression shift to state 123
-- On compound_statement shift to state 490
-- On cast_expression shift to state 88
-- On block_item shift to state 564
-- On attribute_specifier shift to state 214
-- On assignment_expression shift to state 127
-- On asm_statement shift to state 491
-- On and_expression shift to state 118
-- On additive_expression shift to state 101
## Reductions:
-- On WHILE reduce production save_context ->
-- On SWITCH reduce production save_context ->
-- On SEMICOLON reduce production option(expression) ->
-- On LBRACE reduce production save_context ->
-- On IF reduce production save_context ->
-- On FOR reduce production save_context ->
-- On DO reduce production save_context ->

State 421:
## Known stack suffix:
## RETURN
## LR(1) items:
jump_statement -> RETURN . option(expression) SEMICOLON [ WHILE VOLATILE VOID UNSIGNED UNION UNDERSCORE_BOOL TYPEDEF TILDE SWITCH STRUCT STRING_LITERAL STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACE PRE_NAME PRAGMA PLUS PACKED MINUS LPAREN LONG LBRACE INT INLINE INC IF GOTO FOR FLOAT EXTERN ENUM ELSE DOUBLE DO DEFAULT DEC CONTINUE CONSTANT CONST CHAR CASE BUILTIN_VA_ARG BREAK BANG AUTO ATTRIBUTE ASM AND ALIGNOF ALIGNAS ]
## Transitions:
-- On TILDE shift to state 18
-- On STRING_LITERAL shift to state 19
-- On STAR shift to state 20
-- On SIZEOF shift to state 21
-- On PRE_NAME shift to state 22
-- On PLUS shift to state 24
-- On MINUS shift to state 25
-- On LPAREN shift to state 28
-- On INC shift to state 31
-- On DEC shift to state 46
-- On CONSTANT shift to state 47
-- On BUILTIN_VA_ARG shift to state 48
-- On BANG shift to state 50
-- On AND shift to state 51
-- On ALIGNOF shift to state 52
-- On unary_operator shift to state 56
-- On unary_expression shift to state 65
-- On string_literals_list shift to state 58
-- On shift_expression shift to state 78
-- On relational_expression shift to state 94
-- On primary_expression shift to state 60
-- On postfix_expression shift to state 61
-- On option(expression) shift to state 422
-- On multiplicative_expression shift to state 82
-- On logical_or_expression shift to state 102
-- On logical_and_expression shift to state 104
-- On inclusive_or_expression shift to state 120
-- On expression shift to state 424
-- On exclusive_or_expression shift to state 119
-- On equality_expression shift to state 110
-- On conditional_expression shift to state 123
-- On cast_expression shift to state 88
-- On assignment_expression shift to state 127
-- On and_expression shift to state 118
-- On additive_expression shift to state 101
## Reductions:
-- On SEMICOLON reduce production option(expression) ->

State 422:
## Known stack suffix:
## RETURN option(expression)
## LR(1) items:
jump_statement -> RETURN option(expression) . SEMICOLON [ WHILE VOLATILE VOID UNSIGNED UNION UNDERSCORE_BOOL TYPEDEF TILDE SWITCH STRUCT STRING_LITERAL STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACE PRE_NAME PRAGMA PLUS PACKED MINUS LPAREN LONG LBRACE INT INLINE INC IF GOTO FOR FLOAT EXTERN ENUM ELSE DOUBLE DO DEFAULT DEC CONTINUE CONSTANT CONST CHAR CASE BUILTIN_VA_ARG BREAK BANG AUTO ATTRIBUTE ASM AND ALIGNOF ALIGNAS ]
## Transitions:
-- On SEMICOLON shift to state 423
## Reductions:

State 423:
## Known stack suffix:
## RETURN option(expression) SEMICOLON
## LR(1) items:
jump_statement -> RETURN option(expression) SEMICOLON . [ WHILE VOLATILE VOID UNSIGNED UNION UNDERSCORE_BOOL TYPEDEF TILDE SWITCH STRUCT STRING_LITERAL STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACE PRE_NAME PRAGMA PLUS PACKED MINUS LPAREN LONG LBRACE INT INLINE INC IF GOTO FOR FLOAT EXTERN ENUM ELSE DOUBLE DO DEFAULT DEC CONTINUE CONSTANT CONST CHAR CASE BUILTIN_VA_ARG BREAK BANG AUTO ATTRIBUTE ASM AND ALIGNOF ALIGNAS ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production jump_statement -> RETURN option(expression) SEMICOLON

State 424:
## Known stack suffix:
## expression
## LR(1) items:
expression -> expression . COMMA assignment_expression [ SEMICOLON COMMA ]
option(expression) -> expression . [ SEMICOLON ]
## Transitions:
-- On COMMA shift to state 122
## Reductions:
-- On SEMICOLON reduce production option(expression) -> expression

State 425:
## Known stack suffix:
## save_context LBRACE option(block_item_list) RBRACE
## LR(1) items:
compound_statement -> save_context LBRACE option(block_item_list) RBRACE . [ WHILE VOLATILE VOID UNSIGNED UNION UNDERSCORE_BOOL TYPEDEF TILDE SWITCH STRUCT STRING_LITERAL STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACE PRE_NAME PRAGMA PLUS PACKED MINUS LPAREN LONG LBRACE INT INLINE INC IF GOTO FOR FLOAT EXTERN EOF ENUM ELSE DOUBLE DO DEFAULT DEC CONTINUE CONSTANT CONST CHAR CASE BUILTIN_VA_ARG BREAK BANG AUTO ATTRIBUTE ASM AND ALIGNOF ALIGNAS ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production compound_statement -> save_context LBRACE option(block_item_list) RBRACE

State 426:
## Known stack suffix:
## PRE_NAME
## LR(1) items:
general_identifier -> PRE_NAME . VAR_NAME [ COLON ]
primary_expression -> PRE_NAME . VAR_NAME [ XOR_ASSIGN SUB_ASSIGN STAR SLASH SEMICOLON RIGHT_ASSIGN RIGHT QUESTION PTR PLUS PERCENT OR_ASSIGN NEQ MUL_ASSIGN MOD_ASSIGN MINUS LT LPAREN LEQ LEFT_ASSIGN LEFT LBRACK INC HAT GT GEQ EQEQ EQ DOT DIV_ASSIGN DEC COMMA BARBAR BAR AND_ASSIGN ANDAND AND ADD_ASSIGN ]
typedef_name -> PRE_NAME . TYPEDEF_NAME [ VOLATILE TYPEDEF STATIC STAR SEMICOLON RESTRICT REGISTER PRE_NAME PACKED LPAREN INLINE EXTERN CONST COLON AUTO ATTRIBUTE ALIGNAS ]
## Transitions:
-- On VAR_NAME shift to state 427
-- On TYPEDEF_NAME shift to state 15
## Reductions:

State 427:
## Known stack suffix:
## PRE_NAME VAR_NAME
## LR(1) items:
general_identifier -> PRE_NAME VAR_NAME . [ COLON ]
primary_expression -> PRE_NAME VAR_NAME . [ XOR_ASSIGN SUB_ASSIGN STAR SLASH SEMICOLON RIGHT_ASSIGN RIGHT QUESTION PTR PLUS PERCENT OR_ASSIGN NEQ MUL_ASSIGN MOD_ASSIGN MINUS LT LPAREN LEQ LEFT_ASSIGN LEFT LBRACK INC HAT GT GEQ EQEQ EQ DOT DIV_ASSIGN DEC COMMA BARBAR BAR AND_ASSIGN ANDAND AND ADD_ASSIGN ]
## Transitions:
## Reductions:
-- On XOR_ASSIGN reduce production primary_expression -> PRE_NAME VAR_NAME
-- On WHILE reduce production primary_expression -> PRE_NAME VAR_NAME
-- On VOLATILE reduce production primary_expression -> PRE_NAME VAR_NAME
-- On VOID reduce production primary_expression -> PRE_NAME VAR_NAME
-- On VAR_NAME reduce production primary_expression -> PRE_NAME VAR_NAME
-- On UNSIGNED reduce production primary_expression -> PRE_NAME VAR_NAME
-- On UNION reduce production primary_expression -> PRE_NAME VAR_NAME
-- On UNDERSCORE_BOOL reduce production primary_expression -> PRE_NAME VAR_NAME
-- On TYPEDEF_NAME reduce production primary_expression -> PRE_NAME VAR_NAME
-- On TYPEDEF reduce production primary_expression -> PRE_NAME VAR_NAME
-- On TILDE reduce production primary_expression -> PRE_NAME VAR_NAME
-- On SWITCH reduce production primary_expression -> PRE_NAME VAR_NAME
-- On SUB_ASSIGN reduce production primary_expression -> PRE_NAME VAR_NAME
-- On STRUCT reduce production primary_expression -> PRE_NAME VAR_NAME
-- On STRING_LITERAL reduce production primary_expression -> PRE_NAME VAR_NAME
-- On STATIC reduce production primary_expression -> PRE_NAME VAR_NAME
-- On STAR reduce production primary_expression -> PRE_NAME VAR_NAME
-- On SLASH reduce production primary_expression -> PRE_NAME VAR_NAME
-- On SIZEOF reduce production primary_expression -> PRE_NAME VAR_NAME
-- On SIGNED reduce production primary_expression -> PRE_NAME VAR_NAME
-- On SHORT reduce production primary_expression -> PRE_NAME VAR_NAME
-- On SEMICOLON reduce production primary_expression -> PRE_NAME VAR_NAME
-- On RPAREN reduce production primary_expression -> PRE_NAME VAR_NAME
-- On RIGHT_ASSIGN reduce production primary_expression -> PRE_NAME VAR_NAME
-- On RIGHT reduce production primary_expression -> PRE_NAME VAR_NAME
-- On RETURN reduce production primary_expression -> PRE_NAME VAR_NAME
-- On RESTRICT reduce production primary_expression -> PRE_NAME VAR_NAME
-- On REGISTER reduce production primary_expression -> PRE_NAME VAR_NAME
-- On RBRACK reduce production primary_expression -> PRE_NAME VAR_NAME
-- On RBRACE reduce production primary_expression -> PRE_NAME VAR_NAME
-- On QUESTION reduce production primary_expression -> PRE_NAME VAR_NAME
-- On PTR reduce production primary_expression -> PRE_NAME VAR_NAME
-- On PRE_NAME reduce production primary_expression -> PRE_NAME VAR_NAME
-- On PRAGMA reduce production primary_expression -> PRE_NAME VAR_NAME
-- On PLUS reduce production primary_expression -> PRE_NAME VAR_NAME
-- On PERCENT reduce production primary_expression -> PRE_NAME VAR_NAME
-- On PACKED reduce production primary_expression -> PRE_NAME VAR_NAME
-- On OR_ASSIGN reduce production primary_expression -> PRE_NAME VAR_NAME
-- On NEQ reduce production primary_expression -> PRE_NAME VAR_NAME
-- On MUL_ASSIGN reduce production primary_expression -> PRE_NAME VAR_NAME
-- On MOD_ASSIGN reduce production primary_expression -> PRE_NAME VAR_NAME
-- On MINUS reduce production primary_expression -> PRE_NAME VAR_NAME
-- On LT reduce production primary_expression -> PRE_NAME VAR_NAME
-- On LPAREN reduce production primary_expression -> PRE_NAME VAR_NAME
-- On LONG reduce production primary_expression -> PRE_NAME VAR_NAME
-- On LEQ reduce production primary_expression -> PRE_NAME VAR_NAME
-- On LEFT_ASSIGN reduce production primary_expression -> PRE_NAME VAR_NAME
-- On LEFT reduce production primary_expression -> PRE_NAME VAR_NAME
-- On LBRACK reduce production primary_expression -> PRE_NAME VAR_NAME
-- On LBRACE reduce production primary_expression -> PRE_NAME VAR_NAME
-- On INT reduce production primary_expression -> PRE_NAME VAR_NAME
-- On INLINE reduce production primary_expression -> PRE_NAME VAR_NAME
-- On INC reduce production primary_expression -> PRE_NAME VAR_NAME
-- On IF reduce production primary_expression -> PRE_NAME VAR_NAME
-- On HAT reduce production primary_expression -> PRE_NAME VAR_NAME
-- On GT reduce production primary_expression -> PRE_NAME VAR_NAME
-- On GOTO reduce production primary_expression -> PRE_NAME VAR_NAME
-- On GEQ reduce production primary_expression -> PRE_NAME VAR_NAME
-- On FOR reduce production primary_expression -> PRE_NAME VAR_NAME
-- On FLOAT reduce production primary_expression -> PRE_NAME VAR_NAME
-- On EXTERN reduce production primary_expression -> PRE_NAME VAR_NAME
-- On EQEQ reduce production primary_expression -> PRE_NAME VAR_NAME
-- On EQ reduce production primary_expression -> PRE_NAME VAR_NAME
-- On EOF reduce production primary_expression -> PRE_NAME VAR_NAME
-- On ENUM reduce production primary_expression -> PRE_NAME VAR_NAME
-- On ELSE reduce production primary_expression -> PRE_NAME VAR_NAME
-- On ELLIPSIS reduce production primary_expression -> PRE_NAME VAR_NAME
-- On DOUBLE reduce production primary_expression -> PRE_NAME VAR_NAME
-- On DOT reduce production primary_expression -> PRE_NAME VAR_NAME
-- On DO reduce production primary_expression -> PRE_NAME VAR_NAME
-- On DIV_ASSIGN reduce production primary_expression -> PRE_NAME VAR_NAME
-- On DEFAULT reduce production primary_expression -> PRE_NAME VAR_NAME
-- On DEC reduce production primary_expression -> PRE_NAME VAR_NAME
-- On CONTINUE reduce production primary_expression -> PRE_NAME VAR_NAME
-- On CONSTANT reduce production primary_expression -> PRE_NAME VAR_NAME
-- On CONST reduce production primary_expression -> PRE_NAME VAR_NAME
-- On COMMA reduce production primary_expression -> PRE_NAME VAR_NAME
-- On COLON reduce production general_identifier -> PRE_NAME VAR_NAME
-- On CHAR reduce production primary_expression -> PRE_NAME VAR_NAME
-- On CASE reduce production primary_expression -> PRE_NAME VAR_NAME
-- On BUILTIN_VA_ARG reduce production primary_expression -> PRE_NAME VAR_NAME
-- On BREAK reduce production primary_expression -> PRE_NAME VAR_NAME
-- On BARBAR reduce production primary_expression -> PRE_NAME VAR_NAME
-- On BAR reduce production primary_expression -> PRE_NAME VAR_NAME
-- On BANG reduce production primary_expression -> PRE_NAME VAR_NAME
-- On AUTO reduce production primary_expression -> PRE_NAME VAR_NAME
-- On ATTRIBUTE reduce production primary_expression -> PRE_NAME VAR_NAME
-- On ASM reduce production primary_expression -> PRE_NAME VAR_NAME
-- On AND_ASSIGN reduce production primary_expression -> PRE_NAME VAR_NAME
-- On ANDAND reduce production primary_expression -> PRE_NAME VAR_NAME
-- On AND reduce production primary_expression -> PRE_NAME VAR_NAME
-- On ALIGNOF reduce production primary_expression -> PRE_NAME VAR_NAME
-- On ALIGNAS reduce production primary_expression -> PRE_NAME VAR_NAME
-- On ADD_ASSIGN reduce production primary_expression -> PRE_NAME VAR_NAME

State 428:
## Known stack suffix:
## PRAGMA
## LR(1) items:
block_item -> PRAGMA . [ WHILE VOLATILE VOID UNSIGNED UNION UNDERSCORE_BOOL TYPEDEF TILDE SWITCH STRUCT STRING_LITERAL STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACE PRE_NAME PRAGMA PLUS PACKED MINUS LPAREN LONG LBRACE INT INLINE INC IF GOTO FOR FLOAT EXTERN ENUM DOUBLE DO DEFAULT DEC CONTINUE CONSTANT CONST CHAR CASE BUILTIN_VA_ARG BREAK BANG AUTO ATTRIBUTE ASM AND ALIGNOF ALIGNAS ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production block_item -> PRAGMA

State 429:
## Known stack suffix:
## GOTO
## LR(1) items:
jump_statement -> GOTO . general_identifier SEMICOLON [ WHILE VOLATILE VOID UNSIGNED UNION UNDERSCORE_BOOL TYPEDEF TILDE SWITCH STRUCT STRING_LITERAL STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACE PRE_NAME PRAGMA PLUS PACKED MINUS LPAREN LONG LBRACE INT INLINE INC IF GOTO FOR FLOAT EXTERN ENUM ELSE DOUBLE DO DEFAULT DEC CONTINUE CONSTANT CONST CHAR CASE BUILTIN_VA_ARG BREAK BANG AUTO ATTRIBUTE ASM AND ALIGNOF ALIGNAS ]
## Transitions:
-- On PRE_NAME shift to state 38
-- On typedef_name shift to state 42
-- On general_identifier shift to state 430
## Reductions:

State 430:
## Known stack suffix:
## GOTO general_identifier
## LR(1) items:
jump_statement -> GOTO general_identifier . SEMICOLON [ WHILE VOLATILE VOID UNSIGNED UNION UNDERSCORE_BOOL TYPEDEF TILDE SWITCH STRUCT STRING_LITERAL STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACE PRE_NAME PRAGMA PLUS PACKED MINUS LPAREN LONG LBRACE INT INLINE INC IF GOTO FOR FLOAT EXTERN ENUM ELSE DOUBLE DO DEFAULT DEC CONTINUE CONSTANT CONST CHAR CASE BUILTIN_VA_ARG BREAK BANG AUTO ATTRIBUTE ASM AND ALIGNOF ALIGNAS ]
## Transitions:
-- On SEMICOLON shift to state 431
## Reductions:

State 431:
## Known stack suffix:
## GOTO general_identifier SEMICOLON
## LR(1) items:
jump_statement -> GOTO general_identifier SEMICOLON . [ WHILE VOLATILE VOID UNSIGNED UNION UNDERSCORE_BOOL TYPEDEF TILDE SWITCH STRUCT STRING_LITERAL STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACE PRE_NAME PRAGMA PLUS PACKED MINUS LPAREN LONG LBRACE INT INLINE INC IF GOTO FOR FLOAT EXTERN ENUM ELSE DOUBLE DO DEFAULT DEC CONTINUE CONSTANT CONST CHAR CASE BUILTIN_VA_ARG BREAK BANG AUTO ATTRIBUTE ASM AND ALIGNOF ALIGNAS ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production jump_statement -> GOTO general_identifier SEMICOLON

State 432:
## Known stack suffix:
## DEFAULT
## LR(1) items:
labeled_statement -> DEFAULT . COLON statement [ WHILE VOLATILE VOID UNSIGNED UNION UNDERSCORE_BOOL TYPEDEF TILDE SWITCH STRUCT STRING_LITERAL STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACE PRE_NAME PRAGMA PLUS PACKED MINUS LPAREN LONG LBRACE INT INLINE INC IF GOTO FOR FLOAT EXTERN ENUM ELSE DOUBLE DO DEFAULT DEC CONTINUE CONSTANT CONST CHAR CASE BUILTIN_VA_ARG BREAK BANG AUTO ATTRIBUTE ASM AND ALIGNOF ALIGNAS ]
## Transitions:
-- On COLON shift to state 433
## Reductions:

State 433:
## Known stack suffix:
## DEFAULT COLON
## LR(1) items:
labeled_statement -> DEFAULT COLON . statement [ WHILE VOLATILE VOID UNSIGNED UNION UNDERSCORE_BOOL TYPEDEF TILDE SWITCH STRUCT STRING_LITERAL STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACE PRE_NAME PRAGMA PLUS PACKED MINUS LPAREN LONG LBRACE INT INLINE INC IF GOTO FOR FLOAT EXTERN ENUM ELSE DOUBLE DO DEFAULT DEC CONTINUE CONSTANT CONST CHAR CASE BUILTIN_VA_ARG BREAK BANG AUTO ATTRIBUTE ASM AND ALIGNOF ALIGNAS ]
## Transitions:
-- On TILDE shift to state 18
-- On STRING_LITERAL shift to state 19
-- On STAR shift to state 20
-- On SIZEOF shift to state 21
-- On RETURN shift to state 421
-- On PRE_NAME shift to state 426
-- On PLUS shift to state 24
-- On MINUS shift to state 25
-- On LPAREN shift to state 28
-- On INC shift to state 31
-- On GOTO shift to state 429
-- On DEFAULT shift to state 432
-- On DEC shift to state 46
-- On CONTINUE shift to state 434
-- On CONSTANT shift to state 47
-- On CASE shift to state 436
-- On BUILTIN_VA_ARG shift to state 48
-- On BREAK shift to state 439
-- On BANG shift to state 50
-- On ASM shift to state 441
-- On AND shift to state 51
-- On ALIGNOF shift to state 52
-- On unary_operator shift to state 56
-- On unary_expression shift to state 65
-- On typedef_name shift to state 42
-- On string_literals_list shift to state 58
-- On statement shift to state 560
-- On shift_expression shift to state 78
-- On selection_statement shift to state 474
-- On save_context shift to state 475
-- On relational_expression shift to state 94
-- On primary_expression shift to state 60
-- On postfix_expression shift to state 61
-- On option(expression) shift to state 481
-- On multiplicative_expression shift to state 82
-- On logical_or_expression shift to state 102
-- On logical_and_expression shift to state 104
-- On labeled_statement shift to state 483
-- On jump_statement shift to state 484
-- On iteration_statement shift to state 485
-- On inclusive_or_expression shift to state 120
-- On general_identifier shift to state 486
-- On expression_statement shift to state 489
-- On expression shift to state 424
-- On exclusive_or_expression shift to state 119
-- On equality_expression shift to state 110
-- On conditional_expression shift to state 123
-- On compound_statement shift to state 490
-- On cast_expression shift to state 88
-- On assignment_expression shift to state 127
-- On asm_statement shift to state 491
-- On and_expression shift to state 118
-- On additive_expression shift to state 101
## Reductions:
-- On WHILE reduce production save_context ->
-- On SWITCH reduce production save_context ->
-- On SEMICOLON reduce production option(expression) ->
-- On LBRACE reduce production save_context ->
-- On IF reduce production save_context ->
-- On FOR reduce production save_context ->
-- On DO reduce production save_context ->

State 434:
## Known stack suffix:
## CONTINUE
## LR(1) items:
jump_statement -> CONTINUE . SEMICOLON [ WHILE VOLATILE VOID UNSIGNED UNION UNDERSCORE_BOOL TYPEDEF TILDE SWITCH STRUCT STRING_LITERAL STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACE PRE_NAME PRAGMA PLUS PACKED MINUS LPAREN LONG LBRACE INT INLINE INC IF GOTO FOR FLOAT EXTERN ENUM ELSE DOUBLE DO DEFAULT DEC CONTINUE CONSTANT CONST CHAR CASE BUILTIN_VA_ARG BREAK BANG AUTO ATTRIBUTE ASM AND ALIGNOF ALIGNAS ]
## Transitions:
-- On SEMICOLON shift to state 435
## Reductions:

State 435:
## Known stack suffix:
## CONTINUE SEMICOLON
## LR(1) items:
jump_statement -> CONTINUE SEMICOLON . [ WHILE VOLATILE VOID UNSIGNED UNION UNDERSCORE_BOOL TYPEDEF TILDE SWITCH STRUCT STRING_LITERAL STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACE PRE_NAME PRAGMA PLUS PACKED MINUS LPAREN LONG LBRACE INT INLINE INC IF GOTO FOR FLOAT EXTERN ENUM ELSE DOUBLE DO DEFAULT DEC CONTINUE CONSTANT CONST CHAR CASE BUILTIN_VA_ARG BREAK BANG AUTO ATTRIBUTE ASM AND ALIGNOF ALIGNAS ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production jump_statement -> CONTINUE SEMICOLON

State 436:
## Known stack suffix:
## CASE
## LR(1) items:
labeled_statement -> CASE . conditional_expression COLON statement [ WHILE VOLATILE VOID UNSIGNED UNION UNDERSCORE_BOOL TYPEDEF TILDE SWITCH STRUCT STRING_LITERAL STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACE PRE_NAME PRAGMA PLUS PACKED MINUS LPAREN LONG LBRACE INT INLINE INC IF GOTO FOR FLOAT EXTERN ENUM ELSE DOUBLE DO DEFAULT DEC CONTINUE CONSTANT CONST CHAR CASE BUILTIN_VA_ARG BREAK BANG AUTO ATTRIBUTE ASM AND ALIGNOF ALIGNAS ]
## Transitions:
-- On TILDE shift to state 18
-- On STRING_LITERAL shift to state 19
-- On STAR shift to state 20
-- On SIZEOF shift to state 21
-- On PRE_NAME shift to state 22
-- On PLUS shift to state 24
-- On MINUS shift to state 25
-- On LPAREN shift to state 28
-- On INC shift to state 31
-- On DEC shift to state 46
-- On CONSTANT shift to state 47
-- On BUILTIN_VA_ARG shift to state 48
-- On BANG shift to state 50
-- On AND shift to state 51
-- On ALIGNOF shift to state 52
-- On unary_operator shift to state 56
-- On unary_expression shift to state 57
-- On string_literals_list shift to state 58
-- On shift_expression shift to state 78
-- On relational_expression shift to state 94
-- On primary_expression shift to state 60
-- On postfix_expression shift to state 61
-- On multiplicative_expression shift to state 82
-- On logical_or_expression shift to state 102
-- On logical_and_expression shift to state 104
-- On inclusive_or_expression shift to state 120
-- On exclusive_or_expression shift to state 119
-- On equality_expression shift to state 110
-- On conditional_expression shift to state 437
-- On cast_expression shift to state 88
-- On and_expression shift to state 118
-- On additive_expression shift to state 101
## Reductions:

State 437:
## Known stack suffix:
## CASE conditional_expression
## LR(1) items:
labeled_statement -> CASE conditional_expression . COLON statement [ WHILE VOLATILE VOID UNSIGNED UNION UNDERSCORE_BOOL TYPEDEF TILDE SWITCH STRUCT STRING_LITERAL STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACE PRE_NAME PRAGMA PLUS PACKED MINUS LPAREN LONG LBRACE INT INLINE INC IF GOTO FOR FLOAT EXTERN ENUM ELSE DOUBLE DO DEFAULT DEC CONTINUE CONSTANT CONST CHAR CASE BUILTIN_VA_ARG BREAK BANG AUTO ATTRIBUTE ASM AND ALIGNOF ALIGNAS ]
## Transitions:
-- On COLON shift to state 438
## Reductions:

State 438:
## Known stack suffix:
## CASE conditional_expression COLON
## LR(1) items:
labeled_statement -> CASE conditional_expression COLON . statement [ WHILE VOLATILE VOID UNSIGNED UNION UNDERSCORE_BOOL TYPEDEF TILDE SWITCH STRUCT STRING_LITERAL STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACE PRE_NAME PRAGMA PLUS PACKED MINUS LPAREN LONG LBRACE INT INLINE INC IF GOTO FOR FLOAT EXTERN ENUM ELSE DOUBLE DO DEFAULT DEC CONTINUE CONSTANT CONST CHAR CASE BUILTIN_VA_ARG BREAK BANG AUTO ATTRIBUTE ASM AND ALIGNOF ALIGNAS ]
## Transitions:
-- On TILDE shift to state 18
-- On STRING_LITERAL shift to state 19
-- On STAR shift to state 20
-- On SIZEOF shift to state 21
-- On RETURN shift to state 421
-- On PRE_NAME shift to state 426
-- On PLUS shift to state 24
-- On MINUS shift to state 25
-- On LPAREN shift to state 28
-- On INC shift to state 31
-- On GOTO shift to state 429
-- On DEFAULT shift to state 432
-- On DEC shift to state 46
-- On CONTINUE shift to state 434
-- On CONSTANT shift to state 47
-- On CASE shift to state 436
-- On BUILTIN_VA_ARG shift to state 48
-- On BREAK shift to state 439
-- On BANG shift to state 50
-- On ASM shift to state 441
-- On AND shift to state 51
-- On ALIGNOF shift to state 52
-- On unary_operator shift to state 56
-- On unary_expression shift to state 65
-- On typedef_name shift to state 42
-- On string_literals_list shift to state 58
-- On statement shift to state 473
-- On shift_expression shift to state 78
-- On selection_statement shift to state 474
-- On save_context shift to state 475
-- On relational_expression shift to state 94
-- On primary_expression shift to state 60
-- On postfix_expression shift to state 61
-- On option(expression) shift to state 481
-- On multiplicative_expression shift to state 82
-- On logical_or_expression shift to state 102
-- On logical_and_expression shift to state 104
-- On labeled_statement shift to state 483
-- On jump_statement shift to state 484
-- On iteration_statement shift to state 485
-- On inclusive_or_expression shift to state 120
-- On general_identifier shift to state 486
-- On expression_statement shift to state 489
-- On expression shift to state 424
-- On exclusive_or_expression shift to state 119
-- On equality_expression shift to state 110
-- On conditional_expression shift to state 123
-- On compound_statement shift to state 490
-- On cast_expression shift to state 88
-- On assignment_expression shift to state 127
-- On asm_statement shift to state 491
-- On and_expression shift to state 118
-- On additive_expression shift to state 101
## Reductions:
-- On WHILE reduce production save_context ->
-- On SWITCH reduce production save_context ->
-- On SEMICOLON reduce production option(expression) ->
-- On LBRACE reduce production save_context ->
-- On IF reduce production save_context ->
-- On FOR reduce production save_context ->
-- On DO reduce production save_context ->

State 439:
## Known stack suffix:
## BREAK
## LR(1) items:
jump_statement -> BREAK . SEMICOLON [ WHILE VOLATILE VOID UNSIGNED UNION UNDERSCORE_BOOL TYPEDEF TILDE SWITCH STRUCT STRING_LITERAL STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACE PRE_NAME PRAGMA PLUS PACKED MINUS LPAREN LONG LBRACE INT INLINE INC IF GOTO FOR FLOAT EXTERN ENUM ELSE DOUBLE DO DEFAULT DEC CONTINUE CONSTANT CONST CHAR CASE BUILTIN_VA_ARG BREAK BANG AUTO ATTRIBUTE ASM AND ALIGNOF ALIGNAS ]
## Transitions:
-- On SEMICOLON shift to state 440
## Reductions:

State 440:
## Known stack suffix:
## BREAK SEMICOLON
## LR(1) items:
jump_statement -> BREAK SEMICOLON . [ WHILE VOLATILE VOID UNSIGNED UNION UNDERSCORE_BOOL TYPEDEF TILDE SWITCH STRUCT STRING_LITERAL STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACE PRE_NAME PRAGMA PLUS PACKED MINUS LPAREN LONG LBRACE INT INLINE INC IF GOTO FOR FLOAT EXTERN ENUM ELSE DOUBLE DO DEFAULT DEC CONTINUE CONSTANT CONST CHAR CASE BUILTIN_VA_ARG BREAK BANG AUTO ATTRIBUTE ASM AND ALIGNOF ALIGNAS ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production jump_statement -> BREAK SEMICOLON

State 441:
## Known stack suffix:
## ASM
## LR(1) items:
asm_statement -> ASM . asm_attributes LPAREN string_literals_list asm_arguments RPAREN SEMICOLON [ WHILE VOLATILE VOID UNSIGNED UNION UNDERSCORE_BOOL TYPEDEF TILDE SWITCH STRUCT STRING_LITERAL STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACE PRE_NAME PRAGMA PLUS PACKED MINUS LPAREN LONG LBRACE INT INLINE INC IF GOTO FOR FLOAT EXTERN ENUM ELSE DOUBLE DO DEFAULT DEC CONTINUE CONSTANT CONST CHAR CASE BUILTIN_VA_ARG BREAK BANG AUTO ATTRIBUTE ASM AND ALIGNOF ALIGNAS ]
## Transitions:
-- On VOLATILE shift to state 442
-- On CONST shift to state 443
-- On asm_attributes shift to state 446
## Reductions:
-- On LPAREN reduce production asm_attributes ->

State 442:
## Known stack suffix:
## VOLATILE
## LR(1) items:
asm_attributes -> VOLATILE . asm_attributes [ LPAREN ]
## Transitions:
-- On VOLATILE shift to state 442
-- On CONST shift to state 443
-- On asm_attributes shift to state 445
## Reductions:
-- On LPAREN reduce production asm_attributes ->

State 443:
## Known stack suffix:
## CONST
## LR(1) items:
asm_attributes -> CONST . asm_attributes [ LPAREN ]
## Transitions:
-- On VOLATILE shift to state 442
-- On CONST shift to state 443
-- On asm_attributes shift to state 444
## Reductions:
-- On LPAREN reduce production asm_attributes ->

State 444:
## Known stack suffix:
## CONST asm_attributes
## LR(1) items:
asm_attributes -> CONST asm_attributes . [ LPAREN ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production asm_attributes -> CONST asm_attributes

State 445:
## Known stack suffix:
## VOLATILE asm_attributes
## LR(1) items:
asm_attributes -> VOLATILE asm_attributes . [ LPAREN ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production asm_attributes -> VOLATILE asm_attributes

State 446:
## Known stack suffix:
## ASM asm_attributes
## LR(1) items:
asm_statement -> ASM asm_attributes . LPAREN string_literals_list asm_arguments RPAREN SEMICOLON [ WHILE VOLATILE VOID UNSIGNED UNION UNDERSCORE_BOOL TYPEDEF TILDE SWITCH STRUCT STRING_LITERAL STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACE PRE_NAME PRAGMA PLUS PACKED MINUS LPAREN LONG LBRACE INT INLINE INC IF GOTO FOR FLOAT EXTERN ENUM ELSE DOUBLE DO DEFAULT DEC CONTINUE CONSTANT CONST CHAR CASE BUILTIN_VA_ARG BREAK BANG AUTO ATTRIBUTE ASM AND ALIGNOF ALIGNAS ]
## Transitions:
-- On LPAREN shift to state 447
## Reductions:

State 447:
## Known stack suffix:
## ASM asm_attributes LPAREN
## LR(1) items:
asm_statement -> ASM asm_attributes LPAREN . string_literals_list asm_arguments RPAREN SEMICOLON [ WHILE VOLATILE VOID UNSIGNED UNION UNDERSCORE_BOOL TYPEDEF TILDE SWITCH STRUCT STRING_LITERAL STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACE PRE_NAME PRAGMA PLUS PACKED MINUS LPAREN LONG LBRACE INT INLINE INC IF GOTO FOR FLOAT EXTERN ENUM ELSE DOUBLE DO DEFAULT DEC CONTINUE CONSTANT CONST CHAR CASE BUILTIN_VA_ARG BREAK BANG AUTO ATTRIBUTE ASM AND ALIGNOF ALIGNAS ]
## Transitions:
-- On STRING_LITERAL shift to state 19
-- On string_literals_list shift to state 448
## Reductions:

State 448:
## Known stack suffix:
## ASM asm_attributes LPAREN string_literals_list
## LR(1) items:
asm_statement -> ASM asm_attributes LPAREN string_literals_list . asm_arguments RPAREN SEMICOLON [ WHILE VOLATILE VOID UNSIGNED UNION UNDERSCORE_BOOL TYPEDEF TILDE SWITCH STRUCT STRING_LITERAL STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACE PRE_NAME PRAGMA PLUS PACKED MINUS LPAREN LONG LBRACE INT INLINE INC IF GOTO FOR FLOAT EXTERN ENUM ELSE DOUBLE DO DEFAULT DEC CONTINUE CONSTANT CONST CHAR CASE BUILTIN_VA_ARG BREAK BANG AUTO ATTRIBUTE ASM AND ALIGNOF ALIGNAS ]
string_literals_list -> string_literals_list . STRING_LITERAL [ STRING_LITERAL RPAREN COLON ]
## Transitions:
-- On STRING_LITERAL shift to state 59
-- On COLON shift to state 449
-- On asm_arguments shift to state 470
## Reductions:
-- On RPAREN reduce production asm_arguments ->

State 449:
## Known stack suffix:
## COLON
## LR(1) items:
asm_arguments -> COLON . asm_operands [ RPAREN ]
asm_arguments -> COLON . asm_operands COLON asm_operands [ RPAREN ]
asm_arguments -> COLON . asm_operands COLON asm_operands COLON asm_flags [ RPAREN ]
## Transitions:
-- On LBRACK shift to state 450
-- On asm_operands_ne shift to state 453
-- On asm_operands shift to state 461
-- On asm_operand shift to state 469
-- On asm_op_name shift to state 456
## Reductions:
-- On XOR_ASSIGN reduce production asm_operands ->
-- On WHILE reduce production asm_operands ->
-- On VOLATILE reduce production asm_operands ->
-- On VOID reduce production asm_operands ->
-- On VAR_NAME reduce production asm_operands ->
-- On UNSIGNED reduce production asm_operands ->
-- On UNION reduce production asm_operands ->
-- On UNDERSCORE_BOOL reduce production asm_operands ->
-- On TYPEDEF_NAME reduce production asm_operands ->
-- On TYPEDEF reduce production asm_operands ->
-- On TILDE reduce production asm_operands ->
-- On SWITCH reduce production asm_operands ->
-- On SUB_ASSIGN reduce production asm_operands ->
-- On STRUCT reduce production asm_operands ->
-- On STRING_LITERAL reduce production asm_op_name ->
-- On STATIC reduce production asm_operands ->
-- On STAR reduce production asm_operands ->
-- On SLASH reduce production asm_operands ->
-- On SIZEOF reduce production asm_operands ->
-- On SIGNED reduce production asm_operands ->
-- On SHORT reduce production asm_operands ->
-- On SEMICOLON reduce production asm_operands ->
-- On RPAREN reduce production asm_operands ->
-- On RIGHT_ASSIGN reduce production asm_operands ->
-- On RIGHT reduce production asm_operands ->
-- On RETURN reduce production asm_operands ->
-- On RESTRICT reduce production asm_operands ->
-- On REGISTER reduce production asm_operands ->
-- On RBRACK reduce production asm_operands ->
-- On RBRACE reduce production asm_operands ->
-- On QUESTION reduce production asm_operands ->
-- On PTR reduce production asm_operands ->
-- On PRE_NAME reduce production asm_operands ->
-- On PRAGMA reduce production asm_operands ->
-- On PLUS reduce production asm_operands ->
-- On PERCENT reduce production asm_operands ->
-- On PACKED reduce production asm_operands ->
-- On OR_ASSIGN reduce production asm_operands ->
-- On NEQ reduce production asm_operands ->
-- On MUL_ASSIGN reduce production asm_operands ->
-- On MOD_ASSIGN reduce production asm_operands ->
-- On MINUS reduce production asm_operands ->
-- On LT reduce production asm_operands ->
-- On LPAREN reduce production asm_operands ->
-- On LONG reduce production asm_operands ->
-- On LEQ reduce production asm_operands ->
-- On LEFT_ASSIGN reduce production asm_operands ->
-- On LEFT reduce production asm_operands ->
-- On LBRACE reduce production asm_operands ->
-- On INT reduce production asm_operands ->
-- On INLINE reduce production asm_operands ->
-- On INC reduce production asm_operands ->
-- On IF reduce production asm_operands ->
-- On HAT reduce production asm_operands ->
-- On GT reduce production asm_operands ->
-- On GOTO reduce production asm_operands ->
-- On GEQ reduce production asm_operands ->
-- On FOR reduce production asm_operands ->
-- On FLOAT reduce production asm_operands ->
-- On EXTERN reduce production asm_operands ->
-- On EQEQ reduce production asm_operands ->
-- On EQ reduce production asm_operands ->
-- On EOF reduce production asm_operands ->
-- On ENUM reduce production asm_operands ->
-- On ELSE reduce production asm_operands ->
-- On ELLIPSIS reduce production asm_operands ->
-- On DOUBLE reduce production asm_operands ->
-- On DOT reduce production asm_operands ->
-- On DO reduce production asm_operands ->
-- On DIV_ASSIGN reduce production asm_operands ->
-- On DEFAULT reduce production asm_operands ->
-- On DEC reduce production asm_operands ->
-- On CONTINUE reduce production asm_operands ->
-- On CONSTANT reduce production asm_operands ->
-- On CONST reduce production asm_operands ->
-- On COMMA reduce production asm_operands ->
-- On COLON reduce production asm_operands ->
-- On CHAR reduce production asm_operands ->
-- On CASE reduce production asm_operands ->
-- On BUILTIN_VA_ARG reduce production asm_operands ->
-- On BREAK reduce production asm_operands ->
-- On BARBAR reduce production asm_operands ->
-- On BAR reduce production asm_operands ->
-- On BANG reduce production asm_operands ->
-- On AUTO reduce production asm_operands ->
-- On ATTRIBUTE reduce production asm_operands ->
-- On ASM reduce production asm_operands ->
-- On AND_ASSIGN reduce production asm_operands ->
-- On ANDAND reduce production asm_operands ->
-- On AND reduce production asm_operands ->
-- On ALIGNOF reduce production asm_operands ->
-- On ALIGNAS reduce production asm_operands ->
-- On ADD_ASSIGN reduce production asm_operands ->

State 450:
## Known stack suffix:
## LBRACK
## LR(1) items:
asm_op_name -> LBRACK . general_identifier RBRACK [ STRING_LITERAL ]
## Transitions:
-- On PRE_NAME shift to state 38
-- On typedef_name shift to state 42
-- On general_identifier shift to state 451
## Reductions:

State 451:
## Known stack suffix:
## LBRACK general_identifier
## LR(1) items:
asm_op_name -> LBRACK general_identifier . RBRACK [ STRING_LITERAL ]
## Transitions:
-- On RBRACK shift to state 452
## Reductions:

State 452:
## Known stack suffix:
## LBRACK general_identifier RBRACK
## LR(1) items:
asm_op_name -> LBRACK general_identifier RBRACK . [ STRING_LITERAL ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production asm_op_name -> LBRACK general_identifier RBRACK

State 453:
## Known stack suffix:
## asm_operands_ne
## LR(1) items:
asm_operands -> asm_operands_ne . [ RPAREN COLON ]
asm_operands_ne -> asm_operands_ne . COMMA asm_operand [ RPAREN COMMA COLON ]
## Transitions:
-- On COMMA shift to state 454
## Reductions:
-- On XOR_ASSIGN reduce production asm_operands -> asm_operands_ne
-- On WHILE reduce production asm_operands -> asm_operands_ne
-- On VOLATILE reduce production asm_operands -> asm_operands_ne
-- On VOID reduce production asm_operands -> asm_operands_ne
-- On VAR_NAME reduce production asm_operands -> asm_operands_ne
-- On UNSIGNED reduce production asm_operands -> asm_operands_ne
-- On UNION reduce production asm_operands -> asm_operands_ne
-- On UNDERSCORE_BOOL reduce production asm_operands -> asm_operands_ne
-- On TYPEDEF_NAME reduce production asm_operands -> asm_operands_ne
-- On TYPEDEF reduce production asm_operands -> asm_operands_ne
-- On TILDE reduce production asm_operands -> asm_operands_ne
-- On SWITCH reduce production asm_operands -> asm_operands_ne
-- On SUB_ASSIGN reduce production asm_operands -> asm_operands_ne
-- On STRUCT reduce production asm_operands -> asm_operands_ne
-- On STRING_LITERAL reduce production asm_operands -> asm_operands_ne
-- On STATIC reduce production asm_operands -> asm_operands_ne
-- On STAR reduce production asm_operands -> asm_operands_ne
-- On SLASH reduce production asm_operands -> asm_operands_ne
-- On SIZEOF reduce production asm_operands -> asm_operands_ne
-- On SIGNED reduce production asm_operands -> asm_operands_ne
-- On SHORT reduce production asm_operands -> asm_operands_ne
-- On SEMICOLON reduce production asm_operands -> asm_operands_ne
-- On RPAREN reduce production asm_operands -> asm_operands_ne
-- On RIGHT_ASSIGN reduce production asm_operands -> asm_operands_ne
-- On RIGHT reduce production asm_operands -> asm_operands_ne
-- On RETURN reduce production asm_operands -> asm_operands_ne
-- On RESTRICT reduce production asm_operands -> asm_operands_ne
-- On REGISTER reduce production asm_operands -> asm_operands_ne
-- On RBRACK reduce production asm_operands -> asm_operands_ne
-- On RBRACE reduce production asm_operands -> asm_operands_ne
-- On QUESTION reduce production asm_operands -> asm_operands_ne
-- On PTR reduce production asm_operands -> asm_operands_ne
-- On PRE_NAME reduce production asm_operands -> asm_operands_ne
-- On PRAGMA reduce production asm_operands -> asm_operands_ne
-- On PLUS reduce production asm_operands -> asm_operands_ne
-- On PERCENT reduce production asm_operands -> asm_operands_ne
-- On PACKED reduce production asm_operands -> asm_operands_ne
-- On OR_ASSIGN reduce production asm_operands -> asm_operands_ne
-- On NEQ reduce production asm_operands -> asm_operands_ne
-- On MUL_ASSIGN reduce production asm_operands -> asm_operands_ne
-- On MOD_ASSIGN reduce production asm_operands -> asm_operands_ne
-- On MINUS reduce production asm_operands -> asm_operands_ne
-- On LT reduce production asm_operands -> asm_operands_ne
-- On LPAREN reduce production asm_operands -> asm_operands_ne
-- On LONG reduce production asm_operands -> asm_operands_ne
-- On LEQ reduce production asm_operands -> asm_operands_ne
-- On LEFT_ASSIGN reduce production asm_operands -> asm_operands_ne
-- On LEFT reduce production asm_operands -> asm_operands_ne
-- On LBRACK reduce production asm_operands -> asm_operands_ne
-- On LBRACE reduce production asm_operands -> asm_operands_ne
-- On INT reduce production asm_operands -> asm_operands_ne
-- On INLINE reduce production asm_operands -> asm_operands_ne
-- On INC reduce production asm_operands -> asm_operands_ne
-- On IF reduce production asm_operands -> asm_operands_ne
-- On HAT reduce production asm_operands -> asm_operands_ne
-- On GT reduce production asm_operands -> asm_operands_ne
-- On GOTO reduce production asm_operands -> asm_operands_ne
-- On GEQ reduce production asm_operands -> asm_operands_ne
-- On FOR reduce production asm_operands -> asm_operands_ne
-- On FLOAT reduce production asm_operands -> asm_operands_ne
-- On EXTERN reduce production asm_operands -> asm_operands_ne
-- On EQEQ reduce production asm_operands -> asm_operands_ne
-- On EQ reduce production asm_operands -> asm_operands_ne
-- On EOF reduce production asm_operands -> asm_operands_ne
-- On ENUM reduce production asm_operands -> asm_operands_ne
-- On ELSE reduce production asm_operands -> asm_operands_ne
-- On ELLIPSIS reduce production asm_operands -> asm_operands_ne
-- On DOUBLE reduce production asm_operands -> asm_operands_ne
-- On DOT reduce production asm_operands -> asm_operands_ne
-- On DO reduce production asm_operands -> asm_operands_ne
-- On DIV_ASSIGN reduce production asm_operands -> asm_operands_ne
-- On DEFAULT reduce production asm_operands -> asm_operands_ne
-- On DEC reduce production asm_operands -> asm_operands_ne
-- On CONTINUE reduce production asm_operands -> asm_operands_ne
-- On CONSTANT reduce production asm_operands -> asm_operands_ne
-- On CONST reduce production asm_operands -> asm_operands_ne
-- On COLON reduce production asm_operands -> asm_operands_ne
-- On CHAR reduce production asm_operands -> asm_operands_ne
-- On CASE reduce production asm_operands -> asm_operands_ne
-- On BUILTIN_VA_ARG reduce production asm_operands -> asm_operands_ne
-- On BREAK reduce production asm_operands -> asm_operands_ne
-- On BARBAR reduce production asm_operands -> asm_operands_ne
-- On BAR reduce production asm_operands -> asm_operands_ne
-- On BANG reduce production asm_operands -> asm_operands_ne
-- On AUTO reduce production asm_operands -> asm_operands_ne
-- On ATTRIBUTE reduce production asm_operands -> asm_operands_ne
-- On ASM reduce production asm_operands -> asm_operands_ne
-- On AND_ASSIGN reduce production asm_operands -> asm_operands_ne
-- On ANDAND reduce production asm_operands -> asm_operands_ne
-- On AND reduce production asm_operands -> asm_operands_ne
-- On ALIGNOF reduce production asm_operands -> asm_operands_ne
-- On ALIGNAS reduce production asm_operands -> asm_operands_ne
-- On ADD_ASSIGN reduce production asm_operands -> asm_operands_ne

State 454:
## Known stack suffix:
## asm_operands_ne COMMA
## LR(1) items:
asm_operands_ne -> asm_operands_ne COMMA . asm_operand [ RPAREN COMMA COLON ]
## Transitions:
-- On LBRACK shift to state 450
-- On asm_operand shift to state 455
-- On asm_op_name shift to state 456
## Reductions:
-- On STRING_LITERAL reduce production asm_op_name ->

State 455:
## Known stack suffix:
## asm_operands_ne COMMA asm_operand
## LR(1) items:
asm_operands_ne -> asm_operands_ne COMMA asm_operand . [ RPAREN COMMA COLON ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production asm_operands_ne -> asm_operands_ne COMMA asm_operand

State 456:
## Known stack suffix:
## asm_op_name
## LR(1) items:
asm_operand -> asm_op_name . string_literals_list LPAREN expression RPAREN [ RPAREN COMMA COLON ]
## Transitions:
-- On STRING_LITERAL shift to state 19
-- On string_literals_list shift to state 457
## Reductions:

State 457:
## Known stack suffix:
## asm_op_name string_literals_list
## LR(1) items:
asm_operand -> asm_op_name string_literals_list . LPAREN expression RPAREN [ RPAREN COMMA COLON ]
string_literals_list -> string_literals_list . STRING_LITERAL [ STRING_LITERAL LPAREN ]
## Transitions:
-- On STRING_LITERAL shift to state 59
-- On LPAREN shift to state 458
## Reductions:

State 458:
## Known stack suffix:
## asm_op_name string_literals_list LPAREN
## LR(1) items:
asm_operand -> asm_op_name string_literals_list LPAREN . expression RPAREN [ RPAREN COMMA COLON ]
## Transitions:
-- On TILDE shift to state 18
-- On STRING_LITERAL shift to state 19
-- On STAR shift to state 20
-- On SIZEOF shift to state 21
-- On PRE_NAME shift to state 22
-- On PLUS shift to state 24
-- On MINUS shift to state 25
-- On LPAREN shift to state 28
-- On INC shift to state 31
-- On DEC shift to state 46
-- On CONSTANT shift to state 47
-- On BUILTIN_VA_ARG shift to state 48
-- On BANG shift to state 50
-- On AND shift to state 51
-- On ALIGNOF shift to state 52
-- On unary_operator shift to state 56
-- On unary_expression shift to state 65
-- On string_literals_list shift to state 58
-- On shift_expression shift to state 78
-- On relational_expression shift to state 94
-- On primary_expression shift to state 60
-- On postfix_expression shift to state 61
-- On multiplicative_expression shift to state 82
-- On logical_or_expression shift to state 102
-- On logical_and_expression shift to state 104
-- On inclusive_or_expression shift to state 120
-- On expression shift to state 459
-- On exclusive_or_expression shift to state 119
-- On equality_expression shift to state 110
-- On conditional_expression shift to state 123
-- On cast_expression shift to state 88
-- On assignment_expression shift to state 127
-- On and_expression shift to state 118
-- On additive_expression shift to state 101
## Reductions:

State 459:
## Known stack suffix:
## asm_op_name string_literals_list LPAREN expression
## LR(1) items:
asm_operand -> asm_op_name string_literals_list LPAREN expression . RPAREN [ RPAREN COMMA COLON ]
expression -> expression . COMMA assignment_expression [ RPAREN COMMA ]
## Transitions:
-- On RPAREN shift to state 460
-- On COMMA shift to state 122
## Reductions:

State 460:
## Known stack suffix:
## asm_op_name string_literals_list LPAREN expression RPAREN
## LR(1) items:
asm_operand -> asm_op_name string_literals_list LPAREN expression RPAREN . [ RPAREN COMMA COLON ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production asm_operand -> asm_op_name string_literals_list LPAREN expression RPAREN

State 461:
## Known stack suffix:
## COLON asm_operands
## LR(1) items:
asm_arguments -> COLON asm_operands . [ RPAREN ]
asm_arguments -> COLON asm_operands . COLON asm_operands [ RPAREN ]
asm_arguments -> COLON asm_operands . COLON asm_operands COLON asm_flags [ RPAREN ]
## Transitions:
-- On COLON shift to state 462
## Reductions:
-- On RPAREN reduce production asm_arguments -> COLON asm_operands

State 462:
## Known stack suffix:
## COLON asm_operands COLON
## LR(1) items:
asm_arguments -> COLON asm_operands COLON . asm_operands [ RPAREN ]
asm_arguments -> COLON asm_operands COLON . asm_operands COLON asm_flags [ RPAREN ]
## Transitions:
-- On LBRACK shift to state 450
-- On asm_operands_ne shift to state 453
-- On asm_operands shift to state 463
-- On asm_operand shift to state 469
-- On asm_op_name shift to state 456
## Reductions:
-- On XOR_ASSIGN reduce production asm_operands ->
-- On WHILE reduce production asm_operands ->
-- On VOLATILE reduce production asm_operands ->
-- On VOID reduce production asm_operands ->
-- On VAR_NAME reduce production asm_operands ->
-- On UNSIGNED reduce production asm_operands ->
-- On UNION reduce production asm_operands ->
-- On UNDERSCORE_BOOL reduce production asm_operands ->
-- On TYPEDEF_NAME reduce production asm_operands ->
-- On TYPEDEF reduce production asm_operands ->
-- On TILDE reduce production asm_operands ->
-- On SWITCH reduce production asm_operands ->
-- On SUB_ASSIGN reduce production asm_operands ->
-- On STRUCT reduce production asm_operands ->
-- On STRING_LITERAL reduce production asm_op_name ->
-- On STATIC reduce production asm_operands ->
-- On STAR reduce production asm_operands ->
-- On SLASH reduce production asm_operands ->
-- On SIZEOF reduce production asm_operands ->
-- On SIGNED reduce production asm_operands ->
-- On SHORT reduce production asm_operands ->
-- On SEMICOLON reduce production asm_operands ->
-- On RPAREN reduce production asm_operands ->
-- On RIGHT_ASSIGN reduce production asm_operands ->
-- On RIGHT reduce production asm_operands ->
-- On RETURN reduce production asm_operands ->
-- On RESTRICT reduce production asm_operands ->
-- On REGISTER reduce production asm_operands ->
-- On RBRACK reduce production asm_operands ->
-- On RBRACE reduce production asm_operands ->
-- On QUESTION reduce production asm_operands ->
-- On PTR reduce production asm_operands ->
-- On PRE_NAME reduce production asm_operands ->
-- On PRAGMA reduce production asm_operands ->
-- On PLUS reduce production asm_operands ->
-- On PERCENT reduce production asm_operands ->
-- On PACKED reduce production asm_operands ->
-- On OR_ASSIGN reduce production asm_operands ->
-- On NEQ reduce production asm_operands ->
-- On MUL_ASSIGN reduce production asm_operands ->
-- On MOD_ASSIGN reduce production asm_operands ->
-- On MINUS reduce production asm_operands ->
-- On LT reduce production asm_operands ->
-- On LPAREN reduce production asm_operands ->
-- On LONG reduce production asm_operands ->
-- On LEQ reduce production asm_operands ->
-- On LEFT_ASSIGN reduce production asm_operands ->
-- On LEFT reduce production asm_operands ->
-- On LBRACE reduce production asm_operands ->
-- On INT reduce production asm_operands ->
-- On INLINE reduce production asm_operands ->
-- On INC reduce production asm_operands ->
-- On IF reduce production asm_operands ->
-- On HAT reduce production asm_operands ->
-- On GT reduce production asm_operands ->
-- On GOTO reduce production asm_operands ->
-- On GEQ reduce production asm_operands ->
-- On FOR reduce production asm_operands ->
-- On FLOAT reduce production asm_operands ->
-- On EXTERN reduce production asm_operands ->
-- On EQEQ reduce production asm_operands ->
-- On EQ reduce production asm_operands ->
-- On EOF reduce production asm_operands ->
-- On ENUM reduce production asm_operands ->
-- On ELSE reduce production asm_operands ->
-- On ELLIPSIS reduce production asm_operands ->
-- On DOUBLE reduce production asm_operands ->
-- On DOT reduce production asm_operands ->
-- On DO reduce production asm_operands ->
-- On DIV_ASSIGN reduce production asm_operands ->
-- On DEFAULT reduce production asm_operands ->
-- On DEC reduce production asm_operands ->
-- On CONTINUE reduce production asm_operands ->
-- On CONSTANT reduce production asm_operands ->
-- On CONST reduce production asm_operands ->
-- On COMMA reduce production asm_operands ->
-- On COLON reduce production asm_operands ->
-- On CHAR reduce production asm_operands ->
-- On CASE reduce production asm_operands ->
-- On BUILTIN_VA_ARG reduce production asm_operands ->
-- On BREAK reduce production asm_operands ->
-- On BARBAR reduce production asm_operands ->
-- On BAR reduce production asm_operands ->
-- On BANG reduce production asm_operands ->
-- On AUTO reduce production asm_operands ->
-- On ATTRIBUTE reduce production asm_operands ->
-- On ASM reduce production asm_operands ->
-- On AND_ASSIGN reduce production asm_operands ->
-- On ANDAND reduce production asm_operands ->
-- On AND reduce production asm_operands ->
-- On ALIGNOF reduce production asm_operands ->
-- On ALIGNAS reduce production asm_operands ->
-- On ADD_ASSIGN reduce production asm_operands ->

State 463:
## Known stack suffix:
## COLON asm_operands COLON asm_operands
## LR(1) items:
asm_arguments -> COLON asm_operands COLON asm_operands . [ RPAREN ]
asm_arguments -> COLON asm_operands COLON asm_operands . COLON asm_flags [ RPAREN ]
## Transitions:
-- On COLON shift to state 464
## Reductions:
-- On RPAREN reduce production asm_arguments -> COLON asm_operands COLON asm_operands

State 464:
## Known stack suffix:
## COLON asm_operands COLON asm_operands COLON
## LR(1) items:
asm_arguments -> COLON asm_operands COLON asm_operands COLON . asm_flags [ RPAREN ]
## Transitions:
-- On STRING_LITERAL shift to state 19
-- On string_literals_list shift to state 465
-- On asm_flags shift to state 466
## Reductions:

State 465:
## Known stack suffix:
## string_literals_list
## LR(1) items:
asm_flags -> string_literals_list . [ RPAREN COMMA ]
string_literals_list -> string_literals_list . STRING_LITERAL [ STRING_LITERAL RPAREN COMMA ]
## Transitions:
-- On STRING_LITERAL shift to state 59
## Reductions:
-- On XOR_ASSIGN reduce production asm_flags -> string_literals_list
-- On WHILE reduce production asm_flags -> string_literals_list
-- On VOLATILE reduce production asm_flags -> string_literals_list
-- On VOID reduce production asm_flags -> string_literals_list
-- On VAR_NAME reduce production asm_flags -> string_literals_list
-- On UNSIGNED reduce production asm_flags -> string_literals_list
-- On UNION reduce production asm_flags -> string_literals_list
-- On UNDERSCORE_BOOL reduce production asm_flags -> string_literals_list
-- On TYPEDEF_NAME reduce production asm_flags -> string_literals_list
-- On TYPEDEF reduce production asm_flags -> string_literals_list
-- On TILDE reduce production asm_flags -> string_literals_list
-- On SWITCH reduce production asm_flags -> string_literals_list
-- On SUB_ASSIGN reduce production asm_flags -> string_literals_list
-- On STRUCT reduce production asm_flags -> string_literals_list
-- On STATIC reduce production asm_flags -> string_literals_list
-- On STAR reduce production asm_flags -> string_literals_list
-- On SLASH reduce production asm_flags -> string_literals_list
-- On SIZEOF reduce production asm_flags -> string_literals_list
-- On SIGNED reduce production asm_flags -> string_literals_list
-- On SHORT reduce production asm_flags -> string_literals_list
-- On SEMICOLON reduce production asm_flags -> string_literals_list
-- On RPAREN reduce production asm_flags -> string_literals_list
-- On RIGHT_ASSIGN reduce production asm_flags -> string_literals_list
-- On RIGHT reduce production asm_flags -> string_literals_list
-- On RETURN reduce production asm_flags -> string_literals_list
-- On RESTRICT reduce production asm_flags -> string_literals_list
-- On REGISTER reduce production asm_flags -> string_literals_list
-- On RBRACK reduce production asm_flags -> string_literals_list
-- On RBRACE reduce production asm_flags -> string_literals_list
-- On QUESTION reduce production asm_flags -> string_literals_list
-- On PTR reduce production asm_flags -> string_literals_list
-- On PRE_NAME reduce production asm_flags -> string_literals_list
-- On PRAGMA reduce production asm_flags -> string_literals_list
-- On PLUS reduce production asm_flags -> string_literals_list
-- On PERCENT reduce production asm_flags -> string_literals_list
-- On PACKED reduce production asm_flags -> string_literals_list
-- On OR_ASSIGN reduce production asm_flags -> string_literals_list
-- On NEQ reduce production asm_flags -> string_literals_list
-- On MUL_ASSIGN reduce production asm_flags -> string_literals_list
-- On MOD_ASSIGN reduce production asm_flags -> string_literals_list
-- On MINUS reduce production asm_flags -> string_literals_list
-- On LT reduce production asm_flags -> string_literals_list
-- On LPAREN reduce production asm_flags -> string_literals_list
-- On LONG reduce production asm_flags -> string_literals_list
-- On LEQ reduce production asm_flags -> string_literals_list
-- On LEFT_ASSIGN reduce production asm_flags -> string_literals_list
-- On LEFT reduce production asm_flags -> string_literals_list
-- On LBRACK reduce production asm_flags -> string_literals_list
-- On LBRACE reduce production asm_flags -> string_literals_list
-- On INT reduce production asm_flags -> string_literals_list
-- On INLINE reduce production asm_flags -> string_literals_list
-- On INC reduce production asm_flags -> string_literals_list
-- On IF reduce production asm_flags -> string_literals_list
-- On HAT reduce production asm_flags -> string_literals_list
-- On GT reduce production asm_flags -> string_literals_list
-- On GOTO reduce production asm_flags -> string_literals_list
-- On GEQ reduce production asm_flags -> string_literals_list
-- On FOR reduce production asm_flags -> string_literals_list
-- On FLOAT reduce production asm_flags -> string_literals_list
-- On EXTERN reduce production asm_flags -> string_literals_list
-- On EQEQ reduce production asm_flags -> string_literals_list
-- On EQ reduce production asm_flags -> string_literals_list
-- On EOF reduce production asm_flags -> string_literals_list
-- On ENUM reduce production asm_flags -> string_literals_list
-- On ELSE reduce production asm_flags -> string_literals_list
-- On ELLIPSIS reduce production asm_flags -> string_literals_list
-- On DOUBLE reduce production asm_flags -> string_literals_list
-- On DOT reduce production asm_flags -> string_literals_list
-- On DO reduce production asm_flags -> string_literals_list
-- On DIV_ASSIGN reduce production asm_flags -> string_literals_list
-- On DEFAULT reduce production asm_flags -> string_literals_list
-- On DEC reduce production asm_flags -> string_literals_list
-- On CONTINUE reduce production asm_flags -> string_literals_list
-- On CONSTANT reduce production asm_flags -> string_literals_list
-- On CONST reduce production asm_flags -> string_literals_list
-- On COMMA reduce production asm_flags -> string_literals_list
-- On COLON reduce production asm_flags -> string_literals_list
-- On CHAR reduce production asm_flags -> string_literals_list
-- On CASE reduce production asm_flags -> string_literals_list
-- On BUILTIN_VA_ARG reduce production asm_flags -> string_literals_list
-- On BREAK reduce production asm_flags -> string_literals_list
-- On BARBAR reduce production asm_flags -> string_literals_list
-- On BAR reduce production asm_flags -> string_literals_list
-- On BANG reduce production asm_flags -> string_literals_list
-- On AUTO reduce production asm_flags -> string_literals_list
-- On ATTRIBUTE reduce production asm_flags -> string_literals_list
-- On ASM reduce production asm_flags -> string_literals_list
-- On AND_ASSIGN reduce production asm_flags -> string_literals_list
-- On ANDAND reduce production asm_flags -> string_literals_list
-- On AND reduce production asm_flags -> string_literals_list
-- On ALIGNOF reduce production asm_flags -> string_literals_list
-- On ALIGNAS reduce production asm_flags -> string_literals_list
-- On ADD_ASSIGN reduce production asm_flags -> string_literals_list

State 466:
## Known stack suffix:
## COLON asm_operands COLON asm_operands COLON asm_flags
## LR(1) items:
asm_arguments -> COLON asm_operands COLON asm_operands COLON asm_flags . [ RPAREN ]
asm_flags -> asm_flags . COMMA string_literals_list [ RPAREN COMMA ]
## Transitions:
-- On COMMA shift to state 467
## Reductions:
-- On RPAREN reduce production asm_arguments -> COLON asm_operands COLON asm_operands COLON asm_flags

State 467:
## Known stack suffix:
## asm_flags COMMA
## LR(1) items:
asm_flags -> asm_flags COMMA . string_literals_list [ RPAREN COMMA ]
## Transitions:
-- On STRING_LITERAL shift to state 19
-- On string_literals_list shift to state 468
## Reductions:

State 468:
## Known stack suffix:
## asm_flags COMMA string_literals_list
## LR(1) items:
asm_flags -> asm_flags COMMA string_literals_list . [ RPAREN COMMA ]
string_literals_list -> string_literals_list . STRING_LITERAL [ STRING_LITERAL RPAREN COMMA ]
## Transitions:
-- On STRING_LITERAL shift to state 59
## Reductions:
-- On XOR_ASSIGN reduce production asm_flags -> asm_flags COMMA string_literals_list
-- On WHILE reduce production asm_flags -> asm_flags COMMA string_literals_list
-- On VOLATILE reduce production asm_flags -> asm_flags COMMA string_literals_list
-- On VOID reduce production asm_flags -> asm_flags COMMA string_literals_list
-- On VAR_NAME reduce production asm_flags -> asm_flags COMMA string_literals_list
-- On UNSIGNED reduce production asm_flags -> asm_flags COMMA string_literals_list
-- On UNION reduce production asm_flags -> asm_flags COMMA string_literals_list
-- On UNDERSCORE_BOOL reduce production asm_flags -> asm_flags COMMA string_literals_list
-- On TYPEDEF_NAME reduce production asm_flags -> asm_flags COMMA string_literals_list
-- On TYPEDEF reduce production asm_flags -> asm_flags COMMA string_literals_list
-- On TILDE reduce production asm_flags -> asm_flags COMMA string_literals_list
-- On SWITCH reduce production asm_flags -> asm_flags COMMA string_literals_list
-- On SUB_ASSIGN reduce production asm_flags -> asm_flags COMMA string_literals_list
-- On STRUCT reduce production asm_flags -> asm_flags COMMA string_literals_list
-- On STATIC reduce production asm_flags -> asm_flags COMMA string_literals_list
-- On STAR reduce production asm_flags -> asm_flags COMMA string_literals_list
-- On SLASH reduce production asm_flags -> asm_flags COMMA string_literals_list
-- On SIZEOF reduce production asm_flags -> asm_flags COMMA string_literals_list
-- On SIGNED reduce production asm_flags -> asm_flags COMMA string_literals_list
-- On SHORT reduce production asm_flags -> asm_flags COMMA string_literals_list
-- On SEMICOLON reduce production asm_flags -> asm_flags COMMA string_literals_list
-- On RPAREN reduce production asm_flags -> asm_flags COMMA string_literals_list
-- On RIGHT_ASSIGN reduce production asm_flags -> asm_flags COMMA string_literals_list
-- On RIGHT reduce production asm_flags -> asm_flags COMMA string_literals_list
-- On RETURN reduce production asm_flags -> asm_flags COMMA string_literals_list
-- On RESTRICT reduce production asm_flags -> asm_flags COMMA string_literals_list
-- On REGISTER reduce production asm_flags -> asm_flags COMMA string_literals_list
-- On RBRACK reduce production asm_flags -> asm_flags COMMA string_literals_list
-- On RBRACE reduce production asm_flags -> asm_flags COMMA string_literals_list
-- On QUESTION reduce production asm_flags -> asm_flags COMMA string_literals_list
-- On PTR reduce production asm_flags -> asm_flags COMMA string_literals_list
-- On PRE_NAME reduce production asm_flags -> asm_flags COMMA string_literals_list
-- On PRAGMA reduce production asm_flags -> asm_flags COMMA string_literals_list
-- On PLUS reduce production asm_flags -> asm_flags COMMA string_literals_list
-- On PERCENT reduce production asm_flags -> asm_flags COMMA string_literals_list
-- On PACKED reduce production asm_flags -> asm_flags COMMA string_literals_list
-- On OR_ASSIGN reduce production asm_flags -> asm_flags COMMA string_literals_list
-- On NEQ reduce production asm_flags -> asm_flags COMMA string_literals_list
-- On MUL_ASSIGN reduce production asm_flags -> asm_flags COMMA string_literals_list
-- On MOD_ASSIGN reduce production asm_flags -> asm_flags COMMA string_literals_list
-- On MINUS reduce production asm_flags -> asm_flags COMMA string_literals_list
-- On LT reduce production asm_flags -> asm_flags COMMA string_literals_list
-- On LPAREN reduce production asm_flags -> asm_flags COMMA string_literals_list
-- On LONG reduce production asm_flags -> asm_flags COMMA string_literals_list
-- On LEQ reduce production asm_flags -> asm_flags COMMA string_literals_list
-- On LEFT_ASSIGN reduce production asm_flags -> asm_flags COMMA string_literals_list
-- On LEFT reduce production asm_flags -> asm_flags COMMA string_literals_list
-- On LBRACK reduce production asm_flags -> asm_flags COMMA string_literals_list
-- On LBRACE reduce production asm_flags -> asm_flags COMMA string_literals_list
-- On INT reduce production asm_flags -> asm_flags COMMA string_literals_list
-- On INLINE reduce production asm_flags -> asm_flags COMMA string_literals_list
-- On INC reduce production asm_flags -> asm_flags COMMA string_literals_list
-- On IF reduce production asm_flags -> asm_flags COMMA string_literals_list
-- On HAT reduce production asm_flags -> asm_flags COMMA string_literals_list
-- On GT reduce production asm_flags -> asm_flags COMMA string_literals_list
-- On GOTO reduce production asm_flags -> asm_flags COMMA string_literals_list
-- On GEQ reduce production asm_flags -> asm_flags COMMA string_literals_list
-- On FOR reduce production asm_flags -> asm_flags COMMA string_literals_list
-- On FLOAT reduce production asm_flags -> asm_flags COMMA string_literals_list
-- On EXTERN reduce production asm_flags -> asm_flags COMMA string_literals_list
-- On EQEQ reduce production asm_flags -> asm_flags COMMA string_literals_list
-- On EQ reduce production asm_flags -> asm_flags COMMA string_literals_list
-- On EOF reduce production asm_flags -> asm_flags COMMA string_literals_list
-- On ENUM reduce production asm_flags -> asm_flags COMMA string_literals_list
-- On ELSE reduce production asm_flags -> asm_flags COMMA string_literals_list
-- On ELLIPSIS reduce production asm_flags -> asm_flags COMMA string_literals_list
-- On DOUBLE reduce production asm_flags -> asm_flags COMMA string_literals_list
-- On DOT reduce production asm_flags -> asm_flags COMMA string_literals_list
-- On DO reduce production asm_flags -> asm_flags COMMA string_literals_list
-- On DIV_ASSIGN reduce production asm_flags -> asm_flags COMMA string_literals_list
-- On DEFAULT reduce production asm_flags -> asm_flags COMMA string_literals_list
-- On DEC reduce production asm_flags -> asm_flags COMMA string_literals_list
-- On CONTINUE reduce production asm_flags -> asm_flags COMMA string_literals_list
-- On CONSTANT reduce production asm_flags -> asm_flags COMMA string_literals_list
-- On CONST reduce production asm_flags -> asm_flags COMMA string_literals_list
-- On COMMA reduce production asm_flags -> asm_flags COMMA string_literals_list
-- On COLON reduce production asm_flags -> asm_flags COMMA string_literals_list
-- On CHAR reduce production asm_flags -> asm_flags COMMA string_literals_list
-- On CASE reduce production asm_flags -> asm_flags COMMA string_literals_list
-- On BUILTIN_VA_ARG reduce production asm_flags -> asm_flags COMMA string_literals_list
-- On BREAK reduce production asm_flags -> asm_flags COMMA string_literals_list
-- On BARBAR reduce production asm_flags -> asm_flags COMMA string_literals_list
-- On BAR reduce production asm_flags -> asm_flags COMMA string_literals_list
-- On BANG reduce production asm_flags -> asm_flags COMMA string_literals_list
-- On AUTO reduce production asm_flags -> asm_flags COMMA string_literals_list
-- On ATTRIBUTE reduce production asm_flags -> asm_flags COMMA string_literals_list
-- On ASM reduce production asm_flags -> asm_flags COMMA string_literals_list
-- On AND_ASSIGN reduce production asm_flags -> asm_flags COMMA string_literals_list
-- On ANDAND reduce production asm_flags -> asm_flags COMMA string_literals_list
-- On AND reduce production asm_flags -> asm_flags COMMA string_literals_list
-- On ALIGNOF reduce production asm_flags -> asm_flags COMMA string_literals_list
-- On ALIGNAS reduce production asm_flags -> asm_flags COMMA string_literals_list
-- On ADD_ASSIGN reduce production asm_flags -> asm_flags COMMA string_literals_list

State 469:
## Known stack suffix:
## asm_operand
## LR(1) items:
asm_operands_ne -> asm_operand . [ RPAREN COMMA COLON ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production asm_operands_ne -> asm_operand

State 470:
## Known stack suffix:
## ASM asm_attributes LPAREN string_literals_list asm_arguments
## LR(1) items:
asm_statement -> ASM asm_attributes LPAREN string_literals_list asm_arguments . RPAREN SEMICOLON [ WHILE VOLATILE VOID UNSIGNED UNION UNDERSCORE_BOOL TYPEDEF TILDE SWITCH STRUCT STRING_LITERAL STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACE PRE_NAME PRAGMA PLUS PACKED MINUS LPAREN LONG LBRACE INT INLINE INC IF GOTO FOR FLOAT EXTERN ENUM ELSE DOUBLE DO DEFAULT DEC CONTINUE CONSTANT CONST CHAR CASE BUILTIN_VA_ARG BREAK BANG AUTO ATTRIBUTE ASM AND ALIGNOF ALIGNAS ]
## Transitions:
-- On RPAREN shift to state 471
## Reductions:

State 471:
## Known stack suffix:
## ASM asm_attributes LPAREN string_literals_list asm_arguments RPAREN
## LR(1) items:
asm_statement -> ASM asm_attributes LPAREN string_literals_list asm_arguments RPAREN . SEMICOLON [ WHILE VOLATILE VOID UNSIGNED UNION UNDERSCORE_BOOL TYPEDEF TILDE SWITCH STRUCT STRING_LITERAL STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACE PRE_NAME PRAGMA PLUS PACKED MINUS LPAREN LONG LBRACE INT INLINE INC IF GOTO FOR FLOAT EXTERN ENUM ELSE DOUBLE DO DEFAULT DEC CONTINUE CONSTANT CONST CHAR CASE BUILTIN_VA_ARG BREAK BANG AUTO ATTRIBUTE ASM AND ALIGNOF ALIGNAS ]
## Transitions:
-- On SEMICOLON shift to state 472
## Reductions:

State 472:
## Known stack suffix:
## ASM asm_attributes LPAREN string_literals_list asm_arguments RPAREN SEMICOLON
## LR(1) items:
asm_statement -> ASM asm_attributes LPAREN string_literals_list asm_arguments RPAREN SEMICOLON . [ WHILE VOLATILE VOID UNSIGNED UNION UNDERSCORE_BOOL TYPEDEF TILDE SWITCH STRUCT STRING_LITERAL STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACE PRE_NAME PRAGMA PLUS PACKED MINUS LPAREN LONG LBRACE INT INLINE INC IF GOTO FOR FLOAT EXTERN ENUM ELSE DOUBLE DO DEFAULT DEC CONTINUE CONSTANT CONST CHAR CASE BUILTIN_VA_ARG BREAK BANG AUTO ATTRIBUTE ASM AND ALIGNOF ALIGNAS ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production asm_statement -> ASM asm_attributes LPAREN string_literals_list asm_arguments RPAREN SEMICOLON

State 473:
## Known stack suffix:
## CASE conditional_expression COLON statement
## LR(1) items:
labeled_statement -> CASE conditional_expression COLON statement . [ WHILE VOLATILE VOID UNSIGNED UNION UNDERSCORE_BOOL TYPEDEF TILDE SWITCH STRUCT STRING_LITERAL STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACE PRE_NAME PRAGMA PLUS PACKED MINUS LPAREN LONG LBRACE INT INLINE INC IF GOTO FOR FLOAT EXTERN ENUM ELSE DOUBLE DO DEFAULT DEC CONTINUE CONSTANT CONST CHAR CASE BUILTIN_VA_ARG BREAK BANG AUTO ATTRIBUTE ASM AND ALIGNOF ALIGNAS ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production labeled_statement -> CASE conditional_expression COLON statement

State 474:
## Known stack suffix:
## selection_statement
## LR(1) items:
statement -> selection_statement . [ WHILE VOLATILE VOID UNSIGNED UNION UNDERSCORE_BOOL TYPEDEF TILDE SWITCH STRUCT STRING_LITERAL STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACE PRE_NAME PRAGMA PLUS PACKED MINUS LPAREN LONG LBRACE INT INLINE INC IF GOTO FOR FLOAT EXTERN ENUM ELSE DOUBLE DO DEFAULT DEC CONTINUE CONSTANT CONST CHAR CASE BUILTIN_VA_ARG BREAK BANG AUTO ATTRIBUTE ASM AND ALIGNOF ALIGNAS ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production statement -> selection_statement

State 475:
## Known stack suffix:
## save_context
## LR(1) items:
compound_statement -> save_context . LBRACE option(block_item_list) RBRACE [ WHILE VOLATILE VOID UNSIGNED UNION UNDERSCORE_BOOL TYPEDEF TILDE SWITCH STRUCT STRING_LITERAL STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACE PRE_NAME PRAGMA PLUS PACKED MINUS LPAREN LONG LBRACE INT INLINE INC IF GOTO FOR FLOAT EXTERN ENUM ELSE DOUBLE DO DEFAULT DEC CONTINUE CONSTANT CONST CHAR CASE BUILTIN_VA_ARG BREAK BANG AUTO ATTRIBUTE ASM AND ALIGNOF ALIGNAS ]
iteration_statement -> save_context . WHILE LPAREN expression RPAREN statement [ WHILE VOLATILE VOID UNSIGNED UNION UNDERSCORE_BOOL TYPEDEF TILDE SWITCH STRUCT STRING_LITERAL STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACE PRE_NAME PRAGMA PLUS PACKED MINUS LPAREN LONG LBRACE INT INLINE INC IF GOTO FOR FLOAT EXTERN ENUM ELSE DOUBLE DO DEFAULT DEC CONTINUE CONSTANT CONST CHAR CASE BUILTIN_VA_ARG BREAK BANG AUTO ATTRIBUTE ASM AND ALIGNOF ALIGNAS ]
iteration_statement -> save_context . do_statement1 WHILE LPAREN expression RPAREN SEMICOLON [ WHILE VOLATILE VOID UNSIGNED UNION UNDERSCORE_BOOL TYPEDEF TILDE SWITCH STRUCT STRING_LITERAL STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACE PRE_NAME PRAGMA PLUS PACKED MINUS LPAREN LONG LBRACE INT INLINE INC IF GOTO FOR FLOAT EXTERN ENUM ELSE DOUBLE DO DEFAULT DEC CONTINUE CONSTANT CONST CHAR CASE BUILTIN_VA_ARG BREAK BANG AUTO ATTRIBUTE ASM AND ALIGNOF ALIGNAS ]
iteration_statement -> save_context . FOR LPAREN for_statement_header optional(expression,SEMICOLON) optional(expression,RPAREN) statement [ WHILE VOLATILE VOID UNSIGNED UNION UNDERSCORE_BOOL TYPEDEF TILDE SWITCH STRUCT STRING_LITERAL STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACE PRE_NAME PRAGMA PLUS PACKED MINUS LPAREN LONG LBRACE INT INLINE INC IF GOTO FOR FLOAT EXTERN ENUM ELSE DOUBLE DO DEFAULT DEC CONTINUE CONSTANT CONST CHAR CASE BUILTIN_VA_ARG BREAK BANG AUTO ATTRIBUTE ASM AND ALIGNOF ALIGNAS ]
selection_statement -> save_context . ifelse_statement1 statement [ WHILE VOLATILE VOID UNSIGNED UNION UNDERSCORE_BOOL TYPEDEF TILDE SWITCH STRUCT STRING_LITERAL STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACE PRE_NAME PRAGMA PLUS PACKED MINUS LPAREN LONG LBRACE INT INLINE INC IF GOTO FOR FLOAT EXTERN ENUM ELSE DOUBLE DO DEFAULT DEC CONTINUE CONSTANT CONST CHAR CASE BUILTIN_VA_ARG BREAK BANG AUTO ATTRIBUTE ASM AND ALIGNOF ALIGNAS ]
selection_statement -> save_context . IF LPAREN expression RPAREN save_context statement [ WHILE VOLATILE VOID UNSIGNED UNION UNDERSCORE_BOOL TYPEDEF TILDE SWITCH STRUCT STRING_LITERAL STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACE PRE_NAME PRAGMA PLUS PACKED MINUS LPAREN LONG LBRACE INT INLINE INC IF GOTO FOR FLOAT EXTERN ENUM ELSE DOUBLE DO DEFAULT DEC CONTINUE CONSTANT CONST CHAR CASE BUILTIN_VA_ARG BREAK BANG AUTO ATTRIBUTE ASM AND ALIGNOF ALIGNAS ]
selection_statement -> save_context . SWITCH LPAREN expression RPAREN statement [ WHILE VOLATILE VOID UNSIGNED UNION UNDERSCORE_BOOL TYPEDEF TILDE SWITCH STRUCT STRING_LITERAL STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACE PRE_NAME PRAGMA PLUS PACKED MINUS LPAREN LONG LBRACE INT INLINE INC IF GOTO FOR FLOAT EXTERN ENUM ELSE DOUBLE DO DEFAULT DEC CONTINUE CONSTANT CONST CHAR CASE BUILTIN_VA_ARG BREAK BANG AUTO ATTRIBUTE ASM AND ALIGNOF ALIGNAS ]
## Transitions:
-- On WHILE shift to state 476
-- On SWITCH shift to state 492
-- On LBRACE shift to state 419
-- On IF shift to state 497
-- On FOR shift to state 504
-- On save_context shift to state 549
-- On ifelse_statement1 shift to state 552
-- On do_statement1 shift to state 554
## Reductions:
-- On DO reduce production save_context ->

State 476:
## Known stack suffix:
## save_context WHILE
## LR(1) items:
iteration_statement -> save_context WHILE . LPAREN expression RPAREN statement [ WHILE VOLATILE VOID UNSIGNED UNION UNDERSCORE_BOOL TYPEDEF TILDE SWITCH STRUCT STRING_LITERAL STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACE PRE_NAME PRAGMA PLUS PACKED MINUS LPAREN LONG LBRACE INT INLINE INC IF GOTO FOR FLOAT EXTERN ENUM ELSE DOUBLE DO DEFAULT DEC CONTINUE CONSTANT CONST CHAR CASE BUILTIN_VA_ARG BREAK BANG AUTO ATTRIBUTE ASM AND ALIGNOF ALIGNAS ]
## Transitions:
-- On LPAREN shift to state 477
## Reductions:

State 477:
## Known stack suffix:
## save_context WHILE LPAREN
## LR(1) items:
iteration_statement -> save_context WHILE LPAREN . expression RPAREN statement [ WHILE VOLATILE VOID UNSIGNED UNION UNDERSCORE_BOOL TYPEDEF TILDE SWITCH STRUCT STRING_LITERAL STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACE PRE_NAME PRAGMA PLUS PACKED MINUS LPAREN LONG LBRACE INT INLINE INC IF GOTO FOR FLOAT EXTERN ENUM ELSE DOUBLE DO DEFAULT DEC CONTINUE CONSTANT CONST CHAR CASE BUILTIN_VA_ARG BREAK BANG AUTO ATTRIBUTE ASM AND ALIGNOF ALIGNAS ]
## Transitions:
-- On TILDE shift to state 18
-- On STRING_LITERAL shift to state 19
-- On STAR shift to state 20
-- On SIZEOF shift to state 21
-- On PRE_NAME shift to state 22
-- On PLUS shift to state 24
-- On MINUS shift to state 25
-- On LPAREN shift to state 28
-- On INC shift to state 31
-- On DEC shift to state 46
-- On CONSTANT shift to state 47
-- On BUILTIN_VA_ARG shift to state 48
-- On BANG shift to state 50
-- On AND shift to state 51
-- On ALIGNOF shift to state 52
-- On unary_operator shift to state 56
-- On unary_expression shift to state 65
-- On string_literals_list shift to state 58
-- On shift_expression shift to state 78
-- On relational_expression shift to state 94
-- On primary_expression shift to state 60
-- On postfix_expression shift to state 61
-- On multiplicative_expression shift to state 82
-- On logical_or_expression shift to state 102
-- On logical_and_expression shift to state 104
-- On inclusive_or_expression shift to state 120
-- On expression shift to state 478
-- On exclusive_or_expression shift to state 119
-- On equality_expression shift to state 110
-- On conditional_expression shift to state 123
-- On cast_expression shift to state 88
-- On assignment_expression shift to state 127
-- On and_expression shift to state 118
-- On additive_expression shift to state 101
## Reductions:

State 478:
## Known stack suffix:
## save_context WHILE LPAREN expression
## LR(1) items:
expression -> expression . COMMA assignment_expression [ RPAREN COMMA ]
iteration_statement -> save_context WHILE LPAREN expression . RPAREN statement [ WHILE VOLATILE VOID UNSIGNED UNION UNDERSCORE_BOOL TYPEDEF TILDE SWITCH STRUCT STRING_LITERAL STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACE PRE_NAME PRAGMA PLUS PACKED MINUS LPAREN LONG LBRACE INT INLINE INC IF GOTO FOR FLOAT EXTERN ENUM ELSE DOUBLE DO DEFAULT DEC CONTINUE CONSTANT CONST CHAR CASE BUILTIN_VA_ARG BREAK BANG AUTO ATTRIBUTE ASM AND ALIGNOF ALIGNAS ]
## Transitions:
-- On RPAREN shift to state 479
-- On COMMA shift to state 122
## Reductions:

State 479:
## Known stack suffix:
## save_context WHILE LPAREN expression RPAREN
## LR(1) items:
iteration_statement -> save_context WHILE LPAREN expression RPAREN . statement [ WHILE VOLATILE VOID UNSIGNED UNION UNDERSCORE_BOOL TYPEDEF TILDE SWITCH STRUCT STRING_LITERAL STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACE PRE_NAME PRAGMA PLUS PACKED MINUS LPAREN LONG LBRACE INT INLINE INC IF GOTO FOR FLOAT EXTERN ENUM ELSE DOUBLE DO DEFAULT DEC CONTINUE CONSTANT CONST CHAR CASE BUILTIN_VA_ARG BREAK BANG AUTO ATTRIBUTE ASM AND ALIGNOF ALIGNAS ]
## Transitions:
-- On TILDE shift to state 18
-- On STRING_LITERAL shift to state 19
-- On STAR shift to state 20
-- On SIZEOF shift to state 21
-- On RETURN shift to state 421
-- On PRE_NAME shift to state 426
-- On PLUS shift to state 24
-- On MINUS shift to state 25
-- On LPAREN shift to state 28
-- On INC shift to state 31
-- On GOTO shift to state 429
-- On DEFAULT shift to state 432
-- On DEC shift to state 46
-- On CONTINUE shift to state 434
-- On CONSTANT shift to state 47
-- On CASE shift to state 436
-- On BUILTIN_VA_ARG shift to state 48
-- On BREAK shift to state 439
-- On BANG shift to state 50
-- On ASM shift to state 441
-- On AND shift to state 51
-- On ALIGNOF shift to state 52
-- On unary_operator shift to state 56
-- On unary_expression shift to state 65
-- On typedef_name shift to state 42
-- On string_literals_list shift to state 58
-- On statement shift to state 480
-- On shift_expression shift to state 78
-- On selection_statement shift to state 474
-- On save_context shift to state 475
-- On relational_expression shift to state 94
-- On primary_expression shift to state 60
-- On postfix_expression shift to state 61
-- On option(expression) shift to state 481
-- On multiplicative_expression shift to state 82
-- On logical_or_expression shift to state 102
-- On logical_and_expression shift to state 104
-- On labeled_statement shift to state 483
-- On jump_statement shift to state 484
-- On iteration_statement shift to state 485
-- On inclusive_or_expression shift to state 120
-- On general_identifier shift to state 486
-- On expression_statement shift to state 489
-- On expression shift to state 424
-- On exclusive_or_expression shift to state 119
-- On equality_expression shift to state 110
-- On conditional_expression shift to state 123
-- On compound_statement shift to state 490
-- On cast_expression shift to state 88
-- On assignment_expression shift to state 127
-- On asm_statement shift to state 491
-- On and_expression shift to state 118
-- On additive_expression shift to state 101
## Reductions:
-- On WHILE reduce production save_context ->
-- On SWITCH reduce production save_context ->
-- On SEMICOLON reduce production option(expression) ->
-- On LBRACE reduce production save_context ->
-- On IF reduce production save_context ->
-- On FOR reduce production save_context ->
-- On DO reduce production save_context ->

State 480:
## Known stack suffix:
## save_context WHILE LPAREN expression RPAREN statement
## LR(1) items:
iteration_statement -> save_context WHILE LPAREN expression RPAREN statement . [ WHILE VOLATILE VOID UNSIGNED UNION UNDERSCORE_BOOL TYPEDEF TILDE SWITCH STRUCT STRING_LITERAL STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACE PRE_NAME PRAGMA PLUS PACKED MINUS LPAREN LONG LBRACE INT INLINE INC IF GOTO FOR FLOAT EXTERN ENUM ELSE DOUBLE DO DEFAULT DEC CONTINUE CONSTANT CONST CHAR CASE BUILTIN_VA_ARG BREAK BANG AUTO ATTRIBUTE ASM AND ALIGNOF ALIGNAS ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production iteration_statement -> save_context WHILE LPAREN expression RPAREN statement

State 481:
## Known stack suffix:
## option(expression)
## LR(1) items:
expression_statement -> option(expression) . SEMICOLON [ WHILE VOLATILE VOID UNSIGNED UNION UNDERSCORE_BOOL TYPEDEF TILDE SWITCH STRUCT STRING_LITERAL STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACE PRE_NAME PRAGMA PLUS PACKED MINUS LPAREN LONG LBRACE INT INLINE INC IF GOTO FOR FLOAT EXTERN ENUM ELSE DOUBLE DO DEFAULT DEC CONTINUE CONSTANT CONST CHAR CASE BUILTIN_VA_ARG BREAK BANG AUTO ATTRIBUTE ASM AND ALIGNOF ALIGNAS ]
## Transitions:
-- On SEMICOLON shift to state 482
## Reductions:

State 482:
## Known stack suffix:
## option(expression) SEMICOLON
## LR(1) items:
expression_statement -> option(expression) SEMICOLON . [ WHILE VOLATILE VOID UNSIGNED UNION UNDERSCORE_BOOL TYPEDEF TILDE SWITCH STRUCT STRING_LITERAL STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACE PRE_NAME PRAGMA PLUS PACKED MINUS LPAREN LONG LBRACE INT INLINE INC IF GOTO FOR FLOAT EXTERN ENUM ELSE DOUBLE DO DEFAULT DEC CONTINUE CONSTANT CONST CHAR CASE BUILTIN_VA_ARG BREAK BANG AUTO ATTRIBUTE ASM AND ALIGNOF ALIGNAS ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production expression_statement -> option(expression) SEMICOLON

State 483:
## Known stack suffix:
## labeled_statement
## LR(1) items:
statement -> labeled_statement . [ WHILE VOLATILE VOID UNSIGNED UNION UNDERSCORE_BOOL TYPEDEF TILDE SWITCH STRUCT STRING_LITERAL STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACE PRE_NAME PRAGMA PLUS PACKED MINUS LPAREN LONG LBRACE INT INLINE INC IF GOTO FOR FLOAT EXTERN ENUM ELSE DOUBLE DO DEFAULT DEC CONTINUE CONSTANT CONST CHAR CASE BUILTIN_VA_ARG BREAK BANG AUTO ATTRIBUTE ASM AND ALIGNOF ALIGNAS ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production statement -> labeled_statement

State 484:
## Known stack suffix:
## jump_statement
## LR(1) items:
statement -> jump_statement . [ WHILE VOLATILE VOID UNSIGNED UNION UNDERSCORE_BOOL TYPEDEF TILDE SWITCH STRUCT STRING_LITERAL STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACE PRE_NAME PRAGMA PLUS PACKED MINUS LPAREN LONG LBRACE INT INLINE INC IF GOTO FOR FLOAT EXTERN ENUM ELSE DOUBLE DO DEFAULT DEC CONTINUE CONSTANT CONST CHAR CASE BUILTIN_VA_ARG BREAK BANG AUTO ATTRIBUTE ASM AND ALIGNOF ALIGNAS ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production statement -> jump_statement

State 485:
## Known stack suffix:
## iteration_statement
## LR(1) items:
statement -> iteration_statement . [ WHILE VOLATILE VOID UNSIGNED UNION UNDERSCORE_BOOL TYPEDEF TILDE SWITCH STRUCT STRING_LITERAL STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACE PRE_NAME PRAGMA PLUS PACKED MINUS LPAREN LONG LBRACE INT INLINE INC IF GOTO FOR FLOAT EXTERN ENUM ELSE DOUBLE DO DEFAULT DEC CONTINUE CONSTANT CONST CHAR CASE BUILTIN_VA_ARG BREAK BANG AUTO ATTRIBUTE ASM AND ALIGNOF ALIGNAS ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production statement -> iteration_statement

State 486:
## Known stack suffix:
## general_identifier
## LR(1) items:
labeled_statement -> general_identifier . COLON statement [ WHILE VOLATILE VOID UNSIGNED UNION UNDERSCORE_BOOL TYPEDEF TILDE SWITCH STRUCT STRING_LITERAL STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACE PRE_NAME PRAGMA PLUS PACKED MINUS LPAREN LONG LBRACE INT INLINE INC IF GOTO FOR FLOAT EXTERN ENUM ELSE DOUBLE DO DEFAULT DEC CONTINUE CONSTANT CONST CHAR CASE BUILTIN_VA_ARG BREAK BANG AUTO ATTRIBUTE ASM AND ALIGNOF ALIGNAS ]
## Transitions:
-- On COLON shift to state 487
## Reductions:

State 487:
## Known stack suffix:
## general_identifier COLON
## LR(1) items:
labeled_statement -> general_identifier COLON . statement [ WHILE VOLATILE VOID UNSIGNED UNION UNDERSCORE_BOOL TYPEDEF TILDE SWITCH STRUCT STRING_LITERAL STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACE PRE_NAME PRAGMA PLUS PACKED MINUS LPAREN LONG LBRACE INT INLINE INC IF GOTO FOR FLOAT EXTERN ENUM ELSE DOUBLE DO DEFAULT DEC CONTINUE CONSTANT CONST CHAR CASE BUILTIN_VA_ARG BREAK BANG AUTO ATTRIBUTE ASM AND ALIGNOF ALIGNAS ]
## Transitions:
-- On TILDE shift to state 18
-- On STRING_LITERAL shift to state 19
-- On STAR shift to state 20
-- On SIZEOF shift to state 21
-- On RETURN shift to state 421
-- On PRE_NAME shift to state 426
-- On PLUS shift to state 24
-- On MINUS shift to state 25
-- On LPAREN shift to state 28
-- On INC shift to state 31
-- On GOTO shift to state 429
-- On DEFAULT shift to state 432
-- On DEC shift to state 46
-- On CONTINUE shift to state 434
-- On CONSTANT shift to state 47
-- On CASE shift to state 436
-- On BUILTIN_VA_ARG shift to state 48
-- On BREAK shift to state 439
-- On BANG shift to state 50
-- On ASM shift to state 441
-- On AND shift to state 51
-- On ALIGNOF shift to state 52
-- On unary_operator shift to state 56
-- On unary_expression shift to state 65
-- On typedef_name shift to state 42
-- On string_literals_list shift to state 58
-- On statement shift to state 488
-- On shift_expression shift to state 78
-- On selection_statement shift to state 474
-- On save_context shift to state 475
-- On relational_expression shift to state 94
-- On primary_expression shift to state 60
-- On postfix_expression shift to state 61
-- On option(expression) shift to state 481
-- On multiplicative_expression shift to state 82
-- On logical_or_expression shift to state 102
-- On logical_and_expression shift to state 104
-- On labeled_statement shift to state 483
-- On jump_statement shift to state 484
-- On iteration_statement shift to state 485
-- On inclusive_or_expression shift to state 120
-- On general_identifier shift to state 486
-- On expression_statement shift to state 489
-- On expression shift to state 424
-- On exclusive_or_expression shift to state 119
-- On equality_expression shift to state 110
-- On conditional_expression shift to state 123
-- On compound_statement shift to state 490
-- On cast_expression shift to state 88
-- On assignment_expression shift to state 127
-- On asm_statement shift to state 491
-- On and_expression shift to state 118
-- On additive_expression shift to state 101
## Reductions:
-- On WHILE reduce production save_context ->
-- On SWITCH reduce production save_context ->
-- On SEMICOLON reduce production option(expression) ->
-- On LBRACE reduce production save_context ->
-- On IF reduce production save_context ->
-- On FOR reduce production save_context ->
-- On DO reduce production save_context ->

State 488:
## Known stack suffix:
## general_identifier COLON statement
## LR(1) items:
labeled_statement -> general_identifier COLON statement . [ WHILE VOLATILE VOID UNSIGNED UNION UNDERSCORE_BOOL TYPEDEF TILDE SWITCH STRUCT STRING_LITERAL STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACE PRE_NAME PRAGMA PLUS PACKED MINUS LPAREN LONG LBRACE INT INLINE INC IF GOTO FOR FLOAT EXTERN ENUM ELSE DOUBLE DO DEFAULT DEC CONTINUE CONSTANT CONST CHAR CASE BUILTIN_VA_ARG BREAK BANG AUTO ATTRIBUTE ASM AND ALIGNOF ALIGNAS ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production labeled_statement -> general_identifier COLON statement

State 489:
## Known stack suffix:
## expression_statement
## LR(1) items:
statement -> expression_statement . [ WHILE VOLATILE VOID UNSIGNED UNION UNDERSCORE_BOOL TYPEDEF TILDE SWITCH STRUCT STRING_LITERAL STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACE PRE_NAME PRAGMA PLUS PACKED MINUS LPAREN LONG LBRACE INT INLINE INC IF GOTO FOR FLOAT EXTERN ENUM ELSE DOUBLE DO DEFAULT DEC CONTINUE CONSTANT CONST CHAR CASE BUILTIN_VA_ARG BREAK BANG AUTO ATTRIBUTE ASM AND ALIGNOF ALIGNAS ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production statement -> expression_statement

State 490:
## Known stack suffix:
## compound_statement
## LR(1) items:
statement -> compound_statement . [ WHILE VOLATILE VOID UNSIGNED UNION UNDERSCORE_BOOL TYPEDEF TILDE SWITCH STRUCT STRING_LITERAL STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACE PRE_NAME PRAGMA PLUS PACKED MINUS LPAREN LONG LBRACE INT INLINE INC IF GOTO FOR FLOAT EXTERN ENUM ELSE DOUBLE DO DEFAULT DEC CONTINUE CONSTANT CONST CHAR CASE BUILTIN_VA_ARG BREAK BANG AUTO ATTRIBUTE ASM AND ALIGNOF ALIGNAS ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production statement -> compound_statement

State 491:
## Known stack suffix:
## asm_statement
## LR(1) items:
statement -> asm_statement . [ WHILE VOLATILE VOID UNSIGNED UNION UNDERSCORE_BOOL TYPEDEF TILDE SWITCH STRUCT STRING_LITERAL STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACE PRE_NAME PRAGMA PLUS PACKED MINUS LPAREN LONG LBRACE INT INLINE INC IF GOTO FOR FLOAT EXTERN ENUM ELSE DOUBLE DO DEFAULT DEC CONTINUE CONSTANT CONST CHAR CASE BUILTIN_VA_ARG BREAK BANG AUTO ATTRIBUTE ASM AND ALIGNOF ALIGNAS ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production statement -> asm_statement

State 492:
## Known stack suffix:
## save_context SWITCH
## LR(1) items:
selection_statement -> save_context SWITCH . LPAREN expression RPAREN statement [ WHILE VOLATILE VOID UNSIGNED UNION UNDERSCORE_BOOL TYPEDEF TILDE SWITCH STRUCT STRING_LITERAL STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACE PRE_NAME PRAGMA PLUS PACKED MINUS LPAREN LONG LBRACE INT INLINE INC IF GOTO FOR FLOAT EXTERN ENUM ELSE DOUBLE DO DEFAULT DEC CONTINUE CONSTANT CONST CHAR CASE BUILTIN_VA_ARG BREAK BANG AUTO ATTRIBUTE ASM AND ALIGNOF ALIGNAS ]
## Transitions:
-- On LPAREN shift to state 493
## Reductions:

State 493:
## Known stack suffix:
## save_context SWITCH LPAREN
## LR(1) items:
selection_statement -> save_context SWITCH LPAREN . expression RPAREN statement [ WHILE VOLATILE VOID UNSIGNED UNION UNDERSCORE_BOOL TYPEDEF TILDE SWITCH STRUCT STRING_LITERAL STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACE PRE_NAME PRAGMA PLUS PACKED MINUS LPAREN LONG LBRACE INT INLINE INC IF GOTO FOR FLOAT EXTERN ENUM ELSE DOUBLE DO DEFAULT DEC CONTINUE CONSTANT CONST CHAR CASE BUILTIN_VA_ARG BREAK BANG AUTO ATTRIBUTE ASM AND ALIGNOF ALIGNAS ]
## Transitions:
-- On TILDE shift to state 18
-- On STRING_LITERAL shift to state 19
-- On STAR shift to state 20
-- On SIZEOF shift to state 21
-- On PRE_NAME shift to state 22
-- On PLUS shift to state 24
-- On MINUS shift to state 25
-- On LPAREN shift to state 28
-- On INC shift to state 31
-- On DEC shift to state 46
-- On CONSTANT shift to state 47
-- On BUILTIN_VA_ARG shift to state 48
-- On BANG shift to state 50
-- On AND shift to state 51
-- On ALIGNOF shift to state 52
-- On unary_operator shift to state 56
-- On unary_expression shift to state 65
-- On string_literals_list shift to state 58
-- On shift_expression shift to state 78
-- On relational_expression shift to state 94
-- On primary_expression shift to state 60
-- On postfix_expression shift to state 61
-- On multiplicative_expression shift to state 82
-- On logical_or_expression shift to state 102
-- On logical_and_expression shift to state 104
-- On inclusive_or_expression shift to state 120
-- On expression shift to state 494
-- On exclusive_or_expression shift to state 119
-- On equality_expression shift to state 110
-- On conditional_expression shift to state 123
-- On cast_expression shift to state 88
-- On assignment_expression shift to state 127
-- On and_expression shift to state 118
-- On additive_expression shift to state 101
## Reductions:

State 494:
## Known stack suffix:
## save_context SWITCH LPAREN expression
## LR(1) items:
expression -> expression . COMMA assignment_expression [ RPAREN COMMA ]
selection_statement -> save_context SWITCH LPAREN expression . RPAREN statement [ WHILE VOLATILE VOID UNSIGNED UNION UNDERSCORE_BOOL TYPEDEF TILDE SWITCH STRUCT STRING_LITERAL STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACE PRE_NAME PRAGMA PLUS PACKED MINUS LPAREN LONG LBRACE INT INLINE INC IF GOTO FOR FLOAT EXTERN ENUM ELSE DOUBLE DO DEFAULT DEC CONTINUE CONSTANT CONST CHAR CASE BUILTIN_VA_ARG BREAK BANG AUTO ATTRIBUTE ASM AND ALIGNOF ALIGNAS ]
## Transitions:
-- On RPAREN shift to state 495
-- On COMMA shift to state 122
## Reductions:

State 495:
## Known stack suffix:
## save_context SWITCH LPAREN expression RPAREN
## LR(1) items:
selection_statement -> save_context SWITCH LPAREN expression RPAREN . statement [ WHILE VOLATILE VOID UNSIGNED UNION UNDERSCORE_BOOL TYPEDEF TILDE SWITCH STRUCT STRING_LITERAL STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACE PRE_NAME PRAGMA PLUS PACKED MINUS LPAREN LONG LBRACE INT INLINE INC IF GOTO FOR FLOAT EXTERN ENUM ELSE DOUBLE DO DEFAULT DEC CONTINUE CONSTANT CONST CHAR CASE BUILTIN_VA_ARG BREAK BANG AUTO ATTRIBUTE ASM AND ALIGNOF ALIGNAS ]
## Transitions:
-- On TILDE shift to state 18
-- On STRING_LITERAL shift to state 19
-- On STAR shift to state 20
-- On SIZEOF shift to state 21
-- On RETURN shift to state 421
-- On PRE_NAME shift to state 426
-- On PLUS shift to state 24
-- On MINUS shift to state 25
-- On LPAREN shift to state 28
-- On INC shift to state 31
-- On GOTO shift to state 429
-- On DEFAULT shift to state 432
-- On DEC shift to state 46
-- On CONTINUE shift to state 434
-- On CONSTANT shift to state 47
-- On CASE shift to state 436
-- On BUILTIN_VA_ARG shift to state 48
-- On BREAK shift to state 439
-- On BANG shift to state 50
-- On ASM shift to state 441
-- On AND shift to state 51
-- On ALIGNOF shift to state 52
-- On unary_operator shift to state 56
-- On unary_expression shift to state 65
-- On typedef_name shift to state 42
-- On string_literals_list shift to state 58
-- On statement shift to state 496
-- On shift_expression shift to state 78
-- On selection_statement shift to state 474
-- On save_context shift to state 475
-- On relational_expression shift to state 94
-- On primary_expression shift to state 60
-- On postfix_expression shift to state 61
-- On option(expression) shift to state 481
-- On multiplicative_expression shift to state 82
-- On logical_or_expression shift to state 102
-- On logical_and_expression shift to state 104
-- On labeled_statement shift to state 483
-- On jump_statement shift to state 484
-- On iteration_statement shift to state 485
-- On inclusive_or_expression shift to state 120
-- On general_identifier shift to state 486
-- On expression_statement shift to state 489
-- On expression shift to state 424
-- On exclusive_or_expression shift to state 119
-- On equality_expression shift to state 110
-- On conditional_expression shift to state 123
-- On compound_statement shift to state 490
-- On cast_expression shift to state 88
-- On assignment_expression shift to state 127
-- On asm_statement shift to state 491
-- On and_expression shift to state 118
-- On additive_expression shift to state 101
## Reductions:
-- On WHILE reduce production save_context ->
-- On SWITCH reduce production save_context ->
-- On SEMICOLON reduce production option(expression) ->
-- On LBRACE reduce production save_context ->
-- On IF reduce production save_context ->
-- On FOR reduce production save_context ->
-- On DO reduce production save_context ->

State 496:
## Known stack suffix:
## save_context SWITCH LPAREN expression RPAREN statement
## LR(1) items:
selection_statement -> save_context SWITCH LPAREN expression RPAREN statement . [ WHILE VOLATILE VOID UNSIGNED UNION UNDERSCORE_BOOL TYPEDEF TILDE SWITCH STRUCT STRING_LITERAL STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACE PRE_NAME PRAGMA PLUS PACKED MINUS LPAREN LONG LBRACE INT INLINE INC IF GOTO FOR FLOAT EXTERN ENUM ELSE DOUBLE DO DEFAULT DEC CONTINUE CONSTANT CONST CHAR CASE BUILTIN_VA_ARG BREAK BANG AUTO ATTRIBUTE ASM AND ALIGNOF ALIGNAS ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production selection_statement -> save_context SWITCH LPAREN expression RPAREN statement

State 497:
## Known stack suffix:
## save_context IF
## LR(1) items:
ifelse_statement1 -> IF . LPAREN expression RPAREN save_context statement ELSE [ WHILE TILDE SWITCH STRING_LITERAL STAR SIZEOF SEMICOLON RETURN PRE_NAME PLUS MINUS LPAREN LBRACE INC IF GOTO FOR DO DEFAULT DEC CONTINUE CONSTANT CASE BUILTIN_VA_ARG BREAK BANG ASM AND ALIGNOF ]
selection_statement -> save_context IF . LPAREN expression RPAREN save_context statement [ WHILE VOLATILE VOID UNSIGNED UNION UNDERSCORE_BOOL TYPEDEF TILDE SWITCH STRUCT STRING_LITERAL STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACE PRE_NAME PRAGMA PLUS PACKED MINUS LPAREN LONG LBRACE INT INLINE INC IF GOTO FOR FLOAT EXTERN ENUM ELSE DOUBLE DO DEFAULT DEC CONTINUE CONSTANT CONST CHAR CASE BUILTIN_VA_ARG BREAK BANG AUTO ATTRIBUTE ASM AND ALIGNOF ALIGNAS ]
## Transitions:
-- On LPAREN shift to state 498
## Reductions:

State 498:
## Known stack suffix:
## save_context IF LPAREN
## LR(1) items:
ifelse_statement1 -> IF LPAREN . expression RPAREN save_context statement ELSE [ WHILE TILDE SWITCH STRING_LITERAL STAR SIZEOF SEMICOLON RETURN PRE_NAME PLUS MINUS LPAREN LBRACE INC IF GOTO FOR DO DEFAULT DEC CONTINUE CONSTANT CASE BUILTIN_VA_ARG BREAK BANG ASM AND ALIGNOF ]
selection_statement -> save_context IF LPAREN . expression RPAREN save_context statement [ WHILE VOLATILE VOID UNSIGNED UNION UNDERSCORE_BOOL TYPEDEF TILDE SWITCH STRUCT STRING_LITERAL STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACE PRE_NAME PRAGMA PLUS PACKED MINUS LPAREN LONG LBRACE INT INLINE INC IF GOTO FOR FLOAT EXTERN ENUM ELSE DOUBLE DO DEFAULT DEC CONTINUE CONSTANT CONST CHAR CASE BUILTIN_VA_ARG BREAK BANG AUTO ATTRIBUTE ASM AND ALIGNOF ALIGNAS ]
## Transitions:
-- On TILDE shift to state 18
-- On STRING_LITERAL shift to state 19
-- On STAR shift to state 20
-- On SIZEOF shift to state 21
-- On PRE_NAME shift to state 22
-- On PLUS shift to state 24
-- On MINUS shift to state 25
-- On LPAREN shift to state 28
-- On INC shift to state 31
-- On DEC shift to state 46
-- On CONSTANT shift to state 47
-- On BUILTIN_VA_ARG shift to state 48
-- On BANG shift to state 50
-- On AND shift to state 51
-- On ALIGNOF shift to state 52
-- On unary_operator shift to state 56
-- On unary_expression shift to state 65
-- On string_literals_list shift to state 58
-- On shift_expression shift to state 78
-- On relational_expression shift to state 94
-- On primary_expression shift to state 60
-- On postfix_expression shift to state 61
-- On multiplicative_expression shift to state 82
-- On logical_or_expression shift to state 102
-- On logical_and_expression shift to state 104
-- On inclusive_or_expression shift to state 120
-- On expression shift to state 499
-- On exclusive_or_expression shift to state 119
-- On equality_expression shift to state 110
-- On conditional_expression shift to state 123
-- On cast_expression shift to state 88
-- On assignment_expression shift to state 127
-- On and_expression shift to state 118
-- On additive_expression shift to state 101
## Reductions:

State 499:
## Known stack suffix:
## save_context IF LPAREN expression
## LR(1) items:
expression -> expression . COMMA assignment_expression [ RPAREN COMMA ]
ifelse_statement1 -> IF LPAREN expression . RPAREN save_context statement ELSE [ WHILE TILDE SWITCH STRING_LITERAL STAR SIZEOF SEMICOLON RETURN PRE_NAME PLUS MINUS LPAREN LBRACE INC IF GOTO FOR DO DEFAULT DEC CONTINUE CONSTANT CASE BUILTIN_VA_ARG BREAK BANG ASM AND ALIGNOF ]
selection_statement -> save_context IF LPAREN expression . RPAREN save_context statement [ WHILE VOLATILE VOID UNSIGNED UNION UNDERSCORE_BOOL TYPEDEF TILDE SWITCH STRUCT STRING_LITERAL STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACE PRE_NAME PRAGMA PLUS PACKED MINUS LPAREN LONG LBRACE INT INLINE INC IF GOTO FOR FLOAT EXTERN ENUM ELSE DOUBLE DO DEFAULT DEC CONTINUE CONSTANT CONST CHAR CASE BUILTIN_VA_ARG BREAK BANG AUTO ATTRIBUTE ASM AND ALIGNOF ALIGNAS ]
## Transitions:
-- On RPAREN shift to state 500
-- On COMMA shift to state 122
## Reductions:

State 500:
## Known stack suffix:
## save_context IF LPAREN expression RPAREN
## LR(1) items:
ifelse_statement1 -> IF LPAREN expression RPAREN . save_context statement ELSE [ WHILE TILDE SWITCH STRING_LITERAL STAR SIZEOF SEMICOLON RETURN PRE_NAME PLUS MINUS LPAREN LBRACE INC IF GOTO FOR DO DEFAULT DEC CONTINUE CONSTANT CASE BUILTIN_VA_ARG BREAK BANG ASM AND ALIGNOF ]
selection_statement -> save_context IF LPAREN expression RPAREN . save_context statement [ WHILE VOLATILE VOID UNSIGNED UNION UNDERSCORE_BOOL TYPEDEF TILDE SWITCH STRUCT STRING_LITERAL STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACE PRE_NAME PRAGMA PLUS PACKED MINUS LPAREN LONG LBRACE INT INLINE INC IF GOTO FOR FLOAT EXTERN ENUM ELSE DOUBLE DO DEFAULT DEC CONTINUE CONSTANT CONST CHAR CASE BUILTIN_VA_ARG BREAK BANG AUTO ATTRIBUTE ASM AND ALIGNOF ALIGNAS ]
## Transitions:
-- On save_context shift to state 501
## Default reduction:
-- After reading the next token, reduce production save_context ->

State 501:
## Known stack suffix:
## save_context IF LPAREN expression RPAREN save_context
## LR(1) items:
ifelse_statement1 -> IF LPAREN expression RPAREN save_context . statement ELSE [ WHILE TILDE SWITCH STRING_LITERAL STAR SIZEOF SEMICOLON RETURN PRE_NAME PLUS MINUS LPAREN LBRACE INC IF GOTO FOR DO DEFAULT DEC CONTINUE CONSTANT CASE BUILTIN_VA_ARG BREAK BANG ASM AND ALIGNOF ]
selection_statement -> save_context IF LPAREN expression RPAREN save_context . statement [ WHILE VOLATILE VOID UNSIGNED UNION UNDERSCORE_BOOL TYPEDEF TILDE SWITCH STRUCT STRING_LITERAL STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACE PRE_NAME PRAGMA PLUS PACKED MINUS LPAREN LONG LBRACE INT INLINE INC IF GOTO FOR FLOAT EXTERN ENUM ELSE DOUBLE DO DEFAULT DEC CONTINUE CONSTANT CONST CHAR CASE BUILTIN_VA_ARG BREAK BANG AUTO ATTRIBUTE ASM AND ALIGNOF ALIGNAS ]
## Transitions:
-- On TILDE shift to state 18
-- On STRING_LITERAL shift to state 19
-- On STAR shift to state 20
-- On SIZEOF shift to state 21
-- On RETURN shift to state 421
-- On PRE_NAME shift to state 426
-- On PLUS shift to state 24
-- On MINUS shift to state 25
-- On LPAREN shift to state 28
-- On INC shift to state 31
-- On GOTO shift to state 429
-- On DEFAULT shift to state 432
-- On DEC shift to state 46
-- On CONTINUE shift to state 434
-- On CONSTANT shift to state 47
-- On CASE shift to state 436
-- On BUILTIN_VA_ARG shift to state 48
-- On BREAK shift to state 439
-- On BANG shift to state 50
-- On ASM shift to state 441
-- On AND shift to state 51
-- On ALIGNOF shift to state 52
-- On unary_operator shift to state 56
-- On unary_expression shift to state 65
-- On typedef_name shift to state 42
-- On string_literals_list shift to state 58
-- On statement shift to state 502
-- On shift_expression shift to state 78
-- On selection_statement shift to state 474
-- On save_context shift to state 475
-- On relational_expression shift to state 94
-- On primary_expression shift to state 60
-- On postfix_expression shift to state 61
-- On option(expression) shift to state 481
-- On multiplicative_expression shift to state 82
-- On logical_or_expression shift to state 102
-- On logical_and_expression shift to state 104
-- On labeled_statement shift to state 483
-- On jump_statement shift to state 484
-- On iteration_statement shift to state 485
-- On inclusive_or_expression shift to state 120
-- On general_identifier shift to state 486
-- On expression_statement shift to state 489
-- On expression shift to state 424
-- On exclusive_or_expression shift to state 119
-- On equality_expression shift to state 110
-- On conditional_expression shift to state 123
-- On compound_statement shift to state 490
-- On cast_expression shift to state 88
-- On assignment_expression shift to state 127
-- On asm_statement shift to state 491
-- On and_expression shift to state 118
-- On additive_expression shift to state 101
## Reductions:
-- On WHILE reduce production save_context ->
-- On SWITCH reduce production save_context ->
-- On SEMICOLON reduce production option(expression) ->
-- On LBRACE reduce production save_context ->
-- On IF reduce production save_context ->
-- On FOR reduce production save_context ->
-- On DO reduce production save_context ->

State 502:
## Known stack suffix:
## save_context IF LPAREN expression RPAREN save_context statement
## LR(1) items:
ifelse_statement1 -> IF LPAREN expression RPAREN save_context statement . ELSE [ WHILE TILDE SWITCH STRING_LITERAL STAR SIZEOF SEMICOLON RETURN PRE_NAME PLUS MINUS LPAREN LBRACE INC IF GOTO FOR DO DEFAULT DEC CONTINUE CONSTANT CASE BUILTIN_VA_ARG BREAK BANG ASM AND ALIGNOF ]
selection_statement -> save_context IF LPAREN expression RPAREN save_context statement . [ WHILE VOLATILE VOID UNSIGNED UNION UNDERSCORE_BOOL TYPEDEF TILDE SWITCH STRUCT STRING_LITERAL STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACE PRE_NAME PRAGMA PLUS PACKED MINUS LPAREN LONG LBRACE INT INLINE INC IF GOTO FOR FLOAT EXTERN ENUM ELSE DOUBLE DO DEFAULT DEC CONTINUE CONSTANT CONST CHAR CASE BUILTIN_VA_ARG BREAK BANG AUTO ATTRIBUTE ASM AND ALIGNOF ALIGNAS ]
## Transitions:
-- On ELSE shift to state 503
## Reductions:
-- On XOR_ASSIGN reduce production selection_statement -> save_context IF LPAREN expression RPAREN save_context statement
-- On WHILE reduce production selection_statement -> save_context IF LPAREN expression RPAREN save_context statement
-- On VOLATILE reduce production selection_statement -> save_context IF LPAREN expression RPAREN save_context statement
-- On VOID reduce production selection_statement -> save_context IF LPAREN expression RPAREN save_context statement
-- On VAR_NAME reduce production selection_statement -> save_context IF LPAREN expression RPAREN save_context statement
-- On UNSIGNED reduce production selection_statement -> save_context IF LPAREN expression RPAREN save_context statement
-- On UNION reduce production selection_statement -> save_context IF LPAREN expression RPAREN save_context statement
-- On UNDERSCORE_BOOL reduce production selection_statement -> save_context IF LPAREN expression RPAREN save_context statement
-- On TYPEDEF_NAME reduce production selection_statement -> save_context IF LPAREN expression RPAREN save_context statement
-- On TYPEDEF reduce production selection_statement -> save_context IF LPAREN expression RPAREN save_context statement
-- On TILDE reduce production selection_statement -> save_context IF LPAREN expression RPAREN save_context statement
-- On SWITCH reduce production selection_statement -> save_context IF LPAREN expression RPAREN save_context statement
-- On SUB_ASSIGN reduce production selection_statement -> save_context IF LPAREN expression RPAREN save_context statement
-- On STRUCT reduce production selection_statement -> save_context IF LPAREN expression RPAREN save_context statement
-- On STRING_LITERAL reduce production selection_statement -> save_context IF LPAREN expression RPAREN save_context statement
-- On STATIC reduce production selection_statement -> save_context IF LPAREN expression RPAREN save_context statement
-- On STAR reduce production selection_statement -> save_context IF LPAREN expression RPAREN save_context statement
-- On SLASH reduce production selection_statement -> save_context IF LPAREN expression RPAREN save_context statement
-- On SIZEOF reduce production selection_statement -> save_context IF LPAREN expression RPAREN save_context statement
-- On SIGNED reduce production selection_statement -> save_context IF LPAREN expression RPAREN save_context statement
-- On SHORT reduce production selection_statement -> save_context IF LPAREN expression RPAREN save_context statement
-- On SEMICOLON reduce production selection_statement -> save_context IF LPAREN expression RPAREN save_context statement
-- On RPAREN reduce production selection_statement -> save_context IF LPAREN expression RPAREN save_context statement
-- On RIGHT_ASSIGN reduce production selection_statement -> save_context IF LPAREN expression RPAREN save_context statement
-- On RIGHT reduce production selection_statement -> save_context IF LPAREN expression RPAREN save_context statement
-- On RETURN reduce production selection_statement -> save_context IF LPAREN expression RPAREN save_context statement
-- On RESTRICT reduce production selection_statement -> save_context IF LPAREN expression RPAREN save_context statement
-- On REGISTER reduce production selection_statement -> save_context IF LPAREN expression RPAREN save_context statement
-- On RBRACK reduce production selection_statement -> save_context IF LPAREN expression RPAREN save_context statement
-- On RBRACE reduce production selection_statement -> save_context IF LPAREN expression RPAREN save_context statement
-- On QUESTION reduce production selection_statement -> save_context IF LPAREN expression RPAREN save_context statement
-- On PTR reduce production selection_statement -> save_context IF LPAREN expression RPAREN save_context statement
-- On PRE_NAME reduce production selection_statement -> save_context IF LPAREN expression RPAREN save_context statement
-- On PRAGMA reduce production selection_statement -> save_context IF LPAREN expression RPAREN save_context statement
-- On PLUS reduce production selection_statement -> save_context IF LPAREN expression RPAREN save_context statement
-- On PERCENT reduce production selection_statement -> save_context IF LPAREN expression RPAREN save_context statement
-- On PACKED reduce production selection_statement -> save_context IF LPAREN expression RPAREN save_context statement
-- On OR_ASSIGN reduce production selection_statement -> save_context IF LPAREN expression RPAREN save_context statement
-- On NEQ reduce production selection_statement -> save_context IF LPAREN expression RPAREN save_context statement
-- On MUL_ASSIGN reduce production selection_statement -> save_context IF LPAREN expression RPAREN save_context statement
-- On MOD_ASSIGN reduce production selection_statement -> save_context IF LPAREN expression RPAREN save_context statement
-- On MINUS reduce production selection_statement -> save_context IF LPAREN expression RPAREN save_context statement
-- On LT reduce production selection_statement -> save_context IF LPAREN expression RPAREN save_context statement
-- On LPAREN reduce production selection_statement -> save_context IF LPAREN expression RPAREN save_context statement
-- On LONG reduce production selection_statement -> save_context IF LPAREN expression RPAREN save_context statement
-- On LEQ reduce production selection_statement -> save_context IF LPAREN expression RPAREN save_context statement
-- On LEFT_ASSIGN reduce production selection_statement -> save_context IF LPAREN expression RPAREN save_context statement
-- On LEFT reduce production selection_statement -> save_context IF LPAREN expression RPAREN save_context statement
-- On LBRACK reduce production selection_statement -> save_context IF LPAREN expression RPAREN save_context statement
-- On LBRACE reduce production selection_statement -> save_context IF LPAREN expression RPAREN save_context statement
-- On INT reduce production selection_statement -> save_context IF LPAREN expression RPAREN save_context statement
-- On INLINE reduce production selection_statement -> save_context IF LPAREN expression RPAREN save_context statement
-- On INC reduce production selection_statement -> save_context IF LPAREN expression RPAREN save_context statement
-- On IF reduce production selection_statement -> save_context IF LPAREN expression RPAREN save_context statement
-- On HAT reduce production selection_statement -> save_context IF LPAREN expression RPAREN save_context statement
-- On GT reduce production selection_statement -> save_context IF LPAREN expression RPAREN save_context statement
-- On GOTO reduce production selection_statement -> save_context IF LPAREN expression RPAREN save_context statement
-- On GEQ reduce production selection_statement -> save_context IF LPAREN expression RPAREN save_context statement
-- On FOR reduce production selection_statement -> save_context IF LPAREN expression RPAREN save_context statement
-- On FLOAT reduce production selection_statement -> save_context IF LPAREN expression RPAREN save_context statement
-- On EXTERN reduce production selection_statement -> save_context IF LPAREN expression RPAREN save_context statement
-- On EQEQ reduce production selection_statement -> save_context IF LPAREN expression RPAREN save_context statement
-- On EQ reduce production selection_statement -> save_context IF LPAREN expression RPAREN save_context statement
-- On EOF reduce production selection_statement -> save_context IF LPAREN expression RPAREN save_context statement
-- On ENUM reduce production selection_statement -> save_context IF LPAREN expression RPAREN save_context statement
-- On ELLIPSIS reduce production selection_statement -> save_context IF LPAREN expression RPAREN save_context statement
-- On DOUBLE reduce production selection_statement -> save_context IF LPAREN expression RPAREN save_context statement
-- On DOT reduce production selection_statement -> save_context IF LPAREN expression RPAREN save_context statement
-- On DO reduce production selection_statement -> save_context IF LPAREN expression RPAREN save_context statement
-- On DIV_ASSIGN reduce production selection_statement -> save_context IF LPAREN expression RPAREN save_context statement
-- On DEFAULT reduce production selection_statement -> save_context IF LPAREN expression RPAREN save_context statement
-- On DEC reduce production selection_statement -> save_context IF LPAREN expression RPAREN save_context statement
-- On CONTINUE reduce production selection_statement -> save_context IF LPAREN expression RPAREN save_context statement
-- On CONSTANT reduce production selection_statement -> save_context IF LPAREN expression RPAREN save_context statement
-- On CONST reduce production selection_statement -> save_context IF LPAREN expression RPAREN save_context statement
-- On COMMA reduce production selection_statement -> save_context IF LPAREN expression RPAREN save_context statement
-- On COLON reduce production selection_statement -> save_context IF LPAREN expression RPAREN save_context statement
-- On CHAR reduce production selection_statement -> save_context IF LPAREN expression RPAREN save_context statement
-- On CASE reduce production selection_statement -> save_context IF LPAREN expression RPAREN save_context statement
-- On BUILTIN_VA_ARG reduce production selection_statement -> save_context IF LPAREN expression RPAREN save_context statement
-- On BREAK reduce production selection_statement -> save_context IF LPAREN expression RPAREN save_context statement
-- On BARBAR reduce production selection_statement -> save_context IF LPAREN expression RPAREN save_context statement
-- On BAR reduce production selection_statement -> save_context IF LPAREN expression RPAREN save_context statement
-- On BANG reduce production selection_statement -> save_context IF LPAREN expression RPAREN save_context statement
-- On AUTO reduce production selection_statement -> save_context IF LPAREN expression RPAREN save_context statement
-- On ATTRIBUTE reduce production selection_statement -> save_context IF LPAREN expression RPAREN save_context statement
-- On ASM reduce production selection_statement -> save_context IF LPAREN expression RPAREN save_context statement
-- On AND_ASSIGN reduce production selection_statement -> save_context IF LPAREN expression RPAREN save_context statement
-- On ANDAND reduce production selection_statement -> save_context IF LPAREN expression RPAREN save_context statement
-- On AND reduce production selection_statement -> save_context IF LPAREN expression RPAREN save_context statement
-- On ALIGNOF reduce production selection_statement -> save_context IF LPAREN expression RPAREN save_context statement
-- On ALIGNAS reduce production selection_statement -> save_context IF LPAREN expression RPAREN save_context statement
-- On ADD_ASSIGN reduce production selection_statement -> save_context IF LPAREN expression RPAREN save_context statement

State 503:
## Known stack suffix:
## IF LPAREN expression RPAREN save_context statement ELSE
## LR(1) items:
ifelse_statement1 -> IF LPAREN expression RPAREN save_context statement ELSE . [ WHILE TILDE SWITCH STRING_LITERAL STAR SIZEOF SEMICOLON RETURN PRE_NAME PLUS MINUS LPAREN LBRACE INC IF GOTO FOR DO DEFAULT DEC CONTINUE CONSTANT CASE BUILTIN_VA_ARG BREAK BANG ASM AND ALIGNOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production ifelse_statement1 -> IF LPAREN expression RPAREN save_context statement ELSE

State 504:
## Known stack suffix:
## save_context FOR
## LR(1) items:
iteration_statement -> save_context FOR . LPAREN for_statement_header optional(expression,SEMICOLON) optional(expression,RPAREN) statement [ WHILE VOLATILE VOID UNSIGNED UNION UNDERSCORE_BOOL TYPEDEF TILDE SWITCH STRUCT STRING_LITERAL STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACE PRE_NAME PRAGMA PLUS PACKED MINUS LPAREN LONG LBRACE INT INLINE INC IF GOTO FOR FLOAT EXTERN ENUM ELSE DOUBLE DO DEFAULT DEC CONTINUE CONSTANT CONST CHAR CASE BUILTIN_VA_ARG BREAK BANG AUTO ATTRIBUTE ASM AND ALIGNOF ALIGNAS ]
## Transitions:
-- On LPAREN shift to state 505
## Reductions:

State 505:
## Known stack suffix:
## save_context FOR LPAREN
## LR(1) items:
iteration_statement -> save_context FOR LPAREN . for_statement_header optional(expression,SEMICOLON) optional(expression,RPAREN) statement [ WHILE VOLATILE VOID UNSIGNED UNION UNDERSCORE_BOOL TYPEDEF TILDE SWITCH STRUCT STRING_LITERAL STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACE PRE_NAME PRAGMA PLUS PACKED MINUS LPAREN LONG LBRACE INT INLINE INC IF GOTO FOR FLOAT EXTERN ENUM ELSE DOUBLE DO DEFAULT DEC CONTINUE CONSTANT CONST CHAR CASE BUILTIN_VA_ARG BREAK BANG AUTO ATTRIBUTE ASM AND ALIGNOF ALIGNAS ]
## Transitions:
-- On VOLATILE shift to state 1
-- On VOID shift to state 2
-- On UNSIGNED shift to state 3
-- On UNION shift to state 4
-- On UNDERSCORE_BOOL shift to state 5
-- On TYPEDEF shift to state 6
-- On TILDE shift to state 18
-- On STRUCT shift to state 8
-- On STRING_LITERAL shift to state 19
-- On STATIC shift to state 9
-- On STAR shift to state 20
-- On SIZEOF shift to state 21
-- On SIGNED shift to state 10
-- On SHORT shift to state 11
-- On SEMICOLON shift to state 506
-- On RESTRICT shift to state 12
-- On REGISTER shift to state 13
-- On PRE_NAME shift to state 27
-- On PLUS shift to state 24
-- On PACKED shift to state 16
-- On MINUS shift to state 25
-- On LPAREN shift to state 28
-- On LONG shift to state 29
-- On INT shift to state 30
-- On INLINE shift to state 192
-- On INC shift to state 31
-- On FLOAT shift to state 33
-- On EXTERN shift to state 193
-- On ENUM shift to state 34
-- On DOUBLE shift to state 54
-- On DEC shift to state 46
-- On CONSTANT shift to state 47
-- On CONST shift to state 148
-- On CHAR shift to state 55
-- On BUILTIN_VA_ARG shift to state 48
-- On BANG shift to state 50
-- On AUTO shift to state 194
-- On ATTRIBUTE shift to state 35
-- On AND shift to state 51
-- On ALIGNOF shift to state 52
-- On ALIGNAS shift to state 149
-- On unary_operator shift to state 56
-- On unary_expression shift to state 65
-- On typedef_name shift to state 507
-- On type_specifier_no_typedef_name shift to state 509
-- On type_qualifier_noattr shift to state 209
-- On struct_or_union_specifier shift to state 155
-- On struct_or_union shift to state 156
-- On string_literals_list shift to state 58
-- On storage_class_specifier_no_typedef shift to state 210
-- On shift_expression shift to state 78
-- On rlist(declaration_specifier_no_type) shift to state 511
-- On relational_expression shift to state 94
-- On primary_expression shift to state 60
-- On postfix_expression shift to state 61
-- On optional(expression,SEMICOLON) shift to state 516
-- On multiplicative_expression shift to state 82
-- On logical_or_expression shift to state 102
-- On logical_and_expression shift to state 104
-- On inclusive_or_expression shift to state 120
-- On function_specifier shift to state 212
-- On for_statement_header shift to state 517
-- On expression shift to state 524
-- On exclusive_or_expression shift to state 119
-- On equality_expression shift to state 110
-- On enum_specifier shift to state 169
-- On declaration_specifiers_typedef shift to state 526
-- On declaration_specifiers(declaration(block_item)) shift to state 535
-- On declaration(block_item) shift to state 548
-- On conditional_expression shift to state 123
-- On cast_expression shift to state 88
-- On attribute_specifier shift to state 214
-- On assignment_expression shift to state 127
-- On and_expression shift to state 118
-- On additive_expression shift to state 101
## Reductions:

State 506:
## Known stack suffix:
## SEMICOLON
## LR(1) items:
optional(expression,SEMICOLON) -> SEMICOLON . [ TILDE STRING_LITERAL STAR SIZEOF SEMICOLON RPAREN PRE_NAME PLUS MINUS LPAREN INC DEC CONSTANT BUILTIN_VA_ARG BANG AND ALIGNOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production optional(expression,SEMICOLON) -> SEMICOLON

State 507:
## Known stack suffix:
## typedef_name
## LR(1) items:
declaration_specifiers(declaration(block_item)) -> typedef_name . list(declaration_specifier_no_type) [ STAR SEMICOLON PRE_NAME LPAREN ]
declaration_specifiers_typedef -> typedef_name . list(declaration_specifier_no_type) TYPEDEF list(declaration_specifier_no_type) [ STAR SEMICOLON PRE_NAME LPAREN ]
## Transitions:
-- On list(declaration_specifier_no_type) shift to state 508
## Default reduction:
-- After reading the next token, reduce production list(declaration_specifier_no_type) ->

State 508:
## Known stack suffix:
## typedef_name list(declaration_specifier_no_type)
## LR(1) items:
declaration_specifiers(declaration(block_item)) -> typedef_name list(declaration_specifier_no_type) . [ STAR SEMICOLON PRE_NAME LPAREN ]
declaration_specifiers_typedef -> typedef_name list(declaration_specifier_no_type) . TYPEDEF list(declaration_specifier_no_type) [ STAR SEMICOLON PRE_NAME LPAREN ]
list(declaration_specifier_no_type) -> list(declaration_specifier_no_type) . storage_class_specifier_no_typedef [ VOLATILE TYPEDEF STATIC STAR SEMICOLON RESTRICT REGISTER PRE_NAME PACKED LPAREN INLINE EXTERN CONST AUTO ATTRIBUTE ALIGNAS ]
list(declaration_specifier_no_type) -> list(declaration_specifier_no_type) . type_qualifier_noattr [ VOLATILE TYPEDEF STATIC STAR SEMICOLON RESTRICT REGISTER PRE_NAME PACKED LPAREN INLINE EXTERN CONST AUTO ATTRIBUTE ALIGNAS ]
list(declaration_specifier_no_type) -> list(declaration_specifier_no_type) . function_specifier [ VOLATILE TYPEDEF STATIC STAR SEMICOLON RESTRICT REGISTER PRE_NAME PACKED LPAREN INLINE EXTERN CONST AUTO ATTRIBUTE ALIGNAS ]
list(declaration_specifier_no_type) -> list(declaration_specifier_no_type) . attribute_specifier [ VOLATILE TYPEDEF STATIC STAR SEMICOLON RESTRICT REGISTER PRE_NAME PACKED LPAREN INLINE EXTERN CONST AUTO ATTRIBUTE ALIGNAS ]
## Transitions:
-- On VOLATILE shift to state 1
-- On TYPEDEF shift to state 392
-- On STATIC shift to state 9
-- On RESTRICT shift to state 12
-- On REGISTER shift to state 13
-- On PACKED shift to state 16
-- On INLINE shift to state 192
-- On EXTERN shift to state 193
-- On CONST shift to state 148
-- On AUTO shift to state 194
-- On ATTRIBUTE shift to state 35
-- On ALIGNAS shift to state 149
-- On type_qualifier_noattr shift to state 197
-- On storage_class_specifier_no_typedef shift to state 198
-- On function_specifier shift to state 199
-- On attribute_specifier shift to state 200
## Reductions:
-- On STAR reduce production declaration_specifiers(declaration(block_item)) -> typedef_name list(declaration_specifier_no_type)
-- On SEMICOLON reduce production declaration_specifiers(declaration(block_item)) -> typedef_name list(declaration_specifier_no_type)
-- On PRE_NAME reduce production declaration_specifiers(declaration(block_item)) -> typedef_name list(declaration_specifier_no_type)
-- On LPAREN reduce production declaration_specifiers(declaration(block_item)) -> typedef_name list(declaration_specifier_no_type)

State 509:
## Known stack suffix:
## type_specifier_no_typedef_name
## LR(1) items:
declaration_specifiers(declaration(block_item)) -> type_specifier_no_typedef_name . list(declaration_specifier_no_typedef_name) [ STAR SEMICOLON PRE_NAME LPAREN ]
declaration_specifiers_typedef -> type_specifier_no_typedef_name . list(declaration_specifier_no_typedef_name) TYPEDEF list(declaration_specifier_no_typedef_name) [ STAR SEMICOLON PRE_NAME LPAREN ]
## Transitions:
-- On list(declaration_specifier_no_typedef_name) shift to state 510
## Default reduction:
-- After reading the next token, reduce production list(declaration_specifier_no_typedef_name) ->

State 510:
## Known stack suffix:
## type_specifier_no_typedef_name list(declaration_specifier_no_typedef_name)
## LR(1) items:
declaration_specifiers(declaration(block_item)) -> type_specifier_no_typedef_name list(declaration_specifier_no_typedef_name) . [ STAR SEMICOLON PRE_NAME LPAREN ]
declaration_specifiers_typedef -> type_specifier_no_typedef_name list(declaration_specifier_no_typedef_name) . TYPEDEF list(declaration_specifier_no_typedef_name) [ STAR SEMICOLON PRE_NAME LPAREN ]
list(declaration_specifier_no_typedef_name) -> list(declaration_specifier_no_typedef_name) . declaration_specifier_no_typedef_name [ VOLATILE VOID UNSIGNED UNION UNDERSCORE_BOOL TYPEDEF STRUCT STATIC STAR SIGNED SHORT SEMICOLON RESTRICT REGISTER PRE_NAME PACKED LPAREN LONG INT INLINE FLOAT EXTERN ENUM DOUBLE CONST CHAR AUTO ATTRIBUTE ALIGNAS ]
## Transitions:
-- On VOLATILE shift to state 1
-- On VOID shift to state 2
-- On UNSIGNED shift to state 3
-- On UNION shift to state 4
-- On UNDERSCORE_BOOL shift to state 5
-- On TYPEDEF shift to state 396
-- On STRUCT shift to state 8
-- On STATIC shift to state 9
-- On SIGNED shift to state 10
-- On SHORT shift to state 11
-- On RESTRICT shift to state 12
-- On REGISTER shift to state 13
-- On PACKED shift to state 16
-- On LONG shift to state 29
-- On INT shift to state 30
-- On INLINE shift to state 192
-- On FLOAT shift to state 33
-- On EXTERN shift to state 193
-- On ENUM shift to state 34
-- On DOUBLE shift to state 54
-- On CONST shift to state 148
-- On CHAR shift to state 55
-- On AUTO shift to state 194
-- On ATTRIBUTE shift to state 35
-- On ALIGNAS shift to state 149
-- On type_specifier_no_typedef_name shift to state 203
-- On type_qualifier_noattr shift to state 204
-- On struct_or_union_specifier shift to state 155
-- On struct_or_union shift to state 156
-- On storage_class_specifier_no_typedef shift to state 205
-- On function_specifier shift to state 206
-- On enum_specifier shift to state 169
-- On declaration_specifier_no_typedef_name shift to state 207
-- On attribute_specifier shift to state 208
## Reductions:
-- On STAR reduce production declaration_specifiers(declaration(block_item)) -> type_specifier_no_typedef_name list(declaration_specifier_no_typedef_name)
-- On SEMICOLON reduce production declaration_specifiers(declaration(block_item)) -> type_specifier_no_typedef_name list(declaration_specifier_no_typedef_name)
-- On PRE_NAME reduce production declaration_specifiers(declaration(block_item)) -> type_specifier_no_typedef_name list(declaration_specifier_no_typedef_name)
-- On LPAREN reduce production declaration_specifiers(declaration(block_item)) -> type_specifier_no_typedef_name list(declaration_specifier_no_typedef_name)

State 511:
## Known stack suffix:
## rlist(declaration_specifier_no_type)
## LR(1) items:
declaration_specifiers(declaration(block_item)) -> rlist(declaration_specifier_no_type) . typedef_name list(declaration_specifier_no_type) [ STAR SEMICOLON PRE_NAME LPAREN ]
declaration_specifiers(declaration(block_item)) -> rlist(declaration_specifier_no_type) . type_specifier_no_typedef_name list(declaration_specifier_no_typedef_name) [ STAR SEMICOLON PRE_NAME LPAREN ]
declaration_specifiers_typedef -> rlist(declaration_specifier_no_type) . TYPEDEF list(declaration_specifier_no_type) typedef_name list(declaration_specifier_no_type) [ STAR SEMICOLON PRE_NAME LPAREN ]
declaration_specifiers_typedef -> rlist(declaration_specifier_no_type) . typedef_name list(declaration_specifier_no_type) TYPEDEF list(declaration_specifier_no_type) [ STAR SEMICOLON PRE_NAME LPAREN ]
declaration_specifiers_typedef -> rlist(declaration_specifier_no_type) . TYPEDEF list(declaration_specifier_no_type) type_specifier_no_typedef_name list(declaration_specifier_no_typedef_name) [ STAR SEMICOLON PRE_NAME LPAREN ]
declaration_specifiers_typedef -> rlist(declaration_specifier_no_type) . type_specifier_no_typedef_name list(declaration_specifier_no_typedef_name) TYPEDEF list(declaration_specifier_no_typedef_name) [ STAR SEMICOLON PRE_NAME LPAREN ]
## Transitions:
-- On VOID shift to state 2
-- On UNSIGNED shift to state 3
-- On UNION shift to state 4
-- On UNDERSCORE_BOOL shift to state 5
-- On TYPEDEF shift to state 403
-- On STRUCT shift to state 8
-- On SIGNED shift to state 10
-- On SHORT shift to state 11
-- On PRE_NAME shift to state 14
-- On LONG shift to state 29
-- On INT shift to state 30
-- On FLOAT shift to state 33
-- On ENUM shift to state 34
-- On DOUBLE shift to state 54
-- On CHAR shift to state 55
-- On typedef_name shift to state 512
-- On type_specifier_no_typedef_name shift to state 514
-- On struct_or_union_specifier shift to state 155
-- On struct_or_union shift to state 156
-- On enum_specifier shift to state 169
## Reductions:

State 512:
## Known stack suffix:
## rlist(declaration_specifier_no_type) typedef_name
## LR(1) items:
declaration_specifiers(declaration(block_item)) -> rlist(declaration_specifier_no_type) typedef_name . list(declaration_specifier_no_type) [ STAR SEMICOLON PRE_NAME LPAREN ]
declaration_specifiers_typedef -> rlist(declaration_specifier_no_type) typedef_name . list(declaration_specifier_no_type) TYPEDEF list(declaration_specifier_no_type) [ STAR SEMICOLON PRE_NAME LPAREN ]
## Transitions:
-- On list(declaration_specifier_no_type) shift to state 513
## Default reduction:
-- After reading the next token, reduce production list(declaration_specifier_no_type) ->

State 513:
## Known stack suffix:
## rlist(declaration_specifier_no_type) typedef_name list(declaration_specifier_no_type)
## LR(1) items:
declaration_specifiers(declaration(block_item)) -> rlist(declaration_specifier_no_type) typedef_name list(declaration_specifier_no_type) . [ STAR SEMICOLON PRE_NAME LPAREN ]
declaration_specifiers_typedef -> rlist(declaration_specifier_no_type) typedef_name list(declaration_specifier_no_type) . TYPEDEF list(declaration_specifier_no_type) [ STAR SEMICOLON PRE_NAME LPAREN ]
list(declaration_specifier_no_type) -> list(declaration_specifier_no_type) . storage_class_specifier_no_typedef [ VOLATILE TYPEDEF STATIC STAR SEMICOLON RESTRICT REGISTER PRE_NAME PACKED LPAREN INLINE EXTERN CONST AUTO ATTRIBUTE ALIGNAS ]
list(declaration_specifier_no_type) -> list(declaration_specifier_no_type) . type_qualifier_noattr [ VOLATILE TYPEDEF STATIC STAR SEMICOLON RESTRICT REGISTER PRE_NAME PACKED LPAREN INLINE EXTERN CONST AUTO ATTRIBUTE ALIGNAS ]
list(declaration_specifier_no_type) -> list(declaration_specifier_no_type) . function_specifier [ VOLATILE TYPEDEF STATIC STAR SEMICOLON RESTRICT REGISTER PRE_NAME PACKED LPAREN INLINE EXTERN CONST AUTO ATTRIBUTE ALIGNAS ]
list(declaration_specifier_no_type) -> list(declaration_specifier_no_type) . attribute_specifier [ VOLATILE TYPEDEF STATIC STAR SEMICOLON RESTRICT REGISTER PRE_NAME PACKED LPAREN INLINE EXTERN CONST AUTO ATTRIBUTE ALIGNAS ]
## Transitions:
-- On VOLATILE shift to state 1
-- On TYPEDEF shift to state 411
-- On STATIC shift to state 9
-- On RESTRICT shift to state 12
-- On REGISTER shift to state 13
-- On PACKED shift to state 16
-- On INLINE shift to state 192
-- On EXTERN shift to state 193
-- On CONST shift to state 148
-- On AUTO shift to state 194
-- On ATTRIBUTE shift to state 35
-- On ALIGNAS shift to state 149
-- On type_qualifier_noattr shift to state 197
-- On storage_class_specifier_no_typedef shift to state 198
-- On function_specifier shift to state 199
-- On attribute_specifier shift to state 200
## Reductions:
-- On STAR reduce production declaration_specifiers(declaration(block_item)) -> rlist(declaration_specifier_no_type) typedef_name list(declaration_specifier_no_type)
-- On SEMICOLON reduce production declaration_specifiers(declaration(block_item)) -> rlist(declaration_specifier_no_type) typedef_name list(declaration_specifier_no_type)
-- On PRE_NAME reduce production declaration_specifiers(declaration(block_item)) -> rlist(declaration_specifier_no_type) typedef_name list(declaration_specifier_no_type)
-- On LPAREN reduce production declaration_specifiers(declaration(block_item)) -> rlist(declaration_specifier_no_type) typedef_name list(declaration_specifier_no_type)

State 514:
## Known stack suffix:
## rlist(declaration_specifier_no_type) type_specifier_no_typedef_name
## LR(1) items:
declaration_specifiers(declaration(block_item)) -> rlist(declaration_specifier_no_type) type_specifier_no_typedef_name . list(declaration_specifier_no_typedef_name) [ STAR SEMICOLON PRE_NAME LPAREN ]
declaration_specifiers_typedef -> rlist(declaration_specifier_no_type) type_specifier_no_typedef_name . list(declaration_specifier_no_typedef_name) TYPEDEF list(declaration_specifier_no_typedef_name) [ STAR SEMICOLON PRE_NAME LPAREN ]
## Transitions:
-- On list(declaration_specifier_no_typedef_name) shift to state 515
## Default reduction:
-- After reading the next token, reduce production list(declaration_specifier_no_typedef_name) ->

State 515:
## Known stack suffix:
## rlist(declaration_specifier_no_type) type_specifier_no_typedef_name list(declaration_specifier_no_typedef_name)
## LR(1) items:
declaration_specifiers(declaration(block_item)) -> rlist(declaration_specifier_no_type) type_specifier_no_typedef_name list(declaration_specifier_no_typedef_name) . [ STAR SEMICOLON PRE_NAME LPAREN ]
declaration_specifiers_typedef -> rlist(declaration_specifier_no_type) type_specifier_no_typedef_name list(declaration_specifier_no_typedef_name) . TYPEDEF list(declaration_specifier_no_typedef_name) [ STAR SEMICOLON PRE_NAME LPAREN ]
list(declaration_specifier_no_typedef_name) -> list(declaration_specifier_no_typedef_name) . declaration_specifier_no_typedef_name [ VOLATILE VOID UNSIGNED UNION UNDERSCORE_BOOL TYPEDEF STRUCT STATIC STAR SIGNED SHORT SEMICOLON RESTRICT REGISTER PRE_NAME PACKED LPAREN LONG INT INLINE FLOAT EXTERN ENUM DOUBLE CONST CHAR AUTO ATTRIBUTE ALIGNAS ]
## Transitions:
-- On VOLATILE shift to state 1
-- On VOID shift to state 2
-- On UNSIGNED shift to state 3
-- On UNION shift to state 4
-- On UNDERSCORE_BOOL shift to state 5
-- On TYPEDEF shift to state 415
-- On STRUCT shift to state 8
-- On STATIC shift to state 9
-- On SIGNED shift to state 10
-- On SHORT shift to state 11
-- On RESTRICT shift to state 12
-- On REGISTER shift to state 13
-- On PACKED shift to state 16
-- On LONG shift to state 29
-- On INT shift to state 30
-- On INLINE shift to state 192
-- On FLOAT shift to state 33
-- On EXTERN shift to state 193
-- On ENUM shift to state 34
-- On DOUBLE shift to state 54
-- On CONST shift to state 148
-- On CHAR shift to state 55
-- On AUTO shift to state 194
-- On ATTRIBUTE shift to state 35
-- On ALIGNAS shift to state 149
-- On type_specifier_no_typedef_name shift to state 203
-- On type_qualifier_noattr shift to state 204
-- On struct_or_union_specifier shift to state 155
-- On struct_or_union shift to state 156
-- On storage_class_specifier_no_typedef shift to state 205
-- On function_specifier shift to state 206
-- On enum_specifier shift to state 169
-- On declaration_specifier_no_typedef_name shift to state 207
-- On attribute_specifier shift to state 208
## Reductions:
-- On STAR reduce production declaration_specifiers(declaration(block_item)) -> rlist(declaration_specifier_no_type) type_specifier_no_typedef_name list(declaration_specifier_no_typedef_name)
-- On SEMICOLON reduce production declaration_specifiers(declaration(block_item)) -> rlist(declaration_specifier_no_type) type_specifier_no_typedef_name list(declaration_specifier_no_typedef_name)
-- On PRE_NAME reduce production declaration_specifiers(declaration(block_item)) -> rlist(declaration_specifier_no_type) type_specifier_no_typedef_name list(declaration_specifier_no_typedef_name)
-- On LPAREN reduce production declaration_specifiers(declaration(block_item)) -> rlist(declaration_specifier_no_type) type_specifier_no_typedef_name list(declaration_specifier_no_typedef_name)

State 516:
## Known stack suffix:
## optional(expression,SEMICOLON)
## LR(1) items:
for_statement_header -> optional(expression,SEMICOLON) . [ TILDE STRING_LITERAL STAR SIZEOF SEMICOLON PRE_NAME PLUS MINUS LPAREN INC DEC CONSTANT BUILTIN_VA_ARG BANG AND ALIGNOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production for_statement_header -> optional(expression,SEMICOLON)

State 517:
## Known stack suffix:
## save_context FOR LPAREN for_statement_header
## LR(1) items:
iteration_statement -> save_context FOR LPAREN for_statement_header . optional(expression,SEMICOLON) optional(expression,RPAREN) statement [ WHILE VOLATILE VOID UNSIGNED UNION UNDERSCORE_BOOL TYPEDEF TILDE SWITCH STRUCT STRING_LITERAL STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACE PRE_NAME PRAGMA PLUS PACKED MINUS LPAREN LONG LBRACE INT INLINE INC IF GOTO FOR FLOAT EXTERN ENUM ELSE DOUBLE DO DEFAULT DEC CONTINUE CONSTANT CONST CHAR CASE BUILTIN_VA_ARG BREAK BANG AUTO ATTRIBUTE ASM AND ALIGNOF ALIGNAS ]
## Transitions:
-- On TILDE shift to state 18
-- On STRING_LITERAL shift to state 19
-- On STAR shift to state 20
-- On SIZEOF shift to state 21
-- On SEMICOLON shift to state 506
-- On PRE_NAME shift to state 22
-- On PLUS shift to state 24
-- On MINUS shift to state 25
-- On LPAREN shift to state 28
-- On INC shift to state 31
-- On DEC shift to state 46
-- On CONSTANT shift to state 47
-- On BUILTIN_VA_ARG shift to state 48
-- On BANG shift to state 50
-- On AND shift to state 51
-- On ALIGNOF shift to state 52
-- On unary_operator shift to state 56
-- On unary_expression shift to state 65
-- On string_literals_list shift to state 58
-- On shift_expression shift to state 78
-- On relational_expression shift to state 94
-- On primary_expression shift to state 60
-- On postfix_expression shift to state 61
-- On optional(expression,SEMICOLON) shift to state 518
-- On multiplicative_expression shift to state 82
-- On logical_or_expression shift to state 102
-- On logical_and_expression shift to state 104
-- On inclusive_or_expression shift to state 120
-- On expression shift to state 524
-- On exclusive_or_expression shift to state 119
-- On equality_expression shift to state 110
-- On conditional_expression shift to state 123
-- On cast_expression shift to state 88
-- On assignment_expression shift to state 127
-- On and_expression shift to state 118
-- On additive_expression shift to state 101
## Reductions:

State 518:
## Known stack suffix:
## save_context FOR LPAREN for_statement_header optional(expression,SEMICOLON)
## LR(1) items:
iteration_statement -> save_context FOR LPAREN for_statement_header optional(expression,SEMICOLON) . optional(expression,RPAREN) statement [ WHILE VOLATILE VOID UNSIGNED UNION UNDERSCORE_BOOL TYPEDEF TILDE SWITCH STRUCT STRING_LITERAL STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACE PRE_NAME PRAGMA PLUS PACKED MINUS LPAREN LONG LBRACE INT INLINE INC IF GOTO FOR FLOAT EXTERN ENUM ELSE DOUBLE DO DEFAULT DEC CONTINUE CONSTANT CONST CHAR CASE BUILTIN_VA_ARG BREAK BANG AUTO ATTRIBUTE ASM AND ALIGNOF ALIGNAS ]
## Transitions:
-- On TILDE shift to state 18
-- On STRING_LITERAL shift to state 19
-- On STAR shift to state 20
-- On SIZEOF shift to state 21
-- On RPAREN shift to state 519
-- On PRE_NAME shift to state 22
-- On PLUS shift to state 24
-- On MINUS shift to state 25
-- On LPAREN shift to state 28
-- On INC shift to state 31
-- On DEC shift to state 46
-- On CONSTANT shift to state 47
-- On BUILTIN_VA_ARG shift to state 48
-- On BANG shift to state 50
-- On AND shift to state 51
-- On ALIGNOF shift to state 52
-- On unary_operator shift to state 56
-- On unary_expression shift to state 65
-- On string_literals_list shift to state 58
-- On shift_expression shift to state 78
-- On relational_expression shift to state 94
-- On primary_expression shift to state 60
-- On postfix_expression shift to state 61
-- On optional(expression,RPAREN) shift to state 520
-- On multiplicative_expression shift to state 82
-- On logical_or_expression shift to state 102
-- On logical_and_expression shift to state 104
-- On inclusive_or_expression shift to state 120
-- On expression shift to state 522
-- On exclusive_or_expression shift to state 119
-- On equality_expression shift to state 110
-- On conditional_expression shift to state 123
-- On cast_expression shift to state 88
-- On assignment_expression shift to state 127
-- On and_expression shift to state 118
-- On additive_expression shift to state 101
## Reductions:

State 519:
## Known stack suffix:
## RPAREN
## LR(1) items:
optional(expression,RPAREN) -> RPAREN . [ WHILE TILDE SWITCH STRING_LITERAL STAR SIZEOF SEMICOLON RETURN PRE_NAME PLUS MINUS LPAREN LBRACE INC IF GOTO FOR DO DEFAULT DEC CONTINUE CONSTANT CASE BUILTIN_VA_ARG BREAK BANG ASM AND ALIGNOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production optional(expression,RPAREN) -> RPAREN

State 520:
## Known stack suffix:
## save_context FOR LPAREN for_statement_header optional(expression,SEMICOLON) optional(expression,RPAREN)
## LR(1) items:
iteration_statement -> save_context FOR LPAREN for_statement_header optional(expression,SEMICOLON) optional(expression,RPAREN) . statement [ WHILE VOLATILE VOID UNSIGNED UNION UNDERSCORE_BOOL TYPEDEF TILDE SWITCH STRUCT STRING_LITERAL STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACE PRE_NAME PRAGMA PLUS PACKED MINUS LPAREN LONG LBRACE INT INLINE INC IF GOTO FOR FLOAT EXTERN ENUM ELSE DOUBLE DO DEFAULT DEC CONTINUE CONSTANT CONST CHAR CASE BUILTIN_VA_ARG BREAK BANG AUTO ATTRIBUTE ASM AND ALIGNOF ALIGNAS ]
## Transitions:
-- On TILDE shift to state 18
-- On STRING_LITERAL shift to state 19
-- On STAR shift to state 20
-- On SIZEOF shift to state 21
-- On RETURN shift to state 421
-- On PRE_NAME shift to state 426
-- On PLUS shift to state 24
-- On MINUS shift to state 25
-- On LPAREN shift to state 28
-- On INC shift to state 31
-- On GOTO shift to state 429
-- On DEFAULT shift to state 432
-- On DEC shift to state 46
-- On CONTINUE shift to state 434
-- On CONSTANT shift to state 47
-- On CASE shift to state 436
-- On BUILTIN_VA_ARG shift to state 48
-- On BREAK shift to state 439
-- On BANG shift to state 50
-- On ASM shift to state 441
-- On AND shift to state 51
-- On ALIGNOF shift to state 52
-- On unary_operator shift to state 56
-- On unary_expression shift to state 65
-- On typedef_name shift to state 42
-- On string_literals_list shift to state 58
-- On statement shift to state 521
-- On shift_expression shift to state 78
-- On selection_statement shift to state 474
-- On save_context shift to state 475
-- On relational_expression shift to state 94
-- On primary_expression shift to state 60
-- On postfix_expression shift to state 61
-- On option(expression) shift to state 481
-- On multiplicative_expression shift to state 82
-- On logical_or_expression shift to state 102
-- On logical_and_expression shift to state 104
-- On labeled_statement shift to state 483
-- On jump_statement shift to state 484
-- On iteration_statement shift to state 485
-- On inclusive_or_expression shift to state 120
-- On general_identifier shift to state 486
-- On expression_statement shift to state 489
-- On expression shift to state 424
-- On exclusive_or_expression shift to state 119
-- On equality_expression shift to state 110
-- On conditional_expression shift to state 123
-- On compound_statement shift to state 490
-- On cast_expression shift to state 88
-- On assignment_expression shift to state 127
-- On asm_statement shift to state 491
-- On and_expression shift to state 118
-- On additive_expression shift to state 101
## Reductions:
-- On WHILE reduce production save_context ->
-- On SWITCH reduce production save_context ->
-- On SEMICOLON reduce production option(expression) ->
-- On LBRACE reduce production save_context ->
-- On IF reduce production save_context ->
-- On FOR reduce production save_context ->
-- On DO reduce production save_context ->

State 521:
## Known stack suffix:
## save_context FOR LPAREN for_statement_header optional(expression,SEMICOLON) optional(expression,RPAREN) statement
## LR(1) items:
iteration_statement -> save_context FOR LPAREN for_statement_header optional(expression,SEMICOLON) optional(expression,RPAREN) statement . [ WHILE VOLATILE VOID UNSIGNED UNION UNDERSCORE_BOOL TYPEDEF TILDE SWITCH STRUCT STRING_LITERAL STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACE PRE_NAME PRAGMA PLUS PACKED MINUS LPAREN LONG LBRACE INT INLINE INC IF GOTO FOR FLOAT EXTERN ENUM ELSE DOUBLE DO DEFAULT DEC CONTINUE CONSTANT CONST CHAR CASE BUILTIN_VA_ARG BREAK BANG AUTO ATTRIBUTE ASM AND ALIGNOF ALIGNAS ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production iteration_statement -> save_context FOR LPAREN for_statement_header optional(expression,SEMICOLON) optional(expression,RPAREN) statement

State 522:
## Known stack suffix:
## expression
## LR(1) items:
expression -> expression . COMMA assignment_expression [ RPAREN COMMA ]
optional(expression,RPAREN) -> expression . RPAREN [ WHILE TILDE SWITCH STRING_LITERAL STAR SIZEOF SEMICOLON RETURN PRE_NAME PLUS MINUS LPAREN LBRACE INC IF GOTO FOR DO DEFAULT DEC CONTINUE CONSTANT CASE BUILTIN_VA_ARG BREAK BANG ASM AND ALIGNOF ]
## Transitions:
-- On RPAREN shift to state 523
-- On COMMA shift to state 122
## Reductions:

State 523:
## Known stack suffix:
## expression RPAREN
## LR(1) items:
optional(expression,RPAREN) -> expression RPAREN . [ WHILE TILDE SWITCH STRING_LITERAL STAR SIZEOF SEMICOLON RETURN PRE_NAME PLUS MINUS LPAREN LBRACE INC IF GOTO FOR DO DEFAULT DEC CONTINUE CONSTANT CASE BUILTIN_VA_ARG BREAK BANG ASM AND ALIGNOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production optional(expression,RPAREN) -> expression RPAREN

State 524:
## Known stack suffix:
## expression
## LR(1) items:
expression -> expression . COMMA assignment_expression [ SEMICOLON COMMA ]
optional(expression,SEMICOLON) -> expression . SEMICOLON [ TILDE STRING_LITERAL STAR SIZEOF SEMICOLON RPAREN PRE_NAME PLUS MINUS LPAREN INC DEC CONSTANT BUILTIN_VA_ARG BANG AND ALIGNOF ]
## Transitions:
-- On SEMICOLON shift to state 525
-- On COMMA shift to state 122
## Reductions:

State 525:
## Known stack suffix:
## expression SEMICOLON
## LR(1) items:
optional(expression,SEMICOLON) -> expression SEMICOLON . [ TILDE STRING_LITERAL STAR SIZEOF SEMICOLON RPAREN PRE_NAME PLUS MINUS LPAREN INC DEC CONSTANT BUILTIN_VA_ARG BANG AND ALIGNOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production optional(expression,SEMICOLON) -> expression SEMICOLON

State 526:
## Known stack suffix:
## declaration_specifiers_typedef
## LR(1) items:
declaration(block_item) -> declaration_specifiers_typedef . option(typedef_declarator_list) SEMICOLON [ WHILE VOLATILE VOID UNSIGNED UNION UNDERSCORE_BOOL TYPEDEF TILDE SWITCH STRUCT STRING_LITERAL STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACE PRE_NAME PRAGMA PLUS PACKED MINUS LPAREN LONG LBRACE INT INLINE INC IF GOTO FOR FLOAT EXTERN ENUM DOUBLE DO DEFAULT DEC CONTINUE CONSTANT CONST CHAR CASE BUILTIN_VA_ARG BREAK BANG AUTO ATTRIBUTE ASM AND ALIGNOF ALIGNAS ]
## Transitions:
-- On PRE_NAME shift to state 178
-- On LPAREN shift to state 182
-- On typedef_declarator_list shift to state 527
-- On typedef_declarator shift to state 532
-- On option(typedef_declarator_list) shift to state 533
-- On list(pointer1) shift to state 184
-- On direct_declarator shift to state 250
-- On declare_typename(declarator) shift to state 530
-- On declarator_noattrend shift to state 255
-- On declarator_identifier shift to state 249
-- On declarator shift to state 531
## Reductions:
-- On STAR reduce production list(pointer1) ->
-- On SEMICOLON reduce production option(typedef_declarator_list) ->

State 527:
## Known stack suffix:
## typedef_declarator_list
## LR(1) items:
option(typedef_declarator_list) -> typedef_declarator_list . [ SEMICOLON ]
typedef_declarator_list -> typedef_declarator_list . COMMA typedef_declarator [ SEMICOLON COMMA ]
## Transitions:
-- On COMMA shift to state 528
## Reductions:
-- On SEMICOLON reduce production option(typedef_declarator_list) -> typedef_declarator_list

State 528:
## Known stack suffix:
## typedef_declarator_list COMMA
## LR(1) items:
typedef_declarator_list -> typedef_declarator_list COMMA . typedef_declarator [ SEMICOLON COMMA ]
## Transitions:
-- On PRE_NAME shift to state 178
-- On LPAREN shift to state 182
-- On typedef_declarator shift to state 529
-- On list(pointer1) shift to state 184
-- On direct_declarator shift to state 250
-- On declare_typename(declarator) shift to state 530
-- On declarator_noattrend shift to state 255
-- On declarator_identifier shift to state 249
-- On declarator shift to state 531
## Reductions:
-- On STAR reduce production list(pointer1) ->

State 529:
## Known stack suffix:
## typedef_declarator_list COMMA typedef_declarator
## LR(1) items:
typedef_declarator_list -> typedef_declarator_list COMMA typedef_declarator . [ SEMICOLON COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production typedef_declarator_list -> typedef_declarator_list COMMA typedef_declarator

State 530:
## Known stack suffix:
## declare_typename(declarator)
## LR(1) items:
typedef_declarator -> declare_typename(declarator) . [ SEMICOLON COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production typedef_declarator -> declare_typename(declarator)

State 531:
## Known stack suffix:
## declarator
## LR(1) items:
declare_typename(declarator) -> declarator . [ SEMICOLON COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production declare_typename(declarator) -> declarator

State 532:
## Known stack suffix:
## typedef_declarator
## LR(1) items:
typedef_declarator_list -> typedef_declarator . [ SEMICOLON COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production typedef_declarator_list -> typedef_declarator

State 533:
## Known stack suffix:
## declaration_specifiers_typedef option(typedef_declarator_list)
## LR(1) items:
declaration(block_item) -> declaration_specifiers_typedef option(typedef_declarator_list) . SEMICOLON [ WHILE VOLATILE VOID UNSIGNED UNION UNDERSCORE_BOOL TYPEDEF TILDE SWITCH STRUCT STRING_LITERAL STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACE PRE_NAME PRAGMA PLUS PACKED MINUS LPAREN LONG LBRACE INT INLINE INC IF GOTO FOR FLOAT EXTERN ENUM DOUBLE DO DEFAULT DEC CONTINUE CONSTANT CONST CHAR CASE BUILTIN_VA_ARG BREAK BANG AUTO ATTRIBUTE ASM AND ALIGNOF ALIGNAS ]
## Transitions:
-- On SEMICOLON shift to state 534
## Reductions:

State 534:
## Known stack suffix:
## declaration_specifiers_typedef option(typedef_declarator_list) SEMICOLON
## LR(1) items:
declaration(block_item) -> declaration_specifiers_typedef option(typedef_declarator_list) SEMICOLON . [ WHILE VOLATILE VOID UNSIGNED UNION UNDERSCORE_BOOL TYPEDEF TILDE SWITCH STRUCT STRING_LITERAL STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACE PRE_NAME PRAGMA PLUS PACKED MINUS LPAREN LONG LBRACE INT INLINE INC IF GOTO FOR FLOAT EXTERN ENUM DOUBLE DO DEFAULT DEC CONTINUE CONSTANT CONST CHAR CASE BUILTIN_VA_ARG BREAK BANG AUTO ATTRIBUTE ASM AND ALIGNOF ALIGNAS ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production declaration(block_item) -> declaration_specifiers_typedef option(typedef_declarator_list) SEMICOLON

State 535:
## Known stack suffix:
## declaration_specifiers(declaration(block_item))
## LR(1) items:
declaration(block_item) -> declaration_specifiers(declaration(block_item)) . option(init_declarator_list) SEMICOLON [ WHILE VOLATILE VOID UNSIGNED UNION UNDERSCORE_BOOL TYPEDEF TILDE SWITCH STRUCT STRING_LITERAL STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACE PRE_NAME PRAGMA PLUS PACKED MINUS LPAREN LONG LBRACE INT INLINE INC IF GOTO FOR FLOAT EXTERN ENUM DOUBLE DO DEFAULT DEC CONTINUE CONSTANT CONST CHAR CASE BUILTIN_VA_ARG BREAK BANG AUTO ATTRIBUTE ASM AND ALIGNOF ALIGNAS ]
## Transitions:
-- On PRE_NAME shift to state 178
-- On LPAREN shift to state 182
-- On option(init_declarator_list) shift to state 536
-- On list(pointer1) shift to state 184
-- On init_declarator_list shift to state 538
-- On init_declarator shift to state 547
-- On direct_declarator shift to state 250
-- On declare_varname(declarator_noattrend) shift to state 541
-- On declarator_noattrend shift to state 546
-- On declarator_identifier shift to state 249
## Reductions:
-- On STAR reduce production list(pointer1) ->
-- On SEMICOLON reduce production option(init_declarator_list) ->

State 536:
## Known stack suffix:
## declaration_specifiers(declaration(block_item)) option(init_declarator_list)
## LR(1) items:
declaration(block_item) -> declaration_specifiers(declaration(block_item)) option(init_declarator_list) . SEMICOLON [ WHILE VOLATILE VOID UNSIGNED UNION UNDERSCORE_BOOL TYPEDEF TILDE SWITCH STRUCT STRING_LITERAL STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACE PRE_NAME PRAGMA PLUS PACKED MINUS LPAREN LONG LBRACE INT INLINE INC IF GOTO FOR FLOAT EXTERN ENUM DOUBLE DO DEFAULT DEC CONTINUE CONSTANT CONST CHAR CASE BUILTIN_VA_ARG BREAK BANG AUTO ATTRIBUTE ASM AND ALIGNOF ALIGNAS ]
## Transitions:
-- On SEMICOLON shift to state 537
## Reductions:

State 537:
## Known stack suffix:
## declaration_specifiers(declaration(block_item)) option(init_declarator_list) SEMICOLON
## LR(1) items:
declaration(block_item) -> declaration_specifiers(declaration(block_item)) option(init_declarator_list) SEMICOLON . [ WHILE VOLATILE VOID UNSIGNED UNION UNDERSCORE_BOOL TYPEDEF TILDE SWITCH STRUCT STRING_LITERAL STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACE PRE_NAME PRAGMA PLUS PACKED MINUS LPAREN LONG LBRACE INT INLINE INC IF GOTO FOR FLOAT EXTERN ENUM DOUBLE DO DEFAULT DEC CONTINUE CONSTANT CONST CHAR CASE BUILTIN_VA_ARG BREAK BANG AUTO ATTRIBUTE ASM AND ALIGNOF ALIGNAS ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production declaration(block_item) -> declaration_specifiers(declaration(block_item)) option(init_declarator_list) SEMICOLON

State 538:
## Known stack suffix:
## init_declarator_list
## LR(1) items:
init_declarator_list -> init_declarator_list . COMMA init_declarator [ SEMICOLON COMMA ]
option(init_declarator_list) -> init_declarator_list . [ SEMICOLON ]
## Transitions:
-- On COMMA shift to state 539
## Reductions:
-- On SEMICOLON reduce production option(init_declarator_list) -> init_declarator_list

State 539:
## Known stack suffix:
## init_declarator_list COMMA
## LR(1) items:
init_declarator_list -> init_declarator_list COMMA . init_declarator [ SEMICOLON COMMA ]
## Transitions:
-- On PRE_NAME shift to state 178
-- On LPAREN shift to state 182
-- On list(pointer1) shift to state 184
-- On init_declarator shift to state 540
-- On direct_declarator shift to state 250
-- On declare_varname(declarator_noattrend) shift to state 541
-- On declarator_noattrend shift to state 546
-- On declarator_identifier shift to state 249
## Reductions:
-- On STAR reduce production list(pointer1) ->

State 540:
## Known stack suffix:
## init_declarator_list COMMA init_declarator
## LR(1) items:
init_declarator_list -> init_declarator_list COMMA init_declarator . [ SEMICOLON COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production init_declarator_list -> init_declarator_list COMMA init_declarator

State 541:
## Known stack suffix:
## declare_varname(declarator_noattrend)
## LR(1) items:
init_declarator -> declare_varname(declarator_noattrend) . save_context attribute_specifier_list [ SEMICOLON COMMA ]
init_declarator -> declare_varname(declarator_noattrend) . save_context attribute_specifier_list EQ c_initializer [ SEMICOLON COMMA ]
## Transitions:
-- On save_context shift to state 542
## Default reduction:
-- After reading the next token, reduce production save_context ->

State 542:
## Known stack suffix:
## declare_varname(declarator_noattrend) save_context
## LR(1) items:
init_declarator -> declare_varname(declarator_noattrend) save_context . attribute_specifier_list [ SEMICOLON COMMA ]
init_declarator -> declare_varname(declarator_noattrend) save_context . attribute_specifier_list EQ c_initializer [ SEMICOLON COMMA ]
## Transitions:
-- On PACKED shift to state 16
-- On ATTRIBUTE shift to state 35
-- On ALIGNAS shift to state 149
-- On attribute_specifier_list shift to state 543
-- On attribute_specifier shift to state 257
## Reductions:
-- On XOR_ASSIGN reduce production attribute_specifier_list ->
-- On WHILE reduce production attribute_specifier_list ->
-- On VOLATILE reduce production attribute_specifier_list ->
-- On VOID reduce production attribute_specifier_list ->
-- On VAR_NAME reduce production attribute_specifier_list ->
-- On UNSIGNED reduce production attribute_specifier_list ->
-- On UNION reduce production attribute_specifier_list ->
-- On UNDERSCORE_BOOL reduce production attribute_specifier_list ->
-- On TYPEDEF_NAME reduce production attribute_specifier_list ->
-- On TYPEDEF reduce production attribute_specifier_list ->
-- On TILDE reduce production attribute_specifier_list ->
-- On SWITCH reduce production attribute_specifier_list ->
-- On SUB_ASSIGN reduce production attribute_specifier_list ->
-- On STRUCT reduce production attribute_specifier_list ->
-- On STRING_LITERAL reduce production attribute_specifier_list ->
-- On STATIC reduce production attribute_specifier_list ->
-- On STAR reduce production attribute_specifier_list ->
-- On SLASH reduce production attribute_specifier_list ->
-- On SIZEOF reduce production attribute_specifier_list ->
-- On SIGNED reduce production attribute_specifier_list ->
-- On SHORT reduce production attribute_specifier_list ->
-- On SEMICOLON reduce production attribute_specifier_list ->
-- On RPAREN reduce production attribute_specifier_list ->
-- On RIGHT_ASSIGN reduce production attribute_specifier_list ->
-- On RIGHT reduce production attribute_specifier_list ->
-- On RETURN reduce production attribute_specifier_list ->
-- On RESTRICT reduce production attribute_specifier_list ->
-- On REGISTER reduce production attribute_specifier_list ->
-- On RBRACK reduce production attribute_specifier_list ->
-- On RBRACE reduce production attribute_specifier_list ->
-- On QUESTION reduce production attribute_specifier_list ->
-- On PTR reduce production attribute_specifier_list ->
-- On PRE_NAME reduce production attribute_specifier_list ->
-- On PRAGMA reduce production attribute_specifier_list ->
-- On PLUS reduce production attribute_specifier_list ->
-- On PERCENT reduce production attribute_specifier_list ->
-- On OR_ASSIGN reduce production attribute_specifier_list ->
-- On NEQ reduce production attribute_specifier_list ->
-- On MUL_ASSIGN reduce production attribute_specifier_list ->
-- On MOD_ASSIGN reduce production attribute_specifier_list ->
-- On MINUS reduce production attribute_specifier_list ->
-- On LT reduce production attribute_specifier_list ->
-- On LPAREN reduce production attribute_specifier_list ->
-- On LONG reduce production attribute_specifier_list ->
-- On LEQ reduce production attribute_specifier_list ->
-- On LEFT_ASSIGN reduce production attribute_specifier_list ->
-- On LEFT reduce production attribute_specifier_list ->
-- On LBRACK reduce production attribute_specifier_list ->
-- On LBRACE reduce production attribute_specifier_list ->
-- On INT reduce production attribute_specifier_list ->
-- On INLINE reduce production attribute_specifier_list ->
-- On INC reduce production attribute_specifier_list ->
-- On IF reduce production attribute_specifier_list ->
-- On HAT reduce production attribute_specifier_list ->
-- On GT reduce production attribute_specifier_list ->
-- On GOTO reduce production attribute_specifier_list ->
-- On GEQ reduce production attribute_specifier_list ->
-- On FOR reduce production attribute_specifier_list ->
-- On FLOAT reduce production attribute_specifier_list ->
-- On EXTERN reduce production attribute_specifier_list ->
-- On EQEQ reduce production attribute_specifier_list ->
-- On EQ reduce production attribute_specifier_list ->
-- On EOF reduce production attribute_specifier_list ->
-- On ENUM reduce production attribute_specifier_list ->
-- On ELSE reduce production attribute_specifier_list ->
-- On ELLIPSIS reduce production attribute_specifier_list ->
-- On DOUBLE reduce production attribute_specifier_list ->
-- On DOT reduce production attribute_specifier_list ->
-- On DO reduce production attribute_specifier_list ->
-- On DIV_ASSIGN reduce production attribute_specifier_list ->
-- On DEFAULT reduce production attribute_specifier_list ->
-- On DEC reduce production attribute_specifier_list ->
-- On CONTINUE reduce production attribute_specifier_list ->
-- On CONSTANT reduce production attribute_specifier_list ->
-- On CONST reduce production attribute_specifier_list ->
-- On COMMA reduce production attribute_specifier_list ->
-- On COLON reduce production attribute_specifier_list ->
-- On CHAR reduce production attribute_specifier_list ->
-- On CASE reduce production attribute_specifier_list ->
-- On BUILTIN_VA_ARG reduce production attribute_specifier_list ->
-- On BREAK reduce production attribute_specifier_list ->
-- On BARBAR reduce production attribute_specifier_list ->
-- On BAR reduce production attribute_specifier_list ->
-- On BANG reduce production attribute_specifier_list ->
-- On AUTO reduce production attribute_specifier_list ->
-- On ASM reduce production attribute_specifier_list ->
-- On AND_ASSIGN reduce production attribute_specifier_list ->
-- On ANDAND reduce production attribute_specifier_list ->
-- On AND reduce production attribute_specifier_list ->
-- On ALIGNOF reduce production attribute_specifier_list ->
-- On ADD_ASSIGN reduce production attribute_specifier_list ->

State 543:
## Known stack suffix:
## declare_varname(declarator_noattrend) save_context attribute_specifier_list
## LR(1) items:
init_declarator -> declare_varname(declarator_noattrend) save_context attribute_specifier_list . [ SEMICOLON COMMA ]
init_declarator -> declare_varname(declarator_noattrend) save_context attribute_specifier_list . EQ c_initializer [ SEMICOLON COMMA ]
## Transitions:
-- On EQ shift to state 544
## Reductions:
-- On XOR_ASSIGN reduce production init_declarator -> declare_varname(declarator_noattrend) save_context attribute_specifier_list
-- On WHILE reduce production init_declarator -> declare_varname(declarator_noattrend) save_context attribute_specifier_list
-- On VOLATILE reduce production init_declarator -> declare_varname(declarator_noattrend) save_context attribute_specifier_list
-- On VOID reduce production init_declarator -> declare_varname(declarator_noattrend) save_context attribute_specifier_list
-- On VAR_NAME reduce production init_declarator -> declare_varname(declarator_noattrend) save_context attribute_specifier_list
-- On UNSIGNED reduce production init_declarator -> declare_varname(declarator_noattrend) save_context attribute_specifier_list
-- On UNION reduce production init_declarator -> declare_varname(declarator_noattrend) save_context attribute_specifier_list
-- On UNDERSCORE_BOOL reduce production init_declarator -> declare_varname(declarator_noattrend) save_context attribute_specifier_list
-- On TYPEDEF_NAME reduce production init_declarator -> declare_varname(declarator_noattrend) save_context attribute_specifier_list
-- On TYPEDEF reduce production init_declarator -> declare_varname(declarator_noattrend) save_context attribute_specifier_list
-- On TILDE reduce production init_declarator -> declare_varname(declarator_noattrend) save_context attribute_specifier_list
-- On SWITCH reduce production init_declarator -> declare_varname(declarator_noattrend) save_context attribute_specifier_list
-- On SUB_ASSIGN reduce production init_declarator -> declare_varname(declarator_noattrend) save_context attribute_specifier_list
-- On STRUCT reduce production init_declarator -> declare_varname(declarator_noattrend) save_context attribute_specifier_list
-- On STRING_LITERAL reduce production init_declarator -> declare_varname(declarator_noattrend) save_context attribute_specifier_list
-- On STATIC reduce production init_declarator -> declare_varname(declarator_noattrend) save_context attribute_specifier_list
-- On STAR reduce production init_declarator -> declare_varname(declarator_noattrend) save_context attribute_specifier_list
-- On SLASH reduce production init_declarator -> declare_varname(declarator_noattrend) save_context attribute_specifier_list
-- On SIZEOF reduce production init_declarator -> declare_varname(declarator_noattrend) save_context attribute_specifier_list
-- On SIGNED reduce production init_declarator -> declare_varname(declarator_noattrend) save_context attribute_specifier_list
-- On SHORT reduce production init_declarator -> declare_varname(declarator_noattrend) save_context attribute_specifier_list
-- On SEMICOLON reduce production init_declarator -> declare_varname(declarator_noattrend) save_context attribute_specifier_list
-- On RPAREN reduce production init_declarator -> declare_varname(declarator_noattrend) save_context attribute_specifier_list
-- On RIGHT_ASSIGN reduce production init_declarator -> declare_varname(declarator_noattrend) save_context attribute_specifier_list
-- On RIGHT reduce production init_declarator -> declare_varname(declarator_noattrend) save_context attribute_specifier_list
-- On RETURN reduce production init_declarator -> declare_varname(declarator_noattrend) save_context attribute_specifier_list
-- On RESTRICT reduce production init_declarator -> declare_varname(declarator_noattrend) save_context attribute_specifier_list
-- On REGISTER reduce production init_declarator -> declare_varname(declarator_noattrend) save_context attribute_specifier_list
-- On RBRACK reduce production init_declarator -> declare_varname(declarator_noattrend) save_context attribute_specifier_list
-- On RBRACE reduce production init_declarator -> declare_varname(declarator_noattrend) save_context attribute_specifier_list
-- On QUESTION reduce production init_declarator -> declare_varname(declarator_noattrend) save_context attribute_specifier_list
-- On PTR reduce production init_declarator -> declare_varname(declarator_noattrend) save_context attribute_specifier_list
-- On PRE_NAME reduce production init_declarator -> declare_varname(declarator_noattrend) save_context attribute_specifier_list
-- On PRAGMA reduce production init_declarator -> declare_varname(declarator_noattrend) save_context attribute_specifier_list
-- On PLUS reduce production init_declarator -> declare_varname(declarator_noattrend) save_context attribute_specifier_list
-- On PERCENT reduce production init_declarator -> declare_varname(declarator_noattrend) save_context attribute_specifier_list
-- On PACKED reduce production init_declarator -> declare_varname(declarator_noattrend) save_context attribute_specifier_list
-- On OR_ASSIGN reduce production init_declarator -> declare_varname(declarator_noattrend) save_context attribute_specifier_list
-- On NEQ reduce production init_declarator -> declare_varname(declarator_noattrend) save_context attribute_specifier_list
-- On MUL_ASSIGN reduce production init_declarator -> declare_varname(declarator_noattrend) save_context attribute_specifier_list
-- On MOD_ASSIGN reduce production init_declarator -> declare_varname(declarator_noattrend) save_context attribute_specifier_list
-- On MINUS reduce production init_declarator -> declare_varname(declarator_noattrend) save_context attribute_specifier_list
-- On LT reduce production init_declarator -> declare_varname(declarator_noattrend) save_context attribute_specifier_list
-- On LPAREN reduce production init_declarator -> declare_varname(declarator_noattrend) save_context attribute_specifier_list
-- On LONG reduce production init_declarator -> declare_varname(declarator_noattrend) save_context attribute_specifier_list
-- On LEQ reduce production init_declarator -> declare_varname(declarator_noattrend) save_context attribute_specifier_list
-- On LEFT_ASSIGN reduce production init_declarator -> declare_varname(declarator_noattrend) save_context attribute_specifier_list
-- On LEFT reduce production init_declarator -> declare_varname(declarator_noattrend) save_context attribute_specifier_list
-- On LBRACK reduce production init_declarator -> declare_varname(declarator_noattrend) save_context attribute_specifier_list
-- On LBRACE reduce production init_declarator -> declare_varname(declarator_noattrend) save_context attribute_specifier_list
-- On INT reduce production init_declarator -> declare_varname(declarator_noattrend) save_context attribute_specifier_list
-- On INLINE reduce production init_declarator -> declare_varname(declarator_noattrend) save_context attribute_specifier_list
-- On INC reduce production init_declarator -> declare_varname(declarator_noattrend) save_context attribute_specifier_list
-- On IF reduce production init_declarator -> declare_varname(declarator_noattrend) save_context attribute_specifier_list
-- On HAT reduce production init_declarator -> declare_varname(declarator_noattrend) save_context attribute_specifier_list
-- On GT reduce production init_declarator -> declare_varname(declarator_noattrend) save_context attribute_specifier_list
-- On GOTO reduce production init_declarator -> declare_varname(declarator_noattrend) save_context attribute_specifier_list
-- On GEQ reduce production init_declarator -> declare_varname(declarator_noattrend) save_context attribute_specifier_list
-- On FOR reduce production init_declarator -> declare_varname(declarator_noattrend) save_context attribute_specifier_list
-- On FLOAT reduce production init_declarator -> declare_varname(declarator_noattrend) save_context attribute_specifier_list
-- On EXTERN reduce production init_declarator -> declare_varname(declarator_noattrend) save_context attribute_specifier_list
-- On EQEQ reduce production init_declarator -> declare_varname(declarator_noattrend) save_context attribute_specifier_list
-- On EOF reduce production init_declarator -> declare_varname(declarator_noattrend) save_context attribute_specifier_list
-- On ENUM reduce production init_declarator -> declare_varname(declarator_noattrend) save_context attribute_specifier_list
-- On ELSE reduce production init_declarator -> declare_varname(declarator_noattrend) save_context attribute_specifier_list
-- On ELLIPSIS reduce production init_declarator -> declare_varname(declarator_noattrend) save_context attribute_specifier_list
-- On DOUBLE reduce production init_declarator -> declare_varname(declarator_noattrend) save_context attribute_specifier_list
-- On DOT reduce production init_declarator -> declare_varname(declarator_noattrend) save_context attribute_specifier_list
-- On DO reduce production init_declarator -> declare_varname(declarator_noattrend) save_context attribute_specifier_list
-- On DIV_ASSIGN reduce production init_declarator -> declare_varname(declarator_noattrend) save_context attribute_specifier_list
-- On DEFAULT reduce production init_declarator -> declare_varname(declarator_noattrend) save_context attribute_specifier_list
-- On DEC reduce production init_declarator -> declare_varname(declarator_noattrend) save_context attribute_specifier_list
-- On CONTINUE reduce production init_declarator -> declare_varname(declarator_noattrend) save_context attribute_specifier_list
-- On CONSTANT reduce production init_declarator -> declare_varname(declarator_noattrend) save_context attribute_specifier_list
-- On CONST reduce production init_declarator -> declare_varname(declarator_noattrend) save_context attribute_specifier_list
-- On COMMA reduce production init_declarator -> declare_varname(declarator_noattrend) save_context attribute_specifier_list
-- On COLON reduce production init_declarator -> declare_varname(declarator_noattrend) save_context attribute_specifier_list
-- On CHAR reduce production init_declarator -> declare_varname(declarator_noattrend) save_context attribute_specifier_list
-- On CASE reduce production init_declarator -> declare_varname(declarator_noattrend) save_context attribute_specifier_list
-- On BUILTIN_VA_ARG reduce production init_declarator -> declare_varname(declarator_noattrend) save_context attribute_specifier_list
-- On BREAK reduce production init_declarator -> declare_varname(declarator_noattrend) save_context attribute_specifier_list
-- On BARBAR reduce production init_declarator -> declare_varname(declarator_noattrend) save_context attribute_specifier_list
-- On BAR reduce production init_declarator -> declare_varname(declarator_noattrend) save_context attribute_specifier_list
-- On BANG reduce production init_declarator -> declare_varname(declarator_noattrend) save_context attribute_specifier_list
-- On AUTO reduce production init_declarator -> declare_varname(declarator_noattrend) save_context attribute_specifier_list
-- On ATTRIBUTE reduce production init_declarator -> declare_varname(declarator_noattrend) save_context attribute_specifier_list
-- On ASM reduce production init_declarator -> declare_varname(declarator_noattrend) save_context attribute_specifier_list
-- On AND_ASSIGN reduce production init_declarator -> declare_varname(declarator_noattrend) save_context attribute_specifier_list
-- On ANDAND reduce production init_declarator -> declare_varname(declarator_noattrend) save_context attribute_specifier_list
-- On AND reduce production init_declarator -> declare_varname(declarator_noattrend) save_context attribute_specifier_list
-- On ALIGNOF reduce production init_declarator -> declare_varname(declarator_noattrend) save_context attribute_specifier_list
-- On ALIGNAS reduce production init_declarator -> declare_varname(declarator_noattrend) save_context attribute_specifier_list
-- On ADD_ASSIGN reduce production init_declarator -> declare_varname(declarator_noattrend) save_context attribute_specifier_list

State 544:
## Known stack suffix:
## declare_varname(declarator_noattrend) save_context attribute_specifier_list EQ
## LR(1) items:
init_declarator -> declare_varname(declarator_noattrend) save_context attribute_specifier_list EQ . c_initializer [ SEMICOLON COMMA ]
## Transitions:
-- On TILDE shift to state 18
-- On STRING_LITERAL shift to state 19
-- On STAR shift to state 20
-- On SIZEOF shift to state 21
-- On PRE_NAME shift to state 22
-- On PLUS shift to state 24
-- On MINUS shift to state 25
-- On LPAREN shift to state 28
-- On LBRACE shift to state 322
-- On INC shift to state 31
-- On DEC shift to state 46
-- On CONSTANT shift to state 47
-- On BUILTIN_VA_ARG shift to state 48
-- On BANG shift to state 50
-- On AND shift to state 51
-- On ALIGNOF shift to state 52
-- On unary_operator shift to state 56
-- On unary_expression shift to state 65
-- On string_literals_list shift to state 58
-- On shift_expression shift to state 78
-- On relational_expression shift to state 94
-- On primary_expression shift to state 60
-- On postfix_expression shift to state 61
-- On multiplicative_expression shift to state 82
-- On logical_or_expression shift to state 102
-- On logical_and_expression shift to state 104
-- On inclusive_or_expression shift to state 120
-- On exclusive_or_expression shift to state 119
-- On equality_expression shift to state 110
-- On conditional_expression shift to state 123
-- On cast_expression shift to state 88
-- On c_initializer shift to state 545
-- On assignment_expression shift to state 327
-- On and_expression shift to state 118
-- On additive_expression shift to state 101
## Reductions:

State 545:
## Known stack suffix:
## declare_varname(declarator_noattrend) save_context attribute_specifier_list EQ c_initializer
## LR(1) items:
init_declarator -> declare_varname(declarator_noattrend) save_context attribute_specifier_list EQ c_initializer . [ SEMICOLON COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production init_declarator -> declare_varname(declarator_noattrend) save_context attribute_specifier_list EQ c_initializer

State 546:
## Known stack suffix:
## declarator_noattrend
## LR(1) items:
declare_varname(declarator_noattrend) -> declarator_noattrend . [ VOLATILE VOID UNSIGNED UNION UNDERSCORE_BOOL STRUCT STATIC SIGNED SHORT SEMICOLON RESTRICT REGISTER PRE_NAME PACKED LONG LBRACE INT INLINE FLOAT EXTERN EQ ENUM DOUBLE CONST COMMA CHAR AUTO ATTRIBUTE ALIGNAS ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production declare_varname(declarator_noattrend) -> declarator_noattrend

State 547:
## Known stack suffix:
## init_declarator
## LR(1) items:
init_declarator_list -> init_declarator . [ SEMICOLON COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production init_declarator_list -> init_declarator

State 548:
## Known stack suffix:
## declaration(block_item)
## LR(1) items:
for_statement_header -> declaration(block_item) . [ TILDE STRING_LITERAL STAR SIZEOF SEMICOLON PRE_NAME PLUS MINUS LPAREN INC DEC CONSTANT BUILTIN_VA_ARG BANG AND ALIGNOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production for_statement_header -> declaration(block_item)

State 549:
## Known stack suffix:
## save_context
## LR(1) items:
do_statement1 -> save_context . DO statement [ WHILE ]
## Transitions:
-- On DO shift to state 550
## Reductions:

State 550:
## Known stack suffix:
## save_context DO
## LR(1) items:
do_statement1 -> save_context DO . statement [ WHILE ]
## Transitions:
-- On TILDE shift to state 18
-- On STRING_LITERAL shift to state 19
-- On STAR shift to state 20
-- On SIZEOF shift to state 21
-- On RETURN shift to state 421
-- On PRE_NAME shift to state 426
-- On PLUS shift to state 24
-- On MINUS shift to state 25
-- On LPAREN shift to state 28
-- On INC shift to state 31
-- On GOTO shift to state 429
-- On DEFAULT shift to state 432
-- On DEC shift to state 46
-- On CONTINUE shift to state 434
-- On CONSTANT shift to state 47
-- On CASE shift to state 436
-- On BUILTIN_VA_ARG shift to state 48
-- On BREAK shift to state 439
-- On BANG shift to state 50
-- On ASM shift to state 441
-- On AND shift to state 51
-- On ALIGNOF shift to state 52
-- On unary_operator shift to state 56
-- On unary_expression shift to state 65
-- On typedef_name shift to state 42
-- On string_literals_list shift to state 58
-- On statement shift to state 551
-- On shift_expression shift to state 78
-- On selection_statement shift to state 474
-- On save_context shift to state 475
-- On relational_expression shift to state 94
-- On primary_expression shift to state 60
-- On postfix_expression shift to state 61
-- On option(expression) shift to state 481
-- On multiplicative_expression shift to state 82
-- On logical_or_expression shift to state 102
-- On logical_and_expression shift to state 104
-- On labeled_statement shift to state 483
-- On jump_statement shift to state 484
-- On iteration_statement shift to state 485
-- On inclusive_or_expression shift to state 120
-- On general_identifier shift to state 486
-- On expression_statement shift to state 489
-- On expression shift to state 424
-- On exclusive_or_expression shift to state 119
-- On equality_expression shift to state 110
-- On conditional_expression shift to state 123
-- On compound_statement shift to state 490
-- On cast_expression shift to state 88
-- On assignment_expression shift to state 127
-- On asm_statement shift to state 491
-- On and_expression shift to state 118
-- On additive_expression shift to state 101
## Reductions:
-- On WHILE reduce production save_context ->
-- On SWITCH reduce production save_context ->
-- On SEMICOLON reduce production option(expression) ->
-- On LBRACE reduce production save_context ->
-- On IF reduce production save_context ->
-- On FOR reduce production save_context ->
-- On DO reduce production save_context ->

State 551:
## Known stack suffix:
## save_context DO statement
## LR(1) items:
do_statement1 -> save_context DO statement . [ WHILE ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production do_statement1 -> save_context DO statement

State 552:
## Known stack suffix:
## save_context ifelse_statement1
## LR(1) items:
selection_statement -> save_context ifelse_statement1 . statement [ WHILE VOLATILE VOID UNSIGNED UNION UNDERSCORE_BOOL TYPEDEF TILDE SWITCH STRUCT STRING_LITERAL STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACE PRE_NAME PRAGMA PLUS PACKED MINUS LPAREN LONG LBRACE INT INLINE INC IF GOTO FOR FLOAT EXTERN ENUM ELSE DOUBLE DO DEFAULT DEC CONTINUE CONSTANT CONST CHAR CASE BUILTIN_VA_ARG BREAK BANG AUTO ATTRIBUTE ASM AND ALIGNOF ALIGNAS ]
## Transitions:
-- On TILDE shift to state 18
-- On STRING_LITERAL shift to state 19
-- On STAR shift to state 20
-- On SIZEOF shift to state 21
-- On RETURN shift to state 421
-- On PRE_NAME shift to state 426
-- On PLUS shift to state 24
-- On MINUS shift to state 25
-- On LPAREN shift to state 28
-- On INC shift to state 31
-- On GOTO shift to state 429
-- On DEFAULT shift to state 432
-- On DEC shift to state 46
-- On CONTINUE shift to state 434
-- On CONSTANT shift to state 47
-- On CASE shift to state 436
-- On BUILTIN_VA_ARG shift to state 48
-- On BREAK shift to state 439
-- On BANG shift to state 50
-- On ASM shift to state 441
-- On AND shift to state 51
-- On ALIGNOF shift to state 52
-- On unary_operator shift to state 56
-- On unary_expression shift to state 65
-- On typedef_name shift to state 42
-- On string_literals_list shift to state 58
-- On statement shift to state 553
-- On shift_expression shift to state 78
-- On selection_statement shift to state 474
-- On save_context shift to state 475
-- On relational_expression shift to state 94
-- On primary_expression shift to state 60
-- On postfix_expression shift to state 61
-- On option(expression) shift to state 481
-- On multiplicative_expression shift to state 82
-- On logical_or_expression shift to state 102
-- On logical_and_expression shift to state 104
-- On labeled_statement shift to state 483
-- On jump_statement shift to state 484
-- On iteration_statement shift to state 485
-- On inclusive_or_expression shift to state 120
-- On general_identifier shift to state 486
-- On expression_statement shift to state 489
-- On expression shift to state 424
-- On exclusive_or_expression shift to state 119
-- On equality_expression shift to state 110
-- On conditional_expression shift to state 123
-- On compound_statement shift to state 490
-- On cast_expression shift to state 88
-- On assignment_expression shift to state 127
-- On asm_statement shift to state 491
-- On and_expression shift to state 118
-- On additive_expression shift to state 101
## Reductions:
-- On WHILE reduce production save_context ->
-- On SWITCH reduce production save_context ->
-- On SEMICOLON reduce production option(expression) ->
-- On LBRACE reduce production save_context ->
-- On IF reduce production save_context ->
-- On FOR reduce production save_context ->
-- On DO reduce production save_context ->

State 553:
## Known stack suffix:
## save_context ifelse_statement1 statement
## LR(1) items:
selection_statement -> save_context ifelse_statement1 statement . [ WHILE VOLATILE VOID UNSIGNED UNION UNDERSCORE_BOOL TYPEDEF TILDE SWITCH STRUCT STRING_LITERAL STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACE PRE_NAME PRAGMA PLUS PACKED MINUS LPAREN LONG LBRACE INT INLINE INC IF GOTO FOR FLOAT EXTERN ENUM ELSE DOUBLE DO DEFAULT DEC CONTINUE CONSTANT CONST CHAR CASE BUILTIN_VA_ARG BREAK BANG AUTO ATTRIBUTE ASM AND ALIGNOF ALIGNAS ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production selection_statement -> save_context ifelse_statement1 statement

State 554:
## Known stack suffix:
## save_context do_statement1
## LR(1) items:
iteration_statement -> save_context do_statement1 . WHILE LPAREN expression RPAREN SEMICOLON [ WHILE VOLATILE VOID UNSIGNED UNION UNDERSCORE_BOOL TYPEDEF TILDE SWITCH STRUCT STRING_LITERAL STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACE PRE_NAME PRAGMA PLUS PACKED MINUS LPAREN LONG LBRACE INT INLINE INC IF GOTO FOR FLOAT EXTERN ENUM ELSE DOUBLE DO DEFAULT DEC CONTINUE CONSTANT CONST CHAR CASE BUILTIN_VA_ARG BREAK BANG AUTO ATTRIBUTE ASM AND ALIGNOF ALIGNAS ]
## Transitions:
-- On WHILE shift to state 555
## Reductions:

State 555:
## Known stack suffix:
## save_context do_statement1 WHILE
## LR(1) items:
iteration_statement -> save_context do_statement1 WHILE . LPAREN expression RPAREN SEMICOLON [ WHILE VOLATILE VOID UNSIGNED UNION UNDERSCORE_BOOL TYPEDEF TILDE SWITCH STRUCT STRING_LITERAL STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACE PRE_NAME PRAGMA PLUS PACKED MINUS LPAREN LONG LBRACE INT INLINE INC IF GOTO FOR FLOAT EXTERN ENUM ELSE DOUBLE DO DEFAULT DEC CONTINUE CONSTANT CONST CHAR CASE BUILTIN_VA_ARG BREAK BANG AUTO ATTRIBUTE ASM AND ALIGNOF ALIGNAS ]
## Transitions:
-- On LPAREN shift to state 556
## Reductions:

State 556:
## Known stack suffix:
## save_context do_statement1 WHILE LPAREN
## LR(1) items:
iteration_statement -> save_context do_statement1 WHILE LPAREN . expression RPAREN SEMICOLON [ WHILE VOLATILE VOID UNSIGNED UNION UNDERSCORE_BOOL TYPEDEF TILDE SWITCH STRUCT STRING_LITERAL STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACE PRE_NAME PRAGMA PLUS PACKED MINUS LPAREN LONG LBRACE INT INLINE INC IF GOTO FOR FLOAT EXTERN ENUM ELSE DOUBLE DO DEFAULT DEC CONTINUE CONSTANT CONST CHAR CASE BUILTIN_VA_ARG BREAK BANG AUTO ATTRIBUTE ASM AND ALIGNOF ALIGNAS ]
## Transitions:
-- On TILDE shift to state 18
-- On STRING_LITERAL shift to state 19
-- On STAR shift to state 20
-- On SIZEOF shift to state 21
-- On PRE_NAME shift to state 22
-- On PLUS shift to state 24
-- On MINUS shift to state 25
-- On LPAREN shift to state 28
-- On INC shift to state 31
-- On DEC shift to state 46
-- On CONSTANT shift to state 47
-- On BUILTIN_VA_ARG shift to state 48
-- On BANG shift to state 50
-- On AND shift to state 51
-- On ALIGNOF shift to state 52
-- On unary_operator shift to state 56
-- On unary_expression shift to state 65
-- On string_literals_list shift to state 58
-- On shift_expression shift to state 78
-- On relational_expression shift to state 94
-- On primary_expression shift to state 60
-- On postfix_expression shift to state 61
-- On multiplicative_expression shift to state 82
-- On logical_or_expression shift to state 102
-- On logical_and_expression shift to state 104
-- On inclusive_or_expression shift to state 120
-- On expression shift to state 557
-- On exclusive_or_expression shift to state 119
-- On equality_expression shift to state 110
-- On conditional_expression shift to state 123
-- On cast_expression shift to state 88
-- On assignment_expression shift to state 127
-- On and_expression shift to state 118
-- On additive_expression shift to state 101
## Reductions:

State 557:
## Known stack suffix:
## save_context do_statement1 WHILE LPAREN expression
## LR(1) items:
expression -> expression . COMMA assignment_expression [ RPAREN COMMA ]
iteration_statement -> save_context do_statement1 WHILE LPAREN expression . RPAREN SEMICOLON [ WHILE VOLATILE VOID UNSIGNED UNION UNDERSCORE_BOOL TYPEDEF TILDE SWITCH STRUCT STRING_LITERAL STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACE PRE_NAME PRAGMA PLUS PACKED MINUS LPAREN LONG LBRACE INT INLINE INC IF GOTO FOR FLOAT EXTERN ENUM ELSE DOUBLE DO DEFAULT DEC CONTINUE CONSTANT CONST CHAR CASE BUILTIN_VA_ARG BREAK BANG AUTO ATTRIBUTE ASM AND ALIGNOF ALIGNAS ]
## Transitions:
-- On RPAREN shift to state 558
-- On COMMA shift to state 122
## Reductions:

State 558:
## Known stack suffix:
## save_context do_statement1 WHILE LPAREN expression RPAREN
## LR(1) items:
iteration_statement -> save_context do_statement1 WHILE LPAREN expression RPAREN . SEMICOLON [ WHILE VOLATILE VOID UNSIGNED UNION UNDERSCORE_BOOL TYPEDEF TILDE SWITCH STRUCT STRING_LITERAL STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACE PRE_NAME PRAGMA PLUS PACKED MINUS LPAREN LONG LBRACE INT INLINE INC IF GOTO FOR FLOAT EXTERN ENUM ELSE DOUBLE DO DEFAULT DEC CONTINUE CONSTANT CONST CHAR CASE BUILTIN_VA_ARG BREAK BANG AUTO ATTRIBUTE ASM AND ALIGNOF ALIGNAS ]
## Transitions:
-- On SEMICOLON shift to state 559
## Reductions:

State 559:
## Known stack suffix:
## save_context do_statement1 WHILE LPAREN expression RPAREN SEMICOLON
## LR(1) items:
iteration_statement -> save_context do_statement1 WHILE LPAREN expression RPAREN SEMICOLON . [ WHILE VOLATILE VOID UNSIGNED UNION UNDERSCORE_BOOL TYPEDEF TILDE SWITCH STRUCT STRING_LITERAL STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACE PRE_NAME PRAGMA PLUS PACKED MINUS LPAREN LONG LBRACE INT INLINE INC IF GOTO FOR FLOAT EXTERN ENUM ELSE DOUBLE DO DEFAULT DEC CONTINUE CONSTANT CONST CHAR CASE BUILTIN_VA_ARG BREAK BANG AUTO ATTRIBUTE ASM AND ALIGNOF ALIGNAS ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production iteration_statement -> save_context do_statement1 WHILE LPAREN expression RPAREN SEMICOLON

State 560:
## Known stack suffix:
## DEFAULT COLON statement
## LR(1) items:
labeled_statement -> DEFAULT COLON statement . [ WHILE VOLATILE VOID UNSIGNED UNION UNDERSCORE_BOOL TYPEDEF TILDE SWITCH STRUCT STRING_LITERAL STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACE PRE_NAME PRAGMA PLUS PACKED MINUS LPAREN LONG LBRACE INT INLINE INC IF GOTO FOR FLOAT EXTERN ENUM ELSE DOUBLE DO DEFAULT DEC CONTINUE CONSTANT CONST CHAR CASE BUILTIN_VA_ARG BREAK BANG AUTO ATTRIBUTE ASM AND ALIGNOF ALIGNAS ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production labeled_statement -> DEFAULT COLON statement

State 561:
## Known stack suffix:
## typedef_name
## LR(1) items:
declaration_specifiers(declaration(block_item)) -> typedef_name . list(declaration_specifier_no_type) [ STAR SEMICOLON PRE_NAME LPAREN ]
declaration_specifiers_typedef -> typedef_name . list(declaration_specifier_no_type) TYPEDEF list(declaration_specifier_no_type) [ STAR SEMICOLON PRE_NAME LPAREN ]
general_identifier -> typedef_name . [ COLON ]
## Transitions:
-- On list(declaration_specifier_no_type) shift to state 508
## Reductions:
-- On VOLATILE reduce production list(declaration_specifier_no_type) ->
-- On TYPEDEF reduce production list(declaration_specifier_no_type) ->
-- On STATIC reduce production list(declaration_specifier_no_type) ->
-- On STAR reduce production list(declaration_specifier_no_type) ->
-- On SEMICOLON reduce production list(declaration_specifier_no_type) ->
-- On RESTRICT reduce production list(declaration_specifier_no_type) ->
-- On REGISTER reduce production list(declaration_specifier_no_type) ->
-- On PRE_NAME reduce production list(declaration_specifier_no_type) ->
-- On PACKED reduce production list(declaration_specifier_no_type) ->
-- On LPAREN reduce production list(declaration_specifier_no_type) ->
-- On INLINE reduce production list(declaration_specifier_no_type) ->
-- On EXTERN reduce production list(declaration_specifier_no_type) ->
-- On CONST reduce production list(declaration_specifier_no_type) ->
-- On COLON reduce production general_identifier -> typedef_name
-- On AUTO reduce production list(declaration_specifier_no_type) ->
-- On ATTRIBUTE reduce production list(declaration_specifier_no_type) ->
-- On ALIGNAS reduce production list(declaration_specifier_no_type) ->

State 562:
## Known stack suffix:
## statement
## LR(1) items:
block_item -> statement . [ WHILE VOLATILE VOID UNSIGNED UNION UNDERSCORE_BOOL TYPEDEF TILDE SWITCH STRUCT STRING_LITERAL STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACE PRE_NAME PRAGMA PLUS PACKED MINUS LPAREN LONG LBRACE INT INLINE INC IF GOTO FOR FLOAT EXTERN ENUM DOUBLE DO DEFAULT DEC CONTINUE CONSTANT CONST CHAR CASE BUILTIN_VA_ARG BREAK BANG AUTO ATTRIBUTE ASM AND ALIGNOF ALIGNAS ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production block_item -> statement

State 563:
## Known stack suffix:
## declaration(block_item)
## LR(1) items:
block_item -> declaration(block_item) . [ WHILE VOLATILE VOID UNSIGNED UNION UNDERSCORE_BOOL TYPEDEF TILDE SWITCH STRUCT STRING_LITERAL STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACE PRE_NAME PRAGMA PLUS PACKED MINUS LPAREN LONG LBRACE INT INLINE INC IF GOTO FOR FLOAT EXTERN ENUM DOUBLE DO DEFAULT DEC CONTINUE CONSTANT CONST CHAR CASE BUILTIN_VA_ARG BREAK BANG AUTO ATTRIBUTE ASM AND ALIGNOF ALIGNAS ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production block_item -> declaration(block_item)

State 564:
## Known stack suffix:
## option(block_item_list) block_item
## LR(1) items:
block_item_list -> option(block_item_list) block_item . [ WHILE VOLATILE VOID UNSIGNED UNION UNDERSCORE_BOOL TYPEDEF TILDE SWITCH STRUCT STRING_LITERAL STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACE PRE_NAME PRAGMA PLUS PACKED MINUS LPAREN LONG LBRACE INT INLINE INC IF GOTO FOR FLOAT EXTERN ENUM DOUBLE DO DEFAULT DEC CONTINUE CONSTANT CONST CHAR CASE BUILTIN_VA_ARG BREAK BANG AUTO ATTRIBUTE ASM AND ALIGNOF ALIGNAS ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production block_item_list -> option(block_item_list) block_item

State 565:
## Known stack suffix:
## block_item_list
## LR(1) items:
option(block_item_list) -> block_item_list . [ WHILE VOLATILE VOID UNSIGNED UNION UNDERSCORE_BOOL TYPEDEF TILDE SWITCH STRUCT STRING_LITERAL STATIC STAR SIZEOF SIGNED SHORT SEMICOLON RETURN RESTRICT REGISTER RBRACE PRE_NAME PRAGMA PLUS PACKED MINUS LPAREN LONG LBRACE INT INLINE INC IF GOTO FOR FLOAT EXTERN ENUM DOUBLE DO DEFAULT DEC CONTINUE CONSTANT CONST CHAR CASE BUILTIN_VA_ARG BREAK BANG AUTO ATTRIBUTE ASM AND ALIGNOF ALIGNAS ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production option(block_item_list) -> block_item_list

State 566:
## Known stack suffix:
## function_definition1 compound_statement
## LR(1) items:
function_definition -> function_definition1 compound_statement . [ VOLATILE VOID UNSIGNED UNION UNDERSCORE_BOOL TYPEDEF STRUCT STATIC SIGNED SHORT SEMICOLON RESTRICT REGISTER PRE_NAME PRAGMA PACKED LONG INT INLINE FLOAT EXTERN EOF ENUM DOUBLE CONST CHAR AUTO ATTRIBUTE ALIGNAS ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production function_definition -> function_definition1 compound_statement

State 567:
## Known stack suffix:
## function_definition
## LR(1) items:
external_declaration -> function_definition . [ VOLATILE VOID UNSIGNED UNION UNDERSCORE_BOOL TYPEDEF STRUCT STATIC SIGNED SHORT SEMICOLON RESTRICT REGISTER PRE_NAME PRAGMA PACKED LONG INT INLINE FLOAT EXTERN EOF ENUM DOUBLE CONST CHAR AUTO ATTRIBUTE ALIGNAS ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production external_declaration -> function_definition

State 568:
## Known stack suffix:
## translation_unit external_declaration
## LR(1) items:
translation_unit -> translation_unit external_declaration . [ VOLATILE VOID UNSIGNED UNION UNDERSCORE_BOOL TYPEDEF STRUCT STATIC SIGNED SHORT SEMICOLON RESTRICT REGISTER PRE_NAME PRAGMA PACKED LONG INT INLINE FLOAT EXTERN EOF ENUM DOUBLE CONST CHAR AUTO ATTRIBUTE ALIGNAS ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production translation_unit -> translation_unit external_declaration

State 569:
## Known stack suffix:
## declaration_specifiers_typedef
## LR(1) items:
declaration(external_declaration) -> declaration_specifiers_typedef . option(typedef_declarator_list) SEMICOLON [ VOLATILE VOID UNSIGNED UNION UNDERSCORE_BOOL TYPEDEF STRUCT STATIC SIGNED SHORT SEMICOLON RESTRICT REGISTER PRE_NAME PRAGMA PACKED LONG INT INLINE FLOAT EXTERN EOF ENUM DOUBLE CONST CHAR AUTO ATTRIBUTE ALIGNAS ]
## Transitions:
-- On PRE_NAME shift to state 178
-- On LPAREN shift to state 182
-- On typedef_declarator_list shift to state 527
-- On typedef_declarator shift to state 532
-- On option(typedef_declarator_list) shift to state 570
-- On list(pointer1) shift to state 184
-- On direct_declarator shift to state 250
-- On declare_typename(declarator) shift to state 530
-- On declarator_noattrend shift to state 255
-- On declarator_identifier shift to state 249
-- On declarator shift to state 531
## Reductions:
-- On STAR reduce production list(pointer1) ->
-- On SEMICOLON reduce production option(typedef_declarator_list) ->

State 570:
## Known stack suffix:
## declaration_specifiers_typedef option(typedef_declarator_list)
## LR(1) items:
declaration(external_declaration) -> declaration_specifiers_typedef option(typedef_declarator_list) . SEMICOLON [ VOLATILE VOID UNSIGNED UNION UNDERSCORE_BOOL TYPEDEF STRUCT STATIC SIGNED SHORT SEMICOLON RESTRICT REGISTER PRE_NAME PRAGMA PACKED LONG INT INLINE FLOAT EXTERN EOF ENUM DOUBLE CONST CHAR AUTO ATTRIBUTE ALIGNAS ]
## Transitions:
-- On SEMICOLON shift to state 571
## Reductions:

State 571:
## Known stack suffix:
## declaration_specifiers_typedef option(typedef_declarator_list) SEMICOLON
## LR(1) items:
declaration(external_declaration) -> declaration_specifiers_typedef option(typedef_declarator_list) SEMICOLON . [ VOLATILE VOID UNSIGNED UNION UNDERSCORE_BOOL TYPEDEF STRUCT STATIC SIGNED SHORT SEMICOLON RESTRICT REGISTER PRE_NAME PRAGMA PACKED LONG INT INLINE FLOAT EXTERN EOF ENUM DOUBLE CONST CHAR AUTO ATTRIBUTE ALIGNAS ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production declaration(external_declaration) -> declaration_specifiers_typedef option(typedef_declarator_list) SEMICOLON

State 572:
## Known stack suffix:
## declaration_specifiers(declaration(external_declaration))
## LR(1) items:
declaration(external_declaration) -> declaration_specifiers(declaration(external_declaration)) . option(init_declarator_list) SEMICOLON [ VOLATILE VOID UNSIGNED UNION UNDERSCORE_BOOL TYPEDEF STRUCT STATIC SIGNED SHORT SEMICOLON RESTRICT REGISTER PRE_NAME PRAGMA PACKED LONG INT INLINE FLOAT EXTERN EOF ENUM DOUBLE CONST CHAR AUTO ATTRIBUTE ALIGNAS ]
function_definition1 -> declaration_specifiers(declaration(external_declaration)) . declare_varname(declarator_noattrend) save_context attribute_specifier_list save_context [ LBRACE ]
function_definition1 -> declaration_specifiers(declaration(external_declaration)) . declare_varname(declarator_noattrend) save_context declaration_list [ LBRACE ]
## Transitions:
-- On PRE_NAME shift to state 178
-- On LPAREN shift to state 182
-- On option(init_declarator_list) shift to state 573
-- On list(pointer1) shift to state 184
-- On init_declarator_list shift to state 538
-- On init_declarator shift to state 547
-- On direct_declarator shift to state 250
-- On declare_varname(declarator_noattrend) shift to state 575
-- On declarator_noattrend shift to state 546
-- On declarator_identifier shift to state 249
## Reductions:
-- On STAR reduce production list(pointer1) ->
-- On SEMICOLON reduce production option(init_declarator_list) ->

State 573:
## Known stack suffix:
## declaration_specifiers(declaration(external_declaration)) option(init_declarator_list)
## LR(1) items:
declaration(external_declaration) -> declaration_specifiers(declaration(external_declaration)) option(init_declarator_list) . SEMICOLON [ VOLATILE VOID UNSIGNED UNION UNDERSCORE_BOOL TYPEDEF STRUCT STATIC SIGNED SHORT SEMICOLON RESTRICT REGISTER PRE_NAME PRAGMA PACKED LONG INT INLINE FLOAT EXTERN EOF ENUM DOUBLE CONST CHAR AUTO ATTRIBUTE ALIGNAS ]
## Transitions:
-- On SEMICOLON shift to state 574
## Reductions:

State 574:
## Known stack suffix:
## declaration_specifiers(declaration(external_declaration)) option(init_declarator_list) SEMICOLON
## LR(1) items:
declaration(external_declaration) -> declaration_specifiers(declaration(external_declaration)) option(init_declarator_list) SEMICOLON . [ VOLATILE VOID UNSIGNED UNION UNDERSCORE_BOOL TYPEDEF STRUCT STATIC SIGNED SHORT SEMICOLON RESTRICT REGISTER PRE_NAME PRAGMA PACKED LONG INT INLINE FLOAT EXTERN EOF ENUM DOUBLE CONST CHAR AUTO ATTRIBUTE ALIGNAS ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production declaration(external_declaration) -> declaration_specifiers(declaration(external_declaration)) option(init_declarator_list) SEMICOLON

State 575:
## Known stack suffix:
## declaration_specifiers(declaration(external_declaration)) declare_varname(declarator_noattrend)
## LR(1) items:
function_definition1 -> declaration_specifiers(declaration(external_declaration)) declare_varname(declarator_noattrend) . save_context attribute_specifier_list save_context [ LBRACE ]
function_definition1 -> declaration_specifiers(declaration(external_declaration)) declare_varname(declarator_noattrend) . save_context declaration_list [ LBRACE ]
init_declarator -> declare_varname(declarator_noattrend) . save_context attribute_specifier_list [ SEMICOLON COMMA ]
init_declarator -> declare_varname(declarator_noattrend) . save_context attribute_specifier_list EQ c_initializer [ SEMICOLON COMMA ]
## Transitions:
-- On save_context shift to state 576
## Default reduction:
-- After reading the next token, reduce production save_context ->

State 576:
## Known stack suffix:
## declaration_specifiers(declaration(external_declaration)) declare_varname(declarator_noattrend) save_context
## LR(1) items:
function_definition1 -> declaration_specifiers(declaration(external_declaration)) declare_varname(declarator_noattrend) save_context . attribute_specifier_list save_context [ LBRACE ]
function_definition1 -> declaration_specifiers(declaration(external_declaration)) declare_varname(declarator_noattrend) save_context . declaration_list [ LBRACE ]
init_declarator -> declare_varname(declarator_noattrend) save_context . attribute_specifier_list [ SEMICOLON COMMA ]
init_declarator -> declare_varname(declarator_noattrend) save_context . attribute_specifier_list EQ c_initializer [ SEMICOLON COMMA ]
## Transitions:
-- On VOLATILE shift to state 1
-- On VOID shift to state 2
-- On UNSIGNED shift to state 3
-- On UNION shift to state 4
-- On UNDERSCORE_BOOL shift to state 5
-- On STRUCT shift to state 8
-- On STATIC shift to state 9
-- On SIGNED shift to state 10
-- On SHORT shift to state 11
-- On RESTRICT shift to state 12
-- On REGISTER shift to state 13
-- On PRE_NAME shift to state 14
-- On PACKED shift to state 16
-- On LONG shift to state 29
-- On INT shift to state 30
-- On INLINE shift to state 192
-- On FLOAT shift to state 33
-- On EXTERN shift to state 193
-- On ENUM shift to state 34
-- On DOUBLE shift to state 54
-- On CONST shift to state 148
-- On CHAR shift to state 55
-- On AUTO shift to state 194
-- On ATTRIBUTE shift to state 35
-- On ALIGNAS shift to state 149
-- On typedef_name shift to state 577
-- On type_specifier_no_typedef_name shift to state 579
-- On type_qualifier_noattr shift to state 209
-- On struct_or_union_specifier shift to state 155
-- On struct_or_union shift to state 156
-- On storage_class_specifier_no_typedef shift to state 210
-- On rlist(declaration_specifier_no_type) shift to state 581
-- On kr_param_declaration shift to state 586
-- On function_specifier shift to state 212
-- On enum_specifier shift to state 169
-- On declaration_specifiers(declaration(block_item)) shift to state 587
-- On declaration_list shift to state 590
-- On attribute_specifier_list shift to state 592
-- On attribute_specifier shift to state 594
## Reductions:
-- On XOR_ASSIGN reduce production attribute_specifier_list ->
-- On WHILE reduce production attribute_specifier_list ->
-- On VAR_NAME reduce production attribute_specifier_list ->
-- On TYPEDEF_NAME reduce production attribute_specifier_list ->
-- On TYPEDEF reduce production attribute_specifier_list ->
-- On TILDE reduce production attribute_specifier_list ->
-- On SWITCH reduce production attribute_specifier_list ->
-- On SUB_ASSIGN reduce production attribute_specifier_list ->
-- On STRING_LITERAL reduce production attribute_specifier_list ->
-- On STAR reduce production attribute_specifier_list ->
-- On SLASH reduce production attribute_specifier_list ->
-- On SIZEOF reduce production attribute_specifier_list ->
-- On SEMICOLON reduce production attribute_specifier_list ->
-- On RPAREN reduce production attribute_specifier_list ->
-- On RIGHT_ASSIGN reduce production attribute_specifier_list ->
-- On RIGHT reduce production attribute_specifier_list ->
-- On RETURN reduce production attribute_specifier_list ->
-- On RBRACK reduce production attribute_specifier_list ->
-- On RBRACE reduce production attribute_specifier_list ->
-- On QUESTION reduce production attribute_specifier_list ->
-- On PTR reduce production attribute_specifier_list ->
-- On PRAGMA reduce production attribute_specifier_list ->
-- On PLUS reduce production attribute_specifier_list ->
-- On PERCENT reduce production attribute_specifier_list ->
-- On OR_ASSIGN reduce production attribute_specifier_list ->
-- On NEQ reduce production attribute_specifier_list ->
-- On MUL_ASSIGN reduce production attribute_specifier_list ->
-- On MOD_ASSIGN reduce production attribute_specifier_list ->
-- On MINUS reduce production attribute_specifier_list ->
-- On LT reduce production attribute_specifier_list ->
-- On LPAREN reduce production attribute_specifier_list ->
-- On LEQ reduce production attribute_specifier_list ->
-- On LEFT_ASSIGN reduce production attribute_specifier_list ->
-- On LEFT reduce production attribute_specifier_list ->
-- On LBRACK reduce production attribute_specifier_list ->
-- On LBRACE reduce production attribute_specifier_list ->
-- On INC reduce production attribute_specifier_list ->
-- On IF reduce production attribute_specifier_list ->
-- On HAT reduce production attribute_specifier_list ->
-- On GT reduce production attribute_specifier_list ->
-- On GOTO reduce production attribute_specifier_list ->
-- On GEQ reduce production attribute_specifier_list ->
-- On FOR reduce production attribute_specifier_list ->
-- On EQEQ reduce production attribute_specifier_list ->
-- On EQ reduce production attribute_specifier_list ->
-- On EOF reduce production attribute_specifier_list ->
-- On ELSE reduce production attribute_specifier_list ->
-- On ELLIPSIS reduce production attribute_specifier_list ->
-- On DOT reduce production attribute_specifier_list ->
-- On DO reduce production attribute_specifier_list ->
-- On DIV_ASSIGN reduce production attribute_specifier_list ->
-- On DEFAULT reduce production attribute_specifier_list ->
-- On DEC reduce production attribute_specifier_list ->
-- On CONTINUE reduce production attribute_specifier_list ->
-- On CONSTANT reduce production attribute_specifier_list ->
-- On COMMA reduce production attribute_specifier_list ->
-- On COLON reduce production attribute_specifier_list ->
-- On CASE reduce production attribute_specifier_list ->
-- On BUILTIN_VA_ARG reduce production attribute_specifier_list ->
-- On BREAK reduce production attribute_specifier_list ->
-- On BARBAR reduce production attribute_specifier_list ->
-- On BAR reduce production attribute_specifier_list ->
-- On BANG reduce production attribute_specifier_list ->
-- On ASM reduce production attribute_specifier_list ->
-- On AND_ASSIGN reduce production attribute_specifier_list ->
-- On ANDAND reduce production attribute_specifier_list ->
-- On AND reduce production attribute_specifier_list ->
-- On ALIGNOF reduce production attribute_specifier_list ->
-- On ADD_ASSIGN reduce production attribute_specifier_list ->

State 577:
## Known stack suffix:
## typedef_name
## LR(1) items:
declaration_specifiers(declaration(block_item)) -> typedef_name . list(declaration_specifier_no_type) [ STAR SEMICOLON PRE_NAME LPAREN ]
## Transitions:
-- On list(declaration_specifier_no_type) shift to state 578
## Default reduction:
-- After reading the next token, reduce production list(declaration_specifier_no_type) ->

State 578:
## Known stack suffix:
## typedef_name list(declaration_specifier_no_type)
## LR(1) items:
declaration_specifiers(declaration(block_item)) -> typedef_name list(declaration_specifier_no_type) . [ STAR SEMICOLON PRE_NAME LPAREN ]
list(declaration_specifier_no_type) -> list(declaration_specifier_no_type) . storage_class_specifier_no_typedef [ VOLATILE STATIC STAR SEMICOLON RESTRICT REGISTER PRE_NAME PACKED LPAREN INLINE EXTERN CONST AUTO ATTRIBUTE ALIGNAS ]
list(declaration_specifier_no_type) -> list(declaration_specifier_no_type) . type_qualifier_noattr [ VOLATILE STATIC STAR SEMICOLON RESTRICT REGISTER PRE_NAME PACKED LPAREN INLINE EXTERN CONST AUTO ATTRIBUTE ALIGNAS ]
list(declaration_specifier_no_type) -> list(declaration_specifier_no_type) . function_specifier [ VOLATILE STATIC STAR SEMICOLON RESTRICT REGISTER PRE_NAME PACKED LPAREN INLINE EXTERN CONST AUTO ATTRIBUTE ALIGNAS ]
list(declaration_specifier_no_type) -> list(declaration_specifier_no_type) . attribute_specifier [ VOLATILE STATIC STAR SEMICOLON RESTRICT REGISTER PRE_NAME PACKED LPAREN INLINE EXTERN CONST AUTO ATTRIBUTE ALIGNAS ]
## Transitions:
-- On VOLATILE shift to state 1
-- On STATIC shift to state 9
-- On RESTRICT shift to state 12
-- On REGISTER shift to state 13
-- On PACKED shift to state 16
-- On INLINE shift to state 192
-- On EXTERN shift to state 193
-- On CONST shift to state 148
-- On AUTO shift to state 194
-- On ATTRIBUTE shift to state 35
-- On ALIGNAS shift to state 149
-- On type_qualifier_noattr shift to state 197
-- On storage_class_specifier_no_typedef shift to state 198
-- On function_specifier shift to state 199
-- On attribute_specifier shift to state 200
## Reductions:
-- On STAR reduce production declaration_specifiers(declaration(block_item)) -> typedef_name list(declaration_specifier_no_type)
-- On SEMICOLON reduce production declaration_specifiers(declaration(block_item)) -> typedef_name list(declaration_specifier_no_type)
-- On PRE_NAME reduce production declaration_specifiers(declaration(block_item)) -> typedef_name list(declaration_specifier_no_type)
-- On LPAREN reduce production declaration_specifiers(declaration(block_item)) -> typedef_name list(declaration_specifier_no_type)

State 579:
## Known stack suffix:
## type_specifier_no_typedef_name
## LR(1) items:
declaration_specifiers(declaration(block_item)) -> type_specifier_no_typedef_name . list(declaration_specifier_no_typedef_name) [ STAR SEMICOLON PRE_NAME LPAREN ]
## Transitions:
-- On list(declaration_specifier_no_typedef_name) shift to state 580
## Default reduction:
-- After reading the next token, reduce production list(declaration_specifier_no_typedef_name) ->

State 580:
## Known stack suffix:
## type_specifier_no_typedef_name list(declaration_specifier_no_typedef_name)
## LR(1) items:
declaration_specifiers(declaration(block_item)) -> type_specifier_no_typedef_name list(declaration_specifier_no_typedef_name) . [ STAR SEMICOLON PRE_NAME LPAREN ]
list(declaration_specifier_no_typedef_name) -> list(declaration_specifier_no_typedef_name) . declaration_specifier_no_typedef_name [ VOLATILE VOID UNSIGNED UNION UNDERSCORE_BOOL STRUCT STATIC STAR SIGNED SHORT SEMICOLON RESTRICT REGISTER PRE_NAME PACKED LPAREN LONG INT INLINE FLOAT EXTERN ENUM DOUBLE CONST CHAR AUTO ATTRIBUTE ALIGNAS ]
## Transitions:
-- On VOLATILE shift to state 1
-- On VOID shift to state 2
-- On UNSIGNED shift to state 3
-- On UNION shift to state 4
-- On UNDERSCORE_BOOL shift to state 5
-- On STRUCT shift to state 8
-- On STATIC shift to state 9
-- On SIGNED shift to state 10
-- On SHORT shift to state 11
-- On RESTRICT shift to state 12
-- On REGISTER shift to state 13
-- On PACKED shift to state 16
-- On LONG shift to state 29
-- On INT shift to state 30
-- On INLINE shift to state 192
-- On FLOAT shift to state 33
-- On EXTERN shift to state 193
-- On ENUM shift to state 34
-- On DOUBLE shift to state 54
-- On CONST shift to state 148
-- On CHAR shift to state 55
-- On AUTO shift to state 194
-- On ATTRIBUTE shift to state 35
-- On ALIGNAS shift to state 149
-- On type_specifier_no_typedef_name shift to state 203
-- On type_qualifier_noattr shift to state 204
-- On struct_or_union_specifier shift to state 155
-- On struct_or_union shift to state 156
-- On storage_class_specifier_no_typedef shift to state 205
-- On function_specifier shift to state 206
-- On enum_specifier shift to state 169
-- On declaration_specifier_no_typedef_name shift to state 207
-- On attribute_specifier shift to state 208
## Reductions:
-- On STAR reduce production declaration_specifiers(declaration(block_item)) -> type_specifier_no_typedef_name list(declaration_specifier_no_typedef_name)
-- On SEMICOLON reduce production declaration_specifiers(declaration(block_item)) -> type_specifier_no_typedef_name list(declaration_specifier_no_typedef_name)
-- On PRE_NAME reduce production declaration_specifiers(declaration(block_item)) -> type_specifier_no_typedef_name list(declaration_specifier_no_typedef_name)
-- On LPAREN reduce production declaration_specifiers(declaration(block_item)) -> type_specifier_no_typedef_name list(declaration_specifier_no_typedef_name)

State 581:
## Known stack suffix:
## rlist(declaration_specifier_no_type)
## LR(1) items:
declaration_specifiers(declaration(block_item)) -> rlist(declaration_specifier_no_type) . typedef_name list(declaration_specifier_no_type) [ STAR SEMICOLON PRE_NAME LPAREN ]
declaration_specifiers(declaration(block_item)) -> rlist(declaration_specifier_no_type) . type_specifier_no_typedef_name list(declaration_specifier_no_typedef_name) [ STAR SEMICOLON PRE_NAME LPAREN ]
## Transitions:
-- On VOID shift to state 2
-- On UNSIGNED shift to state 3
-- On UNION shift to state 4
-- On UNDERSCORE_BOOL shift to state 5
-- On STRUCT shift to state 8
-- On SIGNED shift to state 10
-- On SHORT shift to state 11
-- On PRE_NAME shift to state 14
-- On LONG shift to state 29
-- On INT shift to state 30
-- On FLOAT shift to state 33
-- On ENUM shift to state 34
-- On DOUBLE shift to state 54
-- On CHAR shift to state 55
-- On typedef_name shift to state 582
-- On type_specifier_no_typedef_name shift to state 584
-- On struct_or_union_specifier shift to state 155
-- On struct_or_union shift to state 156
-- On enum_specifier shift to state 169
## Reductions:

State 582:
## Known stack suffix:
## rlist(declaration_specifier_no_type) typedef_name
## LR(1) items:
declaration_specifiers(declaration(block_item)) -> rlist(declaration_specifier_no_type) typedef_name . list(declaration_specifier_no_type) [ STAR SEMICOLON PRE_NAME LPAREN ]
## Transitions:
-- On list(declaration_specifier_no_type) shift to state 583
## Default reduction:
-- After reading the next token, reduce production list(declaration_specifier_no_type) ->

State 583:
## Known stack suffix:
## rlist(declaration_specifier_no_type) typedef_name list(declaration_specifier_no_type)
## LR(1) items:
declaration_specifiers(declaration(block_item)) -> rlist(declaration_specifier_no_type) typedef_name list(declaration_specifier_no_type) . [ STAR SEMICOLON PRE_NAME LPAREN ]
list(declaration_specifier_no_type) -> list(declaration_specifier_no_type) . storage_class_specifier_no_typedef [ VOLATILE STATIC STAR SEMICOLON RESTRICT REGISTER PRE_NAME PACKED LPAREN INLINE EXTERN CONST AUTO ATTRIBUTE ALIGNAS ]
list(declaration_specifier_no_type) -> list(declaration_specifier_no_type) . type_qualifier_noattr [ VOLATILE STATIC STAR SEMICOLON RESTRICT REGISTER PRE_NAME PACKED LPAREN INLINE EXTERN CONST AUTO ATTRIBUTE ALIGNAS ]
list(declaration_specifier_no_type) -> list(declaration_specifier_no_type) . function_specifier [ VOLATILE STATIC STAR SEMICOLON RESTRICT REGISTER PRE_NAME PACKED LPAREN INLINE EXTERN CONST AUTO ATTRIBUTE ALIGNAS ]
list(declaration_specifier_no_type) -> list(declaration_specifier_no_type) . attribute_specifier [ VOLATILE STATIC STAR SEMICOLON RESTRICT REGISTER PRE_NAME PACKED LPAREN INLINE EXTERN CONST AUTO ATTRIBUTE ALIGNAS ]
## Transitions:
-- On VOLATILE shift to state 1
-- On STATIC shift to state 9
-- On RESTRICT shift to state 12
-- On REGISTER shift to state 13
-- On PACKED shift to state 16
-- On INLINE shift to state 192
-- On EXTERN shift to state 193
-- On CONST shift to state 148
-- On AUTO shift to state 194
-- On ATTRIBUTE shift to state 35
-- On ALIGNAS shift to state 149
-- On type_qualifier_noattr shift to state 197
-- On storage_class_specifier_no_typedef shift to state 198
-- On function_specifier shift to state 199
-- On attribute_specifier shift to state 200
## Reductions:
-- On STAR reduce production declaration_specifiers(declaration(block_item)) -> rlist(declaration_specifier_no_type) typedef_name list(declaration_specifier_no_type)
-- On SEMICOLON reduce production declaration_specifiers(declaration(block_item)) -> rlist(declaration_specifier_no_type) typedef_name list(declaration_specifier_no_type)
-- On PRE_NAME reduce production declaration_specifiers(declaration(block_item)) -> rlist(declaration_specifier_no_type) typedef_name list(declaration_specifier_no_type)
-- On LPAREN reduce production declaration_specifiers(declaration(block_item)) -> rlist(declaration_specifier_no_type) typedef_name list(declaration_specifier_no_type)

State 584:
## Known stack suffix:
## rlist(declaration_specifier_no_type) type_specifier_no_typedef_name
## LR(1) items:
declaration_specifiers(declaration(block_item)) -> rlist(declaration_specifier_no_type) type_specifier_no_typedef_name . list(declaration_specifier_no_typedef_name) [ STAR SEMICOLON PRE_NAME LPAREN ]
## Transitions:
-- On list(declaration_specifier_no_typedef_name) shift to state 585
## Default reduction:
-- After reading the next token, reduce production list(declaration_specifier_no_typedef_name) ->

State 585:
## Known stack suffix:
## rlist(declaration_specifier_no_type) type_specifier_no_typedef_name list(declaration_specifier_no_typedef_name)
## LR(1) items:
declaration_specifiers(declaration(block_item)) -> rlist(declaration_specifier_no_type) type_specifier_no_typedef_name list(declaration_specifier_no_typedef_name) . [ STAR SEMICOLON PRE_NAME LPAREN ]
list(declaration_specifier_no_typedef_name) -> list(declaration_specifier_no_typedef_name) . declaration_specifier_no_typedef_name [ VOLATILE VOID UNSIGNED UNION UNDERSCORE_BOOL STRUCT STATIC STAR SIGNED SHORT SEMICOLON RESTRICT REGISTER PRE_NAME PACKED LPAREN LONG INT INLINE FLOAT EXTERN ENUM DOUBLE CONST CHAR AUTO ATTRIBUTE ALIGNAS ]
## Transitions:
-- On VOLATILE shift to state 1
-- On VOID shift to state 2
-- On UNSIGNED shift to state 3
-- On UNION shift to state 4
-- On UNDERSCORE_BOOL shift to state 5
-- On STRUCT shift to state 8
-- On STATIC shift to state 9
-- On SIGNED shift to state 10
-- On SHORT shift to state 11
-- On RESTRICT shift to state 12
-- On REGISTER shift to state 13
-- On PACKED shift to state 16
-- On LONG shift to state 29
-- On INT shift to state 30
-- On INLINE shift to state 192
-- On FLOAT shift to state 33
-- On EXTERN shift to state 193
-- On ENUM shift to state 34
-- On DOUBLE shift to state 54
-- On CONST shift to state 148
-- On CHAR shift to state 55
-- On AUTO shift to state 194
-- On ATTRIBUTE shift to state 35
-- On ALIGNAS shift to state 149
-- On type_specifier_no_typedef_name shift to state 203
-- On type_qualifier_noattr shift to state 204
-- On struct_or_union_specifier shift to state 155
-- On struct_or_union shift to state 156
-- On storage_class_specifier_no_typedef shift to state 205
-- On function_specifier shift to state 206
-- On enum_specifier shift to state 169
-- On declaration_specifier_no_typedef_name shift to state 207
-- On attribute_specifier shift to state 208
## Reductions:
-- On STAR reduce production declaration_specifiers(declaration(block_item)) -> rlist(declaration_specifier_no_type) type_specifier_no_typedef_name list(declaration_specifier_no_typedef_name)
-- On SEMICOLON reduce production declaration_specifiers(declaration(block_item)) -> rlist(declaration_specifier_no_type) type_specifier_no_typedef_name list(declaration_specifier_no_typedef_name)
-- On PRE_NAME reduce production declaration_specifiers(declaration(block_item)) -> rlist(declaration_specifier_no_type) type_specifier_no_typedef_name list(declaration_specifier_no_typedef_name)
-- On LPAREN reduce production declaration_specifiers(declaration(block_item)) -> rlist(declaration_specifier_no_type) type_specifier_no_typedef_name list(declaration_specifier_no_typedef_name)

State 586:
## Known stack suffix:
## kr_param_declaration
## LR(1) items:
declaration_list -> kr_param_declaration . [ VOLATILE VOID UNSIGNED UNION UNDERSCORE_BOOL STRUCT STATIC SIGNED SHORT RESTRICT REGISTER PRE_NAME PACKED LONG LBRACE INT INLINE FLOAT EXTERN ENUM DOUBLE CONST CHAR AUTO ATTRIBUTE ALIGNAS ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production declaration_list -> kr_param_declaration

State 587:
## Known stack suffix:
## declaration_specifiers(declaration(block_item))
## LR(1) items:
kr_param_declaration -> declaration_specifiers(declaration(block_item)) . option(init_declarator_list) SEMICOLON [ VOLATILE VOID UNSIGNED UNION UNDERSCORE_BOOL STRUCT STATIC SIGNED SHORT RESTRICT REGISTER PRE_NAME PACKED LONG LBRACE INT INLINE FLOAT EXTERN ENUM DOUBLE CONST CHAR AUTO ATTRIBUTE ALIGNAS ]
## Transitions:
-- On PRE_NAME shift to state 178
-- On LPAREN shift to state 182
-- On option(init_declarator_list) shift to state 588
-- On list(pointer1) shift to state 184
-- On init_declarator_list shift to state 538
-- On init_declarator shift to state 547
-- On direct_declarator shift to state 250
-- On declare_varname(declarator_noattrend) shift to state 541
-- On declarator_noattrend shift to state 546
-- On declarator_identifier shift to state 249
## Reductions:
-- On STAR reduce production list(pointer1) ->
-- On SEMICOLON reduce production option(init_declarator_list) ->

State 588:
## Known stack suffix:
## declaration_specifiers(declaration(block_item)) option(init_declarator_list)
## LR(1) items:
kr_param_declaration -> declaration_specifiers(declaration(block_item)) option(init_declarator_list) . SEMICOLON [ VOLATILE VOID UNSIGNED UNION UNDERSCORE_BOOL STRUCT STATIC SIGNED SHORT RESTRICT REGISTER PRE_NAME PACKED LONG LBRACE INT INLINE FLOAT EXTERN ENUM DOUBLE CONST CHAR AUTO ATTRIBUTE ALIGNAS ]
## Transitions:
-- On SEMICOLON shift to state 589
## Reductions:

State 589:
## Known stack suffix:
## declaration_specifiers(declaration(block_item)) option(init_declarator_list) SEMICOLON
## LR(1) items:
kr_param_declaration -> declaration_specifiers(declaration(block_item)) option(init_declarator_list) SEMICOLON . [ VOLATILE VOID UNSIGNED UNION UNDERSCORE_BOOL STRUCT STATIC SIGNED SHORT RESTRICT REGISTER PRE_NAME PACKED LONG LBRACE INT INLINE FLOAT EXTERN ENUM DOUBLE CONST CHAR AUTO ATTRIBUTE ALIGNAS ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production kr_param_declaration -> declaration_specifiers(declaration(block_item)) option(init_declarator_list) SEMICOLON

State 590:
## Known stack suffix:
## declaration_specifiers(declaration(external_declaration)) declare_varname(declarator_noattrend) save_context declaration_list
## LR(1) items:
declaration_list -> declaration_list . kr_param_declaration [ VOLATILE VOID UNSIGNED UNION UNDERSCORE_BOOL STRUCT STATIC SIGNED SHORT RESTRICT REGISTER PRE_NAME PACKED LONG LBRACE INT INLINE FLOAT EXTERN ENUM DOUBLE CONST CHAR AUTO ATTRIBUTE ALIGNAS ]
function_definition1 -> declaration_specifiers(declaration(external_declaration)) declare_varname(declarator_noattrend) save_context declaration_list . [ LBRACE ]
## Transitions:
-- On VOLATILE shift to state 1
-- On VOID shift to state 2
-- On UNSIGNED shift to state 3
-- On UNION shift to state 4
-- On UNDERSCORE_BOOL shift to state 5
-- On STRUCT shift to state 8
-- On STATIC shift to state 9
-- On SIGNED shift to state 10
-- On SHORT shift to state 11
-- On RESTRICT shift to state 12
-- On REGISTER shift to state 13
-- On PRE_NAME shift to state 14
-- On PACKED shift to state 16
-- On LONG shift to state 29
-- On INT shift to state 30
-- On INLINE shift to state 192
-- On FLOAT shift to state 33
-- On EXTERN shift to state 193
-- On ENUM shift to state 34
-- On DOUBLE shift to state 54
-- On CONST shift to state 148
-- On CHAR shift to state 55
-- On AUTO shift to state 194
-- On ATTRIBUTE shift to state 35
-- On ALIGNAS shift to state 149
-- On typedef_name shift to state 577
-- On type_specifier_no_typedef_name shift to state 579
-- On type_qualifier_noattr shift to state 209
-- On struct_or_union_specifier shift to state 155
-- On struct_or_union shift to state 156
-- On storage_class_specifier_no_typedef shift to state 210
-- On rlist(declaration_specifier_no_type) shift to state 581
-- On kr_param_declaration shift to state 591
-- On function_specifier shift to state 212
-- On enum_specifier shift to state 169
-- On declaration_specifiers(declaration(block_item)) shift to state 587
-- On attribute_specifier shift to state 214
## Reductions:
-- On LBRACE reduce production function_definition1 -> declaration_specifiers(declaration(external_declaration)) declare_varname(declarator_noattrend) save_context declaration_list

State 591:
## Known stack suffix:
## declaration_list kr_param_declaration
## LR(1) items:
declaration_list -> declaration_list kr_param_declaration . [ VOLATILE VOID UNSIGNED UNION UNDERSCORE_BOOL STRUCT STATIC SIGNED SHORT RESTRICT REGISTER PRE_NAME PACKED LONG LBRACE INT INLINE FLOAT EXTERN ENUM DOUBLE CONST CHAR AUTO ATTRIBUTE ALIGNAS ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production declaration_list -> declaration_list kr_param_declaration

State 592:
## Known stack suffix:
## declaration_specifiers(declaration(external_declaration)) declare_varname(declarator_noattrend) save_context attribute_specifier_list
## LR(1) items:
function_definition1 -> declaration_specifiers(declaration(external_declaration)) declare_varname(declarator_noattrend) save_context attribute_specifier_list . save_context [ LBRACE ]
init_declarator -> declare_varname(declarator_noattrend) save_context attribute_specifier_list . [ SEMICOLON COMMA ]
init_declarator -> declare_varname(declarator_noattrend) save_context attribute_specifier_list . EQ c_initializer [ SEMICOLON COMMA ]
## Transitions:
-- On EQ shift to state 544
-- On save_context shift to state 593
## Reductions:
-- On XOR_ASSIGN reduce production init_declarator -> declare_varname(declarator_noattrend) save_context attribute_specifier_list
-- On WHILE reduce production init_declarator -> declare_varname(declarator_noattrend) save_context attribute_specifier_list
-- On VOLATILE reduce production init_declarator -> declare_varname(declarator_noattrend) save_context attribute_specifier_list
-- On VOID reduce production init_declarator -> declare_varname(declarator_noattrend) save_context attribute_specifier_list
-- On VAR_NAME reduce production init_declarator -> declare_varname(declarator_noattrend) save_context attribute_specifier_list
-- On UNSIGNED reduce production init_declarator -> declare_varname(declarator_noattrend) save_context attribute_specifier_list
-- On UNION reduce production init_declarator -> declare_varname(declarator_noattrend) save_context attribute_specifier_list
-- On UNDERSCORE_BOOL reduce production init_declarator -> declare_varname(declarator_noattrend) save_context attribute_specifier_list
-- On TYPEDEF_NAME reduce production init_declarator -> declare_varname(declarator_noattrend) save_context attribute_specifier_list
-- On TYPEDEF reduce production init_declarator -> declare_varname(declarator_noattrend) save_context attribute_specifier_list
-- On TILDE reduce production init_declarator -> declare_varname(declarator_noattrend) save_context attribute_specifier_list
-- On SWITCH reduce production init_declarator -> declare_varname(declarator_noattrend) save_context attribute_specifier_list
-- On SUB_ASSIGN reduce production init_declarator -> declare_varname(declarator_noattrend) save_context attribute_specifier_list
-- On STRUCT reduce production init_declarator -> declare_varname(declarator_noattrend) save_context attribute_specifier_list
-- On STRING_LITERAL reduce production init_declarator -> declare_varname(declarator_noattrend) save_context attribute_specifier_list
-- On STATIC reduce production init_declarator -> declare_varname(declarator_noattrend) save_context attribute_specifier_list
-- On STAR reduce production init_declarator -> declare_varname(declarator_noattrend) save_context attribute_specifier_list
-- On SLASH reduce production init_declarator -> declare_varname(declarator_noattrend) save_context attribute_specifier_list
-- On SIZEOF reduce production init_declarator -> declare_varname(declarator_noattrend) save_context attribute_specifier_list
-- On SIGNED reduce production init_declarator -> declare_varname(declarator_noattrend) save_context attribute_specifier_list
-- On SHORT reduce production init_declarator -> declare_varname(declarator_noattrend) save_context attribute_specifier_list
-- On SEMICOLON reduce production init_declarator -> declare_varname(declarator_noattrend) save_context attribute_specifier_list
-- On RPAREN reduce production init_declarator -> declare_varname(declarator_noattrend) save_context attribute_specifier_list
-- On RIGHT_ASSIGN reduce production init_declarator -> declare_varname(declarator_noattrend) save_context attribute_specifier_list
-- On RIGHT reduce production init_declarator -> declare_varname(declarator_noattrend) save_context attribute_specifier_list
-- On RETURN reduce production init_declarator -> declare_varname(declarator_noattrend) save_context attribute_specifier_list
-- On RESTRICT reduce production init_declarator -> declare_varname(declarator_noattrend) save_context attribute_specifier_list
-- On REGISTER reduce production init_declarator -> declare_varname(declarator_noattrend) save_context attribute_specifier_list
-- On RBRACK reduce production init_declarator -> declare_varname(declarator_noattrend) save_context attribute_specifier_list
-- On RBRACE reduce production init_declarator -> declare_varname(declarator_noattrend) save_context attribute_specifier_list
-- On QUESTION reduce production init_declarator -> declare_varname(declarator_noattrend) save_context attribute_specifier_list
-- On PTR reduce production init_declarator -> declare_varname(declarator_noattrend) save_context attribute_specifier_list
-- On PRE_NAME reduce production init_declarator -> declare_varname(declarator_noattrend) save_context attribute_specifier_list
-- On PRAGMA reduce production init_declarator -> declare_varname(declarator_noattrend) save_context attribute_specifier_list
-- On PLUS reduce production init_declarator -> declare_varname(declarator_noattrend) save_context attribute_specifier_list
-- On PERCENT reduce production init_declarator -> declare_varname(declarator_noattrend) save_context attribute_specifier_list
-- On PACKED reduce production init_declarator -> declare_varname(declarator_noattrend) save_context attribute_specifier_list
-- On OR_ASSIGN reduce production init_declarator -> declare_varname(declarator_noattrend) save_context attribute_specifier_list
-- On NEQ reduce production init_declarator -> declare_varname(declarator_noattrend) save_context attribute_specifier_list
-- On MUL_ASSIGN reduce production init_declarator -> declare_varname(declarator_noattrend) save_context attribute_specifier_list
-- On MOD_ASSIGN reduce production init_declarator -> declare_varname(declarator_noattrend) save_context attribute_specifier_list
-- On MINUS reduce production init_declarator -> declare_varname(declarator_noattrend) save_context attribute_specifier_list
-- On LT reduce production init_declarator -> declare_varname(declarator_noattrend) save_context attribute_specifier_list
-- On LPAREN reduce production init_declarator -> declare_varname(declarator_noattrend) save_context attribute_specifier_list
-- On LONG reduce production init_declarator -> declare_varname(declarator_noattrend) save_context attribute_specifier_list
-- On LEQ reduce production init_declarator -> declare_varname(declarator_noattrend) save_context attribute_specifier_list
-- On LEFT_ASSIGN reduce production init_declarator -> declare_varname(declarator_noattrend) save_context attribute_specifier_list
-- On LEFT reduce production init_declarator -> declare_varname(declarator_noattrend) save_context attribute_specifier_list
-- On LBRACK reduce production init_declarator -> declare_varname(declarator_noattrend) save_context attribute_specifier_list
-- On LBRACE reduce production save_context ->
-- On INT reduce production init_declarator -> declare_varname(declarator_noattrend) save_context attribute_specifier_list
-- On INLINE reduce production init_declarator -> declare_varname(declarator_noattrend) save_context attribute_specifier_list
-- On INC reduce production init_declarator -> declare_varname(declarator_noattrend) save_context attribute_specifier_list
-- On IF reduce production init_declarator -> declare_varname(declarator_noattrend) save_context attribute_specifier_list
-- On HAT reduce production init_declarator -> declare_varname(declarator_noattrend) save_context attribute_specifier_list
-- On GT reduce production init_declarator -> declare_varname(declarator_noattrend) save_context attribute_specifier_list
-- On GOTO reduce production init_declarator -> declare_varname(declarator_noattrend) save_context attribute_specifier_list
-- On GEQ reduce production init_declarator -> declare_varname(declarator_noattrend) save_context attribute_specifier_list
-- On FOR reduce production init_declarator -> declare_varname(declarator_noattrend) save_context attribute_specifier_list
-- On FLOAT reduce production init_declarator -> declare_varname(declarator_noattrend) save_context attribute_specifier_list
-- On EXTERN reduce production init_declarator -> declare_varname(declarator_noattrend) save_context attribute_specifier_list
-- On EQEQ reduce production init_declarator -> declare_varname(declarator_noattrend) save_context attribute_specifier_list
-- On EOF reduce production init_declarator -> declare_varname(declarator_noattrend) save_context attribute_specifier_list
-- On ENUM reduce production init_declarator -> declare_varname(declarator_noattrend) save_context attribute_specifier_list
-- On ELSE reduce production init_declarator -> declare_varname(declarator_noattrend) save_context attribute_specifier_list
-- On ELLIPSIS reduce production init_declarator -> declare_varname(declarator_noattrend) save_context attribute_specifier_list
-- On DOUBLE reduce production init_declarator -> declare_varname(declarator_noattrend) save_context attribute_specifier_list
-- On DOT reduce production init_declarator -> declare_varname(declarator_noattrend) save_context attribute_specifier_list
-- On DO reduce production init_declarator -> declare_varname(declarator_noattrend) save_context attribute_specifier_list
-- On DIV_ASSIGN reduce production init_declarator -> declare_varname(declarator_noattrend) save_context attribute_specifier_list
-- On DEFAULT reduce production init_declarator -> declare_varname(declarator_noattrend) save_context attribute_specifier_list
-- On DEC reduce production init_declarator -> declare_varname(declarator_noattrend) save_context attribute_specifier_list
-- On CONTINUE reduce production init_declarator -> declare_varname(declarator_noattrend) save_context attribute_specifier_list
-- On CONSTANT reduce production init_declarator -> declare_varname(declarator_noattrend) save_context attribute_specifier_list
-- On CONST reduce production init_declarator -> declare_varname(declarator_noattrend) save_context attribute_specifier_list
-- On COMMA reduce production init_declarator -> declare_varname(declarator_noattrend) save_context attribute_specifier_list
-- On COLON reduce production init_declarator -> declare_varname(declarator_noattrend) save_context attribute_specifier_list
-- On CHAR reduce production init_declarator -> declare_varname(declarator_noattrend) save_context attribute_specifier_list
-- On CASE reduce production init_declarator -> declare_varname(declarator_noattrend) save_context attribute_specifier_list
-- On BUILTIN_VA_ARG reduce production init_declarator -> declare_varname(declarator_noattrend) save_context attribute_specifier_list
-- On BREAK reduce production init_declarator -> declare_varname(declarator_noattrend) save_context attribute_specifier_list
-- On BARBAR reduce production init_declarator -> declare_varname(declarator_noattrend) save_context attribute_specifier_list
-- On BAR reduce production init_declarator -> declare_varname(declarator_noattrend) save_context attribute_specifier_list
-- On BANG reduce production init_declarator -> declare_varname(declarator_noattrend) save_context attribute_specifier_list
-- On AUTO reduce production init_declarator -> declare_varname(declarator_noattrend) save_context attribute_specifier_list
-- On ATTRIBUTE reduce production init_declarator -> declare_varname(declarator_noattrend) save_context attribute_specifier_list
-- On ASM reduce production init_declarator -> declare_varname(declarator_noattrend) save_context attribute_specifier_list
-- On AND_ASSIGN reduce production init_declarator -> declare_varname(declarator_noattrend) save_context attribute_specifier_list
-- On ANDAND reduce production init_declarator -> declare_varname(declarator_noattrend) save_context attribute_specifier_list
-- On AND reduce production init_declarator -> declare_varname(declarator_noattrend) save_context attribute_specifier_list
-- On ALIGNOF reduce production init_declarator -> declare_varname(declarator_noattrend) save_context attribute_specifier_list
-- On ALIGNAS reduce production init_declarator -> declare_varname(declarator_noattrend) save_context attribute_specifier_list
-- On ADD_ASSIGN reduce production init_declarator -> declare_varname(declarator_noattrend) save_context attribute_specifier_list

State 593:
## Known stack suffix:
## declaration_specifiers(declaration(external_declaration)) declare_varname(declarator_noattrend) save_context attribute_specifier_list save_context
## LR(1) items:
function_definition1 -> declaration_specifiers(declaration(external_declaration)) declare_varname(declarator_noattrend) save_context attribute_specifier_list save_context . [ LBRACE ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production function_definition1 -> declaration_specifiers(declaration(external_declaration)) declare_varname(declarator_noattrend) save_context attribute_specifier_list save_context

State 594:
## Known stack suffix:
## attribute_specifier
## LR(1) items:
attribute_specifier_list -> attribute_specifier . attribute_specifier_list [ SEMICOLON LBRACE EQ COMMA ]
rlist(declaration_specifier_no_type) -> attribute_specifier . [ VOID UNSIGNED UNION UNDERSCORE_BOOL STRUCT SIGNED SHORT PRE_NAME LONG INT FLOAT ENUM DOUBLE CHAR ]
rlist(declaration_specifier_no_type) -> attribute_specifier . rlist(declaration_specifier_no_type) [ VOID UNSIGNED UNION UNDERSCORE_BOOL STRUCT SIGNED SHORT PRE_NAME LONG INT FLOAT ENUM DOUBLE CHAR ]
## Transitions:
-- On VOLATILE shift to state 1
-- On STATIC shift to state 9
-- On RESTRICT shift to state 12
-- On REGISTER shift to state 13
-- On PACKED shift to state 16
-- On INLINE shift to state 192
-- On EXTERN shift to state 193
-- On CONST shift to state 148
-- On AUTO shift to state 194
-- On ATTRIBUTE shift to state 35
-- On ALIGNAS shift to state 149
-- On type_qualifier_noattr shift to state 209
-- On storage_class_specifier_no_typedef shift to state 210
-- On rlist(declaration_specifier_no_type) shift to state 215
-- On function_specifier shift to state 212
-- On attribute_specifier_list shift to state 258
-- On attribute_specifier shift to state 594
## Reductions:
-- On VOID reduce production rlist(declaration_specifier_no_type) -> attribute_specifier
-- On UNSIGNED reduce production rlist(declaration_specifier_no_type) -> attribute_specifier
-- On UNION reduce production rlist(declaration_specifier_no_type) -> attribute_specifier
-- On UNDERSCORE_BOOL reduce production rlist(declaration_specifier_no_type) -> attribute_specifier
-- On STRUCT reduce production rlist(declaration_specifier_no_type) -> attribute_specifier
-- On SIGNED reduce production rlist(declaration_specifier_no_type) -> attribute_specifier
-- On SHORT reduce production rlist(declaration_specifier_no_type) -> attribute_specifier
-- On SEMICOLON reduce production attribute_specifier_list ->
-- On PRE_NAME reduce production rlist(declaration_specifier_no_type) -> attribute_specifier
-- On LONG reduce production rlist(declaration_specifier_no_type) -> attribute_specifier
-- On LBRACE reduce production attribute_specifier_list ->
-- On INT reduce production rlist(declaration_specifier_no_type) -> attribute_specifier
-- On FLOAT reduce production rlist(declaration_specifier_no_type) -> attribute_specifier
-- On EQ reduce production attribute_specifier_list ->
-- On ENUM reduce production rlist(declaration_specifier_no_type) -> attribute_specifier
-- On DOUBLE reduce production rlist(declaration_specifier_no_type) -> attribute_specifier
-- On COMMA reduce production attribute_specifier_list ->
-- On CHAR reduce production rlist(declaration_specifier_no_type) -> attribute_specifier

State 595:
## Known stack suffix:
## declaration(external_declaration)
## LR(1) items:
external_declaration -> declaration(external_declaration) . [ VOLATILE VOID UNSIGNED UNION UNDERSCORE_BOOL TYPEDEF STRUCT STATIC SIGNED SHORT SEMICOLON RESTRICT REGISTER PRE_NAME PRAGMA PACKED LONG INT INLINE FLOAT EXTERN EOF ENUM DOUBLE CONST CHAR AUTO ATTRIBUTE ALIGNAS ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production external_declaration -> declaration(external_declaration)

State 596:
## Known stack suffix:
## external_declaration
## LR(1) items:
translation_unit -> external_declaration . [ VOLATILE VOID UNSIGNED UNION UNDERSCORE_BOOL TYPEDEF STRUCT STATIC SIGNED SHORT SEMICOLON RESTRICT REGISTER PRE_NAME PRAGMA PACKED LONG INT INLINE FLOAT EXTERN EOF ENUM DOUBLE CONST CHAR AUTO ATTRIBUTE ALIGNAS ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production translation_unit -> external_declaration

