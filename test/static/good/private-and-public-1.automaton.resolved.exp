State 0:
## Known stack suffix:
##
## LR(1) items:
b' -> . b [ # ]
## Transitions:
-- On b shift to state 1
-- On a shift to state 2
## Default reduction:
-- After reading the next token, reduce production a ->

State 1:
## Known stack suffix:
## b
## LR(1) items:
b' -> b . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, accept b

State 2:
## Known stack suffix:
## a
## LR(1) items:
b -> a . c [ # ]
## Transitions:
-- On C shift to state 3
-- On private_and_public_2_a shift to state 4
-- On c shift to state 5
## Reductions:

State 3:
## Known stack suffix:
## C
## LR(1) items:
private_and_public_2_a -> C . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, reduce production private_and_public_2_a -> C

State 4:
## Known stack suffix:
## private_and_public_2_a
## LR(1) items:
c -> private_and_public_2_a . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, reduce production c -> private_and_public_2_a

State 5:
## Known stack suffix:
## a c
## LR(1) items:
b -> a c . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, reduce production b -> a c

