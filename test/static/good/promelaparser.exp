Grammar has 9 nonterminal symbols, among which 1 start symbols.
Grammar has 23 terminal symbols.
Grammar has 25 productions.
nullable(transitions) = false
nullable(transition) = false
nullable(states) = false
nullable(state_labels) = false
nullable(state_body) = false
nullable(state) = false
nullable(promela) = false
nullable(label) = false
nullable(guard) = false
first(transitions) = PROMELA_DOUBLE_COLON
first(transition) = PROMELA_DOUBLE_COLON
first(states) = PROMELA_LABEL
first(state_labels) = PROMELA_LABEL
first(state_body) = PROMELA_SKIP PROMELA_IF PROMELA_FALSE
first(state) = PROMELA_LABEL
first(promela) = PROMELA_NEVER
first(label) = PROMELA_LABEL
first(guard) = PROMELA_TRUE PROMELA_RETURNOF PROMELA_NOT PROMELA_LPAREN PROMELA_LABEL PROMELA_FALSE PROMELA_CALLORRETURNOF PROMELA_CALLOF
minimal(transitions) = (* 5 *) PROMELA_DOUBLE_COLON PROMELA_CALLORRETURNOF PROMELA_RIGHT_ARROW PROMELA_GOTO PROMELA_LABEL
minimal(transition) = (* 5 *) PROMELA_DOUBLE_COLON PROMELA_CALLORRETURNOF PROMELA_RIGHT_ARROW PROMELA_GOTO PROMELA_LABEL
minimal(states) = (* 3 *) PROMELA_LABEL PROMELA_COLON PROMELA_SKIP
minimal(state_labels) = (* 2 *) PROMELA_LABEL PROMELA_COLON
minimal(state_body) = (* 1 *) PROMELA_SKIP
minimal(state) = (* 3 *) PROMELA_LABEL PROMELA_COLON PROMELA_SKIP
minimal(promela) = (* 7 *) PROMELA_NEVER PROMELA_LBRACE PROMELA_LABEL PROMELA_COLON PROMELA_SKIP PROMELA_RBRACE EOF
minimal(label) = (* 2 *) PROMELA_LABEL PROMELA_COLON
minimal(guard) = (* 1 *) PROMELA_CALLORRETURNOF
maximal(transitions) = infinity
maximal(transition) = infinity
maximal(states) = infinity
maximal(state_labels) = infinity
maximal(state_body) = infinity
maximal(state) = infinity
maximal(promela) = infinity
maximal(label) = 2
maximal(guard) = infinity
follow(transitions) = PROMELA_FI PROMELA_DOUBLE_COLON
follow(transition) = PROMELA_FI PROMELA_DOUBLE_COLON
follow(states) = PROMELA_SEMICOLON PROMELA_RBRACE
follow(state_labels) = PROMELA_SKIP PROMELA_IF PROMELA_FALSE
follow(state_body) = PROMELA_SEMICOLON PROMELA_RBRACE
follow(state) = PROMELA_SEMICOLON PROMELA_RBRACE
follow(promela) = #
follow(label) = PROMELA_SKIP PROMELA_LABEL PROMELA_IF PROMELA_FALSE
follow(guard) = PROMELA_RPAREN PROMELA_RIGHT_ARROW PROMELA_OR PROMELA_AND
Built an LR(0) automaton with 48 states.
The grammar is not SLR(1) -- 3 states have a conflict.
The construction mode is pager.
Built an LR(1) automaton with 48 states.
6 shift/reduce conflicts were silently solved.
File "promelaparser.mly", line 51, characters 0-9:
Warning: the precedence level assigned to PROMELA_FALSE is never useful.
File "promelaparser.mly", line 51, characters 0-9:
Warning: the precedence level assigned to PROMELA_TRUE is never useful.
23 out of 48 states have a default reduction.
11 out of 48 states are represented.
0 out of 35 symbols keep track of their start position.
0 out of 35 symbols keep track of their end position.
20 out of 26 productions exploit shiftreduce optimization.
0 out of 48 states can peek at an error.
136 functions before inlining, 22 functions after inlining.
