State 0:
main' -> . main [ # ]
-- On UNFINISHED shift to state 1
-- On TRIVIAL shift to state 2
-- On SUBGOALS shift to state 3
-- On OR shift to state 40
-- On FACT shift to state 42
-- On CASES shift to state 56
-- On ASSUME shift to state 64
-- On ASSIGN shift to state 76
-- On step shift to state 144
-- On main shift to state 146

State 1:
step -> UNFINISHED . [ TOOBTAIN RPARAN KOMMA EOF END DOPPELSTRICH ]
-- On TOOBTAIN reduce production step -> UNFINISHED
-- On RPARAN reduce production step -> UNFINISHED
-- On KOMMA reduce production step -> UNFINISHED
-- On EOF reduce production step -> UNFINISHED
-- On END reduce production step -> UNFINISHED
-- On DOPPELSTRICH reduce production step -> UNFINISHED

State 2:
step -> TRIVIAL . [ TOOBTAIN RPARAN KOMMA EOF END DOPPELSTRICH ]
-- On TOOBTAIN reduce production step -> TRIVIAL
-- On RPARAN reduce production step -> TRIVIAL
-- On KOMMA reduce production step -> TRIVIAL
-- On EOF reduce production step -> TRIVIAL
-- On END reduce production step -> TRIVIAL
-- On DOPPELSTRICH reduce production step -> TRIVIAL

State 3:
step -> SUBGOALS . nafos IN steplist TOOBTAIN nafo BY reflist SEMIKOLON step [ TOOBTAIN RPARAN KOMMA EOF END DOPPELSTRICH ]
-- On PUNKT shift to state 4
-- On IDENT shift to state 5
-- On name shift to state 6
-- On nafos shift to state 38
-- On nafo shift to state 141

State 4:
name -> PUNKT . [ QUOT KOMMA DOPPPEQ DOPPELPUNKT APOST ]
-- On QUOT reduce production name -> PUNKT
-- On KOMMA reduce production name -> PUNKT
-- On DOPPPEQ reduce production name -> PUNKT
-- On DOPPELPUNKT reduce production name -> PUNKT
-- On APOST reduce production name -> PUNKT

State 5:
name -> IDENT . [ QUOT KOMMA DOPPPEQ DOPPELPUNKT APOST ]
-- On QUOT reduce production name -> IDENT
-- On KOMMA reduce production name -> IDENT
-- On DOPPPEQ reduce production name -> IDENT
-- On DOPPELPUNKT reduce production name -> IDENT
-- On APOST reduce production name -> IDENT

State 6:
nafo -> name . DOPPELPUNKT formula [ SEMIKOLON KOMMA IN FROM BY ]
-- On DOPPELPUNKT shift to state 7

State 7:
nafo -> name DOPPELPUNKT . formula [ SEMIKOLON PROVE KOMMA IN FROM BY ]
-- On PUNKT shift to state 8
-- On LPARAN shift to state 9
-- On term shift to state 36
-- On formula shift to state 37

State 8:
formula -> PUNKT . [ SEMIKOLON PROVE KOMMA IN FROM DOPPELPUNKT BY ]
-- On SEMIKOLON reduce production formula -> PUNKT
-- On PROVE reduce production formula -> PUNKT
-- On KOMMA reduce production formula -> PUNKT
-- On IN reduce production formula -> PUNKT
-- On FROM reduce production formula -> PUNKT
-- On DOPPELPUNKT reduce production formula -> PUNKT
-- On BY reduce production formula -> PUNKT

State 9:
term -> LPARAN . APOST var APOST RPARAN [ SEMIKOLON RPARAN PROVE LPARAN KOMMA IN FROM DOPPELPUNKT BY ]
term -> LPARAN . QUOT const QUOT RPARAN [ SEMIKOLON RPARAN PROVE LPARAN KOMMA IN FROM DOPPELPUNKT BY ]
term -> LPARAN . term term RPARAN [ SEMIKOLON RPARAN PROVE LPARAN KOMMA IN FROM DOPPELPUNKT BY ]
term -> LPARAN . LAM var DOPPELPUNKT complextype PUNKT term RPARAN [ SEMIKOLON RPARAN PROVE LPARAN KOMMA IN FROM DOPPELPUNKT BY ]
-- On QUOT shift to state 10
-- On LPARAN shift to state 9
-- On LAM shift to state 15
-- On APOST shift to state 29
-- On term shift to state 33

State 10:
term -> LPARAN QUOT . const QUOT RPARAN [ SEMIKOLON RPARAN PROVE LPARAN KOMMA IN FROM DOPPELPUNKT BY ]
-- On PUNKT shift to state 4
-- On IDENT shift to state 5
-- On name shift to state 11
-- On const shift to state 12

State 11:
const -> name . [ QUOT DOPPPEQ ]
-- On QUOT reduce production const -> name
-- On DOPPPEQ reduce production const -> name

State 12:
term -> LPARAN QUOT const . QUOT RPARAN [ SEMIKOLON RPARAN PROVE LPARAN KOMMA IN FROM DOPPELPUNKT BY ]
-- On QUOT shift to state 13

State 13:
term -> LPARAN QUOT const QUOT . RPARAN [ SEMIKOLON RPARAN PROVE LPARAN KOMMA IN FROM DOPPELPUNKT BY ]
-- On RPARAN shift to state 14

State 14:
term -> LPARAN QUOT const QUOT RPARAN . [ SEMIKOLON RPARAN PROVE LPARAN KOMMA IN FROM DOPPELPUNKT BY ]
-- On SEMIKOLON reduce production term -> LPARAN QUOT const QUOT RPARAN
-- On RPARAN reduce production term -> LPARAN QUOT const QUOT RPARAN
-- On PROVE reduce production term -> LPARAN QUOT const QUOT RPARAN
-- On LPARAN reduce production term -> LPARAN QUOT const QUOT RPARAN
-- On KOMMA reduce production term -> LPARAN QUOT const QUOT RPARAN
-- On IN reduce production term -> LPARAN QUOT const QUOT RPARAN
-- On FROM reduce production term -> LPARAN QUOT const QUOT RPARAN
-- On DOPPELPUNKT reduce production term -> LPARAN QUOT const QUOT RPARAN
-- On BY reduce production term -> LPARAN QUOT const QUOT RPARAN

State 15:
term -> LPARAN LAM . var DOPPELPUNKT complextype PUNKT term RPARAN [ SEMIKOLON RPARAN PROVE LPARAN KOMMA IN FROM DOPPELPUNKT BY ]
-- On PUNKT shift to state 4
-- On IDENT shift to state 5
-- On var shift to state 16
-- On name shift to state 28

State 16:
term -> LPARAN LAM var . DOPPELPUNKT complextype PUNKT term RPARAN [ SEMIKOLON RPARAN PROVE LPARAN KOMMA IN FROM DOPPELPUNKT BY ]
-- On DOPPELPUNKT shift to state 17

State 17:
term -> LPARAN LAM var DOPPELPUNKT . complextype PUNKT term RPARAN [ SEMIKOLON RPARAN PROVE LPARAN KOMMA IN FROM DOPPELPUNKT BY ]
-- On LPARAN shift to state 18
-- On IDENT shift to state 19
-- On complextype shift to state 24

State 18:
complextype -> LPARAN . complextype PFEIL complextype RPARAN [ RPARAN PUNKT PROVE PFEIL KOMMA ]
-- On LPARAN shift to state 18
-- On IDENT shift to state 19
-- On complextype shift to state 20

State 19:
complextype -> IDENT . [ RPARAN PUNKT PROVE PFEIL KOMMA ]
-- On RPARAN reduce production complextype -> IDENT
-- On PUNKT reduce production complextype -> IDENT
-- On PROVE reduce production complextype -> IDENT
-- On PFEIL reduce production complextype -> IDENT
-- On KOMMA reduce production complextype -> IDENT

State 20:
complextype -> LPARAN complextype . PFEIL complextype RPARAN [ RPARAN PUNKT PROVE PFEIL KOMMA ]
-- On PFEIL shift to state 21

State 21:
complextype -> LPARAN complextype PFEIL . complextype RPARAN [ RPARAN PUNKT PROVE PFEIL KOMMA ]
-- On LPARAN shift to state 18
-- On IDENT shift to state 19
-- On complextype shift to state 22

State 22:
complextype -> LPARAN complextype PFEIL complextype . RPARAN [ RPARAN PUNKT PROVE PFEIL KOMMA ]
-- On RPARAN shift to state 23

State 23:
complextype -> LPARAN complextype PFEIL complextype RPARAN . [ RPARAN PUNKT PROVE PFEIL KOMMA ]
-- On RPARAN reduce production complextype -> LPARAN complextype PFEIL complextype RPARAN
-- On PUNKT reduce production complextype -> LPARAN complextype PFEIL complextype RPARAN
-- On PROVE reduce production complextype -> LPARAN complextype PFEIL complextype RPARAN
-- On PFEIL reduce production complextype -> LPARAN complextype PFEIL complextype RPARAN
-- On KOMMA reduce production complextype -> LPARAN complextype PFEIL complextype RPARAN

State 24:
term -> LPARAN LAM var DOPPELPUNKT complextype . PUNKT term RPARAN [ SEMIKOLON RPARAN PROVE LPARAN KOMMA IN FROM DOPPELPUNKT BY ]
-- On PUNKT shift to state 25

State 25:
term -> LPARAN LAM var DOPPELPUNKT complextype PUNKT . term RPARAN [ SEMIKOLON RPARAN PROVE LPARAN KOMMA IN FROM DOPPELPUNKT BY ]
-- On LPARAN shift to state 9
-- On term shift to state 26

State 26:
term -> LPARAN LAM var DOPPELPUNKT complextype PUNKT term . RPARAN [ SEMIKOLON RPARAN PROVE LPARAN KOMMA IN FROM DOPPELPUNKT BY ]
-- On RPARAN shift to state 27

State 27:
term -> LPARAN LAM var DOPPELPUNKT complextype PUNKT term RPARAN . [ SEMIKOLON RPARAN PROVE LPARAN KOMMA IN FROM DOPPELPUNKT BY ]
-- On SEMIKOLON reduce production term -> LPARAN LAM var DOPPELPUNKT complextype PUNKT term RPARAN
-- On RPARAN reduce production term -> LPARAN LAM var DOPPELPUNKT complextype PUNKT term RPARAN
-- On PROVE reduce production term -> LPARAN LAM var DOPPELPUNKT complextype PUNKT term RPARAN
-- On LPARAN reduce production term -> LPARAN LAM var DOPPELPUNKT complextype PUNKT term RPARAN
-- On KOMMA reduce production term -> LPARAN LAM var DOPPELPUNKT complextype PUNKT term RPARAN
-- On IN reduce production term -> LPARAN LAM var DOPPELPUNKT complextype PUNKT term RPARAN
-- On FROM reduce production term -> LPARAN LAM var DOPPELPUNKT complextype PUNKT term RPARAN
-- On DOPPELPUNKT reduce production term -> LPARAN LAM var DOPPELPUNKT complextype PUNKT term RPARAN
-- On BY reduce production term -> LPARAN LAM var DOPPELPUNKT complextype PUNKT term RPARAN

State 28:
var -> name . [ DOPPPEQ DOPPELPUNKT APOST ]
-- On DOPPPEQ reduce production var -> name
-- On DOPPELPUNKT reduce production var -> name
-- On APOST reduce production var -> name

State 29:
term -> LPARAN APOST . var APOST RPARAN [ SEMIKOLON RPARAN PROVE LPARAN KOMMA IN FROM DOPPELPUNKT BY ]
-- On PUNKT shift to state 4
-- On IDENT shift to state 5
-- On var shift to state 30
-- On name shift to state 28

State 30:
term -> LPARAN APOST var . APOST RPARAN [ SEMIKOLON RPARAN PROVE LPARAN KOMMA IN FROM DOPPELPUNKT BY ]
-- On APOST shift to state 31

State 31:
term -> LPARAN APOST var APOST . RPARAN [ SEMIKOLON RPARAN PROVE LPARAN KOMMA IN FROM DOPPELPUNKT BY ]
-- On RPARAN shift to state 32

State 32:
term -> LPARAN APOST var APOST RPARAN . [ SEMIKOLON RPARAN PROVE LPARAN KOMMA IN FROM DOPPELPUNKT BY ]
-- On SEMIKOLON reduce production term -> LPARAN APOST var APOST RPARAN
-- On RPARAN reduce production term -> LPARAN APOST var APOST RPARAN
-- On PROVE reduce production term -> LPARAN APOST var APOST RPARAN
-- On LPARAN reduce production term -> LPARAN APOST var APOST RPARAN
-- On KOMMA reduce production term -> LPARAN APOST var APOST RPARAN
-- On IN reduce production term -> LPARAN APOST var APOST RPARAN
-- On FROM reduce production term -> LPARAN APOST var APOST RPARAN
-- On DOPPELPUNKT reduce production term -> LPARAN APOST var APOST RPARAN
-- On BY reduce production term -> LPARAN APOST var APOST RPARAN

State 33:
term -> LPARAN term . term RPARAN [ SEMIKOLON RPARAN PROVE LPARAN KOMMA IN FROM DOPPELPUNKT BY ]
-- On LPARAN shift to state 9
-- On term shift to state 34

State 34:
term -> LPARAN term term . RPARAN [ SEMIKOLON RPARAN PROVE LPARAN KOMMA IN FROM DOPPELPUNKT BY ]
-- On RPARAN shift to state 35

State 35:
term -> LPARAN term term RPARAN . [ SEMIKOLON RPARAN PROVE LPARAN KOMMA IN FROM DOPPELPUNKT BY ]
-- On SEMIKOLON reduce production term -> LPARAN term term RPARAN
-- On RPARAN reduce production term -> LPARAN term term RPARAN
-- On PROVE reduce production term -> LPARAN term term RPARAN
-- On LPARAN reduce production term -> LPARAN term term RPARAN
-- On KOMMA reduce production term -> LPARAN term term RPARAN
-- On IN reduce production term -> LPARAN term term RPARAN
-- On FROM reduce production term -> LPARAN term term RPARAN
-- On DOPPELPUNKT reduce production term -> LPARAN term term RPARAN
-- On BY reduce production term -> LPARAN term term RPARAN

State 36:
formula -> term . [ SEMIKOLON PROVE KOMMA IN FROM DOPPELPUNKT BY ]
-- On SEMIKOLON reduce production formula -> term
-- On PROVE reduce production formula -> term
-- On KOMMA reduce production formula -> term
-- On IN reduce production formula -> term
-- On FROM reduce production formula -> term
-- On DOPPELPUNKT reduce production formula -> term
-- On BY reduce production formula -> term

State 37:
nafo -> name DOPPELPUNKT formula . [ SEMIKOLON PROVE KOMMA IN FROM BY ]
-- On SEMIKOLON reduce production nafo -> name DOPPELPUNKT formula
-- On PROVE reduce production nafo -> name DOPPELPUNKT formula
-- On KOMMA reduce production nafo -> name DOPPELPUNKT formula
-- On IN reduce production nafo -> name DOPPELPUNKT formula
-- On FROM reduce production nafo -> name DOPPELPUNKT formula
-- On BY reduce production nafo -> name DOPPELPUNKT formula

State 38:
step -> SUBGOALS nafos . IN steplist TOOBTAIN nafo BY reflist SEMIKOLON step [ TOOBTAIN RPARAN KOMMA EOF END DOPPELSTRICH ]
-- On IN shift to state 39

State 39:
step -> SUBGOALS nafos IN . steplist TOOBTAIN nafo BY reflist SEMIKOLON step [ TOOBTAIN RPARAN KOMMA EOF END DOPPELSTRICH ]
-- On UNFINISHED shift to state 1
-- On TRIVIAL shift to state 2
-- On SUBGOALS shift to state 3
-- On OR shift to state 40
-- On FACT shift to state 42
-- On CASES shift to state 56
-- On ASSUME shift to state 64
-- On ASSIGN shift to state 76
-- On steplist shift to state 131
-- On step shift to state 138

State 40:
step -> OR . LPARAN orsteps RPARAN SEMIKOLON step [ TOOBTAIN RPARAN KOMMA EOF END DOPPELSTRICH ]
-- On LPARAN shift to state 41

State 41:
step -> OR LPARAN . orsteps RPARAN SEMIKOLON step [ TOOBTAIN RPARAN KOMMA EOF END DOPPELSTRICH ]
-- On UNFINISHED shift to state 1
-- On TRIVIAL shift to state 2
-- On SUBGOALS shift to state 3
-- On OR shift to state 40
-- On FACT shift to state 42
-- On CASES shift to state 56
-- On ASSUME shift to state 64
-- On ASSIGN shift to state 76
-- On step shift to state 124
-- On orsteps shift to state 127

State 42:
step -> FACT . nafo FROM reflist SEMIKOLON step [ TOOBTAIN RPARAN KOMMA EOF END DOPPELSTRICH ]
-- On PUNKT shift to state 4
-- On IDENT shift to state 5
-- On name shift to state 6
-- On nafo shift to state 43

State 43:
step -> FACT nafo . FROM reflist SEMIKOLON step [ TOOBTAIN RPARAN KOMMA EOF END DOPPELSTRICH ]
-- On FROM shift to state 44

State 44:
step -> FACT nafo FROM . reflist SEMIKOLON step [ TOOBTAIN RPARAN KOMMA EOF END DOPPELSTRICH ]
-- On LPARAN shift to state 45
-- On reflist shift to state 54
-- On ref shift to state 102

State 45:
ref -> LPARAN . name KOMMA formula KOMMA occurence RPARAN [ SEMIKOLON KOMMA ]
-- On PUNKT shift to state 4
-- On IDENT shift to state 5
-- On name shift to state 46

State 46:
ref -> LPARAN name . KOMMA formula KOMMA occurence RPARAN [ SEMIKOLON KOMMA ]
-- On KOMMA shift to state 47

State 47:
ref -> LPARAN name KOMMA . formula KOMMA occurence RPARAN [ SEMIKOLON KOMMA ]
-- On PUNKT shift to state 8
-- On LPARAN shift to state 9
-- On term shift to state 36
-- On formula shift to state 48

State 48:
ref -> LPARAN name KOMMA formula . KOMMA occurence RPARAN [ SEMIKOLON KOMMA ]
-- On KOMMA shift to state 49

State 49:
ref -> LPARAN name KOMMA formula KOMMA . occurence RPARAN [ SEMIKOLON KOMMA ]
-- On PUNKT shift to state 50
-- On INTLIST shift to state 51
-- On occurence shift to state 52

State 50:
occurence -> PUNKT . [ RPARAN ]
-- On RPARAN reduce production occurence -> PUNKT

State 51:
occurence -> INTLIST . [ RPARAN ]
-- On RPARAN reduce production occurence -> INTLIST

State 52:
ref -> LPARAN name KOMMA formula KOMMA occurence . RPARAN [ SEMIKOLON KOMMA ]
-- On RPARAN shift to state 53

State 53:
ref -> LPARAN name KOMMA formula KOMMA occurence RPARAN . [ SEMIKOLON KOMMA ]
-- On SEMIKOLON reduce production ref -> LPARAN name KOMMA formula KOMMA occurence RPARAN
-- On KOMMA reduce production ref -> LPARAN name KOMMA formula KOMMA occurence RPARAN

State 54:
step -> FACT nafo FROM reflist . SEMIKOLON step [ TOOBTAIN RPARAN KOMMA EOF END DOPPELSTRICH ]
-- On SEMIKOLON shift to state 55

State 55:
step -> FACT nafo FROM reflist SEMIKOLON . step [ TOOBTAIN RPARAN KOMMA EOF END DOPPELSTRICH ]
-- On UNFINISHED shift to state 1
-- On TRIVIAL shift to state 2
-- On SUBGOALS shift to state 3
-- On OR shift to state 40
-- On FACT shift to state 42
-- On CASES shift to state 56
-- On ASSUME shift to state 64
-- On ASSIGN shift to state 76
-- On step shift to state 123

State 56:
step -> CASES . formulalist DOPPELPUNKT caseends TOOBTAIN nafo SEMIKOLON step [ TOOBTAIN RPARAN KOMMA EOF END DOPPELSTRICH ]
-- On PUNKT shift to state 8
-- On LPARAN shift to state 9
-- On term shift to state 36
-- On formulalist shift to state 57
-- On formula shift to state 120

State 57:
step -> CASES formulalist . DOPPELPUNKT caseends TOOBTAIN nafo SEMIKOLON step [ TOOBTAIN RPARAN KOMMA EOF END DOPPELSTRICH ]
-- On DOPPELPUNKT shift to state 58

State 58:
step -> CASES formulalist DOPPELPUNKT . caseends TOOBTAIN nafo SEMIKOLON step [ TOOBTAIN RPARAN KOMMA EOF END DOPPELSTRICH ]
-- On CASE shift to state 59
-- On caseends shift to state 113

State 59:
caseends -> CASE . name DOPPELPUNKT formula DOPPELPUNKT step END [ TOOBTAIN KOMMA ]
-- On PUNKT shift to state 4
-- On IDENT shift to state 5
-- On name shift to state 60

State 60:
caseends -> CASE name . DOPPELPUNKT formula DOPPELPUNKT step END [ TOOBTAIN KOMMA ]
-- On DOPPELPUNKT shift to state 61

State 61:
caseends -> CASE name DOPPELPUNKT . formula DOPPELPUNKT step END [ TOOBTAIN KOMMA ]
-- On PUNKT shift to state 8
-- On LPARAN shift to state 9
-- On term shift to state 36
-- On formula shift to state 62

State 62:
caseends -> CASE name DOPPELPUNKT formula . DOPPELPUNKT step END [ TOOBTAIN KOMMA ]
-- On DOPPELPUNKT shift to state 63

State 63:
caseends -> CASE name DOPPELPUNKT formula DOPPELPUNKT . step END [ TOOBTAIN KOMMA ]
-- On UNFINISHED shift to state 1
-- On TRIVIAL shift to state 2
-- On SUBGOALS shift to state 3
-- On OR shift to state 40
-- On FACT shift to state 42
-- On CASES shift to state 56
-- On ASSUME shift to state 64
-- On ASSIGN shift to state 76
-- On step shift to state 111

State 64:
step -> ASSUME . hyps PROVE nafo IN step TOOBTAIN nafo BY reflist SEMIKOLON step [ TOOBTAIN RPARAN KOMMA EOF END DOPPELSTRICH ]
-- On PUNKT shift to state 4
-- On IDENT shift to state 5
-- On var shift to state 65
-- On name shift to state 70
-- On nafo shift to state 71
-- On hyps shift to state 72
-- On hyp shift to state 105
-- On const shift to state 108

State 65:
hyp -> var . DOPPELPUNKT hyptyp [ PROVE KOMMA ]
-- On DOPPELPUNKT shift to state 66

State 66:
hyp -> var DOPPELPUNKT . hyptyp [ PROVE KOMMA ]
-- On NOTYPE shift to state 67
-- On LPARAN shift to state 18
-- On IDENT shift to state 19
-- On hyptyp shift to state 68
-- On complextype shift to state 69

State 67:
hyptyp -> NOTYPE . [ PROVE KOMMA ]
-- On PROVE reduce production hyptyp -> NOTYPE
-- On KOMMA reduce production hyptyp -> NOTYPE

State 68:
hyp -> var DOPPELPUNKT hyptyp . [ PROVE KOMMA ]
-- On PROVE reduce production hyp -> var DOPPELPUNKT hyptyp
-- On KOMMA reduce production hyp -> var DOPPELPUNKT hyptyp

State 69:
hyptyp -> complextype . [ PROVE KOMMA ]
-- On PROVE reduce production hyptyp -> complextype
-- On KOMMA reduce production hyptyp -> complextype

State 70:
const -> name . [ DOPPELPUNKT ]
nafo -> name . DOPPELPUNKT formula [ PROVE KOMMA ]
var -> name . [ DOPPELPUNKT ]
-- On DOPPELPUNKT shift to state 7

State 71:
hyp -> nafo . [ PROVE KOMMA ]
-- On PROVE reduce production hyp -> nafo
-- On KOMMA reduce production hyp -> nafo

State 72:
step -> ASSUME hyps . PROVE nafo IN step TOOBTAIN nafo BY reflist SEMIKOLON step [ TOOBTAIN RPARAN KOMMA EOF END DOPPELSTRICH ]
-- On PROVE shift to state 73

State 73:
step -> ASSUME hyps PROVE . nafo IN step TOOBTAIN nafo BY reflist SEMIKOLON step [ TOOBTAIN RPARAN KOMMA EOF END DOPPELSTRICH ]
-- On PUNKT shift to state 4
-- On IDENT shift to state 5
-- On name shift to state 6
-- On nafo shift to state 74

State 74:
step -> ASSUME hyps PROVE nafo . IN step TOOBTAIN nafo BY reflist SEMIKOLON step [ TOOBTAIN RPARAN KOMMA EOF END DOPPELSTRICH ]
-- On IN shift to state 75

State 75:
step -> ASSUME hyps PROVE nafo IN . step TOOBTAIN nafo BY reflist SEMIKOLON step [ TOOBTAIN RPARAN KOMMA EOF END DOPPELSTRICH ]
-- On UNFINISHED shift to state 1
-- On TRIVIAL shift to state 2
-- On SUBGOALS shift to state 3
-- On OR shift to state 40
-- On FACT shift to state 42
-- On CASES shift to state 56
-- On ASSUME shift to state 64
-- On ASSIGN shift to state 76
-- On step shift to state 95

State 76:
step -> ASSIGN . subst SEMIKOLON step [ TOOBTAIN RPARAN KOMMA EOF END DOPPELSTRICH ]
step -> ASSIGN . abbrv SEMIKOLON step [ TOOBTAIN RPARAN KOMMA EOF END DOPPELSTRICH ]
-- On LPARAN shift to state 77
-- On subst shift to state 89
-- On abbrv shift to state 92

State 77:
abbrv -> LPARAN . LET CONST const DOPPPEQ term RPARAN [ SEMIKOLON ]
subst -> LPARAN . LET VAR var DOPPPEQ term RPARAN [ SEMIKOLON ]
-- On LET shift to state 78

State 78:
abbrv -> LPARAN LET . CONST const DOPPPEQ term RPARAN [ SEMIKOLON ]
subst -> LPARAN LET . VAR var DOPPPEQ term RPARAN [ SEMIKOLON ]
-- On VAR shift to state 79
-- On CONST shift to state 84

State 79:
subst -> LPARAN LET VAR . var DOPPPEQ term RPARAN [ SEMIKOLON ]
-- On PUNKT shift to state 4
-- On IDENT shift to state 5
-- On var shift to state 80
-- On name shift to state 28

State 80:
subst -> LPARAN LET VAR var . DOPPPEQ term RPARAN [ SEMIKOLON ]
-- On DOPPPEQ shift to state 81

State 81:
subst -> LPARAN LET VAR var DOPPPEQ . term RPARAN [ SEMIKOLON ]
-- On LPARAN shift to state 9
-- On term shift to state 82

State 82:
subst -> LPARAN LET VAR var DOPPPEQ term . RPARAN [ SEMIKOLON ]
-- On RPARAN shift to state 83

State 83:
subst -> LPARAN LET VAR var DOPPPEQ term RPARAN . [ SEMIKOLON ]
-- On SEMIKOLON reduce production subst -> LPARAN LET VAR var DOPPPEQ term RPARAN

State 84:
abbrv -> LPARAN LET CONST . const DOPPPEQ term RPARAN [ SEMIKOLON ]
-- On PUNKT shift to state 4
-- On IDENT shift to state 5
-- On name shift to state 11
-- On const shift to state 85

State 85:
abbrv -> LPARAN LET CONST const . DOPPPEQ term RPARAN [ SEMIKOLON ]
-- On DOPPPEQ shift to state 86

State 86:
abbrv -> LPARAN LET CONST const DOPPPEQ . term RPARAN [ SEMIKOLON ]
-- On LPARAN shift to state 9
-- On term shift to state 87

State 87:
abbrv -> LPARAN LET CONST const DOPPPEQ term . RPARAN [ SEMIKOLON ]
-- On RPARAN shift to state 88

State 88:
abbrv -> LPARAN LET CONST const DOPPPEQ term RPARAN . [ SEMIKOLON ]
-- On SEMIKOLON reduce production abbrv -> LPARAN LET CONST const DOPPPEQ term RPARAN

State 89:
step -> ASSIGN subst . SEMIKOLON step [ TOOBTAIN RPARAN KOMMA EOF END DOPPELSTRICH ]
-- On SEMIKOLON shift to state 90

State 90:
step -> ASSIGN subst SEMIKOLON . step [ TOOBTAIN RPARAN KOMMA EOF END DOPPELSTRICH ]
-- On UNFINISHED shift to state 1
-- On TRIVIAL shift to state 2
-- On SUBGOALS shift to state 3
-- On OR shift to state 40
-- On FACT shift to state 42
-- On CASES shift to state 56
-- On ASSUME shift to state 64
-- On ASSIGN shift to state 76
-- On step shift to state 91

State 91:
step -> ASSIGN subst SEMIKOLON step . [ TOOBTAIN RPARAN KOMMA EOF END DOPPELSTRICH ]
-- On TOOBTAIN reduce production step -> ASSIGN subst SEMIKOLON step
-- On RPARAN reduce production step -> ASSIGN subst SEMIKOLON step
-- On KOMMA reduce production step -> ASSIGN subst SEMIKOLON step
-- On EOF reduce production step -> ASSIGN subst SEMIKOLON step
-- On END reduce production step -> ASSIGN subst SEMIKOLON step
-- On DOPPELSTRICH reduce production step -> ASSIGN subst SEMIKOLON step

State 92:
step -> ASSIGN abbrv . SEMIKOLON step [ TOOBTAIN RPARAN KOMMA EOF END DOPPELSTRICH ]
-- On SEMIKOLON shift to state 93

State 93:
step -> ASSIGN abbrv SEMIKOLON . step [ TOOBTAIN RPARAN KOMMA EOF END DOPPELSTRICH ]
-- On UNFINISHED shift to state 1
-- On TRIVIAL shift to state 2
-- On SUBGOALS shift to state 3
-- On OR shift to state 40
-- On FACT shift to state 42
-- On CASES shift to state 56
-- On ASSUME shift to state 64
-- On ASSIGN shift to state 76
-- On step shift to state 94

State 94:
step -> ASSIGN abbrv SEMIKOLON step . [ TOOBTAIN RPARAN KOMMA EOF END DOPPELSTRICH ]
-- On TOOBTAIN reduce production step -> ASSIGN abbrv SEMIKOLON step
-- On RPARAN reduce production step -> ASSIGN abbrv SEMIKOLON step
-- On KOMMA reduce production step -> ASSIGN abbrv SEMIKOLON step
-- On EOF reduce production step -> ASSIGN abbrv SEMIKOLON step
-- On END reduce production step -> ASSIGN abbrv SEMIKOLON step
-- On DOPPELSTRICH reduce production step -> ASSIGN abbrv SEMIKOLON step

State 95:
step -> ASSUME hyps PROVE nafo IN step . TOOBTAIN nafo BY reflist SEMIKOLON step [ TOOBTAIN RPARAN KOMMA EOF END DOPPELSTRICH ]
-- On TOOBTAIN shift to state 96

State 96:
step -> ASSUME hyps PROVE nafo IN step TOOBTAIN . nafo BY reflist SEMIKOLON step [ TOOBTAIN RPARAN KOMMA EOF END DOPPELSTRICH ]
-- On PUNKT shift to state 4
-- On IDENT shift to state 5
-- On name shift to state 6
-- On nafo shift to state 97

State 97:
step -> ASSUME hyps PROVE nafo IN step TOOBTAIN nafo . BY reflist SEMIKOLON step [ TOOBTAIN RPARAN KOMMA EOF END DOPPELSTRICH ]
-- On BY shift to state 98

State 98:
step -> ASSUME hyps PROVE nafo IN step TOOBTAIN nafo BY . reflist SEMIKOLON step [ TOOBTAIN RPARAN KOMMA EOF END DOPPELSTRICH ]
-- On LPARAN shift to state 45
-- On reflist shift to state 99
-- On ref shift to state 102

State 99:
step -> ASSUME hyps PROVE nafo IN step TOOBTAIN nafo BY reflist . SEMIKOLON step [ TOOBTAIN RPARAN KOMMA EOF END DOPPELSTRICH ]
-- On SEMIKOLON shift to state 100

State 100:
step -> ASSUME hyps PROVE nafo IN step TOOBTAIN nafo BY reflist SEMIKOLON . step [ TOOBTAIN RPARAN KOMMA EOF END DOPPELSTRICH ]
-- On UNFINISHED shift to state 1
-- On TRIVIAL shift to state 2
-- On SUBGOALS shift to state 3
-- On OR shift to state 40
-- On FACT shift to state 42
-- On CASES shift to state 56
-- On ASSUME shift to state 64
-- On ASSIGN shift to state 76
-- On step shift to state 101

State 101:
step -> ASSUME hyps PROVE nafo IN step TOOBTAIN nafo BY reflist SEMIKOLON step . [ TOOBTAIN RPARAN KOMMA EOF END DOPPELSTRICH ]
-- On TOOBTAIN reduce production step -> ASSUME hyps PROVE nafo IN step TOOBTAIN nafo BY reflist SEMIKOLON step
-- On RPARAN reduce production step -> ASSUME hyps PROVE nafo IN step TOOBTAIN nafo BY reflist SEMIKOLON step
-- On KOMMA reduce production step -> ASSUME hyps PROVE nafo IN step TOOBTAIN nafo BY reflist SEMIKOLON step
-- On EOF reduce production step -> ASSUME hyps PROVE nafo IN step TOOBTAIN nafo BY reflist SEMIKOLON step
-- On END reduce production step -> ASSUME hyps PROVE nafo IN step TOOBTAIN nafo BY reflist SEMIKOLON step
-- On DOPPELSTRICH reduce production step -> ASSUME hyps PROVE nafo IN step TOOBTAIN nafo BY reflist SEMIKOLON step

State 102:
reflist -> ref . [ SEMIKOLON ]
reflist -> ref . KOMMA reflist [ SEMIKOLON ]
-- On KOMMA shift to state 103
-- On SEMIKOLON reduce production reflist -> ref

State 103:
reflist -> ref KOMMA . reflist [ SEMIKOLON ]
-- On LPARAN shift to state 45
-- On reflist shift to state 104
-- On ref shift to state 102

State 104:
reflist -> ref KOMMA reflist . [ SEMIKOLON ]
-- On SEMIKOLON reduce production reflist -> ref KOMMA reflist

State 105:
hyps -> hyp . [ PROVE ]
hyps -> hyp . KOMMA hyps [ PROVE ]
-- On KOMMA shift to state 106
-- On PROVE reduce production hyps -> hyp

State 106:
hyps -> hyp KOMMA . hyps [ PROVE ]
-- On PUNKT shift to state 4
-- On IDENT shift to state 5
-- On var shift to state 65
-- On name shift to state 70
-- On nafo shift to state 71
-- On hyps shift to state 107
-- On hyp shift to state 105
-- On const shift to state 108

State 107:
hyps -> hyp KOMMA hyps . [ PROVE ]
-- On PROVE reduce production hyps -> hyp KOMMA hyps

State 108:
hyp -> const . DOPPELPUNKT hyptyp [ PROVE KOMMA ]
-- On DOPPELPUNKT shift to state 109

State 109:
hyp -> const DOPPELPUNKT . hyptyp [ PROVE KOMMA ]
-- On NOTYPE shift to state 67
-- On LPARAN shift to state 18
-- On IDENT shift to state 19
-- On hyptyp shift to state 110
-- On complextype shift to state 69

State 110:
hyp -> const DOPPELPUNKT hyptyp . [ PROVE KOMMA ]
-- On PROVE reduce production hyp -> const DOPPELPUNKT hyptyp
-- On KOMMA reduce production hyp -> const DOPPELPUNKT hyptyp

State 111:
caseends -> CASE name DOPPELPUNKT formula DOPPELPUNKT step . END [ TOOBTAIN KOMMA ]
-- On END shift to state 112

State 112:
caseends -> CASE name DOPPELPUNKT formula DOPPELPUNKT step END . [ TOOBTAIN KOMMA ]
-- On TOOBTAIN reduce production caseends -> CASE name DOPPELPUNKT formula DOPPELPUNKT step END
-- On KOMMA reduce production caseends -> CASE name DOPPELPUNKT formula DOPPELPUNKT step END

State 113:
caseends -> caseends . KOMMA caseends [ TOOBTAIN KOMMA ]
step -> CASES formulalist DOPPELPUNKT caseends . TOOBTAIN nafo SEMIKOLON step [ TOOBTAIN RPARAN KOMMA EOF END DOPPELSTRICH ]
-- On TOOBTAIN shift to state 114
-- On KOMMA shift to state 118

State 114:
step -> CASES formulalist DOPPELPUNKT caseends TOOBTAIN . nafo SEMIKOLON step [ TOOBTAIN RPARAN KOMMA EOF END DOPPELSTRICH ]
-- On PUNKT shift to state 4
-- On IDENT shift to state 5
-- On name shift to state 6
-- On nafo shift to state 115

State 115:
step -> CASES formulalist DOPPELPUNKT caseends TOOBTAIN nafo . SEMIKOLON step [ TOOBTAIN RPARAN KOMMA EOF END DOPPELSTRICH ]
-- On SEMIKOLON shift to state 116

State 116:
step -> CASES formulalist DOPPELPUNKT caseends TOOBTAIN nafo SEMIKOLON . step [ TOOBTAIN RPARAN KOMMA EOF END DOPPELSTRICH ]
-- On UNFINISHED shift to state 1
-- On TRIVIAL shift to state 2
-- On SUBGOALS shift to state 3
-- On OR shift to state 40
-- On FACT shift to state 42
-- On CASES shift to state 56
-- On ASSUME shift to state 64
-- On ASSIGN shift to state 76
-- On step shift to state 117

State 117:
step -> CASES formulalist DOPPELPUNKT caseends TOOBTAIN nafo SEMIKOLON step . [ TOOBTAIN RPARAN KOMMA EOF END DOPPELSTRICH ]
-- On TOOBTAIN reduce production step -> CASES formulalist DOPPELPUNKT caseends TOOBTAIN nafo SEMIKOLON step
-- On RPARAN reduce production step -> CASES formulalist DOPPELPUNKT caseends TOOBTAIN nafo SEMIKOLON step
-- On KOMMA reduce production step -> CASES formulalist DOPPELPUNKT caseends TOOBTAIN nafo SEMIKOLON step
-- On EOF reduce production step -> CASES formulalist DOPPELPUNKT caseends TOOBTAIN nafo SEMIKOLON step
-- On END reduce production step -> CASES formulalist DOPPELPUNKT caseends TOOBTAIN nafo SEMIKOLON step
-- On DOPPELSTRICH reduce production step -> CASES formulalist DOPPELPUNKT caseends TOOBTAIN nafo SEMIKOLON step

State 118:
caseends -> caseends KOMMA . caseends [ TOOBTAIN KOMMA ]
-- On CASE shift to state 59
-- On caseends shift to state 119

State 119:
caseends -> caseends . KOMMA caseends [ TOOBTAIN KOMMA ]
caseends -> caseends KOMMA caseends . [ TOOBTAIN KOMMA ]
-- On KOMMA shift to state 118
-- On TOOBTAIN reduce production caseends -> caseends KOMMA caseends

State 120:
formulalist -> formula . [ DOPPELPUNKT ]
formulalist -> formula . KOMMA formulalist [ DOPPELPUNKT ]
-- On KOMMA shift to state 121
-- On DOPPELPUNKT reduce production formulalist -> formula

State 121:
formulalist -> formula KOMMA . formulalist [ DOPPELPUNKT ]
-- On PUNKT shift to state 8
-- On LPARAN shift to state 9
-- On term shift to state 36
-- On formulalist shift to state 122
-- On formula shift to state 120

State 122:
formulalist -> formula KOMMA formulalist . [ DOPPELPUNKT ]
-- On DOPPELPUNKT reduce production formulalist -> formula KOMMA formulalist

State 123:
step -> FACT nafo FROM reflist SEMIKOLON step . [ TOOBTAIN RPARAN KOMMA EOF END DOPPELSTRICH ]
-- On TOOBTAIN reduce production step -> FACT nafo FROM reflist SEMIKOLON step
-- On RPARAN reduce production step -> FACT nafo FROM reflist SEMIKOLON step
-- On KOMMA reduce production step -> FACT nafo FROM reflist SEMIKOLON step
-- On EOF reduce production step -> FACT nafo FROM reflist SEMIKOLON step
-- On END reduce production step -> FACT nafo FROM reflist SEMIKOLON step
-- On DOPPELSTRICH reduce production step -> FACT nafo FROM reflist SEMIKOLON step

State 124:
orsteps -> step . [ RPARAN ]
orsteps -> step . DOPPELSTRICH orsteps [ RPARAN ]
-- On DOPPELSTRICH shift to state 125
-- On RPARAN reduce production orsteps -> step

State 125:
orsteps -> step DOPPELSTRICH . orsteps [ RPARAN ]
-- On UNFINISHED shift to state 1
-- On TRIVIAL shift to state 2
-- On SUBGOALS shift to state 3
-- On OR shift to state 40
-- On FACT shift to state 42
-- On CASES shift to state 56
-- On ASSUME shift to state 64
-- On ASSIGN shift to state 76
-- On step shift to state 124
-- On orsteps shift to state 126

State 126:
orsteps -> step DOPPELSTRICH orsteps . [ RPARAN ]
-- On RPARAN reduce production orsteps -> step DOPPELSTRICH orsteps

State 127:
step -> OR LPARAN orsteps . RPARAN SEMIKOLON step [ TOOBTAIN RPARAN KOMMA EOF END DOPPELSTRICH ]
-- On RPARAN shift to state 128

State 128:
step -> OR LPARAN orsteps RPARAN . SEMIKOLON step [ TOOBTAIN RPARAN KOMMA EOF END DOPPELSTRICH ]
-- On SEMIKOLON shift to state 129

State 129:
step -> OR LPARAN orsteps RPARAN SEMIKOLON . step [ TOOBTAIN RPARAN KOMMA EOF END DOPPELSTRICH ]
-- On UNFINISHED shift to state 1
-- On TRIVIAL shift to state 2
-- On SUBGOALS shift to state 3
-- On OR shift to state 40
-- On FACT shift to state 42
-- On CASES shift to state 56
-- On ASSUME shift to state 64
-- On ASSIGN shift to state 76
-- On step shift to state 130

State 130:
step -> OR LPARAN orsteps RPARAN SEMIKOLON step . [ TOOBTAIN RPARAN KOMMA EOF END DOPPELSTRICH ]
-- On TOOBTAIN reduce production step -> OR LPARAN orsteps RPARAN SEMIKOLON step
-- On RPARAN reduce production step -> OR LPARAN orsteps RPARAN SEMIKOLON step
-- On KOMMA reduce production step -> OR LPARAN orsteps RPARAN SEMIKOLON step
-- On EOF reduce production step -> OR LPARAN orsteps RPARAN SEMIKOLON step
-- On END reduce production step -> OR LPARAN orsteps RPARAN SEMIKOLON step
-- On DOPPELSTRICH reduce production step -> OR LPARAN orsteps RPARAN SEMIKOLON step

State 131:
step -> SUBGOALS nafos IN steplist . TOOBTAIN nafo BY reflist SEMIKOLON step [ TOOBTAIN RPARAN KOMMA EOF END DOPPELSTRICH ]
-- On TOOBTAIN shift to state 132

State 132:
step -> SUBGOALS nafos IN steplist TOOBTAIN . nafo BY reflist SEMIKOLON step [ TOOBTAIN RPARAN KOMMA EOF END DOPPELSTRICH ]
-- On PUNKT shift to state 4
-- On IDENT shift to state 5
-- On name shift to state 6
-- On nafo shift to state 133

State 133:
step -> SUBGOALS nafos IN steplist TOOBTAIN nafo . BY reflist SEMIKOLON step [ TOOBTAIN RPARAN KOMMA EOF END DOPPELSTRICH ]
-- On BY shift to state 134

State 134:
step -> SUBGOALS nafos IN steplist TOOBTAIN nafo BY . reflist SEMIKOLON step [ TOOBTAIN RPARAN KOMMA EOF END DOPPELSTRICH ]
-- On LPARAN shift to state 45
-- On reflist shift to state 135
-- On ref shift to state 102

State 135:
step -> SUBGOALS nafos IN steplist TOOBTAIN nafo BY reflist . SEMIKOLON step [ TOOBTAIN RPARAN KOMMA EOF END DOPPELSTRICH ]
-- On SEMIKOLON shift to state 136

State 136:
step -> SUBGOALS nafos IN steplist TOOBTAIN nafo BY reflist SEMIKOLON . step [ TOOBTAIN RPARAN KOMMA EOF END DOPPELSTRICH ]
-- On UNFINISHED shift to state 1
-- On TRIVIAL shift to state 2
-- On SUBGOALS shift to state 3
-- On OR shift to state 40
-- On FACT shift to state 42
-- On CASES shift to state 56
-- On ASSUME shift to state 64
-- On ASSIGN shift to state 76
-- On step shift to state 137

State 137:
step -> SUBGOALS nafos IN steplist TOOBTAIN nafo BY reflist SEMIKOLON step . [ TOOBTAIN RPARAN KOMMA EOF END DOPPELSTRICH ]
-- On TOOBTAIN reduce production step -> SUBGOALS nafos IN steplist TOOBTAIN nafo BY reflist SEMIKOLON step
-- On RPARAN reduce production step -> SUBGOALS nafos IN steplist TOOBTAIN nafo BY reflist SEMIKOLON step
-- On KOMMA reduce production step -> SUBGOALS nafos IN steplist TOOBTAIN nafo BY reflist SEMIKOLON step
-- On EOF reduce production step -> SUBGOALS nafos IN steplist TOOBTAIN nafo BY reflist SEMIKOLON step
-- On END reduce production step -> SUBGOALS nafos IN steplist TOOBTAIN nafo BY reflist SEMIKOLON step
-- On DOPPELSTRICH reduce production step -> SUBGOALS nafos IN steplist TOOBTAIN nafo BY reflist SEMIKOLON step

State 138:
steplist -> step . [ TOOBTAIN ]
steplist -> step . KOMMA steplist [ TOOBTAIN ]
-- On KOMMA shift to state 139
-- On TOOBTAIN reduce production steplist -> step

State 139:
steplist -> step KOMMA . steplist [ TOOBTAIN ]
-- On UNFINISHED shift to state 1
-- On TRIVIAL shift to state 2
-- On SUBGOALS shift to state 3
-- On OR shift to state 40
-- On FACT shift to state 42
-- On CASES shift to state 56
-- On ASSUME shift to state 64
-- On ASSIGN shift to state 76
-- On steplist shift to state 140
-- On step shift to state 138

State 140:
steplist -> step KOMMA steplist . [ TOOBTAIN ]
-- On TOOBTAIN reduce production steplist -> step KOMMA steplist

State 141:
nafos -> nafo . [ IN ]
nafos -> nafo . KOMMA nafo [ IN ]
-- On KOMMA shift to state 142
-- On IN reduce production nafos -> nafo

State 142:
nafos -> nafo KOMMA . nafo [ IN ]
-- On PUNKT shift to state 4
-- On IDENT shift to state 5
-- On name shift to state 6
-- On nafo shift to state 143

State 143:
nafos -> nafo KOMMA nafo . [ IN ]
-- On IN reduce production nafos -> nafo KOMMA nafo

State 144:
main -> step . EOF [ # ]
-- On EOF shift to state 145

State 145:
main -> step EOF . [ # ]
-- On # reduce production main -> step EOF

State 146:
main' -> main . [ # ]
-- On # accept main

