State 0:
## Known stack suffix:
##
## LR(1) items:
all' -> . all [ # ]
## Transitions:
-- On REDUCTION shift to state 1
-- On QUERY shift to state 39
-- On PREDICATE shift to state 42
-- On PARAM shift to state 52
-- On NOUNIF shift to state 57
-- On NOT shift to state 82
-- On FUN shift to state 85
-- On EQUATION shift to state 90
-- On ELIMTRUE shift to state 98
-- On DATA shift to state 101
-- On all shift to state 118
## Reductions:

State 1:
## Known stack suffix:
## REDUCTION
## LR(1) items:
all -> REDUCTION . reduc EOF [ # ]
## Transitions:
-- On LPAREN shift to state 2
-- On IDENT shift to state 16
-- On termand shift to state 19
-- On term shift to state 21
-- On rule shift to state 29
-- On reduc shift to state 37
-- On fact shift to state 32
## Reductions:

State 2:
## Known stack suffix:
## LPAREN
## LR(1) items:
term -> LPAREN . termseq RPAREN [ WEDGE SEMI RPAREN RED RBRACKET EQUIVEQ EQUIV EQUAL DOT DIFF COMMA ]
## Transitions:
-- On LPAREN shift to state 2
-- On IDENT shift to state 3
-- On termseq shift to state 14
-- On term shift to state 7
-- On netermseq shift to state 10
## Reductions:
-- On RPAREN reduce production termseq ->

State 3:
## Known stack suffix:
## IDENT
## LR(1) items:
term -> IDENT . LPAREN termseq RPAREN [ WEDGE SEMI RPAREN RED RBRACKET EQUIVEQ EQUIV EQUAL DOT COMMA ]
term -> IDENT . LBRACKET termseq RBRACKET [ WEDGE SEMI RPAREN RED RBRACKET EQUIVEQ EQUIV EQUAL DOT COMMA ]
term -> IDENT . [ WEDGE SEMI RPAREN RED RBRACKET EQUIVEQ EQUIV EQUAL DOT COMMA ]
## Transitions:
-- On LPAREN shift to state 4
-- On LBRACKET shift to state 11
## Reductions:
-- On WEDGE reduce production term -> IDENT
-- On SEMI reduce production term -> IDENT
-- On RPAREN reduce production term -> IDENT
-- On RED reduce production term -> IDENT
-- On RBRACKET reduce production term -> IDENT
-- On EQUIVEQ reduce production term -> IDENT
-- On EQUIV reduce production term -> IDENT
-- On EQUAL reduce production term -> IDENT
-- On DOT reduce production term -> IDENT
-- On COMMA reduce production term -> IDENT

State 4:
## Known stack suffix:
## IDENT LPAREN
## LR(1) items:
term -> IDENT LPAREN . termseq RPAREN [ WEDGE SEMI RPAREN RED RBRACKET EQUIVEQ EQUIV EQUAL DOT DIFF COMMA ]
## Transitions:
-- On LPAREN shift to state 2
-- On IDENT shift to state 3
-- On termseq shift to state 5
-- On term shift to state 7
-- On netermseq shift to state 10
## Reductions:
-- On RPAREN reduce production termseq ->

State 5:
## Known stack suffix:
## IDENT LPAREN termseq
## LR(1) items:
term -> IDENT LPAREN termseq . RPAREN [ WEDGE SEMI RPAREN RED RBRACKET EQUIVEQ EQUIV EQUAL DOT DIFF COMMA ]
## Transitions:
-- On RPAREN shift to state 6
## Reductions:

State 6:
## Known stack suffix:
## IDENT LPAREN termseq RPAREN
## LR(1) items:
term -> IDENT LPAREN termseq RPAREN . [ WEDGE SEMI RPAREN RED RBRACKET EQUIVEQ EQUIV EQUAL DOT DIFF COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production term -> IDENT LPAREN termseq RPAREN

State 7:
## Known stack suffix:
## term
## LR(1) items:
netermseq -> term . COMMA netermseq [ WEDGE SEMI RPAREN RED RBRACKET EQUIVEQ EQUIV DOT ]
netermseq -> term . [ WEDGE SEMI RPAREN RED RBRACKET EQUIVEQ EQUIV DOT ]
## Transitions:
-- On COMMA shift to state 8
## Reductions:
-- On WEDGE reduce production netermseq -> term
-- On SEMI reduce production netermseq -> term
-- On RPAREN reduce production netermseq -> term
-- On RED reduce production netermseq -> term
-- On RBRACKET reduce production netermseq -> term
-- On EQUIVEQ reduce production netermseq -> term
-- On EQUIV reduce production netermseq -> term
-- On DOT reduce production netermseq -> term

State 8:
## Known stack suffix:
## term COMMA
## LR(1) items:
netermseq -> term COMMA . netermseq [ WEDGE SEMI RPAREN RED RBRACKET EQUIVEQ EQUIV DOT ]
## Transitions:
-- On LPAREN shift to state 2
-- On IDENT shift to state 3
-- On term shift to state 7
-- On netermseq shift to state 9
## Reductions:

State 9:
## Known stack suffix:
## term COMMA netermseq
## LR(1) items:
netermseq -> term COMMA netermseq . [ WEDGE SEMI RPAREN RED RBRACKET EQUIVEQ EQUIV DOT ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production netermseq -> term COMMA netermseq

State 10:
## Known stack suffix:
## netermseq
## LR(1) items:
termseq -> netermseq . [ WEDGE SEMI RPAREN RED RBRACKET EQUIVEQ EQUIV DOT ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production termseq -> netermseq

State 11:
## Known stack suffix:
## IDENT LBRACKET
## LR(1) items:
term -> IDENT LBRACKET . termseq RBRACKET [ WEDGE SEMI RPAREN RED RBRACKET EQUIVEQ EQUIV EQUAL DOT DIFF COMMA ]
## Transitions:
-- On LPAREN shift to state 2
-- On IDENT shift to state 3
-- On termseq shift to state 12
-- On term shift to state 7
-- On netermseq shift to state 10
## Reductions:
-- On RBRACKET reduce production termseq ->

State 12:
## Known stack suffix:
## IDENT LBRACKET termseq
## LR(1) items:
term -> IDENT LBRACKET termseq . RBRACKET [ WEDGE SEMI RPAREN RED RBRACKET EQUIVEQ EQUIV EQUAL DOT DIFF COMMA ]
## Transitions:
-- On RBRACKET shift to state 13
## Reductions:

State 13:
## Known stack suffix:
## IDENT LBRACKET termseq RBRACKET
## LR(1) items:
term -> IDENT LBRACKET termseq RBRACKET . [ WEDGE SEMI RPAREN RED RBRACKET EQUIVEQ EQUIV EQUAL DOT DIFF COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production term -> IDENT LBRACKET termseq RBRACKET

State 14:
## Known stack suffix:
## LPAREN termseq
## LR(1) items:
term -> LPAREN termseq . RPAREN [ WEDGE SEMI RPAREN RED RBRACKET EQUIVEQ EQUIV EQUAL DOT DIFF COMMA ]
## Transitions:
-- On RPAREN shift to state 15
## Reductions:

State 15:
## Known stack suffix:
## LPAREN termseq RPAREN
## LR(1) items:
term -> LPAREN termseq RPAREN . [ WEDGE SEMI RPAREN RED RBRACKET EQUIVEQ EQUIV EQUAL DOT DIFF COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production term -> LPAREN termseq RPAREN

State 16:
## Known stack suffix:
## IDENT
## LR(1) items:
fact -> IDENT . COLON termseq [ WEDGE SEMI RED EQUIVEQ EQUIV DOT ]
term -> IDENT . LPAREN termseq RPAREN [ DIFF ]
term -> IDENT . LBRACKET termseq RBRACKET [ DIFF ]
term -> IDENT . [ DIFF ]
## Transitions:
-- On LPAREN shift to state 4
-- On LBRACKET shift to state 11
-- On COLON shift to state 17
## Reductions:
-- On DIFF reduce production term -> IDENT

State 17:
## Known stack suffix:
## IDENT COLON
## LR(1) items:
fact -> IDENT COLON . termseq [ WEDGE SEMI RED EQUIVEQ EQUIV DOT ]
## Transitions:
-- On LPAREN shift to state 2
-- On IDENT shift to state 3
-- On termseq shift to state 18
-- On term shift to state 7
-- On netermseq shift to state 10
## Reductions:
-- On WEDGE reduce production termseq ->
-- On SEMI reduce production termseq ->
-- On RED reduce production termseq ->
-- On EQUIVEQ reduce production termseq ->
-- On EQUIV reduce production termseq ->
-- On DOT reduce production termseq ->

State 18:
## Known stack suffix:
## IDENT COLON termseq
## LR(1) items:
fact -> IDENT COLON termseq . [ WEDGE SEMI RED EQUIVEQ EQUIV DOT ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production fact -> IDENT COLON termseq

State 19:
## Known stack suffix:
## termand
## LR(1) items:
rule -> termand . RED fact [ SEMI DOT ]
rule -> termand . EQUIV fact [ SEMI DOT ]
rule -> termand . EQUIVEQ fact [ SEMI DOT ]
## Transitions:
-- On RED shift to state 20
-- On EQUIVEQ shift to state 25
-- On EQUIV shift to state 27
## Reductions:

State 20:
## Known stack suffix:
## termand RED
## LR(1) items:
rule -> termand RED . fact [ SEMI DOT ]
## Transitions:
-- On LPAREN shift to state 2
-- On IDENT shift to state 16
-- On term shift to state 21
-- On fact shift to state 24
## Reductions:

State 21:
## Known stack suffix:
## term
## LR(1) items:
fact -> term . DIFF term [ WEDGE SEMI RED EQUIVEQ EQUIV DOT ]
## Transitions:
-- On DIFF shift to state 22
## Reductions:

State 22:
## Known stack suffix:
## term DIFF
## LR(1) items:
fact -> term DIFF . term [ WEDGE SEMI RED EQUIVEQ EQUIV DOT ]
## Transitions:
-- On LPAREN shift to state 2
-- On IDENT shift to state 3
-- On term shift to state 23
## Reductions:

State 23:
## Known stack suffix:
## term DIFF term
## LR(1) items:
fact -> term DIFF term . [ WEDGE SEMI RED EQUIVEQ EQUIV DOT ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production fact -> term DIFF term

State 24:
## Known stack suffix:
## termand RED fact
## LR(1) items:
rule -> termand RED fact . [ SEMI DOT ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production rule -> termand RED fact

State 25:
## Known stack suffix:
## termand EQUIVEQ
## LR(1) items:
rule -> termand EQUIVEQ . fact [ SEMI DOT ]
## Transitions:
-- On LPAREN shift to state 2
-- On IDENT shift to state 16
-- On term shift to state 21
-- On fact shift to state 26
## Reductions:

State 26:
## Known stack suffix:
## termand EQUIVEQ fact
## LR(1) items:
rule -> termand EQUIVEQ fact . [ SEMI DOT ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production rule -> termand EQUIVEQ fact

State 27:
## Known stack suffix:
## termand EQUIV
## LR(1) items:
rule -> termand EQUIV . fact [ SEMI DOT ]
## Transitions:
-- On LPAREN shift to state 2
-- On IDENT shift to state 16
-- On term shift to state 21
-- On fact shift to state 28
## Reductions:

State 28:
## Known stack suffix:
## termand EQUIV fact
## LR(1) items:
rule -> termand EQUIV fact . [ SEMI DOT ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production rule -> termand EQUIV fact

State 29:
## Known stack suffix:
## rule
## LR(1) items:
reduc -> rule . SEMI reduc [ EOF ]
reduc -> rule . DOT [ EOF ]
## Transitions:
-- On SEMI shift to state 30
-- On DOT shift to state 36
## Reductions:

State 30:
## Known stack suffix:
## rule SEMI
## LR(1) items:
reduc -> rule SEMI . reduc [ EOF ]
## Transitions:
-- On LPAREN shift to state 2
-- On IDENT shift to state 16
-- On termand shift to state 19
-- On term shift to state 21
-- On rule shift to state 29
-- On reduc shift to state 31
-- On fact shift to state 32
## Reductions:

State 31:
## Known stack suffix:
## rule SEMI reduc
## LR(1) items:
reduc -> rule SEMI reduc . [ EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production reduc -> rule SEMI reduc

State 32:
## Known stack suffix:
## fact
## LR(1) items:
rule -> fact . [ SEMI DOT ]
termand -> fact . WEDGE termand [ RED EQUIVEQ EQUIV ]
termand -> fact . [ RED EQUIVEQ EQUIV ]
## Transitions:
-- On WEDGE shift to state 33
## Reductions:
-- On SEMI reduce production rule -> fact
-- On RED reduce production termand -> fact
-- On EQUIVEQ reduce production termand -> fact
-- On EQUIV reduce production termand -> fact
-- On DOT reduce production rule -> fact

State 33:
## Known stack suffix:
## fact WEDGE
## LR(1) items:
termand -> fact WEDGE . termand [ RED EQUIVEQ EQUIV ]
## Transitions:
-- On LPAREN shift to state 2
-- On IDENT shift to state 16
-- On termand shift to state 34
-- On term shift to state 21
-- On fact shift to state 35
## Reductions:

State 34:
## Known stack suffix:
## fact WEDGE termand
## LR(1) items:
termand -> fact WEDGE termand . [ RED EQUIVEQ EQUIV ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production termand -> fact WEDGE termand

State 35:
## Known stack suffix:
## fact
## LR(1) items:
termand -> fact . WEDGE termand [ RED EQUIVEQ EQUIV ]
termand -> fact . [ RED EQUIVEQ EQUIV ]
## Transitions:
-- On WEDGE shift to state 33
## Reductions:
-- On RED reduce production termand -> fact
-- On EQUIVEQ reduce production termand -> fact
-- On EQUIV reduce production termand -> fact

State 36:
## Known stack suffix:
## rule DOT
## LR(1) items:
reduc -> rule DOT . [ EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production reduc -> rule DOT

State 37:
## Known stack suffix:
## REDUCTION reduc
## LR(1) items:
all -> REDUCTION reduc . EOF [ # ]
## Transitions:
-- On EOF shift to state 38
## Reductions:

State 38:
## Known stack suffix:
## REDUCTION reduc EOF
## LR(1) items:
all -> REDUCTION reduc EOF . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, reduce production all -> REDUCTION reduc EOF

State 39:
## Known stack suffix:
## QUERY
## LR(1) items:
all -> QUERY . fact DOT all [ # ]
## Transitions:
-- On LPAREN shift to state 2
-- On IDENT shift to state 16
-- On term shift to state 21
-- On fact shift to state 40
## Reductions:

State 40:
## Known stack suffix:
## QUERY fact
## LR(1) items:
all -> QUERY fact . DOT all [ # ]
## Transitions:
-- On DOT shift to state 41
## Reductions:

State 41:
## Known stack suffix:
## QUERY fact DOT
## LR(1) items:
all -> QUERY fact DOT . all [ # ]
## Transitions:
-- On REDUCTION shift to state 1
-- On QUERY shift to state 39
-- On PREDICATE shift to state 42
-- On PARAM shift to state 52
-- On NOUNIF shift to state 57
-- On NOT shift to state 82
-- On FUN shift to state 85
-- On EQUATION shift to state 90
-- On ELIMTRUE shift to state 98
-- On DATA shift to state 101
-- On all shift to state 117
## Reductions:

State 42:
## Known stack suffix:
## PREDICATE
## LR(1) items:
all -> PREDICATE . IDENT SLASH INT identseq DOT all [ # ]
## Transitions:
-- On IDENT shift to state 43
## Reductions:

State 43:
## Known stack suffix:
## PREDICATE IDENT
## LR(1) items:
all -> PREDICATE IDENT . SLASH INT identseq DOT all [ # ]
## Transitions:
-- On SLASH shift to state 44
## Reductions:

State 44:
## Known stack suffix:
## PREDICATE IDENT SLASH
## LR(1) items:
all -> PREDICATE IDENT SLASH . INT identseq DOT all [ # ]
## Transitions:
-- On INT shift to state 45
## Reductions:

State 45:
## Known stack suffix:
## PREDICATE IDENT SLASH INT
## LR(1) items:
all -> PREDICATE IDENT SLASH INT . identseq DOT all [ # ]
## Transitions:
-- On IDENT shift to state 46
-- On neidentseq shift to state 49
-- On identseq shift to state 50
## Reductions:
-- On DOT reduce production identseq ->

State 46:
## Known stack suffix:
## IDENT
## LR(1) items:
neidentseq -> IDENT . COMMA neidentseq [ RPAREN RBRACKET DOT ]
neidentseq -> IDENT . [ RPAREN RBRACKET DOT ]
## Transitions:
-- On COMMA shift to state 47
## Reductions:
-- On RPAREN reduce production neidentseq -> IDENT
-- On RBRACKET reduce production neidentseq -> IDENT
-- On DOT reduce production neidentseq -> IDENT

State 47:
## Known stack suffix:
## IDENT COMMA
## LR(1) items:
neidentseq -> IDENT COMMA . neidentseq [ RPAREN RBRACKET DOT ]
## Transitions:
-- On IDENT shift to state 46
-- On neidentseq shift to state 48
## Reductions:

State 48:
## Known stack suffix:
## IDENT COMMA neidentseq
## LR(1) items:
neidentseq -> IDENT COMMA neidentseq . [ RPAREN RBRACKET DOT ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production neidentseq -> IDENT COMMA neidentseq

State 49:
## Known stack suffix:
## neidentseq
## LR(1) items:
identseq -> neidentseq . [ RPAREN DOT ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production identseq -> neidentseq

State 50:
## Known stack suffix:
## PREDICATE IDENT SLASH INT identseq
## LR(1) items:
all -> PREDICATE IDENT SLASH INT identseq . DOT all [ # ]
## Transitions:
-- On DOT shift to state 51
## Reductions:

State 51:
## Known stack suffix:
## PREDICATE IDENT SLASH INT identseq DOT
## LR(1) items:
all -> PREDICATE IDENT SLASH INT identseq DOT . all [ # ]
## Transitions:
-- On REDUCTION shift to state 1
-- On QUERY shift to state 39
-- On PREDICATE shift to state 42
-- On PARAM shift to state 52
-- On NOUNIF shift to state 57
-- On NOT shift to state 82
-- On FUN shift to state 85
-- On EQUATION shift to state 90
-- On ELIMTRUE shift to state 98
-- On DATA shift to state 101
-- On all shift to state 116
## Reductions:

State 52:
## Known stack suffix:
## PARAM
## LR(1) items:
all -> PARAM . IDENT EQUAL IDENT DOT all [ # ]
all -> PARAM . IDENT EQUAL INT DOT all [ # ]
## Transitions:
-- On IDENT shift to state 53
## Reductions:

State 53:
## Known stack suffix:
## PARAM IDENT
## LR(1) items:
all -> PARAM IDENT . EQUAL IDENT DOT all [ # ]
all -> PARAM IDENT . EQUAL INT DOT all [ # ]
## Transitions:
-- On EQUAL shift to state 54
## Reductions:

State 54:
## Known stack suffix:
## PARAM IDENT EQUAL
## LR(1) items:
all -> PARAM IDENT EQUAL . IDENT DOT all [ # ]
all -> PARAM IDENT EQUAL . INT DOT all [ # ]
## Transitions:
-- On INT shift to state 55
-- On IDENT shift to state 113
## Reductions:

State 55:
## Known stack suffix:
## PARAM IDENT EQUAL INT
## LR(1) items:
all -> PARAM IDENT EQUAL INT . DOT all [ # ]
## Transitions:
-- On DOT shift to state 56
## Reductions:

State 56:
## Known stack suffix:
## PARAM IDENT EQUAL INT DOT
## LR(1) items:
all -> PARAM IDENT EQUAL INT DOT . all [ # ]
## Transitions:
-- On REDUCTION shift to state 1
-- On QUERY shift to state 39
-- On PREDICATE shift to state 42
-- On PARAM shift to state 52
-- On NOUNIF shift to state 57
-- On NOT shift to state 82
-- On FUN shift to state 85
-- On EQUATION shift to state 90
-- On ELIMTRUE shift to state 98
-- On DATA shift to state 101
-- On all shift to state 112
## Reductions:

State 57:
## Known stack suffix:
## NOUNIF
## LR(1) items:
all -> NOUNIF . factformat optint DOT all [ # ]
## Transitions:
-- On IDENT shift to state 58
-- On factformat shift to state 77
## Reductions:

State 58:
## Known stack suffix:
## IDENT
## LR(1) items:
factformat -> IDENT . COLON formatseq [ SLASH DOT ]
## Transitions:
-- On COLON shift to state 59
## Reductions:

State 59:
## Known stack suffix:
## IDENT COLON
## LR(1) items:
factformat -> IDENT COLON . formatseq [ SLASH DOT ]
## Transitions:
-- On STAR shift to state 60
-- On LPAREN shift to state 62
-- On IDENT shift to state 63
-- On neformatseq shift to state 65
-- On formatseq shift to state 76
-- On format shift to state 68
## Reductions:
-- On SLASH reduce production formatseq ->
-- On DOT reduce production formatseq ->

State 60:
## Known stack suffix:
## STAR
## LR(1) items:
format -> STAR . IDENT [ SLASH RPAREN RBRACKET DOT COMMA ]
## Transitions:
-- On IDENT shift to state 61
## Reductions:

State 61:
## Known stack suffix:
## STAR IDENT
## LR(1) items:
format -> STAR IDENT . [ SLASH RPAREN RBRACKET DOT COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production format -> STAR IDENT

State 62:
## Known stack suffix:
## LPAREN
## LR(1) items:
format -> LPAREN . formatseq RPAREN [ SLASH RPAREN RBRACKET DOT COMMA ]
## Transitions:
-- On STAR shift to state 60
-- On LPAREN shift to state 62
-- On IDENT shift to state 63
-- On neformatseq shift to state 65
-- On formatseq shift to state 74
-- On format shift to state 68
## Reductions:
-- On RPAREN reduce production formatseq ->

State 63:
## Known stack suffix:
## IDENT
## LR(1) items:
format -> IDENT . LPAREN formatseq RPAREN [ SLASH RPAREN RBRACKET DOT COMMA ]
format -> IDENT . LBRACKET formatseq RBRACKET [ SLASH RPAREN RBRACKET DOT COMMA ]
format -> IDENT . [ SLASH RPAREN RBRACKET DOT COMMA ]
## Transitions:
-- On LPAREN shift to state 64
-- On LBRACKET shift to state 71
## Reductions:
-- On SLASH reduce production format -> IDENT
-- On RPAREN reduce production format -> IDENT
-- On RBRACKET reduce production format -> IDENT
-- On DOT reduce production format -> IDENT
-- On COMMA reduce production format -> IDENT

State 64:
## Known stack suffix:
## IDENT LPAREN
## LR(1) items:
format -> IDENT LPAREN . formatseq RPAREN [ SLASH RPAREN RBRACKET DOT COMMA ]
## Transitions:
-- On STAR shift to state 60
-- On LPAREN shift to state 62
-- On IDENT shift to state 63
-- On neformatseq shift to state 65
-- On formatseq shift to state 66
-- On format shift to state 68
## Reductions:
-- On RPAREN reduce production formatseq ->

State 65:
## Known stack suffix:
## neformatseq
## LR(1) items:
formatseq -> neformatseq . [ SLASH RPAREN RBRACKET DOT ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production formatseq -> neformatseq

State 66:
## Known stack suffix:
## IDENT LPAREN formatseq
## LR(1) items:
format -> IDENT LPAREN formatseq . RPAREN [ SLASH RPAREN RBRACKET DOT COMMA ]
## Transitions:
-- On RPAREN shift to state 67
## Reductions:

State 67:
## Known stack suffix:
## IDENT LPAREN formatseq RPAREN
## LR(1) items:
format -> IDENT LPAREN formatseq RPAREN . [ SLASH RPAREN RBRACKET DOT COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production format -> IDENT LPAREN formatseq RPAREN

State 68:
## Known stack suffix:
## format
## LR(1) items:
neformatseq -> format . COMMA neformatseq [ SLASH RPAREN RBRACKET DOT ]
neformatseq -> format . [ SLASH RPAREN RBRACKET DOT ]
## Transitions:
-- On COMMA shift to state 69
## Reductions:
-- On SLASH reduce production neformatseq -> format
-- On RPAREN reduce production neformatseq -> format
-- On RBRACKET reduce production neformatseq -> format
-- On DOT reduce production neformatseq -> format

State 69:
## Known stack suffix:
## format COMMA
## LR(1) items:
neformatseq -> format COMMA . neformatseq [ SLASH RPAREN RBRACKET DOT ]
## Transitions:
-- On STAR shift to state 60
-- On LPAREN shift to state 62
-- On IDENT shift to state 63
-- On neformatseq shift to state 70
-- On format shift to state 68
## Reductions:

State 70:
## Known stack suffix:
## format COMMA neformatseq
## LR(1) items:
neformatseq -> format COMMA neformatseq . [ SLASH RPAREN RBRACKET DOT ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production neformatseq -> format COMMA neformatseq

State 71:
## Known stack suffix:
## IDENT LBRACKET
## LR(1) items:
format -> IDENT LBRACKET . formatseq RBRACKET [ SLASH RPAREN RBRACKET DOT COMMA ]
## Transitions:
-- On STAR shift to state 60
-- On LPAREN shift to state 62
-- On IDENT shift to state 63
-- On neformatseq shift to state 65
-- On formatseq shift to state 72
-- On format shift to state 68
## Reductions:
-- On RBRACKET reduce production formatseq ->

State 72:
## Known stack suffix:
## IDENT LBRACKET formatseq
## LR(1) items:
format -> IDENT LBRACKET formatseq . RBRACKET [ SLASH RPAREN RBRACKET DOT COMMA ]
## Transitions:
-- On RBRACKET shift to state 73
## Reductions:

State 73:
## Known stack suffix:
## IDENT LBRACKET formatseq RBRACKET
## LR(1) items:
format -> IDENT LBRACKET formatseq RBRACKET . [ SLASH RPAREN RBRACKET DOT COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production format -> IDENT LBRACKET formatseq RBRACKET

State 74:
## Known stack suffix:
## LPAREN formatseq
## LR(1) items:
format -> LPAREN formatseq . RPAREN [ SLASH RPAREN RBRACKET DOT COMMA ]
## Transitions:
-- On RPAREN shift to state 75
## Reductions:

State 75:
## Known stack suffix:
## LPAREN formatseq RPAREN
## LR(1) items:
format -> LPAREN formatseq RPAREN . [ SLASH RPAREN RBRACKET DOT COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production format -> LPAREN formatseq RPAREN

State 76:
## Known stack suffix:
## IDENT COLON formatseq
## LR(1) items:
factformat -> IDENT COLON formatseq . [ SLASH DOT ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production factformat -> IDENT COLON formatseq

State 77:
## Known stack suffix:
## NOUNIF factformat
## LR(1) items:
all -> NOUNIF factformat . optint DOT all [ # ]
## Transitions:
-- On SLASH shift to state 78
-- On optint shift to state 80
## Reductions:
-- On DOT reduce production optint ->

State 78:
## Known stack suffix:
## SLASH
## LR(1) items:
optint -> SLASH . INT [ DOT ]
## Transitions:
-- On INT shift to state 79
## Reductions:

State 79:
## Known stack suffix:
## SLASH INT
## LR(1) items:
optint -> SLASH INT . [ DOT ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production optint -> SLASH INT

State 80:
## Known stack suffix:
## NOUNIF factformat optint
## LR(1) items:
all -> NOUNIF factformat optint . DOT all [ # ]
## Transitions:
-- On DOT shift to state 81
## Reductions:

State 81:
## Known stack suffix:
## NOUNIF factformat optint DOT
## LR(1) items:
all -> NOUNIF factformat optint DOT . all [ # ]
## Transitions:
-- On REDUCTION shift to state 1
-- On QUERY shift to state 39
-- On PREDICATE shift to state 42
-- On PARAM shift to state 52
-- On NOUNIF shift to state 57
-- On NOT shift to state 82
-- On FUN shift to state 85
-- On EQUATION shift to state 90
-- On ELIMTRUE shift to state 98
-- On DATA shift to state 101
-- On all shift to state 111
## Reductions:

State 82:
## Known stack suffix:
## NOT
## LR(1) items:
all -> NOT . fact DOT all [ # ]
## Transitions:
-- On LPAREN shift to state 2
-- On IDENT shift to state 16
-- On term shift to state 21
-- On fact shift to state 83
## Reductions:

State 83:
## Known stack suffix:
## NOT fact
## LR(1) items:
all -> NOT fact . DOT all [ # ]
## Transitions:
-- On DOT shift to state 84
## Reductions:

State 84:
## Known stack suffix:
## NOT fact DOT
## LR(1) items:
all -> NOT fact DOT . all [ # ]
## Transitions:
-- On REDUCTION shift to state 1
-- On QUERY shift to state 39
-- On PREDICATE shift to state 42
-- On PARAM shift to state 52
-- On NOUNIF shift to state 57
-- On NOT shift to state 82
-- On FUN shift to state 85
-- On EQUATION shift to state 90
-- On ELIMTRUE shift to state 98
-- On DATA shift to state 101
-- On all shift to state 110
## Reductions:

State 85:
## Known stack suffix:
## FUN
## LR(1) items:
all -> FUN . IDENT SLASH INT DOT all [ # ]
## Transitions:
-- On IDENT shift to state 86
## Reductions:

State 86:
## Known stack suffix:
## FUN IDENT
## LR(1) items:
all -> FUN IDENT . SLASH INT DOT all [ # ]
## Transitions:
-- On SLASH shift to state 87
## Reductions:

State 87:
## Known stack suffix:
## FUN IDENT SLASH
## LR(1) items:
all -> FUN IDENT SLASH . INT DOT all [ # ]
## Transitions:
-- On INT shift to state 88
## Reductions:

State 88:
## Known stack suffix:
## FUN IDENT SLASH INT
## LR(1) items:
all -> FUN IDENT SLASH INT . DOT all [ # ]
## Transitions:
-- On DOT shift to state 89
## Reductions:

State 89:
## Known stack suffix:
## FUN IDENT SLASH INT DOT
## LR(1) items:
all -> FUN IDENT SLASH INT DOT . all [ # ]
## Transitions:
-- On REDUCTION shift to state 1
-- On QUERY shift to state 39
-- On PREDICATE shift to state 42
-- On PARAM shift to state 52
-- On NOUNIF shift to state 57
-- On NOT shift to state 82
-- On FUN shift to state 85
-- On EQUATION shift to state 90
-- On ELIMTRUE shift to state 98
-- On DATA shift to state 101
-- On all shift to state 109
## Reductions:

State 90:
## Known stack suffix:
## EQUATION
## LR(1) items:
all -> EQUATION . eqlist DOT all [ # ]
## Transitions:
-- On LPAREN shift to state 2
-- On IDENT shift to state 3
-- On term shift to state 91
-- On eqlist shift to state 96
## Reductions:

State 91:
## Known stack suffix:
## term
## LR(1) items:
eqlist -> term . EQUAL term [ DOT ]
eqlist -> term . EQUAL term SEMI eqlist [ DOT ]
## Transitions:
-- On EQUAL shift to state 92
## Reductions:

State 92:
## Known stack suffix:
## term EQUAL
## LR(1) items:
eqlist -> term EQUAL . term [ DOT ]
eqlist -> term EQUAL . term SEMI eqlist [ DOT ]
## Transitions:
-- On LPAREN shift to state 2
-- On IDENT shift to state 3
-- On term shift to state 93
## Reductions:

State 93:
## Known stack suffix:
## term EQUAL term
## LR(1) items:
eqlist -> term EQUAL term . [ DOT ]
eqlist -> term EQUAL term . SEMI eqlist [ DOT ]
## Transitions:
-- On SEMI shift to state 94
## Reductions:
-- On DOT reduce production eqlist -> term EQUAL term

State 94:
## Known stack suffix:
## term EQUAL term SEMI
## LR(1) items:
eqlist -> term EQUAL term SEMI . eqlist [ DOT ]
## Transitions:
-- On LPAREN shift to state 2
-- On IDENT shift to state 3
-- On term shift to state 91
-- On eqlist shift to state 95
## Reductions:

State 95:
## Known stack suffix:
## term EQUAL term SEMI eqlist
## LR(1) items:
eqlist -> term EQUAL term SEMI eqlist . [ DOT ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production eqlist -> term EQUAL term SEMI eqlist

State 96:
## Known stack suffix:
## EQUATION eqlist
## LR(1) items:
all -> EQUATION eqlist . DOT all [ # ]
## Transitions:
-- On DOT shift to state 97
## Reductions:

State 97:
## Known stack suffix:
## EQUATION eqlist DOT
## LR(1) items:
all -> EQUATION eqlist DOT . all [ # ]
## Transitions:
-- On REDUCTION shift to state 1
-- On QUERY shift to state 39
-- On PREDICATE shift to state 42
-- On PARAM shift to state 52
-- On NOUNIF shift to state 57
-- On NOT shift to state 82
-- On FUN shift to state 85
-- On EQUATION shift to state 90
-- On ELIMTRUE shift to state 98
-- On DATA shift to state 101
-- On all shift to state 108
## Reductions:

State 98:
## Known stack suffix:
## ELIMTRUE
## LR(1) items:
all -> ELIMTRUE . fact DOT all [ # ]
## Transitions:
-- On LPAREN shift to state 2
-- On IDENT shift to state 16
-- On term shift to state 21
-- On fact shift to state 99
## Reductions:

State 99:
## Known stack suffix:
## ELIMTRUE fact
## LR(1) items:
all -> ELIMTRUE fact . DOT all [ # ]
## Transitions:
-- On DOT shift to state 100
## Reductions:

State 100:
## Known stack suffix:
## ELIMTRUE fact DOT
## LR(1) items:
all -> ELIMTRUE fact DOT . all [ # ]
## Transitions:
-- On REDUCTION shift to state 1
-- On QUERY shift to state 39
-- On PREDICATE shift to state 42
-- On PARAM shift to state 52
-- On NOUNIF shift to state 57
-- On NOT shift to state 82
-- On FUN shift to state 85
-- On EQUATION shift to state 90
-- On ELIMTRUE shift to state 98
-- On DATA shift to state 101
-- On all shift to state 107
## Reductions:

State 101:
## Known stack suffix:
## DATA
## LR(1) items:
all -> DATA . IDENT SLASH INT DOT all [ # ]
## Transitions:
-- On IDENT shift to state 102
## Reductions:

State 102:
## Known stack suffix:
## DATA IDENT
## LR(1) items:
all -> DATA IDENT . SLASH INT DOT all [ # ]
## Transitions:
-- On SLASH shift to state 103
## Reductions:

State 103:
## Known stack suffix:
## DATA IDENT SLASH
## LR(1) items:
all -> DATA IDENT SLASH . INT DOT all [ # ]
## Transitions:
-- On INT shift to state 104
## Reductions:

State 104:
## Known stack suffix:
## DATA IDENT SLASH INT
## LR(1) items:
all -> DATA IDENT SLASH INT . DOT all [ # ]
## Transitions:
-- On DOT shift to state 105
## Reductions:

State 105:
## Known stack suffix:
## DATA IDENT SLASH INT DOT
## LR(1) items:
all -> DATA IDENT SLASH INT DOT . all [ # ]
## Transitions:
-- On REDUCTION shift to state 1
-- On QUERY shift to state 39
-- On PREDICATE shift to state 42
-- On PARAM shift to state 52
-- On NOUNIF shift to state 57
-- On NOT shift to state 82
-- On FUN shift to state 85
-- On EQUATION shift to state 90
-- On ELIMTRUE shift to state 98
-- On DATA shift to state 101
-- On all shift to state 106
## Reductions:

State 106:
## Known stack suffix:
## DATA IDENT SLASH INT DOT all
## LR(1) items:
all -> DATA IDENT SLASH INT DOT all . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, reduce production all -> DATA IDENT SLASH INT DOT all

State 107:
## Known stack suffix:
## ELIMTRUE fact DOT all
## LR(1) items:
all -> ELIMTRUE fact DOT all . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, reduce production all -> ELIMTRUE fact DOT all

State 108:
## Known stack suffix:
## EQUATION eqlist DOT all
## LR(1) items:
all -> EQUATION eqlist DOT all . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, reduce production all -> EQUATION eqlist DOT all

State 109:
## Known stack suffix:
## FUN IDENT SLASH INT DOT all
## LR(1) items:
all -> FUN IDENT SLASH INT DOT all . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, reduce production all -> FUN IDENT SLASH INT DOT all

State 110:
## Known stack suffix:
## NOT fact DOT all
## LR(1) items:
all -> NOT fact DOT all . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, reduce production all -> NOT fact DOT all

State 111:
## Known stack suffix:
## NOUNIF factformat optint DOT all
## LR(1) items:
all -> NOUNIF factformat optint DOT all . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, reduce production all -> NOUNIF factformat optint DOT all

State 112:
## Known stack suffix:
## PARAM IDENT EQUAL INT DOT all
## LR(1) items:
all -> PARAM IDENT EQUAL INT DOT all . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, reduce production all -> PARAM IDENT EQUAL INT DOT all

State 113:
## Known stack suffix:
## PARAM IDENT EQUAL IDENT
## LR(1) items:
all -> PARAM IDENT EQUAL IDENT . DOT all [ # ]
## Transitions:
-- On DOT shift to state 114
## Reductions:

State 114:
## Known stack suffix:
## PARAM IDENT EQUAL IDENT DOT
## LR(1) items:
all -> PARAM IDENT EQUAL IDENT DOT . all [ # ]
## Transitions:
-- On REDUCTION shift to state 1
-- On QUERY shift to state 39
-- On PREDICATE shift to state 42
-- On PARAM shift to state 52
-- On NOUNIF shift to state 57
-- On NOT shift to state 82
-- On FUN shift to state 85
-- On EQUATION shift to state 90
-- On ELIMTRUE shift to state 98
-- On DATA shift to state 101
-- On all shift to state 115
## Reductions:

State 115:
## Known stack suffix:
## PARAM IDENT EQUAL IDENT DOT all
## LR(1) items:
all -> PARAM IDENT EQUAL IDENT DOT all . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, reduce production all -> PARAM IDENT EQUAL IDENT DOT all

State 116:
## Known stack suffix:
## PREDICATE IDENT SLASH INT identseq DOT all
## LR(1) items:
all -> PREDICATE IDENT SLASH INT identseq DOT all . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, reduce production all -> PREDICATE IDENT SLASH INT identseq DOT all

State 117:
## Known stack suffix:
## QUERY fact DOT all
## LR(1) items:
all -> QUERY fact DOT all . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, reduce production all -> QUERY fact DOT all

State 118:
## Known stack suffix:
## all
## LR(1) items:
all' -> all . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, accept all

State 119:
## Known stack suffix:
##
## LR(1) items:
tall' -> . tall [ # ]
## Transitions:
-- On TYPE shift to state 120
-- On SET shift to state 123
-- On QUERY shift to state 128
-- On PREDICATE shift to state 140
-- On NOUNIF shift to state 150
-- On NOT shift to state 158
-- On NAME shift to state 161
-- On FUN shift to state 166
-- On EQUATION shift to state 175
-- On ELIMTRUE shift to state 182
-- On CONST shift to state 185
-- On CLAUSES shift to state 191
-- On tall shift to state 259
## Reductions:

State 120:
## Known stack suffix:
## TYPE
## LR(1) items:
tall -> TYPE . IDENT DOT tall [ # ]
## Transitions:
-- On IDENT shift to state 121
## Reductions:

State 121:
## Known stack suffix:
## TYPE IDENT
## LR(1) items:
tall -> TYPE IDENT . DOT tall [ # ]
## Transitions:
-- On DOT shift to state 122
## Reductions:

State 122:
## Known stack suffix:
## TYPE IDENT DOT
## LR(1) items:
tall -> TYPE IDENT DOT . tall [ # ]
## Transitions:
-- On TYPE shift to state 120
-- On SET shift to state 123
-- On QUERY shift to state 128
-- On PREDICATE shift to state 140
-- On NOUNIF shift to state 150
-- On NOT shift to state 158
-- On NAME shift to state 161
-- On FUN shift to state 166
-- On EQUATION shift to state 175
-- On ELIMTRUE shift to state 182
-- On CONST shift to state 185
-- On CLAUSES shift to state 191
-- On tall shift to state 258
## Reductions:

State 123:
## Known stack suffix:
## SET
## LR(1) items:
tall -> SET . IDENT EQUAL IDENT DOT tall [ # ]
tall -> SET . IDENT EQUAL INT DOT tall [ # ]
## Transitions:
-- On IDENT shift to state 124
## Reductions:

State 124:
## Known stack suffix:
## SET IDENT
## LR(1) items:
tall -> SET IDENT . EQUAL IDENT DOT tall [ # ]
tall -> SET IDENT . EQUAL INT DOT tall [ # ]
## Transitions:
-- On EQUAL shift to state 125
## Reductions:

State 125:
## Known stack suffix:
## SET IDENT EQUAL
## LR(1) items:
tall -> SET IDENT EQUAL . IDENT DOT tall [ # ]
tall -> SET IDENT EQUAL . INT DOT tall [ # ]
## Transitions:
-- On INT shift to state 126
-- On IDENT shift to state 255
## Reductions:

State 126:
## Known stack suffix:
## SET IDENT EQUAL INT
## LR(1) items:
tall -> SET IDENT EQUAL INT . DOT tall [ # ]
## Transitions:
-- On DOT shift to state 127
## Reductions:

State 127:
## Known stack suffix:
## SET IDENT EQUAL INT DOT
## LR(1) items:
tall -> SET IDENT EQUAL INT DOT . tall [ # ]
## Transitions:
-- On TYPE shift to state 120
-- On SET shift to state 123
-- On QUERY shift to state 128
-- On PREDICATE shift to state 140
-- On NOUNIF shift to state 150
-- On NOT shift to state 158
-- On NAME shift to state 161
-- On FUN shift to state 166
-- On EQUATION shift to state 175
-- On ELIMTRUE shift to state 182
-- On CONST shift to state 185
-- On CLAUSES shift to state 191
-- On tall shift to state 254
## Reductions:

State 128:
## Known stack suffix:
## QUERY
## LR(1) items:
tall -> QUERY . nevartype SEMI tfact DOT tall [ # ]
tall -> QUERY . tfact DOT tall [ # ]
## Transitions:
-- On LPAREN shift to state 2
-- On IDENT shift to state 129
-- On tfact shift to state 138
-- On term shift to state 199
-- On nevartype shift to state 249
## Reductions:

State 129:
## Known stack suffix:
## IDENT
## LR(1) items:
nevartype -> IDENT . COLON IDENT COMMA nevartype [ SEMI ]
nevartype -> IDENT . COLON IDENT [ SEMI ]
term -> IDENT . LPAREN termseq RPAREN [ DIFF ]
term -> IDENT . LBRACKET termseq RBRACKET [ DIFF ]
term -> IDENT . [ DIFF ]
tfact -> IDENT . LPAREN termseq RPAREN [ DOT ]
tfact -> IDENT . [ DOT ]
## Transitions:
-- On LPAREN shift to state 130
-- On LBRACKET shift to state 11
-- On COLON shift to state 133
## Reductions:
-- On DOT reduce production tfact -> IDENT
-- On DIFF reduce production term -> IDENT

State 130:
## Known stack suffix:
## IDENT LPAREN
## LR(1) items:
term -> IDENT LPAREN . termseq RPAREN [ DIFF ]
tfact -> IDENT LPAREN . termseq RPAREN [ WEDGE SEMI RED EQUIVEQ EQUIV DOT ]
## Transitions:
-- On LPAREN shift to state 2
-- On IDENT shift to state 3
-- On termseq shift to state 131
-- On term shift to state 7
-- On netermseq shift to state 10
## Reductions:
-- On RPAREN reduce production termseq ->

State 131:
## Known stack suffix:
## IDENT LPAREN termseq
## LR(1) items:
term -> IDENT LPAREN termseq . RPAREN [ DIFF ]
tfact -> IDENT LPAREN termseq . RPAREN [ WEDGE SEMI RED EQUIVEQ EQUIV DOT ]
## Transitions:
-- On RPAREN shift to state 132
## Reductions:

State 132:
## Known stack suffix:
## IDENT LPAREN termseq RPAREN
## LR(1) items:
term -> IDENT LPAREN termseq RPAREN . [ DIFF ]
tfact -> IDENT LPAREN termseq RPAREN . [ WEDGE SEMI RED EQUIVEQ EQUIV DOT ]
## Transitions:
## Reductions:
-- On WEDGE reduce production tfact -> IDENT LPAREN termseq RPAREN
-- On SEMI reduce production tfact -> IDENT LPAREN termseq RPAREN
-- On RED reduce production tfact -> IDENT LPAREN termseq RPAREN
-- On EQUIVEQ reduce production tfact -> IDENT LPAREN termseq RPAREN
-- On EQUIV reduce production tfact -> IDENT LPAREN termseq RPAREN
-- On DOT reduce production tfact -> IDENT LPAREN termseq RPAREN
-- On DIFF reduce production term -> IDENT LPAREN termseq RPAREN

State 133:
## Known stack suffix:
## IDENT COLON
## LR(1) items:
nevartype -> IDENT COLON . IDENT COMMA nevartype [ SEMI ]
nevartype -> IDENT COLON . IDENT [ SEMI ]
## Transitions:
-- On IDENT shift to state 134
## Reductions:

State 134:
## Known stack suffix:
## IDENT COLON IDENT
## LR(1) items:
nevartype -> IDENT COLON IDENT . COMMA nevartype [ SEMI ]
nevartype -> IDENT COLON IDENT . [ SEMI ]
## Transitions:
-- On COMMA shift to state 135
## Reductions:
-- On SEMI reduce production nevartype -> IDENT COLON IDENT

State 135:
## Known stack suffix:
## IDENT COLON IDENT COMMA
## LR(1) items:
nevartype -> IDENT COLON IDENT COMMA . nevartype [ SEMI ]
## Transitions:
-- On IDENT shift to state 136
-- On nevartype shift to state 137
## Reductions:

State 136:
## Known stack suffix:
## IDENT
## LR(1) items:
nevartype -> IDENT . COLON IDENT COMMA nevartype [ SEMI ]
nevartype -> IDENT . COLON IDENT [ SEMI ]
## Transitions:
-- On COLON shift to state 133
## Reductions:

State 137:
## Known stack suffix:
## IDENT COLON IDENT COMMA nevartype
## LR(1) items:
nevartype -> IDENT COLON IDENT COMMA nevartype . [ SEMI ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production nevartype -> IDENT COLON IDENT COMMA nevartype

State 138:
## Known stack suffix:
## QUERY tfact
## LR(1) items:
tall -> QUERY tfact . DOT tall [ # ]
## Transitions:
-- On DOT shift to state 139
## Reductions:

State 139:
## Known stack suffix:
## QUERY tfact DOT
## LR(1) items:
tall -> QUERY tfact DOT . tall [ # ]
## Transitions:
-- On TYPE shift to state 120
-- On SET shift to state 123
-- On QUERY shift to state 128
-- On PREDICATE shift to state 140
-- On NOUNIF shift to state 150
-- On NOT shift to state 158
-- On NAME shift to state 161
-- On FUN shift to state 166
-- On EQUATION shift to state 175
-- On ELIMTRUE shift to state 182
-- On CONST shift to state 185
-- On CLAUSES shift to state 191
-- On tall shift to state 248
## Reductions:

State 140:
## Known stack suffix:
## PREDICATE
## LR(1) items:
tall -> PREDICATE . IDENT LPAREN identseq RPAREN options DOT tall [ # ]
tall -> PREDICATE . IDENT options DOT tall [ # ]
## Transitions:
-- On IDENT shift to state 141
## Reductions:

State 141:
## Known stack suffix:
## PREDICATE IDENT
## LR(1) items:
tall -> PREDICATE IDENT . LPAREN identseq RPAREN options DOT tall [ # ]
tall -> PREDICATE IDENT . options DOT tall [ # ]
## Transitions:
-- On LPAREN shift to state 142
-- On LBRACKET shift to state 145
-- On options shift to state 245
## Reductions:
-- On DOT reduce production options ->

State 142:
## Known stack suffix:
## PREDICATE IDENT LPAREN
## LR(1) items:
tall -> PREDICATE IDENT LPAREN . identseq RPAREN options DOT tall [ # ]
## Transitions:
-- On IDENT shift to state 46
-- On neidentseq shift to state 49
-- On identseq shift to state 143
## Reductions:
-- On RPAREN reduce production identseq ->

State 143:
## Known stack suffix:
## PREDICATE IDENT LPAREN identseq
## LR(1) items:
tall -> PREDICATE IDENT LPAREN identseq . RPAREN options DOT tall [ # ]
## Transitions:
-- On RPAREN shift to state 144
## Reductions:

State 144:
## Known stack suffix:
## PREDICATE IDENT LPAREN identseq RPAREN
## LR(1) items:
tall -> PREDICATE IDENT LPAREN identseq RPAREN . options DOT tall [ # ]
## Transitions:
-- On LBRACKET shift to state 145
-- On options shift to state 148
## Reductions:
-- On DOT reduce production options ->

State 145:
## Known stack suffix:
## LBRACKET
## LR(1) items:
options -> LBRACKET . neidentseq RBRACKET [ LPAREN IDENT FORALL DOT ]
## Transitions:
-- On IDENT shift to state 46
-- On neidentseq shift to state 146
## Reductions:

State 146:
## Known stack suffix:
## LBRACKET neidentseq
## LR(1) items:
options -> LBRACKET neidentseq . RBRACKET [ LPAREN IDENT FORALL DOT ]
## Transitions:
-- On RBRACKET shift to state 147
## Reductions:

State 147:
## Known stack suffix:
## LBRACKET neidentseq RBRACKET
## LR(1) items:
options -> LBRACKET neidentseq RBRACKET . [ LPAREN IDENT FORALL DOT ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production options -> LBRACKET neidentseq RBRACKET

State 148:
## Known stack suffix:
## PREDICATE IDENT LPAREN identseq RPAREN options
## LR(1) items:
tall -> PREDICATE IDENT LPAREN identseq RPAREN options . DOT tall [ # ]
## Transitions:
-- On DOT shift to state 149
## Reductions:

State 149:
## Known stack suffix:
## PREDICATE IDENT LPAREN identseq RPAREN options DOT
## LR(1) items:
tall -> PREDICATE IDENT LPAREN identseq RPAREN options DOT . tall [ # ]
## Transitions:
-- On TYPE shift to state 120
-- On SET shift to state 123
-- On QUERY shift to state 128
-- On PREDICATE shift to state 140
-- On NOUNIF shift to state 150
-- On NOT shift to state 158
-- On NAME shift to state 161
-- On FUN shift to state 166
-- On EQUATION shift to state 175
-- On ELIMTRUE shift to state 182
-- On CONST shift to state 185
-- On CLAUSES shift to state 191
-- On tall shift to state 244
## Reductions:

State 150:
## Known stack suffix:
## NOUNIF
## LR(1) items:
tall -> NOUNIF . nevartype SEMI tfactformat optint DOT tall [ # ]
tall -> NOUNIF . tfactformat optint DOT tall [ # ]
## Transitions:
-- On IDENT shift to state 151
-- On tfactformat shift to state 155
-- On nevartype shift to state 237
## Reductions:

State 151:
## Known stack suffix:
## IDENT
## LR(1) items:
nevartype -> IDENT . COLON IDENT COMMA nevartype [ SEMI ]
nevartype -> IDENT . COLON IDENT [ SEMI ]
tfactformat -> IDENT . LPAREN formatseq RPAREN [ SLASH DOT ]
## Transitions:
-- On LPAREN shift to state 152
-- On COLON shift to state 133
## Reductions:

State 152:
## Known stack suffix:
## IDENT LPAREN
## LR(1) items:
tfactformat -> IDENT LPAREN . formatseq RPAREN [ SLASH DOT ]
## Transitions:
-- On STAR shift to state 60
-- On LPAREN shift to state 62
-- On IDENT shift to state 63
-- On neformatseq shift to state 65
-- On formatseq shift to state 153
-- On format shift to state 68
## Reductions:
-- On RPAREN reduce production formatseq ->

State 153:
## Known stack suffix:
## IDENT LPAREN formatseq
## LR(1) items:
tfactformat -> IDENT LPAREN formatseq . RPAREN [ SLASH DOT ]
## Transitions:
-- On RPAREN shift to state 154
## Reductions:

State 154:
## Known stack suffix:
## IDENT LPAREN formatseq RPAREN
## LR(1) items:
tfactformat -> IDENT LPAREN formatseq RPAREN . [ SLASH DOT ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production tfactformat -> IDENT LPAREN formatseq RPAREN

State 155:
## Known stack suffix:
## NOUNIF tfactformat
## LR(1) items:
tall -> NOUNIF tfactformat . optint DOT tall [ # ]
## Transitions:
-- On SLASH shift to state 78
-- On optint shift to state 156
## Reductions:
-- On DOT reduce production optint ->

State 156:
## Known stack suffix:
## NOUNIF tfactformat optint
## LR(1) items:
tall -> NOUNIF tfactformat optint . DOT tall [ # ]
## Transitions:
-- On DOT shift to state 157
## Reductions:

State 157:
## Known stack suffix:
## NOUNIF tfactformat optint DOT
## LR(1) items:
tall -> NOUNIF tfactformat optint DOT . tall [ # ]
## Transitions:
-- On TYPE shift to state 120
-- On SET shift to state 123
-- On QUERY shift to state 128
-- On PREDICATE shift to state 140
-- On NOUNIF shift to state 150
-- On NOT shift to state 158
-- On NAME shift to state 161
-- On FUN shift to state 166
-- On EQUATION shift to state 175
-- On ELIMTRUE shift to state 182
-- On CONST shift to state 185
-- On CLAUSES shift to state 191
-- On tall shift to state 236
## Reductions:

State 158:
## Known stack suffix:
## NOT
## LR(1) items:
tall -> NOT . nevartype SEMI tfact DOT tall [ # ]
tall -> NOT . tfact DOT tall [ # ]
## Transitions:
-- On LPAREN shift to state 2
-- On IDENT shift to state 129
-- On tfact shift to state 159
-- On term shift to state 199
-- On nevartype shift to state 231
## Reductions:

State 159:
## Known stack suffix:
## NOT tfact
## LR(1) items:
tall -> NOT tfact . DOT tall [ # ]
## Transitions:
-- On DOT shift to state 160
## Reductions:

State 160:
## Known stack suffix:
## NOT tfact DOT
## LR(1) items:
tall -> NOT tfact DOT . tall [ # ]
## Transitions:
-- On TYPE shift to state 120
-- On SET shift to state 123
-- On QUERY shift to state 128
-- On PREDICATE shift to state 140
-- On NOUNIF shift to state 150
-- On NOT shift to state 158
-- On NAME shift to state 161
-- On FUN shift to state 166
-- On EQUATION shift to state 175
-- On ELIMTRUE shift to state 182
-- On CONST shift to state 185
-- On CLAUSES shift to state 191
-- On tall shift to state 230
## Reductions:

State 161:
## Known stack suffix:
## NAME
## LR(1) items:
tall -> NAME . IDENT COLON IDENT DOT tall [ # ]
## Transitions:
-- On IDENT shift to state 162
## Reductions:

State 162:
## Known stack suffix:
## NAME IDENT
## LR(1) items:
tall -> NAME IDENT . COLON IDENT DOT tall [ # ]
## Transitions:
-- On COLON shift to state 163
## Reductions:

State 163:
## Known stack suffix:
## NAME IDENT COLON
## LR(1) items:
tall -> NAME IDENT COLON . IDENT DOT tall [ # ]
## Transitions:
-- On IDENT shift to state 164
## Reductions:

State 164:
## Known stack suffix:
## NAME IDENT COLON IDENT
## LR(1) items:
tall -> NAME IDENT COLON IDENT . DOT tall [ # ]
## Transitions:
-- On DOT shift to state 165
## Reductions:

State 165:
## Known stack suffix:
## NAME IDENT COLON IDENT DOT
## LR(1) items:
tall -> NAME IDENT COLON IDENT DOT . tall [ # ]
## Transitions:
-- On TYPE shift to state 120
-- On SET shift to state 123
-- On QUERY shift to state 128
-- On PREDICATE shift to state 140
-- On NOUNIF shift to state 150
-- On NOT shift to state 158
-- On NAME shift to state 161
-- On FUN shift to state 166
-- On EQUATION shift to state 175
-- On ELIMTRUE shift to state 182
-- On CONST shift to state 185
-- On CLAUSES shift to state 191
-- On tall shift to state 229
## Reductions:

State 166:
## Known stack suffix:
## FUN
## LR(1) items:
tall -> FUN . IDENT LPAREN identseq RPAREN COLON IDENT options DOT tall [ # ]
## Transitions:
-- On IDENT shift to state 167
## Reductions:

State 167:
## Known stack suffix:
## FUN IDENT
## LR(1) items:
tall -> FUN IDENT . LPAREN identseq RPAREN COLON IDENT options DOT tall [ # ]
## Transitions:
-- On LPAREN shift to state 168
## Reductions:

State 168:
## Known stack suffix:
## FUN IDENT LPAREN
## LR(1) items:
tall -> FUN IDENT LPAREN . identseq RPAREN COLON IDENT options DOT tall [ # ]
## Transitions:
-- On IDENT shift to state 46
-- On neidentseq shift to state 49
-- On identseq shift to state 169
## Reductions:
-- On RPAREN reduce production identseq ->

State 169:
## Known stack suffix:
## FUN IDENT LPAREN identseq
## LR(1) items:
tall -> FUN IDENT LPAREN identseq . RPAREN COLON IDENT options DOT tall [ # ]
## Transitions:
-- On RPAREN shift to state 170
## Reductions:

State 170:
## Known stack suffix:
## FUN IDENT LPAREN identseq RPAREN
## LR(1) items:
tall -> FUN IDENT LPAREN identseq RPAREN . COLON IDENT options DOT tall [ # ]
## Transitions:
-- On COLON shift to state 171
## Reductions:

State 171:
## Known stack suffix:
## FUN IDENT LPAREN identseq RPAREN COLON
## LR(1) items:
tall -> FUN IDENT LPAREN identseq RPAREN COLON . IDENT options DOT tall [ # ]
## Transitions:
-- On IDENT shift to state 172
## Reductions:

State 172:
## Known stack suffix:
## FUN IDENT LPAREN identseq RPAREN COLON IDENT
## LR(1) items:
tall -> FUN IDENT LPAREN identseq RPAREN COLON IDENT . options DOT tall [ # ]
## Transitions:
-- On LBRACKET shift to state 145
-- On options shift to state 173
## Reductions:
-- On DOT reduce production options ->

State 173:
## Known stack suffix:
## FUN IDENT LPAREN identseq RPAREN COLON IDENT options
## LR(1) items:
tall -> FUN IDENT LPAREN identseq RPAREN COLON IDENT options . DOT tall [ # ]
## Transitions:
-- On DOT shift to state 174
## Reductions:

State 174:
## Known stack suffix:
## FUN IDENT LPAREN identseq RPAREN COLON IDENT options DOT
## LR(1) items:
tall -> FUN IDENT LPAREN identseq RPAREN COLON IDENT options DOT . tall [ # ]
## Transitions:
-- On TYPE shift to state 120
-- On SET shift to state 123
-- On QUERY shift to state 128
-- On PREDICATE shift to state 140
-- On NOUNIF shift to state 150
-- On NOT shift to state 158
-- On NAME shift to state 161
-- On FUN shift to state 166
-- On EQUATION shift to state 175
-- On ELIMTRUE shift to state 182
-- On CONST shift to state 185
-- On CLAUSES shift to state 191
-- On tall shift to state 228
## Reductions:

State 175:
## Known stack suffix:
## EQUATION
## LR(1) items:
tall -> EQUATION . options teqlist DOT tall [ # ]
## Transitions:
-- On LBRACKET shift to state 145
-- On options shift to state 176
## Reductions:
-- On LPAREN reduce production options ->
-- On IDENT reduce production options ->
-- On FORALL reduce production options ->

State 176:
## Known stack suffix:
## EQUATION options
## LR(1) items:
tall -> EQUATION options . teqlist DOT tall [ # ]
## Transitions:
-- On FORALL shift to state 177
-- On teqlist shift to state 180
-- On forallvartype shift to state 222
## Reductions:
-- On LPAREN reduce production forallvartype ->
-- On IDENT reduce production forallvartype ->

State 177:
## Known stack suffix:
## FORALL
## LR(1) items:
forallvartype -> FORALL . nevartype SEMI [ LPAREN IDENT ]
## Transitions:
-- On IDENT shift to state 136
-- On nevartype shift to state 178
## Reductions:

State 178:
## Known stack suffix:
## FORALL nevartype
## LR(1) items:
forallvartype -> FORALL nevartype . SEMI [ LPAREN IDENT ]
## Transitions:
-- On SEMI shift to state 179
## Reductions:

State 179:
## Known stack suffix:
## FORALL nevartype SEMI
## LR(1) items:
forallvartype -> FORALL nevartype SEMI . [ LPAREN IDENT ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production forallvartype -> FORALL nevartype SEMI

State 180:
## Known stack suffix:
## EQUATION options teqlist
## LR(1) items:
tall -> EQUATION options teqlist . DOT tall [ # ]
## Transitions:
-- On DOT shift to state 181
## Reductions:

State 181:
## Known stack suffix:
## EQUATION options teqlist DOT
## LR(1) items:
tall -> EQUATION options teqlist DOT . tall [ # ]
## Transitions:
-- On TYPE shift to state 120
-- On SET shift to state 123
-- On QUERY shift to state 128
-- On PREDICATE shift to state 140
-- On NOUNIF shift to state 150
-- On NOT shift to state 158
-- On NAME shift to state 161
-- On FUN shift to state 166
-- On EQUATION shift to state 175
-- On ELIMTRUE shift to state 182
-- On CONST shift to state 185
-- On CLAUSES shift to state 191
-- On tall shift to state 221
## Reductions:

State 182:
## Known stack suffix:
## ELIMTRUE
## LR(1) items:
tall -> ELIMTRUE . nevartype SEMI tfact DOT tall [ # ]
tall -> ELIMTRUE . tfact DOT tall [ # ]
## Transitions:
-- On LPAREN shift to state 2
-- On IDENT shift to state 129
-- On tfact shift to state 183
-- On term shift to state 199
-- On nevartype shift to state 216
## Reductions:

State 183:
## Known stack suffix:
## ELIMTRUE tfact
## LR(1) items:
tall -> ELIMTRUE tfact . DOT tall [ # ]
## Transitions:
-- On DOT shift to state 184
## Reductions:

State 184:
## Known stack suffix:
## ELIMTRUE tfact DOT
## LR(1) items:
tall -> ELIMTRUE tfact DOT . tall [ # ]
## Transitions:
-- On TYPE shift to state 120
-- On SET shift to state 123
-- On QUERY shift to state 128
-- On PREDICATE shift to state 140
-- On NOUNIF shift to state 150
-- On NOT shift to state 158
-- On NAME shift to state 161
-- On FUN shift to state 166
-- On EQUATION shift to state 175
-- On ELIMTRUE shift to state 182
-- On CONST shift to state 185
-- On CLAUSES shift to state 191
-- On tall shift to state 215
## Reductions:

State 185:
## Known stack suffix:
## CONST
## LR(1) items:
tall -> CONST . IDENT COLON IDENT options DOT tall [ # ]
## Transitions:
-- On IDENT shift to state 186
## Reductions:

State 186:
## Known stack suffix:
## CONST IDENT
## LR(1) items:
tall -> CONST IDENT . COLON IDENT options DOT tall [ # ]
## Transitions:
-- On COLON shift to state 187
## Reductions:

State 187:
## Known stack suffix:
## CONST IDENT COLON
## LR(1) items:
tall -> CONST IDENT COLON . IDENT options DOT tall [ # ]
## Transitions:
-- On IDENT shift to state 188
## Reductions:

State 188:
## Known stack suffix:
## CONST IDENT COLON IDENT
## LR(1) items:
tall -> CONST IDENT COLON IDENT . options DOT tall [ # ]
## Transitions:
-- On LBRACKET shift to state 145
-- On options shift to state 189
## Reductions:
-- On DOT reduce production options ->

State 189:
## Known stack suffix:
## CONST IDENT COLON IDENT options
## LR(1) items:
tall -> CONST IDENT COLON IDENT options . DOT tall [ # ]
## Transitions:
-- On DOT shift to state 190
## Reductions:

State 190:
## Known stack suffix:
## CONST IDENT COLON IDENT options DOT
## LR(1) items:
tall -> CONST IDENT COLON IDENT options DOT . tall [ # ]
## Transitions:
-- On TYPE shift to state 120
-- On SET shift to state 123
-- On QUERY shift to state 128
-- On PREDICATE shift to state 140
-- On NOUNIF shift to state 150
-- On NOT shift to state 158
-- On NAME shift to state 161
-- On FUN shift to state 166
-- On EQUATION shift to state 175
-- On ELIMTRUE shift to state 182
-- On CONST shift to state 185
-- On CLAUSES shift to state 191
-- On tall shift to state 214
## Reductions:

State 191:
## Known stack suffix:
## CLAUSES
## LR(1) items:
tall -> CLAUSES . treduc EOF [ # ]
## Transitions:
-- On FORALL shift to state 177
-- On treduc shift to state 192
-- On forallvartype shift to state 194
## Reductions:
-- On LPAREN reduce production forallvartype ->
-- On IDENT reduce production forallvartype ->

State 192:
## Known stack suffix:
## CLAUSES treduc
## LR(1) items:
tall -> CLAUSES treduc . EOF [ # ]
## Transitions:
-- On EOF shift to state 193
## Reductions:

State 193:
## Known stack suffix:
## CLAUSES treduc EOF
## LR(1) items:
tall -> CLAUSES treduc EOF . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, reduce production tall -> CLAUSES treduc EOF

State 194:
## Known stack suffix:
## forallvartype
## LR(1) items:
treduc -> forallvartype . trule SEMI treduc [ EOF ]
treduc -> forallvartype . trule DOT [ EOF ]
## Transitions:
-- On LPAREN shift to state 2
-- On IDENT shift to state 195
-- On ttermand shift to state 196
-- On trule shift to state 206
-- On tfact shift to state 210
-- On term shift to state 199
## Reductions:

State 195:
## Known stack suffix:
## IDENT
## LR(1) items:
term -> IDENT . LPAREN termseq RPAREN [ DIFF ]
term -> IDENT . LBRACKET termseq RBRACKET [ DIFF ]
term -> IDENT . [ DIFF ]
tfact -> IDENT . LPAREN termseq RPAREN [ WEDGE SEMI RED EQUIVEQ EQUIV DOT ]
tfact -> IDENT . [ WEDGE SEMI RED EQUIVEQ EQUIV DOT ]
## Transitions:
-- On LPAREN shift to state 130
-- On LBRACKET shift to state 11
## Reductions:
-- On WEDGE reduce production tfact -> IDENT
-- On SEMI reduce production tfact -> IDENT
-- On RED reduce production tfact -> IDENT
-- On EQUIVEQ reduce production tfact -> IDENT
-- On EQUIV reduce production tfact -> IDENT
-- On DOT reduce production tfact -> IDENT
-- On DIFF reduce production term -> IDENT

State 196:
## Known stack suffix:
## ttermand
## LR(1) items:
trule -> ttermand . RED tfact [ SEMI DOT ]
trule -> ttermand . EQUIV tfact [ SEMI DOT ]
trule -> ttermand . EQUIVEQ tfact [ SEMI DOT ]
## Transitions:
-- On RED shift to state 197
-- On EQUIVEQ shift to state 202
-- On EQUIV shift to state 204
## Reductions:

State 197:
## Known stack suffix:
## ttermand RED
## LR(1) items:
trule -> ttermand RED . tfact [ SEMI DOT ]
## Transitions:
-- On LPAREN shift to state 2
-- On IDENT shift to state 195
-- On tfact shift to state 198
-- On term shift to state 199
## Reductions:

State 198:
## Known stack suffix:
## ttermand RED tfact
## LR(1) items:
trule -> ttermand RED tfact . [ SEMI DOT ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production trule -> ttermand RED tfact

State 199:
## Known stack suffix:
## term
## LR(1) items:
tfact -> term . DIFF term [ WEDGE SEMI RED EQUIVEQ EQUIV DOT ]
## Transitions:
-- On DIFF shift to state 200
## Reductions:

State 200:
## Known stack suffix:
## term DIFF
## LR(1) items:
tfact -> term DIFF . term [ WEDGE SEMI RED EQUIVEQ EQUIV DOT ]
## Transitions:
-- On LPAREN shift to state 2
-- On IDENT shift to state 3
-- On term shift to state 201
## Reductions:

State 201:
## Known stack suffix:
## term DIFF term
## LR(1) items:
tfact -> term DIFF term . [ WEDGE SEMI RED EQUIVEQ EQUIV DOT ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production tfact -> term DIFF term

State 202:
## Known stack suffix:
## ttermand EQUIVEQ
## LR(1) items:
trule -> ttermand EQUIVEQ . tfact [ SEMI DOT ]
## Transitions:
-- On LPAREN shift to state 2
-- On IDENT shift to state 195
-- On tfact shift to state 203
-- On term shift to state 199
## Reductions:

State 203:
## Known stack suffix:
## ttermand EQUIVEQ tfact
## LR(1) items:
trule -> ttermand EQUIVEQ tfact . [ SEMI DOT ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production trule -> ttermand EQUIVEQ tfact

State 204:
## Known stack suffix:
## ttermand EQUIV
## LR(1) items:
trule -> ttermand EQUIV . tfact [ SEMI DOT ]
## Transitions:
-- On LPAREN shift to state 2
-- On IDENT shift to state 195
-- On tfact shift to state 205
-- On term shift to state 199
## Reductions:

State 205:
## Known stack suffix:
## ttermand EQUIV tfact
## LR(1) items:
trule -> ttermand EQUIV tfact . [ SEMI DOT ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production trule -> ttermand EQUIV tfact

State 206:
## Known stack suffix:
## forallvartype trule
## LR(1) items:
treduc -> forallvartype trule . SEMI treduc [ EOF ]
treduc -> forallvartype trule . DOT [ EOF ]
## Transitions:
-- On SEMI shift to state 207
-- On DOT shift to state 209
## Reductions:

State 207:
## Known stack suffix:
## forallvartype trule SEMI
## LR(1) items:
treduc -> forallvartype trule SEMI . treduc [ EOF ]
## Transitions:
-- On FORALL shift to state 177
-- On treduc shift to state 208
-- On forallvartype shift to state 194
## Reductions:
-- On LPAREN reduce production forallvartype ->
-- On IDENT reduce production forallvartype ->

State 208:
## Known stack suffix:
## forallvartype trule SEMI treduc
## LR(1) items:
treduc -> forallvartype trule SEMI treduc . [ EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production treduc -> forallvartype trule SEMI treduc

State 209:
## Known stack suffix:
## forallvartype trule DOT
## LR(1) items:
treduc -> forallvartype trule DOT . [ EOF ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production treduc -> forallvartype trule DOT

State 210:
## Known stack suffix:
## tfact
## LR(1) items:
trule -> tfact . [ SEMI DOT ]
ttermand -> tfact . WEDGE ttermand [ RED EQUIVEQ EQUIV ]
ttermand -> tfact . [ RED EQUIVEQ EQUIV ]
## Transitions:
-- On WEDGE shift to state 211
## Reductions:
-- On SEMI reduce production trule -> tfact
-- On RED reduce production ttermand -> tfact
-- On EQUIVEQ reduce production ttermand -> tfact
-- On EQUIV reduce production ttermand -> tfact
-- On DOT reduce production trule -> tfact

State 211:
## Known stack suffix:
## tfact WEDGE
## LR(1) items:
ttermand -> tfact WEDGE . ttermand [ RED EQUIVEQ EQUIV ]
## Transitions:
-- On LPAREN shift to state 2
-- On IDENT shift to state 195
-- On ttermand shift to state 212
-- On tfact shift to state 213
-- On term shift to state 199
## Reductions:

State 212:
## Known stack suffix:
## tfact WEDGE ttermand
## LR(1) items:
ttermand -> tfact WEDGE ttermand . [ RED EQUIVEQ EQUIV ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production ttermand -> tfact WEDGE ttermand

State 213:
## Known stack suffix:
## tfact
## LR(1) items:
ttermand -> tfact . WEDGE ttermand [ RED EQUIVEQ EQUIV ]
ttermand -> tfact . [ RED EQUIVEQ EQUIV ]
## Transitions:
-- On WEDGE shift to state 211
## Reductions:
-- On RED reduce production ttermand -> tfact
-- On EQUIVEQ reduce production ttermand -> tfact
-- On EQUIV reduce production ttermand -> tfact

State 214:
## Known stack suffix:
## CONST IDENT COLON IDENT options DOT tall
## LR(1) items:
tall -> CONST IDENT COLON IDENT options DOT tall . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, reduce production tall -> CONST IDENT COLON IDENT options DOT tall

State 215:
## Known stack suffix:
## ELIMTRUE tfact DOT tall
## LR(1) items:
tall -> ELIMTRUE tfact DOT tall . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, reduce production tall -> ELIMTRUE tfact DOT tall

State 216:
## Known stack suffix:
## ELIMTRUE nevartype
## LR(1) items:
tall -> ELIMTRUE nevartype . SEMI tfact DOT tall [ # ]
## Transitions:
-- On SEMI shift to state 217
## Reductions:

State 217:
## Known stack suffix:
## ELIMTRUE nevartype SEMI
## LR(1) items:
tall -> ELIMTRUE nevartype SEMI . tfact DOT tall [ # ]
## Transitions:
-- On LPAREN shift to state 2
-- On IDENT shift to state 195
-- On tfact shift to state 218
-- On term shift to state 199
## Reductions:

State 218:
## Known stack suffix:
## ELIMTRUE nevartype SEMI tfact
## LR(1) items:
tall -> ELIMTRUE nevartype SEMI tfact . DOT tall [ # ]
## Transitions:
-- On DOT shift to state 219
## Reductions:

State 219:
## Known stack suffix:
## ELIMTRUE nevartype SEMI tfact DOT
## LR(1) items:
tall -> ELIMTRUE nevartype SEMI tfact DOT . tall [ # ]
## Transitions:
-- On TYPE shift to state 120
-- On SET shift to state 123
-- On QUERY shift to state 128
-- On PREDICATE shift to state 140
-- On NOUNIF shift to state 150
-- On NOT shift to state 158
-- On NAME shift to state 161
-- On FUN shift to state 166
-- On EQUATION shift to state 175
-- On ELIMTRUE shift to state 182
-- On CONST shift to state 185
-- On CLAUSES shift to state 191
-- On tall shift to state 220
## Reductions:

State 220:
## Known stack suffix:
## ELIMTRUE nevartype SEMI tfact DOT tall
## LR(1) items:
tall -> ELIMTRUE nevartype SEMI tfact DOT tall . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, reduce production tall -> ELIMTRUE nevartype SEMI tfact DOT tall

State 221:
## Known stack suffix:
## EQUATION options teqlist DOT tall
## LR(1) items:
tall -> EQUATION options teqlist DOT tall . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, reduce production tall -> EQUATION options teqlist DOT tall

State 222:
## Known stack suffix:
## forallvartype
## LR(1) items:
teqlist -> forallvartype . term EQUAL term [ DOT ]
teqlist -> forallvartype . term EQUAL term SEMI teqlist [ DOT ]
## Transitions:
-- On LPAREN shift to state 2
-- On IDENT shift to state 3
-- On term shift to state 223
## Reductions:

State 223:
## Known stack suffix:
## forallvartype term
## LR(1) items:
teqlist -> forallvartype term . EQUAL term [ DOT ]
teqlist -> forallvartype term . EQUAL term SEMI teqlist [ DOT ]
## Transitions:
-- On EQUAL shift to state 224
## Reductions:

State 224:
## Known stack suffix:
## forallvartype term EQUAL
## LR(1) items:
teqlist -> forallvartype term EQUAL . term [ DOT ]
teqlist -> forallvartype term EQUAL . term SEMI teqlist [ DOT ]
## Transitions:
-- On LPAREN shift to state 2
-- On IDENT shift to state 3
-- On term shift to state 225
## Reductions:

State 225:
## Known stack suffix:
## forallvartype term EQUAL term
## LR(1) items:
teqlist -> forallvartype term EQUAL term . [ DOT ]
teqlist -> forallvartype term EQUAL term . SEMI teqlist [ DOT ]
## Transitions:
-- On SEMI shift to state 226
## Reductions:
-- On DOT reduce production teqlist -> forallvartype term EQUAL term

State 226:
## Known stack suffix:
## forallvartype term EQUAL term SEMI
## LR(1) items:
teqlist -> forallvartype term EQUAL term SEMI . teqlist [ DOT ]
## Transitions:
-- On FORALL shift to state 177
-- On teqlist shift to state 227
-- On forallvartype shift to state 222
## Reductions:
-- On LPAREN reduce production forallvartype ->
-- On IDENT reduce production forallvartype ->

State 227:
## Known stack suffix:
## forallvartype term EQUAL term SEMI teqlist
## LR(1) items:
teqlist -> forallvartype term EQUAL term SEMI teqlist . [ DOT ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production teqlist -> forallvartype term EQUAL term SEMI teqlist

State 228:
## Known stack suffix:
## FUN IDENT LPAREN identseq RPAREN COLON IDENT options DOT tall
## LR(1) items:
tall -> FUN IDENT LPAREN identseq RPAREN COLON IDENT options DOT tall . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, reduce production tall -> FUN IDENT LPAREN identseq RPAREN COLON IDENT options DOT tall

State 229:
## Known stack suffix:
## NAME IDENT COLON IDENT DOT tall
## LR(1) items:
tall -> NAME IDENT COLON IDENT DOT tall . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, reduce production tall -> NAME IDENT COLON IDENT DOT tall

State 230:
## Known stack suffix:
## NOT tfact DOT tall
## LR(1) items:
tall -> NOT tfact DOT tall . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, reduce production tall -> NOT tfact DOT tall

State 231:
## Known stack suffix:
## NOT nevartype
## LR(1) items:
tall -> NOT nevartype . SEMI tfact DOT tall [ # ]
## Transitions:
-- On SEMI shift to state 232
## Reductions:

State 232:
## Known stack suffix:
## NOT nevartype SEMI
## LR(1) items:
tall -> NOT nevartype SEMI . tfact DOT tall [ # ]
## Transitions:
-- On LPAREN shift to state 2
-- On IDENT shift to state 195
-- On tfact shift to state 233
-- On term shift to state 199
## Reductions:

State 233:
## Known stack suffix:
## NOT nevartype SEMI tfact
## LR(1) items:
tall -> NOT nevartype SEMI tfact . DOT tall [ # ]
## Transitions:
-- On DOT shift to state 234
## Reductions:

State 234:
## Known stack suffix:
## NOT nevartype SEMI tfact DOT
## LR(1) items:
tall -> NOT nevartype SEMI tfact DOT . tall [ # ]
## Transitions:
-- On TYPE shift to state 120
-- On SET shift to state 123
-- On QUERY shift to state 128
-- On PREDICATE shift to state 140
-- On NOUNIF shift to state 150
-- On NOT shift to state 158
-- On NAME shift to state 161
-- On FUN shift to state 166
-- On EQUATION shift to state 175
-- On ELIMTRUE shift to state 182
-- On CONST shift to state 185
-- On CLAUSES shift to state 191
-- On tall shift to state 235
## Reductions:

State 235:
## Known stack suffix:
## NOT nevartype SEMI tfact DOT tall
## LR(1) items:
tall -> NOT nevartype SEMI tfact DOT tall . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, reduce production tall -> NOT nevartype SEMI tfact DOT tall

State 236:
## Known stack suffix:
## NOUNIF tfactformat optint DOT tall
## LR(1) items:
tall -> NOUNIF tfactformat optint DOT tall . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, reduce production tall -> NOUNIF tfactformat optint DOT tall

State 237:
## Known stack suffix:
## NOUNIF nevartype
## LR(1) items:
tall -> NOUNIF nevartype . SEMI tfactformat optint DOT tall [ # ]
## Transitions:
-- On SEMI shift to state 238
## Reductions:

State 238:
## Known stack suffix:
## NOUNIF nevartype SEMI
## LR(1) items:
tall -> NOUNIF nevartype SEMI . tfactformat optint DOT tall [ # ]
## Transitions:
-- On IDENT shift to state 239
-- On tfactformat shift to state 240
## Reductions:

State 239:
## Known stack suffix:
## IDENT
## LR(1) items:
tfactformat -> IDENT . LPAREN formatseq RPAREN [ SLASH DOT ]
## Transitions:
-- On LPAREN shift to state 152
## Reductions:

State 240:
## Known stack suffix:
## NOUNIF nevartype SEMI tfactformat
## LR(1) items:
tall -> NOUNIF nevartype SEMI tfactformat . optint DOT tall [ # ]
## Transitions:
-- On SLASH shift to state 78
-- On optint shift to state 241
## Reductions:
-- On DOT reduce production optint ->

State 241:
## Known stack suffix:
## NOUNIF nevartype SEMI tfactformat optint
## LR(1) items:
tall -> NOUNIF nevartype SEMI tfactformat optint . DOT tall [ # ]
## Transitions:
-- On DOT shift to state 242
## Reductions:

State 242:
## Known stack suffix:
## NOUNIF nevartype SEMI tfactformat optint DOT
## LR(1) items:
tall -> NOUNIF nevartype SEMI tfactformat optint DOT . tall [ # ]
## Transitions:
-- On TYPE shift to state 120
-- On SET shift to state 123
-- On QUERY shift to state 128
-- On PREDICATE shift to state 140
-- On NOUNIF shift to state 150
-- On NOT shift to state 158
-- On NAME shift to state 161
-- On FUN shift to state 166
-- On EQUATION shift to state 175
-- On ELIMTRUE shift to state 182
-- On CONST shift to state 185
-- On CLAUSES shift to state 191
-- On tall shift to state 243
## Reductions:

State 243:
## Known stack suffix:
## NOUNIF nevartype SEMI tfactformat optint DOT tall
## LR(1) items:
tall -> NOUNIF nevartype SEMI tfactformat optint DOT tall . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, reduce production tall -> NOUNIF nevartype SEMI tfactformat optint DOT tall

State 244:
## Known stack suffix:
## PREDICATE IDENT LPAREN identseq RPAREN options DOT tall
## LR(1) items:
tall -> PREDICATE IDENT LPAREN identseq RPAREN options DOT tall . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, reduce production tall -> PREDICATE IDENT LPAREN identseq RPAREN options DOT tall

State 245:
## Known stack suffix:
## PREDICATE IDENT options
## LR(1) items:
tall -> PREDICATE IDENT options . DOT tall [ # ]
## Transitions:
-- On DOT shift to state 246
## Reductions:

State 246:
## Known stack suffix:
## PREDICATE IDENT options DOT
## LR(1) items:
tall -> PREDICATE IDENT options DOT . tall [ # ]
## Transitions:
-- On TYPE shift to state 120
-- On SET shift to state 123
-- On QUERY shift to state 128
-- On PREDICATE shift to state 140
-- On NOUNIF shift to state 150
-- On NOT shift to state 158
-- On NAME shift to state 161
-- On FUN shift to state 166
-- On EQUATION shift to state 175
-- On ELIMTRUE shift to state 182
-- On CONST shift to state 185
-- On CLAUSES shift to state 191
-- On tall shift to state 247
## Reductions:

State 247:
## Known stack suffix:
## PREDICATE IDENT options DOT tall
## LR(1) items:
tall -> PREDICATE IDENT options DOT tall . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, reduce production tall -> PREDICATE IDENT options DOT tall

State 248:
## Known stack suffix:
## QUERY tfact DOT tall
## LR(1) items:
tall -> QUERY tfact DOT tall . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, reduce production tall -> QUERY tfact DOT tall

State 249:
## Known stack suffix:
## QUERY nevartype
## LR(1) items:
tall -> QUERY nevartype . SEMI tfact DOT tall [ # ]
## Transitions:
-- On SEMI shift to state 250
## Reductions:

State 250:
## Known stack suffix:
## QUERY nevartype SEMI
## LR(1) items:
tall -> QUERY nevartype SEMI . tfact DOT tall [ # ]
## Transitions:
-- On LPAREN shift to state 2
-- On IDENT shift to state 195
-- On tfact shift to state 251
-- On term shift to state 199
## Reductions:

State 251:
## Known stack suffix:
## QUERY nevartype SEMI tfact
## LR(1) items:
tall -> QUERY nevartype SEMI tfact . DOT tall [ # ]
## Transitions:
-- On DOT shift to state 252
## Reductions:

State 252:
## Known stack suffix:
## QUERY nevartype SEMI tfact DOT
## LR(1) items:
tall -> QUERY nevartype SEMI tfact DOT . tall [ # ]
## Transitions:
-- On TYPE shift to state 120
-- On SET shift to state 123
-- On QUERY shift to state 128
-- On PREDICATE shift to state 140
-- On NOUNIF shift to state 150
-- On NOT shift to state 158
-- On NAME shift to state 161
-- On FUN shift to state 166
-- On EQUATION shift to state 175
-- On ELIMTRUE shift to state 182
-- On CONST shift to state 185
-- On CLAUSES shift to state 191
-- On tall shift to state 253
## Reductions:

State 253:
## Known stack suffix:
## QUERY nevartype SEMI tfact DOT tall
## LR(1) items:
tall -> QUERY nevartype SEMI tfact DOT tall . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, reduce production tall -> QUERY nevartype SEMI tfact DOT tall

State 254:
## Known stack suffix:
## SET IDENT EQUAL INT DOT tall
## LR(1) items:
tall -> SET IDENT EQUAL INT DOT tall . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, reduce production tall -> SET IDENT EQUAL INT DOT tall

State 255:
## Known stack suffix:
## SET IDENT EQUAL IDENT
## LR(1) items:
tall -> SET IDENT EQUAL IDENT . DOT tall [ # ]
## Transitions:
-- On DOT shift to state 256
## Reductions:

State 256:
## Known stack suffix:
## SET IDENT EQUAL IDENT DOT
## LR(1) items:
tall -> SET IDENT EQUAL IDENT DOT . tall [ # ]
## Transitions:
-- On TYPE shift to state 120
-- On SET shift to state 123
-- On QUERY shift to state 128
-- On PREDICATE shift to state 140
-- On NOUNIF shift to state 150
-- On NOT shift to state 158
-- On NAME shift to state 161
-- On FUN shift to state 166
-- On EQUATION shift to state 175
-- On ELIMTRUE shift to state 182
-- On CONST shift to state 185
-- On CLAUSES shift to state 191
-- On tall shift to state 257
## Reductions:

State 257:
## Known stack suffix:
## SET IDENT EQUAL IDENT DOT tall
## LR(1) items:
tall -> SET IDENT EQUAL IDENT DOT tall . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, reduce production tall -> SET IDENT EQUAL IDENT DOT tall

State 258:
## Known stack suffix:
## TYPE IDENT DOT tall
## LR(1) items:
tall -> TYPE IDENT DOT tall . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, reduce production tall -> TYPE IDENT DOT tall

State 259:
## Known stack suffix:
## tall
## LR(1) items:
tall' -> tall . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, accept tall

