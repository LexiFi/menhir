State 0:
all' -> . all [ # ]
-- On WEAKSECRET shift to state 1
-- On TYPE shift to state 4
-- On TABLE shift to state 14
-- On SET shift to state 22
-- On REDUCTION shift to state 27
-- On QUERY shift to state 39
-- On PROOF shift to state 126
-- On PROBA shift to state 146
-- On PREDICATE shift to state 149
-- On PARAM shift to state 156
-- On NOUNIF shift to state 160
-- On NOT shift to state 229
-- On NONINTERF shift to state 234
-- On LETFUN shift to state 276
-- On LET shift to state 412
-- On IMPLEMENTATION shift to state 547
-- On FUN shift to state 594
-- On FREE shift to state 611
-- On EXPAND shift to state 617
-- On EVENT shift to state 623
-- On EQUATION shift to state 629
-- On ELIMTRUE shift to state 637
-- On DEFINE shift to state 641
-- On CONST shift to state 647
-- On CLAUSES shift to state 653
-- On CHANNEL shift to state 655
-- On lib shift to state 776
-- On all shift to state 784
-- On PROCESS reduce production lib -> 
-- On EQUIVALENCE reduce production lib -> 

State 1:
lib -> WEAKSECRET . IDENT DOT lib [ RBRACE PROCESS EQUIVALENCE ]
-- On IDENT shift to state 2

State 2:
lib -> WEAKSECRET IDENT . DOT lib [ RBRACE PROCESS EQUIVALENCE ]
-- On DOT shift to state 3

State 3:
lib -> WEAKSECRET IDENT DOT . lib [ RBRACE PROCESS EQUIVALENCE ]
-- On WEAKSECRET shift to state 1
-- On TYPE shift to state 4
-- On TABLE shift to state 14
-- On SET shift to state 22
-- On REDUCTION shift to state 27
-- On QUERY shift to state 39
-- On PROOF shift to state 126
-- On PROBA shift to state 146
-- On PREDICATE shift to state 149
-- On PARAM shift to state 156
-- On NOUNIF shift to state 160
-- On NOT shift to state 229
-- On NONINTERF shift to state 234
-- On LETFUN shift to state 276
-- On LET shift to state 412
-- On IMPLEMENTATION shift to state 547
-- On FUN shift to state 594
-- On FREE shift to state 611
-- On EXPAND shift to state 617
-- On EVENT shift to state 623
-- On EQUATION shift to state 629
-- On ELIMTRUE shift to state 637
-- On DEFINE shift to state 641
-- On CONST shift to state 647
-- On CLAUSES shift to state 653
-- On CHANNEL shift to state 655
-- On lib shift to state 775
-- On RBRACE reduce production lib -> 
-- On PROCESS reduce production lib -> 
-- On EQUIVALENCE reduce production lib -> 

State 4:
lib -> TYPE . IDENT options DOT lib [ RBRACE PROCESS EQUIVALENCE ]
-- On IDENT shift to state 5

State 5:
lib -> TYPE IDENT . options DOT lib [ RBRACE PROCESS EQUIVALENCE ]
-- On LBRACKET shift to state 6
-- On options shift to state 12
-- On DOT reduce production options -> 

State 6:
options -> LBRACKET . neidentseq RBRACKET [ SEMI DOT ]
-- On IDENT shift to state 7
-- On neidentseq shift to state 10

State 7:
neidentseq -> IDENT . COMMA neidentseq [ SEMI RBRACKET LBRACKET DOT COLON ]
neidentseq -> IDENT . [ SEMI RBRACKET LBRACKET DOT COLON ]
-- On COMMA shift to state 8
-- On SEMI reduce production neidentseq -> IDENT
-- On RBRACKET reduce production neidentseq -> IDENT
-- On LBRACKET reduce production neidentseq -> IDENT
-- On DOT reduce production neidentseq -> IDENT
-- On COLON reduce production neidentseq -> IDENT

State 8:
neidentseq -> IDENT COMMA . neidentseq [ SEMI RBRACKET LBRACKET DOT COLON ]
-- On IDENT shift to state 7
-- On neidentseq shift to state 9

State 9:
neidentseq -> IDENT COMMA neidentseq . [ SEMI RBRACKET LBRACKET DOT COLON ]
-- On SEMI reduce production neidentseq -> IDENT COMMA neidentseq
-- On RBRACKET reduce production neidentseq -> IDENT COMMA neidentseq
-- On LBRACKET reduce production neidentseq -> IDENT COMMA neidentseq
-- On DOT reduce production neidentseq -> IDENT COMMA neidentseq
-- On COLON reduce production neidentseq -> IDENT COMMA neidentseq

State 10:
options -> LBRACKET neidentseq . RBRACKET [ SEMI DOT ]
-- On RBRACKET shift to state 11

State 11:
options -> LBRACKET neidentseq RBRACKET . [ SEMI DOT ]
-- On SEMI reduce production options -> LBRACKET neidentseq RBRACKET
-- On DOT reduce production options -> LBRACKET neidentseq RBRACKET

State 12:
lib -> TYPE IDENT options . DOT lib [ RBRACE PROCESS EQUIVALENCE ]
-- On DOT shift to state 13

State 13:
lib -> TYPE IDENT options DOT . lib [ RBRACE PROCESS EQUIVALENCE ]
-- On WEAKSECRET shift to state 1
-- On TYPE shift to state 4
-- On TABLE shift to state 14
-- On SET shift to state 22
-- On REDUCTION shift to state 27
-- On QUERY shift to state 39
-- On PROOF shift to state 126
-- On PROBA shift to state 146
-- On PREDICATE shift to state 149
-- On PARAM shift to state 156
-- On NOUNIF shift to state 160
-- On NOT shift to state 229
-- On NONINTERF shift to state 234
-- On LETFUN shift to state 276
-- On LET shift to state 412
-- On IMPLEMENTATION shift to state 547
-- On FUN shift to state 594
-- On FREE shift to state 611
-- On EXPAND shift to state 617
-- On EVENT shift to state 623
-- On EQUATION shift to state 629
-- On ELIMTRUE shift to state 637
-- On DEFINE shift to state 641
-- On CONST shift to state 647
-- On CLAUSES shift to state 653
-- On CHANNEL shift to state 655
-- On lib shift to state 774
-- On RBRACE reduce production lib -> 
-- On PROCESS reduce production lib -> 
-- On EQUIVALENCE reduce production lib -> 

State 14:
lib -> TABLE . IDENT LPAREN typeidseq RPAREN DOT lib [ RBRACE PROCESS EQUIVALENCE ]
-- On IDENT shift to state 15

State 15:
lib -> TABLE IDENT . LPAREN typeidseq RPAREN DOT lib [ RBRACE PROCESS EQUIVALENCE ]
-- On LPAREN shift to state 16

State 16:
lib -> TABLE IDENT LPAREN . typeidseq RPAREN DOT lib [ RBRACE PROCESS EQUIVALENCE ]
-- On IDENT shift to state 17
-- On CHANNEL shift to state 18
-- On typeidseq shift to state 19
-- On typeid shift to state 676
-- On netypeidseq shift to state 679
-- On RPAREN reduce production typeidseq -> 

State 17:
typeid -> IDENT . [ YIELD SUCHTHAT SEMI RPAREN REPL REDUCTION PHASE OUT ORTEXT NEW LPAREN LET LEFTARROW LBRACKET INT INSERT IN IF IDENT GET FOREACH EVENT EQUAL EOF ELSE DOT COMMA BARRIER BAR ]
-- On YIELD reduce production typeid -> IDENT
-- On SUCHTHAT reduce production typeid -> IDENT
-- On SEMI reduce production typeid -> IDENT
-- On RPAREN reduce production typeid -> IDENT
-- On REPL reduce production typeid -> IDENT
-- On REDUCTION reduce production typeid -> IDENT
-- On PHASE reduce production typeid -> IDENT
-- On OUT reduce production typeid -> IDENT
-- On ORTEXT reduce production typeid -> IDENT
-- On NEW reduce production typeid -> IDENT
-- On LPAREN reduce production typeid -> IDENT
-- On LET reduce production typeid -> IDENT
-- On LEFTARROW reduce production typeid -> IDENT
-- On LBRACKET reduce production typeid -> IDENT
-- On INT reduce production typeid -> IDENT
-- On INSERT reduce production typeid -> IDENT
-- On IN reduce production typeid -> IDENT
-- On IF reduce production typeid -> IDENT
-- On IDENT reduce production typeid -> IDENT
-- On GET reduce production typeid -> IDENT
-- On FOREACH reduce production typeid -> IDENT
-- On EVENT reduce production typeid -> IDENT
-- On EQUAL reduce production typeid -> IDENT
-- On EOF reduce production typeid -> IDENT
-- On ELSE reduce production typeid -> IDENT
-- On DOT reduce production typeid -> IDENT
-- On COMMA reduce production typeid -> IDENT
-- On BARRIER reduce production typeid -> IDENT
-- On BAR reduce production typeid -> IDENT

State 18:
typeid -> CHANNEL . [ YIELD SUCHTHAT SEMI RPAREN REPL REDUCTION PHASE OUT ORTEXT NEW LPAREN LET LEFTARROW LBRACKET INT INSERT IN IF IDENT GET FOREACH EVENT EQUAL EOF ELSE DOT COMMA BARRIER BAR ]
-- On YIELD reduce production typeid -> CHANNEL
-- On SUCHTHAT reduce production typeid -> CHANNEL
-- On SEMI reduce production typeid -> CHANNEL
-- On RPAREN reduce production typeid -> CHANNEL
-- On REPL reduce production typeid -> CHANNEL
-- On REDUCTION reduce production typeid -> CHANNEL
-- On PHASE reduce production typeid -> CHANNEL
-- On OUT reduce production typeid -> CHANNEL
-- On ORTEXT reduce production typeid -> CHANNEL
-- On NEW reduce production typeid -> CHANNEL
-- On LPAREN reduce production typeid -> CHANNEL
-- On LET reduce production typeid -> CHANNEL
-- On LEFTARROW reduce production typeid -> CHANNEL
-- On LBRACKET reduce production typeid -> CHANNEL
-- On INT reduce production typeid -> CHANNEL
-- On INSERT reduce production typeid -> CHANNEL
-- On IN reduce production typeid -> CHANNEL
-- On IF reduce production typeid -> CHANNEL
-- On IDENT reduce production typeid -> CHANNEL
-- On GET reduce production typeid -> CHANNEL
-- On FOREACH reduce production typeid -> CHANNEL
-- On EVENT reduce production typeid -> CHANNEL
-- On EQUAL reduce production typeid -> CHANNEL
-- On EOF reduce production typeid -> CHANNEL
-- On ELSE reduce production typeid -> CHANNEL
-- On DOT reduce production typeid -> CHANNEL
-- On COMMA reduce production typeid -> CHANNEL
-- On BARRIER reduce production typeid -> CHANNEL
-- On BAR reduce production typeid -> CHANNEL

State 19:
lib -> TABLE IDENT LPAREN typeidseq . RPAREN DOT lib [ RBRACE PROCESS EQUIVALENCE ]
-- On RPAREN shift to state 20

State 20:
lib -> TABLE IDENT LPAREN typeidseq RPAREN . DOT lib [ RBRACE PROCESS EQUIVALENCE ]
-- On DOT shift to state 21

State 21:
lib -> TABLE IDENT LPAREN typeidseq RPAREN DOT . lib [ RBRACE PROCESS EQUIVALENCE ]
-- On WEAKSECRET shift to state 1
-- On TYPE shift to state 4
-- On TABLE shift to state 14
-- On SET shift to state 22
-- On REDUCTION shift to state 27
-- On QUERY shift to state 39
-- On PROOF shift to state 126
-- On PROBA shift to state 146
-- On PREDICATE shift to state 149
-- On PARAM shift to state 156
-- On NOUNIF shift to state 160
-- On NOT shift to state 229
-- On NONINTERF shift to state 234
-- On LETFUN shift to state 276
-- On LET shift to state 412
-- On IMPLEMENTATION shift to state 547
-- On FUN shift to state 594
-- On FREE shift to state 611
-- On EXPAND shift to state 617
-- On EVENT shift to state 623
-- On EQUATION shift to state 629
-- On ELIMTRUE shift to state 637
-- On DEFINE shift to state 641
-- On CONST shift to state 647
-- On CLAUSES shift to state 653
-- On CHANNEL shift to state 655
-- On lib shift to state 773
-- On RBRACE reduce production lib -> 
-- On PROCESS reduce production lib -> 
-- On EQUIVALENCE reduce production lib -> 

State 22:
lib -> SET . IDENT EQUAL IDENT DOT lib [ RBRACE PROCESS EQUIVALENCE ]
lib -> SET . IDENT EQUAL STRING DOT lib [ RBRACE PROCESS EQUIVALENCE ]
lib -> SET . IDENT EQUAL INT DOT lib [ RBRACE PROCESS EQUIVALENCE ]
-- On IDENT shift to state 23

State 23:
lib -> SET IDENT . EQUAL IDENT DOT lib [ RBRACE PROCESS EQUIVALENCE ]
lib -> SET IDENT . EQUAL STRING DOT lib [ RBRACE PROCESS EQUIVALENCE ]
lib -> SET IDENT . EQUAL INT DOT lib [ RBRACE PROCESS EQUIVALENCE ]
-- On EQUAL shift to state 24

State 24:
lib -> SET IDENT EQUAL . IDENT DOT lib [ RBRACE PROCESS EQUIVALENCE ]
lib -> SET IDENT EQUAL . STRING DOT lib [ RBRACE PROCESS EQUIVALENCE ]
lib -> SET IDENT EQUAL . INT DOT lib [ RBRACE PROCESS EQUIVALENCE ]
-- On STRING shift to state 25
-- On INT shift to state 767
-- On IDENT shift to state 770

State 25:
lib -> SET IDENT EQUAL STRING . DOT lib [ RBRACE PROCESS EQUIVALENCE ]
-- On DOT shift to state 26

State 26:
lib -> SET IDENT EQUAL STRING DOT . lib [ RBRACE PROCESS EQUIVALENCE ]
-- On WEAKSECRET shift to state 1
-- On TYPE shift to state 4
-- On TABLE shift to state 14
-- On SET shift to state 22
-- On REDUCTION shift to state 27
-- On QUERY shift to state 39
-- On PROOF shift to state 126
-- On PROBA shift to state 146
-- On PREDICATE shift to state 149
-- On PARAM shift to state 156
-- On NOUNIF shift to state 160
-- On NOT shift to state 229
-- On NONINTERF shift to state 234
-- On LETFUN shift to state 276
-- On LET shift to state 412
-- On IMPLEMENTATION shift to state 547
-- On FUN shift to state 594
-- On FREE shift to state 611
-- On EXPAND shift to state 617
-- On EVENT shift to state 623
-- On EQUATION shift to state 629
-- On ELIMTRUE shift to state 637
-- On DEFINE shift to state 641
-- On CONST shift to state 647
-- On CLAUSES shift to state 653
-- On CHANNEL shift to state 655
-- On lib shift to state 766
-- On RBRACE reduce production lib -> 
-- On PROCESS reduce production lib -> 
-- On EQUIVALENCE reduce production lib -> 

State 27:
lib -> REDUCTION . treduc options DOT lib [ RBRACE PROCESS EQUIVALENCE ]
-- On FORALL shift to state 28
-- On treduc shift to state 36
-- On forallvartype shift to state 760
-- On PROJECTION reduce production forallvartype -> 
-- On NOT reduce production forallvartype -> 
-- On LPAREN reduce production forallvartype -> 
-- On IDENT reduce production forallvartype -> 
-- On FAIL reduce production forallvartype -> 
-- On CHOICE reduce production forallvartype -> 

State 28:
forallvartype -> FORALL . nevartype SEMI [ PROJECTION NOT LPAREN IDENT FAIL CHOICE ]
-- On IDENT shift to state 29
-- On nevartype shift to state 34

State 29:
nevartype -> IDENT . COLON typeid COMMA nevartype [ SUCHTHAT SEMI ]
nevartype -> IDENT . COLON typeid [ SUCHTHAT SEMI ]
-- On COLON shift to state 30

State 30:
nevartype -> IDENT COLON . typeid COMMA nevartype [ SUCHTHAT SEMI ]
nevartype -> IDENT COLON . typeid [ SUCHTHAT SEMI ]
-- On IDENT shift to state 17
-- On CHANNEL shift to state 18
-- On typeid shift to state 31

State 31:
nevartype -> IDENT COLON typeid . COMMA nevartype [ SUCHTHAT SEMI ]
nevartype -> IDENT COLON typeid . [ SUCHTHAT SEMI ]
-- On COMMA shift to state 32
-- On SUCHTHAT reduce production nevartype -> IDENT COLON typeid
-- On SEMI reduce production nevartype -> IDENT COLON typeid

State 32:
nevartype -> IDENT COLON typeid COMMA . nevartype [ SUCHTHAT SEMI ]
-- On IDENT shift to state 29
-- On nevartype shift to state 33

State 33:
nevartype -> IDENT COLON typeid COMMA nevartype . [ SUCHTHAT SEMI ]
-- On SUCHTHAT reduce production nevartype -> IDENT COLON typeid COMMA nevartype
-- On SEMI reduce production nevartype -> IDENT COLON typeid COMMA nevartype

State 34:
forallvartype -> FORALL nevartype . SEMI [ PROJECTION NOT LPAREN IDENT FAIL CHOICE ]
-- On SEMI shift to state 35

State 35:
forallvartype -> FORALL nevartype SEMI . [ PROJECTION NOT LPAREN IDENT FAIL CHOICE ]
-- On PROJECTION reduce production forallvartype -> FORALL nevartype SEMI
-- On NOT reduce production forallvartype -> FORALL nevartype SEMI
-- On LPAREN reduce production forallvartype -> FORALL nevartype SEMI
-- On IDENT reduce production forallvartype -> FORALL nevartype SEMI
-- On FAIL reduce production forallvartype -> FORALL nevartype SEMI
-- On CHOICE reduce production forallvartype -> FORALL nevartype SEMI

State 36:
lib -> REDUCTION treduc . options DOT lib [ RBRACE PROCESS EQUIVALENCE ]
-- On LBRACKET shift to state 6
-- On options shift to state 37
-- On DOT reduce production options -> 

State 37:
lib -> REDUCTION treduc options . DOT lib [ RBRACE PROCESS EQUIVALENCE ]
-- On DOT shift to state 38

State 38:
lib -> REDUCTION treduc options DOT . lib [ RBRACE PROCESS EQUIVALENCE ]
-- On WEAKSECRET shift to state 1
-- On TYPE shift to state 4
-- On TABLE shift to state 14
-- On SET shift to state 22
-- On REDUCTION shift to state 27
-- On QUERY shift to state 39
-- On PROOF shift to state 126
-- On PROBA shift to state 146
-- On PREDICATE shift to state 149
-- On PARAM shift to state 156
-- On NOUNIF shift to state 160
-- On NOT shift to state 229
-- On NONINTERF shift to state 234
-- On LETFUN shift to state 276
-- On LET shift to state 412
-- On IMPLEMENTATION shift to state 547
-- On FUN shift to state 594
-- On FREE shift to state 611
-- On EXPAND shift to state 617
-- On EVENT shift to state 623
-- On EQUATION shift to state 629
-- On ELIMTRUE shift to state 637
-- On DEFINE shift to state 641
-- On CONST shift to state 647
-- On CLAUSES shift to state 653
-- On CHANNEL shift to state 655
-- On lib shift to state 759
-- On RBRACE reduce production lib -> 
-- On PROCESS reduce production lib -> 
-- On EQUIVALENCE reduce production lib -> 

State 39:
lib -> QUERY . nevartype SEMI tqueryseq DOT lib [ RBRACE PROCESS EQUIVALENCE ]
lib -> QUERY . tqueryseq DOT lib [ RBRACE PROCESS EQUIVALENCE ]
-- On TABLE shift to state 40
-- On SECRET shift to state 110
-- On PUTBEGIN shift to state 116
-- On NOT shift to state 42
-- On NEW shift to state 44
-- On LPAREN shift to state 50
-- On LET shift to state 51
-- On INJEVENT shift to state 54
-- On IDENT shift to state 123
-- On EVENT shift to state 58
-- On CHOICE shift to state 60
-- On tqueryseq shift to state 124
-- On tquery shift to state 749
-- On nevartype shift to state 754
-- On gterm shift to state 752

State 40:
gterm -> TABLE . LPAREN gterm RPAREN PHASE INT [ WEDGE SEMI RPAREN RBRACKET PUBLICVARS OR IN EQUAL DOT DIFF COMMA BEFORE ]
gterm -> TABLE . LPAREN gterm RPAREN [ WEDGE SEMI RPAREN RBRACKET PUBLICVARS OR IN EQUAL DOT DIFF COMMA BEFORE ]
-- On LPAREN shift to state 41

State 41:
gterm -> TABLE LPAREN . gterm RPAREN PHASE INT [ WEDGE SEMI RPAREN RBRACKET PUBLICVARS OR IN EQUAL DOT DIFF COMMA BEFORE ]
gterm -> TABLE LPAREN . gterm RPAREN [ WEDGE SEMI RPAREN RBRACKET PUBLICVARS OR IN EQUAL DOT DIFF COMMA BEFORE ]
-- On TABLE shift to state 40
-- On NOT shift to state 42
-- On NEW shift to state 44
-- On LPAREN shift to state 50
-- On LET shift to state 51
-- On INJEVENT shift to state 54
-- On IDENT shift to state 56
-- On EVENT shift to state 58
-- On CHOICE shift to state 60
-- On gterm shift to state 106

State 42:
gterm -> NOT . LPAREN gterm RPAREN [ WEDGE SEMI RPAREN RBRACKET PUBLICVARS OR IN EQUAL DOT DIFF COMMA BEFORE ]
-- On LPAREN shift to state 43

State 43:
gterm -> NOT LPAREN . gterm RPAREN [ WEDGE SEMI RPAREN RBRACKET PUBLICVARS OR IN EQUAL DOT DIFF COMMA BEFORE ]
-- On TABLE shift to state 40
-- On NOT shift to state 42
-- On NEW shift to state 44
-- On LPAREN shift to state 50
-- On LET shift to state 51
-- On INJEVENT shift to state 54
-- On IDENT shift to state 56
-- On EVENT shift to state 58
-- On CHOICE shift to state 60
-- On gterm shift to state 104

State 44:
gterm -> NEW . IDENT LBRACKET bindingseq RBRACKET [ WEDGE SEMI RPAREN RBRACKET PUBLICVARS OR IN EQUAL DOT DIFF COMMA BEFORE ]
gterm -> NEW . IDENT [ WEDGE SEMI RPAREN RBRACKET PUBLICVARS OR IN EQUAL DOT DIFF COMMA BEFORE ]
-- On IDENT shift to state 45

State 45:
gterm -> NEW IDENT . LBRACKET bindingseq RBRACKET [ WEDGE SEMI RPAREN RBRACKET PUBLICVARS OR IN EQUAL DOT DIFF COMMA BEFORE ]
gterm -> NEW IDENT . [ WEDGE SEMI RPAREN RBRACKET PUBLICVARS OR IN EQUAL DOT DIFF COMMA BEFORE ]
-- On LBRACKET shift to state 46
-- On WEDGE reduce production gterm -> NEW IDENT
-- On SEMI reduce production gterm -> NEW IDENT
-- On RPAREN reduce production gterm -> NEW IDENT
-- On RBRACKET reduce production gterm -> NEW IDENT
-- On PUBLICVARS reduce production gterm -> NEW IDENT
-- On OR reduce production gterm -> NEW IDENT
-- On IN reduce production gterm -> NEW IDENT
-- On EQUAL reduce production gterm -> NEW IDENT
-- On DOT reduce production gterm -> NEW IDENT
-- On DIFF reduce production gterm -> NEW IDENT
-- On COMMA reduce production gterm -> NEW IDENT
-- On BEFORE reduce production gterm -> NEW IDENT

State 46:
gterm -> NEW IDENT LBRACKET . bindingseq RBRACKET [ WEDGE SEMI RPAREN RBRACKET PUBLICVARS OR IN EQUAL DOT DIFF COMMA BEFORE ]
-- On REPL shift to state 47
-- On IDENT shift to state 95
-- On nesbindingseq shift to state 101
-- On bindingseq shift to state 102
-- On RBRACKET reduce production bindingseq -> 

State 47:
nesbindingseq -> REPL . INT EQUAL gterm SEMI nesbindingseq [ RBRACKET ]
nesbindingseq -> REPL . INT EQUAL gterm [ RBRACKET ]
-- On INT shift to state 48

State 48:
nesbindingseq -> REPL INT . EQUAL gterm SEMI nesbindingseq [ RBRACKET ]
nesbindingseq -> REPL INT . EQUAL gterm [ RBRACKET ]
-- On EQUAL shift to state 49

State 49:
nesbindingseq -> REPL INT EQUAL . gterm SEMI nesbindingseq [ RBRACKET ]
nesbindingseq -> REPL INT EQUAL . gterm [ RBRACKET ]
-- On TABLE shift to state 40
-- On NOT shift to state 42
-- On NEW shift to state 44
-- On LPAREN shift to state 50
-- On LET shift to state 51
-- On INJEVENT shift to state 54
-- On IDENT shift to state 56
-- On EVENT shift to state 58
-- On CHOICE shift to state 60
-- On gterm shift to state 93

State 50:
gterm -> LPAREN . gtermseq RPAREN [ WEDGE SEMI RPAREN RBRACKET PUBLICVARS OR IN EQUAL DOT DIFF COMMA BEFORE ]
-- On TABLE shift to state 40
-- On NOT shift to state 42
-- On NEW shift to state 44
-- On LPAREN shift to state 50
-- On LET shift to state 51
-- On INJEVENT shift to state 54
-- On IDENT shift to state 56
-- On EVENT shift to state 58
-- On CHOICE shift to state 60
-- On negtermseq shift to state 76
-- On gtermseq shift to state 91
-- On gterm shift to state 79
-- On RPAREN reduce production gtermseq -> 

State 51:
gterm -> LET . IDENT EQUAL gterm IN gterm [ WEDGE SEMI RPAREN RBRACKET PUBLICVARS OR IN EQUAL DOT DIFF COMMA BEFORE ]
-- On IDENT shift to state 52

State 52:
gterm -> LET IDENT . EQUAL gterm IN gterm [ WEDGE SEMI RPAREN RBRACKET PUBLICVARS OR IN EQUAL DOT DIFF COMMA BEFORE ]
-- On EQUAL shift to state 53

State 53:
gterm -> LET IDENT EQUAL . gterm IN gterm [ WEDGE SEMI RPAREN RBRACKET PUBLICVARS OR IN EQUAL DOT DIFF COMMA BEFORE ]
-- On TABLE shift to state 40
-- On NOT shift to state 42
-- On NEW shift to state 44
-- On LPAREN shift to state 50
-- On LET shift to state 51
-- On INJEVENT shift to state 54
-- On IDENT shift to state 56
-- On EVENT shift to state 58
-- On CHOICE shift to state 60
-- On gterm shift to state 88

State 54:
gterm -> INJEVENT . LPAREN gtermseq RPAREN [ WEDGE SEMI RPAREN RBRACKET PUBLICVARS OR IN EQUAL DOT DIFF COMMA BEFORE ]
-- On LPAREN shift to state 55

State 55:
gterm -> INJEVENT LPAREN . gtermseq RPAREN [ WEDGE SEMI RPAREN RBRACKET PUBLICVARS OR IN EQUAL DOT DIFF COMMA BEFORE ]
-- On TABLE shift to state 40
-- On NOT shift to state 42
-- On NEW shift to state 44
-- On LPAREN shift to state 50
-- On LET shift to state 51
-- On INJEVENT shift to state 54
-- On IDENT shift to state 56
-- On EVENT shift to state 58
-- On CHOICE shift to state 60
-- On negtermseq shift to state 76
-- On gtermseq shift to state 86
-- On gterm shift to state 79
-- On RPAREN reduce production gtermseq -> 

State 56:
gterm -> IDENT . LPAREN gtermseq RPAREN [ WEDGE SEMI RPAREN RBRACKET PUBLICVARS OR IN EQUAL DOT DIFF COMMA BEFORE ]
gterm -> IDENT . [ WEDGE SEMI RPAREN RBRACKET PUBLICVARS OR IN EQUAL DOT DIFF COMMA BEFORE ]
gterm -> IDENT . LPAREN gtermseq RPAREN PHASE INT [ WEDGE SEMI RPAREN RBRACKET PUBLICVARS OR IN EQUAL DOT DIFF COMMA BEFORE ]
-- On LPAREN shift to state 57
-- On WEDGE reduce production gterm -> IDENT
-- On SEMI reduce production gterm -> IDENT
-- On RPAREN reduce production gterm -> IDENT
-- On RBRACKET reduce production gterm -> IDENT
-- On PUBLICVARS reduce production gterm -> IDENT
-- On OR reduce production gterm -> IDENT
-- On IN reduce production gterm -> IDENT
-- On EQUAL reduce production gterm -> IDENT
-- On DOT reduce production gterm -> IDENT
-- On DIFF reduce production gterm -> IDENT
-- On COMMA reduce production gterm -> IDENT
-- On BEFORE reduce production gterm -> IDENT

State 57:
gterm -> IDENT LPAREN . gtermseq RPAREN [ WEDGE SEMI RPAREN RBRACKET PUBLICVARS OR IN EQUAL DOT DIFF COMMA BEFORE ]
gterm -> IDENT LPAREN . gtermseq RPAREN PHASE INT [ WEDGE SEMI RPAREN RBRACKET PUBLICVARS OR IN EQUAL DOT DIFF COMMA BEFORE ]
-- On TABLE shift to state 40
-- On NOT shift to state 42
-- On NEW shift to state 44
-- On LPAREN shift to state 50
-- On LET shift to state 51
-- On INJEVENT shift to state 54
-- On IDENT shift to state 56
-- On EVENT shift to state 58
-- On CHOICE shift to state 60
-- On negtermseq shift to state 76
-- On gtermseq shift to state 82
-- On gterm shift to state 79
-- On RPAREN reduce production gtermseq -> 

State 58:
gterm -> EVENT . LPAREN gtermseq RPAREN [ WEDGE SEMI RPAREN RBRACKET PUBLICVARS OR IN EQUAL DOT DIFF COMMA BEFORE ]
-- On LPAREN shift to state 59

State 59:
gterm -> EVENT LPAREN . gtermseq RPAREN [ WEDGE SEMI RPAREN RBRACKET PUBLICVARS OR IN EQUAL DOT DIFF COMMA BEFORE ]
-- On TABLE shift to state 40
-- On NOT shift to state 42
-- On NEW shift to state 44
-- On LPAREN shift to state 50
-- On LET shift to state 51
-- On INJEVENT shift to state 54
-- On IDENT shift to state 56
-- On EVENT shift to state 58
-- On CHOICE shift to state 60
-- On negtermseq shift to state 76
-- On gtermseq shift to state 77
-- On gterm shift to state 79
-- On RPAREN reduce production gtermseq -> 

State 60:
gterm -> CHOICE . LBRACKET gterm COMMA gterm RBRACKET [ WEDGE SEMI RPAREN RBRACKET PUBLICVARS OR IN EQUAL DOT DIFF COMMA BEFORE ]
-- On LBRACKET shift to state 61

State 61:
gterm -> CHOICE LBRACKET . gterm COMMA gterm RBRACKET [ WEDGE SEMI RPAREN RBRACKET PUBLICVARS OR IN EQUAL DOT DIFF COMMA BEFORE ]
-- On TABLE shift to state 40
-- On NOT shift to state 42
-- On NEW shift to state 44
-- On LPAREN shift to state 50
-- On LET shift to state 51
-- On INJEVENT shift to state 54
-- On IDENT shift to state 56
-- On EVENT shift to state 58
-- On CHOICE shift to state 60
-- On gterm shift to state 62

State 62:
gterm -> gterm . EQUAL gterm [ WEDGE OR EQUAL DIFF COMMA BEFORE ]
gterm -> gterm . DIFF gterm [ WEDGE OR EQUAL DIFF COMMA BEFORE ]
gterm -> gterm . OR gterm [ WEDGE OR EQUAL DIFF COMMA BEFORE ]
gterm -> gterm . WEDGE gterm [ WEDGE OR EQUAL DIFF COMMA BEFORE ]
gterm -> CHOICE LBRACKET gterm . COMMA gterm RBRACKET [ WEDGE SEMI RPAREN RBRACKET PUBLICVARS OR IN EQUAL DOT DIFF COMMA BEFORE ]
gterm -> gterm . BEFORE gterm [ WEDGE OR EQUAL DIFF COMMA BEFORE ]
-- On WEDGE shift to state 63
-- On OR shift to state 69
-- On EQUAL shift to state 65
-- On DIFF shift to state 67
-- On COMMA shift to state 71
-- On BEFORE shift to state 74

State 63:
gterm -> gterm WEDGE . gterm [ WEDGE SEMI RPAREN RBRACKET PUBLICVARS OR IN EQUAL DOT DIFF COMMA BEFORE ]
-- On TABLE shift to state 40
-- On NOT shift to state 42
-- On NEW shift to state 44
-- On LPAREN shift to state 50
-- On LET shift to state 51
-- On INJEVENT shift to state 54
-- On IDENT shift to state 56
-- On EVENT shift to state 58
-- On CHOICE shift to state 60
-- On gterm shift to state 64

State 64:
gterm -> gterm . EQUAL gterm [ WEDGE SEMI RPAREN RBRACKET PUBLICVARS OR IN EQUAL DOT DIFF COMMA BEFORE ]
gterm -> gterm . DIFF gterm [ WEDGE SEMI RPAREN RBRACKET PUBLICVARS OR IN EQUAL DOT DIFF COMMA BEFORE ]
gterm -> gterm . OR gterm [ WEDGE SEMI RPAREN RBRACKET PUBLICVARS OR IN EQUAL DOT DIFF COMMA BEFORE ]
gterm -> gterm . WEDGE gterm [ WEDGE SEMI RPAREN RBRACKET PUBLICVARS OR IN EQUAL DOT DIFF COMMA BEFORE ]
gterm -> gterm WEDGE gterm . [ WEDGE SEMI RPAREN RBRACKET PUBLICVARS OR IN EQUAL DOT DIFF COMMA BEFORE ]
gterm -> gterm . BEFORE gterm [ WEDGE SEMI RPAREN RBRACKET PUBLICVARS OR IN EQUAL DOT DIFF COMMA BEFORE ]
-- On WEDGE shift to state 63
-- On EQUAL shift to state 65
-- On DIFF shift to state 67
-- On SEMI reduce production gterm -> gterm WEDGE gterm
-- On RPAREN reduce production gterm -> gterm WEDGE gterm
-- On RBRACKET reduce production gterm -> gterm WEDGE gterm
-- On PUBLICVARS reduce production gterm -> gterm WEDGE gterm
-- On OR reduce production gterm -> gterm WEDGE gterm
-- On IN reduce production gterm -> gterm WEDGE gterm
-- On DOT reduce production gterm -> gterm WEDGE gterm
-- On COMMA reduce production gterm -> gterm WEDGE gterm
-- On BEFORE reduce production gterm -> gterm WEDGE gterm

State 65:
gterm -> gterm EQUAL . gterm [ WEDGE SEMI RPAREN RBRACKET PUBLICVARS OR IN EQUAL DOT DIFF COMMA BEFORE ]
-- On TABLE shift to state 40
-- On NOT shift to state 42
-- On NEW shift to state 44
-- On LPAREN shift to state 50
-- On LET shift to state 51
-- On INJEVENT shift to state 54
-- On IDENT shift to state 56
-- On EVENT shift to state 58
-- On CHOICE shift to state 60
-- On gterm shift to state 66

State 66:
gterm -> gterm . EQUAL gterm [ WEDGE SEMI RPAREN RBRACKET PUBLICVARS OR IN EQUAL DOT DIFF COMMA BEFORE ]
gterm -> gterm EQUAL gterm . [ WEDGE SEMI RPAREN RBRACKET PUBLICVARS OR IN EQUAL DOT DIFF COMMA BEFORE ]
gterm -> gterm . DIFF gterm [ WEDGE SEMI RPAREN RBRACKET PUBLICVARS OR IN EQUAL DOT DIFF COMMA BEFORE ]
gterm -> gterm . OR gterm [ WEDGE SEMI RPAREN RBRACKET PUBLICVARS OR IN EQUAL DOT DIFF COMMA BEFORE ]
gterm -> gterm . WEDGE gterm [ WEDGE SEMI RPAREN RBRACKET PUBLICVARS OR IN EQUAL DOT DIFF COMMA BEFORE ]
gterm -> gterm . BEFORE gterm [ WEDGE SEMI RPAREN RBRACKET PUBLICVARS OR IN EQUAL DOT DIFF COMMA BEFORE ]
-- On DIFF shift to state 67
-- On WEDGE reduce production gterm -> gterm EQUAL gterm
-- On SEMI reduce production gterm -> gterm EQUAL gterm
-- On RPAREN reduce production gterm -> gterm EQUAL gterm
-- On RBRACKET reduce production gterm -> gterm EQUAL gterm
-- On PUBLICVARS reduce production gterm -> gterm EQUAL gterm
-- On OR reduce production gterm -> gterm EQUAL gterm
-- On IN reduce production gterm -> gterm EQUAL gterm
-- On DOT reduce production gterm -> gterm EQUAL gterm
-- On COMMA reduce production gterm -> gterm EQUAL gterm
-- On BEFORE reduce production gterm -> gterm EQUAL gterm

State 67:
gterm -> gterm DIFF . gterm [ WEDGE SEMI RPAREN RBRACKET PUBLICVARS OR IN EQUAL DOT DIFF COMMA BEFORE ]
-- On TABLE shift to state 40
-- On NOT shift to state 42
-- On NEW shift to state 44
-- On LPAREN shift to state 50
-- On LET shift to state 51
-- On INJEVENT shift to state 54
-- On IDENT shift to state 56
-- On EVENT shift to state 58
-- On CHOICE shift to state 60
-- On gterm shift to state 68

State 68:
gterm -> gterm . EQUAL gterm [ WEDGE SEMI RPAREN RBRACKET PUBLICVARS OR IN EQUAL DOT DIFF COMMA BEFORE ]
gterm -> gterm . DIFF gterm [ WEDGE SEMI RPAREN RBRACKET PUBLICVARS OR IN EQUAL DOT DIFF COMMA BEFORE ]
gterm -> gterm DIFF gterm . [ WEDGE SEMI RPAREN RBRACKET PUBLICVARS OR IN EQUAL DOT DIFF COMMA BEFORE ]
gterm -> gterm . OR gterm [ WEDGE SEMI RPAREN RBRACKET PUBLICVARS OR IN EQUAL DOT DIFF COMMA BEFORE ]
gterm -> gterm . WEDGE gterm [ WEDGE SEMI RPAREN RBRACKET PUBLICVARS OR IN EQUAL DOT DIFF COMMA BEFORE ]
gterm -> gterm . BEFORE gterm [ WEDGE SEMI RPAREN RBRACKET PUBLICVARS OR IN EQUAL DOT DIFF COMMA BEFORE ]
-- On WEDGE reduce production gterm -> gterm DIFF gterm
-- On SEMI reduce production gterm -> gterm DIFF gterm
-- On RPAREN reduce production gterm -> gterm DIFF gterm
-- On RBRACKET reduce production gterm -> gterm DIFF gterm
-- On PUBLICVARS reduce production gterm -> gterm DIFF gterm
-- On OR reduce production gterm -> gterm DIFF gterm
-- On IN reduce production gterm -> gterm DIFF gterm
-- On EQUAL reduce production gterm -> gterm DIFF gterm
-- On DOT reduce production gterm -> gterm DIFF gterm
-- On COMMA reduce production gterm -> gterm DIFF gterm
-- On BEFORE reduce production gterm -> gterm DIFF gterm

State 69:
gterm -> gterm OR . gterm [ WEDGE SEMI RPAREN RBRACKET PUBLICVARS OR IN EQUAL DOT DIFF COMMA BEFORE ]
-- On TABLE shift to state 40
-- On NOT shift to state 42
-- On NEW shift to state 44
-- On LPAREN shift to state 50
-- On LET shift to state 51
-- On INJEVENT shift to state 54
-- On IDENT shift to state 56
-- On EVENT shift to state 58
-- On CHOICE shift to state 60
-- On gterm shift to state 70

State 70:
gterm -> gterm . EQUAL gterm [ WEDGE SEMI RPAREN RBRACKET PUBLICVARS OR IN EQUAL DOT DIFF COMMA BEFORE ]
gterm -> gterm . DIFF gterm [ WEDGE SEMI RPAREN RBRACKET PUBLICVARS OR IN EQUAL DOT DIFF COMMA BEFORE ]
gterm -> gterm . OR gterm [ WEDGE SEMI RPAREN RBRACKET PUBLICVARS OR IN EQUAL DOT DIFF COMMA BEFORE ]
gterm -> gterm OR gterm . [ WEDGE SEMI RPAREN RBRACKET PUBLICVARS OR IN EQUAL DOT DIFF COMMA BEFORE ]
gterm -> gterm . WEDGE gterm [ WEDGE SEMI RPAREN RBRACKET PUBLICVARS OR IN EQUAL DOT DIFF COMMA BEFORE ]
gterm -> gterm . BEFORE gterm [ WEDGE SEMI RPAREN RBRACKET PUBLICVARS OR IN EQUAL DOT DIFF COMMA BEFORE ]
-- On WEDGE shift to state 63
-- On OR shift to state 69
-- On EQUAL shift to state 65
-- On DIFF shift to state 67
-- On SEMI reduce production gterm -> gterm OR gterm
-- On RPAREN reduce production gterm -> gterm OR gterm
-- On RBRACKET reduce production gterm -> gterm OR gterm
-- On PUBLICVARS reduce production gterm -> gterm OR gterm
-- On IN reduce production gterm -> gterm OR gterm
-- On DOT reduce production gterm -> gterm OR gterm
-- On COMMA reduce production gterm -> gterm OR gterm
-- On BEFORE reduce production gterm -> gterm OR gterm

State 71:
gterm -> CHOICE LBRACKET gterm COMMA . gterm RBRACKET [ WEDGE SEMI RPAREN RBRACKET PUBLICVARS OR IN EQUAL DOT DIFF COMMA BEFORE ]
-- On TABLE shift to state 40
-- On NOT shift to state 42
-- On NEW shift to state 44
-- On LPAREN shift to state 50
-- On LET shift to state 51
-- On INJEVENT shift to state 54
-- On IDENT shift to state 56
-- On EVENT shift to state 58
-- On CHOICE shift to state 60
-- On gterm shift to state 72

State 72:
gterm -> gterm . EQUAL gterm [ WEDGE RBRACKET OR EQUAL DIFF BEFORE ]
gterm -> gterm . DIFF gterm [ WEDGE RBRACKET OR EQUAL DIFF BEFORE ]
gterm -> gterm . OR gterm [ WEDGE RBRACKET OR EQUAL DIFF BEFORE ]
gterm -> gterm . WEDGE gterm [ WEDGE RBRACKET OR EQUAL DIFF BEFORE ]
gterm -> CHOICE LBRACKET gterm COMMA gterm . RBRACKET [ WEDGE SEMI RPAREN RBRACKET PUBLICVARS OR IN EQUAL DOT DIFF COMMA BEFORE ]
gterm -> gterm . BEFORE gterm [ WEDGE RBRACKET OR EQUAL DIFF BEFORE ]
-- On WEDGE shift to state 63
-- On RBRACKET shift to state 73
-- On OR shift to state 69
-- On EQUAL shift to state 65
-- On DIFF shift to state 67
-- On BEFORE shift to state 74

State 73:
gterm -> CHOICE LBRACKET gterm COMMA gterm RBRACKET . [ WEDGE SEMI RPAREN RBRACKET PUBLICVARS OR IN EQUAL DOT DIFF COMMA BEFORE ]
-- On WEDGE reduce production gterm -> CHOICE LBRACKET gterm COMMA gterm RBRACKET
-- On SEMI reduce production gterm -> CHOICE LBRACKET gterm COMMA gterm RBRACKET
-- On RPAREN reduce production gterm -> CHOICE LBRACKET gterm COMMA gterm RBRACKET
-- On RBRACKET reduce production gterm -> CHOICE LBRACKET gterm COMMA gterm RBRACKET
-- On PUBLICVARS reduce production gterm -> CHOICE LBRACKET gterm COMMA gterm RBRACKET
-- On OR reduce production gterm -> CHOICE LBRACKET gterm COMMA gterm RBRACKET
-- On IN reduce production gterm -> CHOICE LBRACKET gterm COMMA gterm RBRACKET
-- On EQUAL reduce production gterm -> CHOICE LBRACKET gterm COMMA gterm RBRACKET
-- On DOT reduce production gterm -> CHOICE LBRACKET gterm COMMA gterm RBRACKET
-- On DIFF reduce production gterm -> CHOICE LBRACKET gterm COMMA gterm RBRACKET
-- On COMMA reduce production gterm -> CHOICE LBRACKET gterm COMMA gterm RBRACKET
-- On BEFORE reduce production gterm -> CHOICE LBRACKET gterm COMMA gterm RBRACKET

State 74:
gterm -> gterm BEFORE . gterm [ WEDGE SEMI RPAREN RBRACKET PUBLICVARS OR IN EQUAL DOT DIFF COMMA BEFORE ]
-- On TABLE shift to state 40
-- On NOT shift to state 42
-- On NEW shift to state 44
-- On LPAREN shift to state 50
-- On LET shift to state 51
-- On INJEVENT shift to state 54
-- On IDENT shift to state 56
-- On EVENT shift to state 58
-- On CHOICE shift to state 60
-- On gterm shift to state 75

State 75:
gterm -> gterm . EQUAL gterm [ WEDGE SEMI RPAREN RBRACKET PUBLICVARS OR IN EQUAL DOT DIFF COMMA BEFORE ]
gterm -> gterm . DIFF gterm [ WEDGE SEMI RPAREN RBRACKET PUBLICVARS OR IN EQUAL DOT DIFF COMMA BEFORE ]
gterm -> gterm . OR gterm [ WEDGE SEMI RPAREN RBRACKET PUBLICVARS OR IN EQUAL DOT DIFF COMMA BEFORE ]
gterm -> gterm . WEDGE gterm [ WEDGE SEMI RPAREN RBRACKET PUBLICVARS OR IN EQUAL DOT DIFF COMMA BEFORE ]
gterm -> gterm . BEFORE gterm [ WEDGE SEMI RPAREN RBRACKET PUBLICVARS OR IN EQUAL DOT DIFF COMMA BEFORE ]
gterm -> gterm BEFORE gterm . [ WEDGE SEMI RPAREN RBRACKET PUBLICVARS OR IN EQUAL DOT DIFF COMMA BEFORE ]
-- On WEDGE shift to state 63
-- On OR shift to state 69
-- On EQUAL shift to state 65
-- On DIFF shift to state 67
-- On SEMI reduce production gterm -> gterm BEFORE gterm
-- On RPAREN reduce production gterm -> gterm BEFORE gterm
-- On RBRACKET reduce production gterm -> gterm BEFORE gterm
-- On PUBLICVARS reduce production gterm -> gterm BEFORE gterm
-- On IN reduce production gterm -> gterm BEFORE gterm
-- On DOT reduce production gterm -> gterm BEFORE gterm
-- On COMMA reduce production gterm -> gterm BEFORE gterm

State 76:
gtermseq -> negtermseq . [ RPAREN ]
-- On RPAREN reduce production gtermseq -> negtermseq

State 77:
gterm -> EVENT LPAREN gtermseq . RPAREN [ WEDGE SEMI RPAREN RBRACKET PUBLICVARS OR IN EQUAL DOT DIFF COMMA BEFORE ]
-- On RPAREN shift to state 78

State 78:
gterm -> EVENT LPAREN gtermseq RPAREN . [ WEDGE SEMI RPAREN RBRACKET PUBLICVARS OR IN EQUAL DOT DIFF COMMA BEFORE ]
-- On WEDGE reduce production gterm -> EVENT LPAREN gtermseq RPAREN
-- On SEMI reduce production gterm -> EVENT LPAREN gtermseq RPAREN
-- On RPAREN reduce production gterm -> EVENT LPAREN gtermseq RPAREN
-- On RBRACKET reduce production gterm -> EVENT LPAREN gtermseq RPAREN
-- On PUBLICVARS reduce production gterm -> EVENT LPAREN gtermseq RPAREN
-- On OR reduce production gterm -> EVENT LPAREN gtermseq RPAREN
-- On IN reduce production gterm -> EVENT LPAREN gtermseq RPAREN
-- On EQUAL reduce production gterm -> EVENT LPAREN gtermseq RPAREN
-- On DOT reduce production gterm -> EVENT LPAREN gtermseq RPAREN
-- On DIFF reduce production gterm -> EVENT LPAREN gtermseq RPAREN
-- On COMMA reduce production gterm -> EVENT LPAREN gtermseq RPAREN
-- On BEFORE reduce production gterm -> EVENT LPAREN gtermseq RPAREN

State 79:
gterm -> gterm . EQUAL gterm [ WEDGE RPAREN OR EQUAL DIFF COMMA BEFORE ]
gterm -> gterm . DIFF gterm [ WEDGE RPAREN OR EQUAL DIFF COMMA BEFORE ]
gterm -> gterm . OR gterm [ WEDGE RPAREN OR EQUAL DIFF COMMA BEFORE ]
gterm -> gterm . WEDGE gterm [ WEDGE RPAREN OR EQUAL DIFF COMMA BEFORE ]
gterm -> gterm . BEFORE gterm [ WEDGE RPAREN OR EQUAL DIFF COMMA BEFORE ]
negtermseq -> gterm . COMMA negtermseq [ RPAREN ]
negtermseq -> gterm . [ RPAREN ]
-- On WEDGE shift to state 63
-- On OR shift to state 69
-- On EQUAL shift to state 65
-- On DIFF shift to state 67
-- On COMMA shift to state 80
-- On BEFORE shift to state 74
-- On RPAREN reduce production negtermseq -> gterm

State 80:
negtermseq -> gterm COMMA . negtermseq [ RPAREN ]
-- On TABLE shift to state 40
-- On NOT shift to state 42
-- On NEW shift to state 44
-- On LPAREN shift to state 50
-- On LET shift to state 51
-- On INJEVENT shift to state 54
-- On IDENT shift to state 56
-- On EVENT shift to state 58
-- On CHOICE shift to state 60
-- On negtermseq shift to state 81
-- On gterm shift to state 79

State 81:
negtermseq -> gterm COMMA negtermseq . [ RPAREN ]
-- On RPAREN reduce production negtermseq -> gterm COMMA negtermseq

State 82:
gterm -> IDENT LPAREN gtermseq . RPAREN [ WEDGE SEMI RPAREN RBRACKET PUBLICVARS OR IN EQUAL DOT DIFF COMMA BEFORE ]
gterm -> IDENT LPAREN gtermseq . RPAREN PHASE INT [ WEDGE SEMI RPAREN RBRACKET PUBLICVARS OR IN EQUAL DOT DIFF COMMA BEFORE ]
-- On RPAREN shift to state 83

State 83:
gterm -> IDENT LPAREN gtermseq RPAREN . [ WEDGE SEMI RPAREN RBRACKET PUBLICVARS OR IN EQUAL DOT DIFF COMMA BEFORE ]
gterm -> IDENT LPAREN gtermseq RPAREN . PHASE INT [ WEDGE SEMI RPAREN RBRACKET PUBLICVARS OR IN EQUAL DOT DIFF COMMA BEFORE ]
-- On PHASE shift to state 84
-- On WEDGE reduce production gterm -> IDENT LPAREN gtermseq RPAREN
-- On SEMI reduce production gterm -> IDENT LPAREN gtermseq RPAREN
-- On RPAREN reduce production gterm -> IDENT LPAREN gtermseq RPAREN
-- On RBRACKET reduce production gterm -> IDENT LPAREN gtermseq RPAREN
-- On PUBLICVARS reduce production gterm -> IDENT LPAREN gtermseq RPAREN
-- On OR reduce production gterm -> IDENT LPAREN gtermseq RPAREN
-- On IN reduce production gterm -> IDENT LPAREN gtermseq RPAREN
-- On EQUAL reduce production gterm -> IDENT LPAREN gtermseq RPAREN
-- On DOT reduce production gterm -> IDENT LPAREN gtermseq RPAREN
-- On DIFF reduce production gterm -> IDENT LPAREN gtermseq RPAREN
-- On COMMA reduce production gterm -> IDENT LPAREN gtermseq RPAREN
-- On BEFORE reduce production gterm -> IDENT LPAREN gtermseq RPAREN

State 84:
gterm -> IDENT LPAREN gtermseq RPAREN PHASE . INT [ WEDGE SEMI RPAREN RBRACKET PUBLICVARS OR IN EQUAL DOT DIFF COMMA BEFORE ]
-- On INT shift to state 85

State 85:
gterm -> IDENT LPAREN gtermseq RPAREN PHASE INT . [ WEDGE SEMI RPAREN RBRACKET PUBLICVARS OR IN EQUAL DOT DIFF COMMA BEFORE ]
-- On WEDGE reduce production gterm -> IDENT LPAREN gtermseq RPAREN PHASE INT
-- On SEMI reduce production gterm -> IDENT LPAREN gtermseq RPAREN PHASE INT
-- On RPAREN reduce production gterm -> IDENT LPAREN gtermseq RPAREN PHASE INT
-- On RBRACKET reduce production gterm -> IDENT LPAREN gtermseq RPAREN PHASE INT
-- On PUBLICVARS reduce production gterm -> IDENT LPAREN gtermseq RPAREN PHASE INT
-- On OR reduce production gterm -> IDENT LPAREN gtermseq RPAREN PHASE INT
-- On IN reduce production gterm -> IDENT LPAREN gtermseq RPAREN PHASE INT
-- On EQUAL reduce production gterm -> IDENT LPAREN gtermseq RPAREN PHASE INT
-- On DOT reduce production gterm -> IDENT LPAREN gtermseq RPAREN PHASE INT
-- On DIFF reduce production gterm -> IDENT LPAREN gtermseq RPAREN PHASE INT
-- On COMMA reduce production gterm -> IDENT LPAREN gtermseq RPAREN PHASE INT
-- On BEFORE reduce production gterm -> IDENT LPAREN gtermseq RPAREN PHASE INT

State 86:
gterm -> INJEVENT LPAREN gtermseq . RPAREN [ WEDGE SEMI RPAREN RBRACKET PUBLICVARS OR IN EQUAL DOT DIFF COMMA BEFORE ]
-- On RPAREN shift to state 87

State 87:
gterm -> INJEVENT LPAREN gtermseq RPAREN . [ WEDGE SEMI RPAREN RBRACKET PUBLICVARS OR IN EQUAL DOT DIFF COMMA BEFORE ]
-- On WEDGE reduce production gterm -> INJEVENT LPAREN gtermseq RPAREN
-- On SEMI reduce production gterm -> INJEVENT LPAREN gtermseq RPAREN
-- On RPAREN reduce production gterm -> INJEVENT LPAREN gtermseq RPAREN
-- On RBRACKET reduce production gterm -> INJEVENT LPAREN gtermseq RPAREN
-- On PUBLICVARS reduce production gterm -> INJEVENT LPAREN gtermseq RPAREN
-- On OR reduce production gterm -> INJEVENT LPAREN gtermseq RPAREN
-- On IN reduce production gterm -> INJEVENT LPAREN gtermseq RPAREN
-- On EQUAL reduce production gterm -> INJEVENT LPAREN gtermseq RPAREN
-- On DOT reduce production gterm -> INJEVENT LPAREN gtermseq RPAREN
-- On DIFF reduce production gterm -> INJEVENT LPAREN gtermseq RPAREN
-- On COMMA reduce production gterm -> INJEVENT LPAREN gtermseq RPAREN
-- On BEFORE reduce production gterm -> INJEVENT LPAREN gtermseq RPAREN

State 88:
gterm -> gterm . EQUAL gterm [ WEDGE OR IN EQUAL DIFF BEFORE ]
gterm -> gterm . DIFF gterm [ WEDGE OR IN EQUAL DIFF BEFORE ]
gterm -> gterm . OR gterm [ WEDGE OR IN EQUAL DIFF BEFORE ]
gterm -> gterm . WEDGE gterm [ WEDGE OR IN EQUAL DIFF BEFORE ]
gterm -> gterm . BEFORE gterm [ WEDGE OR IN EQUAL DIFF BEFORE ]
gterm -> LET IDENT EQUAL gterm . IN gterm [ WEDGE SEMI RPAREN RBRACKET PUBLICVARS OR IN EQUAL DOT DIFF COMMA BEFORE ]
-- On WEDGE shift to state 63
-- On OR shift to state 69
-- On IN shift to state 89
-- On EQUAL shift to state 65
-- On DIFF shift to state 67
-- On BEFORE shift to state 74

State 89:
gterm -> LET IDENT EQUAL gterm IN . gterm [ WEDGE SEMI RPAREN RBRACKET PUBLICVARS OR IN EQUAL DOT DIFF COMMA BEFORE ]
-- On TABLE shift to state 40
-- On NOT shift to state 42
-- On NEW shift to state 44
-- On LPAREN shift to state 50
-- On LET shift to state 51
-- On INJEVENT shift to state 54
-- On IDENT shift to state 56
-- On EVENT shift to state 58
-- On CHOICE shift to state 60
-- On gterm shift to state 90

State 90:
gterm -> gterm . EQUAL gterm [ WEDGE SEMI RPAREN RBRACKET PUBLICVARS OR IN EQUAL DOT DIFF COMMA BEFORE ]
gterm -> gterm . DIFF gterm [ WEDGE SEMI RPAREN RBRACKET PUBLICVARS OR IN EQUAL DOT DIFF COMMA BEFORE ]
gterm -> gterm . OR gterm [ WEDGE SEMI RPAREN RBRACKET PUBLICVARS OR IN EQUAL DOT DIFF COMMA BEFORE ]
gterm -> gterm . WEDGE gterm [ WEDGE SEMI RPAREN RBRACKET PUBLICVARS OR IN EQUAL DOT DIFF COMMA BEFORE ]
gterm -> gterm . BEFORE gterm [ WEDGE SEMI RPAREN RBRACKET PUBLICVARS OR IN EQUAL DOT DIFF COMMA BEFORE ]
gterm -> LET IDENT EQUAL gterm IN gterm . [ WEDGE SEMI RPAREN RBRACKET PUBLICVARS OR IN EQUAL DOT DIFF COMMA BEFORE ]
-- On WEDGE shift to state 63
-- On OR shift to state 69
-- On EQUAL shift to state 65
-- On DIFF shift to state 67
-- On BEFORE shift to state 74
-- On WEDGE reduce production gterm -> LET IDENT EQUAL gterm IN gterm
-- On SEMI reduce production gterm -> LET IDENT EQUAL gterm IN gterm
-- On RPAREN reduce production gterm -> LET IDENT EQUAL gterm IN gterm
-- On RBRACKET reduce production gterm -> LET IDENT EQUAL gterm IN gterm
-- On PUBLICVARS reduce production gterm -> LET IDENT EQUAL gterm IN gterm
-- On OR reduce production gterm -> LET IDENT EQUAL gterm IN gterm
-- On IN reduce production gterm -> LET IDENT EQUAL gterm IN gterm
-- On EQUAL reduce production gterm -> LET IDENT EQUAL gterm IN gterm
-- On DOT reduce production gterm -> LET IDENT EQUAL gterm IN gterm
-- On DIFF reduce production gterm -> LET IDENT EQUAL gterm IN gterm
-- On COMMA reduce production gterm -> LET IDENT EQUAL gterm IN gterm
-- On BEFORE reduce production gterm -> LET IDENT EQUAL gterm IN gterm
** Conflict on WEDGE OR EQUAL DIFF BEFORE

State 91:
gterm -> LPAREN gtermseq . RPAREN [ WEDGE SEMI RPAREN RBRACKET PUBLICVARS OR IN EQUAL DOT DIFF COMMA BEFORE ]
-- On RPAREN shift to state 92

State 92:
gterm -> LPAREN gtermseq RPAREN . [ WEDGE SEMI RPAREN RBRACKET PUBLICVARS OR IN EQUAL DOT DIFF COMMA BEFORE ]
-- On WEDGE reduce production gterm -> LPAREN gtermseq RPAREN
-- On SEMI reduce production gterm -> LPAREN gtermseq RPAREN
-- On RPAREN reduce production gterm -> LPAREN gtermseq RPAREN
-- On RBRACKET reduce production gterm -> LPAREN gtermseq RPAREN
-- On PUBLICVARS reduce production gterm -> LPAREN gtermseq RPAREN
-- On OR reduce production gterm -> LPAREN gtermseq RPAREN
-- On IN reduce production gterm -> LPAREN gtermseq RPAREN
-- On EQUAL reduce production gterm -> LPAREN gtermseq RPAREN
-- On DOT reduce production gterm -> LPAREN gtermseq RPAREN
-- On DIFF reduce production gterm -> LPAREN gtermseq RPAREN
-- On COMMA reduce production gterm -> LPAREN gtermseq RPAREN
-- On BEFORE reduce production gterm -> LPAREN gtermseq RPAREN

State 93:
gterm -> gterm . EQUAL gterm [ WEDGE SEMI RBRACKET OR EQUAL DIFF BEFORE ]
gterm -> gterm . DIFF gterm [ WEDGE SEMI RBRACKET OR EQUAL DIFF BEFORE ]
gterm -> gterm . OR gterm [ WEDGE SEMI RBRACKET OR EQUAL DIFF BEFORE ]
gterm -> gterm . WEDGE gterm [ WEDGE SEMI RBRACKET OR EQUAL DIFF BEFORE ]
gterm -> gterm . BEFORE gterm [ WEDGE SEMI RBRACKET OR EQUAL DIFF BEFORE ]
nesbindingseq -> REPL INT EQUAL gterm . SEMI nesbindingseq [ RBRACKET ]
nesbindingseq -> REPL INT EQUAL gterm . [ RBRACKET ]
-- On WEDGE shift to state 63
-- On SEMI shift to state 94
-- On OR shift to state 69
-- On EQUAL shift to state 65
-- On DIFF shift to state 67
-- On BEFORE shift to state 74
-- On RBRACKET reduce production nesbindingseq -> REPL INT EQUAL gterm

State 94:
nesbindingseq -> REPL INT EQUAL gterm SEMI . nesbindingseq [ RBRACKET ]
-- On REPL shift to state 47
-- On IDENT shift to state 95
-- On nesbindingseq shift to state 100

State 95:
nesbindingseq -> IDENT . EQUAL gterm SEMI nesbindingseq [ RBRACKET ]
nesbindingseq -> IDENT . EQUAL gterm [ RBRACKET ]
-- On EQUAL shift to state 96

State 96:
nesbindingseq -> IDENT EQUAL . gterm SEMI nesbindingseq [ RBRACKET ]
nesbindingseq -> IDENT EQUAL . gterm [ RBRACKET ]
-- On TABLE shift to state 40
-- On NOT shift to state 42
-- On NEW shift to state 44
-- On LPAREN shift to state 50
-- On LET shift to state 51
-- On INJEVENT shift to state 54
-- On IDENT shift to state 56
-- On EVENT shift to state 58
-- On CHOICE shift to state 60
-- On gterm shift to state 97

State 97:
gterm -> gterm . EQUAL gterm [ WEDGE SEMI RBRACKET OR EQUAL DIFF BEFORE ]
gterm -> gterm . DIFF gterm [ WEDGE SEMI RBRACKET OR EQUAL DIFF BEFORE ]
gterm -> gterm . OR gterm [ WEDGE SEMI RBRACKET OR EQUAL DIFF BEFORE ]
gterm -> gterm . WEDGE gterm [ WEDGE SEMI RBRACKET OR EQUAL DIFF BEFORE ]
gterm -> gterm . BEFORE gterm [ WEDGE SEMI RBRACKET OR EQUAL DIFF BEFORE ]
nesbindingseq -> IDENT EQUAL gterm . SEMI nesbindingseq [ RBRACKET ]
nesbindingseq -> IDENT EQUAL gterm . [ RBRACKET ]
-- On WEDGE shift to state 63
-- On SEMI shift to state 98
-- On OR shift to state 69
-- On EQUAL shift to state 65
-- On DIFF shift to state 67
-- On BEFORE shift to state 74
-- On RBRACKET reduce production nesbindingseq -> IDENT EQUAL gterm

State 98:
nesbindingseq -> IDENT EQUAL gterm SEMI . nesbindingseq [ RBRACKET ]
-- On REPL shift to state 47
-- On IDENT shift to state 95
-- On nesbindingseq shift to state 99

State 99:
nesbindingseq -> IDENT EQUAL gterm SEMI nesbindingseq . [ RBRACKET ]
-- On RBRACKET reduce production nesbindingseq -> IDENT EQUAL gterm SEMI nesbindingseq

State 100:
nesbindingseq -> REPL INT EQUAL gterm SEMI nesbindingseq . [ RBRACKET ]
-- On RBRACKET reduce production nesbindingseq -> REPL INT EQUAL gterm SEMI nesbindingseq

State 101:
bindingseq -> nesbindingseq . [ RBRACKET ]
-- On RBRACKET reduce production bindingseq -> nesbindingseq

State 102:
gterm -> NEW IDENT LBRACKET bindingseq . RBRACKET [ WEDGE SEMI RPAREN RBRACKET PUBLICVARS OR IN EQUAL DOT DIFF COMMA BEFORE ]
-- On RBRACKET shift to state 103

State 103:
gterm -> NEW IDENT LBRACKET bindingseq RBRACKET . [ WEDGE SEMI RPAREN RBRACKET PUBLICVARS OR IN EQUAL DOT DIFF COMMA BEFORE ]
-- On WEDGE reduce production gterm -> NEW IDENT LBRACKET bindingseq RBRACKET
-- On SEMI reduce production gterm -> NEW IDENT LBRACKET bindingseq RBRACKET
-- On RPAREN reduce production gterm -> NEW IDENT LBRACKET bindingseq RBRACKET
-- On RBRACKET reduce production gterm -> NEW IDENT LBRACKET bindingseq RBRACKET
-- On PUBLICVARS reduce production gterm -> NEW IDENT LBRACKET bindingseq RBRACKET
-- On OR reduce production gterm -> NEW IDENT LBRACKET bindingseq RBRACKET
-- On IN reduce production gterm -> NEW IDENT LBRACKET bindingseq RBRACKET
-- On EQUAL reduce production gterm -> NEW IDENT LBRACKET bindingseq RBRACKET
-- On DOT reduce production gterm -> NEW IDENT LBRACKET bindingseq RBRACKET
-- On DIFF reduce production gterm -> NEW IDENT LBRACKET bindingseq RBRACKET
-- On COMMA reduce production gterm -> NEW IDENT LBRACKET bindingseq RBRACKET
-- On BEFORE reduce production gterm -> NEW IDENT LBRACKET bindingseq RBRACKET

State 104:
gterm -> gterm . EQUAL gterm [ WEDGE RPAREN OR EQUAL DIFF BEFORE ]
gterm -> gterm . DIFF gterm [ WEDGE RPAREN OR EQUAL DIFF BEFORE ]
gterm -> NOT LPAREN gterm . RPAREN [ WEDGE SEMI RPAREN RBRACKET PUBLICVARS OR IN EQUAL DOT DIFF COMMA BEFORE ]
gterm -> gterm . OR gterm [ WEDGE RPAREN OR EQUAL DIFF BEFORE ]
gterm -> gterm . WEDGE gterm [ WEDGE RPAREN OR EQUAL DIFF BEFORE ]
gterm -> gterm . BEFORE gterm [ WEDGE RPAREN OR EQUAL DIFF BEFORE ]
-- On WEDGE shift to state 63
-- On RPAREN shift to state 105
-- On OR shift to state 69
-- On EQUAL shift to state 65
-- On DIFF shift to state 67
-- On BEFORE shift to state 74

State 105:
gterm -> NOT LPAREN gterm RPAREN . [ WEDGE SEMI RPAREN RBRACKET PUBLICVARS OR IN EQUAL DOT DIFF COMMA BEFORE ]
-- On WEDGE reduce production gterm -> NOT LPAREN gterm RPAREN
-- On SEMI reduce production gterm -> NOT LPAREN gterm RPAREN
-- On RPAREN reduce production gterm -> NOT LPAREN gterm RPAREN
-- On RBRACKET reduce production gterm -> NOT LPAREN gterm RPAREN
-- On PUBLICVARS reduce production gterm -> NOT LPAREN gterm RPAREN
-- On OR reduce production gterm -> NOT LPAREN gterm RPAREN
-- On IN reduce production gterm -> NOT LPAREN gterm RPAREN
-- On EQUAL reduce production gterm -> NOT LPAREN gterm RPAREN
-- On DOT reduce production gterm -> NOT LPAREN gterm RPAREN
-- On DIFF reduce production gterm -> NOT LPAREN gterm RPAREN
-- On COMMA reduce production gterm -> NOT LPAREN gterm RPAREN
-- On BEFORE reduce production gterm -> NOT LPAREN gterm RPAREN

State 106:
gterm -> TABLE LPAREN gterm . RPAREN PHASE INT [ WEDGE SEMI RPAREN RBRACKET PUBLICVARS OR IN EQUAL DOT DIFF COMMA BEFORE ]
gterm -> gterm . EQUAL gterm [ WEDGE RPAREN OR EQUAL DIFF BEFORE ]
gterm -> gterm . DIFF gterm [ WEDGE RPAREN OR EQUAL DIFF BEFORE ]
gterm -> gterm . OR gterm [ WEDGE RPAREN OR EQUAL DIFF BEFORE ]
gterm -> gterm . WEDGE gterm [ WEDGE RPAREN OR EQUAL DIFF BEFORE ]
gterm -> TABLE LPAREN gterm . RPAREN [ WEDGE SEMI RPAREN RBRACKET PUBLICVARS OR IN EQUAL DOT DIFF COMMA BEFORE ]
gterm -> gterm . BEFORE gterm [ WEDGE RPAREN OR EQUAL DIFF BEFORE ]
-- On WEDGE shift to state 63
-- On RPAREN shift to state 107
-- On OR shift to state 69
-- On EQUAL shift to state 65
-- On DIFF shift to state 67
-- On BEFORE shift to state 74

State 107:
gterm -> TABLE LPAREN gterm RPAREN . PHASE INT [ WEDGE SEMI RPAREN RBRACKET PUBLICVARS OR IN EQUAL DOT DIFF COMMA BEFORE ]
gterm -> TABLE LPAREN gterm RPAREN . [ WEDGE SEMI RPAREN RBRACKET PUBLICVARS OR IN EQUAL DOT DIFF COMMA BEFORE ]
-- On PHASE shift to state 108
-- On WEDGE reduce production gterm -> TABLE LPAREN gterm RPAREN
-- On SEMI reduce production gterm -> TABLE LPAREN gterm RPAREN
-- On RPAREN reduce production gterm -> TABLE LPAREN gterm RPAREN
-- On RBRACKET reduce production gterm -> TABLE LPAREN gterm RPAREN
-- On PUBLICVARS reduce production gterm -> TABLE LPAREN gterm RPAREN
-- On OR reduce production gterm -> TABLE LPAREN gterm RPAREN
-- On IN reduce production gterm -> TABLE LPAREN gterm RPAREN
-- On EQUAL reduce production gterm -> TABLE LPAREN gterm RPAREN
-- On DOT reduce production gterm -> TABLE LPAREN gterm RPAREN
-- On DIFF reduce production gterm -> TABLE LPAREN gterm RPAREN
-- On COMMA reduce production gterm -> TABLE LPAREN gterm RPAREN
-- On BEFORE reduce production gterm -> TABLE LPAREN gterm RPAREN

State 108:
gterm -> TABLE LPAREN gterm RPAREN PHASE . INT [ WEDGE SEMI RPAREN RBRACKET PUBLICVARS OR IN EQUAL DOT DIFF COMMA BEFORE ]
-- On INT shift to state 109

State 109:
gterm -> TABLE LPAREN gterm RPAREN PHASE INT . [ WEDGE SEMI RPAREN RBRACKET PUBLICVARS OR IN EQUAL DOT DIFF COMMA BEFORE ]
-- On WEDGE reduce production gterm -> TABLE LPAREN gterm RPAREN PHASE INT
-- On SEMI reduce production gterm -> TABLE LPAREN gterm RPAREN PHASE INT
-- On RPAREN reduce production gterm -> TABLE LPAREN gterm RPAREN PHASE INT
-- On RBRACKET reduce production gterm -> TABLE LPAREN gterm RPAREN PHASE INT
-- On PUBLICVARS reduce production gterm -> TABLE LPAREN gterm RPAREN PHASE INT
-- On OR reduce production gterm -> TABLE LPAREN gterm RPAREN PHASE INT
-- On IN reduce production gterm -> TABLE LPAREN gterm RPAREN PHASE INT
-- On EQUAL reduce production gterm -> TABLE LPAREN gterm RPAREN PHASE INT
-- On DOT reduce production gterm -> TABLE LPAREN gterm RPAREN PHASE INT
-- On DIFF reduce production gterm -> TABLE LPAREN gterm RPAREN PHASE INT
-- On COMMA reduce production gterm -> TABLE LPAREN gterm RPAREN PHASE INT
-- On BEFORE reduce production gterm -> TABLE LPAREN gterm RPAREN PHASE INT

State 110:
tquery -> SECRET . IDENT optpublicvars options [ SEMI DOT ]
-- On IDENT shift to state 111

State 111:
tquery -> SECRET IDENT . optpublicvars options [ SEMI DOT ]
-- On PUBLICVARS shift to state 112
-- On optpublicvars shift to state 114
-- On SEMI reduce production optpublicvars -> 
-- On LBRACKET reduce production optpublicvars -> 
-- On DOT reduce production optpublicvars -> 

State 112:
optpublicvars -> PUBLICVARS . neidentseq [ SEMI LBRACKET DOT ]
-- On IDENT shift to state 7
-- On neidentseq shift to state 113

State 113:
optpublicvars -> PUBLICVARS neidentseq . [ SEMI LBRACKET DOT ]
-- On SEMI reduce production optpublicvars -> PUBLICVARS neidentseq
-- On LBRACKET reduce production optpublicvars -> PUBLICVARS neidentseq
-- On DOT reduce production optpublicvars -> PUBLICVARS neidentseq

State 114:
tquery -> SECRET IDENT optpublicvars . options [ SEMI DOT ]
-- On LBRACKET shift to state 6
-- On options shift to state 115
-- On SEMI reduce production options -> 
-- On DOT reduce production options -> 

State 115:
tquery -> SECRET IDENT optpublicvars options . [ SEMI DOT ]
-- On SEMI reduce production tquery -> SECRET IDENT optpublicvars options
-- On DOT reduce production tquery -> SECRET IDENT optpublicvars options

State 116:
tquery -> PUTBEGIN . EVENT COLON neidentseq [ SEMI DOT ]
tquery -> PUTBEGIN . INJEVENT COLON neidentseq [ SEMI DOT ]
-- On INJEVENT shift to state 117
-- On EVENT shift to state 120

State 117:
tquery -> PUTBEGIN INJEVENT . COLON neidentseq [ SEMI DOT ]
-- On COLON shift to state 118

State 118:
tquery -> PUTBEGIN INJEVENT COLON . neidentseq [ SEMI DOT ]
-- On IDENT shift to state 7
-- On neidentseq shift to state 119

State 119:
tquery -> PUTBEGIN INJEVENT COLON neidentseq . [ SEMI DOT ]
-- On SEMI reduce production tquery -> PUTBEGIN INJEVENT COLON neidentseq
-- On DOT reduce production tquery -> PUTBEGIN INJEVENT COLON neidentseq

State 120:
tquery -> PUTBEGIN EVENT . COLON neidentseq [ SEMI DOT ]
-- On COLON shift to state 121

State 121:
tquery -> PUTBEGIN EVENT COLON . neidentseq [ SEMI DOT ]
-- On IDENT shift to state 7
-- On neidentseq shift to state 122

State 122:
tquery -> PUTBEGIN EVENT COLON neidentseq . [ SEMI DOT ]
-- On SEMI reduce production tquery -> PUTBEGIN EVENT COLON neidentseq
-- On DOT reduce production tquery -> PUTBEGIN EVENT COLON neidentseq

State 123:
gterm -> IDENT . LPAREN gtermseq RPAREN [ WEDGE SEMI PUBLICVARS OR EQUAL DOT DIFF BEFORE ]
gterm -> IDENT . [ WEDGE SEMI PUBLICVARS OR EQUAL DOT DIFF BEFORE ]
gterm -> IDENT . LPAREN gtermseq RPAREN PHASE INT [ WEDGE SEMI PUBLICVARS OR EQUAL DOT DIFF BEFORE ]
nevartype -> IDENT . COLON typeid COMMA nevartype [ SEMI ]
nevartype -> IDENT . COLON typeid [ SEMI ]
-- On LPAREN shift to state 57
-- On COLON shift to state 30
-- On WEDGE reduce production gterm -> IDENT
-- On SEMI reduce production gterm -> IDENT
-- On PUBLICVARS reduce production gterm -> IDENT
-- On OR reduce production gterm -> IDENT
-- On EQUAL reduce production gterm -> IDENT
-- On DOT reduce production gterm -> IDENT
-- On DIFF reduce production gterm -> IDENT
-- On BEFORE reduce production gterm -> IDENT

State 124:
lib -> QUERY tqueryseq . DOT lib [ RBRACE PROCESS EQUIVALENCE ]
-- On DOT shift to state 125

State 125:
lib -> QUERY tqueryseq DOT . lib [ RBRACE PROCESS EQUIVALENCE ]
-- On WEAKSECRET shift to state 1
-- On TYPE shift to state 4
-- On TABLE shift to state 14
-- On SET shift to state 22
-- On REDUCTION shift to state 27
-- On QUERY shift to state 39
-- On PROOF shift to state 126
-- On PROBA shift to state 146
-- On PREDICATE shift to state 149
-- On PARAM shift to state 156
-- On NOUNIF shift to state 160
-- On NOT shift to state 229
-- On NONINTERF shift to state 234
-- On LETFUN shift to state 276
-- On LET shift to state 412
-- On IMPLEMENTATION shift to state 547
-- On FUN shift to state 594
-- On FREE shift to state 611
-- On EXPAND shift to state 617
-- On EVENT shift to state 623
-- On EQUATION shift to state 629
-- On ELIMTRUE shift to state 637
-- On DEFINE shift to state 641
-- On CONST shift to state 647
-- On CLAUSES shift to state 653
-- On CHANNEL shift to state 655
-- On lib shift to state 748
-- On RBRACE reduce production lib -> 
-- On PROCESS reduce production lib -> 
-- On EQUIVALENCE reduce production lib -> 

State 126:
lib -> PROOF . LBRACE proof RBRACE lib [ RBRACE PROCESS EQUIVALENCE ]
-- On LBRACE shift to state 127

State 127:
lib -> PROOF LBRACE . proof RBRACE lib [ RBRACE PROCESS EQUIVALENCE ]
-- On STRING shift to state 128
-- On STAR shift to state 129
-- On SET shift to state 130
-- On RPAREN shift to state 131
-- On LPAREN shift to state 132
-- On INT shift to state 133
-- On INSERT shift to state 134
-- On IDENT shift to state 135
-- On EQUAL shift to state 136
-- On DOT shift to state 137
-- On COMMA shift to state 138
-- On prooftoken shift to state 139
-- On proofcommand shift to state 141
-- On proof shift to state 144

State 128:
prooftoken -> STRING . [ STRING STAR SET SEMI RPAREN RBRACE LPAREN INT INSERT IDENT EQUAL DOT COMMA ]
-- On STRING reduce production prooftoken -> STRING
-- On STAR reduce production prooftoken -> STRING
-- On SET reduce production prooftoken -> STRING
-- On SEMI reduce production prooftoken -> STRING
-- On RPAREN reduce production prooftoken -> STRING
-- On RBRACE reduce production prooftoken -> STRING
-- On LPAREN reduce production prooftoken -> STRING
-- On INT reduce production prooftoken -> STRING
-- On INSERT reduce production prooftoken -> STRING
-- On IDENT reduce production prooftoken -> STRING
-- On EQUAL reduce production prooftoken -> STRING
-- On DOT reduce production prooftoken -> STRING
-- On COMMA reduce production prooftoken -> STRING

State 129:
prooftoken -> STAR . [ STRING STAR SET SEMI RPAREN RBRACE LPAREN INT INSERT IDENT EQUAL DOT COMMA ]
-- On STRING reduce production prooftoken -> STAR
-- On STAR reduce production prooftoken -> STAR
-- On SET reduce production prooftoken -> STAR
-- On SEMI reduce production prooftoken -> STAR
-- On RPAREN reduce production prooftoken -> STAR
-- On RBRACE reduce production prooftoken -> STAR
-- On LPAREN reduce production prooftoken -> STAR
-- On INT reduce production prooftoken -> STAR
-- On INSERT reduce production prooftoken -> STAR
-- On IDENT reduce production prooftoken -> STAR
-- On EQUAL reduce production prooftoken -> STAR
-- On DOT reduce production prooftoken -> STAR
-- On COMMA reduce production prooftoken -> STAR

State 130:
prooftoken -> SET . [ STRING STAR SET SEMI RPAREN RBRACE LPAREN INT INSERT IDENT EQUAL DOT COMMA ]
-- On STRING reduce production prooftoken -> SET
-- On STAR reduce production prooftoken -> SET
-- On SET reduce production prooftoken -> SET
-- On SEMI reduce production prooftoken -> SET
-- On RPAREN reduce production prooftoken -> SET
-- On RBRACE reduce production prooftoken -> SET
-- On LPAREN reduce production prooftoken -> SET
-- On INT reduce production prooftoken -> SET
-- On INSERT reduce production prooftoken -> SET
-- On IDENT reduce production prooftoken -> SET
-- On EQUAL reduce production prooftoken -> SET
-- On DOT reduce production prooftoken -> SET
-- On COMMA reduce production prooftoken -> SET

State 131:
prooftoken -> RPAREN . [ STRING STAR SET SEMI RPAREN RBRACE LPAREN INT INSERT IDENT EQUAL DOT COMMA ]
-- On STRING reduce production prooftoken -> RPAREN
-- On STAR reduce production prooftoken -> RPAREN
-- On SET reduce production prooftoken -> RPAREN
-- On SEMI reduce production prooftoken -> RPAREN
-- On RPAREN reduce production prooftoken -> RPAREN
-- On RBRACE reduce production prooftoken -> RPAREN
-- On LPAREN reduce production prooftoken -> RPAREN
-- On INT reduce production prooftoken -> RPAREN
-- On INSERT reduce production prooftoken -> RPAREN
-- On IDENT reduce production prooftoken -> RPAREN
-- On EQUAL reduce production prooftoken -> RPAREN
-- On DOT reduce production prooftoken -> RPAREN
-- On COMMA reduce production prooftoken -> RPAREN

State 132:
prooftoken -> LPAREN . [ STRING STAR SET SEMI RPAREN RBRACE LPAREN INT INSERT IDENT EQUAL DOT COMMA ]
-- On STRING reduce production prooftoken -> LPAREN
-- On STAR reduce production prooftoken -> LPAREN
-- On SET reduce production prooftoken -> LPAREN
-- On SEMI reduce production prooftoken -> LPAREN
-- On RPAREN reduce production prooftoken -> LPAREN
-- On RBRACE reduce production prooftoken -> LPAREN
-- On LPAREN reduce production prooftoken -> LPAREN
-- On INT reduce production prooftoken -> LPAREN
-- On INSERT reduce production prooftoken -> LPAREN
-- On IDENT reduce production prooftoken -> LPAREN
-- On EQUAL reduce production prooftoken -> LPAREN
-- On DOT reduce production prooftoken -> LPAREN
-- On COMMA reduce production prooftoken -> LPAREN

State 133:
prooftoken -> INT . [ STRING STAR SET SEMI RPAREN RBRACE LPAREN INT INSERT IDENT EQUAL DOT COMMA ]
-- On STRING reduce production prooftoken -> INT
-- On STAR reduce production prooftoken -> INT
-- On SET reduce production prooftoken -> INT
-- On SEMI reduce production prooftoken -> INT
-- On RPAREN reduce production prooftoken -> INT
-- On RBRACE reduce production prooftoken -> INT
-- On LPAREN reduce production prooftoken -> INT
-- On INT reduce production prooftoken -> INT
-- On INSERT reduce production prooftoken -> INT
-- On IDENT reduce production prooftoken -> INT
-- On EQUAL reduce production prooftoken -> INT
-- On DOT reduce production prooftoken -> INT
-- On COMMA reduce production prooftoken -> INT

State 134:
prooftoken -> INSERT . [ STRING STAR SET SEMI RPAREN RBRACE LPAREN INT INSERT IDENT EQUAL DOT COMMA ]
-- On STRING reduce production prooftoken -> INSERT
-- On STAR reduce production prooftoken -> INSERT
-- On SET reduce production prooftoken -> INSERT
-- On SEMI reduce production prooftoken -> INSERT
-- On RPAREN reduce production prooftoken -> INSERT
-- On RBRACE reduce production prooftoken -> INSERT
-- On LPAREN reduce production prooftoken -> INSERT
-- On INT reduce production prooftoken -> INSERT
-- On INSERT reduce production prooftoken -> INSERT
-- On IDENT reduce production prooftoken -> INSERT
-- On EQUAL reduce production prooftoken -> INSERT
-- On DOT reduce production prooftoken -> INSERT
-- On COMMA reduce production prooftoken -> INSERT

State 135:
prooftoken -> IDENT . [ STRING STAR SET SEMI RPAREN RBRACE LPAREN INT INSERT IDENT EQUAL DOT COMMA ]
-- On STRING reduce production prooftoken -> IDENT
-- On STAR reduce production prooftoken -> IDENT
-- On SET reduce production prooftoken -> IDENT
-- On SEMI reduce production prooftoken -> IDENT
-- On RPAREN reduce production prooftoken -> IDENT
-- On RBRACE reduce production prooftoken -> IDENT
-- On LPAREN reduce production prooftoken -> IDENT
-- On INT reduce production prooftoken -> IDENT
-- On INSERT reduce production prooftoken -> IDENT
-- On IDENT reduce production prooftoken -> IDENT
-- On EQUAL reduce production prooftoken -> IDENT
-- On DOT reduce production prooftoken -> IDENT
-- On COMMA reduce production prooftoken -> IDENT

State 136:
prooftoken -> EQUAL . [ STRING STAR SET SEMI RPAREN RBRACE LPAREN INT INSERT IDENT EQUAL DOT COMMA ]
-- On STRING reduce production prooftoken -> EQUAL
-- On STAR reduce production prooftoken -> EQUAL
-- On SET reduce production prooftoken -> EQUAL
-- On SEMI reduce production prooftoken -> EQUAL
-- On RPAREN reduce production prooftoken -> EQUAL
-- On RBRACE reduce production prooftoken -> EQUAL
-- On LPAREN reduce production prooftoken -> EQUAL
-- On INT reduce production prooftoken -> EQUAL
-- On INSERT reduce production prooftoken -> EQUAL
-- On IDENT reduce production prooftoken -> EQUAL
-- On EQUAL reduce production prooftoken -> EQUAL
-- On DOT reduce production prooftoken -> EQUAL
-- On COMMA reduce production prooftoken -> EQUAL

State 137:
prooftoken -> DOT . [ STRING STAR SET SEMI RPAREN RBRACE LPAREN INT INSERT IDENT EQUAL DOT COMMA ]
-- On STRING reduce production prooftoken -> DOT
-- On STAR reduce production prooftoken -> DOT
-- On SET reduce production prooftoken -> DOT
-- On SEMI reduce production prooftoken -> DOT
-- On RPAREN reduce production prooftoken -> DOT
-- On RBRACE reduce production prooftoken -> DOT
-- On LPAREN reduce production prooftoken -> DOT
-- On INT reduce production prooftoken -> DOT
-- On INSERT reduce production prooftoken -> DOT
-- On IDENT reduce production prooftoken -> DOT
-- On EQUAL reduce production prooftoken -> DOT
-- On DOT reduce production prooftoken -> DOT
-- On COMMA reduce production prooftoken -> DOT

State 138:
prooftoken -> COMMA . [ STRING STAR SET SEMI RPAREN RBRACE LPAREN INT INSERT IDENT EQUAL DOT COMMA ]
-- On STRING reduce production prooftoken -> COMMA
-- On STAR reduce production prooftoken -> COMMA
-- On SET reduce production prooftoken -> COMMA
-- On SEMI reduce production prooftoken -> COMMA
-- On RPAREN reduce production prooftoken -> COMMA
-- On RBRACE reduce production prooftoken -> COMMA
-- On LPAREN reduce production prooftoken -> COMMA
-- On INT reduce production prooftoken -> COMMA
-- On INSERT reduce production prooftoken -> COMMA
-- On IDENT reduce production prooftoken -> COMMA
-- On EQUAL reduce production prooftoken -> COMMA
-- On DOT reduce production prooftoken -> COMMA
-- On COMMA reduce production prooftoken -> COMMA

State 139:
proofcommand -> prooftoken . [ SEMI RBRACE ]
proofcommand -> prooftoken . proofcommand [ SEMI RBRACE ]
-- On STRING shift to state 128
-- On STAR shift to state 129
-- On SET shift to state 130
-- On RPAREN shift to state 131
-- On LPAREN shift to state 132
-- On INT shift to state 133
-- On INSERT shift to state 134
-- On IDENT shift to state 135
-- On EQUAL shift to state 136
-- On DOT shift to state 137
-- On COMMA shift to state 138
-- On prooftoken shift to state 139
-- On proofcommand shift to state 140
-- On SEMI reduce production proofcommand -> prooftoken
-- On RBRACE reduce production proofcommand -> prooftoken

State 140:
proofcommand -> prooftoken proofcommand . [ SEMI RBRACE ]
-- On SEMI reduce production proofcommand -> prooftoken proofcommand
-- On RBRACE reduce production proofcommand -> prooftoken proofcommand

State 141:
proof -> proofcommand . [ RBRACE ]
proof -> proofcommand . SEMI proof [ RBRACE ]
-- On SEMI shift to state 142
-- On RBRACE reduce production proof -> proofcommand

State 142:
proof -> proofcommand SEMI . proof [ RBRACE ]
-- On STRING shift to state 128
-- On STAR shift to state 129
-- On SET shift to state 130
-- On RPAREN shift to state 131
-- On LPAREN shift to state 132
-- On INT shift to state 133
-- On INSERT shift to state 134
-- On IDENT shift to state 135
-- On EQUAL shift to state 136
-- On DOT shift to state 137
-- On COMMA shift to state 138
-- On prooftoken shift to state 139
-- On proofcommand shift to state 141
-- On proof shift to state 143

State 143:
proof -> proofcommand SEMI proof . [ RBRACE ]
-- On RBRACE reduce production proof -> proofcommand SEMI proof

State 144:
lib -> PROOF LBRACE proof . RBRACE lib [ RBRACE PROCESS EQUIVALENCE ]
-- On RBRACE shift to state 145

State 145:
lib -> PROOF LBRACE proof RBRACE . lib [ RBRACE PROCESS EQUIVALENCE ]
-- On WEAKSECRET shift to state 1
-- On TYPE shift to state 4
-- On TABLE shift to state 14
-- On SET shift to state 22
-- On REDUCTION shift to state 27
-- On QUERY shift to state 39
-- On PROOF shift to state 126
-- On PROBA shift to state 146
-- On PREDICATE shift to state 149
-- On PARAM shift to state 156
-- On NOUNIF shift to state 160
-- On NOT shift to state 229
-- On NONINTERF shift to state 234
-- On LETFUN shift to state 276
-- On LET shift to state 412
-- On IMPLEMENTATION shift to state 547
-- On FUN shift to state 594
-- On FREE shift to state 611
-- On EXPAND shift to state 617
-- On EVENT shift to state 623
-- On EQUATION shift to state 629
-- On ELIMTRUE shift to state 637
-- On DEFINE shift to state 641
-- On CONST shift to state 647
-- On CLAUSES shift to state 653
-- On CHANNEL shift to state 655
-- On lib shift to state 747
-- On RBRACE reduce production lib -> 
-- On PROCESS reduce production lib -> 
-- On EQUIVALENCE reduce production lib -> 

State 146:
lib -> PROBA . IDENT DOT lib [ RBRACE PROCESS EQUIVALENCE ]
-- On IDENT shift to state 147

State 147:
lib -> PROBA IDENT . DOT lib [ RBRACE PROCESS EQUIVALENCE ]
-- On DOT shift to state 148

State 148:
lib -> PROBA IDENT DOT . lib [ RBRACE PROCESS EQUIVALENCE ]
-- On WEAKSECRET shift to state 1
-- On TYPE shift to state 4
-- On TABLE shift to state 14
-- On SET shift to state 22
-- On REDUCTION shift to state 27
-- On QUERY shift to state 39
-- On PROOF shift to state 126
-- On PROBA shift to state 146
-- On PREDICATE shift to state 149
-- On PARAM shift to state 156
-- On NOUNIF shift to state 160
-- On NOT shift to state 229
-- On NONINTERF shift to state 234
-- On LETFUN shift to state 276
-- On LET shift to state 412
-- On IMPLEMENTATION shift to state 547
-- On FUN shift to state 594
-- On FREE shift to state 611
-- On EXPAND shift to state 617
-- On EVENT shift to state 623
-- On EQUATION shift to state 629
-- On ELIMTRUE shift to state 637
-- On DEFINE shift to state 641
-- On CONST shift to state 647
-- On CLAUSES shift to state 653
-- On CHANNEL shift to state 655
-- On lib shift to state 746
-- On RBRACE reduce production lib -> 
-- On PROCESS reduce production lib -> 
-- On EQUIVALENCE reduce production lib -> 

State 149:
lib -> PREDICATE . IDENT LPAREN typeidseq RPAREN options DOT lib [ RBRACE PROCESS EQUIVALENCE ]
lib -> PREDICATE . IDENT options DOT lib [ RBRACE PROCESS EQUIVALENCE ]
-- On IDENT shift to state 150

State 150:
lib -> PREDICATE IDENT . LPAREN typeidseq RPAREN options DOT lib [ RBRACE PROCESS EQUIVALENCE ]
lib -> PREDICATE IDENT . options DOT lib [ RBRACE PROCESS EQUIVALENCE ]
-- On LPAREN shift to state 151
-- On LBRACKET shift to state 6
-- On options shift to state 743
-- On DOT reduce production options -> 

State 151:
lib -> PREDICATE IDENT LPAREN . typeidseq RPAREN options DOT lib [ RBRACE PROCESS EQUIVALENCE ]
-- On IDENT shift to state 17
-- On CHANNEL shift to state 18
-- On typeidseq shift to state 152
-- On typeid shift to state 676
-- On netypeidseq shift to state 679
-- On RPAREN reduce production typeidseq -> 

State 152:
lib -> PREDICATE IDENT LPAREN typeidseq . RPAREN options DOT lib [ RBRACE PROCESS EQUIVALENCE ]
-- On RPAREN shift to state 153

State 153:
lib -> PREDICATE IDENT LPAREN typeidseq RPAREN . options DOT lib [ RBRACE PROCESS EQUIVALENCE ]
-- On LBRACKET shift to state 6
-- On options shift to state 154
-- On DOT reduce production options -> 

State 154:
lib -> PREDICATE IDENT LPAREN typeidseq RPAREN options . DOT lib [ RBRACE PROCESS EQUIVALENCE ]
-- On DOT shift to state 155

State 155:
lib -> PREDICATE IDENT LPAREN typeidseq RPAREN options DOT . lib [ RBRACE PROCESS EQUIVALENCE ]
-- On WEAKSECRET shift to state 1
-- On TYPE shift to state 4
-- On TABLE shift to state 14
-- On SET shift to state 22
-- On REDUCTION shift to state 27
-- On QUERY shift to state 39
-- On PROOF shift to state 126
-- On PROBA shift to state 146
-- On PREDICATE shift to state 149
-- On PARAM shift to state 156
-- On NOUNIF shift to state 160
-- On NOT shift to state 229
-- On NONINTERF shift to state 234
-- On LETFUN shift to state 276
-- On LET shift to state 412
-- On IMPLEMENTATION shift to state 547
-- On FUN shift to state 594
-- On FREE shift to state 611
-- On EXPAND shift to state 617
-- On EVENT shift to state 623
-- On EQUATION shift to state 629
-- On ELIMTRUE shift to state 637
-- On DEFINE shift to state 641
-- On CONST shift to state 647
-- On CLAUSES shift to state 653
-- On CHANNEL shift to state 655
-- On lib shift to state 742
-- On RBRACE reduce production lib -> 
-- On PROCESS reduce production lib -> 
-- On EQUIVALENCE reduce production lib -> 

State 156:
lib -> PARAM . neidentseq options DOT lib [ RBRACE PROCESS EQUIVALENCE ]
-- On IDENT shift to state 7
-- On neidentseq shift to state 157

State 157:
lib -> PARAM neidentseq . options DOT lib [ RBRACE PROCESS EQUIVALENCE ]
-- On LBRACKET shift to state 6
-- On options shift to state 158
-- On DOT reduce production options -> 

State 158:
lib -> PARAM neidentseq options . DOT lib [ RBRACE PROCESS EQUIVALENCE ]
-- On DOT shift to state 159

State 159:
lib -> PARAM neidentseq options DOT . lib [ RBRACE PROCESS EQUIVALENCE ]
-- On WEAKSECRET shift to state 1
-- On TYPE shift to state 4
-- On TABLE shift to state 14
-- On SET shift to state 22
-- On REDUCTION shift to state 27
-- On QUERY shift to state 39
-- On PROOF shift to state 126
-- On PROBA shift to state 146
-- On PREDICATE shift to state 149
-- On PARAM shift to state 156
-- On NOUNIF shift to state 160
-- On NOT shift to state 229
-- On NONINTERF shift to state 234
-- On LETFUN shift to state 276
-- On LET shift to state 412
-- On IMPLEMENTATION shift to state 547
-- On FUN shift to state 594
-- On FREE shift to state 611
-- On EXPAND shift to state 617
-- On EVENT shift to state 623
-- On EQUATION shift to state 629
-- On ELIMTRUE shift to state 637
-- On DEFINE shift to state 641
-- On CONST shift to state 647
-- On CLAUSES shift to state 653
-- On CHANNEL shift to state 655
-- On lib shift to state 741
-- On RBRACE reduce production lib -> 
-- On PROCESS reduce production lib -> 
-- On EQUIVALENCE reduce production lib -> 

State 160:
lib -> NOUNIF . nevartype SEMI tfnebindingseq DOT lib [ RBRACE PROCESS EQUIVALENCE ]
lib -> NOUNIF . tfnebindingseq DOT lib [ RBRACE PROCESS EQUIVALENCE ]
-- On TABLE shift to state 161
-- On LET shift to state 213
-- On IDENT shift to state 226
-- On tfnebindingseq shift to state 227
-- On nevartype shift to state 736

State 161:
tfnebindingseq -> TABLE . LPAREN gformatseq RPAREN optphase optint [ DOT ]
-- On LPAREN shift to state 162

State 162:
tfnebindingseq -> TABLE LPAREN . gformatseq RPAREN optphase optint [ DOT ]
-- On STAR shift to state 163
-- On NEW shift to state 165
-- On LPAREN shift to state 171
-- On LET shift to state 172
-- On IDENT shift to state 175
-- On CHOICE shift to state 177
-- On negformatseq shift to state 183
-- On gformatseq shift to state 205
-- On gformat shift to state 186
-- On RPAREN reduce production gformatseq -> 

State 163:
gformat -> STAR . IDENT [ SEMI RPAREN RBRACKET IN COMMA ]
-- On IDENT shift to state 164

State 164:
gformat -> STAR IDENT . [ SEMI RPAREN RBRACKET IN COMMA ]
-- On SEMI reduce production gformat -> STAR IDENT
-- On RPAREN reduce production gformat -> STAR IDENT
-- On RBRACKET reduce production gformat -> STAR IDENT
-- On IN reduce production gformat -> STAR IDENT
-- On COMMA reduce production gformat -> STAR IDENT

State 165:
gformat -> NEW . IDENT LBRACKET fbindingseq RBRACKET [ SEMI RPAREN RBRACKET IN COMMA ]
gformat -> NEW . IDENT [ SEMI RPAREN RBRACKET IN COMMA ]
-- On IDENT shift to state 166

State 166:
gformat -> NEW IDENT . LBRACKET fbindingseq RBRACKET [ SEMI RPAREN RBRACKET IN COMMA ]
gformat -> NEW IDENT . [ SEMI RPAREN RBRACKET IN COMMA ]
-- On LBRACKET shift to state 167
-- On SEMI reduce production gformat -> NEW IDENT
-- On RPAREN reduce production gformat -> NEW IDENT
-- On RBRACKET reduce production gformat -> NEW IDENT
-- On IN reduce production gformat -> NEW IDENT
-- On COMMA reduce production gformat -> NEW IDENT

State 167:
gformat -> NEW IDENT LBRACKET . fbindingseq RBRACKET [ SEMI RPAREN RBRACKET IN COMMA ]
-- On REPL shift to state 168
-- On IDENT shift to state 196
-- On fnesbindingseq shift to state 202
-- On fbindingseq shift to state 203
-- On RBRACKET reduce production fbindingseq -> 

State 168:
fnesbindingseq -> REPL . INT EQUAL gformat SEMI fnesbindingseq [ RBRACKET ]
fnesbindingseq -> REPL . INT EQUAL gformat [ RBRACKET ]
-- On INT shift to state 169

State 169:
fnesbindingseq -> REPL INT . EQUAL gformat SEMI fnesbindingseq [ RBRACKET ]
fnesbindingseq -> REPL INT . EQUAL gformat [ RBRACKET ]
-- On EQUAL shift to state 170

State 170:
fnesbindingseq -> REPL INT EQUAL . gformat SEMI fnesbindingseq [ RBRACKET ]
fnesbindingseq -> REPL INT EQUAL . gformat [ RBRACKET ]
-- On STAR shift to state 163
-- On NEW shift to state 165
-- On LPAREN shift to state 171
-- On LET shift to state 172
-- On IDENT shift to state 175
-- On CHOICE shift to state 177
-- On gformat shift to state 194

State 171:
gformat -> LPAREN . gformatseq RPAREN [ SEMI RPAREN RBRACKET IN COMMA ]
-- On STAR shift to state 163
-- On NEW shift to state 165
-- On LPAREN shift to state 171
-- On LET shift to state 172
-- On IDENT shift to state 175
-- On CHOICE shift to state 177
-- On negformatseq shift to state 183
-- On gformatseq shift to state 192
-- On gformat shift to state 186
-- On RPAREN reduce production gformatseq -> 

State 172:
gformat -> LET . IDENT EQUAL gformat IN gformat [ SEMI RPAREN RBRACKET IN COMMA ]
-- On IDENT shift to state 173

State 173:
gformat -> LET IDENT . EQUAL gformat IN gformat [ SEMI RPAREN RBRACKET IN COMMA ]
-- On EQUAL shift to state 174

State 174:
gformat -> LET IDENT EQUAL . gformat IN gformat [ SEMI RPAREN RBRACKET IN COMMA ]
-- On STAR shift to state 163
-- On NEW shift to state 165
-- On LPAREN shift to state 171
-- On LET shift to state 172
-- On IDENT shift to state 175
-- On CHOICE shift to state 177
-- On gformat shift to state 189

State 175:
gformat -> IDENT . LPAREN gformatseq RPAREN [ SEMI RPAREN RBRACKET IN COMMA ]
gformat -> IDENT . [ SEMI RPAREN RBRACKET IN COMMA ]
-- On LPAREN shift to state 176
-- On SEMI reduce production gformat -> IDENT
-- On RPAREN reduce production gformat -> IDENT
-- On RBRACKET reduce production gformat -> IDENT
-- On IN reduce production gformat -> IDENT
-- On COMMA reduce production gformat -> IDENT

State 176:
gformat -> IDENT LPAREN . gformatseq RPAREN [ SEMI RPAREN RBRACKET IN COMMA ]
-- On STAR shift to state 163
-- On NEW shift to state 165
-- On LPAREN shift to state 171
-- On LET shift to state 172
-- On IDENT shift to state 175
-- On CHOICE shift to state 177
-- On negformatseq shift to state 183
-- On gformatseq shift to state 184
-- On gformat shift to state 186
-- On RPAREN reduce production gformatseq -> 

State 177:
gformat -> CHOICE . LBRACKET gformat COMMA gformat RBRACKET [ SEMI RPAREN RBRACKET IN COMMA ]
-- On LBRACKET shift to state 178

State 178:
gformat -> CHOICE LBRACKET . gformat COMMA gformat RBRACKET [ SEMI RPAREN RBRACKET IN COMMA ]
-- On STAR shift to state 163
-- On NEW shift to state 165
-- On LPAREN shift to state 171
-- On LET shift to state 172
-- On IDENT shift to state 175
-- On CHOICE shift to state 177
-- On gformat shift to state 179

State 179:
gformat -> CHOICE LBRACKET gformat . COMMA gformat RBRACKET [ SEMI RPAREN RBRACKET IN COMMA ]
-- On COMMA shift to state 180

State 180:
gformat -> CHOICE LBRACKET gformat COMMA . gformat RBRACKET [ SEMI RPAREN RBRACKET IN COMMA ]
-- On STAR shift to state 163
-- On NEW shift to state 165
-- On LPAREN shift to state 171
-- On LET shift to state 172
-- On IDENT shift to state 175
-- On CHOICE shift to state 177
-- On gformat shift to state 181

State 181:
gformat -> CHOICE LBRACKET gformat COMMA gformat . RBRACKET [ SEMI RPAREN RBRACKET IN COMMA ]
-- On RBRACKET shift to state 182

State 182:
gformat -> CHOICE LBRACKET gformat COMMA gformat RBRACKET . [ SEMI RPAREN RBRACKET IN COMMA ]
-- On SEMI reduce production gformat -> CHOICE LBRACKET gformat COMMA gformat RBRACKET
-- On RPAREN reduce production gformat -> CHOICE LBRACKET gformat COMMA gformat RBRACKET
-- On RBRACKET reduce production gformat -> CHOICE LBRACKET gformat COMMA gformat RBRACKET
-- On IN reduce production gformat -> CHOICE LBRACKET gformat COMMA gformat RBRACKET
-- On COMMA reduce production gformat -> CHOICE LBRACKET gformat COMMA gformat RBRACKET

State 183:
gformatseq -> negformatseq . [ RPAREN ]
-- On RPAREN reduce production gformatseq -> negformatseq

State 184:
gformat -> IDENT LPAREN gformatseq . RPAREN [ SEMI RPAREN RBRACKET IN COMMA ]
-- On RPAREN shift to state 185

State 185:
gformat -> IDENT LPAREN gformatseq RPAREN . [ SEMI RPAREN RBRACKET IN COMMA ]
-- On SEMI reduce production gformat -> IDENT LPAREN gformatseq RPAREN
-- On RPAREN reduce production gformat -> IDENT LPAREN gformatseq RPAREN
-- On RBRACKET reduce production gformat -> IDENT LPAREN gformatseq RPAREN
-- On IN reduce production gformat -> IDENT LPAREN gformatseq RPAREN
-- On COMMA reduce production gformat -> IDENT LPAREN gformatseq RPAREN

State 186:
negformatseq -> gformat . COMMA negformatseq [ RPAREN ]
negformatseq -> gformat . [ RPAREN ]
-- On COMMA shift to state 187
-- On RPAREN reduce production negformatseq -> gformat

State 187:
negformatseq -> gformat COMMA . negformatseq [ RPAREN ]
-- On STAR shift to state 163
-- On NEW shift to state 165
-- On LPAREN shift to state 171
-- On LET shift to state 172
-- On IDENT shift to state 175
-- On CHOICE shift to state 177
-- On negformatseq shift to state 188
-- On gformat shift to state 186

State 188:
negformatseq -> gformat COMMA negformatseq . [ RPAREN ]
-- On RPAREN reduce production negformatseq -> gformat COMMA negformatseq

State 189:
gformat -> LET IDENT EQUAL gformat . IN gformat [ SEMI RPAREN RBRACKET IN COMMA ]
-- On IN shift to state 190

State 190:
gformat -> LET IDENT EQUAL gformat IN . gformat [ SEMI RPAREN RBRACKET IN COMMA ]
-- On STAR shift to state 163
-- On NEW shift to state 165
-- On LPAREN shift to state 171
-- On LET shift to state 172
-- On IDENT shift to state 175
-- On CHOICE shift to state 177
-- On gformat shift to state 191

State 191:
gformat -> LET IDENT EQUAL gformat IN gformat . [ SEMI RPAREN RBRACKET IN COMMA ]
-- On SEMI reduce production gformat -> LET IDENT EQUAL gformat IN gformat
-- On RPAREN reduce production gformat -> LET IDENT EQUAL gformat IN gformat
-- On RBRACKET reduce production gformat -> LET IDENT EQUAL gformat IN gformat
-- On IN reduce production gformat -> LET IDENT EQUAL gformat IN gformat
-- On COMMA reduce production gformat -> LET IDENT EQUAL gformat IN gformat

State 192:
gformat -> LPAREN gformatseq . RPAREN [ SEMI RPAREN RBRACKET IN COMMA ]
-- On RPAREN shift to state 193

State 193:
gformat -> LPAREN gformatseq RPAREN . [ SEMI RPAREN RBRACKET IN COMMA ]
-- On SEMI reduce production gformat -> LPAREN gformatseq RPAREN
-- On RPAREN reduce production gformat -> LPAREN gformatseq RPAREN
-- On RBRACKET reduce production gformat -> LPAREN gformatseq RPAREN
-- On IN reduce production gformat -> LPAREN gformatseq RPAREN
-- On COMMA reduce production gformat -> LPAREN gformatseq RPAREN

State 194:
fnesbindingseq -> REPL INT EQUAL gformat . SEMI fnesbindingseq [ RBRACKET ]
fnesbindingseq -> REPL INT EQUAL gformat . [ RBRACKET ]
-- On SEMI shift to state 195
-- On RBRACKET reduce production fnesbindingseq -> REPL INT EQUAL gformat

State 195:
fnesbindingseq -> REPL INT EQUAL gformat SEMI . fnesbindingseq [ RBRACKET ]
-- On REPL shift to state 168
-- On IDENT shift to state 196
-- On fnesbindingseq shift to state 201

State 196:
fnesbindingseq -> IDENT . EQUAL gformat SEMI fnesbindingseq [ RBRACKET ]
fnesbindingseq -> IDENT . EQUAL gformat [ RBRACKET ]
-- On EQUAL shift to state 197

State 197:
fnesbindingseq -> IDENT EQUAL . gformat SEMI fnesbindingseq [ RBRACKET ]
fnesbindingseq -> IDENT EQUAL . gformat [ RBRACKET ]
-- On STAR shift to state 163
-- On NEW shift to state 165
-- On LPAREN shift to state 171
-- On LET shift to state 172
-- On IDENT shift to state 175
-- On CHOICE shift to state 177
-- On gformat shift to state 198

State 198:
fnesbindingseq -> IDENT EQUAL gformat . SEMI fnesbindingseq [ RBRACKET ]
fnesbindingseq -> IDENT EQUAL gformat . [ RBRACKET ]
-- On SEMI shift to state 199
-- On RBRACKET reduce production fnesbindingseq -> IDENT EQUAL gformat

State 199:
fnesbindingseq -> IDENT EQUAL gformat SEMI . fnesbindingseq [ RBRACKET ]
-- On REPL shift to state 168
-- On IDENT shift to state 196
-- On fnesbindingseq shift to state 200

State 200:
fnesbindingseq -> IDENT EQUAL gformat SEMI fnesbindingseq . [ RBRACKET ]
-- On RBRACKET reduce production fnesbindingseq -> IDENT EQUAL gformat SEMI fnesbindingseq

State 201:
fnesbindingseq -> REPL INT EQUAL gformat SEMI fnesbindingseq . [ RBRACKET ]
-- On RBRACKET reduce production fnesbindingseq -> REPL INT EQUAL gformat SEMI fnesbindingseq

State 202:
fbindingseq -> fnesbindingseq . [ RBRACKET ]
-- On RBRACKET reduce production fbindingseq -> fnesbindingseq

State 203:
gformat -> NEW IDENT LBRACKET fbindingseq . RBRACKET [ SEMI RPAREN RBRACKET IN COMMA ]
-- On RBRACKET shift to state 204

State 204:
gformat -> NEW IDENT LBRACKET fbindingseq RBRACKET . [ SEMI RPAREN RBRACKET IN COMMA ]
-- On SEMI reduce production gformat -> NEW IDENT LBRACKET fbindingseq RBRACKET
-- On RPAREN reduce production gformat -> NEW IDENT LBRACKET fbindingseq RBRACKET
-- On RBRACKET reduce production gformat -> NEW IDENT LBRACKET fbindingseq RBRACKET
-- On IN reduce production gformat -> NEW IDENT LBRACKET fbindingseq RBRACKET
-- On COMMA reduce production gformat -> NEW IDENT LBRACKET fbindingseq RBRACKET

State 205:
tfnebindingseq -> TABLE LPAREN gformatseq . RPAREN optphase optint [ DOT ]
-- On RPAREN shift to state 206

State 206:
tfnebindingseq -> TABLE LPAREN gformatseq RPAREN . optphase optint [ DOT ]
-- On PHASE shift to state 207
-- On optphase shift to state 209
-- On SLASH reduce production optphase -> 
-- On DOT reduce production optphase -> 

State 207:
optphase -> PHASE . INT [ SLASH DOT ]
-- On INT shift to state 208

State 208:
optphase -> PHASE INT . [ SLASH DOT ]
-- On SLASH reduce production optphase -> PHASE INT
-- On DOT reduce production optphase -> PHASE INT

State 209:
tfnebindingseq -> TABLE LPAREN gformatseq RPAREN optphase . optint [ DOT ]
-- On SLASH shift to state 210
-- On optint shift to state 212
-- On DOT reduce production optint -> 

State 210:
optint -> SLASH . INT [ DOT ]
-- On INT shift to state 211

State 211:
optint -> SLASH INT . [ DOT ]
-- On DOT reduce production optint -> SLASH INT

State 212:
tfnebindingseq -> TABLE LPAREN gformatseq RPAREN optphase optint . [ DOT ]
-- On DOT reduce production tfnebindingseq -> TABLE LPAREN gformatseq RPAREN optphase optint

State 213:
tfnebindingseq -> LET . IDENT EQUAL gformat IN tfnebindingseq [ DOT ]
-- On IDENT shift to state 214

State 214:
tfnebindingseq -> LET IDENT . EQUAL gformat IN tfnebindingseq [ DOT ]
-- On EQUAL shift to state 215

State 215:
tfnebindingseq -> LET IDENT EQUAL . gformat IN tfnebindingseq [ DOT ]
-- On STAR shift to state 163
-- On NEW shift to state 165
-- On LPAREN shift to state 171
-- On LET shift to state 172
-- On IDENT shift to state 175
-- On CHOICE shift to state 177
-- On gformat shift to state 216

State 216:
tfnebindingseq -> LET IDENT EQUAL gformat . IN tfnebindingseq [ DOT ]
-- On IN shift to state 217

State 217:
tfnebindingseq -> LET IDENT EQUAL gformat IN . tfnebindingseq [ DOT ]
-- On TABLE shift to state 161
-- On LET shift to state 213
-- On IDENT shift to state 218
-- On tfnebindingseq shift to state 225

State 218:
tfnebindingseq -> IDENT . LPAREN gformatseq RPAREN optphase optint [ DOT ]
tfnebindingseq -> IDENT . optint [ DOT ]
-- On SLASH shift to state 210
-- On LPAREN shift to state 219
-- On optint shift to state 224
-- On DOT reduce production optint -> 

State 219:
tfnebindingseq -> IDENT LPAREN . gformatseq RPAREN optphase optint [ DOT ]
-- On STAR shift to state 163
-- On NEW shift to state 165
-- On LPAREN shift to state 171
-- On LET shift to state 172
-- On IDENT shift to state 175
-- On CHOICE shift to state 177
-- On negformatseq shift to state 183
-- On gformatseq shift to state 220
-- On gformat shift to state 186
-- On RPAREN reduce production gformatseq -> 

State 220:
tfnebindingseq -> IDENT LPAREN gformatseq . RPAREN optphase optint [ DOT ]
-- On RPAREN shift to state 221

State 221:
tfnebindingseq -> IDENT LPAREN gformatseq RPAREN . optphase optint [ DOT ]
-- On PHASE shift to state 207
-- On optphase shift to state 222
-- On SLASH reduce production optphase -> 
-- On DOT reduce production optphase -> 

State 222:
tfnebindingseq -> IDENT LPAREN gformatseq RPAREN optphase . optint [ DOT ]
-- On SLASH shift to state 210
-- On optint shift to state 223
-- On DOT reduce production optint -> 

State 223:
tfnebindingseq -> IDENT LPAREN gformatseq RPAREN optphase optint . [ DOT ]
-- On DOT reduce production tfnebindingseq -> IDENT LPAREN gformatseq RPAREN optphase optint

State 224:
tfnebindingseq -> IDENT optint . [ DOT ]
-- On DOT reduce production tfnebindingseq -> IDENT optint

State 225:
tfnebindingseq -> LET IDENT EQUAL gformat IN tfnebindingseq . [ DOT ]
-- On DOT reduce production tfnebindingseq -> LET IDENT EQUAL gformat IN tfnebindingseq

State 226:
nevartype -> IDENT . COLON typeid COMMA nevartype [ SEMI ]
nevartype -> IDENT . COLON typeid [ SEMI ]
tfnebindingseq -> IDENT . LPAREN gformatseq RPAREN optphase optint [ DOT ]
tfnebindingseq -> IDENT . optint [ DOT ]
-- On SLASH shift to state 210
-- On LPAREN shift to state 219
-- On COLON shift to state 30
-- On optint shift to state 224
-- On DOT reduce production optint -> 

State 227:
lib -> NOUNIF tfnebindingseq . DOT lib [ RBRACE PROCESS EQUIVALENCE ]
-- On DOT shift to state 228

State 228:
lib -> NOUNIF tfnebindingseq DOT . lib [ RBRACE PROCESS EQUIVALENCE ]
-- On WEAKSECRET shift to state 1
-- On TYPE shift to state 4
-- On TABLE shift to state 14
-- On SET shift to state 22
-- On REDUCTION shift to state 27
-- On QUERY shift to state 39
-- On PROOF shift to state 126
-- On PROBA shift to state 146
-- On PREDICATE shift to state 149
-- On PARAM shift to state 156
-- On NOUNIF shift to state 160
-- On NOT shift to state 229
-- On NONINTERF shift to state 234
-- On LETFUN shift to state 276
-- On LET shift to state 412
-- On IMPLEMENTATION shift to state 547
-- On FUN shift to state 594
-- On FREE shift to state 611
-- On EXPAND shift to state 617
-- On EVENT shift to state 623
-- On EQUATION shift to state 629
-- On ELIMTRUE shift to state 637
-- On DEFINE shift to state 641
-- On CONST shift to state 647
-- On CLAUSES shift to state 653
-- On CHANNEL shift to state 655
-- On lib shift to state 735
-- On RBRACE reduce production lib -> 
-- On PROCESS reduce production lib -> 
-- On EQUIVALENCE reduce production lib -> 

State 229:
lib -> NOT . nevartype SEMI gterm DOT lib [ RBRACE PROCESS EQUIVALENCE ]
lib -> NOT . gterm DOT lib [ RBRACE PROCESS EQUIVALENCE ]
-- On TABLE shift to state 40
-- On NOT shift to state 42
-- On NEW shift to state 44
-- On LPAREN shift to state 50
-- On LET shift to state 51
-- On INJEVENT shift to state 54
-- On IDENT shift to state 123
-- On EVENT shift to state 58
-- On CHOICE shift to state 60
-- On nevartype shift to state 230
-- On gterm shift to state 732

State 230:
lib -> NOT nevartype . SEMI gterm DOT lib [ RBRACE PROCESS EQUIVALENCE ]
-- On SEMI shift to state 231

State 231:
lib -> NOT nevartype SEMI . gterm DOT lib [ RBRACE PROCESS EQUIVALENCE ]
-- On TABLE shift to state 40
-- On NOT shift to state 42
-- On NEW shift to state 44
-- On LPAREN shift to state 50
-- On LET shift to state 51
-- On INJEVENT shift to state 54
-- On IDENT shift to state 56
-- On EVENT shift to state 58
-- On CHOICE shift to state 60
-- On gterm shift to state 232

State 232:
gterm -> gterm . EQUAL gterm [ WEDGE OR EQUAL DOT DIFF BEFORE ]
gterm -> gterm . DIFF gterm [ WEDGE OR EQUAL DOT DIFF BEFORE ]
gterm -> gterm . OR gterm [ WEDGE OR EQUAL DOT DIFF BEFORE ]
gterm -> gterm . WEDGE gterm [ WEDGE OR EQUAL DOT DIFF BEFORE ]
gterm -> gterm . BEFORE gterm [ WEDGE OR EQUAL DOT DIFF BEFORE ]
lib -> NOT nevartype SEMI gterm . DOT lib [ RBRACE PROCESS EQUIVALENCE ]
-- On WEDGE shift to state 63
-- On OR shift to state 69
-- On EQUAL shift to state 65
-- On DOT shift to state 233
-- On DIFF shift to state 67
-- On BEFORE shift to state 74

State 233:
lib -> NOT nevartype SEMI gterm DOT . lib [ RBRACE PROCESS EQUIVALENCE ]
-- On WEAKSECRET shift to state 1
-- On TYPE shift to state 4
-- On TABLE shift to state 14
-- On SET shift to state 22
-- On REDUCTION shift to state 27
-- On QUERY shift to state 39
-- On PROOF shift to state 126
-- On PROBA shift to state 146
-- On PREDICATE shift to state 149
-- On PARAM shift to state 156
-- On NOUNIF shift to state 160
-- On NOT shift to state 229
-- On NONINTERF shift to state 234
-- On LETFUN shift to state 276
-- On LET shift to state 412
-- On IMPLEMENTATION shift to state 547
-- On FUN shift to state 594
-- On FREE shift to state 611
-- On EXPAND shift to state 617
-- On EVENT shift to state 623
-- On EQUATION shift to state 629
-- On ELIMTRUE shift to state 637
-- On DEFINE shift to state 641
-- On CONST shift to state 647
-- On CLAUSES shift to state 653
-- On CHANNEL shift to state 655
-- On lib shift to state 731
-- On RBRACE reduce production lib -> 
-- On PROCESS reduce production lib -> 
-- On EQUIVALENCE reduce production lib -> 

State 234:
lib -> NONINTERF . nevartype SEMI niseq DOT lib [ RBRACE PROCESS EQUIVALENCE ]
lib -> NONINTERF . niseq DOT lib [ RBRACE PROCESS EQUIVALENCE ]
-- On IDENT shift to state 235
-- On niseq shift to state 274
-- On ni shift to state 722
-- On nevartype shift to state 726

State 235:
nevartype -> IDENT . COLON typeid COMMA nevartype [ SEMI ]
nevartype -> IDENT . COLON typeid [ SEMI ]
ni -> IDENT . AMONG LPAREN netermseq RPAREN [ DOT COMMA ]
ni -> IDENT . [ DOT COMMA ]
-- On COLON shift to state 30
-- On AMONG shift to state 236
-- On DOT reduce production ni -> IDENT
-- On COMMA reduce production ni -> IDENT

State 236:
ni -> IDENT AMONG . LPAREN netermseq RPAREN [ DOT COMMA ]
-- On LPAREN shift to state 237

State 237:
ni -> IDENT AMONG LPAREN . netermseq RPAREN [ DOT COMMA ]
-- On PROJECTION shift to state 238
-- On NOT shift to state 240
-- On LPAREN shift to state 242
-- On IDENT shift to state 243
-- On FAIL shift to state 245
-- On CHOICE shift to state 246
-- On term shift to state 262
-- On netermseq shift to state 272

State 238:
term -> PROJECTION . LPAREN term RPAREN [ WEDGE SEMI RPAREN RED RBRACKET OTHERWISE OR LBRACKET EQUIVEQ EQUIV EQUAL DOT DIFF COMMA # ]
-- On LPAREN shift to state 239

State 239:
term -> PROJECTION LPAREN . term RPAREN [ WEDGE SEMI RPAREN RED RBRACKET OTHERWISE OR LBRACKET EQUIVEQ EQUIV EQUAL DOT DIFF COMMA # ]
-- On PROJECTION shift to state 238
-- On NOT shift to state 240
-- On LPAREN shift to state 242
-- On IDENT shift to state 243
-- On FAIL shift to state 245
-- On CHOICE shift to state 246
-- On term shift to state 270

State 240:
term -> NOT . LPAREN term RPAREN [ WEDGE SEMI RPAREN RED RBRACKET OTHERWISE OR LBRACKET EQUIVEQ EQUIV EQUAL DOT DIFF COMMA # ]
-- On LPAREN shift to state 241

State 241:
term -> NOT LPAREN . term RPAREN [ WEDGE SEMI RPAREN RED RBRACKET OTHERWISE OR LBRACKET EQUIVEQ EQUIV EQUAL DOT DIFF COMMA # ]
-- On PROJECTION shift to state 238
-- On NOT shift to state 240
-- On LPAREN shift to state 242
-- On IDENT shift to state 243
-- On FAIL shift to state 245
-- On CHOICE shift to state 246
-- On term shift to state 268

State 242:
term -> LPAREN . termseq RPAREN [ WEDGE SEMI RPAREN RED RBRACKET OTHERWISE OR LBRACKET EQUIVEQ EQUIV EQUAL DOT DIFF COMMA # ]
-- On PROJECTION shift to state 238
-- On NOT shift to state 240
-- On LPAREN shift to state 242
-- On IDENT shift to state 243
-- On FAIL shift to state 245
-- On CHOICE shift to state 246
-- On termseq shift to state 266
-- On term shift to state 262
-- On netermseq shift to state 265
-- On RPAREN reduce production termseq -> 

State 243:
term -> IDENT . LPAREN termseq RPAREN [ WEDGE SEMI RPAREN RED RBRACKET OTHERWISE OR LBRACKET EQUIVEQ EQUIV EQUAL DOT DIFF COMMA # ]
term -> IDENT . [ WEDGE SEMI RPAREN RED RBRACKET OTHERWISE OR LBRACKET EQUIVEQ EQUIV EQUAL DOT DIFF COMMA # ]
-- On LPAREN shift to state 244
-- On WEDGE reduce production term -> IDENT
-- On SEMI reduce production term -> IDENT
-- On RPAREN reduce production term -> IDENT
-- On RED reduce production term -> IDENT
-- On RBRACKET reduce production term -> IDENT
-- On OTHERWISE reduce production term -> IDENT
-- On OR reduce production term -> IDENT
-- On LBRACKET reduce production term -> IDENT
-- On EQUIVEQ reduce production term -> IDENT
-- On EQUIV reduce production term -> IDENT
-- On EQUAL reduce production term -> IDENT
-- On DOT reduce production term -> IDENT
-- On DIFF reduce production term -> IDENT
-- On COMMA reduce production term -> IDENT
-- On # reduce production term -> IDENT

State 244:
term -> IDENT LPAREN . termseq RPAREN [ WEDGE SEMI RPAREN RED RBRACKET OTHERWISE OR LBRACKET EQUIVEQ EQUIV EQUAL DOT DIFF COMMA # ]
-- On PROJECTION shift to state 238
-- On NOT shift to state 240
-- On LPAREN shift to state 242
-- On IDENT shift to state 243
-- On FAIL shift to state 245
-- On CHOICE shift to state 246
-- On termseq shift to state 260
-- On term shift to state 262
-- On netermseq shift to state 265
-- On RPAREN reduce production termseq -> 

State 245:
term -> FAIL . [ WEDGE SEMI RPAREN RED RBRACKET OTHERWISE OR LBRACKET EQUIVEQ EQUIV EQUAL DOT DIFF COMMA # ]
-- On WEDGE reduce production term -> FAIL
-- On SEMI reduce production term -> FAIL
-- On RPAREN reduce production term -> FAIL
-- On RED reduce production term -> FAIL
-- On RBRACKET reduce production term -> FAIL
-- On OTHERWISE reduce production term -> FAIL
-- On OR reduce production term -> FAIL
-- On LBRACKET reduce production term -> FAIL
-- On EQUIVEQ reduce production term -> FAIL
-- On EQUIV reduce production term -> FAIL
-- On EQUAL reduce production term -> FAIL
-- On DOT reduce production term -> FAIL
-- On DIFF reduce production term -> FAIL
-- On COMMA reduce production term -> FAIL
-- On # reduce production term -> FAIL

State 246:
term -> CHOICE . LBRACKET term COMMA term RBRACKET [ WEDGE SEMI RPAREN RED RBRACKET OTHERWISE OR LBRACKET EQUIVEQ EQUIV EQUAL DOT DIFF COMMA # ]
-- On LBRACKET shift to state 247

State 247:
term -> CHOICE LBRACKET . term COMMA term RBRACKET [ WEDGE SEMI RPAREN RED RBRACKET OTHERWISE OR LBRACKET EQUIVEQ EQUIV EQUAL DOT DIFF COMMA # ]
-- On PROJECTION shift to state 238
-- On NOT shift to state 240
-- On LPAREN shift to state 242
-- On IDENT shift to state 243
-- On FAIL shift to state 245
-- On CHOICE shift to state 246
-- On term shift to state 248

State 248:
term -> CHOICE LBRACKET term . COMMA term RBRACKET [ WEDGE SEMI RPAREN RED RBRACKET OTHERWISE OR LBRACKET EQUIVEQ EQUIV EQUAL DOT DIFF COMMA # ]
term -> term . EQUAL term [ WEDGE OR EQUAL DIFF COMMA ]
term -> term . DIFF term [ WEDGE OR EQUAL DIFF COMMA ]
term -> term . OR term [ WEDGE OR EQUAL DIFF COMMA ]
term -> term . WEDGE term [ WEDGE OR EQUAL DIFF COMMA ]
-- On WEDGE shift to state 249
-- On OR shift to state 255
-- On EQUAL shift to state 251
-- On DIFF shift to state 253
-- On COMMA shift to state 257

State 249:
term -> term WEDGE . term [ WEDGE SEMI RPAREN RED RBRACKET OTHERWISE OR LBRACKET EQUIVEQ EQUIV EQUAL DOT DIFF COMMA # ]
-- On PROJECTION shift to state 238
-- On NOT shift to state 240
-- On LPAREN shift to state 242
-- On IDENT shift to state 243
-- On FAIL shift to state 245
-- On CHOICE shift to state 246
-- On term shift to state 250

State 250:
term -> term . EQUAL term [ WEDGE SEMI RPAREN RED RBRACKET OTHERWISE OR LBRACKET EQUIVEQ EQUIV EQUAL DOT DIFF COMMA # ]
term -> term . DIFF term [ WEDGE SEMI RPAREN RED RBRACKET OTHERWISE OR LBRACKET EQUIVEQ EQUIV EQUAL DOT DIFF COMMA # ]
term -> term . OR term [ WEDGE SEMI RPAREN RED RBRACKET OTHERWISE OR LBRACKET EQUIVEQ EQUIV EQUAL DOT DIFF COMMA # ]
term -> term . WEDGE term [ WEDGE SEMI RPAREN RED RBRACKET OTHERWISE OR LBRACKET EQUIVEQ EQUIV EQUAL DOT DIFF COMMA # ]
term -> term WEDGE term . [ WEDGE SEMI RPAREN RED RBRACKET OTHERWISE OR LBRACKET EQUIVEQ EQUIV EQUAL DOT DIFF COMMA # ]
-- On WEDGE shift to state 249
-- On EQUAL shift to state 251
-- On DIFF shift to state 253
-- On SEMI reduce production term -> term WEDGE term
-- On RPAREN reduce production term -> term WEDGE term
-- On RED reduce production term -> term WEDGE term
-- On RBRACKET reduce production term -> term WEDGE term
-- On OTHERWISE reduce production term -> term WEDGE term
-- On OR reduce production term -> term WEDGE term
-- On LBRACKET reduce production term -> term WEDGE term
-- On EQUIVEQ reduce production term -> term WEDGE term
-- On EQUIV reduce production term -> term WEDGE term
-- On DOT reduce production term -> term WEDGE term
-- On COMMA reduce production term -> term WEDGE term
-- On # reduce production term -> term WEDGE term

State 251:
term -> term EQUAL . term [ WEDGE SEMI RPAREN RED RBRACKET OTHERWISE OR LBRACKET EQUIVEQ EQUIV EQUAL DOT DIFF COMMA # ]
-- On PROJECTION shift to state 238
-- On NOT shift to state 240
-- On LPAREN shift to state 242
-- On IDENT shift to state 243
-- On FAIL shift to state 245
-- On CHOICE shift to state 246
-- On term shift to state 252

State 252:
term -> term . EQUAL term [ WEDGE SEMI RPAREN RED RBRACKET OTHERWISE OR LBRACKET EQUIVEQ EQUIV EQUAL DOT DIFF COMMA # ]
term -> term EQUAL term . [ WEDGE SEMI RPAREN RED RBRACKET OTHERWISE OR LBRACKET EQUIVEQ EQUIV EQUAL DOT DIFF COMMA # ]
term -> term . DIFF term [ WEDGE SEMI RPAREN RED RBRACKET OTHERWISE OR LBRACKET EQUIVEQ EQUIV EQUAL DOT DIFF COMMA # ]
term -> term . OR term [ WEDGE SEMI RPAREN RED RBRACKET OTHERWISE OR LBRACKET EQUIVEQ EQUIV EQUAL DOT DIFF COMMA # ]
term -> term . WEDGE term [ WEDGE SEMI RPAREN RED RBRACKET OTHERWISE OR LBRACKET EQUIVEQ EQUIV EQUAL DOT DIFF COMMA # ]
-- On DIFF shift to state 253
-- On WEDGE reduce production term -> term EQUAL term
-- On SEMI reduce production term -> term EQUAL term
-- On RPAREN reduce production term -> term EQUAL term
-- On RED reduce production term -> term EQUAL term
-- On RBRACKET reduce production term -> term EQUAL term
-- On OTHERWISE reduce production term -> term EQUAL term
-- On OR reduce production term -> term EQUAL term
-- On LBRACKET reduce production term -> term EQUAL term
-- On EQUIVEQ reduce production term -> term EQUAL term
-- On EQUIV reduce production term -> term EQUAL term
-- On DOT reduce production term -> term EQUAL term
-- On COMMA reduce production term -> term EQUAL term
-- On # reduce production term -> term EQUAL term

State 253:
term -> term DIFF . term [ WEDGE SEMI RPAREN RED RBRACKET OTHERWISE OR LBRACKET EQUIVEQ EQUIV EQUAL DOT DIFF COMMA # ]
-- On PROJECTION shift to state 238
-- On NOT shift to state 240
-- On LPAREN shift to state 242
-- On IDENT shift to state 243
-- On FAIL shift to state 245
-- On CHOICE shift to state 246
-- On term shift to state 254

State 254:
term -> term . EQUAL term [ WEDGE SEMI RPAREN RED RBRACKET OTHERWISE OR LBRACKET EQUIVEQ EQUIV EQUAL DOT DIFF COMMA # ]
term -> term . DIFF term [ WEDGE SEMI RPAREN RED RBRACKET OTHERWISE OR LBRACKET EQUIVEQ EQUIV EQUAL DOT DIFF COMMA # ]
term -> term DIFF term . [ WEDGE SEMI RPAREN RED RBRACKET OTHERWISE OR LBRACKET EQUIVEQ EQUIV EQUAL DOT DIFF COMMA # ]
term -> term . OR term [ WEDGE SEMI RPAREN RED RBRACKET OTHERWISE OR LBRACKET EQUIVEQ EQUIV EQUAL DOT DIFF COMMA # ]
term -> term . WEDGE term [ WEDGE SEMI RPAREN RED RBRACKET OTHERWISE OR LBRACKET EQUIVEQ EQUIV EQUAL DOT DIFF COMMA # ]
-- On WEDGE reduce production term -> term DIFF term
-- On SEMI reduce production term -> term DIFF term
-- On RPAREN reduce production term -> term DIFF term
-- On RED reduce production term -> term DIFF term
-- On RBRACKET reduce production term -> term DIFF term
-- On OTHERWISE reduce production term -> term DIFF term
-- On OR reduce production term -> term DIFF term
-- On LBRACKET reduce production term -> term DIFF term
-- On EQUIVEQ reduce production term -> term DIFF term
-- On EQUIV reduce production term -> term DIFF term
-- On EQUAL reduce production term -> term DIFF term
-- On DOT reduce production term -> term DIFF term
-- On COMMA reduce production term -> term DIFF term
-- On # reduce production term -> term DIFF term

State 255:
term -> term OR . term [ WEDGE SEMI RPAREN RED RBRACKET OTHERWISE OR LBRACKET EQUIVEQ EQUIV EQUAL DOT DIFF COMMA # ]
-- On PROJECTION shift to state 238
-- On NOT shift to state 240
-- On LPAREN shift to state 242
-- On IDENT shift to state 243
-- On FAIL shift to state 245
-- On CHOICE shift to state 246
-- On term shift to state 256

State 256:
term -> term . EQUAL term [ WEDGE SEMI RPAREN RED RBRACKET OTHERWISE OR LBRACKET EQUIVEQ EQUIV EQUAL DOT DIFF COMMA # ]
term -> term . DIFF term [ WEDGE SEMI RPAREN RED RBRACKET OTHERWISE OR LBRACKET EQUIVEQ EQUIV EQUAL DOT DIFF COMMA # ]
term -> term . OR term [ WEDGE SEMI RPAREN RED RBRACKET OTHERWISE OR LBRACKET EQUIVEQ EQUIV EQUAL DOT DIFF COMMA # ]
term -> term OR term . [ WEDGE SEMI RPAREN RED RBRACKET OTHERWISE OR LBRACKET EQUIVEQ EQUIV EQUAL DOT DIFF COMMA # ]
term -> term . WEDGE term [ WEDGE SEMI RPAREN RED RBRACKET OTHERWISE OR LBRACKET EQUIVEQ EQUIV EQUAL DOT DIFF COMMA # ]
-- On WEDGE shift to state 249
-- On OR shift to state 255
-- On EQUAL shift to state 251
-- On DIFF shift to state 253
-- On SEMI reduce production term -> term OR term
-- On RPAREN reduce production term -> term OR term
-- On RED reduce production term -> term OR term
-- On RBRACKET reduce production term -> term OR term
-- On OTHERWISE reduce production term -> term OR term
-- On LBRACKET reduce production term -> term OR term
-- On EQUIVEQ reduce production term -> term OR term
-- On EQUIV reduce production term -> term OR term
-- On DOT reduce production term -> term OR term
-- On COMMA reduce production term -> term OR term
-- On # reduce production term -> term OR term

State 257:
term -> CHOICE LBRACKET term COMMA . term RBRACKET [ WEDGE SEMI RPAREN RED RBRACKET OTHERWISE OR LBRACKET EQUIVEQ EQUIV EQUAL DOT DIFF COMMA # ]
-- On PROJECTION shift to state 238
-- On NOT shift to state 240
-- On LPAREN shift to state 242
-- On IDENT shift to state 243
-- On FAIL shift to state 245
-- On CHOICE shift to state 246
-- On term shift to state 258

State 258:
term -> CHOICE LBRACKET term COMMA term . RBRACKET [ WEDGE SEMI RPAREN RED RBRACKET OTHERWISE OR LBRACKET EQUIVEQ EQUIV EQUAL DOT DIFF COMMA # ]
term -> term . EQUAL term [ WEDGE RBRACKET OR EQUAL DIFF ]
term -> term . DIFF term [ WEDGE RBRACKET OR EQUAL DIFF ]
term -> term . OR term [ WEDGE RBRACKET OR EQUAL DIFF ]
term -> term . WEDGE term [ WEDGE RBRACKET OR EQUAL DIFF ]
-- On WEDGE shift to state 249
-- On RBRACKET shift to state 259
-- On OR shift to state 255
-- On EQUAL shift to state 251
-- On DIFF shift to state 253

State 259:
term -> CHOICE LBRACKET term COMMA term RBRACKET . [ WEDGE SEMI RPAREN RED RBRACKET OTHERWISE OR LBRACKET EQUIVEQ EQUIV EQUAL DOT DIFF COMMA # ]
-- On WEDGE reduce production term -> CHOICE LBRACKET term COMMA term RBRACKET
-- On SEMI reduce production term -> CHOICE LBRACKET term COMMA term RBRACKET
-- On RPAREN reduce production term -> CHOICE LBRACKET term COMMA term RBRACKET
-- On RED reduce production term -> CHOICE LBRACKET term COMMA term RBRACKET
-- On RBRACKET reduce production term -> CHOICE LBRACKET term COMMA term RBRACKET
-- On OTHERWISE reduce production term -> CHOICE LBRACKET term COMMA term RBRACKET
-- On OR reduce production term -> CHOICE LBRACKET term COMMA term RBRACKET
-- On LBRACKET reduce production term -> CHOICE LBRACKET term COMMA term RBRACKET
-- On EQUIVEQ reduce production term -> CHOICE LBRACKET term COMMA term RBRACKET
-- On EQUIV reduce production term -> CHOICE LBRACKET term COMMA term RBRACKET
-- On EQUAL reduce production term -> CHOICE LBRACKET term COMMA term RBRACKET
-- On DOT reduce production term -> CHOICE LBRACKET term COMMA term RBRACKET
-- On DIFF reduce production term -> CHOICE LBRACKET term COMMA term RBRACKET
-- On COMMA reduce production term -> CHOICE LBRACKET term COMMA term RBRACKET
-- On # reduce production term -> CHOICE LBRACKET term COMMA term RBRACKET

State 260:
term -> IDENT LPAREN termseq . RPAREN [ WEDGE SEMI RPAREN RED RBRACKET OTHERWISE OR LBRACKET EQUIVEQ EQUIV EQUAL DOT DIFF COMMA # ]
-- On RPAREN shift to state 261

State 261:
term -> IDENT LPAREN termseq RPAREN . [ WEDGE SEMI RPAREN RED RBRACKET OTHERWISE OR LBRACKET EQUIVEQ EQUIV EQUAL DOT DIFF COMMA # ]
-- On WEDGE reduce production term -> IDENT LPAREN termseq RPAREN
-- On SEMI reduce production term -> IDENT LPAREN termseq RPAREN
-- On RPAREN reduce production term -> IDENT LPAREN termseq RPAREN
-- On RED reduce production term -> IDENT LPAREN termseq RPAREN
-- On RBRACKET reduce production term -> IDENT LPAREN termseq RPAREN
-- On OTHERWISE reduce production term -> IDENT LPAREN termseq RPAREN
-- On OR reduce production term -> IDENT LPAREN termseq RPAREN
-- On LBRACKET reduce production term -> IDENT LPAREN termseq RPAREN
-- On EQUIVEQ reduce production term -> IDENT LPAREN termseq RPAREN
-- On EQUIV reduce production term -> IDENT LPAREN termseq RPAREN
-- On EQUAL reduce production term -> IDENT LPAREN termseq RPAREN
-- On DOT reduce production term -> IDENT LPAREN termseq RPAREN
-- On DIFF reduce production term -> IDENT LPAREN termseq RPAREN
-- On COMMA reduce production term -> IDENT LPAREN termseq RPAREN
-- On # reduce production term -> IDENT LPAREN termseq RPAREN

State 262:
netermseq -> term . COMMA netermseq [ RPAREN ]
netermseq -> term . [ RPAREN ]
term -> term . EQUAL term [ WEDGE RPAREN OR EQUAL DIFF COMMA ]
term -> term . DIFF term [ WEDGE RPAREN OR EQUAL DIFF COMMA ]
term -> term . OR term [ WEDGE RPAREN OR EQUAL DIFF COMMA ]
term -> term . WEDGE term [ WEDGE RPAREN OR EQUAL DIFF COMMA ]
-- On WEDGE shift to state 249
-- On OR shift to state 255
-- On EQUAL shift to state 251
-- On DIFF shift to state 253
-- On COMMA shift to state 263
-- On RPAREN reduce production netermseq -> term

State 263:
netermseq -> term COMMA . netermseq [ RPAREN ]
-- On PROJECTION shift to state 238
-- On NOT shift to state 240
-- On LPAREN shift to state 242
-- On IDENT shift to state 243
-- On FAIL shift to state 245
-- On CHOICE shift to state 246
-- On term shift to state 262
-- On netermseq shift to state 264

State 264:
netermseq -> term COMMA netermseq . [ RPAREN ]
-- On RPAREN reduce production netermseq -> term COMMA netermseq

State 265:
termseq -> netermseq . [ RPAREN ]
-- On RPAREN reduce production termseq -> netermseq

State 266:
term -> LPAREN termseq . RPAREN [ WEDGE SEMI RPAREN RED RBRACKET OTHERWISE OR LBRACKET EQUIVEQ EQUIV EQUAL DOT DIFF COMMA # ]
-- On RPAREN shift to state 267

State 267:
term -> LPAREN termseq RPAREN . [ WEDGE SEMI RPAREN RED RBRACKET OTHERWISE OR LBRACKET EQUIVEQ EQUIV EQUAL DOT DIFF COMMA # ]
-- On WEDGE reduce production term -> LPAREN termseq RPAREN
-- On SEMI reduce production term -> LPAREN termseq RPAREN
-- On RPAREN reduce production term -> LPAREN termseq RPAREN
-- On RED reduce production term -> LPAREN termseq RPAREN
-- On RBRACKET reduce production term -> LPAREN termseq RPAREN
-- On OTHERWISE reduce production term -> LPAREN termseq RPAREN
-- On OR reduce production term -> LPAREN termseq RPAREN
-- On LBRACKET reduce production term -> LPAREN termseq RPAREN
-- On EQUIVEQ reduce production term -> LPAREN termseq RPAREN
-- On EQUIV reduce production term -> LPAREN termseq RPAREN
-- On EQUAL reduce production term -> LPAREN termseq RPAREN
-- On DOT reduce production term -> LPAREN termseq RPAREN
-- On DIFF reduce production term -> LPAREN termseq RPAREN
-- On COMMA reduce production term -> LPAREN termseq RPAREN
-- On # reduce production term -> LPAREN termseq RPAREN

State 268:
term -> term . EQUAL term [ WEDGE RPAREN OR EQUAL DIFF ]
term -> term . DIFF term [ WEDGE RPAREN OR EQUAL DIFF ]
term -> NOT LPAREN term . RPAREN [ WEDGE SEMI RPAREN RED RBRACKET OTHERWISE OR LBRACKET EQUIVEQ EQUIV EQUAL DOT DIFF COMMA # ]
term -> term . OR term [ WEDGE RPAREN OR EQUAL DIFF ]
term -> term . WEDGE term [ WEDGE RPAREN OR EQUAL DIFF ]
-- On WEDGE shift to state 249
-- On RPAREN shift to state 269
-- On OR shift to state 255
-- On EQUAL shift to state 251
-- On DIFF shift to state 253

State 269:
term -> NOT LPAREN term RPAREN . [ WEDGE SEMI RPAREN RED RBRACKET OTHERWISE OR LBRACKET EQUIVEQ EQUIV EQUAL DOT DIFF COMMA # ]
-- On WEDGE reduce production term -> NOT LPAREN term RPAREN
-- On SEMI reduce production term -> NOT LPAREN term RPAREN
-- On RPAREN reduce production term -> NOT LPAREN term RPAREN
-- On RED reduce production term -> NOT LPAREN term RPAREN
-- On RBRACKET reduce production term -> NOT LPAREN term RPAREN
-- On OTHERWISE reduce production term -> NOT LPAREN term RPAREN
-- On OR reduce production term -> NOT LPAREN term RPAREN
-- On LBRACKET reduce production term -> NOT LPAREN term RPAREN
-- On EQUIVEQ reduce production term -> NOT LPAREN term RPAREN
-- On EQUIV reduce production term -> NOT LPAREN term RPAREN
-- On EQUAL reduce production term -> NOT LPAREN term RPAREN
-- On DOT reduce production term -> NOT LPAREN term RPAREN
-- On DIFF reduce production term -> NOT LPAREN term RPAREN
-- On COMMA reduce production term -> NOT LPAREN term RPAREN
-- On # reduce production term -> NOT LPAREN term RPAREN

State 270:
term -> PROJECTION LPAREN term . RPAREN [ WEDGE SEMI RPAREN RED RBRACKET OTHERWISE OR LBRACKET EQUIVEQ EQUIV EQUAL DOT DIFF COMMA # ]
term -> term . EQUAL term [ WEDGE RPAREN OR EQUAL DIFF ]
term -> term . DIFF term [ WEDGE RPAREN OR EQUAL DIFF ]
term -> term . OR term [ WEDGE RPAREN OR EQUAL DIFF ]
term -> term . WEDGE term [ WEDGE RPAREN OR EQUAL DIFF ]
-- On WEDGE shift to state 249
-- On RPAREN shift to state 271
-- On OR shift to state 255
-- On EQUAL shift to state 251
-- On DIFF shift to state 253

State 271:
term -> PROJECTION LPAREN term RPAREN . [ WEDGE SEMI RPAREN RED RBRACKET OTHERWISE OR LBRACKET EQUIVEQ EQUIV EQUAL DOT DIFF COMMA # ]
-- On WEDGE reduce production term -> PROJECTION LPAREN term RPAREN
-- On SEMI reduce production term -> PROJECTION LPAREN term RPAREN
-- On RPAREN reduce production term -> PROJECTION LPAREN term RPAREN
-- On RED reduce production term -> PROJECTION LPAREN term RPAREN
-- On RBRACKET reduce production term -> PROJECTION LPAREN term RPAREN
-- On OTHERWISE reduce production term -> PROJECTION LPAREN term RPAREN
-- On OR reduce production term -> PROJECTION LPAREN term RPAREN
-- On LBRACKET reduce production term -> PROJECTION LPAREN term RPAREN
-- On EQUIVEQ reduce production term -> PROJECTION LPAREN term RPAREN
-- On EQUIV reduce production term -> PROJECTION LPAREN term RPAREN
-- On EQUAL reduce production term -> PROJECTION LPAREN term RPAREN
-- On DOT reduce production term -> PROJECTION LPAREN term RPAREN
-- On DIFF reduce production term -> PROJECTION LPAREN term RPAREN
-- On COMMA reduce production term -> PROJECTION LPAREN term RPAREN
-- On # reduce production term -> PROJECTION LPAREN term RPAREN

State 272:
ni -> IDENT AMONG LPAREN netermseq . RPAREN [ DOT COMMA ]
-- On RPAREN shift to state 273

State 273:
ni -> IDENT AMONG LPAREN netermseq RPAREN . [ DOT COMMA ]
-- On DOT reduce production ni -> IDENT AMONG LPAREN netermseq RPAREN
-- On COMMA reduce production ni -> IDENT AMONG LPAREN netermseq RPAREN

State 274:
lib -> NONINTERF niseq . DOT lib [ RBRACE PROCESS EQUIVALENCE ]
-- On DOT shift to state 275

State 275:
lib -> NONINTERF niseq DOT . lib [ RBRACE PROCESS EQUIVALENCE ]
-- On WEAKSECRET shift to state 1
-- On TYPE shift to state 4
-- On TABLE shift to state 14
-- On SET shift to state 22
-- On REDUCTION shift to state 27
-- On QUERY shift to state 39
-- On PROOF shift to state 126
-- On PROBA shift to state 146
-- On PREDICATE shift to state 149
-- On PARAM shift to state 156
-- On NOUNIF shift to state 160
-- On NOT shift to state 229
-- On NONINTERF shift to state 234
-- On LETFUN shift to state 276
-- On LET shift to state 412
-- On IMPLEMENTATION shift to state 547
-- On FUN shift to state 594
-- On FREE shift to state 611
-- On EXPAND shift to state 617
-- On EVENT shift to state 623
-- On EQUATION shift to state 629
-- On ELIMTRUE shift to state 637
-- On DEFINE shift to state 641
-- On CONST shift to state 647
-- On CLAUSES shift to state 653
-- On CHANNEL shift to state 655
-- On lib shift to state 721
-- On RBRACE reduce production lib -> 
-- On PROCESS reduce production lib -> 
-- On EQUIVALENCE reduce production lib -> 

State 276:
lib -> LETFUN . IDENT EQUAL pterm DOT lib [ RBRACE PROCESS EQUIVALENCE ]
lib -> LETFUN . IDENT LPAREN mayfailvartypeseq RPAREN EQUAL pterm DOT lib [ RBRACE PROCESS EQUIVALENCE ]
-- On IDENT shift to state 277

State 277:
lib -> LETFUN IDENT . EQUAL pterm DOT lib [ RBRACE PROCESS EQUIVALENCE ]
lib -> LETFUN IDENT . LPAREN mayfailvartypeseq RPAREN EQUAL pterm DOT lib [ RBRACE PROCESS EQUIVALENCE ]
-- On LPAREN shift to state 278
-- On EQUAL shift to state 717

State 278:
lib -> LETFUN IDENT LPAREN . mayfailvartypeseq RPAREN EQUAL pterm DOT lib [ RBRACE PROCESS EQUIVALENCE ]
-- On IDENT shift to state 279
-- On nemayfailvartypeseq shift to state 284
-- On mayfailvartypeseq shift to state 285
-- On mayfailvartype shift to state 605
-- On RPAREN reduce production mayfailvartypeseq -> 

State 279:
mayfailvartype -> IDENT . COLON typeid [ SEMI RPAREN COMMA ]
mayfailvartype -> IDENT . COLON typeid ORTEXT FAIL [ SEMI RPAREN COMMA ]
-- On COLON shift to state 280

State 280:
mayfailvartype -> IDENT COLON . typeid [ SEMI RPAREN COMMA ]
mayfailvartype -> IDENT COLON . typeid ORTEXT FAIL [ SEMI RPAREN COMMA ]
-- On IDENT shift to state 17
-- On CHANNEL shift to state 18
-- On typeid shift to state 281

State 281:
mayfailvartype -> IDENT COLON typeid . [ SEMI RPAREN COMMA ]
mayfailvartype -> IDENT COLON typeid . ORTEXT FAIL [ SEMI RPAREN COMMA ]
-- On ORTEXT shift to state 282
-- On SEMI reduce production mayfailvartype -> IDENT COLON typeid
-- On RPAREN reduce production mayfailvartype -> IDENT COLON typeid
-- On COMMA reduce production mayfailvartype -> IDENT COLON typeid

State 282:
mayfailvartype -> IDENT COLON typeid ORTEXT . FAIL [ SEMI RPAREN COMMA ]
-- On FAIL shift to state 283

State 283:
mayfailvartype -> IDENT COLON typeid ORTEXT FAIL . [ SEMI RPAREN COMMA ]
-- On SEMI reduce production mayfailvartype -> IDENT COLON typeid ORTEXT FAIL
-- On RPAREN reduce production mayfailvartype -> IDENT COLON typeid ORTEXT FAIL
-- On COMMA reduce production mayfailvartype -> IDENT COLON typeid ORTEXT FAIL

State 284:
mayfailvartypeseq -> nemayfailvartypeseq . [ RPAREN ]
-- On RPAREN reduce production mayfailvartypeseq -> nemayfailvartypeseq

State 285:
lib -> LETFUN IDENT LPAREN mayfailvartypeseq . RPAREN EQUAL pterm DOT lib [ RBRACE PROCESS EQUIVALENCE ]
-- On RPAREN shift to state 286

State 286:
lib -> LETFUN IDENT LPAREN mayfailvartypeseq RPAREN . EQUAL pterm DOT lib [ RBRACE PROCESS EQUIVALENCE ]
-- On EQUAL shift to state 287

State 287:
lib -> LETFUN IDENT LPAREN mayfailvartypeseq RPAREN EQUAL . pterm DOT lib [ RBRACE PROCESS EQUIVALENCE ]
-- On NOT shift to state 288
-- On NEW shift to state 290
-- On LPAREN shift to state 300
-- On LET shift to state 301
-- On INSERT shift to state 306
-- On IF shift to state 309
-- On IDENT shift to state 310
-- On GET shift to state 314
-- On EVENT shift to state 320
-- On CHOICE shift to state 323
-- On pterm shift to state 410
-- On basicpattern shift to state 332

State 288:
pterm -> NOT . LPAREN pterm RPAREN [ YIELD WEDGE THEN SEMI RPAREN REPL RBRACKET PHASE OUT OR NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EQUAL EOF ELSE DOT DIFF COMMA BARRIER BAR ]
-- On LPAREN shift to state 289

State 289:
pterm -> NOT LPAREN . pterm RPAREN [ YIELD WEDGE THEN SEMI RPAREN REPL RBRACKET PHASE OUT OR NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EQUAL EOF ELSE DOT DIFF COMMA BARRIER BAR ]
-- On NOT shift to state 288
-- On NEW shift to state 290
-- On LPAREN shift to state 300
-- On LET shift to state 301
-- On INSERT shift to state 306
-- On IF shift to state 309
-- On IDENT shift to state 310
-- On GET shift to state 314
-- On EVENT shift to state 320
-- On CHOICE shift to state 323
-- On pterm shift to state 408
-- On basicpattern shift to state 332

State 290:
pterm -> NEW . IDENT newarg COLON typeid SEMI pterm [ YIELD WEDGE THEN SEMI RPAREN REPL RBRACKET PHASE OUT OR NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EQUAL EOF ELSE DOT DIFF COMMA BARRIER BAR ]
-- On IDENT shift to state 291

State 291:
pterm -> NEW IDENT . newarg COLON typeid SEMI pterm [ YIELD WEDGE THEN SEMI RPAREN REPL RBRACKET PHASE OUT OR NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EQUAL EOF ELSE DOT DIFF COMMA BARRIER BAR ]
-- On LBRACKET shift to state 292
-- On newarg shift to state 296
-- On COLON reduce production newarg -> 

State 292:
newarg -> LBRACKET . RBRACKET [ YIELD SEMI RPAREN REPL PHASE OUT NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EOF ELSE DOT COLON BARRIER BAR ]
newarg -> LBRACKET . neidentseq RBRACKET [ YIELD SEMI RPAREN REPL PHASE OUT NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EOF ELSE DOT COLON BARRIER BAR ]
-- On RBRACKET shift to state 293
-- On IDENT shift to state 7
-- On neidentseq shift to state 294

State 293:
newarg -> LBRACKET RBRACKET . [ YIELD SEMI RPAREN REPL PHASE OUT NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EOF ELSE DOT COLON BARRIER BAR ]
-- On YIELD reduce production newarg -> LBRACKET RBRACKET
-- On SEMI reduce production newarg -> LBRACKET RBRACKET
-- On RPAREN reduce production newarg -> LBRACKET RBRACKET
-- On REPL reduce production newarg -> LBRACKET RBRACKET
-- On PHASE reduce production newarg -> LBRACKET RBRACKET
-- On OUT reduce production newarg -> LBRACKET RBRACKET
-- On NEW reduce production newarg -> LBRACKET RBRACKET
-- On LPAREN reduce production newarg -> LBRACKET RBRACKET
-- On LET reduce production newarg -> LBRACKET RBRACKET
-- On INT reduce production newarg -> LBRACKET RBRACKET
-- On INSERT reduce production newarg -> LBRACKET RBRACKET
-- On IN reduce production newarg -> LBRACKET RBRACKET
-- On IF reduce production newarg -> LBRACKET RBRACKET
-- On IDENT reduce production newarg -> LBRACKET RBRACKET
-- On GET reduce production newarg -> LBRACKET RBRACKET
-- On FOREACH reduce production newarg -> LBRACKET RBRACKET
-- On EVENT reduce production newarg -> LBRACKET RBRACKET
-- On EOF reduce production newarg -> LBRACKET RBRACKET
-- On ELSE reduce production newarg -> LBRACKET RBRACKET
-- On DOT reduce production newarg -> LBRACKET RBRACKET
-- On COLON reduce production newarg -> LBRACKET RBRACKET
-- On BARRIER reduce production newarg -> LBRACKET RBRACKET
-- On BAR reduce production newarg -> LBRACKET RBRACKET

State 294:
newarg -> LBRACKET neidentseq . RBRACKET [ YIELD SEMI RPAREN REPL PHASE OUT NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EOF ELSE DOT COLON BARRIER BAR ]
-- On RBRACKET shift to state 295

State 295:
newarg -> LBRACKET neidentseq RBRACKET . [ YIELD SEMI RPAREN REPL PHASE OUT NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EOF ELSE DOT COLON BARRIER BAR ]
-- On YIELD reduce production newarg -> LBRACKET neidentseq RBRACKET
-- On SEMI reduce production newarg -> LBRACKET neidentseq RBRACKET
-- On RPAREN reduce production newarg -> LBRACKET neidentseq RBRACKET
-- On REPL reduce production newarg -> LBRACKET neidentseq RBRACKET
-- On PHASE reduce production newarg -> LBRACKET neidentseq RBRACKET
-- On OUT reduce production newarg -> LBRACKET neidentseq RBRACKET
-- On NEW reduce production newarg -> LBRACKET neidentseq RBRACKET
-- On LPAREN reduce production newarg -> LBRACKET neidentseq RBRACKET
-- On LET reduce production newarg -> LBRACKET neidentseq RBRACKET
-- On INT reduce production newarg -> LBRACKET neidentseq RBRACKET
-- On INSERT reduce production newarg -> LBRACKET neidentseq RBRACKET
-- On IN reduce production newarg -> LBRACKET neidentseq RBRACKET
-- On IF reduce production newarg -> LBRACKET neidentseq RBRACKET
-- On IDENT reduce production newarg -> LBRACKET neidentseq RBRACKET
-- On GET reduce production newarg -> LBRACKET neidentseq RBRACKET
-- On FOREACH reduce production newarg -> LBRACKET neidentseq RBRACKET
-- On EVENT reduce production newarg -> LBRACKET neidentseq RBRACKET
-- On EOF reduce production newarg -> LBRACKET neidentseq RBRACKET
-- On ELSE reduce production newarg -> LBRACKET neidentseq RBRACKET
-- On DOT reduce production newarg -> LBRACKET neidentseq RBRACKET
-- On COLON reduce production newarg -> LBRACKET neidentseq RBRACKET
-- On BARRIER reduce production newarg -> LBRACKET neidentseq RBRACKET
-- On BAR reduce production newarg -> LBRACKET neidentseq RBRACKET

State 296:
pterm -> NEW IDENT newarg . COLON typeid SEMI pterm [ YIELD WEDGE THEN SEMI RPAREN REPL RBRACKET PHASE OUT OR NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EQUAL EOF ELSE DOT DIFF COMMA BARRIER BAR ]
-- On COLON shift to state 297

State 297:
pterm -> NEW IDENT newarg COLON . typeid SEMI pterm [ YIELD WEDGE THEN SEMI RPAREN REPL RBRACKET PHASE OUT OR NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EQUAL EOF ELSE DOT DIFF COMMA BARRIER BAR ]
-- On IDENT shift to state 17
-- On CHANNEL shift to state 18
-- On typeid shift to state 298

State 298:
pterm -> NEW IDENT newarg COLON typeid . SEMI pterm [ YIELD WEDGE THEN SEMI RPAREN REPL RBRACKET PHASE OUT OR NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EQUAL EOF ELSE DOT DIFF COMMA BARRIER BAR ]
-- On SEMI shift to state 299

State 299:
pterm -> NEW IDENT newarg COLON typeid SEMI . pterm [ YIELD WEDGE THEN SEMI RPAREN REPL RBRACKET PHASE OUT OR NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EQUAL EOF ELSE DOT DIFF COMMA BARRIER BAR ]
-- On NOT shift to state 288
-- On NEW shift to state 290
-- On LPAREN shift to state 300
-- On LET shift to state 301
-- On INSERT shift to state 306
-- On IF shift to state 309
-- On IDENT shift to state 310
-- On GET shift to state 314
-- On EVENT shift to state 320
-- On CHOICE shift to state 323
-- On pterm shift to state 407
-- On basicpattern shift to state 332

State 300:
pterm -> LPAREN . ptermseq RPAREN [ YIELD WEDGE THEN SEMI RPAREN REPL RBRACKET PHASE OUT OR NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EQUAL EOF ELSE DOT DIFF COMMA BARRIER BAR ]
-- On NOT shift to state 288
-- On NEW shift to state 290
-- On LPAREN shift to state 300
-- On LET shift to state 301
-- On INSERT shift to state 306
-- On IF shift to state 309
-- On IDENT shift to state 310
-- On GET shift to state 314
-- On EVENT shift to state 320
-- On CHOICE shift to state 323
-- On ptermseq shift to state 405
-- On pterm shift to state 347
-- On neptermseq shift to state 350
-- On basicpattern shift to state 332
-- On RPAREN reduce production ptermseq -> 

State 301:
pterm -> LET . tpattern EQUAL pterm IN pterm [ YIELD WEDGE THEN SEMI RPAREN REPL RBRACKET PHASE OUT OR NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EQUAL EOF ELSE DOT DIFF COMMA BARRIER BAR ]
pterm -> LET . tpattern EQUAL pterm IN pterm ELSE pterm [ YIELD WEDGE THEN SEMI RPAREN REPL RBRACKET PHASE OUT OR NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EQUAL EOF ELSE DOT DIFF COMMA BARRIER BAR ]
pterm -> LET . nevartype SUCHTHAT pterm IN pterm [ YIELD WEDGE THEN SEMI RPAREN REPL RBRACKET PHASE OUT OR NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EQUAL EOF ELSE DOT DIFF COMMA BARRIER BAR ]
pterm -> LET . nevartype SUCHTHAT pterm IN pterm ELSE pterm [ YIELD WEDGE THEN SEMI RPAREN REPL RBRACKET PHASE OUT OR NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EQUAL EOF ELSE DOT DIFF COMMA BARRIER BAR ]
-- On LPAREN shift to state 302
-- On IDENT shift to state 388
-- On EQUAL shift to state 305
-- On tpattern shift to state 391
-- On nevartype shift to state 398
-- On basicpattern shift to state 366

State 302:
tpattern -> LPAREN . tpatternseq RPAREN [ RPAREN EQUAL COMMA ]
-- On LPAREN shift to state 302
-- On IDENT shift to state 303
-- On EQUAL shift to state 305
-- On tpatternseq shift to state 386
-- On tpattern shift to state 363
-- On nepatternseq shift to state 367
-- On basicpattern shift to state 366
-- On RPAREN reduce production tpatternseq -> 

State 303:
basicpattern -> IDENT . [ RPAREN COMMA ]
basicpattern -> IDENT . COLON typeid [ RPAREN COMMA ]
tpattern -> IDENT . LPAREN tpatternseq RPAREN [ RPAREN COMMA ]
-- On LPAREN shift to state 304
-- On COLON shift to state 372
-- On RPAREN reduce production basicpattern -> IDENT
-- On COMMA reduce production basicpattern -> IDENT

State 304:
tpattern -> IDENT LPAREN . tpatternseq RPAREN [ RPAREN EQUAL COMMA ]
-- On LPAREN shift to state 302
-- On IDENT shift to state 303
-- On EQUAL shift to state 305
-- On tpatternseq shift to state 384
-- On tpattern shift to state 363
-- On nepatternseq shift to state 367
-- On basicpattern shift to state 366
-- On RPAREN reduce production tpatternseq -> 

State 305:
tpattern -> EQUAL . pterm [ RPAREN EQUAL COMMA ]
-- On NOT shift to state 288
-- On NEW shift to state 290
-- On LPAREN shift to state 300
-- On LET shift to state 301
-- On INSERT shift to state 306
-- On IF shift to state 309
-- On IDENT shift to state 310
-- On GET shift to state 314
-- On EVENT shift to state 320
-- On CHOICE shift to state 323
-- On pterm shift to state 383
-- On basicpattern shift to state 332

State 306:
pterm -> INSERT . IDENT LPAREN ptermseq RPAREN SEMI pterm [ YIELD WEDGE THEN SEMI RPAREN REPL RBRACKET PHASE OUT OR NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EQUAL EOF ELSE DOT DIFF COMMA BARRIER BAR ]
-- On IDENT shift to state 307

State 307:
pterm -> INSERT IDENT . LPAREN ptermseq RPAREN SEMI pterm [ YIELD WEDGE THEN SEMI RPAREN REPL RBRACKET PHASE OUT OR NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EQUAL EOF ELSE DOT DIFF COMMA BARRIER BAR ]
-- On LPAREN shift to state 308

State 308:
pterm -> INSERT IDENT LPAREN . ptermseq RPAREN SEMI pterm [ YIELD WEDGE THEN SEMI RPAREN REPL RBRACKET PHASE OUT OR NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EQUAL EOF ELSE DOT DIFF COMMA BARRIER BAR ]
-- On NOT shift to state 288
-- On NEW shift to state 290
-- On LPAREN shift to state 300
-- On LET shift to state 301
-- On INSERT shift to state 306
-- On IF shift to state 309
-- On IDENT shift to state 310
-- On GET shift to state 314
-- On EVENT shift to state 320
-- On CHOICE shift to state 323
-- On ptermseq shift to state 379
-- On pterm shift to state 347
-- On neptermseq shift to state 350
-- On basicpattern shift to state 332
-- On RPAREN reduce production ptermseq -> 

State 309:
pterm -> IF . pterm THEN pterm [ YIELD WEDGE THEN SEMI RPAREN REPL RBRACKET PHASE OUT OR NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EQUAL EOF ELSE DOT DIFF COMMA BARRIER BAR ]
pterm -> IF . pterm THEN pterm ELSE pterm [ YIELD WEDGE THEN SEMI RPAREN REPL RBRACKET PHASE OUT OR NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EQUAL EOF ELSE DOT DIFF COMMA BARRIER BAR ]
-- On NOT shift to state 288
-- On NEW shift to state 290
-- On LPAREN shift to state 300
-- On LET shift to state 301
-- On INSERT shift to state 306
-- On IF shift to state 309
-- On IDENT shift to state 310
-- On GET shift to state 314
-- On EVENT shift to state 320
-- On CHOICE shift to state 323
-- On pterm shift to state 374
-- On basicpattern shift to state 332

State 310:
basicpattern -> IDENT . [ LEFTARROW ]
basicpattern -> IDENT . COLON typeid [ LEFTARROW ]
pterm -> IDENT . LPAREN ptermseq RPAREN [ YIELD WEDGE THEN SEMI RPAREN REPL RBRACKET PHASE OUT OR NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EQUAL EOF ELSE DOT DIFF COMMA BARRIER BAR ]
pterm -> IDENT . [ YIELD WEDGE THEN SEMI RPAREN REPL RBRACKET PHASE OUT OR NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EQUAL EOF ELSE DOT DIFF COMMA BARRIER BAR ]
pterm -> IDENT . RANDOM typeid SEMI pterm [ YIELD WEDGE THEN SEMI RPAREN REPL RBRACKET PHASE OUT OR NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EQUAL EOF ELSE DOT DIFF COMMA BARRIER BAR ]
-- On RANDOM shift to state 311
-- On LPAREN shift to state 369
-- On COLON shift to state 372
-- On YIELD reduce production pterm -> IDENT
-- On WEDGE reduce production pterm -> IDENT
-- On THEN reduce production pterm -> IDENT
-- On SEMI reduce production pterm -> IDENT
-- On RPAREN reduce production pterm -> IDENT
-- On REPL reduce production pterm -> IDENT
-- On RBRACKET reduce production pterm -> IDENT
-- On PHASE reduce production pterm -> IDENT
-- On OUT reduce production pterm -> IDENT
-- On OR reduce production pterm -> IDENT
-- On NEW reduce production pterm -> IDENT
-- On LPAREN reduce production pterm -> IDENT
-- On LET reduce production pterm -> IDENT
-- On LEFTARROW reduce production basicpattern -> IDENT
-- On INT reduce production pterm -> IDENT
-- On INSERT reduce production pterm -> IDENT
-- On IN reduce production pterm -> IDENT
-- On IF reduce production pterm -> IDENT
-- On IDENT reduce production pterm -> IDENT
-- On GET reduce production pterm -> IDENT
-- On FOREACH reduce production pterm -> IDENT
-- On EVENT reduce production pterm -> IDENT
-- On EQUAL reduce production pterm -> IDENT
-- On EOF reduce production pterm -> IDENT
-- On ELSE reduce production pterm -> IDENT
-- On DOT reduce production pterm -> IDENT
-- On DIFF reduce production pterm -> IDENT
-- On COMMA reduce production pterm -> IDENT
-- On BARRIER reduce production pterm -> IDENT
-- On BAR reduce production pterm -> IDENT
** Conflict on LPAREN

State 311:
pterm -> IDENT RANDOM . typeid SEMI pterm [ YIELD WEDGE THEN SEMI RPAREN REPL RBRACKET PHASE OUT OR NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EQUAL EOF ELSE DOT DIFF COMMA BARRIER BAR ]
-- On IDENT shift to state 17
-- On CHANNEL shift to state 18
-- On typeid shift to state 312

State 312:
pterm -> IDENT RANDOM typeid . SEMI pterm [ YIELD WEDGE THEN SEMI RPAREN REPL RBRACKET PHASE OUT OR NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EQUAL EOF ELSE DOT DIFF COMMA BARRIER BAR ]
-- On SEMI shift to state 313

State 313:
pterm -> IDENT RANDOM typeid SEMI . pterm [ YIELD WEDGE THEN SEMI RPAREN REPL RBRACKET PHASE OUT OR NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EQUAL EOF ELSE DOT DIFF COMMA BARRIER BAR ]
-- On NOT shift to state 288
-- On NEW shift to state 290
-- On LPAREN shift to state 300
-- On LET shift to state 301
-- On INSERT shift to state 306
-- On IF shift to state 309
-- On IDENT shift to state 310
-- On GET shift to state 314
-- On EVENT shift to state 320
-- On CHOICE shift to state 323
-- On pterm shift to state 368
-- On basicpattern shift to state 332

State 314:
pterm -> GET . IDENT LPAREN tpatternseq RPAREN SUCHTHAT pterm IN pterm [ YIELD WEDGE THEN SEMI RPAREN REPL RBRACKET PHASE OUT OR NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EQUAL EOF ELSE DOT DIFF COMMA BARRIER BAR ]
pterm -> GET . IDENT LPAREN tpatternseq RPAREN IN pterm [ YIELD WEDGE THEN SEMI RPAREN REPL RBRACKET PHASE OUT OR NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EQUAL EOF ELSE DOT DIFF COMMA BARRIER BAR ]
pterm -> GET . IDENT LPAREN tpatternseq RPAREN SUCHTHAT pterm IN pterm ELSE pterm [ YIELD WEDGE THEN SEMI RPAREN REPL RBRACKET PHASE OUT OR NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EQUAL EOF ELSE DOT DIFF COMMA BARRIER BAR ]
pterm -> GET . IDENT LPAREN tpatternseq RPAREN IN pterm ELSE pterm [ YIELD WEDGE THEN SEMI RPAREN REPL RBRACKET PHASE OUT OR NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EQUAL EOF ELSE DOT DIFF COMMA BARRIER BAR ]
-- On IDENT shift to state 315

State 315:
pterm -> GET IDENT . LPAREN tpatternseq RPAREN SUCHTHAT pterm IN pterm [ YIELD WEDGE THEN SEMI RPAREN REPL RBRACKET PHASE OUT OR NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EQUAL EOF ELSE DOT DIFF COMMA BARRIER BAR ]
pterm -> GET IDENT . LPAREN tpatternseq RPAREN IN pterm [ YIELD WEDGE THEN SEMI RPAREN REPL RBRACKET PHASE OUT OR NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EQUAL EOF ELSE DOT DIFF COMMA BARRIER BAR ]
pterm -> GET IDENT . LPAREN tpatternseq RPAREN SUCHTHAT pterm IN pterm ELSE pterm [ YIELD WEDGE THEN SEMI RPAREN REPL RBRACKET PHASE OUT OR NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EQUAL EOF ELSE DOT DIFF COMMA BARRIER BAR ]
pterm -> GET IDENT . LPAREN tpatternseq RPAREN IN pterm ELSE pterm [ YIELD WEDGE THEN SEMI RPAREN REPL RBRACKET PHASE OUT OR NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EQUAL EOF ELSE DOT DIFF COMMA BARRIER BAR ]
-- On LPAREN shift to state 316

State 316:
pterm -> GET IDENT LPAREN . tpatternseq RPAREN SUCHTHAT pterm IN pterm [ YIELD WEDGE THEN SEMI RPAREN REPL RBRACKET PHASE OUT OR NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EQUAL EOF ELSE DOT DIFF COMMA BARRIER BAR ]
pterm -> GET IDENT LPAREN . tpatternseq RPAREN IN pterm [ YIELD WEDGE THEN SEMI RPAREN REPL RBRACKET PHASE OUT OR NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EQUAL EOF ELSE DOT DIFF COMMA BARRIER BAR ]
pterm -> GET IDENT LPAREN . tpatternseq RPAREN SUCHTHAT pterm IN pterm ELSE pterm [ YIELD WEDGE THEN SEMI RPAREN REPL RBRACKET PHASE OUT OR NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EQUAL EOF ELSE DOT DIFF COMMA BARRIER BAR ]
pterm -> GET IDENT LPAREN . tpatternseq RPAREN IN pterm ELSE pterm [ YIELD WEDGE THEN SEMI RPAREN REPL RBRACKET PHASE OUT OR NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EQUAL EOF ELSE DOT DIFF COMMA BARRIER BAR ]
-- On LPAREN shift to state 302
-- On IDENT shift to state 303
-- On EQUAL shift to state 305
-- On tpatternseq shift to state 317
-- On tpattern shift to state 363
-- On nepatternseq shift to state 367
-- On basicpattern shift to state 366
-- On RPAREN reduce production tpatternseq -> 

State 317:
pterm -> GET IDENT LPAREN tpatternseq . RPAREN SUCHTHAT pterm IN pterm [ YIELD WEDGE THEN SEMI RPAREN REPL RBRACKET PHASE OUT OR NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EQUAL EOF ELSE DOT DIFF COMMA BARRIER BAR ]
pterm -> GET IDENT LPAREN tpatternseq . RPAREN IN pterm [ YIELD WEDGE THEN SEMI RPAREN REPL RBRACKET PHASE OUT OR NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EQUAL EOF ELSE DOT DIFF COMMA BARRIER BAR ]
pterm -> GET IDENT LPAREN tpatternseq . RPAREN SUCHTHAT pterm IN pterm ELSE pterm [ YIELD WEDGE THEN SEMI RPAREN REPL RBRACKET PHASE OUT OR NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EQUAL EOF ELSE DOT DIFF COMMA BARRIER BAR ]
pterm -> GET IDENT LPAREN tpatternseq . RPAREN IN pterm ELSE pterm [ YIELD WEDGE THEN SEMI RPAREN REPL RBRACKET PHASE OUT OR NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EQUAL EOF ELSE DOT DIFF COMMA BARRIER BAR ]
-- On RPAREN shift to state 318

State 318:
pterm -> GET IDENT LPAREN tpatternseq RPAREN . SUCHTHAT pterm IN pterm [ YIELD WEDGE THEN SEMI RPAREN REPL RBRACKET PHASE OUT OR NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EQUAL EOF ELSE DOT DIFF COMMA BARRIER BAR ]
pterm -> GET IDENT LPAREN tpatternseq RPAREN . IN pterm [ YIELD WEDGE THEN SEMI RPAREN REPL RBRACKET PHASE OUT OR NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EQUAL EOF ELSE DOT DIFF COMMA BARRIER BAR ]
pterm -> GET IDENT LPAREN tpatternseq RPAREN . SUCHTHAT pterm IN pterm ELSE pterm [ YIELD WEDGE THEN SEMI RPAREN REPL RBRACKET PHASE OUT OR NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EQUAL EOF ELSE DOT DIFF COMMA BARRIER BAR ]
pterm -> GET IDENT LPAREN tpatternseq RPAREN . IN pterm ELSE pterm [ YIELD WEDGE THEN SEMI RPAREN REPL RBRACKET PHASE OUT OR NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EQUAL EOF ELSE DOT DIFF COMMA BARRIER BAR ]
-- On SUCHTHAT shift to state 319
-- On IN shift to state 359

State 319:
pterm -> GET IDENT LPAREN tpatternseq RPAREN SUCHTHAT . pterm IN pterm [ YIELD WEDGE THEN SEMI RPAREN REPL RBRACKET PHASE OUT OR NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EQUAL EOF ELSE DOT DIFF COMMA BARRIER BAR ]
pterm -> GET IDENT LPAREN tpatternseq RPAREN SUCHTHAT . pterm IN pterm ELSE pterm [ YIELD WEDGE THEN SEMI RPAREN REPL RBRACKET PHASE OUT OR NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EQUAL EOF ELSE DOT DIFF COMMA BARRIER BAR ]
-- On NOT shift to state 288
-- On NEW shift to state 290
-- On LPAREN shift to state 300
-- On LET shift to state 301
-- On INSERT shift to state 306
-- On IF shift to state 309
-- On IDENT shift to state 310
-- On GET shift to state 314
-- On EVENT shift to state 320
-- On CHOICE shift to state 323
-- On pterm shift to state 354
-- On basicpattern shift to state 332

State 320:
pterm -> EVENT . IDENT LPAREN ptermseq RPAREN newarg SEMI pterm [ YIELD WEDGE THEN SEMI RPAREN REPL RBRACKET PHASE OUT OR NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EQUAL EOF ELSE DOT DIFF COMMA BARRIER BAR ]
pterm -> EVENT . IDENT newarg SEMI pterm [ YIELD WEDGE THEN SEMI RPAREN REPL RBRACKET PHASE OUT OR NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EQUAL EOF ELSE DOT DIFF COMMA BARRIER BAR ]
-- On IDENT shift to state 321

State 321:
pterm -> EVENT IDENT . LPAREN ptermseq RPAREN newarg SEMI pterm [ YIELD WEDGE THEN SEMI RPAREN REPL RBRACKET PHASE OUT OR NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EQUAL EOF ELSE DOT DIFF COMMA BARRIER BAR ]
pterm -> EVENT IDENT . newarg SEMI pterm [ YIELD WEDGE THEN SEMI RPAREN REPL RBRACKET PHASE OUT OR NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EQUAL EOF ELSE DOT DIFF COMMA BARRIER BAR ]
-- On LPAREN shift to state 322
-- On LBRACKET shift to state 292
-- On newarg shift to state 351
-- On SEMI reduce production newarg -> 

State 322:
pterm -> EVENT IDENT LPAREN . ptermseq RPAREN newarg SEMI pterm [ YIELD WEDGE THEN SEMI RPAREN REPL RBRACKET PHASE OUT OR NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EQUAL EOF ELSE DOT DIFF COMMA BARRIER BAR ]
-- On NOT shift to state 288
-- On NEW shift to state 290
-- On LPAREN shift to state 300
-- On LET shift to state 301
-- On INSERT shift to state 306
-- On IF shift to state 309
-- On IDENT shift to state 310
-- On GET shift to state 314
-- On EVENT shift to state 320
-- On CHOICE shift to state 323
-- On ptermseq shift to state 342
-- On pterm shift to state 347
-- On neptermseq shift to state 350
-- On basicpattern shift to state 332
-- On RPAREN reduce production ptermseq -> 

State 323:
pterm -> CHOICE . LBRACKET pterm COMMA pterm RBRACKET [ YIELD WEDGE THEN SEMI RPAREN REPL RBRACKET PHASE OUT OR NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EQUAL EOF ELSE DOT DIFF COMMA BARRIER BAR ]
-- On LBRACKET shift to state 324

State 324:
pterm -> CHOICE LBRACKET . pterm COMMA pterm RBRACKET [ YIELD WEDGE THEN SEMI RPAREN REPL RBRACKET PHASE OUT OR NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EQUAL EOF ELSE DOT DIFF COMMA BARRIER BAR ]
-- On NOT shift to state 288
-- On NEW shift to state 290
-- On LPAREN shift to state 300
-- On LET shift to state 301
-- On INSERT shift to state 306
-- On IF shift to state 309
-- On IDENT shift to state 310
-- On GET shift to state 314
-- On EVENT shift to state 320
-- On CHOICE shift to state 323
-- On pterm shift to state 325
-- On basicpattern shift to state 332

State 325:
pterm -> CHOICE LBRACKET pterm . COMMA pterm RBRACKET [ YIELD WEDGE THEN SEMI RPAREN REPL RBRACKET PHASE OUT OR NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EQUAL EOF ELSE DOT DIFF COMMA BARRIER BAR ]
pterm -> pterm . EQUAL pterm [ WEDGE OR EQUAL DIFF COMMA ]
pterm -> pterm . DIFF pterm [ WEDGE OR EQUAL DIFF COMMA ]
pterm -> pterm . OR pterm [ WEDGE OR EQUAL DIFF COMMA ]
pterm -> pterm . WEDGE pterm [ WEDGE OR EQUAL DIFF COMMA ]
-- On WEDGE shift to state 326
-- On OR shift to state 337
-- On EQUAL shift to state 328
-- On DIFF shift to state 330
-- On COMMA shift to state 339

State 326:
pterm -> pterm WEDGE . pterm [ YIELD WEDGE THEN SEMI RPAREN REPL RBRACKET PHASE OUT OR NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EQUAL EOF ELSE DOT DIFF COMMA BARRIER BAR ]
-- On NOT shift to state 288
-- On NEW shift to state 290
-- On LPAREN shift to state 300
-- On LET shift to state 301
-- On INSERT shift to state 306
-- On IF shift to state 309
-- On IDENT shift to state 310
-- On GET shift to state 314
-- On EVENT shift to state 320
-- On CHOICE shift to state 323
-- On pterm shift to state 327
-- On basicpattern shift to state 332

State 327:
pterm -> pterm . EQUAL pterm [ YIELD WEDGE THEN SEMI RPAREN REPL RBRACKET PHASE OUT OR NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EQUAL EOF ELSE DOT DIFF COMMA BARRIER BAR ]
pterm -> pterm . DIFF pterm [ YIELD WEDGE THEN SEMI RPAREN REPL RBRACKET PHASE OUT OR NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EQUAL EOF ELSE DOT DIFF COMMA BARRIER BAR ]
pterm -> pterm . OR pterm [ YIELD WEDGE THEN SEMI RPAREN REPL RBRACKET PHASE OUT OR NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EQUAL EOF ELSE DOT DIFF COMMA BARRIER BAR ]
pterm -> pterm . WEDGE pterm [ YIELD WEDGE THEN SEMI RPAREN REPL RBRACKET PHASE OUT OR NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EQUAL EOF ELSE DOT DIFF COMMA BARRIER BAR ]
pterm -> pterm WEDGE pterm . [ YIELD WEDGE THEN SEMI RPAREN REPL RBRACKET PHASE OUT OR NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EQUAL EOF ELSE DOT DIFF COMMA BARRIER BAR ]
-- On WEDGE shift to state 326
-- On EQUAL shift to state 328
-- On DIFF shift to state 330
-- On YIELD reduce production pterm -> pterm WEDGE pterm
-- On THEN reduce production pterm -> pterm WEDGE pterm
-- On SEMI reduce production pterm -> pterm WEDGE pterm
-- On RPAREN reduce production pterm -> pterm WEDGE pterm
-- On REPL reduce production pterm -> pterm WEDGE pterm
-- On RBRACKET reduce production pterm -> pterm WEDGE pterm
-- On PHASE reduce production pterm -> pterm WEDGE pterm
-- On OUT reduce production pterm -> pterm WEDGE pterm
-- On OR reduce production pterm -> pterm WEDGE pterm
-- On NEW reduce production pterm -> pterm WEDGE pterm
-- On LPAREN reduce production pterm -> pterm WEDGE pterm
-- On LET reduce production pterm -> pterm WEDGE pterm
-- On INT reduce production pterm -> pterm WEDGE pterm
-- On INSERT reduce production pterm -> pterm WEDGE pterm
-- On IN reduce production pterm -> pterm WEDGE pterm
-- On IF reduce production pterm -> pterm WEDGE pterm
-- On IDENT reduce production pterm -> pterm WEDGE pterm
-- On GET reduce production pterm -> pterm WEDGE pterm
-- On FOREACH reduce production pterm -> pterm WEDGE pterm
-- On EVENT reduce production pterm -> pterm WEDGE pterm
-- On EOF reduce production pterm -> pterm WEDGE pterm
-- On ELSE reduce production pterm -> pterm WEDGE pterm
-- On DOT reduce production pterm -> pterm WEDGE pterm
-- On COMMA reduce production pterm -> pterm WEDGE pterm
-- On BARRIER reduce production pterm -> pterm WEDGE pterm
-- On BAR reduce production pterm -> pterm WEDGE pterm

State 328:
pterm -> pterm EQUAL . pterm [ YIELD WEDGE THEN SEMI RPAREN REPL RBRACKET PHASE OUT OR NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EQUAL EOF ELSE DOT DIFF COMMA BARRIER BAR ]
-- On NOT shift to state 288
-- On NEW shift to state 290
-- On LPAREN shift to state 300
-- On LET shift to state 301
-- On INSERT shift to state 306
-- On IF shift to state 309
-- On IDENT shift to state 310
-- On GET shift to state 314
-- On EVENT shift to state 320
-- On CHOICE shift to state 323
-- On pterm shift to state 329
-- On basicpattern shift to state 332

State 329:
pterm -> pterm . EQUAL pterm [ YIELD WEDGE THEN SEMI RPAREN REPL RBRACKET PHASE OUT OR NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EQUAL EOF ELSE DOT DIFF COMMA BARRIER BAR ]
pterm -> pterm EQUAL pterm . [ YIELD WEDGE THEN SEMI RPAREN REPL RBRACKET PHASE OUT OR NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EQUAL EOF ELSE DOT DIFF COMMA BARRIER BAR ]
pterm -> pterm . DIFF pterm [ YIELD WEDGE THEN SEMI RPAREN REPL RBRACKET PHASE OUT OR NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EQUAL EOF ELSE DOT DIFF COMMA BARRIER BAR ]
pterm -> pterm . OR pterm [ YIELD WEDGE THEN SEMI RPAREN REPL RBRACKET PHASE OUT OR NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EQUAL EOF ELSE DOT DIFF COMMA BARRIER BAR ]
pterm -> pterm . WEDGE pterm [ YIELD WEDGE THEN SEMI RPAREN REPL RBRACKET PHASE OUT OR NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EQUAL EOF ELSE DOT DIFF COMMA BARRIER BAR ]
-- On DIFF shift to state 330
-- On YIELD reduce production pterm -> pterm EQUAL pterm
-- On WEDGE reduce production pterm -> pterm EQUAL pterm
-- On THEN reduce production pterm -> pterm EQUAL pterm
-- On SEMI reduce production pterm -> pterm EQUAL pterm
-- On RPAREN reduce production pterm -> pterm EQUAL pterm
-- On REPL reduce production pterm -> pterm EQUAL pterm
-- On RBRACKET reduce production pterm -> pterm EQUAL pterm
-- On PHASE reduce production pterm -> pterm EQUAL pterm
-- On OUT reduce production pterm -> pterm EQUAL pterm
-- On OR reduce production pterm -> pterm EQUAL pterm
-- On NEW reduce production pterm -> pterm EQUAL pterm
-- On LPAREN reduce production pterm -> pterm EQUAL pterm
-- On LET reduce production pterm -> pterm EQUAL pterm
-- On INT reduce production pterm -> pterm EQUAL pterm
-- On INSERT reduce production pterm -> pterm EQUAL pterm
-- On IN reduce production pterm -> pterm EQUAL pterm
-- On IF reduce production pterm -> pterm EQUAL pterm
-- On IDENT reduce production pterm -> pterm EQUAL pterm
-- On GET reduce production pterm -> pterm EQUAL pterm
-- On FOREACH reduce production pterm -> pterm EQUAL pterm
-- On EVENT reduce production pterm -> pterm EQUAL pterm
-- On EOF reduce production pterm -> pterm EQUAL pterm
-- On ELSE reduce production pterm -> pterm EQUAL pterm
-- On DOT reduce production pterm -> pterm EQUAL pterm
-- On COMMA reduce production pterm -> pterm EQUAL pterm
-- On BARRIER reduce production pterm -> pterm EQUAL pterm
-- On BAR reduce production pterm -> pterm EQUAL pterm

State 330:
pterm -> pterm DIFF . pterm [ YIELD WEDGE THEN SEMI RPAREN REPL RBRACKET PHASE OUT OR NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EQUAL EOF ELSE DOT DIFF COMMA BARRIER BAR ]
-- On NOT shift to state 288
-- On NEW shift to state 290
-- On LPAREN shift to state 300
-- On LET shift to state 301
-- On INSERT shift to state 306
-- On IF shift to state 309
-- On IDENT shift to state 310
-- On GET shift to state 314
-- On EVENT shift to state 320
-- On CHOICE shift to state 323
-- On pterm shift to state 331
-- On basicpattern shift to state 332

State 331:
pterm -> pterm . EQUAL pterm [ YIELD WEDGE THEN SEMI RPAREN REPL RBRACKET PHASE OUT OR NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EQUAL EOF ELSE DOT DIFF COMMA BARRIER BAR ]
pterm -> pterm . DIFF pterm [ YIELD WEDGE THEN SEMI RPAREN REPL RBRACKET PHASE OUT OR NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EQUAL EOF ELSE DOT DIFF COMMA BARRIER BAR ]
pterm -> pterm DIFF pterm . [ YIELD WEDGE THEN SEMI RPAREN REPL RBRACKET PHASE OUT OR NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EQUAL EOF ELSE DOT DIFF COMMA BARRIER BAR ]
pterm -> pterm . OR pterm [ YIELD WEDGE THEN SEMI RPAREN REPL RBRACKET PHASE OUT OR NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EQUAL EOF ELSE DOT DIFF COMMA BARRIER BAR ]
pterm -> pterm . WEDGE pterm [ YIELD WEDGE THEN SEMI RPAREN REPL RBRACKET PHASE OUT OR NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EQUAL EOF ELSE DOT DIFF COMMA BARRIER BAR ]
-- On YIELD reduce production pterm -> pterm DIFF pterm
-- On WEDGE reduce production pterm -> pterm DIFF pterm
-- On THEN reduce production pterm -> pterm DIFF pterm
-- On SEMI reduce production pterm -> pterm DIFF pterm
-- On RPAREN reduce production pterm -> pterm DIFF pterm
-- On REPL reduce production pterm -> pterm DIFF pterm
-- On RBRACKET reduce production pterm -> pterm DIFF pterm
-- On PHASE reduce production pterm -> pterm DIFF pterm
-- On OUT reduce production pterm -> pterm DIFF pterm
-- On OR reduce production pterm -> pterm DIFF pterm
-- On NEW reduce production pterm -> pterm DIFF pterm
-- On LPAREN reduce production pterm -> pterm DIFF pterm
-- On LET reduce production pterm -> pterm DIFF pterm
-- On INT reduce production pterm -> pterm DIFF pterm
-- On INSERT reduce production pterm -> pterm DIFF pterm
-- On IN reduce production pterm -> pterm DIFF pterm
-- On IF reduce production pterm -> pterm DIFF pterm
-- On IDENT reduce production pterm -> pterm DIFF pterm
-- On GET reduce production pterm -> pterm DIFF pterm
-- On FOREACH reduce production pterm -> pterm DIFF pterm
-- On EVENT reduce production pterm -> pterm DIFF pterm
-- On EQUAL reduce production pterm -> pterm DIFF pterm
-- On EOF reduce production pterm -> pterm DIFF pterm
-- On ELSE reduce production pterm -> pterm DIFF pterm
-- On DOT reduce production pterm -> pterm DIFF pterm
-- On COMMA reduce production pterm -> pterm DIFF pterm
-- On BARRIER reduce production pterm -> pterm DIFF pterm
-- On BAR reduce production pterm -> pterm DIFF pterm

State 332:
pterm -> basicpattern . LEFTARROW pterm SEMI pterm [ YIELD WEDGE THEN SEMI RPAREN REPL RBRACKET PHASE OUT OR NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EQUAL EOF ELSE DOT DIFF COMMA BARRIER BAR ]
-- On LEFTARROW shift to state 333

State 333:
pterm -> basicpattern LEFTARROW . pterm SEMI pterm [ YIELD WEDGE THEN SEMI RPAREN REPL RBRACKET PHASE OUT OR NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EQUAL EOF ELSE DOT DIFF COMMA BARRIER BAR ]
-- On NOT shift to state 288
-- On NEW shift to state 290
-- On LPAREN shift to state 300
-- On LET shift to state 301
-- On INSERT shift to state 306
-- On IF shift to state 309
-- On IDENT shift to state 310
-- On GET shift to state 314
-- On EVENT shift to state 320
-- On CHOICE shift to state 323
-- On pterm shift to state 334
-- On basicpattern shift to state 332

State 334:
pterm -> pterm . EQUAL pterm [ WEDGE SEMI OR EQUAL DIFF ]
pterm -> pterm . DIFF pterm [ WEDGE SEMI OR EQUAL DIFF ]
pterm -> pterm . OR pterm [ WEDGE SEMI OR EQUAL DIFF ]
pterm -> pterm . WEDGE pterm [ WEDGE SEMI OR EQUAL DIFF ]
pterm -> basicpattern LEFTARROW pterm . SEMI pterm [ YIELD WEDGE THEN SEMI RPAREN REPL RBRACKET PHASE OUT OR NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EQUAL EOF ELSE DOT DIFF COMMA BARRIER BAR ]
-- On WEDGE shift to state 326
-- On SEMI shift to state 335
-- On OR shift to state 337
-- On EQUAL shift to state 328
-- On DIFF shift to state 330

State 335:
pterm -> basicpattern LEFTARROW pterm SEMI . pterm [ YIELD WEDGE THEN SEMI RPAREN REPL RBRACKET PHASE OUT OR NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EQUAL EOF ELSE DOT DIFF COMMA BARRIER BAR ]
-- On NOT shift to state 288
-- On NEW shift to state 290
-- On LPAREN shift to state 300
-- On LET shift to state 301
-- On INSERT shift to state 306
-- On IF shift to state 309
-- On IDENT shift to state 310
-- On GET shift to state 314
-- On EVENT shift to state 320
-- On CHOICE shift to state 323
-- On pterm shift to state 336
-- On basicpattern shift to state 332

State 336:
pterm -> pterm . EQUAL pterm [ YIELD WEDGE THEN SEMI RPAREN REPL RBRACKET PHASE OUT OR NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EQUAL EOF ELSE DOT DIFF COMMA BARRIER BAR ]
pterm -> pterm . DIFF pterm [ YIELD WEDGE THEN SEMI RPAREN REPL RBRACKET PHASE OUT OR NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EQUAL EOF ELSE DOT DIFF COMMA BARRIER BAR ]
pterm -> pterm . OR pterm [ YIELD WEDGE THEN SEMI RPAREN REPL RBRACKET PHASE OUT OR NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EQUAL EOF ELSE DOT DIFF COMMA BARRIER BAR ]
pterm -> pterm . WEDGE pterm [ YIELD WEDGE THEN SEMI RPAREN REPL RBRACKET PHASE OUT OR NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EQUAL EOF ELSE DOT DIFF COMMA BARRIER BAR ]
pterm -> basicpattern LEFTARROW pterm SEMI pterm . [ YIELD WEDGE THEN SEMI RPAREN REPL RBRACKET PHASE OUT OR NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EQUAL EOF ELSE DOT DIFF COMMA BARRIER BAR ]
-- On WEDGE shift to state 326
-- On OR shift to state 337
-- On EQUAL shift to state 328
-- On DIFF shift to state 330
-- On YIELD reduce production pterm -> basicpattern LEFTARROW pterm SEMI pterm
-- On WEDGE reduce production pterm -> basicpattern LEFTARROW pterm SEMI pterm
-- On THEN reduce production pterm -> basicpattern LEFTARROW pterm SEMI pterm
-- On SEMI reduce production pterm -> basicpattern LEFTARROW pterm SEMI pterm
-- On RPAREN reduce production pterm -> basicpattern LEFTARROW pterm SEMI pterm
-- On REPL reduce production pterm -> basicpattern LEFTARROW pterm SEMI pterm
-- On RBRACKET reduce production pterm -> basicpattern LEFTARROW pterm SEMI pterm
-- On PHASE reduce production pterm -> basicpattern LEFTARROW pterm SEMI pterm
-- On OUT reduce production pterm -> basicpattern LEFTARROW pterm SEMI pterm
-- On OR reduce production pterm -> basicpattern LEFTARROW pterm SEMI pterm
-- On NEW reduce production pterm -> basicpattern LEFTARROW pterm SEMI pterm
-- On LPAREN reduce production pterm -> basicpattern LEFTARROW pterm SEMI pterm
-- On LET reduce production pterm -> basicpattern LEFTARROW pterm SEMI pterm
-- On INT reduce production pterm -> basicpattern LEFTARROW pterm SEMI pterm
-- On INSERT reduce production pterm -> basicpattern LEFTARROW pterm SEMI pterm
-- On IN reduce production pterm -> basicpattern LEFTARROW pterm SEMI pterm
-- On IF reduce production pterm -> basicpattern LEFTARROW pterm SEMI pterm
-- On IDENT reduce production pterm -> basicpattern LEFTARROW pterm SEMI pterm
-- On GET reduce production pterm -> basicpattern LEFTARROW pterm SEMI pterm
-- On FOREACH reduce production pterm -> basicpattern LEFTARROW pterm SEMI pterm
-- On EVENT reduce production pterm -> basicpattern LEFTARROW pterm SEMI pterm
-- On EQUAL reduce production pterm -> basicpattern LEFTARROW pterm SEMI pterm
-- On EOF reduce production pterm -> basicpattern LEFTARROW pterm SEMI pterm
-- On ELSE reduce production pterm -> basicpattern LEFTARROW pterm SEMI pterm
-- On DOT reduce production pterm -> basicpattern LEFTARROW pterm SEMI pterm
-- On DIFF reduce production pterm -> basicpattern LEFTARROW pterm SEMI pterm
-- On COMMA reduce production pterm -> basicpattern LEFTARROW pterm SEMI pterm
-- On BARRIER reduce production pterm -> basicpattern LEFTARROW pterm SEMI pterm
-- On BAR reduce production pterm -> basicpattern LEFTARROW pterm SEMI pterm
** Conflict on WEDGE OR EQUAL DIFF

State 337:
pterm -> pterm OR . pterm [ YIELD WEDGE THEN SEMI RPAREN REPL RBRACKET PHASE OUT OR NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EQUAL EOF ELSE DOT DIFF COMMA BARRIER BAR ]
-- On NOT shift to state 288
-- On NEW shift to state 290
-- On LPAREN shift to state 300
-- On LET shift to state 301
-- On INSERT shift to state 306
-- On IF shift to state 309
-- On IDENT shift to state 310
-- On GET shift to state 314
-- On EVENT shift to state 320
-- On CHOICE shift to state 323
-- On pterm shift to state 338
-- On basicpattern shift to state 332

State 338:
pterm -> pterm . EQUAL pterm [ YIELD WEDGE THEN SEMI RPAREN REPL RBRACKET PHASE OUT OR NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EQUAL EOF ELSE DOT DIFF COMMA BARRIER BAR ]
pterm -> pterm . DIFF pterm [ YIELD WEDGE THEN SEMI RPAREN REPL RBRACKET PHASE OUT OR NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EQUAL EOF ELSE DOT DIFF COMMA BARRIER BAR ]
pterm -> pterm . OR pterm [ YIELD WEDGE THEN SEMI RPAREN REPL RBRACKET PHASE OUT OR NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EQUAL EOF ELSE DOT DIFF COMMA BARRIER BAR ]
pterm -> pterm OR pterm . [ YIELD WEDGE THEN SEMI RPAREN REPL RBRACKET PHASE OUT OR NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EQUAL EOF ELSE DOT DIFF COMMA BARRIER BAR ]
pterm -> pterm . WEDGE pterm [ YIELD WEDGE THEN SEMI RPAREN REPL RBRACKET PHASE OUT OR NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EQUAL EOF ELSE DOT DIFF COMMA BARRIER BAR ]
-- On WEDGE shift to state 326
-- On OR shift to state 337
-- On EQUAL shift to state 328
-- On DIFF shift to state 330
-- On YIELD reduce production pterm -> pterm OR pterm
-- On THEN reduce production pterm -> pterm OR pterm
-- On SEMI reduce production pterm -> pterm OR pterm
-- On RPAREN reduce production pterm -> pterm OR pterm
-- On REPL reduce production pterm -> pterm OR pterm
-- On RBRACKET reduce production pterm -> pterm OR pterm
-- On PHASE reduce production pterm -> pterm OR pterm
-- On OUT reduce production pterm -> pterm OR pterm
-- On NEW reduce production pterm -> pterm OR pterm
-- On LPAREN reduce production pterm -> pterm OR pterm
-- On LET reduce production pterm -> pterm OR pterm
-- On INT reduce production pterm -> pterm OR pterm
-- On INSERT reduce production pterm -> pterm OR pterm
-- On IN reduce production pterm -> pterm OR pterm
-- On IF reduce production pterm -> pterm OR pterm
-- On IDENT reduce production pterm -> pterm OR pterm
-- On GET reduce production pterm -> pterm OR pterm
-- On FOREACH reduce production pterm -> pterm OR pterm
-- On EVENT reduce production pterm -> pterm OR pterm
-- On EOF reduce production pterm -> pterm OR pterm
-- On ELSE reduce production pterm -> pterm OR pterm
-- On DOT reduce production pterm -> pterm OR pterm
-- On COMMA reduce production pterm -> pterm OR pterm
-- On BARRIER reduce production pterm -> pterm OR pterm
-- On BAR reduce production pterm -> pterm OR pterm

State 339:
pterm -> CHOICE LBRACKET pterm COMMA . pterm RBRACKET [ YIELD WEDGE THEN SEMI RPAREN REPL RBRACKET PHASE OUT OR NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EQUAL EOF ELSE DOT DIFF COMMA BARRIER BAR ]
-- On NOT shift to state 288
-- On NEW shift to state 290
-- On LPAREN shift to state 300
-- On LET shift to state 301
-- On INSERT shift to state 306
-- On IF shift to state 309
-- On IDENT shift to state 310
-- On GET shift to state 314
-- On EVENT shift to state 320
-- On CHOICE shift to state 323
-- On pterm shift to state 340
-- On basicpattern shift to state 332

State 340:
pterm -> CHOICE LBRACKET pterm COMMA pterm . RBRACKET [ YIELD WEDGE THEN SEMI RPAREN REPL RBRACKET PHASE OUT OR NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EQUAL EOF ELSE DOT DIFF COMMA BARRIER BAR ]
pterm -> pterm . EQUAL pterm [ WEDGE RBRACKET OR EQUAL DIFF ]
pterm -> pterm . DIFF pterm [ WEDGE RBRACKET OR EQUAL DIFF ]
pterm -> pterm . OR pterm [ WEDGE RBRACKET OR EQUAL DIFF ]
pterm -> pterm . WEDGE pterm [ WEDGE RBRACKET OR EQUAL DIFF ]
-- On WEDGE shift to state 326
-- On RBRACKET shift to state 341
-- On OR shift to state 337
-- On EQUAL shift to state 328
-- On DIFF shift to state 330

State 341:
pterm -> CHOICE LBRACKET pterm COMMA pterm RBRACKET . [ YIELD WEDGE THEN SEMI RPAREN REPL RBRACKET PHASE OUT OR NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EQUAL EOF ELSE DOT DIFF COMMA BARRIER BAR ]
-- On YIELD reduce production pterm -> CHOICE LBRACKET pterm COMMA pterm RBRACKET
-- On WEDGE reduce production pterm -> CHOICE LBRACKET pterm COMMA pterm RBRACKET
-- On THEN reduce production pterm -> CHOICE LBRACKET pterm COMMA pterm RBRACKET
-- On SEMI reduce production pterm -> CHOICE LBRACKET pterm COMMA pterm RBRACKET
-- On RPAREN reduce production pterm -> CHOICE LBRACKET pterm COMMA pterm RBRACKET
-- On REPL reduce production pterm -> CHOICE LBRACKET pterm COMMA pterm RBRACKET
-- On RBRACKET reduce production pterm -> CHOICE LBRACKET pterm COMMA pterm RBRACKET
-- On PHASE reduce production pterm -> CHOICE LBRACKET pterm COMMA pterm RBRACKET
-- On OUT reduce production pterm -> CHOICE LBRACKET pterm COMMA pterm RBRACKET
-- On OR reduce production pterm -> CHOICE LBRACKET pterm COMMA pterm RBRACKET
-- On NEW reduce production pterm -> CHOICE LBRACKET pterm COMMA pterm RBRACKET
-- On LPAREN reduce production pterm -> CHOICE LBRACKET pterm COMMA pterm RBRACKET
-- On LET reduce production pterm -> CHOICE LBRACKET pterm COMMA pterm RBRACKET
-- On INT reduce production pterm -> CHOICE LBRACKET pterm COMMA pterm RBRACKET
-- On INSERT reduce production pterm -> CHOICE LBRACKET pterm COMMA pterm RBRACKET
-- On IN reduce production pterm -> CHOICE LBRACKET pterm COMMA pterm RBRACKET
-- On IF reduce production pterm -> CHOICE LBRACKET pterm COMMA pterm RBRACKET
-- On IDENT reduce production pterm -> CHOICE LBRACKET pterm COMMA pterm RBRACKET
-- On GET reduce production pterm -> CHOICE LBRACKET pterm COMMA pterm RBRACKET
-- On FOREACH reduce production pterm -> CHOICE LBRACKET pterm COMMA pterm RBRACKET
-- On EVENT reduce production pterm -> CHOICE LBRACKET pterm COMMA pterm RBRACKET
-- On EQUAL reduce production pterm -> CHOICE LBRACKET pterm COMMA pterm RBRACKET
-- On EOF reduce production pterm -> CHOICE LBRACKET pterm COMMA pterm RBRACKET
-- On ELSE reduce production pterm -> CHOICE LBRACKET pterm COMMA pterm RBRACKET
-- On DOT reduce production pterm -> CHOICE LBRACKET pterm COMMA pterm RBRACKET
-- On DIFF reduce production pterm -> CHOICE LBRACKET pterm COMMA pterm RBRACKET
-- On COMMA reduce production pterm -> CHOICE LBRACKET pterm COMMA pterm RBRACKET
-- On BARRIER reduce production pterm -> CHOICE LBRACKET pterm COMMA pterm RBRACKET
-- On BAR reduce production pterm -> CHOICE LBRACKET pterm COMMA pterm RBRACKET

State 342:
pterm -> EVENT IDENT LPAREN ptermseq . RPAREN newarg SEMI pterm [ YIELD WEDGE THEN SEMI RPAREN REPL RBRACKET PHASE OUT OR NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EQUAL EOF ELSE DOT DIFF COMMA BARRIER BAR ]
-- On RPAREN shift to state 343

State 343:
pterm -> EVENT IDENT LPAREN ptermseq RPAREN . newarg SEMI pterm [ YIELD WEDGE THEN SEMI RPAREN REPL RBRACKET PHASE OUT OR NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EQUAL EOF ELSE DOT DIFF COMMA BARRIER BAR ]
-- On LBRACKET shift to state 292
-- On newarg shift to state 344
-- On SEMI reduce production newarg -> 

State 344:
pterm -> EVENT IDENT LPAREN ptermseq RPAREN newarg . SEMI pterm [ YIELD WEDGE THEN SEMI RPAREN REPL RBRACKET PHASE OUT OR NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EQUAL EOF ELSE DOT DIFF COMMA BARRIER BAR ]
-- On SEMI shift to state 345

State 345:
pterm -> EVENT IDENT LPAREN ptermseq RPAREN newarg SEMI . pterm [ YIELD WEDGE THEN SEMI RPAREN REPL RBRACKET PHASE OUT OR NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EQUAL EOF ELSE DOT DIFF COMMA BARRIER BAR ]
-- On NOT shift to state 288
-- On NEW shift to state 290
-- On LPAREN shift to state 300
-- On LET shift to state 301
-- On INSERT shift to state 306
-- On IF shift to state 309
-- On IDENT shift to state 310
-- On GET shift to state 314
-- On EVENT shift to state 320
-- On CHOICE shift to state 323
-- On pterm shift to state 346
-- On basicpattern shift to state 332

State 346:
pterm -> pterm . EQUAL pterm [ YIELD WEDGE THEN SEMI RPAREN REPL RBRACKET PHASE OUT OR NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EQUAL EOF ELSE DOT DIFF COMMA BARRIER BAR ]
pterm -> pterm . DIFF pterm [ YIELD WEDGE THEN SEMI RPAREN REPL RBRACKET PHASE OUT OR NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EQUAL EOF ELSE DOT DIFF COMMA BARRIER BAR ]
pterm -> pterm . OR pterm [ YIELD WEDGE THEN SEMI RPAREN REPL RBRACKET PHASE OUT OR NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EQUAL EOF ELSE DOT DIFF COMMA BARRIER BAR ]
pterm -> pterm . WEDGE pterm [ YIELD WEDGE THEN SEMI RPAREN REPL RBRACKET PHASE OUT OR NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EQUAL EOF ELSE DOT DIFF COMMA BARRIER BAR ]
pterm -> EVENT IDENT LPAREN ptermseq RPAREN newarg SEMI pterm . [ YIELD WEDGE THEN SEMI RPAREN REPL RBRACKET PHASE OUT OR NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EQUAL EOF ELSE DOT DIFF COMMA BARRIER BAR ]
-- On WEDGE shift to state 326
-- On OR shift to state 337
-- On EQUAL shift to state 328
-- On DIFF shift to state 330
-- On YIELD reduce production pterm -> EVENT IDENT LPAREN ptermseq RPAREN newarg SEMI pterm
-- On WEDGE reduce production pterm -> EVENT IDENT LPAREN ptermseq RPAREN newarg SEMI pterm
-- On THEN reduce production pterm -> EVENT IDENT LPAREN ptermseq RPAREN newarg SEMI pterm
-- On SEMI reduce production pterm -> EVENT IDENT LPAREN ptermseq RPAREN newarg SEMI pterm
-- On RPAREN reduce production pterm -> EVENT IDENT LPAREN ptermseq RPAREN newarg SEMI pterm
-- On REPL reduce production pterm -> EVENT IDENT LPAREN ptermseq RPAREN newarg SEMI pterm
-- On RBRACKET reduce production pterm -> EVENT IDENT LPAREN ptermseq RPAREN newarg SEMI pterm
-- On PHASE reduce production pterm -> EVENT IDENT LPAREN ptermseq RPAREN newarg SEMI pterm
-- On OUT reduce production pterm -> EVENT IDENT LPAREN ptermseq RPAREN newarg SEMI pterm
-- On OR reduce production pterm -> EVENT IDENT LPAREN ptermseq RPAREN newarg SEMI pterm
-- On NEW reduce production pterm -> EVENT IDENT LPAREN ptermseq RPAREN newarg SEMI pterm
-- On LPAREN reduce production pterm -> EVENT IDENT LPAREN ptermseq RPAREN newarg SEMI pterm
-- On LET reduce production pterm -> EVENT IDENT LPAREN ptermseq RPAREN newarg SEMI pterm
-- On INT reduce production pterm -> EVENT IDENT LPAREN ptermseq RPAREN newarg SEMI pterm
-- On INSERT reduce production pterm -> EVENT IDENT LPAREN ptermseq RPAREN newarg SEMI pterm
-- On IN reduce production pterm -> EVENT IDENT LPAREN ptermseq RPAREN newarg SEMI pterm
-- On IF reduce production pterm -> EVENT IDENT LPAREN ptermseq RPAREN newarg SEMI pterm
-- On IDENT reduce production pterm -> EVENT IDENT LPAREN ptermseq RPAREN newarg SEMI pterm
-- On GET reduce production pterm -> EVENT IDENT LPAREN ptermseq RPAREN newarg SEMI pterm
-- On FOREACH reduce production pterm -> EVENT IDENT LPAREN ptermseq RPAREN newarg SEMI pterm
-- On EVENT reduce production pterm -> EVENT IDENT LPAREN ptermseq RPAREN newarg SEMI pterm
-- On EQUAL reduce production pterm -> EVENT IDENT LPAREN ptermseq RPAREN newarg SEMI pterm
-- On EOF reduce production pterm -> EVENT IDENT LPAREN ptermseq RPAREN newarg SEMI pterm
-- On ELSE reduce production pterm -> EVENT IDENT LPAREN ptermseq RPAREN newarg SEMI pterm
-- On DOT reduce production pterm -> EVENT IDENT LPAREN ptermseq RPAREN newarg SEMI pterm
-- On DIFF reduce production pterm -> EVENT IDENT LPAREN ptermseq RPAREN newarg SEMI pterm
-- On COMMA reduce production pterm -> EVENT IDENT LPAREN ptermseq RPAREN newarg SEMI pterm
-- On BARRIER reduce production pterm -> EVENT IDENT LPAREN ptermseq RPAREN newarg SEMI pterm
-- On BAR reduce production pterm -> EVENT IDENT LPAREN ptermseq RPAREN newarg SEMI pterm
** Conflict on WEDGE OR EQUAL DIFF

State 347:
neptermseq -> pterm . COMMA neptermseq [ RPAREN ]
neptermseq -> pterm . [ RPAREN ]
pterm -> pterm . EQUAL pterm [ WEDGE RPAREN OR EQUAL DIFF COMMA ]
pterm -> pterm . DIFF pterm [ WEDGE RPAREN OR EQUAL DIFF COMMA ]
pterm -> pterm . OR pterm [ WEDGE RPAREN OR EQUAL DIFF COMMA ]
pterm -> pterm . WEDGE pterm [ WEDGE RPAREN OR EQUAL DIFF COMMA ]
-- On WEDGE shift to state 326
-- On OR shift to state 337
-- On EQUAL shift to state 328
-- On DIFF shift to state 330
-- On COMMA shift to state 348
-- On RPAREN reduce production neptermseq -> pterm

State 348:
neptermseq -> pterm COMMA . neptermseq [ RPAREN ]
-- On NOT shift to state 288
-- On NEW shift to state 290
-- On LPAREN shift to state 300
-- On LET shift to state 301
-- On INSERT shift to state 306
-- On IF shift to state 309
-- On IDENT shift to state 310
-- On GET shift to state 314
-- On EVENT shift to state 320
-- On CHOICE shift to state 323
-- On pterm shift to state 347
-- On neptermseq shift to state 349
-- On basicpattern shift to state 332

State 349:
neptermseq -> pterm COMMA neptermseq . [ RPAREN ]
-- On RPAREN reduce production neptermseq -> pterm COMMA neptermseq

State 350:
ptermseq -> neptermseq . [ RPAREN ]
-- On RPAREN reduce production ptermseq -> neptermseq

State 351:
pterm -> EVENT IDENT newarg . SEMI pterm [ YIELD WEDGE THEN SEMI RPAREN REPL RBRACKET PHASE OUT OR NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EQUAL EOF ELSE DOT DIFF COMMA BARRIER BAR ]
-- On SEMI shift to state 352

State 352:
pterm -> EVENT IDENT newarg SEMI . pterm [ YIELD WEDGE THEN SEMI RPAREN REPL RBRACKET PHASE OUT OR NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EQUAL EOF ELSE DOT DIFF COMMA BARRIER BAR ]
-- On NOT shift to state 288
-- On NEW shift to state 290
-- On LPAREN shift to state 300
-- On LET shift to state 301
-- On INSERT shift to state 306
-- On IF shift to state 309
-- On IDENT shift to state 310
-- On GET shift to state 314
-- On EVENT shift to state 320
-- On CHOICE shift to state 323
-- On pterm shift to state 353
-- On basicpattern shift to state 332

State 353:
pterm -> pterm . EQUAL pterm [ YIELD WEDGE THEN SEMI RPAREN REPL RBRACKET PHASE OUT OR NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EQUAL EOF ELSE DOT DIFF COMMA BARRIER BAR ]
pterm -> pterm . DIFF pterm [ YIELD WEDGE THEN SEMI RPAREN REPL RBRACKET PHASE OUT OR NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EQUAL EOF ELSE DOT DIFF COMMA BARRIER BAR ]
pterm -> pterm . OR pterm [ YIELD WEDGE THEN SEMI RPAREN REPL RBRACKET PHASE OUT OR NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EQUAL EOF ELSE DOT DIFF COMMA BARRIER BAR ]
pterm -> pterm . WEDGE pterm [ YIELD WEDGE THEN SEMI RPAREN REPL RBRACKET PHASE OUT OR NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EQUAL EOF ELSE DOT DIFF COMMA BARRIER BAR ]
pterm -> EVENT IDENT newarg SEMI pterm . [ YIELD WEDGE THEN SEMI RPAREN REPL RBRACKET PHASE OUT OR NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EQUAL EOF ELSE DOT DIFF COMMA BARRIER BAR ]
-- On WEDGE shift to state 326
-- On OR shift to state 337
-- On EQUAL shift to state 328
-- On DIFF shift to state 330
-- On YIELD reduce production pterm -> EVENT IDENT newarg SEMI pterm
-- On WEDGE reduce production pterm -> EVENT IDENT newarg SEMI pterm
-- On THEN reduce production pterm -> EVENT IDENT newarg SEMI pterm
-- On SEMI reduce production pterm -> EVENT IDENT newarg SEMI pterm
-- On RPAREN reduce production pterm -> EVENT IDENT newarg SEMI pterm
-- On REPL reduce production pterm -> EVENT IDENT newarg SEMI pterm
-- On RBRACKET reduce production pterm -> EVENT IDENT newarg SEMI pterm
-- On PHASE reduce production pterm -> EVENT IDENT newarg SEMI pterm
-- On OUT reduce production pterm -> EVENT IDENT newarg SEMI pterm
-- On OR reduce production pterm -> EVENT IDENT newarg SEMI pterm
-- On NEW reduce production pterm -> EVENT IDENT newarg SEMI pterm
-- On LPAREN reduce production pterm -> EVENT IDENT newarg SEMI pterm
-- On LET reduce production pterm -> EVENT IDENT newarg SEMI pterm
-- On INT reduce production pterm -> EVENT IDENT newarg SEMI pterm
-- On INSERT reduce production pterm -> EVENT IDENT newarg SEMI pterm
-- On IN reduce production pterm -> EVENT IDENT newarg SEMI pterm
-- On IF reduce production pterm -> EVENT IDENT newarg SEMI pterm
-- On IDENT reduce production pterm -> EVENT IDENT newarg SEMI pterm
-- On GET reduce production pterm -> EVENT IDENT newarg SEMI pterm
-- On FOREACH reduce production pterm -> EVENT IDENT newarg SEMI pterm
-- On EVENT reduce production pterm -> EVENT IDENT newarg SEMI pterm
-- On EQUAL reduce production pterm -> EVENT IDENT newarg SEMI pterm
-- On EOF reduce production pterm -> EVENT IDENT newarg SEMI pterm
-- On ELSE reduce production pterm -> EVENT IDENT newarg SEMI pterm
-- On DOT reduce production pterm -> EVENT IDENT newarg SEMI pterm
-- On DIFF reduce production pterm -> EVENT IDENT newarg SEMI pterm
-- On COMMA reduce production pterm -> EVENT IDENT newarg SEMI pterm
-- On BARRIER reduce production pterm -> EVENT IDENT newarg SEMI pterm
-- On BAR reduce production pterm -> EVENT IDENT newarg SEMI pterm
** Conflict on WEDGE OR EQUAL DIFF

State 354:
pterm -> pterm . EQUAL pterm [ WEDGE OR IN EQUAL DIFF ]
pterm -> pterm . DIFF pterm [ WEDGE OR IN EQUAL DIFF ]
pterm -> pterm . OR pterm [ WEDGE OR IN EQUAL DIFF ]
pterm -> pterm . WEDGE pterm [ WEDGE OR IN EQUAL DIFF ]
pterm -> GET IDENT LPAREN tpatternseq RPAREN SUCHTHAT pterm . IN pterm [ YIELD WEDGE THEN SEMI RPAREN REPL RBRACKET PHASE OUT OR NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EQUAL EOF ELSE DOT DIFF COMMA BARRIER BAR ]
pterm -> GET IDENT LPAREN tpatternseq RPAREN SUCHTHAT pterm . IN pterm ELSE pterm [ YIELD WEDGE THEN SEMI RPAREN REPL RBRACKET PHASE OUT OR NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EQUAL EOF ELSE DOT DIFF COMMA BARRIER BAR ]
-- On WEDGE shift to state 326
-- On OR shift to state 337
-- On IN shift to state 355
-- On EQUAL shift to state 328
-- On DIFF shift to state 330

State 355:
pterm -> GET IDENT LPAREN tpatternseq RPAREN SUCHTHAT pterm IN . pterm [ YIELD WEDGE THEN SEMI RPAREN REPL RBRACKET PHASE OUT OR NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EQUAL EOF ELSE DOT DIFF COMMA BARRIER BAR ]
pterm -> GET IDENT LPAREN tpatternseq RPAREN SUCHTHAT pterm IN . pterm ELSE pterm [ YIELD WEDGE THEN SEMI RPAREN REPL RBRACKET PHASE OUT OR NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EQUAL EOF ELSE DOT DIFF COMMA BARRIER BAR ]
-- On NOT shift to state 288
-- On NEW shift to state 290
-- On LPAREN shift to state 300
-- On LET shift to state 301
-- On INSERT shift to state 306
-- On IF shift to state 309
-- On IDENT shift to state 310
-- On GET shift to state 314
-- On EVENT shift to state 320
-- On CHOICE shift to state 323
-- On pterm shift to state 356
-- On basicpattern shift to state 332

State 356:
pterm -> pterm . EQUAL pterm [ YIELD WEDGE THEN SEMI RPAREN REPL RBRACKET PHASE OUT OR NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EQUAL EOF ELSE DOT DIFF COMMA BARRIER BAR ]
pterm -> pterm . DIFF pterm [ YIELD WEDGE THEN SEMI RPAREN REPL RBRACKET PHASE OUT OR NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EQUAL EOF ELSE DOT DIFF COMMA BARRIER BAR ]
pterm -> pterm . OR pterm [ YIELD WEDGE THEN SEMI RPAREN REPL RBRACKET PHASE OUT OR NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EQUAL EOF ELSE DOT DIFF COMMA BARRIER BAR ]
pterm -> pterm . WEDGE pterm [ YIELD WEDGE THEN SEMI RPAREN REPL RBRACKET PHASE OUT OR NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EQUAL EOF ELSE DOT DIFF COMMA BARRIER BAR ]
pterm -> GET IDENT LPAREN tpatternseq RPAREN SUCHTHAT pterm IN pterm . [ YIELD WEDGE THEN SEMI RPAREN REPL RBRACKET PHASE OUT OR NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EQUAL EOF ELSE DOT DIFF COMMA BARRIER BAR ]
pterm -> GET IDENT LPAREN tpatternseq RPAREN SUCHTHAT pterm IN pterm . ELSE pterm [ YIELD WEDGE THEN SEMI RPAREN REPL RBRACKET PHASE OUT OR NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EQUAL EOF ELSE DOT DIFF COMMA BARRIER BAR ]
-- On WEDGE shift to state 326
-- On OR shift to state 337
-- On EQUAL shift to state 328
-- On ELSE shift to state 357
-- On DIFF shift to state 330
-- On YIELD reduce production pterm -> GET IDENT LPAREN tpatternseq RPAREN SUCHTHAT pterm IN pterm
-- On WEDGE reduce production pterm -> GET IDENT LPAREN tpatternseq RPAREN SUCHTHAT pterm IN pterm
-- On THEN reduce production pterm -> GET IDENT LPAREN tpatternseq RPAREN SUCHTHAT pterm IN pterm
-- On SEMI reduce production pterm -> GET IDENT LPAREN tpatternseq RPAREN SUCHTHAT pterm IN pterm
-- On RPAREN reduce production pterm -> GET IDENT LPAREN tpatternseq RPAREN SUCHTHAT pterm IN pterm
-- On REPL reduce production pterm -> GET IDENT LPAREN tpatternseq RPAREN SUCHTHAT pterm IN pterm
-- On RBRACKET reduce production pterm -> GET IDENT LPAREN tpatternseq RPAREN SUCHTHAT pterm IN pterm
-- On PHASE reduce production pterm -> GET IDENT LPAREN tpatternseq RPAREN SUCHTHAT pterm IN pterm
-- On OUT reduce production pterm -> GET IDENT LPAREN tpatternseq RPAREN SUCHTHAT pterm IN pterm
-- On OR reduce production pterm -> GET IDENT LPAREN tpatternseq RPAREN SUCHTHAT pterm IN pterm
-- On NEW reduce production pterm -> GET IDENT LPAREN tpatternseq RPAREN SUCHTHAT pterm IN pterm
-- On LPAREN reduce production pterm -> GET IDENT LPAREN tpatternseq RPAREN SUCHTHAT pterm IN pterm
-- On LET reduce production pterm -> GET IDENT LPAREN tpatternseq RPAREN SUCHTHAT pterm IN pterm
-- On INT reduce production pterm -> GET IDENT LPAREN tpatternseq RPAREN SUCHTHAT pterm IN pterm
-- On INSERT reduce production pterm -> GET IDENT LPAREN tpatternseq RPAREN SUCHTHAT pterm IN pterm
-- On IN reduce production pterm -> GET IDENT LPAREN tpatternseq RPAREN SUCHTHAT pterm IN pterm
-- On IF reduce production pterm -> GET IDENT LPAREN tpatternseq RPAREN SUCHTHAT pterm IN pterm
-- On IDENT reduce production pterm -> GET IDENT LPAREN tpatternseq RPAREN SUCHTHAT pterm IN pterm
-- On GET reduce production pterm -> GET IDENT LPAREN tpatternseq RPAREN SUCHTHAT pterm IN pterm
-- On FOREACH reduce production pterm -> GET IDENT LPAREN tpatternseq RPAREN SUCHTHAT pterm IN pterm
-- On EVENT reduce production pterm -> GET IDENT LPAREN tpatternseq RPAREN SUCHTHAT pterm IN pterm
-- On EQUAL reduce production pterm -> GET IDENT LPAREN tpatternseq RPAREN SUCHTHAT pterm IN pterm
-- On EOF reduce production pterm -> GET IDENT LPAREN tpatternseq RPAREN SUCHTHAT pterm IN pterm
-- On ELSE reduce production pterm -> GET IDENT LPAREN tpatternseq RPAREN SUCHTHAT pterm IN pterm
-- On DOT reduce production pterm -> GET IDENT LPAREN tpatternseq RPAREN SUCHTHAT pterm IN pterm
-- On DIFF reduce production pterm -> GET IDENT LPAREN tpatternseq RPAREN SUCHTHAT pterm IN pterm
-- On COMMA reduce production pterm -> GET IDENT LPAREN tpatternseq RPAREN SUCHTHAT pterm IN pterm
-- On BARRIER reduce production pterm -> GET IDENT LPAREN tpatternseq RPAREN SUCHTHAT pterm IN pterm
-- On BAR reduce production pterm -> GET IDENT LPAREN tpatternseq RPAREN SUCHTHAT pterm IN pterm
** Conflict on WEDGE OR EQUAL ELSE DIFF

State 357:
pterm -> GET IDENT LPAREN tpatternseq RPAREN SUCHTHAT pterm IN pterm ELSE . pterm [ YIELD WEDGE THEN SEMI RPAREN REPL RBRACKET PHASE OUT OR NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EQUAL EOF ELSE DOT DIFF COMMA BARRIER BAR ]
-- On NOT shift to state 288
-- On NEW shift to state 290
-- On LPAREN shift to state 300
-- On LET shift to state 301
-- On INSERT shift to state 306
-- On IF shift to state 309
-- On IDENT shift to state 310
-- On GET shift to state 314
-- On EVENT shift to state 320
-- On CHOICE shift to state 323
-- On pterm shift to state 358
-- On basicpattern shift to state 332

State 358:
pterm -> pterm . EQUAL pterm [ YIELD WEDGE THEN SEMI RPAREN REPL RBRACKET PHASE OUT OR NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EQUAL EOF ELSE DOT DIFF COMMA BARRIER BAR ]
pterm -> pterm . DIFF pterm [ YIELD WEDGE THEN SEMI RPAREN REPL RBRACKET PHASE OUT OR NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EQUAL EOF ELSE DOT DIFF COMMA BARRIER BAR ]
pterm -> pterm . OR pterm [ YIELD WEDGE THEN SEMI RPAREN REPL RBRACKET PHASE OUT OR NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EQUAL EOF ELSE DOT DIFF COMMA BARRIER BAR ]
pterm -> pterm . WEDGE pterm [ YIELD WEDGE THEN SEMI RPAREN REPL RBRACKET PHASE OUT OR NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EQUAL EOF ELSE DOT DIFF COMMA BARRIER BAR ]
pterm -> GET IDENT LPAREN tpatternseq RPAREN SUCHTHAT pterm IN pterm ELSE pterm . [ YIELD WEDGE THEN SEMI RPAREN REPL RBRACKET PHASE OUT OR NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EQUAL EOF ELSE DOT DIFF COMMA BARRIER BAR ]
-- On WEDGE shift to state 326
-- On OR shift to state 337
-- On EQUAL shift to state 328
-- On DIFF shift to state 330
-- On YIELD reduce production pterm -> GET IDENT LPAREN tpatternseq RPAREN SUCHTHAT pterm IN pterm ELSE pterm
-- On WEDGE reduce production pterm -> GET IDENT LPAREN tpatternseq RPAREN SUCHTHAT pterm IN pterm ELSE pterm
-- On THEN reduce production pterm -> GET IDENT LPAREN tpatternseq RPAREN SUCHTHAT pterm IN pterm ELSE pterm
-- On SEMI reduce production pterm -> GET IDENT LPAREN tpatternseq RPAREN SUCHTHAT pterm IN pterm ELSE pterm
-- On RPAREN reduce production pterm -> GET IDENT LPAREN tpatternseq RPAREN SUCHTHAT pterm IN pterm ELSE pterm
-- On REPL reduce production pterm -> GET IDENT LPAREN tpatternseq RPAREN SUCHTHAT pterm IN pterm ELSE pterm
-- On RBRACKET reduce production pterm -> GET IDENT LPAREN tpatternseq RPAREN SUCHTHAT pterm IN pterm ELSE pterm
-- On PHASE reduce production pterm -> GET IDENT LPAREN tpatternseq RPAREN SUCHTHAT pterm IN pterm ELSE pterm
-- On OUT reduce production pterm -> GET IDENT LPAREN tpatternseq RPAREN SUCHTHAT pterm IN pterm ELSE pterm
-- On OR reduce production pterm -> GET IDENT LPAREN tpatternseq RPAREN SUCHTHAT pterm IN pterm ELSE pterm
-- On NEW reduce production pterm -> GET IDENT LPAREN tpatternseq RPAREN SUCHTHAT pterm IN pterm ELSE pterm
-- On LPAREN reduce production pterm -> GET IDENT LPAREN tpatternseq RPAREN SUCHTHAT pterm IN pterm ELSE pterm
-- On LET reduce production pterm -> GET IDENT LPAREN tpatternseq RPAREN SUCHTHAT pterm IN pterm ELSE pterm
-- On INT reduce production pterm -> GET IDENT LPAREN tpatternseq RPAREN SUCHTHAT pterm IN pterm ELSE pterm
-- On INSERT reduce production pterm -> GET IDENT LPAREN tpatternseq RPAREN SUCHTHAT pterm IN pterm ELSE pterm
-- On IN reduce production pterm -> GET IDENT LPAREN tpatternseq RPAREN SUCHTHAT pterm IN pterm ELSE pterm
-- On IF reduce production pterm -> GET IDENT LPAREN tpatternseq RPAREN SUCHTHAT pterm IN pterm ELSE pterm
-- On IDENT reduce production pterm -> GET IDENT LPAREN tpatternseq RPAREN SUCHTHAT pterm IN pterm ELSE pterm
-- On GET reduce production pterm -> GET IDENT LPAREN tpatternseq RPAREN SUCHTHAT pterm IN pterm ELSE pterm
-- On FOREACH reduce production pterm -> GET IDENT LPAREN tpatternseq RPAREN SUCHTHAT pterm IN pterm ELSE pterm
-- On EVENT reduce production pterm -> GET IDENT LPAREN tpatternseq RPAREN SUCHTHAT pterm IN pterm ELSE pterm
-- On EQUAL reduce production pterm -> GET IDENT LPAREN tpatternseq RPAREN SUCHTHAT pterm IN pterm ELSE pterm
-- On EOF reduce production pterm -> GET IDENT LPAREN tpatternseq RPAREN SUCHTHAT pterm IN pterm ELSE pterm
-- On ELSE reduce production pterm -> GET IDENT LPAREN tpatternseq RPAREN SUCHTHAT pterm IN pterm ELSE pterm
-- On DOT reduce production pterm -> GET IDENT LPAREN tpatternseq RPAREN SUCHTHAT pterm IN pterm ELSE pterm
-- On DIFF reduce production pterm -> GET IDENT LPAREN tpatternseq RPAREN SUCHTHAT pterm IN pterm ELSE pterm
-- On COMMA reduce production pterm -> GET IDENT LPAREN tpatternseq RPAREN SUCHTHAT pterm IN pterm ELSE pterm
-- On BARRIER reduce production pterm -> GET IDENT LPAREN tpatternseq RPAREN SUCHTHAT pterm IN pterm ELSE pterm
-- On BAR reduce production pterm -> GET IDENT LPAREN tpatternseq RPAREN SUCHTHAT pterm IN pterm ELSE pterm
** Conflict on WEDGE OR EQUAL DIFF

State 359:
pterm -> GET IDENT LPAREN tpatternseq RPAREN IN . pterm [ YIELD WEDGE THEN SEMI RPAREN REPL RBRACKET PHASE OUT OR NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EQUAL EOF ELSE DOT DIFF COMMA BARRIER BAR ]
pterm -> GET IDENT LPAREN tpatternseq RPAREN IN . pterm ELSE pterm [ YIELD WEDGE THEN SEMI RPAREN REPL RBRACKET PHASE OUT OR NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EQUAL EOF ELSE DOT DIFF COMMA BARRIER BAR ]
-- On NOT shift to state 288
-- On NEW shift to state 290
-- On LPAREN shift to state 300
-- On LET shift to state 301
-- On INSERT shift to state 306
-- On IF shift to state 309
-- On IDENT shift to state 310
-- On GET shift to state 314
-- On EVENT shift to state 320
-- On CHOICE shift to state 323
-- On pterm shift to state 360
-- On basicpattern shift to state 332

State 360:
pterm -> pterm . EQUAL pterm [ YIELD WEDGE THEN SEMI RPAREN REPL RBRACKET PHASE OUT OR NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EQUAL EOF ELSE DOT DIFF COMMA BARRIER BAR ]
pterm -> pterm . DIFF pterm [ YIELD WEDGE THEN SEMI RPAREN REPL RBRACKET PHASE OUT OR NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EQUAL EOF ELSE DOT DIFF COMMA BARRIER BAR ]
pterm -> pterm . OR pterm [ YIELD WEDGE THEN SEMI RPAREN REPL RBRACKET PHASE OUT OR NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EQUAL EOF ELSE DOT DIFF COMMA BARRIER BAR ]
pterm -> pterm . WEDGE pterm [ YIELD WEDGE THEN SEMI RPAREN REPL RBRACKET PHASE OUT OR NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EQUAL EOF ELSE DOT DIFF COMMA BARRIER BAR ]
pterm -> GET IDENT LPAREN tpatternseq RPAREN IN pterm . [ YIELD WEDGE THEN SEMI RPAREN REPL RBRACKET PHASE OUT OR NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EQUAL EOF ELSE DOT DIFF COMMA BARRIER BAR ]
pterm -> GET IDENT LPAREN tpatternseq RPAREN IN pterm . ELSE pterm [ YIELD WEDGE THEN SEMI RPAREN REPL RBRACKET PHASE OUT OR NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EQUAL EOF ELSE DOT DIFF COMMA BARRIER BAR ]
-- On WEDGE shift to state 326
-- On OR shift to state 337
-- On EQUAL shift to state 328
-- On ELSE shift to state 361
-- On DIFF shift to state 330
-- On YIELD reduce production pterm -> GET IDENT LPAREN tpatternseq RPAREN IN pterm
-- On WEDGE reduce production pterm -> GET IDENT LPAREN tpatternseq RPAREN IN pterm
-- On THEN reduce production pterm -> GET IDENT LPAREN tpatternseq RPAREN IN pterm
-- On SEMI reduce production pterm -> GET IDENT LPAREN tpatternseq RPAREN IN pterm
-- On RPAREN reduce production pterm -> GET IDENT LPAREN tpatternseq RPAREN IN pterm
-- On REPL reduce production pterm -> GET IDENT LPAREN tpatternseq RPAREN IN pterm
-- On RBRACKET reduce production pterm -> GET IDENT LPAREN tpatternseq RPAREN IN pterm
-- On PHASE reduce production pterm -> GET IDENT LPAREN tpatternseq RPAREN IN pterm
-- On OUT reduce production pterm -> GET IDENT LPAREN tpatternseq RPAREN IN pterm
-- On OR reduce production pterm -> GET IDENT LPAREN tpatternseq RPAREN IN pterm
-- On NEW reduce production pterm -> GET IDENT LPAREN tpatternseq RPAREN IN pterm
-- On LPAREN reduce production pterm -> GET IDENT LPAREN tpatternseq RPAREN IN pterm
-- On LET reduce production pterm -> GET IDENT LPAREN tpatternseq RPAREN IN pterm
-- On INT reduce production pterm -> GET IDENT LPAREN tpatternseq RPAREN IN pterm
-- On INSERT reduce production pterm -> GET IDENT LPAREN tpatternseq RPAREN IN pterm
-- On IN reduce production pterm -> GET IDENT LPAREN tpatternseq RPAREN IN pterm
-- On IF reduce production pterm -> GET IDENT LPAREN tpatternseq RPAREN IN pterm
-- On IDENT reduce production pterm -> GET IDENT LPAREN tpatternseq RPAREN IN pterm
-- On GET reduce production pterm -> GET IDENT LPAREN tpatternseq RPAREN IN pterm
-- On FOREACH reduce production pterm -> GET IDENT LPAREN tpatternseq RPAREN IN pterm
-- On EVENT reduce production pterm -> GET IDENT LPAREN tpatternseq RPAREN IN pterm
-- On EQUAL reduce production pterm -> GET IDENT LPAREN tpatternseq RPAREN IN pterm
-- On EOF reduce production pterm -> GET IDENT LPAREN tpatternseq RPAREN IN pterm
-- On ELSE reduce production pterm -> GET IDENT LPAREN tpatternseq RPAREN IN pterm
-- On DOT reduce production pterm -> GET IDENT LPAREN tpatternseq RPAREN IN pterm
-- On DIFF reduce production pterm -> GET IDENT LPAREN tpatternseq RPAREN IN pterm
-- On COMMA reduce production pterm -> GET IDENT LPAREN tpatternseq RPAREN IN pterm
-- On BARRIER reduce production pterm -> GET IDENT LPAREN tpatternseq RPAREN IN pterm
-- On BAR reduce production pterm -> GET IDENT LPAREN tpatternseq RPAREN IN pterm
** Conflict on WEDGE OR EQUAL ELSE DIFF

State 361:
pterm -> GET IDENT LPAREN tpatternseq RPAREN IN pterm ELSE . pterm [ YIELD WEDGE THEN SEMI RPAREN REPL RBRACKET PHASE OUT OR NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EQUAL EOF ELSE DOT DIFF COMMA BARRIER BAR ]
-- On NOT shift to state 288
-- On NEW shift to state 290
-- On LPAREN shift to state 300
-- On LET shift to state 301
-- On INSERT shift to state 306
-- On IF shift to state 309
-- On IDENT shift to state 310
-- On GET shift to state 314
-- On EVENT shift to state 320
-- On CHOICE shift to state 323
-- On pterm shift to state 362
-- On basicpattern shift to state 332

State 362:
pterm -> pterm . EQUAL pterm [ YIELD WEDGE THEN SEMI RPAREN REPL RBRACKET PHASE OUT OR NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EQUAL EOF ELSE DOT DIFF COMMA BARRIER BAR ]
pterm -> pterm . DIFF pterm [ YIELD WEDGE THEN SEMI RPAREN REPL RBRACKET PHASE OUT OR NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EQUAL EOF ELSE DOT DIFF COMMA BARRIER BAR ]
pterm -> pterm . OR pterm [ YIELD WEDGE THEN SEMI RPAREN REPL RBRACKET PHASE OUT OR NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EQUAL EOF ELSE DOT DIFF COMMA BARRIER BAR ]
pterm -> pterm . WEDGE pterm [ YIELD WEDGE THEN SEMI RPAREN REPL RBRACKET PHASE OUT OR NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EQUAL EOF ELSE DOT DIFF COMMA BARRIER BAR ]
pterm -> GET IDENT LPAREN tpatternseq RPAREN IN pterm ELSE pterm . [ YIELD WEDGE THEN SEMI RPAREN REPL RBRACKET PHASE OUT OR NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EQUAL EOF ELSE DOT DIFF COMMA BARRIER BAR ]
-- On WEDGE shift to state 326
-- On OR shift to state 337
-- On EQUAL shift to state 328
-- On DIFF shift to state 330
-- On YIELD reduce production pterm -> GET IDENT LPAREN tpatternseq RPAREN IN pterm ELSE pterm
-- On WEDGE reduce production pterm -> GET IDENT LPAREN tpatternseq RPAREN IN pterm ELSE pterm
-- On THEN reduce production pterm -> GET IDENT LPAREN tpatternseq RPAREN IN pterm ELSE pterm
-- On SEMI reduce production pterm -> GET IDENT LPAREN tpatternseq RPAREN IN pterm ELSE pterm
-- On RPAREN reduce production pterm -> GET IDENT LPAREN tpatternseq RPAREN IN pterm ELSE pterm
-- On REPL reduce production pterm -> GET IDENT LPAREN tpatternseq RPAREN IN pterm ELSE pterm
-- On RBRACKET reduce production pterm -> GET IDENT LPAREN tpatternseq RPAREN IN pterm ELSE pterm
-- On PHASE reduce production pterm -> GET IDENT LPAREN tpatternseq RPAREN IN pterm ELSE pterm
-- On OUT reduce production pterm -> GET IDENT LPAREN tpatternseq RPAREN IN pterm ELSE pterm
-- On OR reduce production pterm -> GET IDENT LPAREN tpatternseq RPAREN IN pterm ELSE pterm
-- On NEW reduce production pterm -> GET IDENT LPAREN tpatternseq RPAREN IN pterm ELSE pterm
-- On LPAREN reduce production pterm -> GET IDENT LPAREN tpatternseq RPAREN IN pterm ELSE pterm
-- On LET reduce production pterm -> GET IDENT LPAREN tpatternseq RPAREN IN pterm ELSE pterm
-- On INT reduce production pterm -> GET IDENT LPAREN tpatternseq RPAREN IN pterm ELSE pterm
-- On INSERT reduce production pterm -> GET IDENT LPAREN tpatternseq RPAREN IN pterm ELSE pterm
-- On IN reduce production pterm -> GET IDENT LPAREN tpatternseq RPAREN IN pterm ELSE pterm
-- On IF reduce production pterm -> GET IDENT LPAREN tpatternseq RPAREN IN pterm ELSE pterm
-- On IDENT reduce production pterm -> GET IDENT LPAREN tpatternseq RPAREN IN pterm ELSE pterm
-- On GET reduce production pterm -> GET IDENT LPAREN tpatternseq RPAREN IN pterm ELSE pterm
-- On FOREACH reduce production pterm -> GET IDENT LPAREN tpatternseq RPAREN IN pterm ELSE pterm
-- On EVENT reduce production pterm -> GET IDENT LPAREN tpatternseq RPAREN IN pterm ELSE pterm
-- On EQUAL reduce production pterm -> GET IDENT LPAREN tpatternseq RPAREN IN pterm ELSE pterm
-- On EOF reduce production pterm -> GET IDENT LPAREN tpatternseq RPAREN IN pterm ELSE pterm
-- On ELSE reduce production pterm -> GET IDENT LPAREN tpatternseq RPAREN IN pterm ELSE pterm
-- On DOT reduce production pterm -> GET IDENT LPAREN tpatternseq RPAREN IN pterm ELSE pterm
-- On DIFF reduce production pterm -> GET IDENT LPAREN tpatternseq RPAREN IN pterm ELSE pterm
-- On COMMA reduce production pterm -> GET IDENT LPAREN tpatternseq RPAREN IN pterm ELSE pterm
-- On BARRIER reduce production pterm -> GET IDENT LPAREN tpatternseq RPAREN IN pterm ELSE pterm
-- On BAR reduce production pterm -> GET IDENT LPAREN tpatternseq RPAREN IN pterm ELSE pterm
** Conflict on WEDGE OR EQUAL DIFF

State 363:
nepatternseq -> tpattern . COMMA nepatternseq [ RPAREN ]
nepatternseq -> tpattern . [ RPAREN ]
-- On COMMA shift to state 364
-- On RPAREN reduce production nepatternseq -> tpattern

State 364:
nepatternseq -> tpattern COMMA . nepatternseq [ RPAREN ]
-- On LPAREN shift to state 302
-- On IDENT shift to state 303
-- On EQUAL shift to state 305
-- On tpattern shift to state 363
-- On nepatternseq shift to state 365
-- On basicpattern shift to state 366

State 365:
nepatternseq -> tpattern COMMA nepatternseq . [ RPAREN ]
-- On RPAREN reduce production nepatternseq -> tpattern COMMA nepatternseq

State 366:
tpattern -> basicpattern . [ RPAREN EQUAL COMMA ]
-- On RPAREN reduce production tpattern -> basicpattern
-- On EQUAL reduce production tpattern -> basicpattern
-- On COMMA reduce production tpattern -> basicpattern

State 367:
tpatternseq -> nepatternseq . [ RPAREN ]
-- On RPAREN reduce production tpatternseq -> nepatternseq

State 368:
pterm -> pterm . EQUAL pterm [ YIELD WEDGE THEN SEMI RPAREN REPL RBRACKET PHASE OUT OR NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EQUAL EOF ELSE DOT DIFF COMMA BARRIER BAR ]
pterm -> pterm . DIFF pterm [ YIELD WEDGE THEN SEMI RPAREN REPL RBRACKET PHASE OUT OR NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EQUAL EOF ELSE DOT DIFF COMMA BARRIER BAR ]
pterm -> pterm . OR pterm [ YIELD WEDGE THEN SEMI RPAREN REPL RBRACKET PHASE OUT OR NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EQUAL EOF ELSE DOT DIFF COMMA BARRIER BAR ]
pterm -> pterm . WEDGE pterm [ YIELD WEDGE THEN SEMI RPAREN REPL RBRACKET PHASE OUT OR NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EQUAL EOF ELSE DOT DIFF COMMA BARRIER BAR ]
pterm -> IDENT RANDOM typeid SEMI pterm . [ YIELD WEDGE THEN SEMI RPAREN REPL RBRACKET PHASE OUT OR NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EQUAL EOF ELSE DOT DIFF COMMA BARRIER BAR ]
-- On WEDGE shift to state 326
-- On OR shift to state 337
-- On EQUAL shift to state 328
-- On DIFF shift to state 330
-- On YIELD reduce production pterm -> IDENT RANDOM typeid SEMI pterm
-- On WEDGE reduce production pterm -> IDENT RANDOM typeid SEMI pterm
-- On THEN reduce production pterm -> IDENT RANDOM typeid SEMI pterm
-- On SEMI reduce production pterm -> IDENT RANDOM typeid SEMI pterm
-- On RPAREN reduce production pterm -> IDENT RANDOM typeid SEMI pterm
-- On REPL reduce production pterm -> IDENT RANDOM typeid SEMI pterm
-- On RBRACKET reduce production pterm -> IDENT RANDOM typeid SEMI pterm
-- On PHASE reduce production pterm -> IDENT RANDOM typeid SEMI pterm
-- On OUT reduce production pterm -> IDENT RANDOM typeid SEMI pterm
-- On OR reduce production pterm -> IDENT RANDOM typeid SEMI pterm
-- On NEW reduce production pterm -> IDENT RANDOM typeid SEMI pterm
-- On LPAREN reduce production pterm -> IDENT RANDOM typeid SEMI pterm
-- On LET reduce production pterm -> IDENT RANDOM typeid SEMI pterm
-- On INT reduce production pterm -> IDENT RANDOM typeid SEMI pterm
-- On INSERT reduce production pterm -> IDENT RANDOM typeid SEMI pterm
-- On IN reduce production pterm -> IDENT RANDOM typeid SEMI pterm
-- On IF reduce production pterm -> IDENT RANDOM typeid SEMI pterm
-- On IDENT reduce production pterm -> IDENT RANDOM typeid SEMI pterm
-- On GET reduce production pterm -> IDENT RANDOM typeid SEMI pterm
-- On FOREACH reduce production pterm -> IDENT RANDOM typeid SEMI pterm
-- On EVENT reduce production pterm -> IDENT RANDOM typeid SEMI pterm
-- On EQUAL reduce production pterm -> IDENT RANDOM typeid SEMI pterm
-- On EOF reduce production pterm -> IDENT RANDOM typeid SEMI pterm
-- On ELSE reduce production pterm -> IDENT RANDOM typeid SEMI pterm
-- On DOT reduce production pterm -> IDENT RANDOM typeid SEMI pterm
-- On DIFF reduce production pterm -> IDENT RANDOM typeid SEMI pterm
-- On COMMA reduce production pterm -> IDENT RANDOM typeid SEMI pterm
-- On BARRIER reduce production pterm -> IDENT RANDOM typeid SEMI pterm
-- On BAR reduce production pterm -> IDENT RANDOM typeid SEMI pterm
** Conflict on WEDGE OR EQUAL DIFF

State 369:
pterm -> IDENT LPAREN . ptermseq RPAREN [ YIELD WEDGE THEN SEMI RPAREN REPL RBRACKET PHASE OUT OR NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EQUAL EOF ELSE DOT DIFF COMMA BARRIER BAR ]
-- On NOT shift to state 288
-- On NEW shift to state 290
-- On LPAREN shift to state 300
-- On LET shift to state 301
-- On INSERT shift to state 306
-- On IF shift to state 309
-- On IDENT shift to state 310
-- On GET shift to state 314
-- On EVENT shift to state 320
-- On CHOICE shift to state 323
-- On ptermseq shift to state 370
-- On pterm shift to state 347
-- On neptermseq shift to state 350
-- On basicpattern shift to state 332
-- On RPAREN reduce production ptermseq -> 

State 370:
pterm -> IDENT LPAREN ptermseq . RPAREN [ YIELD WEDGE THEN SEMI RPAREN REPL RBRACKET PHASE OUT OR NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EQUAL EOF ELSE DOT DIFF COMMA BARRIER BAR ]
-- On RPAREN shift to state 371

State 371:
pterm -> IDENT LPAREN ptermseq RPAREN . [ YIELD WEDGE THEN SEMI RPAREN REPL RBRACKET PHASE OUT OR NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EQUAL EOF ELSE DOT DIFF COMMA BARRIER BAR ]
-- On YIELD reduce production pterm -> IDENT LPAREN ptermseq RPAREN
-- On WEDGE reduce production pterm -> IDENT LPAREN ptermseq RPAREN
-- On THEN reduce production pterm -> IDENT LPAREN ptermseq RPAREN
-- On SEMI reduce production pterm -> IDENT LPAREN ptermseq RPAREN
-- On RPAREN reduce production pterm -> IDENT LPAREN ptermseq RPAREN
-- On REPL reduce production pterm -> IDENT LPAREN ptermseq RPAREN
-- On RBRACKET reduce production pterm -> IDENT LPAREN ptermseq RPAREN
-- On PHASE reduce production pterm -> IDENT LPAREN ptermseq RPAREN
-- On OUT reduce production pterm -> IDENT LPAREN ptermseq RPAREN
-- On OR reduce production pterm -> IDENT LPAREN ptermseq RPAREN
-- On NEW reduce production pterm -> IDENT LPAREN ptermseq RPAREN
-- On LPAREN reduce production pterm -> IDENT LPAREN ptermseq RPAREN
-- On LET reduce production pterm -> IDENT LPAREN ptermseq RPAREN
-- On INT reduce production pterm -> IDENT LPAREN ptermseq RPAREN
-- On INSERT reduce production pterm -> IDENT LPAREN ptermseq RPAREN
-- On IN reduce production pterm -> IDENT LPAREN ptermseq RPAREN
-- On IF reduce production pterm -> IDENT LPAREN ptermseq RPAREN
-- On IDENT reduce production pterm -> IDENT LPAREN ptermseq RPAREN
-- On GET reduce production pterm -> IDENT LPAREN ptermseq RPAREN
-- On FOREACH reduce production pterm -> IDENT LPAREN ptermseq RPAREN
-- On EVENT reduce production pterm -> IDENT LPAREN ptermseq RPAREN
-- On EQUAL reduce production pterm -> IDENT LPAREN ptermseq RPAREN
-- On EOF reduce production pterm -> IDENT LPAREN ptermseq RPAREN
-- On ELSE reduce production pterm -> IDENT LPAREN ptermseq RPAREN
-- On DOT reduce production pterm -> IDENT LPAREN ptermseq RPAREN
-- On DIFF reduce production pterm -> IDENT LPAREN ptermseq RPAREN
-- On COMMA reduce production pterm -> IDENT LPAREN ptermseq RPAREN
-- On BARRIER reduce production pterm -> IDENT LPAREN ptermseq RPAREN
-- On BAR reduce production pterm -> IDENT LPAREN ptermseq RPAREN

State 372:
basicpattern -> IDENT COLON . typeid [ RPAREN LEFTARROW COMMA ]
-- On IDENT shift to state 17
-- On CHANNEL shift to state 18
-- On typeid shift to state 373

State 373:
basicpattern -> IDENT COLON typeid . [ RPAREN LEFTARROW COMMA ]
-- On RPAREN reduce production basicpattern -> IDENT COLON typeid
-- On LEFTARROW reduce production basicpattern -> IDENT COLON typeid
-- On COMMA reduce production basicpattern -> IDENT COLON typeid

State 374:
pterm -> pterm . EQUAL pterm [ WEDGE THEN OR EQUAL DIFF ]
pterm -> pterm . DIFF pterm [ WEDGE THEN OR EQUAL DIFF ]
pterm -> pterm . OR pterm [ WEDGE THEN OR EQUAL DIFF ]
pterm -> pterm . WEDGE pterm [ WEDGE THEN OR EQUAL DIFF ]
pterm -> IF pterm . THEN pterm [ YIELD WEDGE THEN SEMI RPAREN REPL RBRACKET PHASE OUT OR NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EQUAL EOF ELSE DOT DIFF COMMA BARRIER BAR ]
pterm -> IF pterm . THEN pterm ELSE pterm [ YIELD WEDGE THEN SEMI RPAREN REPL RBRACKET PHASE OUT OR NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EQUAL EOF ELSE DOT DIFF COMMA BARRIER BAR ]
-- On WEDGE shift to state 326
-- On THEN shift to state 375
-- On OR shift to state 337
-- On EQUAL shift to state 328
-- On DIFF shift to state 330

State 375:
pterm -> IF pterm THEN . pterm [ YIELD WEDGE THEN SEMI RPAREN REPL RBRACKET PHASE OUT OR NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EQUAL EOF ELSE DOT DIFF COMMA BARRIER BAR ]
pterm -> IF pterm THEN . pterm ELSE pterm [ YIELD WEDGE THEN SEMI RPAREN REPL RBRACKET PHASE OUT OR NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EQUAL EOF ELSE DOT DIFF COMMA BARRIER BAR ]
-- On NOT shift to state 288
-- On NEW shift to state 290
-- On LPAREN shift to state 300
-- On LET shift to state 301
-- On INSERT shift to state 306
-- On IF shift to state 309
-- On IDENT shift to state 310
-- On GET shift to state 314
-- On EVENT shift to state 320
-- On CHOICE shift to state 323
-- On pterm shift to state 376
-- On basicpattern shift to state 332

State 376:
pterm -> pterm . EQUAL pterm [ YIELD WEDGE THEN SEMI RPAREN REPL RBRACKET PHASE OUT OR NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EQUAL EOF ELSE DOT DIFF COMMA BARRIER BAR ]
pterm -> pterm . DIFF pterm [ YIELD WEDGE THEN SEMI RPAREN REPL RBRACKET PHASE OUT OR NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EQUAL EOF ELSE DOT DIFF COMMA BARRIER BAR ]
pterm -> pterm . OR pterm [ YIELD WEDGE THEN SEMI RPAREN REPL RBRACKET PHASE OUT OR NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EQUAL EOF ELSE DOT DIFF COMMA BARRIER BAR ]
pterm -> pterm . WEDGE pterm [ YIELD WEDGE THEN SEMI RPAREN REPL RBRACKET PHASE OUT OR NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EQUAL EOF ELSE DOT DIFF COMMA BARRIER BAR ]
pterm -> IF pterm THEN pterm . [ YIELD WEDGE THEN SEMI RPAREN REPL RBRACKET PHASE OUT OR NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EQUAL EOF ELSE DOT DIFF COMMA BARRIER BAR ]
pterm -> IF pterm THEN pterm . ELSE pterm [ YIELD WEDGE THEN SEMI RPAREN REPL RBRACKET PHASE OUT OR NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EQUAL EOF ELSE DOT DIFF COMMA BARRIER BAR ]
-- On WEDGE shift to state 326
-- On OR shift to state 337
-- On EQUAL shift to state 328
-- On ELSE shift to state 377
-- On DIFF shift to state 330
-- On YIELD reduce production pterm -> IF pterm THEN pterm
-- On WEDGE reduce production pterm -> IF pterm THEN pterm
-- On THEN reduce production pterm -> IF pterm THEN pterm
-- On SEMI reduce production pterm -> IF pterm THEN pterm
-- On RPAREN reduce production pterm -> IF pterm THEN pterm
-- On REPL reduce production pterm -> IF pterm THEN pterm
-- On RBRACKET reduce production pterm -> IF pterm THEN pterm
-- On PHASE reduce production pterm -> IF pterm THEN pterm
-- On OUT reduce production pterm -> IF pterm THEN pterm
-- On OR reduce production pterm -> IF pterm THEN pterm
-- On NEW reduce production pterm -> IF pterm THEN pterm
-- On LPAREN reduce production pterm -> IF pterm THEN pterm
-- On LET reduce production pterm -> IF pterm THEN pterm
-- On INT reduce production pterm -> IF pterm THEN pterm
-- On INSERT reduce production pterm -> IF pterm THEN pterm
-- On IN reduce production pterm -> IF pterm THEN pterm
-- On IF reduce production pterm -> IF pterm THEN pterm
-- On IDENT reduce production pterm -> IF pterm THEN pterm
-- On GET reduce production pterm -> IF pterm THEN pterm
-- On FOREACH reduce production pterm -> IF pterm THEN pterm
-- On EVENT reduce production pterm -> IF pterm THEN pterm
-- On EQUAL reduce production pterm -> IF pterm THEN pterm
-- On EOF reduce production pterm -> IF pterm THEN pterm
-- On ELSE reduce production pterm -> IF pterm THEN pterm
-- On DOT reduce production pterm -> IF pterm THEN pterm
-- On DIFF reduce production pterm -> IF pterm THEN pterm
-- On COMMA reduce production pterm -> IF pterm THEN pterm
-- On BARRIER reduce production pterm -> IF pterm THEN pterm
-- On BAR reduce production pterm -> IF pterm THEN pterm
** Conflict on WEDGE OR EQUAL ELSE DIFF

State 377:
pterm -> IF pterm THEN pterm ELSE . pterm [ YIELD WEDGE THEN SEMI RPAREN REPL RBRACKET PHASE OUT OR NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EQUAL EOF ELSE DOT DIFF COMMA BARRIER BAR ]
-- On NOT shift to state 288
-- On NEW shift to state 290
-- On LPAREN shift to state 300
-- On LET shift to state 301
-- On INSERT shift to state 306
-- On IF shift to state 309
-- On IDENT shift to state 310
-- On GET shift to state 314
-- On EVENT shift to state 320
-- On CHOICE shift to state 323
-- On pterm shift to state 378
-- On basicpattern shift to state 332

State 378:
pterm -> pterm . EQUAL pterm [ YIELD WEDGE THEN SEMI RPAREN REPL RBRACKET PHASE OUT OR NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EQUAL EOF ELSE DOT DIFF COMMA BARRIER BAR ]
pterm -> pterm . DIFF pterm [ YIELD WEDGE THEN SEMI RPAREN REPL RBRACKET PHASE OUT OR NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EQUAL EOF ELSE DOT DIFF COMMA BARRIER BAR ]
pterm -> pterm . OR pterm [ YIELD WEDGE THEN SEMI RPAREN REPL RBRACKET PHASE OUT OR NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EQUAL EOF ELSE DOT DIFF COMMA BARRIER BAR ]
pterm -> pterm . WEDGE pterm [ YIELD WEDGE THEN SEMI RPAREN REPL RBRACKET PHASE OUT OR NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EQUAL EOF ELSE DOT DIFF COMMA BARRIER BAR ]
pterm -> IF pterm THEN pterm ELSE pterm . [ YIELD WEDGE THEN SEMI RPAREN REPL RBRACKET PHASE OUT OR NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EQUAL EOF ELSE DOT DIFF COMMA BARRIER BAR ]
-- On WEDGE shift to state 326
-- On OR shift to state 337
-- On EQUAL shift to state 328
-- On DIFF shift to state 330
-- On YIELD reduce production pterm -> IF pterm THEN pterm ELSE pterm
-- On WEDGE reduce production pterm -> IF pterm THEN pterm ELSE pterm
-- On THEN reduce production pterm -> IF pterm THEN pterm ELSE pterm
-- On SEMI reduce production pterm -> IF pterm THEN pterm ELSE pterm
-- On RPAREN reduce production pterm -> IF pterm THEN pterm ELSE pterm
-- On REPL reduce production pterm -> IF pterm THEN pterm ELSE pterm
-- On RBRACKET reduce production pterm -> IF pterm THEN pterm ELSE pterm
-- On PHASE reduce production pterm -> IF pterm THEN pterm ELSE pterm
-- On OUT reduce production pterm -> IF pterm THEN pterm ELSE pterm
-- On OR reduce production pterm -> IF pterm THEN pterm ELSE pterm
-- On NEW reduce production pterm -> IF pterm THEN pterm ELSE pterm
-- On LPAREN reduce production pterm -> IF pterm THEN pterm ELSE pterm
-- On LET reduce production pterm -> IF pterm THEN pterm ELSE pterm
-- On INT reduce production pterm -> IF pterm THEN pterm ELSE pterm
-- On INSERT reduce production pterm -> IF pterm THEN pterm ELSE pterm
-- On IN reduce production pterm -> IF pterm THEN pterm ELSE pterm
-- On IF reduce production pterm -> IF pterm THEN pterm ELSE pterm
-- On IDENT reduce production pterm -> IF pterm THEN pterm ELSE pterm
-- On GET reduce production pterm -> IF pterm THEN pterm ELSE pterm
-- On FOREACH reduce production pterm -> IF pterm THEN pterm ELSE pterm
-- On EVENT reduce production pterm -> IF pterm THEN pterm ELSE pterm
-- On EQUAL reduce production pterm -> IF pterm THEN pterm ELSE pterm
-- On EOF reduce production pterm -> IF pterm THEN pterm ELSE pterm
-- On ELSE reduce production pterm -> IF pterm THEN pterm ELSE pterm
-- On DOT reduce production pterm -> IF pterm THEN pterm ELSE pterm
-- On DIFF reduce production pterm -> IF pterm THEN pterm ELSE pterm
-- On COMMA reduce production pterm -> IF pterm THEN pterm ELSE pterm
-- On BARRIER reduce production pterm -> IF pterm THEN pterm ELSE pterm
-- On BAR reduce production pterm -> IF pterm THEN pterm ELSE pterm
** Conflict on WEDGE OR EQUAL DIFF

State 379:
pterm -> INSERT IDENT LPAREN ptermseq . RPAREN SEMI pterm [ YIELD WEDGE THEN SEMI RPAREN REPL RBRACKET PHASE OUT OR NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EQUAL EOF ELSE DOT DIFF COMMA BARRIER BAR ]
-- On RPAREN shift to state 380

State 380:
pterm -> INSERT IDENT LPAREN ptermseq RPAREN . SEMI pterm [ YIELD WEDGE THEN SEMI RPAREN REPL RBRACKET PHASE OUT OR NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EQUAL EOF ELSE DOT DIFF COMMA BARRIER BAR ]
-- On SEMI shift to state 381

State 381:
pterm -> INSERT IDENT LPAREN ptermseq RPAREN SEMI . pterm [ YIELD WEDGE THEN SEMI RPAREN REPL RBRACKET PHASE OUT OR NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EQUAL EOF ELSE DOT DIFF COMMA BARRIER BAR ]
-- On NOT shift to state 288
-- On NEW shift to state 290
-- On LPAREN shift to state 300
-- On LET shift to state 301
-- On INSERT shift to state 306
-- On IF shift to state 309
-- On IDENT shift to state 310
-- On GET shift to state 314
-- On EVENT shift to state 320
-- On CHOICE shift to state 323
-- On pterm shift to state 382
-- On basicpattern shift to state 332

State 382:
pterm -> pterm . EQUAL pterm [ YIELD WEDGE THEN SEMI RPAREN REPL RBRACKET PHASE OUT OR NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EQUAL EOF ELSE DOT DIFF COMMA BARRIER BAR ]
pterm -> pterm . DIFF pterm [ YIELD WEDGE THEN SEMI RPAREN REPL RBRACKET PHASE OUT OR NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EQUAL EOF ELSE DOT DIFF COMMA BARRIER BAR ]
pterm -> pterm . OR pterm [ YIELD WEDGE THEN SEMI RPAREN REPL RBRACKET PHASE OUT OR NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EQUAL EOF ELSE DOT DIFF COMMA BARRIER BAR ]
pterm -> pterm . WEDGE pterm [ YIELD WEDGE THEN SEMI RPAREN REPL RBRACKET PHASE OUT OR NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EQUAL EOF ELSE DOT DIFF COMMA BARRIER BAR ]
pterm -> INSERT IDENT LPAREN ptermseq RPAREN SEMI pterm . [ YIELD WEDGE THEN SEMI RPAREN REPL RBRACKET PHASE OUT OR NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EQUAL EOF ELSE DOT DIFF COMMA BARRIER BAR ]
-- On WEDGE shift to state 326
-- On OR shift to state 337
-- On EQUAL shift to state 328
-- On DIFF shift to state 330
-- On YIELD reduce production pterm -> INSERT IDENT LPAREN ptermseq RPAREN SEMI pterm
-- On WEDGE reduce production pterm -> INSERT IDENT LPAREN ptermseq RPAREN SEMI pterm
-- On THEN reduce production pterm -> INSERT IDENT LPAREN ptermseq RPAREN SEMI pterm
-- On SEMI reduce production pterm -> INSERT IDENT LPAREN ptermseq RPAREN SEMI pterm
-- On RPAREN reduce production pterm -> INSERT IDENT LPAREN ptermseq RPAREN SEMI pterm
-- On REPL reduce production pterm -> INSERT IDENT LPAREN ptermseq RPAREN SEMI pterm
-- On RBRACKET reduce production pterm -> INSERT IDENT LPAREN ptermseq RPAREN SEMI pterm
-- On PHASE reduce production pterm -> INSERT IDENT LPAREN ptermseq RPAREN SEMI pterm
-- On OUT reduce production pterm -> INSERT IDENT LPAREN ptermseq RPAREN SEMI pterm
-- On OR reduce production pterm -> INSERT IDENT LPAREN ptermseq RPAREN SEMI pterm
-- On NEW reduce production pterm -> INSERT IDENT LPAREN ptermseq RPAREN SEMI pterm
-- On LPAREN reduce production pterm -> INSERT IDENT LPAREN ptermseq RPAREN SEMI pterm
-- On LET reduce production pterm -> INSERT IDENT LPAREN ptermseq RPAREN SEMI pterm
-- On INT reduce production pterm -> INSERT IDENT LPAREN ptermseq RPAREN SEMI pterm
-- On INSERT reduce production pterm -> INSERT IDENT LPAREN ptermseq RPAREN SEMI pterm
-- On IN reduce production pterm -> INSERT IDENT LPAREN ptermseq RPAREN SEMI pterm
-- On IF reduce production pterm -> INSERT IDENT LPAREN ptermseq RPAREN SEMI pterm
-- On IDENT reduce production pterm -> INSERT IDENT LPAREN ptermseq RPAREN SEMI pterm
-- On GET reduce production pterm -> INSERT IDENT LPAREN ptermseq RPAREN SEMI pterm
-- On FOREACH reduce production pterm -> INSERT IDENT LPAREN ptermseq RPAREN SEMI pterm
-- On EVENT reduce production pterm -> INSERT IDENT LPAREN ptermseq RPAREN SEMI pterm
-- On EQUAL reduce production pterm -> INSERT IDENT LPAREN ptermseq RPAREN SEMI pterm
-- On EOF reduce production pterm -> INSERT IDENT LPAREN ptermseq RPAREN SEMI pterm
-- On ELSE reduce production pterm -> INSERT IDENT LPAREN ptermseq RPAREN SEMI pterm
-- On DOT reduce production pterm -> INSERT IDENT LPAREN ptermseq RPAREN SEMI pterm
-- On DIFF reduce production pterm -> INSERT IDENT LPAREN ptermseq RPAREN SEMI pterm
-- On COMMA reduce production pterm -> INSERT IDENT LPAREN ptermseq RPAREN SEMI pterm
-- On BARRIER reduce production pterm -> INSERT IDENT LPAREN ptermseq RPAREN SEMI pterm
-- On BAR reduce production pterm -> INSERT IDENT LPAREN ptermseq RPAREN SEMI pterm
** Conflict on WEDGE OR EQUAL DIFF

State 383:
pterm -> pterm . EQUAL pterm [ WEDGE RPAREN OR EQUAL DIFF COMMA ]
pterm -> pterm . DIFF pterm [ WEDGE RPAREN OR EQUAL DIFF COMMA ]
pterm -> pterm . OR pterm [ WEDGE RPAREN OR EQUAL DIFF COMMA ]
pterm -> pterm . WEDGE pterm [ WEDGE RPAREN OR EQUAL DIFF COMMA ]
tpattern -> EQUAL pterm . [ RPAREN EQUAL COMMA ]
-- On WEDGE shift to state 326
-- On OR shift to state 337
-- On DIFF shift to state 330
-- On RPAREN reduce production tpattern -> EQUAL pterm
-- On COMMA reduce production tpattern -> EQUAL pterm

State 384:
tpattern -> IDENT LPAREN tpatternseq . RPAREN [ RPAREN EQUAL COMMA ]
-- On RPAREN shift to state 385

State 385:
tpattern -> IDENT LPAREN tpatternseq RPAREN . [ RPAREN EQUAL COMMA ]
-- On RPAREN reduce production tpattern -> IDENT LPAREN tpatternseq RPAREN
-- On EQUAL reduce production tpattern -> IDENT LPAREN tpatternseq RPAREN
-- On COMMA reduce production tpattern -> IDENT LPAREN tpatternseq RPAREN

State 386:
tpattern -> LPAREN tpatternseq . RPAREN [ RPAREN EQUAL COMMA ]
-- On RPAREN shift to state 387

State 387:
tpattern -> LPAREN tpatternseq RPAREN . [ RPAREN EQUAL COMMA ]
-- On RPAREN reduce production tpattern -> LPAREN tpatternseq RPAREN
-- On EQUAL reduce production tpattern -> LPAREN tpatternseq RPAREN
-- On COMMA reduce production tpattern -> LPAREN tpatternseq RPAREN

State 388:
basicpattern -> IDENT . [ EQUAL ]
basicpattern -> IDENT . COLON typeid [ EQUAL ]
nevartype -> IDENT . COLON typeid COMMA nevartype [ SUCHTHAT ]
nevartype -> IDENT . COLON typeid [ SUCHTHAT ]
tpattern -> IDENT . LPAREN tpatternseq RPAREN [ EQUAL ]
-- On LPAREN shift to state 304
-- On COLON shift to state 389
-- On EQUAL reduce production basicpattern -> IDENT

State 389:
basicpattern -> IDENT COLON . typeid [ EQUAL ]
nevartype -> IDENT COLON . typeid COMMA nevartype [ SUCHTHAT ]
nevartype -> IDENT COLON . typeid [ SUCHTHAT ]
-- On IDENT shift to state 17
-- On CHANNEL shift to state 18
-- On typeid shift to state 390

State 390:
basicpattern -> IDENT COLON typeid . [ EQUAL ]
nevartype -> IDENT COLON typeid . COMMA nevartype [ SUCHTHAT ]
nevartype -> IDENT COLON typeid . [ SUCHTHAT ]
-- On COMMA shift to state 32
-- On SUCHTHAT reduce production nevartype -> IDENT COLON typeid
-- On EQUAL reduce production basicpattern -> IDENT COLON typeid

State 391:
pterm -> LET tpattern . EQUAL pterm IN pterm [ YIELD WEDGE THEN SEMI RPAREN REPL RBRACKET PHASE OUT OR NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EQUAL EOF ELSE DOT DIFF COMMA BARRIER BAR ]
pterm -> LET tpattern . EQUAL pterm IN pterm ELSE pterm [ YIELD WEDGE THEN SEMI RPAREN REPL RBRACKET PHASE OUT OR NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EQUAL EOF ELSE DOT DIFF COMMA BARRIER BAR ]
-- On EQUAL shift to state 392

State 392:
pterm -> LET tpattern EQUAL . pterm IN pterm [ YIELD WEDGE THEN SEMI RPAREN REPL RBRACKET PHASE OUT OR NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EQUAL EOF ELSE DOT DIFF COMMA BARRIER BAR ]
pterm -> LET tpattern EQUAL . pterm IN pterm ELSE pterm [ YIELD WEDGE THEN SEMI RPAREN REPL RBRACKET PHASE OUT OR NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EQUAL EOF ELSE DOT DIFF COMMA BARRIER BAR ]
-- On NOT shift to state 288
-- On NEW shift to state 290
-- On LPAREN shift to state 300
-- On LET shift to state 301
-- On INSERT shift to state 306
-- On IF shift to state 309
-- On IDENT shift to state 310
-- On GET shift to state 314
-- On EVENT shift to state 320
-- On CHOICE shift to state 323
-- On pterm shift to state 393
-- On basicpattern shift to state 332

State 393:
pterm -> pterm . EQUAL pterm [ WEDGE OR IN EQUAL DIFF ]
pterm -> pterm . DIFF pterm [ WEDGE OR IN EQUAL DIFF ]
pterm -> pterm . OR pterm [ WEDGE OR IN EQUAL DIFF ]
pterm -> pterm . WEDGE pterm [ WEDGE OR IN EQUAL DIFF ]
pterm -> LET tpattern EQUAL pterm . IN pterm [ YIELD WEDGE THEN SEMI RPAREN REPL RBRACKET PHASE OUT OR NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EQUAL EOF ELSE DOT DIFF COMMA BARRIER BAR ]
pterm -> LET tpattern EQUAL pterm . IN pterm ELSE pterm [ YIELD WEDGE THEN SEMI RPAREN REPL RBRACKET PHASE OUT OR NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EQUAL EOF ELSE DOT DIFF COMMA BARRIER BAR ]
-- On WEDGE shift to state 326
-- On OR shift to state 337
-- On IN shift to state 394
-- On EQUAL shift to state 328
-- On DIFF shift to state 330

State 394:
pterm -> LET tpattern EQUAL pterm IN . pterm [ YIELD WEDGE THEN SEMI RPAREN REPL RBRACKET PHASE OUT OR NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EQUAL EOF ELSE DOT DIFF COMMA BARRIER BAR ]
pterm -> LET tpattern EQUAL pterm IN . pterm ELSE pterm [ YIELD WEDGE THEN SEMI RPAREN REPL RBRACKET PHASE OUT OR NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EQUAL EOF ELSE DOT DIFF COMMA BARRIER BAR ]
-- On NOT shift to state 288
-- On NEW shift to state 290
-- On LPAREN shift to state 300
-- On LET shift to state 301
-- On INSERT shift to state 306
-- On IF shift to state 309
-- On IDENT shift to state 310
-- On GET shift to state 314
-- On EVENT shift to state 320
-- On CHOICE shift to state 323
-- On pterm shift to state 395
-- On basicpattern shift to state 332

State 395:
pterm -> pterm . EQUAL pterm [ YIELD WEDGE THEN SEMI RPAREN REPL RBRACKET PHASE OUT OR NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EQUAL EOF ELSE DOT DIFF COMMA BARRIER BAR ]
pterm -> pterm . DIFF pterm [ YIELD WEDGE THEN SEMI RPAREN REPL RBRACKET PHASE OUT OR NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EQUAL EOF ELSE DOT DIFF COMMA BARRIER BAR ]
pterm -> pterm . OR pterm [ YIELD WEDGE THEN SEMI RPAREN REPL RBRACKET PHASE OUT OR NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EQUAL EOF ELSE DOT DIFF COMMA BARRIER BAR ]
pterm -> pterm . WEDGE pterm [ YIELD WEDGE THEN SEMI RPAREN REPL RBRACKET PHASE OUT OR NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EQUAL EOF ELSE DOT DIFF COMMA BARRIER BAR ]
pterm -> LET tpattern EQUAL pterm IN pterm . [ YIELD WEDGE THEN SEMI RPAREN REPL RBRACKET PHASE OUT OR NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EQUAL EOF ELSE DOT DIFF COMMA BARRIER BAR ]
pterm -> LET tpattern EQUAL pterm IN pterm . ELSE pterm [ YIELD WEDGE THEN SEMI RPAREN REPL RBRACKET PHASE OUT OR NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EQUAL EOF ELSE DOT DIFF COMMA BARRIER BAR ]
-- On WEDGE shift to state 326
-- On OR shift to state 337
-- On EQUAL shift to state 328
-- On ELSE shift to state 396
-- On DIFF shift to state 330
-- On YIELD reduce production pterm -> LET tpattern EQUAL pterm IN pterm
-- On WEDGE reduce production pterm -> LET tpattern EQUAL pterm IN pterm
-- On THEN reduce production pterm -> LET tpattern EQUAL pterm IN pterm
-- On SEMI reduce production pterm -> LET tpattern EQUAL pterm IN pterm
-- On RPAREN reduce production pterm -> LET tpattern EQUAL pterm IN pterm
-- On REPL reduce production pterm -> LET tpattern EQUAL pterm IN pterm
-- On RBRACKET reduce production pterm -> LET tpattern EQUAL pterm IN pterm
-- On PHASE reduce production pterm -> LET tpattern EQUAL pterm IN pterm
-- On OUT reduce production pterm -> LET tpattern EQUAL pterm IN pterm
-- On OR reduce production pterm -> LET tpattern EQUAL pterm IN pterm
-- On NEW reduce production pterm -> LET tpattern EQUAL pterm IN pterm
-- On LPAREN reduce production pterm -> LET tpattern EQUAL pterm IN pterm
-- On LET reduce production pterm -> LET tpattern EQUAL pterm IN pterm
-- On INT reduce production pterm -> LET tpattern EQUAL pterm IN pterm
-- On INSERT reduce production pterm -> LET tpattern EQUAL pterm IN pterm
-- On IN reduce production pterm -> LET tpattern EQUAL pterm IN pterm
-- On IF reduce production pterm -> LET tpattern EQUAL pterm IN pterm
-- On IDENT reduce production pterm -> LET tpattern EQUAL pterm IN pterm
-- On GET reduce production pterm -> LET tpattern EQUAL pterm IN pterm
-- On FOREACH reduce production pterm -> LET tpattern EQUAL pterm IN pterm
-- On EVENT reduce production pterm -> LET tpattern EQUAL pterm IN pterm
-- On EQUAL reduce production pterm -> LET tpattern EQUAL pterm IN pterm
-- On EOF reduce production pterm -> LET tpattern EQUAL pterm IN pterm
-- On ELSE reduce production pterm -> LET tpattern EQUAL pterm IN pterm
-- On DOT reduce production pterm -> LET tpattern EQUAL pterm IN pterm
-- On DIFF reduce production pterm -> LET tpattern EQUAL pterm IN pterm
-- On COMMA reduce production pterm -> LET tpattern EQUAL pterm IN pterm
-- On BARRIER reduce production pterm -> LET tpattern EQUAL pterm IN pterm
-- On BAR reduce production pterm -> LET tpattern EQUAL pterm IN pterm
** Conflict on WEDGE OR EQUAL ELSE DIFF

State 396:
pterm -> LET tpattern EQUAL pterm IN pterm ELSE . pterm [ YIELD WEDGE THEN SEMI RPAREN REPL RBRACKET PHASE OUT OR NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EQUAL EOF ELSE DOT DIFF COMMA BARRIER BAR ]
-- On NOT shift to state 288
-- On NEW shift to state 290
-- On LPAREN shift to state 300
-- On LET shift to state 301
-- On INSERT shift to state 306
-- On IF shift to state 309
-- On IDENT shift to state 310
-- On GET shift to state 314
-- On EVENT shift to state 320
-- On CHOICE shift to state 323
-- On pterm shift to state 397
-- On basicpattern shift to state 332

State 397:
pterm -> pterm . EQUAL pterm [ YIELD WEDGE THEN SEMI RPAREN REPL RBRACKET PHASE OUT OR NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EQUAL EOF ELSE DOT DIFF COMMA BARRIER BAR ]
pterm -> pterm . DIFF pterm [ YIELD WEDGE THEN SEMI RPAREN REPL RBRACKET PHASE OUT OR NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EQUAL EOF ELSE DOT DIFF COMMA BARRIER BAR ]
pterm -> pterm . OR pterm [ YIELD WEDGE THEN SEMI RPAREN REPL RBRACKET PHASE OUT OR NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EQUAL EOF ELSE DOT DIFF COMMA BARRIER BAR ]
pterm -> pterm . WEDGE pterm [ YIELD WEDGE THEN SEMI RPAREN REPL RBRACKET PHASE OUT OR NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EQUAL EOF ELSE DOT DIFF COMMA BARRIER BAR ]
pterm -> LET tpattern EQUAL pterm IN pterm ELSE pterm . [ YIELD WEDGE THEN SEMI RPAREN REPL RBRACKET PHASE OUT OR NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EQUAL EOF ELSE DOT DIFF COMMA BARRIER BAR ]
-- On WEDGE shift to state 326
-- On OR shift to state 337
-- On EQUAL shift to state 328
-- On DIFF shift to state 330
-- On YIELD reduce production pterm -> LET tpattern EQUAL pterm IN pterm ELSE pterm
-- On WEDGE reduce production pterm -> LET tpattern EQUAL pterm IN pterm ELSE pterm
-- On THEN reduce production pterm -> LET tpattern EQUAL pterm IN pterm ELSE pterm
-- On SEMI reduce production pterm -> LET tpattern EQUAL pterm IN pterm ELSE pterm
-- On RPAREN reduce production pterm -> LET tpattern EQUAL pterm IN pterm ELSE pterm
-- On REPL reduce production pterm -> LET tpattern EQUAL pterm IN pterm ELSE pterm
-- On RBRACKET reduce production pterm -> LET tpattern EQUAL pterm IN pterm ELSE pterm
-- On PHASE reduce production pterm -> LET tpattern EQUAL pterm IN pterm ELSE pterm
-- On OUT reduce production pterm -> LET tpattern EQUAL pterm IN pterm ELSE pterm
-- On OR reduce production pterm -> LET tpattern EQUAL pterm IN pterm ELSE pterm
-- On NEW reduce production pterm -> LET tpattern EQUAL pterm IN pterm ELSE pterm
-- On LPAREN reduce production pterm -> LET tpattern EQUAL pterm IN pterm ELSE pterm
-- On LET reduce production pterm -> LET tpattern EQUAL pterm IN pterm ELSE pterm
-- On INT reduce production pterm -> LET tpattern EQUAL pterm IN pterm ELSE pterm
-- On INSERT reduce production pterm -> LET tpattern EQUAL pterm IN pterm ELSE pterm
-- On IN reduce production pterm -> LET tpattern EQUAL pterm IN pterm ELSE pterm
-- On IF reduce production pterm -> LET tpattern EQUAL pterm IN pterm ELSE pterm
-- On IDENT reduce production pterm -> LET tpattern EQUAL pterm IN pterm ELSE pterm
-- On GET reduce production pterm -> LET tpattern EQUAL pterm IN pterm ELSE pterm
-- On FOREACH reduce production pterm -> LET tpattern EQUAL pterm IN pterm ELSE pterm
-- On EVENT reduce production pterm -> LET tpattern EQUAL pterm IN pterm ELSE pterm
-- On EQUAL reduce production pterm -> LET tpattern EQUAL pterm IN pterm ELSE pterm
-- On EOF reduce production pterm -> LET tpattern EQUAL pterm IN pterm ELSE pterm
-- On ELSE reduce production pterm -> LET tpattern EQUAL pterm IN pterm ELSE pterm
-- On DOT reduce production pterm -> LET tpattern EQUAL pterm IN pterm ELSE pterm
-- On DIFF reduce production pterm -> LET tpattern EQUAL pterm IN pterm ELSE pterm
-- On COMMA reduce production pterm -> LET tpattern EQUAL pterm IN pterm ELSE pterm
-- On BARRIER reduce production pterm -> LET tpattern EQUAL pterm IN pterm ELSE pterm
-- On BAR reduce production pterm -> LET tpattern EQUAL pterm IN pterm ELSE pterm
** Conflict on WEDGE OR EQUAL DIFF

State 398:
pterm -> LET nevartype . SUCHTHAT pterm IN pterm [ YIELD WEDGE THEN SEMI RPAREN REPL RBRACKET PHASE OUT OR NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EQUAL EOF ELSE DOT DIFF COMMA BARRIER BAR ]
pterm -> LET nevartype . SUCHTHAT pterm IN pterm ELSE pterm [ YIELD WEDGE THEN SEMI RPAREN REPL RBRACKET PHASE OUT OR NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EQUAL EOF ELSE DOT DIFF COMMA BARRIER BAR ]
-- On SUCHTHAT shift to state 399

State 399:
pterm -> LET nevartype SUCHTHAT . pterm IN pterm [ YIELD WEDGE THEN SEMI RPAREN REPL RBRACKET PHASE OUT OR NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EQUAL EOF ELSE DOT DIFF COMMA BARRIER BAR ]
pterm -> LET nevartype SUCHTHAT . pterm IN pterm ELSE pterm [ YIELD WEDGE THEN SEMI RPAREN REPL RBRACKET PHASE OUT OR NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EQUAL EOF ELSE DOT DIFF COMMA BARRIER BAR ]
-- On NOT shift to state 288
-- On NEW shift to state 290
-- On LPAREN shift to state 300
-- On LET shift to state 301
-- On INSERT shift to state 306
-- On IF shift to state 309
-- On IDENT shift to state 310
-- On GET shift to state 314
-- On EVENT shift to state 320
-- On CHOICE shift to state 323
-- On pterm shift to state 400
-- On basicpattern shift to state 332

State 400:
pterm -> pterm . EQUAL pterm [ WEDGE OR IN EQUAL DIFF ]
pterm -> pterm . DIFF pterm [ WEDGE OR IN EQUAL DIFF ]
pterm -> pterm . OR pterm [ WEDGE OR IN EQUAL DIFF ]
pterm -> pterm . WEDGE pterm [ WEDGE OR IN EQUAL DIFF ]
pterm -> LET nevartype SUCHTHAT pterm . IN pterm [ YIELD WEDGE THEN SEMI RPAREN REPL RBRACKET PHASE OUT OR NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EQUAL EOF ELSE DOT DIFF COMMA BARRIER BAR ]
pterm -> LET nevartype SUCHTHAT pterm . IN pterm ELSE pterm [ YIELD WEDGE THEN SEMI RPAREN REPL RBRACKET PHASE OUT OR NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EQUAL EOF ELSE DOT DIFF COMMA BARRIER BAR ]
-- On WEDGE shift to state 326
-- On OR shift to state 337
-- On IN shift to state 401
-- On EQUAL shift to state 328
-- On DIFF shift to state 330

State 401:
pterm -> LET nevartype SUCHTHAT pterm IN . pterm [ YIELD WEDGE THEN SEMI RPAREN REPL RBRACKET PHASE OUT OR NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EQUAL EOF ELSE DOT DIFF COMMA BARRIER BAR ]
pterm -> LET nevartype SUCHTHAT pterm IN . pterm ELSE pterm [ YIELD WEDGE THEN SEMI RPAREN REPL RBRACKET PHASE OUT OR NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EQUAL EOF ELSE DOT DIFF COMMA BARRIER BAR ]
-- On NOT shift to state 288
-- On NEW shift to state 290
-- On LPAREN shift to state 300
-- On LET shift to state 301
-- On INSERT shift to state 306
-- On IF shift to state 309
-- On IDENT shift to state 310
-- On GET shift to state 314
-- On EVENT shift to state 320
-- On CHOICE shift to state 323
-- On pterm shift to state 402
-- On basicpattern shift to state 332

State 402:
pterm -> pterm . EQUAL pterm [ YIELD WEDGE THEN SEMI RPAREN REPL RBRACKET PHASE OUT OR NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EQUAL EOF ELSE DOT DIFF COMMA BARRIER BAR ]
pterm -> pterm . DIFF pterm [ YIELD WEDGE THEN SEMI RPAREN REPL RBRACKET PHASE OUT OR NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EQUAL EOF ELSE DOT DIFF COMMA BARRIER BAR ]
pterm -> pterm . OR pterm [ YIELD WEDGE THEN SEMI RPAREN REPL RBRACKET PHASE OUT OR NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EQUAL EOF ELSE DOT DIFF COMMA BARRIER BAR ]
pterm -> pterm . WEDGE pterm [ YIELD WEDGE THEN SEMI RPAREN REPL RBRACKET PHASE OUT OR NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EQUAL EOF ELSE DOT DIFF COMMA BARRIER BAR ]
pterm -> LET nevartype SUCHTHAT pterm IN pterm . [ YIELD WEDGE THEN SEMI RPAREN REPL RBRACKET PHASE OUT OR NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EQUAL EOF ELSE DOT DIFF COMMA BARRIER BAR ]
pterm -> LET nevartype SUCHTHAT pterm IN pterm . ELSE pterm [ YIELD WEDGE THEN SEMI RPAREN REPL RBRACKET PHASE OUT OR NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EQUAL EOF ELSE DOT DIFF COMMA BARRIER BAR ]
-- On WEDGE shift to state 326
-- On OR shift to state 337
-- On EQUAL shift to state 328
-- On ELSE shift to state 403
-- On DIFF shift to state 330
-- On YIELD reduce production pterm -> LET nevartype SUCHTHAT pterm IN pterm
-- On WEDGE reduce production pterm -> LET nevartype SUCHTHAT pterm IN pterm
-- On THEN reduce production pterm -> LET nevartype SUCHTHAT pterm IN pterm
-- On SEMI reduce production pterm -> LET nevartype SUCHTHAT pterm IN pterm
-- On RPAREN reduce production pterm -> LET nevartype SUCHTHAT pterm IN pterm
-- On REPL reduce production pterm -> LET nevartype SUCHTHAT pterm IN pterm
-- On RBRACKET reduce production pterm -> LET nevartype SUCHTHAT pterm IN pterm
-- On PHASE reduce production pterm -> LET nevartype SUCHTHAT pterm IN pterm
-- On OUT reduce production pterm -> LET nevartype SUCHTHAT pterm IN pterm
-- On OR reduce production pterm -> LET nevartype SUCHTHAT pterm IN pterm
-- On NEW reduce production pterm -> LET nevartype SUCHTHAT pterm IN pterm
-- On LPAREN reduce production pterm -> LET nevartype SUCHTHAT pterm IN pterm
-- On LET reduce production pterm -> LET nevartype SUCHTHAT pterm IN pterm
-- On INT reduce production pterm -> LET nevartype SUCHTHAT pterm IN pterm
-- On INSERT reduce production pterm -> LET nevartype SUCHTHAT pterm IN pterm
-- On IN reduce production pterm -> LET nevartype SUCHTHAT pterm IN pterm
-- On IF reduce production pterm -> LET nevartype SUCHTHAT pterm IN pterm
-- On IDENT reduce production pterm -> LET nevartype SUCHTHAT pterm IN pterm
-- On GET reduce production pterm -> LET nevartype SUCHTHAT pterm IN pterm
-- On FOREACH reduce production pterm -> LET nevartype SUCHTHAT pterm IN pterm
-- On EVENT reduce production pterm -> LET nevartype SUCHTHAT pterm IN pterm
-- On EQUAL reduce production pterm -> LET nevartype SUCHTHAT pterm IN pterm
-- On EOF reduce production pterm -> LET nevartype SUCHTHAT pterm IN pterm
-- On ELSE reduce production pterm -> LET nevartype SUCHTHAT pterm IN pterm
-- On DOT reduce production pterm -> LET nevartype SUCHTHAT pterm IN pterm
-- On DIFF reduce production pterm -> LET nevartype SUCHTHAT pterm IN pterm
-- On COMMA reduce production pterm -> LET nevartype SUCHTHAT pterm IN pterm
-- On BARRIER reduce production pterm -> LET nevartype SUCHTHAT pterm IN pterm
-- On BAR reduce production pterm -> LET nevartype SUCHTHAT pterm IN pterm
** Conflict on WEDGE OR EQUAL ELSE DIFF

State 403:
pterm -> LET nevartype SUCHTHAT pterm IN pterm ELSE . pterm [ YIELD WEDGE THEN SEMI RPAREN REPL RBRACKET PHASE OUT OR NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EQUAL EOF ELSE DOT DIFF COMMA BARRIER BAR ]
-- On NOT shift to state 288
-- On NEW shift to state 290
-- On LPAREN shift to state 300
-- On LET shift to state 301
-- On INSERT shift to state 306
-- On IF shift to state 309
-- On IDENT shift to state 310
-- On GET shift to state 314
-- On EVENT shift to state 320
-- On CHOICE shift to state 323
-- On pterm shift to state 404
-- On basicpattern shift to state 332

State 404:
pterm -> pterm . EQUAL pterm [ YIELD WEDGE THEN SEMI RPAREN REPL RBRACKET PHASE OUT OR NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EQUAL EOF ELSE DOT DIFF COMMA BARRIER BAR ]
pterm -> pterm . DIFF pterm [ YIELD WEDGE THEN SEMI RPAREN REPL RBRACKET PHASE OUT OR NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EQUAL EOF ELSE DOT DIFF COMMA BARRIER BAR ]
pterm -> pterm . OR pterm [ YIELD WEDGE THEN SEMI RPAREN REPL RBRACKET PHASE OUT OR NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EQUAL EOF ELSE DOT DIFF COMMA BARRIER BAR ]
pterm -> pterm . WEDGE pterm [ YIELD WEDGE THEN SEMI RPAREN REPL RBRACKET PHASE OUT OR NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EQUAL EOF ELSE DOT DIFF COMMA BARRIER BAR ]
pterm -> LET nevartype SUCHTHAT pterm IN pterm ELSE pterm . [ YIELD WEDGE THEN SEMI RPAREN REPL RBRACKET PHASE OUT OR NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EQUAL EOF ELSE DOT DIFF COMMA BARRIER BAR ]
-- On WEDGE shift to state 326
-- On OR shift to state 337
-- On EQUAL shift to state 328
-- On DIFF shift to state 330
-- On YIELD reduce production pterm -> LET nevartype SUCHTHAT pterm IN pterm ELSE pterm
-- On WEDGE reduce production pterm -> LET nevartype SUCHTHAT pterm IN pterm ELSE pterm
-- On THEN reduce production pterm -> LET nevartype SUCHTHAT pterm IN pterm ELSE pterm
-- On SEMI reduce production pterm -> LET nevartype SUCHTHAT pterm IN pterm ELSE pterm
-- On RPAREN reduce production pterm -> LET nevartype SUCHTHAT pterm IN pterm ELSE pterm
-- On REPL reduce production pterm -> LET nevartype SUCHTHAT pterm IN pterm ELSE pterm
-- On RBRACKET reduce production pterm -> LET nevartype SUCHTHAT pterm IN pterm ELSE pterm
-- On PHASE reduce production pterm -> LET nevartype SUCHTHAT pterm IN pterm ELSE pterm
-- On OUT reduce production pterm -> LET nevartype SUCHTHAT pterm IN pterm ELSE pterm
-- On OR reduce production pterm -> LET nevartype SUCHTHAT pterm IN pterm ELSE pterm
-- On NEW reduce production pterm -> LET nevartype SUCHTHAT pterm IN pterm ELSE pterm
-- On LPAREN reduce production pterm -> LET nevartype SUCHTHAT pterm IN pterm ELSE pterm
-- On LET reduce production pterm -> LET nevartype SUCHTHAT pterm IN pterm ELSE pterm
-- On INT reduce production pterm -> LET nevartype SUCHTHAT pterm IN pterm ELSE pterm
-- On INSERT reduce production pterm -> LET nevartype SUCHTHAT pterm IN pterm ELSE pterm
-- On IN reduce production pterm -> LET nevartype SUCHTHAT pterm IN pterm ELSE pterm
-- On IF reduce production pterm -> LET nevartype SUCHTHAT pterm IN pterm ELSE pterm
-- On IDENT reduce production pterm -> LET nevartype SUCHTHAT pterm IN pterm ELSE pterm
-- On GET reduce production pterm -> LET nevartype SUCHTHAT pterm IN pterm ELSE pterm
-- On FOREACH reduce production pterm -> LET nevartype SUCHTHAT pterm IN pterm ELSE pterm
-- On EVENT reduce production pterm -> LET nevartype SUCHTHAT pterm IN pterm ELSE pterm
-- On EQUAL reduce production pterm -> LET nevartype SUCHTHAT pterm IN pterm ELSE pterm
-- On EOF reduce production pterm -> LET nevartype SUCHTHAT pterm IN pterm ELSE pterm
-- On ELSE reduce production pterm -> LET nevartype SUCHTHAT pterm IN pterm ELSE pterm
-- On DOT reduce production pterm -> LET nevartype SUCHTHAT pterm IN pterm ELSE pterm
-- On DIFF reduce production pterm -> LET nevartype SUCHTHAT pterm IN pterm ELSE pterm
-- On COMMA reduce production pterm -> LET nevartype SUCHTHAT pterm IN pterm ELSE pterm
-- On BARRIER reduce production pterm -> LET nevartype SUCHTHAT pterm IN pterm ELSE pterm
-- On BAR reduce production pterm -> LET nevartype SUCHTHAT pterm IN pterm ELSE pterm
** Conflict on WEDGE OR EQUAL DIFF

State 405:
pterm -> LPAREN ptermseq . RPAREN [ YIELD WEDGE THEN SEMI RPAREN REPL RBRACKET PHASE OUT OR NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EQUAL EOF ELSE DOT DIFF COMMA BARRIER BAR ]
-- On RPAREN shift to state 406

State 406:
pterm -> LPAREN ptermseq RPAREN . [ YIELD WEDGE THEN SEMI RPAREN REPL RBRACKET PHASE OUT OR NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EQUAL EOF ELSE DOT DIFF COMMA BARRIER BAR ]
-- On YIELD reduce production pterm -> LPAREN ptermseq RPAREN
-- On WEDGE reduce production pterm -> LPAREN ptermseq RPAREN
-- On THEN reduce production pterm -> LPAREN ptermseq RPAREN
-- On SEMI reduce production pterm -> LPAREN ptermseq RPAREN
-- On RPAREN reduce production pterm -> LPAREN ptermseq RPAREN
-- On REPL reduce production pterm -> LPAREN ptermseq RPAREN
-- On RBRACKET reduce production pterm -> LPAREN ptermseq RPAREN
-- On PHASE reduce production pterm -> LPAREN ptermseq RPAREN
-- On OUT reduce production pterm -> LPAREN ptermseq RPAREN
-- On OR reduce production pterm -> LPAREN ptermseq RPAREN
-- On NEW reduce production pterm -> LPAREN ptermseq RPAREN
-- On LPAREN reduce production pterm -> LPAREN ptermseq RPAREN
-- On LET reduce production pterm -> LPAREN ptermseq RPAREN
-- On INT reduce production pterm -> LPAREN ptermseq RPAREN
-- On INSERT reduce production pterm -> LPAREN ptermseq RPAREN
-- On IN reduce production pterm -> LPAREN ptermseq RPAREN
-- On IF reduce production pterm -> LPAREN ptermseq RPAREN
-- On IDENT reduce production pterm -> LPAREN ptermseq RPAREN
-- On GET reduce production pterm -> LPAREN ptermseq RPAREN
-- On FOREACH reduce production pterm -> LPAREN ptermseq RPAREN
-- On EVENT reduce production pterm -> LPAREN ptermseq RPAREN
-- On EQUAL reduce production pterm -> LPAREN ptermseq RPAREN
-- On EOF reduce production pterm -> LPAREN ptermseq RPAREN
-- On ELSE reduce production pterm -> LPAREN ptermseq RPAREN
-- On DOT reduce production pterm -> LPAREN ptermseq RPAREN
-- On DIFF reduce production pterm -> LPAREN ptermseq RPAREN
-- On COMMA reduce production pterm -> LPAREN ptermseq RPAREN
-- On BARRIER reduce production pterm -> LPAREN ptermseq RPAREN
-- On BAR reduce production pterm -> LPAREN ptermseq RPAREN

State 407:
pterm -> pterm . EQUAL pterm [ YIELD WEDGE THEN SEMI RPAREN REPL RBRACKET PHASE OUT OR NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EQUAL EOF ELSE DOT DIFF COMMA BARRIER BAR ]
pterm -> pterm . DIFF pterm [ YIELD WEDGE THEN SEMI RPAREN REPL RBRACKET PHASE OUT OR NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EQUAL EOF ELSE DOT DIFF COMMA BARRIER BAR ]
pterm -> pterm . OR pterm [ YIELD WEDGE THEN SEMI RPAREN REPL RBRACKET PHASE OUT OR NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EQUAL EOF ELSE DOT DIFF COMMA BARRIER BAR ]
pterm -> pterm . WEDGE pterm [ YIELD WEDGE THEN SEMI RPAREN REPL RBRACKET PHASE OUT OR NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EQUAL EOF ELSE DOT DIFF COMMA BARRIER BAR ]
pterm -> NEW IDENT newarg COLON typeid SEMI pterm . [ YIELD WEDGE THEN SEMI RPAREN REPL RBRACKET PHASE OUT OR NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EQUAL EOF ELSE DOT DIFF COMMA BARRIER BAR ]
-- On WEDGE shift to state 326
-- On OR shift to state 337
-- On EQUAL shift to state 328
-- On DIFF shift to state 330
-- On YIELD reduce production pterm -> NEW IDENT newarg COLON typeid SEMI pterm
-- On WEDGE reduce production pterm -> NEW IDENT newarg COLON typeid SEMI pterm
-- On THEN reduce production pterm -> NEW IDENT newarg COLON typeid SEMI pterm
-- On SEMI reduce production pterm -> NEW IDENT newarg COLON typeid SEMI pterm
-- On RPAREN reduce production pterm -> NEW IDENT newarg COLON typeid SEMI pterm
-- On REPL reduce production pterm -> NEW IDENT newarg COLON typeid SEMI pterm
-- On RBRACKET reduce production pterm -> NEW IDENT newarg COLON typeid SEMI pterm
-- On PHASE reduce production pterm -> NEW IDENT newarg COLON typeid SEMI pterm
-- On OUT reduce production pterm -> NEW IDENT newarg COLON typeid SEMI pterm
-- On OR reduce production pterm -> NEW IDENT newarg COLON typeid SEMI pterm
-- On NEW reduce production pterm -> NEW IDENT newarg COLON typeid SEMI pterm
-- On LPAREN reduce production pterm -> NEW IDENT newarg COLON typeid SEMI pterm
-- On LET reduce production pterm -> NEW IDENT newarg COLON typeid SEMI pterm
-- On INT reduce production pterm -> NEW IDENT newarg COLON typeid SEMI pterm
-- On INSERT reduce production pterm -> NEW IDENT newarg COLON typeid SEMI pterm
-- On IN reduce production pterm -> NEW IDENT newarg COLON typeid SEMI pterm
-- On IF reduce production pterm -> NEW IDENT newarg COLON typeid SEMI pterm
-- On IDENT reduce production pterm -> NEW IDENT newarg COLON typeid SEMI pterm
-- On GET reduce production pterm -> NEW IDENT newarg COLON typeid SEMI pterm
-- On FOREACH reduce production pterm -> NEW IDENT newarg COLON typeid SEMI pterm
-- On EVENT reduce production pterm -> NEW IDENT newarg COLON typeid SEMI pterm
-- On EQUAL reduce production pterm -> NEW IDENT newarg COLON typeid SEMI pterm
-- On EOF reduce production pterm -> NEW IDENT newarg COLON typeid SEMI pterm
-- On ELSE reduce production pterm -> NEW IDENT newarg COLON typeid SEMI pterm
-- On DOT reduce production pterm -> NEW IDENT newarg COLON typeid SEMI pterm
-- On DIFF reduce production pterm -> NEW IDENT newarg COLON typeid SEMI pterm
-- On COMMA reduce production pterm -> NEW IDENT newarg COLON typeid SEMI pterm
-- On BARRIER reduce production pterm -> NEW IDENT newarg COLON typeid SEMI pterm
-- On BAR reduce production pterm -> NEW IDENT newarg COLON typeid SEMI pterm
** Conflict on WEDGE OR EQUAL DIFF

State 408:
pterm -> pterm . EQUAL pterm [ WEDGE RPAREN OR EQUAL DIFF ]
pterm -> pterm . DIFF pterm [ WEDGE RPAREN OR EQUAL DIFF ]
pterm -> NOT LPAREN pterm . RPAREN [ YIELD WEDGE THEN SEMI RPAREN REPL RBRACKET PHASE OUT OR NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EQUAL EOF ELSE DOT DIFF COMMA BARRIER BAR ]
pterm -> pterm . OR pterm [ WEDGE RPAREN OR EQUAL DIFF ]
pterm -> pterm . WEDGE pterm [ WEDGE RPAREN OR EQUAL DIFF ]
-- On WEDGE shift to state 326
-- On RPAREN shift to state 409
-- On OR shift to state 337
-- On EQUAL shift to state 328
-- On DIFF shift to state 330

State 409:
pterm -> NOT LPAREN pterm RPAREN . [ YIELD WEDGE THEN SEMI RPAREN REPL RBRACKET PHASE OUT OR NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EQUAL EOF ELSE DOT DIFF COMMA BARRIER BAR ]
-- On YIELD reduce production pterm -> NOT LPAREN pterm RPAREN
-- On WEDGE reduce production pterm -> NOT LPAREN pterm RPAREN
-- On THEN reduce production pterm -> NOT LPAREN pterm RPAREN
-- On SEMI reduce production pterm -> NOT LPAREN pterm RPAREN
-- On RPAREN reduce production pterm -> NOT LPAREN pterm RPAREN
-- On REPL reduce production pterm -> NOT LPAREN pterm RPAREN
-- On RBRACKET reduce production pterm -> NOT LPAREN pterm RPAREN
-- On PHASE reduce production pterm -> NOT LPAREN pterm RPAREN
-- On OUT reduce production pterm -> NOT LPAREN pterm RPAREN
-- On OR reduce production pterm -> NOT LPAREN pterm RPAREN
-- On NEW reduce production pterm -> NOT LPAREN pterm RPAREN
-- On LPAREN reduce production pterm -> NOT LPAREN pterm RPAREN
-- On LET reduce production pterm -> NOT LPAREN pterm RPAREN
-- On INT reduce production pterm -> NOT LPAREN pterm RPAREN
-- On INSERT reduce production pterm -> NOT LPAREN pterm RPAREN
-- On IN reduce production pterm -> NOT LPAREN pterm RPAREN
-- On IF reduce production pterm -> NOT LPAREN pterm RPAREN
-- On IDENT reduce production pterm -> NOT LPAREN pterm RPAREN
-- On GET reduce production pterm -> NOT LPAREN pterm RPAREN
-- On FOREACH reduce production pterm -> NOT LPAREN pterm RPAREN
-- On EVENT reduce production pterm -> NOT LPAREN pterm RPAREN
-- On EQUAL reduce production pterm -> NOT LPAREN pterm RPAREN
-- On EOF reduce production pterm -> NOT LPAREN pterm RPAREN
-- On ELSE reduce production pterm -> NOT LPAREN pterm RPAREN
-- On DOT reduce production pterm -> NOT LPAREN pterm RPAREN
-- On DIFF reduce production pterm -> NOT LPAREN pterm RPAREN
-- On COMMA reduce production pterm -> NOT LPAREN pterm RPAREN
-- On BARRIER reduce production pterm -> NOT LPAREN pterm RPAREN
-- On BAR reduce production pterm -> NOT LPAREN pterm RPAREN

State 410:
lib -> LETFUN IDENT LPAREN mayfailvartypeseq RPAREN EQUAL pterm . DOT lib [ RBRACE PROCESS EQUIVALENCE ]
pterm -> pterm . EQUAL pterm [ WEDGE OR EQUAL DOT DIFF ]
pterm -> pterm . DIFF pterm [ WEDGE OR EQUAL DOT DIFF ]
pterm -> pterm . OR pterm [ WEDGE OR EQUAL DOT DIFF ]
pterm -> pterm . WEDGE pterm [ WEDGE OR EQUAL DOT DIFF ]
-- On WEDGE shift to state 326
-- On OR shift to state 337
-- On EQUAL shift to state 328
-- On DOT shift to state 411
-- On DIFF shift to state 330

State 411:
lib -> LETFUN IDENT LPAREN mayfailvartypeseq RPAREN EQUAL pterm DOT . lib [ RBRACE PROCESS EQUIVALENCE ]
-- On WEAKSECRET shift to state 1
-- On TYPE shift to state 4
-- On TABLE shift to state 14
-- On SET shift to state 22
-- On REDUCTION shift to state 27
-- On QUERY shift to state 39
-- On PROOF shift to state 126
-- On PROBA shift to state 146
-- On PREDICATE shift to state 149
-- On PARAM shift to state 156
-- On NOUNIF shift to state 160
-- On NOT shift to state 229
-- On NONINTERF shift to state 234
-- On LETFUN shift to state 276
-- On LET shift to state 412
-- On IMPLEMENTATION shift to state 547
-- On FUN shift to state 594
-- On FREE shift to state 611
-- On EXPAND shift to state 617
-- On EVENT shift to state 623
-- On EQUATION shift to state 629
-- On ELIMTRUE shift to state 637
-- On DEFINE shift to state 641
-- On CONST shift to state 647
-- On CLAUSES shift to state 653
-- On CHANNEL shift to state 655
-- On lib shift to state 716
-- On RBRACE reduce production lib -> 
-- On PROCESS reduce production lib -> 
-- On EQUIVALENCE reduce production lib -> 

State 412:
lib -> LET . IDENT EQUAL tprocess DOT lib [ RBRACE PROCESS EQUIVALENCE ]
lib -> LET . IDENT LPAREN mayfailvartypeseq RPAREN EQUAL tprocess DOT lib [ RBRACE PROCESS EQUIVALENCE ]
-- On IDENT shift to state 413

State 413:
lib -> LET IDENT . EQUAL tprocess DOT lib [ RBRACE PROCESS EQUIVALENCE ]
lib -> LET IDENT . LPAREN mayfailvartypeseq RPAREN EQUAL tprocess DOT lib [ RBRACE PROCESS EQUIVALENCE ]
-- On LPAREN shift to state 414
-- On EQUAL shift to state 712

State 414:
lib -> LET IDENT LPAREN . mayfailvartypeseq RPAREN EQUAL tprocess DOT lib [ RBRACE PROCESS EQUIVALENCE ]
-- On IDENT shift to state 279
-- On nemayfailvartypeseq shift to state 284
-- On mayfailvartypeseq shift to state 415
-- On mayfailvartype shift to state 605
-- On RPAREN reduce production mayfailvartypeseq -> 

State 415:
lib -> LET IDENT LPAREN mayfailvartypeseq . RPAREN EQUAL tprocess DOT lib [ RBRACE PROCESS EQUIVALENCE ]
-- On RPAREN shift to state 416

State 416:
lib -> LET IDENT LPAREN mayfailvartypeseq RPAREN . EQUAL tprocess DOT lib [ RBRACE PROCESS EQUIVALENCE ]
-- On EQUAL shift to state 417

State 417:
lib -> LET IDENT LPAREN mayfailvartypeseq RPAREN EQUAL . tprocess DOT lib [ RBRACE PROCESS EQUIVALENCE ]
-- On YIELD shift to state 418
-- On REPL shift to state 419
-- On PHASE shift to state 420
-- On OUT shift to state 423
-- On NEW shift to state 432
-- On LPAREN shift to state 438
-- On LET shift to state 439
-- On INT shift to state 444
-- On INSERT shift to state 445
-- On IN shift to state 451
-- On IF shift to state 458
-- On IDENT shift to state 461
-- On GET shift to state 481
-- On FOREACH shift to state 489
-- On EVENT shift to state 494
-- On BARRIER shift to state 503
-- On tprocess shift to state 545
-- On progbegin shift to state 511
-- On basicpattern shift to state 515

State 418:
tprocess -> YIELD . [ YIELD RPAREN REPL PHASE OUT NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EOF ELSE DOT BARRIER BAR ]
-- On YIELD reduce production tprocess -> YIELD
-- On RPAREN reduce production tprocess -> YIELD
-- On REPL reduce production tprocess -> YIELD
-- On PHASE reduce production tprocess -> YIELD
-- On OUT reduce production tprocess -> YIELD
-- On NEW reduce production tprocess -> YIELD
-- On LPAREN reduce production tprocess -> YIELD
-- On LET reduce production tprocess -> YIELD
-- On INT reduce production tprocess -> YIELD
-- On INSERT reduce production tprocess -> YIELD
-- On IN reduce production tprocess -> YIELD
-- On IF reduce production tprocess -> YIELD
-- On IDENT reduce production tprocess -> YIELD
-- On GET reduce production tprocess -> YIELD
-- On FOREACH reduce production tprocess -> YIELD
-- On EVENT reduce production tprocess -> YIELD
-- On EOF reduce production tprocess -> YIELD
-- On ELSE reduce production tprocess -> YIELD
-- On DOT reduce production tprocess -> YIELD
-- On BARRIER reduce production tprocess -> YIELD
-- On BAR reduce production tprocess -> YIELD

State 419:
tprocess -> REPL . tprocess [ YIELD RPAREN REPL PHASE OUT NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EOF ELSE DOT BARRIER BAR ]
tprocess -> REPL . IDENT LEQ IDENT tprocess [ YIELD RPAREN REPL PHASE OUT NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EOF ELSE DOT BARRIER BAR ]
-- On YIELD shift to state 418
-- On REPL shift to state 419
-- On PHASE shift to state 420
-- On OUT shift to state 423
-- On NEW shift to state 432
-- On LPAREN shift to state 438
-- On LET shift to state 439
-- On INT shift to state 444
-- On INSERT shift to state 445
-- On IN shift to state 451
-- On IF shift to state 458
-- On IDENT shift to state 540
-- On GET shift to state 481
-- On FOREACH shift to state 489
-- On EVENT shift to state 494
-- On BARRIER shift to state 503
-- On tprocess shift to state 544
-- On progbegin shift to state 511
-- On basicpattern shift to state 515

State 420:
tprocess -> PHASE . INT opttprocess [ YIELD RPAREN REPL PHASE OUT NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EOF ELSE DOT BARRIER BAR ]
-- On INT shift to state 421

State 421:
tprocess -> PHASE INT . opttprocess [ YIELD RPAREN REPL PHASE OUT NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EOF ELSE DOT BARRIER BAR ]
-- On SEMI shift to state 422
-- On opttprocess shift to state 539
-- On YIELD reduce production opttprocess -> 
-- On RPAREN reduce production opttprocess -> 
-- On REPL reduce production opttprocess -> 
-- On PHASE reduce production opttprocess -> 
-- On OUT reduce production opttprocess -> 
-- On NEW reduce production opttprocess -> 
-- On LPAREN reduce production opttprocess -> 
-- On LET reduce production opttprocess -> 
-- On INT reduce production opttprocess -> 
-- On INSERT reduce production opttprocess -> 
-- On IN reduce production opttprocess -> 
-- On IF reduce production opttprocess -> 
-- On IDENT reduce production opttprocess -> 
-- On GET reduce production opttprocess -> 
-- On FOREACH reduce production opttprocess -> 
-- On EVENT reduce production opttprocess -> 
-- On EOF reduce production opttprocess -> 
-- On ELSE reduce production opttprocess -> 
-- On DOT reduce production opttprocess -> 
-- On BARRIER reduce production opttprocess -> 
-- On BAR reduce production opttprocess -> 

State 422:
opttprocess -> SEMI . tprocess [ YIELD RPAREN REPL PHASE OUT NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EOF ELSE DOT BARRIER BAR ]
-- On YIELD shift to state 418
-- On REPL shift to state 419
-- On PHASE shift to state 420
-- On OUT shift to state 423
-- On NEW shift to state 432
-- On LPAREN shift to state 438
-- On LET shift to state 439
-- On INT shift to state 444
-- On INSERT shift to state 445
-- On IN shift to state 451
-- On IF shift to state 458
-- On IDENT shift to state 461
-- On GET shift to state 481
-- On FOREACH shift to state 489
-- On EVENT shift to state 494
-- On BARRIER shift to state 503
-- On tprocess shift to state 538
-- On progbegin shift to state 511
-- On basicpattern shift to state 515

State 423:
tprocess -> OUT . LPAREN pterm COMMA pterm RPAREN progend opttprocess [ YIELD RPAREN REPL PHASE OUT NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EOF ELSE DOT BARRIER BAR ]
-- On LPAREN shift to state 424

State 424:
tprocess -> OUT LPAREN . pterm COMMA pterm RPAREN progend opttprocess [ YIELD RPAREN REPL PHASE OUT NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EOF ELSE DOT BARRIER BAR ]
-- On NOT shift to state 288
-- On NEW shift to state 290
-- On LPAREN shift to state 300
-- On LET shift to state 301
-- On INSERT shift to state 306
-- On IF shift to state 309
-- On IDENT shift to state 310
-- On GET shift to state 314
-- On EVENT shift to state 320
-- On CHOICE shift to state 323
-- On pterm shift to state 425
-- On basicpattern shift to state 332

State 425:
pterm -> pterm . EQUAL pterm [ WEDGE OR EQUAL DIFF COMMA ]
pterm -> pterm . DIFF pterm [ WEDGE OR EQUAL DIFF COMMA ]
pterm -> pterm . OR pterm [ WEDGE OR EQUAL DIFF COMMA ]
pterm -> pterm . WEDGE pterm [ WEDGE OR EQUAL DIFF COMMA ]
tprocess -> OUT LPAREN pterm . COMMA pterm RPAREN progend opttprocess [ YIELD RPAREN REPL PHASE OUT NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EOF ELSE DOT BARRIER BAR ]
-- On WEDGE shift to state 326
-- On OR shift to state 337
-- On EQUAL shift to state 328
-- On DIFF shift to state 330
-- On COMMA shift to state 426

State 426:
tprocess -> OUT LPAREN pterm COMMA . pterm RPAREN progend opttprocess [ YIELD RPAREN REPL PHASE OUT NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EOF ELSE DOT BARRIER BAR ]
-- On NOT shift to state 288
-- On NEW shift to state 290
-- On LPAREN shift to state 300
-- On LET shift to state 301
-- On INSERT shift to state 306
-- On IF shift to state 309
-- On IDENT shift to state 310
-- On GET shift to state 314
-- On EVENT shift to state 320
-- On CHOICE shift to state 323
-- On pterm shift to state 427
-- On basicpattern shift to state 332

State 427:
pterm -> pterm . EQUAL pterm [ WEDGE RPAREN OR EQUAL DIFF ]
pterm -> pterm . DIFF pterm [ WEDGE RPAREN OR EQUAL DIFF ]
pterm -> pterm . OR pterm [ WEDGE RPAREN OR EQUAL DIFF ]
pterm -> pterm . WEDGE pterm [ WEDGE RPAREN OR EQUAL DIFF ]
tprocess -> OUT LPAREN pterm COMMA pterm . RPAREN progend opttprocess [ YIELD RPAREN REPL PHASE OUT NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EOF ELSE DOT BARRIER BAR ]
-- On WEDGE shift to state 326
-- On RPAREN shift to state 428
-- On OR shift to state 337
-- On EQUAL shift to state 328
-- On DIFF shift to state 330

State 428:
tprocess -> OUT LPAREN pterm COMMA pterm RPAREN . progend opttprocess [ YIELD RPAREN REPL PHASE OUT NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EOF ELSE DOT BARRIER BAR ]
-- On RBRACE shift to state 429
-- On progend shift to state 430
-- On YIELD reduce production progend -> 
-- On SEMI reduce production progend -> 
-- On RPAREN reduce production progend -> 
-- On REPL reduce production progend -> 
-- On PHASE reduce production progend -> 
-- On OUT reduce production progend -> 
-- On NEW reduce production progend -> 
-- On LPAREN reduce production progend -> 
-- On LET reduce production progend -> 
-- On INT reduce production progend -> 
-- On INSERT reduce production progend -> 
-- On IN reduce production progend -> 
-- On IF reduce production progend -> 
-- On IDENT reduce production progend -> 
-- On GET reduce production progend -> 
-- On FOREACH reduce production progend -> 
-- On EVENT reduce production progend -> 
-- On EOF reduce production progend -> 
-- On ELSE reduce production progend -> 
-- On DOT reduce production progend -> 
-- On BARRIER reduce production progend -> 
-- On BAR reduce production progend -> 

State 429:
progend -> RBRACE . [ YIELD SEMI RPAREN REPL PHASE OUT NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EOF ELSE DOT BARRIER BAR ]
-- On YIELD reduce production progend -> RBRACE
-- On SEMI reduce production progend -> RBRACE
-- On RPAREN reduce production progend -> RBRACE
-- On REPL reduce production progend -> RBRACE
-- On PHASE reduce production progend -> RBRACE
-- On OUT reduce production progend -> RBRACE
-- On NEW reduce production progend -> RBRACE
-- On LPAREN reduce production progend -> RBRACE
-- On LET reduce production progend -> RBRACE
-- On INT reduce production progend -> RBRACE
-- On INSERT reduce production progend -> RBRACE
-- On IN reduce production progend -> RBRACE
-- On IF reduce production progend -> RBRACE
-- On IDENT reduce production progend -> RBRACE
-- On GET reduce production progend -> RBRACE
-- On FOREACH reduce production progend -> RBRACE
-- On EVENT reduce production progend -> RBRACE
-- On EOF reduce production progend -> RBRACE
-- On ELSE reduce production progend -> RBRACE
-- On DOT reduce production progend -> RBRACE
-- On BARRIER reduce production progend -> RBRACE
-- On BAR reduce production progend -> RBRACE

State 430:
tprocess -> OUT LPAREN pterm COMMA pterm RPAREN progend . opttprocess [ YIELD RPAREN REPL PHASE OUT NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EOF ELSE DOT BARRIER BAR ]
-- On SEMI shift to state 422
-- On opttprocess shift to state 431
-- On YIELD reduce production opttprocess -> 
-- On RPAREN reduce production opttprocess -> 
-- On REPL reduce production opttprocess -> 
-- On PHASE reduce production opttprocess -> 
-- On OUT reduce production opttprocess -> 
-- On NEW reduce production opttprocess -> 
-- On LPAREN reduce production opttprocess -> 
-- On LET reduce production opttprocess -> 
-- On INT reduce production opttprocess -> 
-- On INSERT reduce production opttprocess -> 
-- On IN reduce production opttprocess -> 
-- On IF reduce production opttprocess -> 
-- On IDENT reduce production opttprocess -> 
-- On GET reduce production opttprocess -> 
-- On FOREACH reduce production opttprocess -> 
-- On EVENT reduce production opttprocess -> 
-- On EOF reduce production opttprocess -> 
-- On ELSE reduce production opttprocess -> 
-- On DOT reduce production opttprocess -> 
-- On BARRIER reduce production opttprocess -> 
-- On BAR reduce production opttprocess -> 

State 431:
tprocess -> OUT LPAREN pterm COMMA pterm RPAREN progend opttprocess . [ YIELD RPAREN REPL PHASE OUT NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EOF ELSE DOT BARRIER BAR ]
-- On YIELD reduce production tprocess -> OUT LPAREN pterm COMMA pterm RPAREN progend opttprocess
-- On RPAREN reduce production tprocess -> OUT LPAREN pterm COMMA pterm RPAREN progend opttprocess
-- On REPL reduce production tprocess -> OUT LPAREN pterm COMMA pterm RPAREN progend opttprocess
-- On PHASE reduce production tprocess -> OUT LPAREN pterm COMMA pterm RPAREN progend opttprocess
-- On OUT reduce production tprocess -> OUT LPAREN pterm COMMA pterm RPAREN progend opttprocess
-- On NEW reduce production tprocess -> OUT LPAREN pterm COMMA pterm RPAREN progend opttprocess
-- On LPAREN reduce production tprocess -> OUT LPAREN pterm COMMA pterm RPAREN progend opttprocess
-- On LET reduce production tprocess -> OUT LPAREN pterm COMMA pterm RPAREN progend opttprocess
-- On INT reduce production tprocess -> OUT LPAREN pterm COMMA pterm RPAREN progend opttprocess
-- On INSERT reduce production tprocess -> OUT LPAREN pterm COMMA pterm RPAREN progend opttprocess
-- On IN reduce production tprocess -> OUT LPAREN pterm COMMA pterm RPAREN progend opttprocess
-- On IF reduce production tprocess -> OUT LPAREN pterm COMMA pterm RPAREN progend opttprocess
-- On IDENT reduce production tprocess -> OUT LPAREN pterm COMMA pterm RPAREN progend opttprocess
-- On GET reduce production tprocess -> OUT LPAREN pterm COMMA pterm RPAREN progend opttprocess
-- On FOREACH reduce production tprocess -> OUT LPAREN pterm COMMA pterm RPAREN progend opttprocess
-- On EVENT reduce production tprocess -> OUT LPAREN pterm COMMA pterm RPAREN progend opttprocess
-- On EOF reduce production tprocess -> OUT LPAREN pterm COMMA pterm RPAREN progend opttprocess
-- On ELSE reduce production tprocess -> OUT LPAREN pterm COMMA pterm RPAREN progend opttprocess
-- On DOT reduce production tprocess -> OUT LPAREN pterm COMMA pterm RPAREN progend opttprocess
-- On BARRIER reduce production tprocess -> OUT LPAREN pterm COMMA pterm RPAREN progend opttprocess
-- On BAR reduce production tprocess -> OUT LPAREN pterm COMMA pterm RPAREN progend opttprocess

State 432:
tprocess -> NEW . IDENT newarg COLON typeid opttprocess [ YIELD RPAREN REPL PHASE OUT NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EOF ELSE DOT BARRIER BAR ]
-- On IDENT shift to state 433

State 433:
tprocess -> NEW IDENT . newarg COLON typeid opttprocess [ YIELD RPAREN REPL PHASE OUT NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EOF ELSE DOT BARRIER BAR ]
-- On LBRACKET shift to state 292
-- On newarg shift to state 434
-- On COLON reduce production newarg -> 

State 434:
tprocess -> NEW IDENT newarg . COLON typeid opttprocess [ YIELD RPAREN REPL PHASE OUT NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EOF ELSE DOT BARRIER BAR ]
-- On COLON shift to state 435

State 435:
tprocess -> NEW IDENT newarg COLON . typeid opttprocess [ YIELD RPAREN REPL PHASE OUT NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EOF ELSE DOT BARRIER BAR ]
-- On IDENT shift to state 17
-- On CHANNEL shift to state 18
-- On typeid shift to state 436

State 436:
tprocess -> NEW IDENT newarg COLON typeid . opttprocess [ YIELD RPAREN REPL PHASE OUT NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EOF ELSE DOT BARRIER BAR ]
-- On SEMI shift to state 422
-- On opttprocess shift to state 437
-- On YIELD reduce production opttprocess -> 
-- On RPAREN reduce production opttprocess -> 
-- On REPL reduce production opttprocess -> 
-- On PHASE reduce production opttprocess -> 
-- On OUT reduce production opttprocess -> 
-- On NEW reduce production opttprocess -> 
-- On LPAREN reduce production opttprocess -> 
-- On LET reduce production opttprocess -> 
-- On INT reduce production opttprocess -> 
-- On INSERT reduce production opttprocess -> 
-- On IN reduce production opttprocess -> 
-- On IF reduce production opttprocess -> 
-- On IDENT reduce production opttprocess -> 
-- On GET reduce production opttprocess -> 
-- On FOREACH reduce production opttprocess -> 
-- On EVENT reduce production opttprocess -> 
-- On EOF reduce production opttprocess -> 
-- On ELSE reduce production opttprocess -> 
-- On DOT reduce production opttprocess -> 
-- On BARRIER reduce production opttprocess -> 
-- On BAR reduce production opttprocess -> 

State 437:
tprocess -> NEW IDENT newarg COLON typeid opttprocess . [ YIELD RPAREN REPL PHASE OUT NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EOF ELSE DOT BARRIER BAR ]
-- On YIELD reduce production tprocess -> NEW IDENT newarg COLON typeid opttprocess
-- On RPAREN reduce production tprocess -> NEW IDENT newarg COLON typeid opttprocess
-- On REPL reduce production tprocess -> NEW IDENT newarg COLON typeid opttprocess
-- On PHASE reduce production tprocess -> NEW IDENT newarg COLON typeid opttprocess
-- On OUT reduce production tprocess -> NEW IDENT newarg COLON typeid opttprocess
-- On NEW reduce production tprocess -> NEW IDENT newarg COLON typeid opttprocess
-- On LPAREN reduce production tprocess -> NEW IDENT newarg COLON typeid opttprocess
-- On LET reduce production tprocess -> NEW IDENT newarg COLON typeid opttprocess
-- On INT reduce production tprocess -> NEW IDENT newarg COLON typeid opttprocess
-- On INSERT reduce production tprocess -> NEW IDENT newarg COLON typeid opttprocess
-- On IN reduce production tprocess -> NEW IDENT newarg COLON typeid opttprocess
-- On IF reduce production tprocess -> NEW IDENT newarg COLON typeid opttprocess
-- On IDENT reduce production tprocess -> NEW IDENT newarg COLON typeid opttprocess
-- On GET reduce production tprocess -> NEW IDENT newarg COLON typeid opttprocess
-- On FOREACH reduce production tprocess -> NEW IDENT newarg COLON typeid opttprocess
-- On EVENT reduce production tprocess -> NEW IDENT newarg COLON typeid opttprocess
-- On EOF reduce production tprocess -> NEW IDENT newarg COLON typeid opttprocess
-- On ELSE reduce production tprocess -> NEW IDENT newarg COLON typeid opttprocess
-- On DOT reduce production tprocess -> NEW IDENT newarg COLON typeid opttprocess
-- On BARRIER reduce production tprocess -> NEW IDENT newarg COLON typeid opttprocess
-- On BAR reduce production tprocess -> NEW IDENT newarg COLON typeid opttprocess

State 438:
tprocess -> LPAREN . tprocess RPAREN [ YIELD RPAREN REPL PHASE OUT NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EOF ELSE DOT BARRIER BAR ]
-- On YIELD shift to state 418
-- On REPL shift to state 419
-- On PHASE shift to state 420
-- On OUT shift to state 423
-- On NEW shift to state 432
-- On LPAREN shift to state 438
-- On LET shift to state 439
-- On INT shift to state 444
-- On INSERT shift to state 445
-- On IN shift to state 451
-- On IF shift to state 458
-- On IDENT shift to state 461
-- On GET shift to state 481
-- On FOREACH shift to state 489
-- On EVENT shift to state 494
-- On BARRIER shift to state 503
-- On tprocess shift to state 536
-- On progbegin shift to state 511
-- On basicpattern shift to state 515

State 439:
tprocess -> LET . tpattern EQUAL pterm [ YIELD RPAREN REPL PHASE OUT NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EOF ELSE DOT BARRIER BAR ]
tprocess -> LET . tpattern EQUAL pterm IN tprocess optelseprocess [ YIELD RPAREN REPL PHASE OUT NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EOF ELSE DOT BARRIER BAR ]
tprocess -> LET . nevartype SUCHTHAT pterm [ YIELD RPAREN REPL PHASE OUT NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EOF ELSE DOT BARRIER BAR ]
tprocess -> LET . nevartype SUCHTHAT pterm IN tprocess optelseprocess [ YIELD RPAREN REPL PHASE OUT NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EOF ELSE DOT BARRIER BAR ]
-- On LPAREN shift to state 302
-- On IDENT shift to state 388
-- On EQUAL shift to state 305
-- On tpattern shift to state 440
-- On nevartype shift to state 530
-- On basicpattern shift to state 366

State 440:
tprocess -> LET tpattern . EQUAL pterm [ YIELD RPAREN REPL PHASE OUT NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EOF ELSE DOT BARRIER BAR ]
tprocess -> LET tpattern . EQUAL pterm IN tprocess optelseprocess [ YIELD RPAREN REPL PHASE OUT NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EOF ELSE DOT BARRIER BAR ]
-- On EQUAL shift to state 441

State 441:
tprocess -> LET tpattern EQUAL . pterm [ YIELD RPAREN REPL PHASE OUT NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EOF ELSE DOT BARRIER BAR ]
tprocess -> LET tpattern EQUAL . pterm IN tprocess optelseprocess [ YIELD RPAREN REPL PHASE OUT NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EOF ELSE DOT BARRIER BAR ]
-- On NOT shift to state 288
-- On NEW shift to state 290
-- On LPAREN shift to state 300
-- On LET shift to state 301
-- On INSERT shift to state 306
-- On IF shift to state 309
-- On IDENT shift to state 310
-- On GET shift to state 314
-- On EVENT shift to state 320
-- On CHOICE shift to state 323
-- On pterm shift to state 442
-- On basicpattern shift to state 332

State 442:
pterm -> pterm . EQUAL pterm [ YIELD WEDGE RPAREN REPL PHASE OUT OR NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EQUAL EOF ELSE DOT DIFF BARRIER BAR ]
pterm -> pterm . DIFF pterm [ YIELD WEDGE RPAREN REPL PHASE OUT OR NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EQUAL EOF ELSE DOT DIFF BARRIER BAR ]
pterm -> pterm . OR pterm [ YIELD WEDGE RPAREN REPL PHASE OUT OR NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EQUAL EOF ELSE DOT DIFF BARRIER BAR ]
pterm -> pterm . WEDGE pterm [ YIELD WEDGE RPAREN REPL PHASE OUT OR NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EQUAL EOF ELSE DOT DIFF BARRIER BAR ]
tprocess -> LET tpattern EQUAL pterm . [ YIELD RPAREN REPL PHASE OUT NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EOF ELSE DOT BARRIER BAR ]
tprocess -> LET tpattern EQUAL pterm . IN tprocess optelseprocess [ YIELD RPAREN REPL PHASE OUT NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EOF ELSE DOT BARRIER BAR ]
-- On WEDGE shift to state 326
-- On OR shift to state 337
-- On IN shift to state 443
-- On EQUAL shift to state 328
-- On DIFF shift to state 330
-- On YIELD reduce production tprocess -> LET tpattern EQUAL pterm
-- On RPAREN reduce production tprocess -> LET tpattern EQUAL pterm
-- On REPL reduce production tprocess -> LET tpattern EQUAL pterm
-- On PHASE reduce production tprocess -> LET tpattern EQUAL pterm
-- On OUT reduce production tprocess -> LET tpattern EQUAL pterm
-- On NEW reduce production tprocess -> LET tpattern EQUAL pterm
-- On LPAREN reduce production tprocess -> LET tpattern EQUAL pterm
-- On LET reduce production tprocess -> LET tpattern EQUAL pterm
-- On INT reduce production tprocess -> LET tpattern EQUAL pterm
-- On INSERT reduce production tprocess -> LET tpattern EQUAL pterm
-- On IN reduce production tprocess -> LET tpattern EQUAL pterm
-- On IF reduce production tprocess -> LET tpattern EQUAL pterm
-- On IDENT reduce production tprocess -> LET tpattern EQUAL pterm
-- On GET reduce production tprocess -> LET tpattern EQUAL pterm
-- On FOREACH reduce production tprocess -> LET tpattern EQUAL pterm
-- On EVENT reduce production tprocess -> LET tpattern EQUAL pterm
-- On EOF reduce production tprocess -> LET tpattern EQUAL pterm
-- On ELSE reduce production tprocess -> LET tpattern EQUAL pterm
-- On DOT reduce production tprocess -> LET tpattern EQUAL pterm
-- On BARRIER reduce production tprocess -> LET tpattern EQUAL pterm
-- On BAR reduce production tprocess -> LET tpattern EQUAL pterm
** Conflict on IN

State 443:
tprocess -> LET tpattern EQUAL pterm IN . tprocess optelseprocess [ YIELD RPAREN REPL PHASE OUT NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EOF ELSE DOT BARRIER BAR ]
-- On YIELD shift to state 418
-- On REPL shift to state 419
-- On PHASE shift to state 420
-- On OUT shift to state 423
-- On NEW shift to state 432
-- On LPAREN shift to state 438
-- On LET shift to state 439
-- On INT shift to state 444
-- On INSERT shift to state 445
-- On IN shift to state 451
-- On IF shift to state 458
-- On IDENT shift to state 461
-- On GET shift to state 481
-- On FOREACH shift to state 489
-- On EVENT shift to state 494
-- On BARRIER shift to state 503
-- On tprocess shift to state 528
-- On progbegin shift to state 511
-- On basicpattern shift to state 515

State 444:
tprocess -> INT . [ YIELD RPAREN REPL PHASE OUT NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EOF ELSE DOT BARRIER BAR ]
-- On YIELD reduce production tprocess -> INT
-- On RPAREN reduce production tprocess -> INT
-- On REPL reduce production tprocess -> INT
-- On PHASE reduce production tprocess -> INT
-- On OUT reduce production tprocess -> INT
-- On NEW reduce production tprocess -> INT
-- On LPAREN reduce production tprocess -> INT
-- On LET reduce production tprocess -> INT
-- On INT reduce production tprocess -> INT
-- On INSERT reduce production tprocess -> INT
-- On IN reduce production tprocess -> INT
-- On IF reduce production tprocess -> INT
-- On IDENT reduce production tprocess -> INT
-- On GET reduce production tprocess -> INT
-- On FOREACH reduce production tprocess -> INT
-- On EVENT reduce production tprocess -> INT
-- On EOF reduce production tprocess -> INT
-- On ELSE reduce production tprocess -> INT
-- On DOT reduce production tprocess -> INT
-- On BARRIER reduce production tprocess -> INT
-- On BAR reduce production tprocess -> INT

State 445:
tprocess -> INSERT . IDENT LPAREN ptermseq RPAREN opttprocess [ YIELD RPAREN REPL PHASE OUT NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EOF ELSE DOT BARRIER BAR ]
-- On IDENT shift to state 446

State 446:
tprocess -> INSERT IDENT . LPAREN ptermseq RPAREN opttprocess [ YIELD RPAREN REPL PHASE OUT NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EOF ELSE DOT BARRIER BAR ]
-- On LPAREN shift to state 447

State 447:
tprocess -> INSERT IDENT LPAREN . ptermseq RPAREN opttprocess [ YIELD RPAREN REPL PHASE OUT NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EOF ELSE DOT BARRIER BAR ]
-- On NOT shift to state 288
-- On NEW shift to state 290
-- On LPAREN shift to state 300
-- On LET shift to state 301
-- On INSERT shift to state 306
-- On IF shift to state 309
-- On IDENT shift to state 310
-- On GET shift to state 314
-- On EVENT shift to state 320
-- On CHOICE shift to state 323
-- On ptermseq shift to state 448
-- On pterm shift to state 347
-- On neptermseq shift to state 350
-- On basicpattern shift to state 332
-- On RPAREN reduce production ptermseq -> 

State 448:
tprocess -> INSERT IDENT LPAREN ptermseq . RPAREN opttprocess [ YIELD RPAREN REPL PHASE OUT NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EOF ELSE DOT BARRIER BAR ]
-- On RPAREN shift to state 449

State 449:
tprocess -> INSERT IDENT LPAREN ptermseq RPAREN . opttprocess [ YIELD RPAREN REPL PHASE OUT NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EOF ELSE DOT BARRIER BAR ]
-- On SEMI shift to state 422
-- On opttprocess shift to state 450
-- On YIELD reduce production opttprocess -> 
-- On RPAREN reduce production opttprocess -> 
-- On REPL reduce production opttprocess -> 
-- On PHASE reduce production opttprocess -> 
-- On OUT reduce production opttprocess -> 
-- On NEW reduce production opttprocess -> 
-- On LPAREN reduce production opttprocess -> 
-- On LET reduce production opttprocess -> 
-- On INT reduce production opttprocess -> 
-- On INSERT reduce production opttprocess -> 
-- On IN reduce production opttprocess -> 
-- On IF reduce production opttprocess -> 
-- On IDENT reduce production opttprocess -> 
-- On GET reduce production opttprocess -> 
-- On FOREACH reduce production opttprocess -> 
-- On EVENT reduce production opttprocess -> 
-- On EOF reduce production opttprocess -> 
-- On ELSE reduce production opttprocess -> 
-- On DOT reduce production opttprocess -> 
-- On BARRIER reduce production opttprocess -> 
-- On BAR reduce production opttprocess -> 

State 450:
tprocess -> INSERT IDENT LPAREN ptermseq RPAREN opttprocess . [ YIELD RPAREN REPL PHASE OUT NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EOF ELSE DOT BARRIER BAR ]
-- On YIELD reduce production tprocess -> INSERT IDENT LPAREN ptermseq RPAREN opttprocess
-- On RPAREN reduce production tprocess -> INSERT IDENT LPAREN ptermseq RPAREN opttprocess
-- On REPL reduce production tprocess -> INSERT IDENT LPAREN ptermseq RPAREN opttprocess
-- On PHASE reduce production tprocess -> INSERT IDENT LPAREN ptermseq RPAREN opttprocess
-- On OUT reduce production tprocess -> INSERT IDENT LPAREN ptermseq RPAREN opttprocess
-- On NEW reduce production tprocess -> INSERT IDENT LPAREN ptermseq RPAREN opttprocess
-- On LPAREN reduce production tprocess -> INSERT IDENT LPAREN ptermseq RPAREN opttprocess
-- On LET reduce production tprocess -> INSERT IDENT LPAREN ptermseq RPAREN opttprocess
-- On INT reduce production tprocess -> INSERT IDENT LPAREN ptermseq RPAREN opttprocess
-- On INSERT reduce production tprocess -> INSERT IDENT LPAREN ptermseq RPAREN opttprocess
-- On IN reduce production tprocess -> INSERT IDENT LPAREN ptermseq RPAREN opttprocess
-- On IF reduce production tprocess -> INSERT IDENT LPAREN ptermseq RPAREN opttprocess
-- On IDENT reduce production tprocess -> INSERT IDENT LPAREN ptermseq RPAREN opttprocess
-- On GET reduce production tprocess -> INSERT IDENT LPAREN ptermseq RPAREN opttprocess
-- On FOREACH reduce production tprocess -> INSERT IDENT LPAREN ptermseq RPAREN opttprocess
-- On EVENT reduce production tprocess -> INSERT IDENT LPAREN ptermseq RPAREN opttprocess
-- On EOF reduce production tprocess -> INSERT IDENT LPAREN ptermseq RPAREN opttprocess
-- On ELSE reduce production tprocess -> INSERT IDENT LPAREN ptermseq RPAREN opttprocess
-- On DOT reduce production tprocess -> INSERT IDENT LPAREN ptermseq RPAREN opttprocess
-- On BARRIER reduce production tprocess -> INSERT IDENT LPAREN ptermseq RPAREN opttprocess
-- On BAR reduce production tprocess -> INSERT IDENT LPAREN ptermseq RPAREN opttprocess

State 451:
tprocess -> IN . LPAREN pterm COMMA tpattern RPAREN opttprocess [ YIELD RPAREN REPL PHASE OUT NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EOF ELSE DOT BARRIER BAR ]
-- On LPAREN shift to state 452

State 452:
tprocess -> IN LPAREN . pterm COMMA tpattern RPAREN opttprocess [ YIELD RPAREN REPL PHASE OUT NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EOF ELSE DOT BARRIER BAR ]
-- On NOT shift to state 288
-- On NEW shift to state 290
-- On LPAREN shift to state 300
-- On LET shift to state 301
-- On INSERT shift to state 306
-- On IF shift to state 309
-- On IDENT shift to state 310
-- On GET shift to state 314
-- On EVENT shift to state 320
-- On CHOICE shift to state 323
-- On pterm shift to state 453
-- On basicpattern shift to state 332

State 453:
pterm -> pterm . EQUAL pterm [ WEDGE OR EQUAL DIFF COMMA ]
pterm -> pterm . DIFF pterm [ WEDGE OR EQUAL DIFF COMMA ]
pterm -> pterm . OR pterm [ WEDGE OR EQUAL DIFF COMMA ]
pterm -> pterm . WEDGE pterm [ WEDGE OR EQUAL DIFF COMMA ]
tprocess -> IN LPAREN pterm . COMMA tpattern RPAREN opttprocess [ YIELD RPAREN REPL PHASE OUT NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EOF ELSE DOT BARRIER BAR ]
-- On WEDGE shift to state 326
-- On OR shift to state 337
-- On EQUAL shift to state 328
-- On DIFF shift to state 330
-- On COMMA shift to state 454

State 454:
tprocess -> IN LPAREN pterm COMMA . tpattern RPAREN opttprocess [ YIELD RPAREN REPL PHASE OUT NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EOF ELSE DOT BARRIER BAR ]
-- On LPAREN shift to state 302
-- On IDENT shift to state 303
-- On EQUAL shift to state 305
-- On tpattern shift to state 455
-- On basicpattern shift to state 366

State 455:
tprocess -> IN LPAREN pterm COMMA tpattern . RPAREN opttprocess [ YIELD RPAREN REPL PHASE OUT NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EOF ELSE DOT BARRIER BAR ]
-- On RPAREN shift to state 456

State 456:
tprocess -> IN LPAREN pterm COMMA tpattern RPAREN . opttprocess [ YIELD RPAREN REPL PHASE OUT NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EOF ELSE DOT BARRIER BAR ]
-- On SEMI shift to state 422
-- On opttprocess shift to state 457
-- On YIELD reduce production opttprocess -> 
-- On RPAREN reduce production opttprocess -> 
-- On REPL reduce production opttprocess -> 
-- On PHASE reduce production opttprocess -> 
-- On OUT reduce production opttprocess -> 
-- On NEW reduce production opttprocess -> 
-- On LPAREN reduce production opttprocess -> 
-- On LET reduce production opttprocess -> 
-- On INT reduce production opttprocess -> 
-- On INSERT reduce production opttprocess -> 
-- On IN reduce production opttprocess -> 
-- On IF reduce production opttprocess -> 
-- On IDENT reduce production opttprocess -> 
-- On GET reduce production opttprocess -> 
-- On FOREACH reduce production opttprocess -> 
-- On EVENT reduce production opttprocess -> 
-- On EOF reduce production opttprocess -> 
-- On ELSE reduce production opttprocess -> 
-- On DOT reduce production opttprocess -> 
-- On BARRIER reduce production opttprocess -> 
-- On BAR reduce production opttprocess -> 

State 457:
tprocess -> IN LPAREN pterm COMMA tpattern RPAREN opttprocess . [ YIELD RPAREN REPL PHASE OUT NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EOF ELSE DOT BARRIER BAR ]
-- On YIELD reduce production tprocess -> IN LPAREN pterm COMMA tpattern RPAREN opttprocess
-- On RPAREN reduce production tprocess -> IN LPAREN pterm COMMA tpattern RPAREN opttprocess
-- On REPL reduce production tprocess -> IN LPAREN pterm COMMA tpattern RPAREN opttprocess
-- On PHASE reduce production tprocess -> IN LPAREN pterm COMMA tpattern RPAREN opttprocess
-- On OUT reduce production tprocess -> IN LPAREN pterm COMMA tpattern RPAREN opttprocess
-- On NEW reduce production tprocess -> IN LPAREN pterm COMMA tpattern RPAREN opttprocess
-- On LPAREN reduce production tprocess -> IN LPAREN pterm COMMA tpattern RPAREN opttprocess
-- On LET reduce production tprocess -> IN LPAREN pterm COMMA tpattern RPAREN opttprocess
-- On INT reduce production tprocess -> IN LPAREN pterm COMMA tpattern RPAREN opttprocess
-- On INSERT reduce production tprocess -> IN LPAREN pterm COMMA tpattern RPAREN opttprocess
-- On IN reduce production tprocess -> IN LPAREN pterm COMMA tpattern RPAREN opttprocess
-- On IF reduce production tprocess -> IN LPAREN pterm COMMA tpattern RPAREN opttprocess
-- On IDENT reduce production tprocess -> IN LPAREN pterm COMMA tpattern RPAREN opttprocess
-- On GET reduce production tprocess -> IN LPAREN pterm COMMA tpattern RPAREN opttprocess
-- On FOREACH reduce production tprocess -> IN LPAREN pterm COMMA tpattern RPAREN opttprocess
-- On EVENT reduce production tprocess -> IN LPAREN pterm COMMA tpattern RPAREN opttprocess
-- On EOF reduce production tprocess -> IN LPAREN pterm COMMA tpattern RPAREN opttprocess
-- On ELSE reduce production tprocess -> IN LPAREN pterm COMMA tpattern RPAREN opttprocess
-- On DOT reduce production tprocess -> IN LPAREN pterm COMMA tpattern RPAREN opttprocess
-- On BARRIER reduce production tprocess -> IN LPAREN pterm COMMA tpattern RPAREN opttprocess
-- On BAR reduce production tprocess -> IN LPAREN pterm COMMA tpattern RPAREN opttprocess

State 458:
tprocess -> IF . pterm THEN tprocess optelseprocess [ YIELD RPAREN REPL PHASE OUT NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EOF ELSE DOT BARRIER BAR ]
-- On NOT shift to state 288
-- On NEW shift to state 290
-- On LPAREN shift to state 300
-- On LET shift to state 301
-- On INSERT shift to state 306
-- On IF shift to state 309
-- On IDENT shift to state 310
-- On GET shift to state 314
-- On EVENT shift to state 320
-- On CHOICE shift to state 323
-- On pterm shift to state 459
-- On basicpattern shift to state 332

State 459:
pterm -> pterm . EQUAL pterm [ WEDGE THEN OR EQUAL DIFF ]
pterm -> pterm . DIFF pterm [ WEDGE THEN OR EQUAL DIFF ]
pterm -> pterm . OR pterm [ WEDGE THEN OR EQUAL DIFF ]
pterm -> pterm . WEDGE pterm [ WEDGE THEN OR EQUAL DIFF ]
tprocess -> IF pterm . THEN tprocess optelseprocess [ YIELD RPAREN REPL PHASE OUT NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EOF ELSE DOT BARRIER BAR ]
-- On WEDGE shift to state 326
-- On THEN shift to state 460
-- On OR shift to state 337
-- On EQUAL shift to state 328
-- On DIFF shift to state 330

State 460:
tprocess -> IF pterm THEN . tprocess optelseprocess [ YIELD RPAREN REPL PHASE OUT NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EOF ELSE DOT BARRIER BAR ]
-- On YIELD shift to state 418
-- On REPL shift to state 419
-- On PHASE shift to state 420
-- On OUT shift to state 423
-- On NEW shift to state 432
-- On LPAREN shift to state 438
-- On LET shift to state 439
-- On INT shift to state 444
-- On INSERT shift to state 445
-- On IN shift to state 451
-- On IF shift to state 458
-- On IDENT shift to state 461
-- On GET shift to state 481
-- On FOREACH shift to state 489
-- On EVENT shift to state 494
-- On BARRIER shift to state 503
-- On tprocess shift to state 526
-- On progbegin shift to state 511
-- On basicpattern shift to state 515

State 461:
basicpattern -> IDENT . [ LEFTARROW ]
basicpattern -> IDENT . COLON typeid [ LEFTARROW ]
progbegin -> IDENT . programoptions LBRACE [ YIELD REPL PHASE OUT NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT BARRIER ]
tprocess -> IDENT . [ YIELD RPAREN REPL PHASE OUT NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EOF ELSE DOT BARRIER BAR ]
tprocess -> IDENT . LPAREN ptermseq RPAREN [ YIELD RPAREN REPL PHASE OUT NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EOF ELSE DOT BARRIER BAR ]
tprocess -> IDENT . RANDOM typeid opttprocess [ YIELD RPAREN REPL PHASE OUT NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EOF ELSE DOT BARRIER BAR ]
-- On RANDOM shift to state 462
-- On LPAREN shift to state 465
-- On LBRACKET shift to state 468
-- On COLON shift to state 372
-- On programoptions shift to state 479
-- On YIELD reduce production tprocess -> IDENT
-- On RPAREN reduce production tprocess -> IDENT
-- On REPL reduce production tprocess -> IDENT
-- On PHASE reduce production tprocess -> IDENT
-- On OUT reduce production tprocess -> IDENT
-- On NEW reduce production tprocess -> IDENT
-- On LPAREN reduce production tprocess -> IDENT
-- On LET reduce production tprocess -> IDENT
-- On LEFTARROW reduce production basicpattern -> IDENT
-- On LBRACE reduce production programoptions -> 
-- On INT reduce production tprocess -> IDENT
-- On INSERT reduce production tprocess -> IDENT
-- On IN reduce production tprocess -> IDENT
-- On IF reduce production tprocess -> IDENT
-- On IDENT reduce production tprocess -> IDENT
-- On GET reduce production tprocess -> IDENT
-- On FOREACH reduce production tprocess -> IDENT
-- On EVENT reduce production tprocess -> IDENT
-- On EOF reduce production tprocess -> IDENT
-- On ELSE reduce production tprocess -> IDENT
-- On DOT reduce production tprocess -> IDENT
-- On BARRIER reduce production tprocess -> IDENT
-- On BAR reduce production tprocess -> IDENT
** Conflict on LPAREN

State 462:
tprocess -> IDENT RANDOM . typeid opttprocess [ YIELD RPAREN REPL PHASE OUT NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EOF ELSE DOT BARRIER BAR ]
-- On IDENT shift to state 17
-- On CHANNEL shift to state 18
-- On typeid shift to state 463

State 463:
tprocess -> IDENT RANDOM typeid . opttprocess [ YIELD RPAREN REPL PHASE OUT NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EOF ELSE DOT BARRIER BAR ]
-- On SEMI shift to state 422
-- On opttprocess shift to state 464
-- On YIELD reduce production opttprocess -> 
-- On RPAREN reduce production opttprocess -> 
-- On REPL reduce production opttprocess -> 
-- On PHASE reduce production opttprocess -> 
-- On OUT reduce production opttprocess -> 
-- On NEW reduce production opttprocess -> 
-- On LPAREN reduce production opttprocess -> 
-- On LET reduce production opttprocess -> 
-- On INT reduce production opttprocess -> 
-- On INSERT reduce production opttprocess -> 
-- On IN reduce production opttprocess -> 
-- On IF reduce production opttprocess -> 
-- On IDENT reduce production opttprocess -> 
-- On GET reduce production opttprocess -> 
-- On FOREACH reduce production opttprocess -> 
-- On EVENT reduce production opttprocess -> 
-- On EOF reduce production opttprocess -> 
-- On ELSE reduce production opttprocess -> 
-- On DOT reduce production opttprocess -> 
-- On BARRIER reduce production opttprocess -> 
-- On BAR reduce production opttprocess -> 

State 464:
tprocess -> IDENT RANDOM typeid opttprocess . [ YIELD RPAREN REPL PHASE OUT NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EOF ELSE DOT BARRIER BAR ]
-- On YIELD reduce production tprocess -> IDENT RANDOM typeid opttprocess
-- On RPAREN reduce production tprocess -> IDENT RANDOM typeid opttprocess
-- On REPL reduce production tprocess -> IDENT RANDOM typeid opttprocess
-- On PHASE reduce production tprocess -> IDENT RANDOM typeid opttprocess
-- On OUT reduce production tprocess -> IDENT RANDOM typeid opttprocess
-- On NEW reduce production tprocess -> IDENT RANDOM typeid opttprocess
-- On LPAREN reduce production tprocess -> IDENT RANDOM typeid opttprocess
-- On LET reduce production tprocess -> IDENT RANDOM typeid opttprocess
-- On INT reduce production tprocess -> IDENT RANDOM typeid opttprocess
-- On INSERT reduce production tprocess -> IDENT RANDOM typeid opttprocess
-- On IN reduce production tprocess -> IDENT RANDOM typeid opttprocess
-- On IF reduce production tprocess -> IDENT RANDOM typeid opttprocess
-- On IDENT reduce production tprocess -> IDENT RANDOM typeid opttprocess
-- On GET reduce production tprocess -> IDENT RANDOM typeid opttprocess
-- On FOREACH reduce production tprocess -> IDENT RANDOM typeid opttprocess
-- On EVENT reduce production tprocess -> IDENT RANDOM typeid opttprocess
-- On EOF reduce production tprocess -> IDENT RANDOM typeid opttprocess
-- On ELSE reduce production tprocess -> IDENT RANDOM typeid opttprocess
-- On DOT reduce production tprocess -> IDENT RANDOM typeid opttprocess
-- On BARRIER reduce production tprocess -> IDENT RANDOM typeid opttprocess
-- On BAR reduce production tprocess -> IDENT RANDOM typeid opttprocess

State 465:
tprocess -> IDENT LPAREN . ptermseq RPAREN [ YIELD RPAREN REPL PHASE OUT NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EOF ELSE DOT BARRIER BAR ]
-- On NOT shift to state 288
-- On NEW shift to state 290
-- On LPAREN shift to state 300
-- On LET shift to state 301
-- On INSERT shift to state 306
-- On IF shift to state 309
-- On IDENT shift to state 310
-- On GET shift to state 314
-- On EVENT shift to state 320
-- On CHOICE shift to state 323
-- On ptermseq shift to state 466
-- On pterm shift to state 347
-- On neptermseq shift to state 350
-- On basicpattern shift to state 332
-- On RPAREN reduce production ptermseq -> 

State 466:
tprocess -> IDENT LPAREN ptermseq . RPAREN [ YIELD RPAREN REPL PHASE OUT NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EOF ELSE DOT BARRIER BAR ]
-- On RPAREN shift to state 467

State 467:
tprocess -> IDENT LPAREN ptermseq RPAREN . [ YIELD RPAREN REPL PHASE OUT NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EOF ELSE DOT BARRIER BAR ]
-- On YIELD reduce production tprocess -> IDENT LPAREN ptermseq RPAREN
-- On RPAREN reduce production tprocess -> IDENT LPAREN ptermseq RPAREN
-- On REPL reduce production tprocess -> IDENT LPAREN ptermseq RPAREN
-- On PHASE reduce production tprocess -> IDENT LPAREN ptermseq RPAREN
-- On OUT reduce production tprocess -> IDENT LPAREN ptermseq RPAREN
-- On NEW reduce production tprocess -> IDENT LPAREN ptermseq RPAREN
-- On LPAREN reduce production tprocess -> IDENT LPAREN ptermseq RPAREN
-- On LET reduce production tprocess -> IDENT LPAREN ptermseq RPAREN
-- On INT reduce production tprocess -> IDENT LPAREN ptermseq RPAREN
-- On INSERT reduce production tprocess -> IDENT LPAREN ptermseq RPAREN
-- On IN reduce production tprocess -> IDENT LPAREN ptermseq RPAREN
-- On IF reduce production tprocess -> IDENT LPAREN ptermseq RPAREN
-- On IDENT reduce production tprocess -> IDENT LPAREN ptermseq RPAREN
-- On GET reduce production tprocess -> IDENT LPAREN ptermseq RPAREN
-- On FOREACH reduce production tprocess -> IDENT LPAREN ptermseq RPAREN
-- On EVENT reduce production tprocess -> IDENT LPAREN ptermseq RPAREN
-- On EOF reduce production tprocess -> IDENT LPAREN ptermseq RPAREN
-- On ELSE reduce production tprocess -> IDENT LPAREN ptermseq RPAREN
-- On DOT reduce production tprocess -> IDENT LPAREN ptermseq RPAREN
-- On BARRIER reduce production tprocess -> IDENT LPAREN ptermseq RPAREN
-- On BAR reduce production tprocess -> IDENT LPAREN ptermseq RPAREN

State 468:
programoptions -> LBRACKET . progoptlist RBRACKET [ LBRACE ]
-- On IDENT shift to state 469
-- On progoptlist shift to state 474
-- On progopt shift to state 476

State 469:
progopt -> IDENT . GREATER IDENT [ RBRACKET COMMA ]
progopt -> IDENT . LESS IDENT [ RBRACKET COMMA ]
-- On LESS shift to state 470
-- On GREATER shift to state 472

State 470:
progopt -> IDENT LESS . IDENT [ RBRACKET COMMA ]
-- On IDENT shift to state 471

State 471:
progopt -> IDENT LESS IDENT . [ RBRACKET COMMA ]
-- On RBRACKET reduce production progopt -> IDENT LESS IDENT
-- On COMMA reduce production progopt -> IDENT LESS IDENT

State 472:
progopt -> IDENT GREATER . IDENT [ RBRACKET COMMA ]
-- On IDENT shift to state 473

State 473:
progopt -> IDENT GREATER IDENT . [ RBRACKET COMMA ]
-- On RBRACKET reduce production progopt -> IDENT GREATER IDENT
-- On COMMA reduce production progopt -> IDENT GREATER IDENT

State 474:
programoptions -> LBRACKET progoptlist . RBRACKET [ LBRACE ]
-- On RBRACKET shift to state 475

State 475:
programoptions -> LBRACKET progoptlist RBRACKET . [ LBRACE ]
-- On LBRACE reduce production programoptions -> LBRACKET progoptlist RBRACKET

State 476:
progoptlist -> progopt . [ RBRACKET ]
progoptlist -> progopt . COMMA progoptlist [ RBRACKET ]
-- On COMMA shift to state 477
-- On RBRACKET reduce production progoptlist -> progopt

State 477:
progoptlist -> progopt COMMA . progoptlist [ RBRACKET ]
-- On IDENT shift to state 469
-- On progoptlist shift to state 478
-- On progopt shift to state 476

State 478:
progoptlist -> progopt COMMA progoptlist . [ RBRACKET ]
-- On RBRACKET reduce production progoptlist -> progopt COMMA progoptlist

State 479:
progbegin -> IDENT programoptions . LBRACE [ YIELD REPL PHASE OUT NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT BARRIER ]
-- On LBRACE shift to state 480

State 480:
progbegin -> IDENT programoptions LBRACE . [ YIELD REPL PHASE OUT NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT BARRIER ]
-- On YIELD reduce production progbegin -> IDENT programoptions LBRACE
-- On REPL reduce production progbegin -> IDENT programoptions LBRACE
-- On PHASE reduce production progbegin -> IDENT programoptions LBRACE
-- On OUT reduce production progbegin -> IDENT programoptions LBRACE
-- On NEW reduce production progbegin -> IDENT programoptions LBRACE
-- On LPAREN reduce production progbegin -> IDENT programoptions LBRACE
-- On LET reduce production progbegin -> IDENT programoptions LBRACE
-- On INT reduce production progbegin -> IDENT programoptions LBRACE
-- On INSERT reduce production progbegin -> IDENT programoptions LBRACE
-- On IN reduce production progbegin -> IDENT programoptions LBRACE
-- On IF reduce production progbegin -> IDENT programoptions LBRACE
-- On IDENT reduce production progbegin -> IDENT programoptions LBRACE
-- On GET reduce production progbegin -> IDENT programoptions LBRACE
-- On FOREACH reduce production progbegin -> IDENT programoptions LBRACE
-- On EVENT reduce production progbegin -> IDENT programoptions LBRACE
-- On BARRIER reduce production progbegin -> IDENT programoptions LBRACE

State 481:
tprocess -> GET . IDENT LPAREN tpatternseq RPAREN optinprocess optelseprocess [ YIELD RPAREN REPL PHASE OUT NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EOF ELSE DOT BARRIER BAR ]
tprocess -> GET . IDENT LPAREN tpatternseq RPAREN SUCHTHAT pterm optinprocess optelseprocess [ YIELD RPAREN REPL PHASE OUT NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EOF ELSE DOT BARRIER BAR ]
-- On IDENT shift to state 482

State 482:
tprocess -> GET IDENT . LPAREN tpatternseq RPAREN optinprocess optelseprocess [ YIELD RPAREN REPL PHASE OUT NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EOF ELSE DOT BARRIER BAR ]
tprocess -> GET IDENT . LPAREN tpatternseq RPAREN SUCHTHAT pterm optinprocess optelseprocess [ YIELD RPAREN REPL PHASE OUT NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EOF ELSE DOT BARRIER BAR ]
-- On LPAREN shift to state 483

State 483:
tprocess -> GET IDENT LPAREN . tpatternseq RPAREN optinprocess optelseprocess [ YIELD RPAREN REPL PHASE OUT NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EOF ELSE DOT BARRIER BAR ]
tprocess -> GET IDENT LPAREN . tpatternseq RPAREN SUCHTHAT pterm optinprocess optelseprocess [ YIELD RPAREN REPL PHASE OUT NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EOF ELSE DOT BARRIER BAR ]
-- On LPAREN shift to state 302
-- On IDENT shift to state 303
-- On EQUAL shift to state 305
-- On tpatternseq shift to state 484
-- On tpattern shift to state 363
-- On nepatternseq shift to state 367
-- On basicpattern shift to state 366
-- On RPAREN reduce production tpatternseq -> 

State 484:
tprocess -> GET IDENT LPAREN tpatternseq . RPAREN optinprocess optelseprocess [ YIELD RPAREN REPL PHASE OUT NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EOF ELSE DOT BARRIER BAR ]
tprocess -> GET IDENT LPAREN tpatternseq . RPAREN SUCHTHAT pterm optinprocess optelseprocess [ YIELD RPAREN REPL PHASE OUT NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EOF ELSE DOT BARRIER BAR ]
-- On RPAREN shift to state 485

State 485:
tprocess -> GET IDENT LPAREN tpatternseq RPAREN . optinprocess optelseprocess [ YIELD RPAREN REPL PHASE OUT NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EOF ELSE DOT BARRIER BAR ]
tprocess -> GET IDENT LPAREN tpatternseq RPAREN . SUCHTHAT pterm optinprocess optelseprocess [ YIELD RPAREN REPL PHASE OUT NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EOF ELSE DOT BARRIER BAR ]
-- On SUCHTHAT shift to state 486
-- On IN shift to state 488
-- On optinprocess shift to state 524
-- On YIELD reduce production optinprocess -> 
-- On RPAREN reduce production optinprocess -> 
-- On REPL reduce production optinprocess -> 
-- On PHASE reduce production optinprocess -> 
-- On OUT reduce production optinprocess -> 
-- On NEW reduce production optinprocess -> 
-- On LPAREN reduce production optinprocess -> 
-- On LET reduce production optinprocess -> 
-- On INT reduce production optinprocess -> 
-- On INSERT reduce production optinprocess -> 
-- On IN reduce production optinprocess -> 
-- On IF reduce production optinprocess -> 
-- On IDENT reduce production optinprocess -> 
-- On GET reduce production optinprocess -> 
-- On FOREACH reduce production optinprocess -> 
-- On EVENT reduce production optinprocess -> 
-- On EOF reduce production optinprocess -> 
-- On ELSE reduce production optinprocess -> 
-- On DOT reduce production optinprocess -> 
-- On BARRIER reduce production optinprocess -> 
-- On BAR reduce production optinprocess -> 
** Conflict on IN

State 486:
tprocess -> GET IDENT LPAREN tpatternseq RPAREN SUCHTHAT . pterm optinprocess optelseprocess [ YIELD RPAREN REPL PHASE OUT NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EOF ELSE DOT BARRIER BAR ]
-- On NOT shift to state 288
-- On NEW shift to state 290
-- On LPAREN shift to state 300
-- On LET shift to state 301
-- On INSERT shift to state 306
-- On IF shift to state 309
-- On IDENT shift to state 310
-- On GET shift to state 314
-- On EVENT shift to state 320
-- On CHOICE shift to state 323
-- On pterm shift to state 487
-- On basicpattern shift to state 332

State 487:
pterm -> pterm . EQUAL pterm [ YIELD WEDGE RPAREN REPL PHASE OUT OR NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EQUAL EOF ELSE DOT DIFF BARRIER BAR ]
pterm -> pterm . DIFF pterm [ YIELD WEDGE RPAREN REPL PHASE OUT OR NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EQUAL EOF ELSE DOT DIFF BARRIER BAR ]
pterm -> pterm . OR pterm [ YIELD WEDGE RPAREN REPL PHASE OUT OR NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EQUAL EOF ELSE DOT DIFF BARRIER BAR ]
pterm -> pterm . WEDGE pterm [ YIELD WEDGE RPAREN REPL PHASE OUT OR NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EQUAL EOF ELSE DOT DIFF BARRIER BAR ]
tprocess -> GET IDENT LPAREN tpatternseq RPAREN SUCHTHAT pterm . optinprocess optelseprocess [ YIELD RPAREN REPL PHASE OUT NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EOF ELSE DOT BARRIER BAR ]
-- On WEDGE shift to state 326
-- On OR shift to state 337
-- On IN shift to state 488
-- On EQUAL shift to state 328
-- On DIFF shift to state 330
-- On optinprocess shift to state 520
-- On YIELD reduce production optinprocess -> 
-- On RPAREN reduce production optinprocess -> 
-- On REPL reduce production optinprocess -> 
-- On PHASE reduce production optinprocess -> 
-- On OUT reduce production optinprocess -> 
-- On NEW reduce production optinprocess -> 
-- On LPAREN reduce production optinprocess -> 
-- On LET reduce production optinprocess -> 
-- On INT reduce production optinprocess -> 
-- On INSERT reduce production optinprocess -> 
-- On IN reduce production optinprocess -> 
-- On IF reduce production optinprocess -> 
-- On IDENT reduce production optinprocess -> 
-- On GET reduce production optinprocess -> 
-- On FOREACH reduce production optinprocess -> 
-- On EVENT reduce production optinprocess -> 
-- On EOF reduce production optinprocess -> 
-- On ELSE reduce production optinprocess -> 
-- On DOT reduce production optinprocess -> 
-- On BARRIER reduce production optinprocess -> 
-- On BAR reduce production optinprocess -> 
** Conflict on IN

State 488:
optinprocess -> IN . tprocess [ YIELD RPAREN REPL PHASE OUT NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EOF ELSE DOT BARRIER BAR ]
-- On YIELD shift to state 418
-- On REPL shift to state 419
-- On PHASE shift to state 420
-- On OUT shift to state 423
-- On NEW shift to state 432
-- On LPAREN shift to state 438
-- On LET shift to state 439
-- On INT shift to state 444
-- On INSERT shift to state 445
-- On IN shift to state 451
-- On IF shift to state 458
-- On IDENT shift to state 461
-- On GET shift to state 481
-- On FOREACH shift to state 489
-- On EVENT shift to state 494
-- On BARRIER shift to state 503
-- On tprocess shift to state 519
-- On progbegin shift to state 511
-- On basicpattern shift to state 515

State 489:
tprocess -> FOREACH . IDENT LEQ IDENT DO tprocess [ YIELD RPAREN REPL PHASE OUT NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EOF ELSE DOT BARRIER BAR ]
-- On IDENT shift to state 490

State 490:
tprocess -> FOREACH IDENT . LEQ IDENT DO tprocess [ YIELD RPAREN REPL PHASE OUT NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EOF ELSE DOT BARRIER BAR ]
-- On LEQ shift to state 491

State 491:
tprocess -> FOREACH IDENT LEQ . IDENT DO tprocess [ YIELD RPAREN REPL PHASE OUT NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EOF ELSE DOT BARRIER BAR ]
-- On IDENT shift to state 492

State 492:
tprocess -> FOREACH IDENT LEQ IDENT . DO tprocess [ YIELD RPAREN REPL PHASE OUT NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EOF ELSE DOT BARRIER BAR ]
-- On DO shift to state 493

State 493:
tprocess -> FOREACH IDENT LEQ IDENT DO . tprocess [ YIELD RPAREN REPL PHASE OUT NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EOF ELSE DOT BARRIER BAR ]
-- On YIELD shift to state 418
-- On REPL shift to state 419
-- On PHASE shift to state 420
-- On OUT shift to state 423
-- On NEW shift to state 432
-- On LPAREN shift to state 438
-- On LET shift to state 439
-- On INT shift to state 444
-- On INSERT shift to state 445
-- On IN shift to state 451
-- On IF shift to state 458
-- On IDENT shift to state 461
-- On GET shift to state 481
-- On FOREACH shift to state 489
-- On EVENT shift to state 494
-- On BARRIER shift to state 503
-- On tprocess shift to state 510
-- On progbegin shift to state 511
-- On basicpattern shift to state 515

State 494:
tprocess -> EVENT . IDENT LPAREN ptermseq RPAREN newarg opttprocess [ YIELD RPAREN REPL PHASE OUT NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EOF ELSE DOT BARRIER BAR ]
tprocess -> EVENT . IDENT newarg opttprocess [ YIELD RPAREN REPL PHASE OUT NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EOF ELSE DOT BARRIER BAR ]
-- On IDENT shift to state 495

State 495:
tprocess -> EVENT IDENT . LPAREN ptermseq RPAREN newarg opttprocess [ YIELD RPAREN REPL PHASE OUT NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EOF ELSE DOT BARRIER BAR ]
tprocess -> EVENT IDENT . newarg opttprocess [ YIELD RPAREN REPL PHASE OUT NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EOF ELSE DOT BARRIER BAR ]
-- On LPAREN shift to state 496
-- On LBRACKET shift to state 292
-- On newarg shift to state 501
-- On YIELD reduce production newarg -> 
-- On SEMI reduce production newarg -> 
-- On RPAREN reduce production newarg -> 
-- On REPL reduce production newarg -> 
-- On PHASE reduce production newarg -> 
-- On OUT reduce production newarg -> 
-- On NEW reduce production newarg -> 
-- On LPAREN reduce production newarg -> 
-- On LET reduce production newarg -> 
-- On INT reduce production newarg -> 
-- On INSERT reduce production newarg -> 
-- On IN reduce production newarg -> 
-- On IF reduce production newarg -> 
-- On IDENT reduce production newarg -> 
-- On GET reduce production newarg -> 
-- On FOREACH reduce production newarg -> 
-- On EVENT reduce production newarg -> 
-- On EOF reduce production newarg -> 
-- On ELSE reduce production newarg -> 
-- On DOT reduce production newarg -> 
-- On BARRIER reduce production newarg -> 
-- On BAR reduce production newarg -> 
** Conflict on LPAREN

State 496:
tprocess -> EVENT IDENT LPAREN . ptermseq RPAREN newarg opttprocess [ YIELD RPAREN REPL PHASE OUT NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EOF ELSE DOT BARRIER BAR ]
-- On NOT shift to state 288
-- On NEW shift to state 290
-- On LPAREN shift to state 300
-- On LET shift to state 301
-- On INSERT shift to state 306
-- On IF shift to state 309
-- On IDENT shift to state 310
-- On GET shift to state 314
-- On EVENT shift to state 320
-- On CHOICE shift to state 323
-- On ptermseq shift to state 497
-- On pterm shift to state 347
-- On neptermseq shift to state 350
-- On basicpattern shift to state 332
-- On RPAREN reduce production ptermseq -> 

State 497:
tprocess -> EVENT IDENT LPAREN ptermseq . RPAREN newarg opttprocess [ YIELD RPAREN REPL PHASE OUT NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EOF ELSE DOT BARRIER BAR ]
-- On RPAREN shift to state 498

State 498:
tprocess -> EVENT IDENT LPAREN ptermseq RPAREN . newarg opttprocess [ YIELD RPAREN REPL PHASE OUT NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EOF ELSE DOT BARRIER BAR ]
-- On LBRACKET shift to state 292
-- On newarg shift to state 499
-- On YIELD reduce production newarg -> 
-- On SEMI reduce production newarg -> 
-- On RPAREN reduce production newarg -> 
-- On REPL reduce production newarg -> 
-- On PHASE reduce production newarg -> 
-- On OUT reduce production newarg -> 
-- On NEW reduce production newarg -> 
-- On LPAREN reduce production newarg -> 
-- On LET reduce production newarg -> 
-- On INT reduce production newarg -> 
-- On INSERT reduce production newarg -> 
-- On IN reduce production newarg -> 
-- On IF reduce production newarg -> 
-- On IDENT reduce production newarg -> 
-- On GET reduce production newarg -> 
-- On FOREACH reduce production newarg -> 
-- On EVENT reduce production newarg -> 
-- On EOF reduce production newarg -> 
-- On ELSE reduce production newarg -> 
-- On DOT reduce production newarg -> 
-- On BARRIER reduce production newarg -> 
-- On BAR reduce production newarg -> 

State 499:
tprocess -> EVENT IDENT LPAREN ptermseq RPAREN newarg . opttprocess [ YIELD RPAREN REPL PHASE OUT NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EOF ELSE DOT BARRIER BAR ]
-- On SEMI shift to state 422
-- On opttprocess shift to state 500
-- On YIELD reduce production opttprocess -> 
-- On RPAREN reduce production opttprocess -> 
-- On REPL reduce production opttprocess -> 
-- On PHASE reduce production opttprocess -> 
-- On OUT reduce production opttprocess -> 
-- On NEW reduce production opttprocess -> 
-- On LPAREN reduce production opttprocess -> 
-- On LET reduce production opttprocess -> 
-- On INT reduce production opttprocess -> 
-- On INSERT reduce production opttprocess -> 
-- On IN reduce production opttprocess -> 
-- On IF reduce production opttprocess -> 
-- On IDENT reduce production opttprocess -> 
-- On GET reduce production opttprocess -> 
-- On FOREACH reduce production opttprocess -> 
-- On EVENT reduce production opttprocess -> 
-- On EOF reduce production opttprocess -> 
-- On ELSE reduce production opttprocess -> 
-- On DOT reduce production opttprocess -> 
-- On BARRIER reduce production opttprocess -> 
-- On BAR reduce production opttprocess -> 

State 500:
tprocess -> EVENT IDENT LPAREN ptermseq RPAREN newarg opttprocess . [ YIELD RPAREN REPL PHASE OUT NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EOF ELSE DOT BARRIER BAR ]
-- On YIELD reduce production tprocess -> EVENT IDENT LPAREN ptermseq RPAREN newarg opttprocess
-- On RPAREN reduce production tprocess -> EVENT IDENT LPAREN ptermseq RPAREN newarg opttprocess
-- On REPL reduce production tprocess -> EVENT IDENT LPAREN ptermseq RPAREN newarg opttprocess
-- On PHASE reduce production tprocess -> EVENT IDENT LPAREN ptermseq RPAREN newarg opttprocess
-- On OUT reduce production tprocess -> EVENT IDENT LPAREN ptermseq RPAREN newarg opttprocess
-- On NEW reduce production tprocess -> EVENT IDENT LPAREN ptermseq RPAREN newarg opttprocess
-- On LPAREN reduce production tprocess -> EVENT IDENT LPAREN ptermseq RPAREN newarg opttprocess
-- On LET reduce production tprocess -> EVENT IDENT LPAREN ptermseq RPAREN newarg opttprocess
-- On INT reduce production tprocess -> EVENT IDENT LPAREN ptermseq RPAREN newarg opttprocess
-- On INSERT reduce production tprocess -> EVENT IDENT LPAREN ptermseq RPAREN newarg opttprocess
-- On IN reduce production tprocess -> EVENT IDENT LPAREN ptermseq RPAREN newarg opttprocess
-- On IF reduce production tprocess -> EVENT IDENT LPAREN ptermseq RPAREN newarg opttprocess
-- On IDENT reduce production tprocess -> EVENT IDENT LPAREN ptermseq RPAREN newarg opttprocess
-- On GET reduce production tprocess -> EVENT IDENT LPAREN ptermseq RPAREN newarg opttprocess
-- On FOREACH reduce production tprocess -> EVENT IDENT LPAREN ptermseq RPAREN newarg opttprocess
-- On EVENT reduce production tprocess -> EVENT IDENT LPAREN ptermseq RPAREN newarg opttprocess
-- On EOF reduce production tprocess -> EVENT IDENT LPAREN ptermseq RPAREN newarg opttprocess
-- On ELSE reduce production tprocess -> EVENT IDENT LPAREN ptermseq RPAREN newarg opttprocess
-- On DOT reduce production tprocess -> EVENT IDENT LPAREN ptermseq RPAREN newarg opttprocess
-- On BARRIER reduce production tprocess -> EVENT IDENT LPAREN ptermseq RPAREN newarg opttprocess
-- On BAR reduce production tprocess -> EVENT IDENT LPAREN ptermseq RPAREN newarg opttprocess

State 501:
tprocess -> EVENT IDENT newarg . opttprocess [ YIELD RPAREN REPL PHASE OUT NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EOF ELSE DOT BARRIER BAR ]
-- On SEMI shift to state 422
-- On opttprocess shift to state 502
-- On YIELD reduce production opttprocess -> 
-- On RPAREN reduce production opttprocess -> 
-- On REPL reduce production opttprocess -> 
-- On PHASE reduce production opttprocess -> 
-- On OUT reduce production opttprocess -> 
-- On NEW reduce production opttprocess -> 
-- On LPAREN reduce production opttprocess -> 
-- On LET reduce production opttprocess -> 
-- On INT reduce production opttprocess -> 
-- On INSERT reduce production opttprocess -> 
-- On IN reduce production opttprocess -> 
-- On IF reduce production opttprocess -> 
-- On IDENT reduce production opttprocess -> 
-- On GET reduce production opttprocess -> 
-- On FOREACH reduce production opttprocess -> 
-- On EVENT reduce production opttprocess -> 
-- On EOF reduce production opttprocess -> 
-- On ELSE reduce production opttprocess -> 
-- On DOT reduce production opttprocess -> 
-- On BARRIER reduce production opttprocess -> 
-- On BAR reduce production opttprocess -> 

State 502:
tprocess -> EVENT IDENT newarg opttprocess . [ YIELD RPAREN REPL PHASE OUT NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EOF ELSE DOT BARRIER BAR ]
-- On YIELD reduce production tprocess -> EVENT IDENT newarg opttprocess
-- On RPAREN reduce production tprocess -> EVENT IDENT newarg opttprocess
-- On REPL reduce production tprocess -> EVENT IDENT newarg opttprocess
-- On PHASE reduce production tprocess -> EVENT IDENT newarg opttprocess
-- On OUT reduce production tprocess -> EVENT IDENT newarg opttprocess
-- On NEW reduce production tprocess -> EVENT IDENT newarg opttprocess
-- On LPAREN reduce production tprocess -> EVENT IDENT newarg opttprocess
-- On LET reduce production tprocess -> EVENT IDENT newarg opttprocess
-- On INT reduce production tprocess -> EVENT IDENT newarg opttprocess
-- On INSERT reduce production tprocess -> EVENT IDENT newarg opttprocess
-- On IN reduce production tprocess -> EVENT IDENT newarg opttprocess
-- On IF reduce production tprocess -> EVENT IDENT newarg opttprocess
-- On IDENT reduce production tprocess -> EVENT IDENT newarg opttprocess
-- On GET reduce production tprocess -> EVENT IDENT newarg opttprocess
-- On FOREACH reduce production tprocess -> EVENT IDENT newarg opttprocess
-- On EVENT reduce production tprocess -> EVENT IDENT newarg opttprocess
-- On EOF reduce production tprocess -> EVENT IDENT newarg opttprocess
-- On ELSE reduce production tprocess -> EVENT IDENT newarg opttprocess
-- On DOT reduce production tprocess -> EVENT IDENT newarg opttprocess
-- On BARRIER reduce production tprocess -> EVENT IDENT newarg opttprocess
-- On BAR reduce production tprocess -> EVENT IDENT newarg opttprocess

State 503:
tprocess -> BARRIER . INT opttprocess [ YIELD RPAREN REPL PHASE OUT NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EOF ELSE DOT BARRIER BAR ]
tprocess -> BARRIER . INT LBRACKET IDENT RBRACKET opttprocess [ YIELD RPAREN REPL PHASE OUT NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EOF ELSE DOT BARRIER BAR ]
-- On INT shift to state 504

State 504:
tprocess -> BARRIER INT . opttprocess [ YIELD RPAREN REPL PHASE OUT NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EOF ELSE DOT BARRIER BAR ]
tprocess -> BARRIER INT . LBRACKET IDENT RBRACKET opttprocess [ YIELD RPAREN REPL PHASE OUT NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EOF ELSE DOT BARRIER BAR ]
-- On SEMI shift to state 422
-- On LBRACKET shift to state 505
-- On opttprocess shift to state 509
-- On YIELD reduce production opttprocess -> 
-- On RPAREN reduce production opttprocess -> 
-- On REPL reduce production opttprocess -> 
-- On PHASE reduce production opttprocess -> 
-- On OUT reduce production opttprocess -> 
-- On NEW reduce production opttprocess -> 
-- On LPAREN reduce production opttprocess -> 
-- On LET reduce production opttprocess -> 
-- On INT reduce production opttprocess -> 
-- On INSERT reduce production opttprocess -> 
-- On IN reduce production opttprocess -> 
-- On IF reduce production opttprocess -> 
-- On IDENT reduce production opttprocess -> 
-- On GET reduce production opttprocess -> 
-- On FOREACH reduce production opttprocess -> 
-- On EVENT reduce production opttprocess -> 
-- On EOF reduce production opttprocess -> 
-- On ELSE reduce production opttprocess -> 
-- On DOT reduce production opttprocess -> 
-- On BARRIER reduce production opttprocess -> 
-- On BAR reduce production opttprocess -> 

State 505:
tprocess -> BARRIER INT LBRACKET . IDENT RBRACKET opttprocess [ YIELD RPAREN REPL PHASE OUT NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EOF ELSE DOT BARRIER BAR ]
-- On IDENT shift to state 506

State 506:
tprocess -> BARRIER INT LBRACKET IDENT . RBRACKET opttprocess [ YIELD RPAREN REPL PHASE OUT NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EOF ELSE DOT BARRIER BAR ]
-- On RBRACKET shift to state 507

State 507:
tprocess -> BARRIER INT LBRACKET IDENT RBRACKET . opttprocess [ YIELD RPAREN REPL PHASE OUT NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EOF ELSE DOT BARRIER BAR ]
-- On SEMI shift to state 422
-- On opttprocess shift to state 508
-- On YIELD reduce production opttprocess -> 
-- On RPAREN reduce production opttprocess -> 
-- On REPL reduce production opttprocess -> 
-- On PHASE reduce production opttprocess -> 
-- On OUT reduce production opttprocess -> 
-- On NEW reduce production opttprocess -> 
-- On LPAREN reduce production opttprocess -> 
-- On LET reduce production opttprocess -> 
-- On INT reduce production opttprocess -> 
-- On INSERT reduce production opttprocess -> 
-- On IN reduce production opttprocess -> 
-- On IF reduce production opttprocess -> 
-- On IDENT reduce production opttprocess -> 
-- On GET reduce production opttprocess -> 
-- On FOREACH reduce production opttprocess -> 
-- On EVENT reduce production opttprocess -> 
-- On EOF reduce production opttprocess -> 
-- On ELSE reduce production opttprocess -> 
-- On DOT reduce production opttprocess -> 
-- On BARRIER reduce production opttprocess -> 
-- On BAR reduce production opttprocess -> 

State 508:
tprocess -> BARRIER INT LBRACKET IDENT RBRACKET opttprocess . [ YIELD RPAREN REPL PHASE OUT NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EOF ELSE DOT BARRIER BAR ]
-- On YIELD reduce production tprocess -> BARRIER INT LBRACKET IDENT RBRACKET opttprocess
-- On RPAREN reduce production tprocess -> BARRIER INT LBRACKET IDENT RBRACKET opttprocess
-- On REPL reduce production tprocess -> BARRIER INT LBRACKET IDENT RBRACKET opttprocess
-- On PHASE reduce production tprocess -> BARRIER INT LBRACKET IDENT RBRACKET opttprocess
-- On OUT reduce production tprocess -> BARRIER INT LBRACKET IDENT RBRACKET opttprocess
-- On NEW reduce production tprocess -> BARRIER INT LBRACKET IDENT RBRACKET opttprocess
-- On LPAREN reduce production tprocess -> BARRIER INT LBRACKET IDENT RBRACKET opttprocess
-- On LET reduce production tprocess -> BARRIER INT LBRACKET IDENT RBRACKET opttprocess
-- On INT reduce production tprocess -> BARRIER INT LBRACKET IDENT RBRACKET opttprocess
-- On INSERT reduce production tprocess -> BARRIER INT LBRACKET IDENT RBRACKET opttprocess
-- On IN reduce production tprocess -> BARRIER INT LBRACKET IDENT RBRACKET opttprocess
-- On IF reduce production tprocess -> BARRIER INT LBRACKET IDENT RBRACKET opttprocess
-- On IDENT reduce production tprocess -> BARRIER INT LBRACKET IDENT RBRACKET opttprocess
-- On GET reduce production tprocess -> BARRIER INT LBRACKET IDENT RBRACKET opttprocess
-- On FOREACH reduce production tprocess -> BARRIER INT LBRACKET IDENT RBRACKET opttprocess
-- On EVENT reduce production tprocess -> BARRIER INT LBRACKET IDENT RBRACKET opttprocess
-- On EOF reduce production tprocess -> BARRIER INT LBRACKET IDENT RBRACKET opttprocess
-- On ELSE reduce production tprocess -> BARRIER INT LBRACKET IDENT RBRACKET opttprocess
-- On DOT reduce production tprocess -> BARRIER INT LBRACKET IDENT RBRACKET opttprocess
-- On BARRIER reduce production tprocess -> BARRIER INT LBRACKET IDENT RBRACKET opttprocess
-- On BAR reduce production tprocess -> BARRIER INT LBRACKET IDENT RBRACKET opttprocess

State 509:
tprocess -> BARRIER INT opttprocess . [ YIELD RPAREN REPL PHASE OUT NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EOF ELSE DOT BARRIER BAR ]
-- On YIELD reduce production tprocess -> BARRIER INT opttprocess
-- On RPAREN reduce production tprocess -> BARRIER INT opttprocess
-- On REPL reduce production tprocess -> BARRIER INT opttprocess
-- On PHASE reduce production tprocess -> BARRIER INT opttprocess
-- On OUT reduce production tprocess -> BARRIER INT opttprocess
-- On NEW reduce production tprocess -> BARRIER INT opttprocess
-- On LPAREN reduce production tprocess -> BARRIER INT opttprocess
-- On LET reduce production tprocess -> BARRIER INT opttprocess
-- On INT reduce production tprocess -> BARRIER INT opttprocess
-- On INSERT reduce production tprocess -> BARRIER INT opttprocess
-- On IN reduce production tprocess -> BARRIER INT opttprocess
-- On IF reduce production tprocess -> BARRIER INT opttprocess
-- On IDENT reduce production tprocess -> BARRIER INT opttprocess
-- On GET reduce production tprocess -> BARRIER INT opttprocess
-- On FOREACH reduce production tprocess -> BARRIER INT opttprocess
-- On EVENT reduce production tprocess -> BARRIER INT opttprocess
-- On EOF reduce production tprocess -> BARRIER INT opttprocess
-- On ELSE reduce production tprocess -> BARRIER INT opttprocess
-- On DOT reduce production tprocess -> BARRIER INT opttprocess
-- On BARRIER reduce production tprocess -> BARRIER INT opttprocess
-- On BAR reduce production tprocess -> BARRIER INT opttprocess

State 510:
tprocess -> FOREACH IDENT LEQ IDENT DO tprocess . [ YIELD RPAREN REPL PHASE OUT NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EOF ELSE DOT BARRIER BAR ]
tprocess -> tprocess . BAR tprocess [ YIELD RPAREN REPL PHASE OUT NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EOF ELSE DOT BARRIER BAR ]
-- On YIELD reduce production tprocess -> FOREACH IDENT LEQ IDENT DO tprocess
-- On RPAREN reduce production tprocess -> FOREACH IDENT LEQ IDENT DO tprocess
-- On REPL reduce production tprocess -> FOREACH IDENT LEQ IDENT DO tprocess
-- On PHASE reduce production tprocess -> FOREACH IDENT LEQ IDENT DO tprocess
-- On OUT reduce production tprocess -> FOREACH IDENT LEQ IDENT DO tprocess
-- On NEW reduce production tprocess -> FOREACH IDENT LEQ IDENT DO tprocess
-- On LPAREN reduce production tprocess -> FOREACH IDENT LEQ IDENT DO tprocess
-- On LET reduce production tprocess -> FOREACH IDENT LEQ IDENT DO tprocess
-- On INT reduce production tprocess -> FOREACH IDENT LEQ IDENT DO tprocess
-- On INSERT reduce production tprocess -> FOREACH IDENT LEQ IDENT DO tprocess
-- On IN reduce production tprocess -> FOREACH IDENT LEQ IDENT DO tprocess
-- On IF reduce production tprocess -> FOREACH IDENT LEQ IDENT DO tprocess
-- On IDENT reduce production tprocess -> FOREACH IDENT LEQ IDENT DO tprocess
-- On GET reduce production tprocess -> FOREACH IDENT LEQ IDENT DO tprocess
-- On FOREACH reduce production tprocess -> FOREACH IDENT LEQ IDENT DO tprocess
-- On EVENT reduce production tprocess -> FOREACH IDENT LEQ IDENT DO tprocess
-- On EOF reduce production tprocess -> FOREACH IDENT LEQ IDENT DO tprocess
-- On ELSE reduce production tprocess -> FOREACH IDENT LEQ IDENT DO tprocess
-- On DOT reduce production tprocess -> FOREACH IDENT LEQ IDENT DO tprocess
-- On BARRIER reduce production tprocess -> FOREACH IDENT LEQ IDENT DO tprocess
-- On BAR reduce production tprocess -> FOREACH IDENT LEQ IDENT DO tprocess

State 511:
tprocess -> progbegin . tprocess [ YIELD RPAREN REPL PHASE OUT NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EOF ELSE DOT BARRIER BAR ]
-- On YIELD shift to state 418
-- On REPL shift to state 419
-- On PHASE shift to state 420
-- On OUT shift to state 423
-- On NEW shift to state 432
-- On LPAREN shift to state 438
-- On LET shift to state 439
-- On INT shift to state 444
-- On INSERT shift to state 445
-- On IN shift to state 451
-- On IF shift to state 458
-- On IDENT shift to state 461
-- On GET shift to state 481
-- On FOREACH shift to state 489
-- On EVENT shift to state 494
-- On BARRIER shift to state 503
-- On tprocess shift to state 512
-- On progbegin shift to state 511
-- On basicpattern shift to state 515

State 512:
tprocess -> progbegin tprocess . [ YIELD RPAREN REPL PHASE OUT NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EOF ELSE DOT BARRIER BAR ]
tprocess -> tprocess . BAR tprocess [ YIELD RPAREN REPL PHASE OUT NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EOF ELSE DOT BARRIER BAR ]
-- On BAR shift to state 513
-- On YIELD reduce production tprocess -> progbegin tprocess
-- On RPAREN reduce production tprocess -> progbegin tprocess
-- On REPL reduce production tprocess -> progbegin tprocess
-- On PHASE reduce production tprocess -> progbegin tprocess
-- On OUT reduce production tprocess -> progbegin tprocess
-- On NEW reduce production tprocess -> progbegin tprocess
-- On LPAREN reduce production tprocess -> progbegin tprocess
-- On LET reduce production tprocess -> progbegin tprocess
-- On INT reduce production tprocess -> progbegin tprocess
-- On INSERT reduce production tprocess -> progbegin tprocess
-- On IN reduce production tprocess -> progbegin tprocess
-- On IF reduce production tprocess -> progbegin tprocess
-- On IDENT reduce production tprocess -> progbegin tprocess
-- On GET reduce production tprocess -> progbegin tprocess
-- On FOREACH reduce production tprocess -> progbegin tprocess
-- On EVENT reduce production tprocess -> progbegin tprocess
-- On EOF reduce production tprocess -> progbegin tprocess
-- On ELSE reduce production tprocess -> progbegin tprocess
-- On DOT reduce production tprocess -> progbegin tprocess
-- On BARRIER reduce production tprocess -> progbegin tprocess
-- On BAR reduce production tprocess -> progbegin tprocess
** Conflict on BAR

State 513:
tprocess -> tprocess BAR . tprocess [ YIELD RPAREN REPL PHASE OUT NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EOF ELSE DOT BARRIER BAR ]
-- On YIELD shift to state 418
-- On REPL shift to state 419
-- On PHASE shift to state 420
-- On OUT shift to state 423
-- On NEW shift to state 432
-- On LPAREN shift to state 438
-- On LET shift to state 439
-- On INT shift to state 444
-- On INSERT shift to state 445
-- On IN shift to state 451
-- On IF shift to state 458
-- On IDENT shift to state 461
-- On GET shift to state 481
-- On FOREACH shift to state 489
-- On EVENT shift to state 494
-- On BARRIER shift to state 503
-- On tprocess shift to state 514
-- On progbegin shift to state 511
-- On basicpattern shift to state 515

State 514:
tprocess -> tprocess . BAR tprocess [ YIELD RPAREN REPL PHASE OUT NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EOF ELSE DOT BARRIER BAR ]
tprocess -> tprocess BAR tprocess . [ YIELD RPAREN REPL PHASE OUT NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EOF ELSE DOT BARRIER BAR ]
-- On BAR shift to state 513
-- On YIELD reduce production tprocess -> tprocess BAR tprocess
-- On RPAREN reduce production tprocess -> tprocess BAR tprocess
-- On REPL reduce production tprocess -> tprocess BAR tprocess
-- On PHASE reduce production tprocess -> tprocess BAR tprocess
-- On OUT reduce production tprocess -> tprocess BAR tprocess
-- On NEW reduce production tprocess -> tprocess BAR tprocess
-- On LPAREN reduce production tprocess -> tprocess BAR tprocess
-- On LET reduce production tprocess -> tprocess BAR tprocess
-- On INT reduce production tprocess -> tprocess BAR tprocess
-- On INSERT reduce production tprocess -> tprocess BAR tprocess
-- On IN reduce production tprocess -> tprocess BAR tprocess
-- On IF reduce production tprocess -> tprocess BAR tprocess
-- On IDENT reduce production tprocess -> tprocess BAR tprocess
-- On GET reduce production tprocess -> tprocess BAR tprocess
-- On FOREACH reduce production tprocess -> tprocess BAR tprocess
-- On EVENT reduce production tprocess -> tprocess BAR tprocess
-- On EOF reduce production tprocess -> tprocess BAR tprocess
-- On ELSE reduce production tprocess -> tprocess BAR tprocess
-- On DOT reduce production tprocess -> tprocess BAR tprocess
-- On BARRIER reduce production tprocess -> tprocess BAR tprocess

State 515:
tprocess -> basicpattern . LEFTARROW pterm opttprocess [ YIELD RPAREN REPL PHASE OUT NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EOF ELSE DOT BARRIER BAR ]
-- On LEFTARROW shift to state 516

State 516:
tprocess -> basicpattern LEFTARROW . pterm opttprocess [ YIELD RPAREN REPL PHASE OUT NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EOF ELSE DOT BARRIER BAR ]
-- On NOT shift to state 288
-- On NEW shift to state 290
-- On LPAREN shift to state 300
-- On LET shift to state 301
-- On INSERT shift to state 306
-- On IF shift to state 309
-- On IDENT shift to state 310
-- On GET shift to state 314
-- On EVENT shift to state 320
-- On CHOICE shift to state 323
-- On pterm shift to state 517
-- On basicpattern shift to state 332

State 517:
pterm -> pterm . EQUAL pterm [ YIELD WEDGE SEMI RPAREN REPL PHASE OUT OR NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EQUAL EOF ELSE DOT DIFF BARRIER BAR ]
pterm -> pterm . DIFF pterm [ YIELD WEDGE SEMI RPAREN REPL PHASE OUT OR NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EQUAL EOF ELSE DOT DIFF BARRIER BAR ]
pterm -> pterm . OR pterm [ YIELD WEDGE SEMI RPAREN REPL PHASE OUT OR NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EQUAL EOF ELSE DOT DIFF BARRIER BAR ]
pterm -> pterm . WEDGE pterm [ YIELD WEDGE SEMI RPAREN REPL PHASE OUT OR NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EQUAL EOF ELSE DOT DIFF BARRIER BAR ]
tprocess -> basicpattern LEFTARROW pterm . opttprocess [ YIELD RPAREN REPL PHASE OUT NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EOF ELSE DOT BARRIER BAR ]
-- On WEDGE shift to state 326
-- On SEMI shift to state 422
-- On OR shift to state 337
-- On EQUAL shift to state 328
-- On DIFF shift to state 330
-- On opttprocess shift to state 518
-- On YIELD reduce production opttprocess -> 
-- On RPAREN reduce production opttprocess -> 
-- On REPL reduce production opttprocess -> 
-- On PHASE reduce production opttprocess -> 
-- On OUT reduce production opttprocess -> 
-- On NEW reduce production opttprocess -> 
-- On LPAREN reduce production opttprocess -> 
-- On LET reduce production opttprocess -> 
-- On INT reduce production opttprocess -> 
-- On INSERT reduce production opttprocess -> 
-- On IN reduce production opttprocess -> 
-- On IF reduce production opttprocess -> 
-- On IDENT reduce production opttprocess -> 
-- On GET reduce production opttprocess -> 
-- On FOREACH reduce production opttprocess -> 
-- On EVENT reduce production opttprocess -> 
-- On EOF reduce production opttprocess -> 
-- On ELSE reduce production opttprocess -> 
-- On DOT reduce production opttprocess -> 
-- On BARRIER reduce production opttprocess -> 
-- On BAR reduce production opttprocess -> 

State 518:
tprocess -> basicpattern LEFTARROW pterm opttprocess . [ YIELD RPAREN REPL PHASE OUT NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EOF ELSE DOT BARRIER BAR ]
-- On YIELD reduce production tprocess -> basicpattern LEFTARROW pterm opttprocess
-- On RPAREN reduce production tprocess -> basicpattern LEFTARROW pterm opttprocess
-- On REPL reduce production tprocess -> basicpattern LEFTARROW pterm opttprocess
-- On PHASE reduce production tprocess -> basicpattern LEFTARROW pterm opttprocess
-- On OUT reduce production tprocess -> basicpattern LEFTARROW pterm opttprocess
-- On NEW reduce production tprocess -> basicpattern LEFTARROW pterm opttprocess
-- On LPAREN reduce production tprocess -> basicpattern LEFTARROW pterm opttprocess
-- On LET reduce production tprocess -> basicpattern LEFTARROW pterm opttprocess
-- On INT reduce production tprocess -> basicpattern LEFTARROW pterm opttprocess
-- On INSERT reduce production tprocess -> basicpattern LEFTARROW pterm opttprocess
-- On IN reduce production tprocess -> basicpattern LEFTARROW pterm opttprocess
-- On IF reduce production tprocess -> basicpattern LEFTARROW pterm opttprocess
-- On IDENT reduce production tprocess -> basicpattern LEFTARROW pterm opttprocess
-- On GET reduce production tprocess -> basicpattern LEFTARROW pterm opttprocess
-- On FOREACH reduce production tprocess -> basicpattern LEFTARROW pterm opttprocess
-- On EVENT reduce production tprocess -> basicpattern LEFTARROW pterm opttprocess
-- On EOF reduce production tprocess -> basicpattern LEFTARROW pterm opttprocess
-- On ELSE reduce production tprocess -> basicpattern LEFTARROW pterm opttprocess
-- On DOT reduce production tprocess -> basicpattern LEFTARROW pterm opttprocess
-- On BARRIER reduce production tprocess -> basicpattern LEFTARROW pterm opttprocess
-- On BAR reduce production tprocess -> basicpattern LEFTARROW pterm opttprocess

State 519:
optinprocess -> IN tprocess . [ YIELD RPAREN REPL PHASE OUT NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EOF ELSE DOT BARRIER BAR ]
tprocess -> tprocess . BAR tprocess [ YIELD RPAREN REPL PHASE OUT NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EOF ELSE DOT BARRIER BAR ]
-- On BAR shift to state 513
-- On YIELD reduce production optinprocess -> IN tprocess
-- On RPAREN reduce production optinprocess -> IN tprocess
-- On REPL reduce production optinprocess -> IN tprocess
-- On PHASE reduce production optinprocess -> IN tprocess
-- On OUT reduce production optinprocess -> IN tprocess
-- On NEW reduce production optinprocess -> IN tprocess
-- On LPAREN reduce production optinprocess -> IN tprocess
-- On LET reduce production optinprocess -> IN tprocess
-- On INT reduce production optinprocess -> IN tprocess
-- On INSERT reduce production optinprocess -> IN tprocess
-- On IN reduce production optinprocess -> IN tprocess
-- On IF reduce production optinprocess -> IN tprocess
-- On IDENT reduce production optinprocess -> IN tprocess
-- On GET reduce production optinprocess -> IN tprocess
-- On FOREACH reduce production optinprocess -> IN tprocess
-- On EVENT reduce production optinprocess -> IN tprocess
-- On EOF reduce production optinprocess -> IN tprocess
-- On ELSE reduce production optinprocess -> IN tprocess
-- On DOT reduce production optinprocess -> IN tprocess
-- On BARRIER reduce production optinprocess -> IN tprocess
-- On BAR reduce production optinprocess -> IN tprocess
** Conflict on BAR

State 520:
tprocess -> GET IDENT LPAREN tpatternseq RPAREN SUCHTHAT pterm optinprocess . optelseprocess [ YIELD RPAREN REPL PHASE OUT NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EOF ELSE DOT BARRIER BAR ]
-- On ELSE shift to state 521
-- On optelseprocess shift to state 523
-- On YIELD reduce production optelseprocess -> 
-- On RPAREN reduce production optelseprocess -> 
-- On REPL reduce production optelseprocess -> 
-- On PHASE reduce production optelseprocess -> 
-- On OUT reduce production optelseprocess -> 
-- On NEW reduce production optelseprocess -> 
-- On LPAREN reduce production optelseprocess -> 
-- On LET reduce production optelseprocess -> 
-- On INT reduce production optelseprocess -> 
-- On INSERT reduce production optelseprocess -> 
-- On IN reduce production optelseprocess -> 
-- On IF reduce production optelseprocess -> 
-- On IDENT reduce production optelseprocess -> 
-- On GET reduce production optelseprocess -> 
-- On FOREACH reduce production optelseprocess -> 
-- On EVENT reduce production optelseprocess -> 
-- On EOF reduce production optelseprocess -> 
-- On ELSE reduce production optelseprocess -> 
-- On DOT reduce production optelseprocess -> 
-- On BARRIER reduce production optelseprocess -> 
-- On BAR reduce production optelseprocess -> 
** Conflict on ELSE

State 521:
optelseprocess -> ELSE . tprocess [ YIELD RPAREN REPL PHASE OUT NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EOF ELSE DOT BARRIER BAR ]
-- On YIELD shift to state 418
-- On REPL shift to state 419
-- On PHASE shift to state 420
-- On OUT shift to state 423
-- On NEW shift to state 432
-- On LPAREN shift to state 438
-- On LET shift to state 439
-- On INT shift to state 444
-- On INSERT shift to state 445
-- On IN shift to state 451
-- On IF shift to state 458
-- On IDENT shift to state 461
-- On GET shift to state 481
-- On FOREACH shift to state 489
-- On EVENT shift to state 494
-- On BARRIER shift to state 503
-- On tprocess shift to state 522
-- On progbegin shift to state 511
-- On basicpattern shift to state 515

State 522:
optelseprocess -> ELSE tprocess . [ YIELD RPAREN REPL PHASE OUT NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EOF ELSE DOT BARRIER BAR ]
tprocess -> tprocess . BAR tprocess [ YIELD RPAREN REPL PHASE OUT NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EOF ELSE DOT BARRIER BAR ]
-- On BAR shift to state 513
-- On YIELD reduce production optelseprocess -> ELSE tprocess
-- On RPAREN reduce production optelseprocess -> ELSE tprocess
-- On REPL reduce production optelseprocess -> ELSE tprocess
-- On PHASE reduce production optelseprocess -> ELSE tprocess
-- On OUT reduce production optelseprocess -> ELSE tprocess
-- On NEW reduce production optelseprocess -> ELSE tprocess
-- On LPAREN reduce production optelseprocess -> ELSE tprocess
-- On LET reduce production optelseprocess -> ELSE tprocess
-- On INT reduce production optelseprocess -> ELSE tprocess
-- On INSERT reduce production optelseprocess -> ELSE tprocess
-- On IN reduce production optelseprocess -> ELSE tprocess
-- On IF reduce production optelseprocess -> ELSE tprocess
-- On IDENT reduce production optelseprocess -> ELSE tprocess
-- On GET reduce production optelseprocess -> ELSE tprocess
-- On FOREACH reduce production optelseprocess -> ELSE tprocess
-- On EVENT reduce production optelseprocess -> ELSE tprocess
-- On EOF reduce production optelseprocess -> ELSE tprocess
-- On ELSE reduce production optelseprocess -> ELSE tprocess
-- On DOT reduce production optelseprocess -> ELSE tprocess
-- On BARRIER reduce production optelseprocess -> ELSE tprocess
-- On BAR reduce production optelseprocess -> ELSE tprocess
** Conflict on BAR

State 523:
tprocess -> GET IDENT LPAREN tpatternseq RPAREN SUCHTHAT pterm optinprocess optelseprocess . [ YIELD RPAREN REPL PHASE OUT NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EOF ELSE DOT BARRIER BAR ]
-- On YIELD reduce production tprocess -> GET IDENT LPAREN tpatternseq RPAREN SUCHTHAT pterm optinprocess optelseprocess
-- On RPAREN reduce production tprocess -> GET IDENT LPAREN tpatternseq RPAREN SUCHTHAT pterm optinprocess optelseprocess
-- On REPL reduce production tprocess -> GET IDENT LPAREN tpatternseq RPAREN SUCHTHAT pterm optinprocess optelseprocess
-- On PHASE reduce production tprocess -> GET IDENT LPAREN tpatternseq RPAREN SUCHTHAT pterm optinprocess optelseprocess
-- On OUT reduce production tprocess -> GET IDENT LPAREN tpatternseq RPAREN SUCHTHAT pterm optinprocess optelseprocess
-- On NEW reduce production tprocess -> GET IDENT LPAREN tpatternseq RPAREN SUCHTHAT pterm optinprocess optelseprocess
-- On LPAREN reduce production tprocess -> GET IDENT LPAREN tpatternseq RPAREN SUCHTHAT pterm optinprocess optelseprocess
-- On LET reduce production tprocess -> GET IDENT LPAREN tpatternseq RPAREN SUCHTHAT pterm optinprocess optelseprocess
-- On INT reduce production tprocess -> GET IDENT LPAREN tpatternseq RPAREN SUCHTHAT pterm optinprocess optelseprocess
-- On INSERT reduce production tprocess -> GET IDENT LPAREN tpatternseq RPAREN SUCHTHAT pterm optinprocess optelseprocess
-- On IN reduce production tprocess -> GET IDENT LPAREN tpatternseq RPAREN SUCHTHAT pterm optinprocess optelseprocess
-- On IF reduce production tprocess -> GET IDENT LPAREN tpatternseq RPAREN SUCHTHAT pterm optinprocess optelseprocess
-- On IDENT reduce production tprocess -> GET IDENT LPAREN tpatternseq RPAREN SUCHTHAT pterm optinprocess optelseprocess
-- On GET reduce production tprocess -> GET IDENT LPAREN tpatternseq RPAREN SUCHTHAT pterm optinprocess optelseprocess
-- On FOREACH reduce production tprocess -> GET IDENT LPAREN tpatternseq RPAREN SUCHTHAT pterm optinprocess optelseprocess
-- On EVENT reduce production tprocess -> GET IDENT LPAREN tpatternseq RPAREN SUCHTHAT pterm optinprocess optelseprocess
-- On EOF reduce production tprocess -> GET IDENT LPAREN tpatternseq RPAREN SUCHTHAT pterm optinprocess optelseprocess
-- On ELSE reduce production tprocess -> GET IDENT LPAREN tpatternseq RPAREN SUCHTHAT pterm optinprocess optelseprocess
-- On DOT reduce production tprocess -> GET IDENT LPAREN tpatternseq RPAREN SUCHTHAT pterm optinprocess optelseprocess
-- On BARRIER reduce production tprocess -> GET IDENT LPAREN tpatternseq RPAREN SUCHTHAT pterm optinprocess optelseprocess
-- On BAR reduce production tprocess -> GET IDENT LPAREN tpatternseq RPAREN SUCHTHAT pterm optinprocess optelseprocess

State 524:
tprocess -> GET IDENT LPAREN tpatternseq RPAREN optinprocess . optelseprocess [ YIELD RPAREN REPL PHASE OUT NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EOF ELSE DOT BARRIER BAR ]
-- On ELSE shift to state 521
-- On optelseprocess shift to state 525
-- On YIELD reduce production optelseprocess -> 
-- On RPAREN reduce production optelseprocess -> 
-- On REPL reduce production optelseprocess -> 
-- On PHASE reduce production optelseprocess -> 
-- On OUT reduce production optelseprocess -> 
-- On NEW reduce production optelseprocess -> 
-- On LPAREN reduce production optelseprocess -> 
-- On LET reduce production optelseprocess -> 
-- On INT reduce production optelseprocess -> 
-- On INSERT reduce production optelseprocess -> 
-- On IN reduce production optelseprocess -> 
-- On IF reduce production optelseprocess -> 
-- On IDENT reduce production optelseprocess -> 
-- On GET reduce production optelseprocess -> 
-- On FOREACH reduce production optelseprocess -> 
-- On EVENT reduce production optelseprocess -> 
-- On EOF reduce production optelseprocess -> 
-- On ELSE reduce production optelseprocess -> 
-- On DOT reduce production optelseprocess -> 
-- On BARRIER reduce production optelseprocess -> 
-- On BAR reduce production optelseprocess -> 
** Conflict on ELSE

State 525:
tprocess -> GET IDENT LPAREN tpatternseq RPAREN optinprocess optelseprocess . [ YIELD RPAREN REPL PHASE OUT NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EOF ELSE DOT BARRIER BAR ]
-- On YIELD reduce production tprocess -> GET IDENT LPAREN tpatternseq RPAREN optinprocess optelseprocess
-- On RPAREN reduce production tprocess -> GET IDENT LPAREN tpatternseq RPAREN optinprocess optelseprocess
-- On REPL reduce production tprocess -> GET IDENT LPAREN tpatternseq RPAREN optinprocess optelseprocess
-- On PHASE reduce production tprocess -> GET IDENT LPAREN tpatternseq RPAREN optinprocess optelseprocess
-- On OUT reduce production tprocess -> GET IDENT LPAREN tpatternseq RPAREN optinprocess optelseprocess
-- On NEW reduce production tprocess -> GET IDENT LPAREN tpatternseq RPAREN optinprocess optelseprocess
-- On LPAREN reduce production tprocess -> GET IDENT LPAREN tpatternseq RPAREN optinprocess optelseprocess
-- On LET reduce production tprocess -> GET IDENT LPAREN tpatternseq RPAREN optinprocess optelseprocess
-- On INT reduce production tprocess -> GET IDENT LPAREN tpatternseq RPAREN optinprocess optelseprocess
-- On INSERT reduce production tprocess -> GET IDENT LPAREN tpatternseq RPAREN optinprocess optelseprocess
-- On IN reduce production tprocess -> GET IDENT LPAREN tpatternseq RPAREN optinprocess optelseprocess
-- On IF reduce production tprocess -> GET IDENT LPAREN tpatternseq RPAREN optinprocess optelseprocess
-- On IDENT reduce production tprocess -> GET IDENT LPAREN tpatternseq RPAREN optinprocess optelseprocess
-- On GET reduce production tprocess -> GET IDENT LPAREN tpatternseq RPAREN optinprocess optelseprocess
-- On FOREACH reduce production tprocess -> GET IDENT LPAREN tpatternseq RPAREN optinprocess optelseprocess
-- On EVENT reduce production tprocess -> GET IDENT LPAREN tpatternseq RPAREN optinprocess optelseprocess
-- On EOF reduce production tprocess -> GET IDENT LPAREN tpatternseq RPAREN optinprocess optelseprocess
-- On ELSE reduce production tprocess -> GET IDENT LPAREN tpatternseq RPAREN optinprocess optelseprocess
-- On DOT reduce production tprocess -> GET IDENT LPAREN tpatternseq RPAREN optinprocess optelseprocess
-- On BARRIER reduce production tprocess -> GET IDENT LPAREN tpatternseq RPAREN optinprocess optelseprocess
-- On BAR reduce production tprocess -> GET IDENT LPAREN tpatternseq RPAREN optinprocess optelseprocess

State 526:
tprocess -> IF pterm THEN tprocess . optelseprocess [ YIELD RPAREN REPL PHASE OUT NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EOF ELSE DOT BARRIER BAR ]
tprocess -> tprocess . BAR tprocess [ YIELD RPAREN REPL PHASE OUT NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EOF ELSE DOT BARRIER BAR ]
-- On ELSE shift to state 521
-- On BAR shift to state 513
-- On optelseprocess shift to state 527
-- On YIELD reduce production optelseprocess -> 
-- On RPAREN reduce production optelseprocess -> 
-- On REPL reduce production optelseprocess -> 
-- On PHASE reduce production optelseprocess -> 
-- On OUT reduce production optelseprocess -> 
-- On NEW reduce production optelseprocess -> 
-- On LPAREN reduce production optelseprocess -> 
-- On LET reduce production optelseprocess -> 
-- On INT reduce production optelseprocess -> 
-- On INSERT reduce production optelseprocess -> 
-- On IN reduce production optelseprocess -> 
-- On IF reduce production optelseprocess -> 
-- On IDENT reduce production optelseprocess -> 
-- On GET reduce production optelseprocess -> 
-- On FOREACH reduce production optelseprocess -> 
-- On EVENT reduce production optelseprocess -> 
-- On EOF reduce production optelseprocess -> 
-- On ELSE reduce production optelseprocess -> 
-- On DOT reduce production optelseprocess -> 
-- On BARRIER reduce production optelseprocess -> 
-- On BAR reduce production optelseprocess -> 
** Conflict on ELSE BAR

State 527:
tprocess -> IF pterm THEN tprocess optelseprocess . [ YIELD RPAREN REPL PHASE OUT NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EOF ELSE DOT BARRIER BAR ]
-- On YIELD reduce production tprocess -> IF pterm THEN tprocess optelseprocess
-- On RPAREN reduce production tprocess -> IF pterm THEN tprocess optelseprocess
-- On REPL reduce production tprocess -> IF pterm THEN tprocess optelseprocess
-- On PHASE reduce production tprocess -> IF pterm THEN tprocess optelseprocess
-- On OUT reduce production tprocess -> IF pterm THEN tprocess optelseprocess
-- On NEW reduce production tprocess -> IF pterm THEN tprocess optelseprocess
-- On LPAREN reduce production tprocess -> IF pterm THEN tprocess optelseprocess
-- On LET reduce production tprocess -> IF pterm THEN tprocess optelseprocess
-- On INT reduce production tprocess -> IF pterm THEN tprocess optelseprocess
-- On INSERT reduce production tprocess -> IF pterm THEN tprocess optelseprocess
-- On IN reduce production tprocess -> IF pterm THEN tprocess optelseprocess
-- On IF reduce production tprocess -> IF pterm THEN tprocess optelseprocess
-- On IDENT reduce production tprocess -> IF pterm THEN tprocess optelseprocess
-- On GET reduce production tprocess -> IF pterm THEN tprocess optelseprocess
-- On FOREACH reduce production tprocess -> IF pterm THEN tprocess optelseprocess
-- On EVENT reduce production tprocess -> IF pterm THEN tprocess optelseprocess
-- On EOF reduce production tprocess -> IF pterm THEN tprocess optelseprocess
-- On ELSE reduce production tprocess -> IF pterm THEN tprocess optelseprocess
-- On DOT reduce production tprocess -> IF pterm THEN tprocess optelseprocess
-- On BARRIER reduce production tprocess -> IF pterm THEN tprocess optelseprocess
-- On BAR reduce production tprocess -> IF pterm THEN tprocess optelseprocess

State 528:
tprocess -> LET tpattern EQUAL pterm IN tprocess . optelseprocess [ YIELD RPAREN REPL PHASE OUT NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EOF ELSE DOT BARRIER BAR ]
tprocess -> tprocess . BAR tprocess [ YIELD RPAREN REPL PHASE OUT NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EOF ELSE DOT BARRIER BAR ]
-- On ELSE shift to state 521
-- On BAR shift to state 513
-- On optelseprocess shift to state 529
-- On YIELD reduce production optelseprocess -> 
-- On RPAREN reduce production optelseprocess -> 
-- On REPL reduce production optelseprocess -> 
-- On PHASE reduce production optelseprocess -> 
-- On OUT reduce production optelseprocess -> 
-- On NEW reduce production optelseprocess -> 
-- On LPAREN reduce production optelseprocess -> 
-- On LET reduce production optelseprocess -> 
-- On INT reduce production optelseprocess -> 
-- On INSERT reduce production optelseprocess -> 
-- On IN reduce production optelseprocess -> 
-- On IF reduce production optelseprocess -> 
-- On IDENT reduce production optelseprocess -> 
-- On GET reduce production optelseprocess -> 
-- On FOREACH reduce production optelseprocess -> 
-- On EVENT reduce production optelseprocess -> 
-- On EOF reduce production optelseprocess -> 
-- On ELSE reduce production optelseprocess -> 
-- On DOT reduce production optelseprocess -> 
-- On BARRIER reduce production optelseprocess -> 
-- On BAR reduce production optelseprocess -> 
** Conflict on ELSE BAR

State 529:
tprocess -> LET tpattern EQUAL pterm IN tprocess optelseprocess . [ YIELD RPAREN REPL PHASE OUT NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EOF ELSE DOT BARRIER BAR ]
-- On YIELD reduce production tprocess -> LET tpattern EQUAL pterm IN tprocess optelseprocess
-- On RPAREN reduce production tprocess -> LET tpattern EQUAL pterm IN tprocess optelseprocess
-- On REPL reduce production tprocess -> LET tpattern EQUAL pterm IN tprocess optelseprocess
-- On PHASE reduce production tprocess -> LET tpattern EQUAL pterm IN tprocess optelseprocess
-- On OUT reduce production tprocess -> LET tpattern EQUAL pterm IN tprocess optelseprocess
-- On NEW reduce production tprocess -> LET tpattern EQUAL pterm IN tprocess optelseprocess
-- On LPAREN reduce production tprocess -> LET tpattern EQUAL pterm IN tprocess optelseprocess
-- On LET reduce production tprocess -> LET tpattern EQUAL pterm IN tprocess optelseprocess
-- On INT reduce production tprocess -> LET tpattern EQUAL pterm IN tprocess optelseprocess
-- On INSERT reduce production tprocess -> LET tpattern EQUAL pterm IN tprocess optelseprocess
-- On IN reduce production tprocess -> LET tpattern EQUAL pterm IN tprocess optelseprocess
-- On IF reduce production tprocess -> LET tpattern EQUAL pterm IN tprocess optelseprocess
-- On IDENT reduce production tprocess -> LET tpattern EQUAL pterm IN tprocess optelseprocess
-- On GET reduce production tprocess -> LET tpattern EQUAL pterm IN tprocess optelseprocess
-- On FOREACH reduce production tprocess -> LET tpattern EQUAL pterm IN tprocess optelseprocess
-- On EVENT reduce production tprocess -> LET tpattern EQUAL pterm IN tprocess optelseprocess
-- On EOF reduce production tprocess -> LET tpattern EQUAL pterm IN tprocess optelseprocess
-- On ELSE reduce production tprocess -> LET tpattern EQUAL pterm IN tprocess optelseprocess
-- On DOT reduce production tprocess -> LET tpattern EQUAL pterm IN tprocess optelseprocess
-- On BARRIER reduce production tprocess -> LET tpattern EQUAL pterm IN tprocess optelseprocess
-- On BAR reduce production tprocess -> LET tpattern EQUAL pterm IN tprocess optelseprocess

State 530:
tprocess -> LET nevartype . SUCHTHAT pterm [ YIELD RPAREN REPL PHASE OUT NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EOF ELSE DOT BARRIER BAR ]
tprocess -> LET nevartype . SUCHTHAT pterm IN tprocess optelseprocess [ YIELD RPAREN REPL PHASE OUT NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EOF ELSE DOT BARRIER BAR ]
-- On SUCHTHAT shift to state 531

State 531:
tprocess -> LET nevartype SUCHTHAT . pterm [ YIELD RPAREN REPL PHASE OUT NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EOF ELSE DOT BARRIER BAR ]
tprocess -> LET nevartype SUCHTHAT . pterm IN tprocess optelseprocess [ YIELD RPAREN REPL PHASE OUT NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EOF ELSE DOT BARRIER BAR ]
-- On NOT shift to state 288
-- On NEW shift to state 290
-- On LPAREN shift to state 300
-- On LET shift to state 301
-- On INSERT shift to state 306
-- On IF shift to state 309
-- On IDENT shift to state 310
-- On GET shift to state 314
-- On EVENT shift to state 320
-- On CHOICE shift to state 323
-- On pterm shift to state 532
-- On basicpattern shift to state 332

State 532:
pterm -> pterm . EQUAL pterm [ YIELD WEDGE RPAREN REPL PHASE OUT OR NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EQUAL EOF ELSE DOT DIFF BARRIER BAR ]
pterm -> pterm . DIFF pterm [ YIELD WEDGE RPAREN REPL PHASE OUT OR NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EQUAL EOF ELSE DOT DIFF BARRIER BAR ]
pterm -> pterm . OR pterm [ YIELD WEDGE RPAREN REPL PHASE OUT OR NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EQUAL EOF ELSE DOT DIFF BARRIER BAR ]
pterm -> pterm . WEDGE pterm [ YIELD WEDGE RPAREN REPL PHASE OUT OR NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EQUAL EOF ELSE DOT DIFF BARRIER BAR ]
tprocess -> LET nevartype SUCHTHAT pterm . [ YIELD RPAREN REPL PHASE OUT NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EOF ELSE DOT BARRIER BAR ]
tprocess -> LET nevartype SUCHTHAT pterm . IN tprocess optelseprocess [ YIELD RPAREN REPL PHASE OUT NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EOF ELSE DOT BARRIER BAR ]
-- On WEDGE shift to state 326
-- On OR shift to state 337
-- On IN shift to state 533
-- On EQUAL shift to state 328
-- On DIFF shift to state 330
-- On YIELD reduce production tprocess -> LET nevartype SUCHTHAT pterm
-- On RPAREN reduce production tprocess -> LET nevartype SUCHTHAT pterm
-- On REPL reduce production tprocess -> LET nevartype SUCHTHAT pterm
-- On PHASE reduce production tprocess -> LET nevartype SUCHTHAT pterm
-- On OUT reduce production tprocess -> LET nevartype SUCHTHAT pterm
-- On NEW reduce production tprocess -> LET nevartype SUCHTHAT pterm
-- On LPAREN reduce production tprocess -> LET nevartype SUCHTHAT pterm
-- On LET reduce production tprocess -> LET nevartype SUCHTHAT pterm
-- On INT reduce production tprocess -> LET nevartype SUCHTHAT pterm
-- On INSERT reduce production tprocess -> LET nevartype SUCHTHAT pterm
-- On IN reduce production tprocess -> LET nevartype SUCHTHAT pterm
-- On IF reduce production tprocess -> LET nevartype SUCHTHAT pterm
-- On IDENT reduce production tprocess -> LET nevartype SUCHTHAT pterm
-- On GET reduce production tprocess -> LET nevartype SUCHTHAT pterm
-- On FOREACH reduce production tprocess -> LET nevartype SUCHTHAT pterm
-- On EVENT reduce production tprocess -> LET nevartype SUCHTHAT pterm
-- On EOF reduce production tprocess -> LET nevartype SUCHTHAT pterm
-- On ELSE reduce production tprocess -> LET nevartype SUCHTHAT pterm
-- On DOT reduce production tprocess -> LET nevartype SUCHTHAT pterm
-- On BARRIER reduce production tprocess -> LET nevartype SUCHTHAT pterm
-- On BAR reduce production tprocess -> LET nevartype SUCHTHAT pterm
** Conflict on IN

State 533:
tprocess -> LET nevartype SUCHTHAT pterm IN . tprocess optelseprocess [ YIELD RPAREN REPL PHASE OUT NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EOF ELSE DOT BARRIER BAR ]
-- On YIELD shift to state 418
-- On REPL shift to state 419
-- On PHASE shift to state 420
-- On OUT shift to state 423
-- On NEW shift to state 432
-- On LPAREN shift to state 438
-- On LET shift to state 439
-- On INT shift to state 444
-- On INSERT shift to state 445
-- On IN shift to state 451
-- On IF shift to state 458
-- On IDENT shift to state 461
-- On GET shift to state 481
-- On FOREACH shift to state 489
-- On EVENT shift to state 494
-- On BARRIER shift to state 503
-- On tprocess shift to state 534
-- On progbegin shift to state 511
-- On basicpattern shift to state 515

State 534:
tprocess -> LET nevartype SUCHTHAT pterm IN tprocess . optelseprocess [ YIELD RPAREN REPL PHASE OUT NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EOF ELSE DOT BARRIER BAR ]
tprocess -> tprocess . BAR tprocess [ YIELD RPAREN REPL PHASE OUT NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EOF ELSE DOT BARRIER BAR ]
-- On ELSE shift to state 521
-- On BAR shift to state 513
-- On optelseprocess shift to state 535
-- On YIELD reduce production optelseprocess -> 
-- On RPAREN reduce production optelseprocess -> 
-- On REPL reduce production optelseprocess -> 
-- On PHASE reduce production optelseprocess -> 
-- On OUT reduce production optelseprocess -> 
-- On NEW reduce production optelseprocess -> 
-- On LPAREN reduce production optelseprocess -> 
-- On LET reduce production optelseprocess -> 
-- On INT reduce production optelseprocess -> 
-- On INSERT reduce production optelseprocess -> 
-- On IN reduce production optelseprocess -> 
-- On IF reduce production optelseprocess -> 
-- On IDENT reduce production optelseprocess -> 
-- On GET reduce production optelseprocess -> 
-- On FOREACH reduce production optelseprocess -> 
-- On EVENT reduce production optelseprocess -> 
-- On EOF reduce production optelseprocess -> 
-- On ELSE reduce production optelseprocess -> 
-- On DOT reduce production optelseprocess -> 
-- On BARRIER reduce production optelseprocess -> 
-- On BAR reduce production optelseprocess -> 
** Conflict on ELSE BAR

State 535:
tprocess -> LET nevartype SUCHTHAT pterm IN tprocess optelseprocess . [ YIELD RPAREN REPL PHASE OUT NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EOF ELSE DOT BARRIER BAR ]
-- On YIELD reduce production tprocess -> LET nevartype SUCHTHAT pterm IN tprocess optelseprocess
-- On RPAREN reduce production tprocess -> LET nevartype SUCHTHAT pterm IN tprocess optelseprocess
-- On REPL reduce production tprocess -> LET nevartype SUCHTHAT pterm IN tprocess optelseprocess
-- On PHASE reduce production tprocess -> LET nevartype SUCHTHAT pterm IN tprocess optelseprocess
-- On OUT reduce production tprocess -> LET nevartype SUCHTHAT pterm IN tprocess optelseprocess
-- On NEW reduce production tprocess -> LET nevartype SUCHTHAT pterm IN tprocess optelseprocess
-- On LPAREN reduce production tprocess -> LET nevartype SUCHTHAT pterm IN tprocess optelseprocess
-- On LET reduce production tprocess -> LET nevartype SUCHTHAT pterm IN tprocess optelseprocess
-- On INT reduce production tprocess -> LET nevartype SUCHTHAT pterm IN tprocess optelseprocess
-- On INSERT reduce production tprocess -> LET nevartype SUCHTHAT pterm IN tprocess optelseprocess
-- On IN reduce production tprocess -> LET nevartype SUCHTHAT pterm IN tprocess optelseprocess
-- On IF reduce production tprocess -> LET nevartype SUCHTHAT pterm IN tprocess optelseprocess
-- On IDENT reduce production tprocess -> LET nevartype SUCHTHAT pterm IN tprocess optelseprocess
-- On GET reduce production tprocess -> LET nevartype SUCHTHAT pterm IN tprocess optelseprocess
-- On FOREACH reduce production tprocess -> LET nevartype SUCHTHAT pterm IN tprocess optelseprocess
-- On EVENT reduce production tprocess -> LET nevartype SUCHTHAT pterm IN tprocess optelseprocess
-- On EOF reduce production tprocess -> LET nevartype SUCHTHAT pterm IN tprocess optelseprocess
-- On ELSE reduce production tprocess -> LET nevartype SUCHTHAT pterm IN tprocess optelseprocess
-- On DOT reduce production tprocess -> LET nevartype SUCHTHAT pterm IN tprocess optelseprocess
-- On BARRIER reduce production tprocess -> LET nevartype SUCHTHAT pterm IN tprocess optelseprocess
-- On BAR reduce production tprocess -> LET nevartype SUCHTHAT pterm IN tprocess optelseprocess

State 536:
tprocess -> LPAREN tprocess . RPAREN [ YIELD RPAREN REPL PHASE OUT NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EOF ELSE DOT BARRIER BAR ]
tprocess -> tprocess . BAR tprocess [ RPAREN BAR ]
-- On RPAREN shift to state 537
-- On BAR shift to state 513

State 537:
tprocess -> LPAREN tprocess RPAREN . [ YIELD RPAREN REPL PHASE OUT NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EOF ELSE DOT BARRIER BAR ]
-- On YIELD reduce production tprocess -> LPAREN tprocess RPAREN
-- On RPAREN reduce production tprocess -> LPAREN tprocess RPAREN
-- On REPL reduce production tprocess -> LPAREN tprocess RPAREN
-- On PHASE reduce production tprocess -> LPAREN tprocess RPAREN
-- On OUT reduce production tprocess -> LPAREN tprocess RPAREN
-- On NEW reduce production tprocess -> LPAREN tprocess RPAREN
-- On LPAREN reduce production tprocess -> LPAREN tprocess RPAREN
-- On LET reduce production tprocess -> LPAREN tprocess RPAREN
-- On INT reduce production tprocess -> LPAREN tprocess RPAREN
-- On INSERT reduce production tprocess -> LPAREN tprocess RPAREN
-- On IN reduce production tprocess -> LPAREN tprocess RPAREN
-- On IF reduce production tprocess -> LPAREN tprocess RPAREN
-- On IDENT reduce production tprocess -> LPAREN tprocess RPAREN
-- On GET reduce production tprocess -> LPAREN tprocess RPAREN
-- On FOREACH reduce production tprocess -> LPAREN tprocess RPAREN
-- On EVENT reduce production tprocess -> LPAREN tprocess RPAREN
-- On EOF reduce production tprocess -> LPAREN tprocess RPAREN
-- On ELSE reduce production tprocess -> LPAREN tprocess RPAREN
-- On DOT reduce production tprocess -> LPAREN tprocess RPAREN
-- On BARRIER reduce production tprocess -> LPAREN tprocess RPAREN
-- On BAR reduce production tprocess -> LPAREN tprocess RPAREN

State 538:
opttprocess -> SEMI tprocess . [ YIELD RPAREN REPL PHASE OUT NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EOF ELSE DOT BARRIER BAR ]
tprocess -> tprocess . BAR tprocess [ YIELD RPAREN REPL PHASE OUT NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EOF ELSE DOT BARRIER BAR ]
-- On BAR shift to state 513
-- On YIELD reduce production opttprocess -> SEMI tprocess
-- On RPAREN reduce production opttprocess -> SEMI tprocess
-- On REPL reduce production opttprocess -> SEMI tprocess
-- On PHASE reduce production opttprocess -> SEMI tprocess
-- On OUT reduce production opttprocess -> SEMI tprocess
-- On NEW reduce production opttprocess -> SEMI tprocess
-- On LPAREN reduce production opttprocess -> SEMI tprocess
-- On LET reduce production opttprocess -> SEMI tprocess
-- On INT reduce production opttprocess -> SEMI tprocess
-- On INSERT reduce production opttprocess -> SEMI tprocess
-- On IN reduce production opttprocess -> SEMI tprocess
-- On IF reduce production opttprocess -> SEMI tprocess
-- On IDENT reduce production opttprocess -> SEMI tprocess
-- On GET reduce production opttprocess -> SEMI tprocess
-- On FOREACH reduce production opttprocess -> SEMI tprocess
-- On EVENT reduce production opttprocess -> SEMI tprocess
-- On EOF reduce production opttprocess -> SEMI tprocess
-- On ELSE reduce production opttprocess -> SEMI tprocess
-- On DOT reduce production opttprocess -> SEMI tprocess
-- On BARRIER reduce production opttprocess -> SEMI tprocess
-- On BAR reduce production opttprocess -> SEMI tprocess
** Conflict on BAR

State 539:
tprocess -> PHASE INT opttprocess . [ YIELD RPAREN REPL PHASE OUT NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EOF ELSE DOT BARRIER BAR ]
-- On YIELD reduce production tprocess -> PHASE INT opttprocess
-- On RPAREN reduce production tprocess -> PHASE INT opttprocess
-- On REPL reduce production tprocess -> PHASE INT opttprocess
-- On PHASE reduce production tprocess -> PHASE INT opttprocess
-- On OUT reduce production tprocess -> PHASE INT opttprocess
-- On NEW reduce production tprocess -> PHASE INT opttprocess
-- On LPAREN reduce production tprocess -> PHASE INT opttprocess
-- On LET reduce production tprocess -> PHASE INT opttprocess
-- On INT reduce production tprocess -> PHASE INT opttprocess
-- On INSERT reduce production tprocess -> PHASE INT opttprocess
-- On IN reduce production tprocess -> PHASE INT opttprocess
-- On IF reduce production tprocess -> PHASE INT opttprocess
-- On IDENT reduce production tprocess -> PHASE INT opttprocess
-- On GET reduce production tprocess -> PHASE INT opttprocess
-- On FOREACH reduce production tprocess -> PHASE INT opttprocess
-- On EVENT reduce production tprocess -> PHASE INT opttprocess
-- On EOF reduce production tprocess -> PHASE INT opttprocess
-- On ELSE reduce production tprocess -> PHASE INT opttprocess
-- On DOT reduce production tprocess -> PHASE INT opttprocess
-- On BARRIER reduce production tprocess -> PHASE INT opttprocess
-- On BAR reduce production tprocess -> PHASE INT opttprocess

State 540:
basicpattern -> IDENT . [ LEFTARROW ]
basicpattern -> IDENT . COLON typeid [ LEFTARROW ]
progbegin -> IDENT . programoptions LBRACE [ YIELD REPL PHASE OUT NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT BARRIER ]
tprocess -> IDENT . [ YIELD RPAREN REPL PHASE OUT NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EOF ELSE DOT BARRIER BAR ]
tprocess -> IDENT . LPAREN ptermseq RPAREN [ YIELD RPAREN REPL PHASE OUT NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EOF ELSE DOT BARRIER BAR ]
tprocess -> REPL IDENT . LEQ IDENT tprocess [ YIELD RPAREN REPL PHASE OUT NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EOF ELSE DOT BARRIER BAR ]
tprocess -> IDENT . RANDOM typeid opttprocess [ YIELD RPAREN REPL PHASE OUT NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EOF ELSE DOT BARRIER BAR ]
-- On RANDOM shift to state 462
-- On LPAREN shift to state 465
-- On LEQ shift to state 541
-- On LBRACKET shift to state 468
-- On COLON shift to state 372
-- On programoptions shift to state 479
-- On YIELD reduce production tprocess -> IDENT
-- On RPAREN reduce production tprocess -> IDENT
-- On REPL reduce production tprocess -> IDENT
-- On PHASE reduce production tprocess -> IDENT
-- On OUT reduce production tprocess -> IDENT
-- On NEW reduce production tprocess -> IDENT
-- On LPAREN reduce production tprocess -> IDENT
-- On LET reduce production tprocess -> IDENT
-- On LEFTARROW reduce production basicpattern -> IDENT
-- On LBRACE reduce production programoptions -> 
-- On INT reduce production tprocess -> IDENT
-- On INSERT reduce production tprocess -> IDENT
-- On IN reduce production tprocess -> IDENT
-- On IF reduce production tprocess -> IDENT
-- On IDENT reduce production tprocess -> IDENT
-- On GET reduce production tprocess -> IDENT
-- On FOREACH reduce production tprocess -> IDENT
-- On EVENT reduce production tprocess -> IDENT
-- On EOF reduce production tprocess -> IDENT
-- On ELSE reduce production tprocess -> IDENT
-- On DOT reduce production tprocess -> IDENT
-- On BARRIER reduce production tprocess -> IDENT
-- On BAR reduce production tprocess -> IDENT
** Conflict on LPAREN

State 541:
tprocess -> REPL IDENT LEQ . IDENT tprocess [ YIELD RPAREN REPL PHASE OUT NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EOF ELSE DOT BARRIER BAR ]
-- On IDENT shift to state 542

State 542:
tprocess -> REPL IDENT LEQ IDENT . tprocess [ YIELD RPAREN REPL PHASE OUT NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EOF ELSE DOT BARRIER BAR ]
-- On YIELD shift to state 418
-- On REPL shift to state 419
-- On PHASE shift to state 420
-- On OUT shift to state 423
-- On NEW shift to state 432
-- On LPAREN shift to state 438
-- On LET shift to state 439
-- On INT shift to state 444
-- On INSERT shift to state 445
-- On IN shift to state 451
-- On IF shift to state 458
-- On IDENT shift to state 461
-- On GET shift to state 481
-- On FOREACH shift to state 489
-- On EVENT shift to state 494
-- On BARRIER shift to state 503
-- On tprocess shift to state 543
-- On progbegin shift to state 511
-- On basicpattern shift to state 515

State 543:
tprocess -> REPL IDENT LEQ IDENT tprocess . [ YIELD RPAREN REPL PHASE OUT NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EOF ELSE DOT BARRIER BAR ]
tprocess -> tprocess . BAR tprocess [ YIELD RPAREN REPL PHASE OUT NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EOF ELSE DOT BARRIER BAR ]
-- On YIELD reduce production tprocess -> REPL IDENT LEQ IDENT tprocess
-- On RPAREN reduce production tprocess -> REPL IDENT LEQ IDENT tprocess
-- On REPL reduce production tprocess -> REPL IDENT LEQ IDENT tprocess
-- On PHASE reduce production tprocess -> REPL IDENT LEQ IDENT tprocess
-- On OUT reduce production tprocess -> REPL IDENT LEQ IDENT tprocess
-- On NEW reduce production tprocess -> REPL IDENT LEQ IDENT tprocess
-- On LPAREN reduce production tprocess -> REPL IDENT LEQ IDENT tprocess
-- On LET reduce production tprocess -> REPL IDENT LEQ IDENT tprocess
-- On INT reduce production tprocess -> REPL IDENT LEQ IDENT tprocess
-- On INSERT reduce production tprocess -> REPL IDENT LEQ IDENT tprocess
-- On IN reduce production tprocess -> REPL IDENT LEQ IDENT tprocess
-- On IF reduce production tprocess -> REPL IDENT LEQ IDENT tprocess
-- On IDENT reduce production tprocess -> REPL IDENT LEQ IDENT tprocess
-- On GET reduce production tprocess -> REPL IDENT LEQ IDENT tprocess
-- On FOREACH reduce production tprocess -> REPL IDENT LEQ IDENT tprocess
-- On EVENT reduce production tprocess -> REPL IDENT LEQ IDENT tprocess
-- On EOF reduce production tprocess -> REPL IDENT LEQ IDENT tprocess
-- On ELSE reduce production tprocess -> REPL IDENT LEQ IDENT tprocess
-- On DOT reduce production tprocess -> REPL IDENT LEQ IDENT tprocess
-- On BARRIER reduce production tprocess -> REPL IDENT LEQ IDENT tprocess
-- On BAR reduce production tprocess -> REPL IDENT LEQ IDENT tprocess

State 544:
tprocess -> REPL tprocess . [ YIELD RPAREN REPL PHASE OUT NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EOF ELSE DOT BARRIER BAR ]
tprocess -> tprocess . BAR tprocess [ YIELD RPAREN REPL PHASE OUT NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT EOF ELSE DOT BARRIER BAR ]
-- On YIELD reduce production tprocess -> REPL tprocess
-- On RPAREN reduce production tprocess -> REPL tprocess
-- On REPL reduce production tprocess -> REPL tprocess
-- On PHASE reduce production tprocess -> REPL tprocess
-- On OUT reduce production tprocess -> REPL tprocess
-- On NEW reduce production tprocess -> REPL tprocess
-- On LPAREN reduce production tprocess -> REPL tprocess
-- On LET reduce production tprocess -> REPL tprocess
-- On INT reduce production tprocess -> REPL tprocess
-- On INSERT reduce production tprocess -> REPL tprocess
-- On IN reduce production tprocess -> REPL tprocess
-- On IF reduce production tprocess -> REPL tprocess
-- On IDENT reduce production tprocess -> REPL tprocess
-- On GET reduce production tprocess -> REPL tprocess
-- On FOREACH reduce production tprocess -> REPL tprocess
-- On EVENT reduce production tprocess -> REPL tprocess
-- On EOF reduce production tprocess -> REPL tprocess
-- On ELSE reduce production tprocess -> REPL tprocess
-- On DOT reduce production tprocess -> REPL tprocess
-- On BARRIER reduce production tprocess -> REPL tprocess
-- On BAR reduce production tprocess -> REPL tprocess

State 545:
lib -> LET IDENT LPAREN mayfailvartypeseq RPAREN EQUAL tprocess . DOT lib [ RBRACE PROCESS EQUIVALENCE ]
tprocess -> tprocess . BAR tprocess [ DOT BAR ]
-- On DOT shift to state 546
-- On BAR shift to state 513

State 546:
lib -> LET IDENT LPAREN mayfailvartypeseq RPAREN EQUAL tprocess DOT . lib [ RBRACE PROCESS EQUIVALENCE ]
-- On WEAKSECRET shift to state 1
-- On TYPE shift to state 4
-- On TABLE shift to state 14
-- On SET shift to state 22
-- On REDUCTION shift to state 27
-- On QUERY shift to state 39
-- On PROOF shift to state 126
-- On PROBA shift to state 146
-- On PREDICATE shift to state 149
-- On PARAM shift to state 156
-- On NOUNIF shift to state 160
-- On NOT shift to state 229
-- On NONINTERF shift to state 234
-- On LETFUN shift to state 276
-- On LET shift to state 412
-- On IMPLEMENTATION shift to state 547
-- On FUN shift to state 594
-- On FREE shift to state 611
-- On EXPAND shift to state 617
-- On EVENT shift to state 623
-- On EQUATION shift to state 629
-- On ELIMTRUE shift to state 637
-- On DEFINE shift to state 641
-- On CONST shift to state 647
-- On CLAUSES shift to state 653
-- On CHANNEL shift to state 655
-- On lib shift to state 711
-- On RBRACE reduce production lib -> 
-- On PROCESS reduce production lib -> 
-- On EQUIVALENCE reduce production lib -> 

State 547:
lib -> IMPLEMENTATION . impllist DOT lib [ RBRACE PROCESS EQUIVALENCE ]
-- On TYPE shift to state 548
-- On TABLE shift to state 570
-- On FUN shift to state 574
-- On CONST shift to state 588
-- On impllist shift to state 592
-- On impl shift to state 708

State 548:
impl -> TYPE . IDENT EQUAL cvtypeid typeoptions [ SEMI DOT ]
-- On IDENT shift to state 549

State 549:
impl -> TYPE IDENT . EQUAL cvtypeid typeoptions [ SEMI DOT ]
-- On EQUAL shift to state 550

State 550:
impl -> TYPE IDENT EQUAL . cvtypeid typeoptions [ SEMI DOT ]
-- On STRING shift to state 551
-- On INT shift to state 552
-- On cvtypeid shift to state 553

State 551:
cvtypeid -> STRING . [ SEMI LBRACKET DOT ]
-- On SEMI reduce production cvtypeid -> STRING
-- On LBRACKET reduce production cvtypeid -> STRING
-- On DOT reduce production cvtypeid -> STRING

State 552:
cvtypeid -> INT . [ SEMI LBRACKET DOT ]
-- On SEMI reduce production cvtypeid -> INT
-- On LBRACKET reduce production cvtypeid -> INT
-- On DOT reduce production cvtypeid -> INT

State 553:
impl -> TYPE IDENT EQUAL cvtypeid . typeoptions [ SEMI DOT ]
-- On LBRACKET shift to state 554
-- On typeoptions shift to state 569
-- On SEMI reduce production typeoptions -> 
-- On DOT reduce production typeoptions -> 

State 554:
typeoptions -> LBRACKET . typeoptlist RBRACKET [ SEMI DOT ]
-- On PREDICATE shift to state 555
-- On IDENT shift to state 561
-- On typeoptlist shift to state 564
-- On typeopt shift to state 566

State 555:
typeopt -> PREDICATE . EQUAL stringlistne [ SEMI RBRACKET ]
-- On EQUAL shift to state 556

State 556:
typeopt -> PREDICATE EQUAL . stringlistne [ SEMI RBRACKET ]
-- On STRING shift to state 557
-- On stringlistne shift to state 560

State 557:
stringlistne -> STRING . [ SEMI RBRACKET ]
stringlistne -> STRING . COMMA stringlistne [ SEMI RBRACKET ]
-- On COMMA shift to state 558
-- On SEMI reduce production stringlistne -> STRING
-- On RBRACKET reduce production stringlistne -> STRING

State 558:
stringlistne -> STRING COMMA . stringlistne [ SEMI RBRACKET ]
-- On STRING shift to state 557
-- On stringlistne shift to state 559

State 559:
stringlistne -> STRING COMMA stringlistne . [ SEMI RBRACKET ]
-- On SEMI reduce production stringlistne -> STRING COMMA stringlistne
-- On RBRACKET reduce production stringlistne -> STRING COMMA stringlistne

State 560:
typeopt -> PREDICATE EQUAL stringlistne . [ SEMI RBRACKET ]
-- On SEMI reduce production typeopt -> PREDICATE EQUAL stringlistne
-- On RBRACKET reduce production typeopt -> PREDICATE EQUAL stringlistne

State 561:
typeopt -> IDENT . EQUAL stringlistne [ SEMI RBRACKET ]
-- On EQUAL shift to state 562

State 562:
typeopt -> IDENT EQUAL . stringlistne [ SEMI RBRACKET ]
-- On STRING shift to state 557
-- On stringlistne shift to state 563

State 563:
typeopt -> IDENT EQUAL stringlistne . [ SEMI RBRACKET ]
-- On SEMI reduce production typeopt -> IDENT EQUAL stringlistne
-- On RBRACKET reduce production typeopt -> IDENT EQUAL stringlistne

State 564:
typeoptions -> LBRACKET typeoptlist . RBRACKET [ SEMI DOT ]
-- On RBRACKET shift to state 565

State 565:
typeoptions -> LBRACKET typeoptlist RBRACKET . [ SEMI DOT ]
-- On SEMI reduce production typeoptions -> LBRACKET typeoptlist RBRACKET
-- On DOT reduce production typeoptions -> LBRACKET typeoptlist RBRACKET

State 566:
typeoptlist -> typeopt . [ RBRACKET ]
typeoptlist -> typeopt . SEMI typeoptlist [ RBRACKET ]
-- On SEMI shift to state 567
-- On RBRACKET reduce production typeoptlist -> typeopt

State 567:
typeoptlist -> typeopt SEMI . typeoptlist [ RBRACKET ]
-- On PREDICATE shift to state 555
-- On IDENT shift to state 561
-- On typeoptlist shift to state 568
-- On typeopt shift to state 566

State 568:
typeoptlist -> typeopt SEMI typeoptlist . [ RBRACKET ]
-- On RBRACKET reduce production typeoptlist -> typeopt SEMI typeoptlist

State 569:
impl -> TYPE IDENT EQUAL cvtypeid typeoptions . [ SEMI DOT ]
-- On SEMI reduce production impl -> TYPE IDENT EQUAL cvtypeid typeoptions
-- On DOT reduce production impl -> TYPE IDENT EQUAL cvtypeid typeoptions

State 570:
impl -> TABLE . IDENT EQUAL STRING [ SEMI DOT ]
-- On IDENT shift to state 571

State 571:
impl -> TABLE IDENT . EQUAL STRING [ SEMI DOT ]
-- On EQUAL shift to state 572

State 572:
impl -> TABLE IDENT EQUAL . STRING [ SEMI DOT ]
-- On STRING shift to state 573

State 573:
impl -> TABLE IDENT EQUAL STRING . [ SEMI DOT ]
-- On SEMI reduce production impl -> TABLE IDENT EQUAL STRING
-- On DOT reduce production impl -> TABLE IDENT EQUAL STRING

State 574:
impl -> FUN . IDENT EQUAL STRING functionoptions [ SEMI DOT ]
-- On IDENT shift to state 575

State 575:
impl -> FUN IDENT . EQUAL STRING functionoptions [ SEMI DOT ]
-- On EQUAL shift to state 576

State 576:
impl -> FUN IDENT EQUAL . STRING functionoptions [ SEMI DOT ]
-- On STRING shift to state 577

State 577:
impl -> FUN IDENT EQUAL STRING . functionoptions [ SEMI DOT ]
-- On LBRACKET shift to state 578
-- On functionoptions shift to state 587
-- On SEMI reduce production functionoptions -> 
-- On DOT reduce production functionoptions -> 

State 578:
functionoptions -> LBRACKET . funoptlist RBRACKET [ SEMI DOT ]
-- On IDENT shift to state 579
-- On funoptlist shift to state 582
-- On funopt shift to state 584

State 579:
funopt -> IDENT . EQUAL STRING [ SEMI RBRACKET ]
-- On EQUAL shift to state 580

State 580:
funopt -> IDENT EQUAL . STRING [ SEMI RBRACKET ]
-- On STRING shift to state 581

State 581:
funopt -> IDENT EQUAL STRING . [ SEMI RBRACKET ]
-- On SEMI reduce production funopt -> IDENT EQUAL STRING
-- On RBRACKET reduce production funopt -> IDENT EQUAL STRING

State 582:
functionoptions -> LBRACKET funoptlist . RBRACKET [ SEMI DOT ]
-- On RBRACKET shift to state 583

State 583:
functionoptions -> LBRACKET funoptlist RBRACKET . [ SEMI DOT ]
-- On SEMI reduce production functionoptions -> LBRACKET funoptlist RBRACKET
-- On DOT reduce production functionoptions -> LBRACKET funoptlist RBRACKET

State 584:
funoptlist -> funopt . [ RBRACKET ]
funoptlist -> funopt . SEMI funoptlist [ RBRACKET ]
-- On SEMI shift to state 585
-- On RBRACKET reduce production funoptlist -> funopt

State 585:
funoptlist -> funopt SEMI . funoptlist [ RBRACKET ]
-- On IDENT shift to state 579
-- On funoptlist shift to state 586
-- On funopt shift to state 584

State 586:
funoptlist -> funopt SEMI funoptlist . [ RBRACKET ]
-- On RBRACKET reduce production funoptlist -> funopt SEMI funoptlist

State 587:
impl -> FUN IDENT EQUAL STRING functionoptions . [ SEMI DOT ]
-- On SEMI reduce production impl -> FUN IDENT EQUAL STRING functionoptions
-- On DOT reduce production impl -> FUN IDENT EQUAL STRING functionoptions

State 588:
impl -> CONST . IDENT EQUAL STRING [ SEMI DOT ]
-- On IDENT shift to state 589

State 589:
impl -> CONST IDENT . EQUAL STRING [ SEMI DOT ]
-- On EQUAL shift to state 590

State 590:
impl -> CONST IDENT EQUAL . STRING [ SEMI DOT ]
-- On STRING shift to state 591

State 591:
impl -> CONST IDENT EQUAL STRING . [ SEMI DOT ]
-- On SEMI reduce production impl -> CONST IDENT EQUAL STRING
-- On DOT reduce production impl -> CONST IDENT EQUAL STRING

State 592:
lib -> IMPLEMENTATION impllist . DOT lib [ RBRACE PROCESS EQUIVALENCE ]
-- On DOT shift to state 593

State 593:
lib -> IMPLEMENTATION impllist DOT . lib [ RBRACE PROCESS EQUIVALENCE ]
-- On WEAKSECRET shift to state 1
-- On TYPE shift to state 4
-- On TABLE shift to state 14
-- On SET shift to state 22
-- On REDUCTION shift to state 27
-- On QUERY shift to state 39
-- On PROOF shift to state 126
-- On PROBA shift to state 146
-- On PREDICATE shift to state 149
-- On PARAM shift to state 156
-- On NOUNIF shift to state 160
-- On NOT shift to state 229
-- On NONINTERF shift to state 234
-- On LETFUN shift to state 276
-- On LET shift to state 412
-- On IMPLEMENTATION shift to state 547
-- On FUN shift to state 594
-- On FREE shift to state 611
-- On EXPAND shift to state 617
-- On EVENT shift to state 623
-- On EQUATION shift to state 629
-- On ELIMTRUE shift to state 637
-- On DEFINE shift to state 641
-- On CONST shift to state 647
-- On CLAUSES shift to state 653
-- On CHANNEL shift to state 655
-- On lib shift to state 707
-- On RBRACE reduce production lib -> 
-- On PROCESS reduce production lib -> 
-- On EQUIVALENCE reduce production lib -> 

State 594:
lib -> FUN . IDENT LPAREN typeidseq RPAREN COLON typeid options DOT lib [ RBRACE PROCESS EQUIVALENCE ]
lib -> FUN . IDENT LPAREN typeidseq RPAREN COLON typeid REDUCTION treducmayfail options DOT lib [ RBRACE PROCESS EQUIVALENCE ]
-- On IDENT shift to state 595

State 595:
lib -> FUN IDENT . LPAREN typeidseq RPAREN COLON typeid options DOT lib [ RBRACE PROCESS EQUIVALENCE ]
lib -> FUN IDENT . LPAREN typeidseq RPAREN COLON typeid REDUCTION treducmayfail options DOT lib [ RBRACE PROCESS EQUIVALENCE ]
-- On LPAREN shift to state 596

State 596:
lib -> FUN IDENT LPAREN . typeidseq RPAREN COLON typeid options DOT lib [ RBRACE PROCESS EQUIVALENCE ]
lib -> FUN IDENT LPAREN . typeidseq RPAREN COLON typeid REDUCTION treducmayfail options DOT lib [ RBRACE PROCESS EQUIVALENCE ]
-- On IDENT shift to state 17
-- On CHANNEL shift to state 18
-- On typeidseq shift to state 597
-- On typeid shift to state 676
-- On netypeidseq shift to state 679
-- On RPAREN reduce production typeidseq -> 

State 597:
lib -> FUN IDENT LPAREN typeidseq . RPAREN COLON typeid options DOT lib [ RBRACE PROCESS EQUIVALENCE ]
lib -> FUN IDENT LPAREN typeidseq . RPAREN COLON typeid REDUCTION treducmayfail options DOT lib [ RBRACE PROCESS EQUIVALENCE ]
-- On RPAREN shift to state 598

State 598:
lib -> FUN IDENT LPAREN typeidseq RPAREN . COLON typeid options DOT lib [ RBRACE PROCESS EQUIVALENCE ]
lib -> FUN IDENT LPAREN typeidseq RPAREN . COLON typeid REDUCTION treducmayfail options DOT lib [ RBRACE PROCESS EQUIVALENCE ]
-- On COLON shift to state 599

State 599:
lib -> FUN IDENT LPAREN typeidseq RPAREN COLON . typeid options DOT lib [ RBRACE PROCESS EQUIVALENCE ]
lib -> FUN IDENT LPAREN typeidseq RPAREN COLON . typeid REDUCTION treducmayfail options DOT lib [ RBRACE PROCESS EQUIVALENCE ]
-- On IDENT shift to state 17
-- On CHANNEL shift to state 18
-- On typeid shift to state 600

State 600:
lib -> FUN IDENT LPAREN typeidseq RPAREN COLON typeid . options DOT lib [ RBRACE PROCESS EQUIVALENCE ]
lib -> FUN IDENT LPAREN typeidseq RPAREN COLON typeid . REDUCTION treducmayfail options DOT lib [ RBRACE PROCESS EQUIVALENCE ]
-- On REDUCTION shift to state 601
-- On LBRACKET shift to state 6
-- On options shift to state 704
-- On DOT reduce production options -> 

State 601:
lib -> FUN IDENT LPAREN typeidseq RPAREN COLON typeid REDUCTION . treducmayfail options DOT lib [ RBRACE PROCESS EQUIVALENCE ]
-- On FORALL shift to state 602
-- On treducmayfail shift to state 608
-- On forallmayfailvartype shift to state 693
-- On PROJECTION reduce production forallmayfailvartype -> 
-- On NOT reduce production forallmayfailvartype -> 
-- On LPAREN reduce production forallmayfailvartype -> 
-- On IDENT reduce production forallmayfailvartype -> 
-- On FAIL reduce production forallmayfailvartype -> 
-- On CHOICE reduce production forallmayfailvartype -> 

State 602:
forallmayfailvartype -> FORALL . nemayfailvartypeseq SEMI [ PROJECTION NOT LPAREN IDENT FAIL CHOICE ]
-- On IDENT shift to state 279
-- On nemayfailvartypeseq shift to state 603
-- On mayfailvartype shift to state 605

State 603:
forallmayfailvartype -> FORALL nemayfailvartypeseq . SEMI [ PROJECTION NOT LPAREN IDENT FAIL CHOICE ]
-- On SEMI shift to state 604

State 604:
forallmayfailvartype -> FORALL nemayfailvartypeseq SEMI . [ PROJECTION NOT LPAREN IDENT FAIL CHOICE ]
-- On PROJECTION reduce production forallmayfailvartype -> FORALL nemayfailvartypeseq SEMI
-- On NOT reduce production forallmayfailvartype -> FORALL nemayfailvartypeseq SEMI
-- On LPAREN reduce production forallmayfailvartype -> FORALL nemayfailvartypeseq SEMI
-- On IDENT reduce production forallmayfailvartype -> FORALL nemayfailvartypeseq SEMI
-- On FAIL reduce production forallmayfailvartype -> FORALL nemayfailvartypeseq SEMI
-- On CHOICE reduce production forallmayfailvartype -> FORALL nemayfailvartypeseq SEMI

State 605:
nemayfailvartypeseq -> mayfailvartype . COMMA nemayfailvartypeseq [ SEMI RPAREN ]
nemayfailvartypeseq -> mayfailvartype . [ SEMI RPAREN ]
-- On COMMA shift to state 606
-- On SEMI reduce production nemayfailvartypeseq -> mayfailvartype
-- On RPAREN reduce production nemayfailvartypeseq -> mayfailvartype

State 606:
nemayfailvartypeseq -> mayfailvartype COMMA . nemayfailvartypeseq [ SEMI RPAREN ]
-- On IDENT shift to state 279
-- On nemayfailvartypeseq shift to state 607
-- On mayfailvartype shift to state 605

State 607:
nemayfailvartypeseq -> mayfailvartype COMMA nemayfailvartypeseq . [ SEMI RPAREN ]
-- On SEMI reduce production nemayfailvartypeseq -> mayfailvartype COMMA nemayfailvartypeseq
-- On RPAREN reduce production nemayfailvartypeseq -> mayfailvartype COMMA nemayfailvartypeseq

State 608:
lib -> FUN IDENT LPAREN typeidseq RPAREN COLON typeid REDUCTION treducmayfail . options DOT lib [ RBRACE PROCESS EQUIVALENCE ]
-- On LBRACKET shift to state 6
-- On options shift to state 609
-- On DOT reduce production options -> 

State 609:
lib -> FUN IDENT LPAREN typeidseq RPAREN COLON typeid REDUCTION treducmayfail options . DOT lib [ RBRACE PROCESS EQUIVALENCE ]
-- On DOT shift to state 610

State 610:
lib -> FUN IDENT LPAREN typeidseq RPAREN COLON typeid REDUCTION treducmayfail options DOT . lib [ RBRACE PROCESS EQUIVALENCE ]
-- On WEAKSECRET shift to state 1
-- On TYPE shift to state 4
-- On TABLE shift to state 14
-- On SET shift to state 22
-- On REDUCTION shift to state 27
-- On QUERY shift to state 39
-- On PROOF shift to state 126
-- On PROBA shift to state 146
-- On PREDICATE shift to state 149
-- On PARAM shift to state 156
-- On NOUNIF shift to state 160
-- On NOT shift to state 229
-- On NONINTERF shift to state 234
-- On LETFUN shift to state 276
-- On LET shift to state 412
-- On IMPLEMENTATION shift to state 547
-- On FUN shift to state 594
-- On FREE shift to state 611
-- On EXPAND shift to state 617
-- On EVENT shift to state 623
-- On EQUATION shift to state 629
-- On ELIMTRUE shift to state 637
-- On DEFINE shift to state 641
-- On CONST shift to state 647
-- On CLAUSES shift to state 653
-- On CHANNEL shift to state 655
-- On lib shift to state 692
-- On RBRACE reduce production lib -> 
-- On PROCESS reduce production lib -> 
-- On EQUIVALENCE reduce production lib -> 

State 611:
lib -> FREE . neidentseq COLON typeid options DOT lib [ RBRACE PROCESS EQUIVALENCE ]
-- On IDENT shift to state 7
-- On neidentseq shift to state 612

State 612:
lib -> FREE neidentseq . COLON typeid options DOT lib [ RBRACE PROCESS EQUIVALENCE ]
-- On COLON shift to state 613

State 613:
lib -> FREE neidentseq COLON . typeid options DOT lib [ RBRACE PROCESS EQUIVALENCE ]
-- On IDENT shift to state 17
-- On CHANNEL shift to state 18
-- On typeid shift to state 614

State 614:
lib -> FREE neidentseq COLON typeid . options DOT lib [ RBRACE PROCESS EQUIVALENCE ]
-- On LBRACKET shift to state 6
-- On options shift to state 615
-- On DOT reduce production options -> 

State 615:
lib -> FREE neidentseq COLON typeid options . DOT lib [ RBRACE PROCESS EQUIVALENCE ]
-- On DOT shift to state 616

State 616:
lib -> FREE neidentseq COLON typeid options DOT . lib [ RBRACE PROCESS EQUIVALENCE ]
-- On WEAKSECRET shift to state 1
-- On TYPE shift to state 4
-- On TABLE shift to state 14
-- On SET shift to state 22
-- On REDUCTION shift to state 27
-- On QUERY shift to state 39
-- On PROOF shift to state 126
-- On PROBA shift to state 146
-- On PREDICATE shift to state 149
-- On PARAM shift to state 156
-- On NOUNIF shift to state 160
-- On NOT shift to state 229
-- On NONINTERF shift to state 234
-- On LETFUN shift to state 276
-- On LET shift to state 412
-- On IMPLEMENTATION shift to state 547
-- On FUN shift to state 594
-- On FREE shift to state 611
-- On EXPAND shift to state 617
-- On EVENT shift to state 623
-- On EQUATION shift to state 629
-- On ELIMTRUE shift to state 637
-- On DEFINE shift to state 641
-- On CONST shift to state 647
-- On CLAUSES shift to state 653
-- On CHANNEL shift to state 655
-- On lib shift to state 691
-- On RBRACE reduce production lib -> 
-- On PROCESS reduce production lib -> 
-- On EQUIVALENCE reduce production lib -> 

State 617:
lib -> EXPAND . IDENT LPAREN typeidseq RPAREN DOT lib [ RBRACE PROCESS EQUIVALENCE ]
-- On IDENT shift to state 618

State 618:
lib -> EXPAND IDENT . LPAREN typeidseq RPAREN DOT lib [ RBRACE PROCESS EQUIVALENCE ]
-- On LPAREN shift to state 619

State 619:
lib -> EXPAND IDENT LPAREN . typeidseq RPAREN DOT lib [ RBRACE PROCESS EQUIVALENCE ]
-- On IDENT shift to state 17
-- On CHANNEL shift to state 18
-- On typeidseq shift to state 620
-- On typeid shift to state 676
-- On netypeidseq shift to state 679
-- On RPAREN reduce production typeidseq -> 

State 620:
lib -> EXPAND IDENT LPAREN typeidseq . RPAREN DOT lib [ RBRACE PROCESS EQUIVALENCE ]
-- On RPAREN shift to state 621

State 621:
lib -> EXPAND IDENT LPAREN typeidseq RPAREN . DOT lib [ RBRACE PROCESS EQUIVALENCE ]
-- On DOT shift to state 622

State 622:
lib -> EXPAND IDENT LPAREN typeidseq RPAREN DOT . lib [ RBRACE PROCESS EQUIVALENCE ]
-- On WEAKSECRET shift to state 1
-- On TYPE shift to state 4
-- On TABLE shift to state 14
-- On SET shift to state 22
-- On REDUCTION shift to state 27
-- On QUERY shift to state 39
-- On PROOF shift to state 126
-- On PROBA shift to state 146
-- On PREDICATE shift to state 149
-- On PARAM shift to state 156
-- On NOUNIF shift to state 160
-- On NOT shift to state 229
-- On NONINTERF shift to state 234
-- On LETFUN shift to state 276
-- On LET shift to state 412
-- On IMPLEMENTATION shift to state 547
-- On FUN shift to state 594
-- On FREE shift to state 611
-- On EXPAND shift to state 617
-- On EVENT shift to state 623
-- On EQUATION shift to state 629
-- On ELIMTRUE shift to state 637
-- On DEFINE shift to state 641
-- On CONST shift to state 647
-- On CLAUSES shift to state 653
-- On CHANNEL shift to state 655
-- On lib shift to state 690
-- On RBRACE reduce production lib -> 
-- On PROCESS reduce production lib -> 
-- On EQUIVALENCE reduce production lib -> 

State 623:
lib -> EVENT . IDENT DOT lib [ RBRACE PROCESS EQUIVALENCE ]
lib -> EVENT . IDENT LPAREN typeidseq RPAREN DOT lib [ RBRACE PROCESS EQUIVALENCE ]
-- On IDENT shift to state 624

State 624:
lib -> EVENT IDENT . DOT lib [ RBRACE PROCESS EQUIVALENCE ]
lib -> EVENT IDENT . LPAREN typeidseq RPAREN DOT lib [ RBRACE PROCESS EQUIVALENCE ]
-- On LPAREN shift to state 625
-- On DOT shift to state 688

State 625:
lib -> EVENT IDENT LPAREN . typeidseq RPAREN DOT lib [ RBRACE PROCESS EQUIVALENCE ]
-- On IDENT shift to state 17
-- On CHANNEL shift to state 18
-- On typeidseq shift to state 626
-- On typeid shift to state 676
-- On netypeidseq shift to state 679
-- On RPAREN reduce production typeidseq -> 

State 626:
lib -> EVENT IDENT LPAREN typeidseq . RPAREN DOT lib [ RBRACE PROCESS EQUIVALENCE ]
-- On RPAREN shift to state 627

State 627:
lib -> EVENT IDENT LPAREN typeidseq RPAREN . DOT lib [ RBRACE PROCESS EQUIVALENCE ]
-- On DOT shift to state 628

State 628:
lib -> EVENT IDENT LPAREN typeidseq RPAREN DOT . lib [ RBRACE PROCESS EQUIVALENCE ]
-- On WEAKSECRET shift to state 1
-- On TYPE shift to state 4
-- On TABLE shift to state 14
-- On SET shift to state 22
-- On REDUCTION shift to state 27
-- On QUERY shift to state 39
-- On PROOF shift to state 126
-- On PROBA shift to state 146
-- On PREDICATE shift to state 149
-- On PARAM shift to state 156
-- On NOUNIF shift to state 160
-- On NOT shift to state 229
-- On NONINTERF shift to state 234
-- On LETFUN shift to state 276
-- On LET shift to state 412
-- On IMPLEMENTATION shift to state 547
-- On FUN shift to state 594
-- On FREE shift to state 611
-- On EXPAND shift to state 617
-- On EVENT shift to state 623
-- On EQUATION shift to state 629
-- On ELIMTRUE shift to state 637
-- On DEFINE shift to state 641
-- On CONST shift to state 647
-- On CLAUSES shift to state 653
-- On CHANNEL shift to state 655
-- On lib shift to state 687
-- On RBRACE reduce production lib -> 
-- On PROCESS reduce production lib -> 
-- On EQUIVALENCE reduce production lib -> 

State 629:
lib -> EQUATION . eqlist options DOT lib [ RBRACE PROCESS EQUIVALENCE ]
-- On FORALL shift to state 28
-- On forallvartype shift to state 630
-- On eqlist shift to state 634
-- On PROJECTION reduce production forallvartype -> 
-- On NOT reduce production forallvartype -> 
-- On LPAREN reduce production forallvartype -> 
-- On IDENT reduce production forallvartype -> 
-- On FAIL reduce production forallvartype -> 
-- On CHOICE reduce production forallvartype -> 

State 630:
eqlist -> forallvartype . term [ LBRACKET DOT ]
eqlist -> forallvartype . term SEMI eqlist [ LBRACKET DOT ]
-- On PROJECTION shift to state 238
-- On NOT shift to state 240
-- On LPAREN shift to state 242
-- On IDENT shift to state 243
-- On FAIL shift to state 245
-- On CHOICE shift to state 246
-- On term shift to state 631

State 631:
eqlist -> forallvartype term . [ LBRACKET DOT ]
eqlist -> forallvartype term . SEMI eqlist [ LBRACKET DOT ]
term -> term . EQUAL term [ WEDGE SEMI OR LBRACKET EQUAL DOT DIFF ]
term -> term . DIFF term [ WEDGE SEMI OR LBRACKET EQUAL DOT DIFF ]
term -> term . OR term [ WEDGE SEMI OR LBRACKET EQUAL DOT DIFF ]
term -> term . WEDGE term [ WEDGE SEMI OR LBRACKET EQUAL DOT DIFF ]
-- On WEDGE shift to state 249
-- On SEMI shift to state 632
-- On OR shift to state 255
-- On EQUAL shift to state 251
-- On DIFF shift to state 253
-- On LBRACKET reduce production eqlist -> forallvartype term
-- On DOT reduce production eqlist -> forallvartype term

State 632:
eqlist -> forallvartype term SEMI . eqlist [ LBRACKET DOT ]
-- On FORALL shift to state 28
-- On forallvartype shift to state 630
-- On eqlist shift to state 633
-- On PROJECTION reduce production forallvartype -> 
-- On NOT reduce production forallvartype -> 
-- On LPAREN reduce production forallvartype -> 
-- On IDENT reduce production forallvartype -> 
-- On FAIL reduce production forallvartype -> 
-- On CHOICE reduce production forallvartype -> 

State 633:
eqlist -> forallvartype term SEMI eqlist . [ LBRACKET DOT ]
-- On LBRACKET reduce production eqlist -> forallvartype term SEMI eqlist
-- On DOT reduce production eqlist -> forallvartype term SEMI eqlist

State 634:
lib -> EQUATION eqlist . options DOT lib [ RBRACE PROCESS EQUIVALENCE ]
-- On LBRACKET shift to state 6
-- On options shift to state 635
-- On DOT reduce production options -> 

State 635:
lib -> EQUATION eqlist options . DOT lib [ RBRACE PROCESS EQUIVALENCE ]
-- On DOT shift to state 636

State 636:
lib -> EQUATION eqlist options DOT . lib [ RBRACE PROCESS EQUIVALENCE ]
-- On WEAKSECRET shift to state 1
-- On TYPE shift to state 4
-- On TABLE shift to state 14
-- On SET shift to state 22
-- On REDUCTION shift to state 27
-- On QUERY shift to state 39
-- On PROOF shift to state 126
-- On PROBA shift to state 146
-- On PREDICATE shift to state 149
-- On PARAM shift to state 156
-- On NOUNIF shift to state 160
-- On NOT shift to state 229
-- On NONINTERF shift to state 234
-- On LETFUN shift to state 276
-- On LET shift to state 412
-- On IMPLEMENTATION shift to state 547
-- On FUN shift to state 594
-- On FREE shift to state 611
-- On EXPAND shift to state 617
-- On EVENT shift to state 623
-- On EQUATION shift to state 629
-- On ELIMTRUE shift to state 637
-- On DEFINE shift to state 641
-- On CONST shift to state 647
-- On CLAUSES shift to state 653
-- On CHANNEL shift to state 655
-- On lib shift to state 686
-- On RBRACE reduce production lib -> 
-- On PROCESS reduce production lib -> 
-- On EQUIVALENCE reduce production lib -> 

State 637:
lib -> ELIMTRUE . nemayfailvartypeseq SEMI term DOT lib [ RBRACE PROCESS EQUIVALENCE ]
lib -> ELIMTRUE . term DOT lib [ RBRACE PROCESS EQUIVALENCE ]
-- On PROJECTION shift to state 238
-- On NOT shift to state 240
-- On LPAREN shift to state 242
-- On IDENT shift to state 638
-- On FAIL shift to state 245
-- On CHOICE shift to state 246
-- On term shift to state 639
-- On nemayfailvartypeseq shift to state 681
-- On mayfailvartype shift to state 605

State 638:
mayfailvartype -> IDENT . COLON typeid [ SEMI COMMA ]
mayfailvartype -> IDENT . COLON typeid ORTEXT FAIL [ SEMI COMMA ]
term -> IDENT . LPAREN termseq RPAREN [ WEDGE OR EQUAL DOT DIFF ]
term -> IDENT . [ WEDGE OR EQUAL DOT DIFF ]
-- On LPAREN shift to state 244
-- On COLON shift to state 280
-- On WEDGE reduce production term -> IDENT
-- On OR reduce production term -> IDENT
-- On EQUAL reduce production term -> IDENT
-- On DOT reduce production term -> IDENT
-- On DIFF reduce production term -> IDENT

State 639:
lib -> ELIMTRUE term . DOT lib [ RBRACE PROCESS EQUIVALENCE ]
term -> term . EQUAL term [ WEDGE OR EQUAL DOT DIFF ]
term -> term . DIFF term [ WEDGE OR EQUAL DOT DIFF ]
term -> term . OR term [ WEDGE OR EQUAL DOT DIFF ]
term -> term . WEDGE term [ WEDGE OR EQUAL DOT DIFF ]
-- On WEDGE shift to state 249
-- On OR shift to state 255
-- On EQUAL shift to state 251
-- On DOT shift to state 640
-- On DIFF shift to state 253

State 640:
lib -> ELIMTRUE term DOT . lib [ RBRACE PROCESS EQUIVALENCE ]
-- On WEAKSECRET shift to state 1
-- On TYPE shift to state 4
-- On TABLE shift to state 14
-- On SET shift to state 22
-- On REDUCTION shift to state 27
-- On QUERY shift to state 39
-- On PROOF shift to state 126
-- On PROBA shift to state 146
-- On PREDICATE shift to state 149
-- On PARAM shift to state 156
-- On NOUNIF shift to state 160
-- On NOT shift to state 229
-- On NONINTERF shift to state 234
-- On LETFUN shift to state 276
-- On LET shift to state 412
-- On IMPLEMENTATION shift to state 547
-- On FUN shift to state 594
-- On FREE shift to state 611
-- On EXPAND shift to state 617
-- On EVENT shift to state 623
-- On EQUATION shift to state 629
-- On ELIMTRUE shift to state 637
-- On DEFINE shift to state 641
-- On CONST shift to state 647
-- On CLAUSES shift to state 653
-- On CHANNEL shift to state 655
-- On lib shift to state 680
-- On RBRACE reduce production lib -> 
-- On PROCESS reduce production lib -> 
-- On EQUIVALENCE reduce production lib -> 

State 641:
lib -> DEFINE . IDENT LPAREN typeidseq RPAREN LBRACE lib RBRACE lib [ RBRACE PROCESS EQUIVALENCE ]
-- On IDENT shift to state 642

State 642:
lib -> DEFINE IDENT . LPAREN typeidseq RPAREN LBRACE lib RBRACE lib [ RBRACE PROCESS EQUIVALENCE ]
-- On LPAREN shift to state 643

State 643:
lib -> DEFINE IDENT LPAREN . typeidseq RPAREN LBRACE lib RBRACE lib [ RBRACE PROCESS EQUIVALENCE ]
-- On IDENT shift to state 17
-- On CHANNEL shift to state 18
-- On typeidseq shift to state 644
-- On typeid shift to state 676
-- On netypeidseq shift to state 679
-- On RPAREN reduce production typeidseq -> 

State 644:
lib -> DEFINE IDENT LPAREN typeidseq . RPAREN LBRACE lib RBRACE lib [ RBRACE PROCESS EQUIVALENCE ]
-- On RPAREN shift to state 645

State 645:
lib -> DEFINE IDENT LPAREN typeidseq RPAREN . LBRACE lib RBRACE lib [ RBRACE PROCESS EQUIVALENCE ]
-- On LBRACE shift to state 646

State 646:
lib -> DEFINE IDENT LPAREN typeidseq RPAREN LBRACE . lib RBRACE lib [ RBRACE PROCESS EQUIVALENCE ]
-- On WEAKSECRET shift to state 1
-- On TYPE shift to state 4
-- On TABLE shift to state 14
-- On SET shift to state 22
-- On REDUCTION shift to state 27
-- On QUERY shift to state 39
-- On PROOF shift to state 126
-- On PROBA shift to state 146
-- On PREDICATE shift to state 149
-- On PARAM shift to state 156
-- On NOUNIF shift to state 160
-- On NOT shift to state 229
-- On NONINTERF shift to state 234
-- On LETFUN shift to state 276
-- On LET shift to state 412
-- On IMPLEMENTATION shift to state 547
-- On FUN shift to state 594
-- On FREE shift to state 611
-- On EXPAND shift to state 617
-- On EVENT shift to state 623
-- On EQUATION shift to state 629
-- On ELIMTRUE shift to state 637
-- On DEFINE shift to state 641
-- On CONST shift to state 647
-- On CLAUSES shift to state 653
-- On CHANNEL shift to state 655
-- On lib shift to state 673
-- On RBRACE reduce production lib -> 

State 647:
lib -> CONST . neidentseq COLON typeid options DOT lib [ RBRACE PROCESS EQUIVALENCE ]
-- On IDENT shift to state 7
-- On neidentseq shift to state 648

State 648:
lib -> CONST neidentseq . COLON typeid options DOT lib [ RBRACE PROCESS EQUIVALENCE ]
-- On COLON shift to state 649

State 649:
lib -> CONST neidentseq COLON . typeid options DOT lib [ RBRACE PROCESS EQUIVALENCE ]
-- On IDENT shift to state 17
-- On CHANNEL shift to state 18
-- On typeid shift to state 650

State 650:
lib -> CONST neidentseq COLON typeid . options DOT lib [ RBRACE PROCESS EQUIVALENCE ]
-- On LBRACKET shift to state 6
-- On options shift to state 651
-- On DOT reduce production options -> 

State 651:
lib -> CONST neidentseq COLON typeid options . DOT lib [ RBRACE PROCESS EQUIVALENCE ]
-- On DOT shift to state 652

State 652:
lib -> CONST neidentseq COLON typeid options DOT . lib [ RBRACE PROCESS EQUIVALENCE ]
-- On WEAKSECRET shift to state 1
-- On TYPE shift to state 4
-- On TABLE shift to state 14
-- On SET shift to state 22
-- On REDUCTION shift to state 27
-- On QUERY shift to state 39
-- On PROOF shift to state 126
-- On PROBA shift to state 146
-- On PREDICATE shift to state 149
-- On PARAM shift to state 156
-- On NOUNIF shift to state 160
-- On NOT shift to state 229
-- On NONINTERF shift to state 234
-- On LETFUN shift to state 276
-- On LET shift to state 412
-- On IMPLEMENTATION shift to state 547
-- On FUN shift to state 594
-- On FREE shift to state 611
-- On EXPAND shift to state 617
-- On EVENT shift to state 623
-- On EQUATION shift to state 629
-- On ELIMTRUE shift to state 637
-- On DEFINE shift to state 641
-- On CONST shift to state 647
-- On CLAUSES shift to state 653
-- On CHANNEL shift to state 655
-- On lib shift to state 672
-- On RBRACE reduce production lib -> 
-- On PROCESS reduce production lib -> 
-- On EQUIVALENCE reduce production lib -> 

State 653:
lib -> CLAUSES . tclauses lib [ RBRACE PROCESS EQUIVALENCE ]
-- On FORALL shift to state 602
-- On tclauses shift to state 654
-- On forallmayfailvartype shift to state 660
-- On PROJECTION reduce production forallmayfailvartype -> 
-- On NOT reduce production forallmayfailvartype -> 
-- On LPAREN reduce production forallmayfailvartype -> 
-- On IDENT reduce production forallmayfailvartype -> 
-- On FAIL reduce production forallmayfailvartype -> 
-- On CHOICE reduce production forallmayfailvartype -> 

State 654:
lib -> CLAUSES tclauses . lib [ RBRACE PROCESS EQUIVALENCE ]
-- On WEAKSECRET shift to state 1
-- On TYPE shift to state 4
-- On TABLE shift to state 14
-- On SET shift to state 22
-- On REDUCTION shift to state 27
-- On QUERY shift to state 39
-- On PROOF shift to state 126
-- On PROBA shift to state 146
-- On PREDICATE shift to state 149
-- On PARAM shift to state 156
-- On NOUNIF shift to state 160
-- On NOT shift to state 229
-- On NONINTERF shift to state 234
-- On LETFUN shift to state 276
-- On LET shift to state 412
-- On IMPLEMENTATION shift to state 547
-- On FUN shift to state 594
-- On FREE shift to state 611
-- On EXPAND shift to state 617
-- On EVENT shift to state 623
-- On EQUATION shift to state 629
-- On ELIMTRUE shift to state 637
-- On DEFINE shift to state 641
-- On CONST shift to state 647
-- On CLAUSES shift to state 653
-- On CHANNEL shift to state 655
-- On lib shift to state 659
-- On RBRACE reduce production lib -> 
-- On PROCESS reduce production lib -> 
-- On EQUIVALENCE reduce production lib -> 

State 655:
lib -> CHANNEL . neidentseq DOT lib [ RBRACE PROCESS EQUIVALENCE ]
-- On IDENT shift to state 7
-- On neidentseq shift to state 656

State 656:
lib -> CHANNEL neidentseq . DOT lib [ RBRACE PROCESS EQUIVALENCE ]
-- On DOT shift to state 657

State 657:
lib -> CHANNEL neidentseq DOT . lib [ RBRACE PROCESS EQUIVALENCE ]
-- On WEAKSECRET shift to state 1
-- On TYPE shift to state 4
-- On TABLE shift to state 14
-- On SET shift to state 22
-- On REDUCTION shift to state 27
-- On QUERY shift to state 39
-- On PROOF shift to state 126
-- On PROBA shift to state 146
-- On PREDICATE shift to state 149
-- On PARAM shift to state 156
-- On NOUNIF shift to state 160
-- On NOT shift to state 229
-- On NONINTERF shift to state 234
-- On LETFUN shift to state 276
-- On LET shift to state 412
-- On IMPLEMENTATION shift to state 547
-- On FUN shift to state 594
-- On FREE shift to state 611
-- On EXPAND shift to state 617
-- On EVENT shift to state 623
-- On EQUATION shift to state 629
-- On ELIMTRUE shift to state 637
-- On DEFINE shift to state 641
-- On CONST shift to state 647
-- On CLAUSES shift to state 653
-- On CHANNEL shift to state 655
-- On lib shift to state 658
-- On RBRACE reduce production lib -> 
-- On PROCESS reduce production lib -> 
-- On EQUIVALENCE reduce production lib -> 

State 658:
lib -> CHANNEL neidentseq DOT lib . [ RBRACE PROCESS EQUIVALENCE ]
-- On RBRACE reduce production lib -> CHANNEL neidentseq DOT lib
-- On PROCESS reduce production lib -> CHANNEL neidentseq DOT lib
-- On EQUIVALENCE reduce production lib -> CHANNEL neidentseq DOT lib

State 659:
lib -> CLAUSES tclauses lib . [ RBRACE PROCESS EQUIVALENCE ]
-- On RBRACE reduce production lib -> CLAUSES tclauses lib
-- On PROCESS reduce production lib -> CLAUSES tclauses lib
-- On EQUIVALENCE reduce production lib -> CLAUSES tclauses lib

State 660:
tclauses -> forallmayfailvartype . tclause SEMI tclauses [ WEAKSECRET TYPE TABLE SET REDUCTION RBRACE QUERY PROOF PROCESS PROBA PREDICATE PARAM NOUNIF NOT NONINTERF LETFUN LET IMPLEMENTATION FUN FREE EXPAND EVENT EQUIVALENCE EQUATION ELIMTRUE DEFINE CONST CLAUSES CHANNEL # ]
tclauses -> forallmayfailvartype . tclause DOT [ WEAKSECRET TYPE TABLE SET REDUCTION RBRACE QUERY PROOF PROCESS PROBA PREDICATE PARAM NOUNIF NOT NONINTERF LETFUN LET IMPLEMENTATION FUN FREE EXPAND EVENT EQUIVALENCE EQUATION ELIMTRUE DEFINE CONST CLAUSES CHANNEL # ]
-- On PROJECTION shift to state 238
-- On NOT shift to state 240
-- On LPAREN shift to state 242
-- On IDENT shift to state 243
-- On FAIL shift to state 245
-- On CHOICE shift to state 246
-- On term shift to state 661
-- On tclause shift to state 668

State 661:
tclause -> term . RED term [ SEMI DOT ]
tclause -> term . [ SEMI DOT ]
tclause -> term . EQUIV term [ SEMI DOT ]
tclause -> term . EQUIVEQ term [ SEMI DOT ]
term -> term . EQUAL term [ WEDGE SEMI RED OR EQUIVEQ EQUIV EQUAL DOT DIFF ]
term -> term . DIFF term [ WEDGE SEMI RED OR EQUIVEQ EQUIV EQUAL DOT DIFF ]
term -> term . OR term [ WEDGE SEMI RED OR EQUIVEQ EQUIV EQUAL DOT DIFF ]
term -> term . WEDGE term [ WEDGE SEMI RED OR EQUIVEQ EQUIV EQUAL DOT DIFF ]
-- On WEDGE shift to state 249
-- On RED shift to state 662
-- On OR shift to state 255
-- On EQUIVEQ shift to state 664
-- On EQUIV shift to state 666
-- On EQUAL shift to state 251
-- On DIFF shift to state 253
-- On SEMI reduce production tclause -> term
-- On DOT reduce production tclause -> term

State 662:
tclause -> term RED . term [ SEMI DOT ]
-- On PROJECTION shift to state 238
-- On NOT shift to state 240
-- On LPAREN shift to state 242
-- On IDENT shift to state 243
-- On FAIL shift to state 245
-- On CHOICE shift to state 246
-- On term shift to state 663

State 663:
tclause -> term RED term . [ SEMI DOT ]
term -> term . EQUAL term [ WEDGE SEMI OR EQUAL DOT DIFF ]
term -> term . DIFF term [ WEDGE SEMI OR EQUAL DOT DIFF ]
term -> term . OR term [ WEDGE SEMI OR EQUAL DOT DIFF ]
term -> term . WEDGE term [ WEDGE SEMI OR EQUAL DOT DIFF ]
-- On WEDGE shift to state 249
-- On OR shift to state 255
-- On EQUAL shift to state 251
-- On DIFF shift to state 253
-- On SEMI reduce production tclause -> term RED term
-- On DOT reduce production tclause -> term RED term

State 664:
tclause -> term EQUIVEQ . term [ SEMI DOT ]
-- On PROJECTION shift to state 238
-- On NOT shift to state 240
-- On LPAREN shift to state 242
-- On IDENT shift to state 243
-- On FAIL shift to state 245
-- On CHOICE shift to state 246
-- On term shift to state 665

State 665:
tclause -> term EQUIVEQ term . [ SEMI DOT ]
term -> term . EQUAL term [ WEDGE SEMI OR EQUAL DOT DIFF ]
term -> term . DIFF term [ WEDGE SEMI OR EQUAL DOT DIFF ]
term -> term . OR term [ WEDGE SEMI OR EQUAL DOT DIFF ]
term -> term . WEDGE term [ WEDGE SEMI OR EQUAL DOT DIFF ]
-- On WEDGE shift to state 249
-- On OR shift to state 255
-- On EQUAL shift to state 251
-- On DIFF shift to state 253
-- On SEMI reduce production tclause -> term EQUIVEQ term
-- On DOT reduce production tclause -> term EQUIVEQ term

State 666:
tclause -> term EQUIV . term [ SEMI DOT ]
-- On PROJECTION shift to state 238
-- On NOT shift to state 240
-- On LPAREN shift to state 242
-- On IDENT shift to state 243
-- On FAIL shift to state 245
-- On CHOICE shift to state 246
-- On term shift to state 667

State 667:
tclause -> term EQUIV term . [ SEMI DOT ]
term -> term . EQUAL term [ WEDGE SEMI OR EQUAL DOT DIFF ]
term -> term . DIFF term [ WEDGE SEMI OR EQUAL DOT DIFF ]
term -> term . OR term [ WEDGE SEMI OR EQUAL DOT DIFF ]
term -> term . WEDGE term [ WEDGE SEMI OR EQUAL DOT DIFF ]
-- On WEDGE shift to state 249
-- On OR shift to state 255
-- On EQUAL shift to state 251
-- On DIFF shift to state 253
-- On SEMI reduce production tclause -> term EQUIV term
-- On DOT reduce production tclause -> term EQUIV term

State 668:
tclauses -> forallmayfailvartype tclause . SEMI tclauses [ WEAKSECRET TYPE TABLE SET REDUCTION RBRACE QUERY PROOF PROCESS PROBA PREDICATE PARAM NOUNIF NOT NONINTERF LETFUN LET IMPLEMENTATION FUN FREE EXPAND EVENT EQUIVALENCE EQUATION ELIMTRUE DEFINE CONST CLAUSES CHANNEL # ]
tclauses -> forallmayfailvartype tclause . DOT [ WEAKSECRET TYPE TABLE SET REDUCTION RBRACE QUERY PROOF PROCESS PROBA PREDICATE PARAM NOUNIF NOT NONINTERF LETFUN LET IMPLEMENTATION FUN FREE EXPAND EVENT EQUIVALENCE EQUATION ELIMTRUE DEFINE CONST CLAUSES CHANNEL # ]
-- On SEMI shift to state 669
-- On DOT shift to state 671

State 669:
tclauses -> forallmayfailvartype tclause SEMI . tclauses [ WEAKSECRET TYPE TABLE SET REDUCTION RBRACE QUERY PROOF PROCESS PROBA PREDICATE PARAM NOUNIF NOT NONINTERF LETFUN LET IMPLEMENTATION FUN FREE EXPAND EVENT EQUIVALENCE EQUATION ELIMTRUE DEFINE CONST CLAUSES CHANNEL # ]
-- On FORALL shift to state 602
-- On tclauses shift to state 670
-- On forallmayfailvartype shift to state 660
-- On PROJECTION reduce production forallmayfailvartype -> 
-- On NOT reduce production forallmayfailvartype -> 
-- On LPAREN reduce production forallmayfailvartype -> 
-- On IDENT reduce production forallmayfailvartype -> 
-- On FAIL reduce production forallmayfailvartype -> 
-- On CHOICE reduce production forallmayfailvartype -> 

State 670:
tclauses -> forallmayfailvartype tclause SEMI tclauses . [ WEAKSECRET TYPE TABLE SET REDUCTION RBRACE QUERY PROOF PROCESS PROBA PREDICATE PARAM NOUNIF NOT NONINTERF LETFUN LET IMPLEMENTATION FUN FREE EXPAND EVENT EQUIVALENCE EQUATION ELIMTRUE DEFINE CONST CLAUSES CHANNEL # ]
-- On WEAKSECRET reduce production tclauses -> forallmayfailvartype tclause SEMI tclauses
-- On TYPE reduce production tclauses -> forallmayfailvartype tclause SEMI tclauses
-- On TABLE reduce production tclauses -> forallmayfailvartype tclause SEMI tclauses
-- On SET reduce production tclauses -> forallmayfailvartype tclause SEMI tclauses
-- On REDUCTION reduce production tclauses -> forallmayfailvartype tclause SEMI tclauses
-- On RBRACE reduce production tclauses -> forallmayfailvartype tclause SEMI tclauses
-- On QUERY reduce production tclauses -> forallmayfailvartype tclause SEMI tclauses
-- On PROOF reduce production tclauses -> forallmayfailvartype tclause SEMI tclauses
-- On PROCESS reduce production tclauses -> forallmayfailvartype tclause SEMI tclauses
-- On PROBA reduce production tclauses -> forallmayfailvartype tclause SEMI tclauses
-- On PREDICATE reduce production tclauses -> forallmayfailvartype tclause SEMI tclauses
-- On PARAM reduce production tclauses -> forallmayfailvartype tclause SEMI tclauses
-- On NOUNIF reduce production tclauses -> forallmayfailvartype tclause SEMI tclauses
-- On NOT reduce production tclauses -> forallmayfailvartype tclause SEMI tclauses
-- On NONINTERF reduce production tclauses -> forallmayfailvartype tclause SEMI tclauses
-- On LETFUN reduce production tclauses -> forallmayfailvartype tclause SEMI tclauses
-- On LET reduce production tclauses -> forallmayfailvartype tclause SEMI tclauses
-- On IMPLEMENTATION reduce production tclauses -> forallmayfailvartype tclause SEMI tclauses
-- On FUN reduce production tclauses -> forallmayfailvartype tclause SEMI tclauses
-- On FREE reduce production tclauses -> forallmayfailvartype tclause SEMI tclauses
-- On EXPAND reduce production tclauses -> forallmayfailvartype tclause SEMI tclauses
-- On EVENT reduce production tclauses -> forallmayfailvartype tclause SEMI tclauses
-- On EQUIVALENCE reduce production tclauses -> forallmayfailvartype tclause SEMI tclauses
-- On EQUATION reduce production tclauses -> forallmayfailvartype tclause SEMI tclauses
-- On ELIMTRUE reduce production tclauses -> forallmayfailvartype tclause SEMI tclauses
-- On DEFINE reduce production tclauses -> forallmayfailvartype tclause SEMI tclauses
-- On CONST reduce production tclauses -> forallmayfailvartype tclause SEMI tclauses
-- On CLAUSES reduce production tclauses -> forallmayfailvartype tclause SEMI tclauses
-- On CHANNEL reduce production tclauses -> forallmayfailvartype tclause SEMI tclauses
-- On # reduce production tclauses -> forallmayfailvartype tclause SEMI tclauses

State 671:
tclauses -> forallmayfailvartype tclause DOT . [ WEAKSECRET TYPE TABLE SET REDUCTION RBRACE QUERY PROOF PROCESS PROBA PREDICATE PARAM NOUNIF NOT NONINTERF LETFUN LET IMPLEMENTATION FUN FREE EXPAND EVENT EQUIVALENCE EQUATION ELIMTRUE DEFINE CONST CLAUSES CHANNEL # ]
-- On WEAKSECRET reduce production tclauses -> forallmayfailvartype tclause DOT
-- On TYPE reduce production tclauses -> forallmayfailvartype tclause DOT
-- On TABLE reduce production tclauses -> forallmayfailvartype tclause DOT
-- On SET reduce production tclauses -> forallmayfailvartype tclause DOT
-- On REDUCTION reduce production tclauses -> forallmayfailvartype tclause DOT
-- On RBRACE reduce production tclauses -> forallmayfailvartype tclause DOT
-- On QUERY reduce production tclauses -> forallmayfailvartype tclause DOT
-- On PROOF reduce production tclauses -> forallmayfailvartype tclause DOT
-- On PROCESS reduce production tclauses -> forallmayfailvartype tclause DOT
-- On PROBA reduce production tclauses -> forallmayfailvartype tclause DOT
-- On PREDICATE reduce production tclauses -> forallmayfailvartype tclause DOT
-- On PARAM reduce production tclauses -> forallmayfailvartype tclause DOT
-- On NOUNIF reduce production tclauses -> forallmayfailvartype tclause DOT
-- On NOT reduce production tclauses -> forallmayfailvartype tclause DOT
-- On NONINTERF reduce production tclauses -> forallmayfailvartype tclause DOT
-- On LETFUN reduce production tclauses -> forallmayfailvartype tclause DOT
-- On LET reduce production tclauses -> forallmayfailvartype tclause DOT
-- On IMPLEMENTATION reduce production tclauses -> forallmayfailvartype tclause DOT
-- On FUN reduce production tclauses -> forallmayfailvartype tclause DOT
-- On FREE reduce production tclauses -> forallmayfailvartype tclause DOT
-- On EXPAND reduce production tclauses -> forallmayfailvartype tclause DOT
-- On EVENT reduce production tclauses -> forallmayfailvartype tclause DOT
-- On EQUIVALENCE reduce production tclauses -> forallmayfailvartype tclause DOT
-- On EQUATION reduce production tclauses -> forallmayfailvartype tclause DOT
-- On ELIMTRUE reduce production tclauses -> forallmayfailvartype tclause DOT
-- On DEFINE reduce production tclauses -> forallmayfailvartype tclause DOT
-- On CONST reduce production tclauses -> forallmayfailvartype tclause DOT
-- On CLAUSES reduce production tclauses -> forallmayfailvartype tclause DOT
-- On CHANNEL reduce production tclauses -> forallmayfailvartype tclause DOT
-- On # reduce production tclauses -> forallmayfailvartype tclause DOT

State 672:
lib -> CONST neidentseq COLON typeid options DOT lib . [ RBRACE PROCESS EQUIVALENCE ]
-- On RBRACE reduce production lib -> CONST neidentseq COLON typeid options DOT lib
-- On PROCESS reduce production lib -> CONST neidentseq COLON typeid options DOT lib
-- On EQUIVALENCE reduce production lib -> CONST neidentseq COLON typeid options DOT lib

State 673:
lib -> DEFINE IDENT LPAREN typeidseq RPAREN LBRACE lib . RBRACE lib [ RBRACE PROCESS EQUIVALENCE ]
-- On RBRACE shift to state 674

State 674:
lib -> DEFINE IDENT LPAREN typeidseq RPAREN LBRACE lib RBRACE . lib [ RBRACE PROCESS EQUIVALENCE ]
-- On WEAKSECRET shift to state 1
-- On TYPE shift to state 4
-- On TABLE shift to state 14
-- On SET shift to state 22
-- On REDUCTION shift to state 27
-- On QUERY shift to state 39
-- On PROOF shift to state 126
-- On PROBA shift to state 146
-- On PREDICATE shift to state 149
-- On PARAM shift to state 156
-- On NOUNIF shift to state 160
-- On NOT shift to state 229
-- On NONINTERF shift to state 234
-- On LETFUN shift to state 276
-- On LET shift to state 412
-- On IMPLEMENTATION shift to state 547
-- On FUN shift to state 594
-- On FREE shift to state 611
-- On EXPAND shift to state 617
-- On EVENT shift to state 623
-- On EQUATION shift to state 629
-- On ELIMTRUE shift to state 637
-- On DEFINE shift to state 641
-- On CONST shift to state 647
-- On CLAUSES shift to state 653
-- On CHANNEL shift to state 655
-- On lib shift to state 675
-- On RBRACE reduce production lib -> 
-- On PROCESS reduce production lib -> 
-- On EQUIVALENCE reduce production lib -> 

State 675:
lib -> DEFINE IDENT LPAREN typeidseq RPAREN LBRACE lib RBRACE lib . [ RBRACE PROCESS EQUIVALENCE ]
-- On RBRACE reduce production lib -> DEFINE IDENT LPAREN typeidseq RPAREN LBRACE lib RBRACE lib
-- On PROCESS reduce production lib -> DEFINE IDENT LPAREN typeidseq RPAREN LBRACE lib RBRACE lib
-- On EQUIVALENCE reduce production lib -> DEFINE IDENT LPAREN typeidseq RPAREN LBRACE lib RBRACE lib

State 676:
netypeidseq -> typeid . COMMA netypeidseq [ RPAREN ]
netypeidseq -> typeid . [ RPAREN ]
-- On COMMA shift to state 677
-- On RPAREN reduce production netypeidseq -> typeid

State 677:
netypeidseq -> typeid COMMA . netypeidseq [ RPAREN ]
-- On IDENT shift to state 17
-- On CHANNEL shift to state 18
-- On typeid shift to state 676
-- On netypeidseq shift to state 678

State 678:
netypeidseq -> typeid COMMA netypeidseq . [ RPAREN ]
-- On RPAREN reduce production netypeidseq -> typeid COMMA netypeidseq

State 679:
typeidseq -> netypeidseq . [ RPAREN ]
-- On RPAREN reduce production typeidseq -> netypeidseq

State 680:
lib -> ELIMTRUE term DOT lib . [ RBRACE PROCESS EQUIVALENCE ]
-- On RBRACE reduce production lib -> ELIMTRUE term DOT lib
-- On PROCESS reduce production lib -> ELIMTRUE term DOT lib
-- On EQUIVALENCE reduce production lib -> ELIMTRUE term DOT lib

State 681:
lib -> ELIMTRUE nemayfailvartypeseq . SEMI term DOT lib [ RBRACE PROCESS EQUIVALENCE ]
-- On SEMI shift to state 682

State 682:
lib -> ELIMTRUE nemayfailvartypeseq SEMI . term DOT lib [ RBRACE PROCESS EQUIVALENCE ]
-- On PROJECTION shift to state 238
-- On NOT shift to state 240
-- On LPAREN shift to state 242
-- On IDENT shift to state 243
-- On FAIL shift to state 245
-- On CHOICE shift to state 246
-- On term shift to state 683

State 683:
lib -> ELIMTRUE nemayfailvartypeseq SEMI term . DOT lib [ RBRACE PROCESS EQUIVALENCE ]
term -> term . EQUAL term [ WEDGE OR EQUAL DOT DIFF ]
term -> term . DIFF term [ WEDGE OR EQUAL DOT DIFF ]
term -> term . OR term [ WEDGE OR EQUAL DOT DIFF ]
term -> term . WEDGE term [ WEDGE OR EQUAL DOT DIFF ]
-- On WEDGE shift to state 249
-- On OR shift to state 255
-- On EQUAL shift to state 251
-- On DOT shift to state 684
-- On DIFF shift to state 253

State 684:
lib -> ELIMTRUE nemayfailvartypeseq SEMI term DOT . lib [ RBRACE PROCESS EQUIVALENCE ]
-- On WEAKSECRET shift to state 1
-- On TYPE shift to state 4
-- On TABLE shift to state 14
-- On SET shift to state 22
-- On REDUCTION shift to state 27
-- On QUERY shift to state 39
-- On PROOF shift to state 126
-- On PROBA shift to state 146
-- On PREDICATE shift to state 149
-- On PARAM shift to state 156
-- On NOUNIF shift to state 160
-- On NOT shift to state 229
-- On NONINTERF shift to state 234
-- On LETFUN shift to state 276
-- On LET shift to state 412
-- On IMPLEMENTATION shift to state 547
-- On FUN shift to state 594
-- On FREE shift to state 611
-- On EXPAND shift to state 617
-- On EVENT shift to state 623
-- On EQUATION shift to state 629
-- On ELIMTRUE shift to state 637
-- On DEFINE shift to state 641
-- On CONST shift to state 647
-- On CLAUSES shift to state 653
-- On CHANNEL shift to state 655
-- On lib shift to state 685
-- On RBRACE reduce production lib -> 
-- On PROCESS reduce production lib -> 
-- On EQUIVALENCE reduce production lib -> 

State 685:
lib -> ELIMTRUE nemayfailvartypeseq SEMI term DOT lib . [ RBRACE PROCESS EQUIVALENCE ]
-- On RBRACE reduce production lib -> ELIMTRUE nemayfailvartypeseq SEMI term DOT lib
-- On PROCESS reduce production lib -> ELIMTRUE nemayfailvartypeseq SEMI term DOT lib
-- On EQUIVALENCE reduce production lib -> ELIMTRUE nemayfailvartypeseq SEMI term DOT lib

State 686:
lib -> EQUATION eqlist options DOT lib . [ RBRACE PROCESS EQUIVALENCE ]
-- On RBRACE reduce production lib -> EQUATION eqlist options DOT lib
-- On PROCESS reduce production lib -> EQUATION eqlist options DOT lib
-- On EQUIVALENCE reduce production lib -> EQUATION eqlist options DOT lib

State 687:
lib -> EVENT IDENT LPAREN typeidseq RPAREN DOT lib . [ RBRACE PROCESS EQUIVALENCE ]
-- On RBRACE reduce production lib -> EVENT IDENT LPAREN typeidseq RPAREN DOT lib
-- On PROCESS reduce production lib -> EVENT IDENT LPAREN typeidseq RPAREN DOT lib
-- On EQUIVALENCE reduce production lib -> EVENT IDENT LPAREN typeidseq RPAREN DOT lib

State 688:
lib -> EVENT IDENT DOT . lib [ RBRACE PROCESS EQUIVALENCE ]
-- On WEAKSECRET shift to state 1
-- On TYPE shift to state 4
-- On TABLE shift to state 14
-- On SET shift to state 22
-- On REDUCTION shift to state 27
-- On QUERY shift to state 39
-- On PROOF shift to state 126
-- On PROBA shift to state 146
-- On PREDICATE shift to state 149
-- On PARAM shift to state 156
-- On NOUNIF shift to state 160
-- On NOT shift to state 229
-- On NONINTERF shift to state 234
-- On LETFUN shift to state 276
-- On LET shift to state 412
-- On IMPLEMENTATION shift to state 547
-- On FUN shift to state 594
-- On FREE shift to state 611
-- On EXPAND shift to state 617
-- On EVENT shift to state 623
-- On EQUATION shift to state 629
-- On ELIMTRUE shift to state 637
-- On DEFINE shift to state 641
-- On CONST shift to state 647
-- On CLAUSES shift to state 653
-- On CHANNEL shift to state 655
-- On lib shift to state 689
-- On RBRACE reduce production lib -> 
-- On PROCESS reduce production lib -> 
-- On EQUIVALENCE reduce production lib -> 

State 689:
lib -> EVENT IDENT DOT lib . [ RBRACE PROCESS EQUIVALENCE ]
-- On RBRACE reduce production lib -> EVENT IDENT DOT lib
-- On PROCESS reduce production lib -> EVENT IDENT DOT lib
-- On EQUIVALENCE reduce production lib -> EVENT IDENT DOT lib

State 690:
lib -> EXPAND IDENT LPAREN typeidseq RPAREN DOT lib . [ RBRACE PROCESS EQUIVALENCE ]
-- On RBRACE reduce production lib -> EXPAND IDENT LPAREN typeidseq RPAREN DOT lib
-- On PROCESS reduce production lib -> EXPAND IDENT LPAREN typeidseq RPAREN DOT lib
-- On EQUIVALENCE reduce production lib -> EXPAND IDENT LPAREN typeidseq RPAREN DOT lib

State 691:
lib -> FREE neidentseq COLON typeid options DOT lib . [ RBRACE PROCESS EQUIVALENCE ]
-- On RBRACE reduce production lib -> FREE neidentseq COLON typeid options DOT lib
-- On PROCESS reduce production lib -> FREE neidentseq COLON typeid options DOT lib
-- On EQUIVALENCE reduce production lib -> FREE neidentseq COLON typeid options DOT lib

State 692:
lib -> FUN IDENT LPAREN typeidseq RPAREN COLON typeid REDUCTION treducmayfail options DOT lib . [ RBRACE PROCESS EQUIVALENCE ]
-- On RBRACE reduce production lib -> FUN IDENT LPAREN typeidseq RPAREN COLON typeid REDUCTION treducmayfail options DOT lib
-- On PROCESS reduce production lib -> FUN IDENT LPAREN typeidseq RPAREN COLON typeid REDUCTION treducmayfail options DOT lib
-- On EQUIVALENCE reduce production lib -> FUN IDENT LPAREN typeidseq RPAREN COLON typeid REDUCTION treducmayfail options DOT lib

State 693:
treducmayfail -> forallmayfailvartype . term EQUAL term treducotherwise [ LBRACKET DOT ]
treducmayfail -> forallmayfailvartype . term EQUAL term [ LBRACKET DOT ]
-- On PROJECTION shift to state 238
-- On NOT shift to state 240
-- On LPAREN shift to state 242
-- On IDENT shift to state 243
-- On FAIL shift to state 245
-- On CHOICE shift to state 246
-- On term shift to state 694

State 694:
term -> term . EQUAL term [ WEDGE OR EQUAL DIFF ]
term -> term . DIFF term [ WEDGE OR EQUAL DIFF ]
term -> term . OR term [ WEDGE OR EQUAL DIFF ]
term -> term . WEDGE term [ WEDGE OR EQUAL DIFF ]
treducmayfail -> forallmayfailvartype term . EQUAL term treducotherwise [ LBRACKET DOT ]
treducmayfail -> forallmayfailvartype term . EQUAL term [ LBRACKET DOT ]
-- On WEDGE shift to state 249
-- On OR shift to state 255
-- On EQUAL shift to state 695
-- On DIFF shift to state 253

State 695:
term -> term EQUAL . term [ WEDGE OR EQUAL DIFF ]
treducmayfail -> forallmayfailvartype term EQUAL . term treducotherwise [ LBRACKET DOT ]
treducmayfail -> forallmayfailvartype term EQUAL . term [ LBRACKET DOT ]
-- On PROJECTION shift to state 238
-- On NOT shift to state 240
-- On LPAREN shift to state 242
-- On IDENT shift to state 243
-- On FAIL shift to state 245
-- On CHOICE shift to state 246
-- On term shift to state 696

State 696:
term -> term . EQUAL term [ WEDGE OTHERWISE OR LBRACKET EQUAL DOT DIFF ]
term -> term EQUAL term . [ WEDGE OR EQUAL DIFF ]
term -> term . DIFF term [ WEDGE OTHERWISE OR LBRACKET EQUAL DOT DIFF ]
term -> term . OR term [ WEDGE OTHERWISE OR LBRACKET EQUAL DOT DIFF ]
term -> term . WEDGE term [ WEDGE OTHERWISE OR LBRACKET EQUAL DOT DIFF ]
treducmayfail -> forallmayfailvartype term EQUAL term . treducotherwise [ LBRACKET DOT ]
treducmayfail -> forallmayfailvartype term EQUAL term . [ LBRACKET DOT ]
-- On OTHERWISE shift to state 697
-- On DIFF shift to state 253
-- On treducotherwise shift to state 703
-- On WEDGE reduce production term -> term EQUAL term
-- On OR reduce production term -> term EQUAL term
-- On LBRACKET reduce production treducmayfail -> forallmayfailvartype term EQUAL term
-- On DOT reduce production treducmayfail -> forallmayfailvartype term EQUAL term

State 697:
treducotherwise -> OTHERWISE . forallmayfailvartype term EQUAL term treducotherwise [ LBRACKET DOT ]
treducotherwise -> OTHERWISE . forallmayfailvartype term EQUAL term [ LBRACKET DOT ]
-- On FORALL shift to state 602
-- On forallmayfailvartype shift to state 698
-- On PROJECTION reduce production forallmayfailvartype -> 
-- On NOT reduce production forallmayfailvartype -> 
-- On LPAREN reduce production forallmayfailvartype -> 
-- On IDENT reduce production forallmayfailvartype -> 
-- On FAIL reduce production forallmayfailvartype -> 
-- On CHOICE reduce production forallmayfailvartype -> 

State 698:
treducotherwise -> OTHERWISE forallmayfailvartype . term EQUAL term treducotherwise [ LBRACKET DOT ]
treducotherwise -> OTHERWISE forallmayfailvartype . term EQUAL term [ LBRACKET DOT ]
-- On PROJECTION shift to state 238
-- On NOT shift to state 240
-- On LPAREN shift to state 242
-- On IDENT shift to state 243
-- On FAIL shift to state 245
-- On CHOICE shift to state 246
-- On term shift to state 699

State 699:
term -> term . EQUAL term [ WEDGE OR EQUAL DIFF ]
term -> term . DIFF term [ WEDGE OR EQUAL DIFF ]
term -> term . OR term [ WEDGE OR EQUAL DIFF ]
term -> term . WEDGE term [ WEDGE OR EQUAL DIFF ]
treducotherwise -> OTHERWISE forallmayfailvartype term . EQUAL term treducotherwise [ LBRACKET DOT ]
treducotherwise -> OTHERWISE forallmayfailvartype term . EQUAL term [ LBRACKET DOT ]
-- On WEDGE shift to state 249
-- On OR shift to state 255
-- On EQUAL shift to state 700
-- On DIFF shift to state 253

State 700:
term -> term EQUAL . term [ WEDGE OR EQUAL DIFF ]
treducotherwise -> OTHERWISE forallmayfailvartype term EQUAL . term treducotherwise [ LBRACKET DOT ]
treducotherwise -> OTHERWISE forallmayfailvartype term EQUAL . term [ LBRACKET DOT ]
-- On PROJECTION shift to state 238
-- On NOT shift to state 240
-- On LPAREN shift to state 242
-- On IDENT shift to state 243
-- On FAIL shift to state 245
-- On CHOICE shift to state 246
-- On term shift to state 701

State 701:
term -> term . EQUAL term [ WEDGE OTHERWISE OR LBRACKET EQUAL DOT DIFF ]
term -> term EQUAL term . [ WEDGE OR EQUAL DIFF ]
term -> term . DIFF term [ WEDGE OTHERWISE OR LBRACKET EQUAL DOT DIFF ]
term -> term . OR term [ WEDGE OTHERWISE OR LBRACKET EQUAL DOT DIFF ]
term -> term . WEDGE term [ WEDGE OTHERWISE OR LBRACKET EQUAL DOT DIFF ]
treducotherwise -> OTHERWISE forallmayfailvartype term EQUAL term . treducotherwise [ LBRACKET DOT ]
treducotherwise -> OTHERWISE forallmayfailvartype term EQUAL term . [ LBRACKET DOT ]
-- On OTHERWISE shift to state 697
-- On DIFF shift to state 253
-- On treducotherwise shift to state 702
-- On WEDGE reduce production term -> term EQUAL term
-- On OR reduce production term -> term EQUAL term
-- On LBRACKET reduce production treducotherwise -> OTHERWISE forallmayfailvartype term EQUAL term
-- On DOT reduce production treducotherwise -> OTHERWISE forallmayfailvartype term EQUAL term

State 702:
treducotherwise -> OTHERWISE forallmayfailvartype term EQUAL term treducotherwise . [ LBRACKET DOT ]
-- On LBRACKET reduce production treducotherwise -> OTHERWISE forallmayfailvartype term EQUAL term treducotherwise
-- On DOT reduce production treducotherwise -> OTHERWISE forallmayfailvartype term EQUAL term treducotherwise

State 703:
treducmayfail -> forallmayfailvartype term EQUAL term treducotherwise . [ LBRACKET DOT ]
-- On LBRACKET reduce production treducmayfail -> forallmayfailvartype term EQUAL term treducotherwise
-- On DOT reduce production treducmayfail -> forallmayfailvartype term EQUAL term treducotherwise

State 704:
lib -> FUN IDENT LPAREN typeidseq RPAREN COLON typeid options . DOT lib [ RBRACE PROCESS EQUIVALENCE ]
-- On DOT shift to state 705

State 705:
lib -> FUN IDENT LPAREN typeidseq RPAREN COLON typeid options DOT . lib [ RBRACE PROCESS EQUIVALENCE ]
-- On WEAKSECRET shift to state 1
-- On TYPE shift to state 4
-- On TABLE shift to state 14
-- On SET shift to state 22
-- On REDUCTION shift to state 27
-- On QUERY shift to state 39
-- On PROOF shift to state 126
-- On PROBA shift to state 146
-- On PREDICATE shift to state 149
-- On PARAM shift to state 156
-- On NOUNIF shift to state 160
-- On NOT shift to state 229
-- On NONINTERF shift to state 234
-- On LETFUN shift to state 276
-- On LET shift to state 412
-- On IMPLEMENTATION shift to state 547
-- On FUN shift to state 594
-- On FREE shift to state 611
-- On EXPAND shift to state 617
-- On EVENT shift to state 623
-- On EQUATION shift to state 629
-- On ELIMTRUE shift to state 637
-- On DEFINE shift to state 641
-- On CONST shift to state 647
-- On CLAUSES shift to state 653
-- On CHANNEL shift to state 655
-- On lib shift to state 706
-- On RBRACE reduce production lib -> 
-- On PROCESS reduce production lib -> 
-- On EQUIVALENCE reduce production lib -> 

State 706:
lib -> FUN IDENT LPAREN typeidseq RPAREN COLON typeid options DOT lib . [ RBRACE PROCESS EQUIVALENCE ]
-- On RBRACE reduce production lib -> FUN IDENT LPAREN typeidseq RPAREN COLON typeid options DOT lib
-- On PROCESS reduce production lib -> FUN IDENT LPAREN typeidseq RPAREN COLON typeid options DOT lib
-- On EQUIVALENCE reduce production lib -> FUN IDENT LPAREN typeidseq RPAREN COLON typeid options DOT lib

State 707:
lib -> IMPLEMENTATION impllist DOT lib . [ RBRACE PROCESS EQUIVALENCE ]
-- On RBRACE reduce production lib -> IMPLEMENTATION impllist DOT lib
-- On PROCESS reduce production lib -> IMPLEMENTATION impllist DOT lib
-- On EQUIVALENCE reduce production lib -> IMPLEMENTATION impllist DOT lib

State 708:
impllist -> impl . [ DOT ]
impllist -> impl . SEMI impllist [ DOT ]
-- On SEMI shift to state 709
-- On DOT reduce production impllist -> impl

State 709:
impllist -> impl SEMI . impllist [ DOT ]
-- On TYPE shift to state 548
-- On TABLE shift to state 570
-- On FUN shift to state 574
-- On CONST shift to state 588
-- On impllist shift to state 710
-- On impl shift to state 708

State 710:
impllist -> impl SEMI impllist . [ DOT ]
-- On DOT reduce production impllist -> impl SEMI impllist

State 711:
lib -> LET IDENT LPAREN mayfailvartypeseq RPAREN EQUAL tprocess DOT lib . [ RBRACE PROCESS EQUIVALENCE ]
-- On RBRACE reduce production lib -> LET IDENT LPAREN mayfailvartypeseq RPAREN EQUAL tprocess DOT lib
-- On PROCESS reduce production lib -> LET IDENT LPAREN mayfailvartypeseq RPAREN EQUAL tprocess DOT lib
-- On EQUIVALENCE reduce production lib -> LET IDENT LPAREN mayfailvartypeseq RPAREN EQUAL tprocess DOT lib

State 712:
lib -> LET IDENT EQUAL . tprocess DOT lib [ RBRACE PROCESS EQUIVALENCE ]
-- On YIELD shift to state 418
-- On REPL shift to state 419
-- On PHASE shift to state 420
-- On OUT shift to state 423
-- On NEW shift to state 432
-- On LPAREN shift to state 438
-- On LET shift to state 439
-- On INT shift to state 444
-- On INSERT shift to state 445
-- On IN shift to state 451
-- On IF shift to state 458
-- On IDENT shift to state 461
-- On GET shift to state 481
-- On FOREACH shift to state 489
-- On EVENT shift to state 494
-- On BARRIER shift to state 503
-- On tprocess shift to state 713
-- On progbegin shift to state 511
-- On basicpattern shift to state 515

State 713:
lib -> LET IDENT EQUAL tprocess . DOT lib [ RBRACE PROCESS EQUIVALENCE ]
tprocess -> tprocess . BAR tprocess [ DOT BAR ]
-- On DOT shift to state 714
-- On BAR shift to state 513

State 714:
lib -> LET IDENT EQUAL tprocess DOT . lib [ RBRACE PROCESS EQUIVALENCE ]
-- On WEAKSECRET shift to state 1
-- On TYPE shift to state 4
-- On TABLE shift to state 14
-- On SET shift to state 22
-- On REDUCTION shift to state 27
-- On QUERY shift to state 39
-- On PROOF shift to state 126
-- On PROBA shift to state 146
-- On PREDICATE shift to state 149
-- On PARAM shift to state 156
-- On NOUNIF shift to state 160
-- On NOT shift to state 229
-- On NONINTERF shift to state 234
-- On LETFUN shift to state 276
-- On LET shift to state 412
-- On IMPLEMENTATION shift to state 547
-- On FUN shift to state 594
-- On FREE shift to state 611
-- On EXPAND shift to state 617
-- On EVENT shift to state 623
-- On EQUATION shift to state 629
-- On ELIMTRUE shift to state 637
-- On DEFINE shift to state 641
-- On CONST shift to state 647
-- On CLAUSES shift to state 653
-- On CHANNEL shift to state 655
-- On lib shift to state 715
-- On RBRACE reduce production lib -> 
-- On PROCESS reduce production lib -> 
-- On EQUIVALENCE reduce production lib -> 

State 715:
lib -> LET IDENT EQUAL tprocess DOT lib . [ RBRACE PROCESS EQUIVALENCE ]
-- On RBRACE reduce production lib -> LET IDENT EQUAL tprocess DOT lib
-- On PROCESS reduce production lib -> LET IDENT EQUAL tprocess DOT lib
-- On EQUIVALENCE reduce production lib -> LET IDENT EQUAL tprocess DOT lib

State 716:
lib -> LETFUN IDENT LPAREN mayfailvartypeseq RPAREN EQUAL pterm DOT lib . [ RBRACE PROCESS EQUIVALENCE ]
-- On RBRACE reduce production lib -> LETFUN IDENT LPAREN mayfailvartypeseq RPAREN EQUAL pterm DOT lib
-- On PROCESS reduce production lib -> LETFUN IDENT LPAREN mayfailvartypeseq RPAREN EQUAL pterm DOT lib
-- On EQUIVALENCE reduce production lib -> LETFUN IDENT LPAREN mayfailvartypeseq RPAREN EQUAL pterm DOT lib

State 717:
lib -> LETFUN IDENT EQUAL . pterm DOT lib [ RBRACE PROCESS EQUIVALENCE ]
-- On NOT shift to state 288
-- On NEW shift to state 290
-- On LPAREN shift to state 300
-- On LET shift to state 301
-- On INSERT shift to state 306
-- On IF shift to state 309
-- On IDENT shift to state 310
-- On GET shift to state 314
-- On EVENT shift to state 320
-- On CHOICE shift to state 323
-- On pterm shift to state 718
-- On basicpattern shift to state 332

State 718:
lib -> LETFUN IDENT EQUAL pterm . DOT lib [ RBRACE PROCESS EQUIVALENCE ]
pterm -> pterm . EQUAL pterm [ WEDGE OR EQUAL DOT DIFF ]
pterm -> pterm . DIFF pterm [ WEDGE OR EQUAL DOT DIFF ]
pterm -> pterm . OR pterm [ WEDGE OR EQUAL DOT DIFF ]
pterm -> pterm . WEDGE pterm [ WEDGE OR EQUAL DOT DIFF ]
-- On WEDGE shift to state 326
-- On OR shift to state 337
-- On EQUAL shift to state 328
-- On DOT shift to state 719
-- On DIFF shift to state 330

State 719:
lib -> LETFUN IDENT EQUAL pterm DOT . lib [ RBRACE PROCESS EQUIVALENCE ]
-- On WEAKSECRET shift to state 1
-- On TYPE shift to state 4
-- On TABLE shift to state 14
-- On SET shift to state 22
-- On REDUCTION shift to state 27
-- On QUERY shift to state 39
-- On PROOF shift to state 126
-- On PROBA shift to state 146
-- On PREDICATE shift to state 149
-- On PARAM shift to state 156
-- On NOUNIF shift to state 160
-- On NOT shift to state 229
-- On NONINTERF shift to state 234
-- On LETFUN shift to state 276
-- On LET shift to state 412
-- On IMPLEMENTATION shift to state 547
-- On FUN shift to state 594
-- On FREE shift to state 611
-- On EXPAND shift to state 617
-- On EVENT shift to state 623
-- On EQUATION shift to state 629
-- On ELIMTRUE shift to state 637
-- On DEFINE shift to state 641
-- On CONST shift to state 647
-- On CLAUSES shift to state 653
-- On CHANNEL shift to state 655
-- On lib shift to state 720
-- On RBRACE reduce production lib -> 
-- On PROCESS reduce production lib -> 
-- On EQUIVALENCE reduce production lib -> 

State 720:
lib -> LETFUN IDENT EQUAL pterm DOT lib . [ RBRACE PROCESS EQUIVALENCE ]
-- On RBRACE reduce production lib -> LETFUN IDENT EQUAL pterm DOT lib
-- On PROCESS reduce production lib -> LETFUN IDENT EQUAL pterm DOT lib
-- On EQUIVALENCE reduce production lib -> LETFUN IDENT EQUAL pterm DOT lib

State 721:
lib -> NONINTERF niseq DOT lib . [ RBRACE PROCESS EQUIVALENCE ]
-- On RBRACE reduce production lib -> NONINTERF niseq DOT lib
-- On PROCESS reduce production lib -> NONINTERF niseq DOT lib
-- On EQUIVALENCE reduce production lib -> NONINTERF niseq DOT lib

State 722:
niseq -> ni . COMMA niseq [ DOT ]
niseq -> ni . [ DOT ]
-- On COMMA shift to state 723
-- On DOT reduce production niseq -> ni

State 723:
niseq -> ni COMMA . niseq [ DOT ]
-- On IDENT shift to state 724
-- On niseq shift to state 725
-- On ni shift to state 722

State 724:
ni -> IDENT . AMONG LPAREN netermseq RPAREN [ DOT COMMA ]
ni -> IDENT . [ DOT COMMA ]
-- On AMONG shift to state 236
-- On DOT reduce production ni -> IDENT
-- On COMMA reduce production ni -> IDENT

State 725:
niseq -> ni COMMA niseq . [ DOT ]
-- On DOT reduce production niseq -> ni COMMA niseq

State 726:
lib -> NONINTERF nevartype . SEMI niseq DOT lib [ RBRACE PROCESS EQUIVALENCE ]
-- On SEMI shift to state 727

State 727:
lib -> NONINTERF nevartype SEMI . niseq DOT lib [ RBRACE PROCESS EQUIVALENCE ]
-- On IDENT shift to state 724
-- On niseq shift to state 728
-- On ni shift to state 722

State 728:
lib -> NONINTERF nevartype SEMI niseq . DOT lib [ RBRACE PROCESS EQUIVALENCE ]
-- On DOT shift to state 729

State 729:
lib -> NONINTERF nevartype SEMI niseq DOT . lib [ RBRACE PROCESS EQUIVALENCE ]
-- On WEAKSECRET shift to state 1
-- On TYPE shift to state 4
-- On TABLE shift to state 14
-- On SET shift to state 22
-- On REDUCTION shift to state 27
-- On QUERY shift to state 39
-- On PROOF shift to state 126
-- On PROBA shift to state 146
-- On PREDICATE shift to state 149
-- On PARAM shift to state 156
-- On NOUNIF shift to state 160
-- On NOT shift to state 229
-- On NONINTERF shift to state 234
-- On LETFUN shift to state 276
-- On LET shift to state 412
-- On IMPLEMENTATION shift to state 547
-- On FUN shift to state 594
-- On FREE shift to state 611
-- On EXPAND shift to state 617
-- On EVENT shift to state 623
-- On EQUATION shift to state 629
-- On ELIMTRUE shift to state 637
-- On DEFINE shift to state 641
-- On CONST shift to state 647
-- On CLAUSES shift to state 653
-- On CHANNEL shift to state 655
-- On lib shift to state 730
-- On RBRACE reduce production lib -> 
-- On PROCESS reduce production lib -> 
-- On EQUIVALENCE reduce production lib -> 

State 730:
lib -> NONINTERF nevartype SEMI niseq DOT lib . [ RBRACE PROCESS EQUIVALENCE ]
-- On RBRACE reduce production lib -> NONINTERF nevartype SEMI niseq DOT lib
-- On PROCESS reduce production lib -> NONINTERF nevartype SEMI niseq DOT lib
-- On EQUIVALENCE reduce production lib -> NONINTERF nevartype SEMI niseq DOT lib

State 731:
lib -> NOT nevartype SEMI gterm DOT lib . [ RBRACE PROCESS EQUIVALENCE ]
-- On RBRACE reduce production lib -> NOT nevartype SEMI gterm DOT lib
-- On PROCESS reduce production lib -> NOT nevartype SEMI gterm DOT lib
-- On EQUIVALENCE reduce production lib -> NOT nevartype SEMI gterm DOT lib

State 732:
gterm -> gterm . EQUAL gterm [ WEDGE OR EQUAL DOT DIFF BEFORE ]
gterm -> gterm . DIFF gterm [ WEDGE OR EQUAL DOT DIFF BEFORE ]
gterm -> gterm . OR gterm [ WEDGE OR EQUAL DOT DIFF BEFORE ]
gterm -> gterm . WEDGE gterm [ WEDGE OR EQUAL DOT DIFF BEFORE ]
gterm -> gterm . BEFORE gterm [ WEDGE OR EQUAL DOT DIFF BEFORE ]
lib -> NOT gterm . DOT lib [ RBRACE PROCESS EQUIVALENCE ]
-- On WEDGE shift to state 63
-- On OR shift to state 69
-- On EQUAL shift to state 65
-- On DOT shift to state 733
-- On DIFF shift to state 67
-- On BEFORE shift to state 74

State 733:
lib -> NOT gterm DOT . lib [ RBRACE PROCESS EQUIVALENCE ]
-- On WEAKSECRET shift to state 1
-- On TYPE shift to state 4
-- On TABLE shift to state 14
-- On SET shift to state 22
-- On REDUCTION shift to state 27
-- On QUERY shift to state 39
-- On PROOF shift to state 126
-- On PROBA shift to state 146
-- On PREDICATE shift to state 149
-- On PARAM shift to state 156
-- On NOUNIF shift to state 160
-- On NOT shift to state 229
-- On NONINTERF shift to state 234
-- On LETFUN shift to state 276
-- On LET shift to state 412
-- On IMPLEMENTATION shift to state 547
-- On FUN shift to state 594
-- On FREE shift to state 611
-- On EXPAND shift to state 617
-- On EVENT shift to state 623
-- On EQUATION shift to state 629
-- On ELIMTRUE shift to state 637
-- On DEFINE shift to state 641
-- On CONST shift to state 647
-- On CLAUSES shift to state 653
-- On CHANNEL shift to state 655
-- On lib shift to state 734
-- On RBRACE reduce production lib -> 
-- On PROCESS reduce production lib -> 
-- On EQUIVALENCE reduce production lib -> 

State 734:
lib -> NOT gterm DOT lib . [ RBRACE PROCESS EQUIVALENCE ]
-- On RBRACE reduce production lib -> NOT gterm DOT lib
-- On PROCESS reduce production lib -> NOT gterm DOT lib
-- On EQUIVALENCE reduce production lib -> NOT gterm DOT lib

State 735:
lib -> NOUNIF tfnebindingseq DOT lib . [ RBRACE PROCESS EQUIVALENCE ]
-- On RBRACE reduce production lib -> NOUNIF tfnebindingseq DOT lib
-- On PROCESS reduce production lib -> NOUNIF tfnebindingseq DOT lib
-- On EQUIVALENCE reduce production lib -> NOUNIF tfnebindingseq DOT lib

State 736:
lib -> NOUNIF nevartype . SEMI tfnebindingseq DOT lib [ RBRACE PROCESS EQUIVALENCE ]
-- On SEMI shift to state 737

State 737:
lib -> NOUNIF nevartype SEMI . tfnebindingseq DOT lib [ RBRACE PROCESS EQUIVALENCE ]
-- On TABLE shift to state 161
-- On LET shift to state 213
-- On IDENT shift to state 218
-- On tfnebindingseq shift to state 738

State 738:
lib -> NOUNIF nevartype SEMI tfnebindingseq . DOT lib [ RBRACE PROCESS EQUIVALENCE ]
-- On DOT shift to state 739

State 739:
lib -> NOUNIF nevartype SEMI tfnebindingseq DOT . lib [ RBRACE PROCESS EQUIVALENCE ]
-- On WEAKSECRET shift to state 1
-- On TYPE shift to state 4
-- On TABLE shift to state 14
-- On SET shift to state 22
-- On REDUCTION shift to state 27
-- On QUERY shift to state 39
-- On PROOF shift to state 126
-- On PROBA shift to state 146
-- On PREDICATE shift to state 149
-- On PARAM shift to state 156
-- On NOUNIF shift to state 160
-- On NOT shift to state 229
-- On NONINTERF shift to state 234
-- On LETFUN shift to state 276
-- On LET shift to state 412
-- On IMPLEMENTATION shift to state 547
-- On FUN shift to state 594
-- On FREE shift to state 611
-- On EXPAND shift to state 617
-- On EVENT shift to state 623
-- On EQUATION shift to state 629
-- On ELIMTRUE shift to state 637
-- On DEFINE shift to state 641
-- On CONST shift to state 647
-- On CLAUSES shift to state 653
-- On CHANNEL shift to state 655
-- On lib shift to state 740
-- On RBRACE reduce production lib -> 
-- On PROCESS reduce production lib -> 
-- On EQUIVALENCE reduce production lib -> 

State 740:
lib -> NOUNIF nevartype SEMI tfnebindingseq DOT lib . [ RBRACE PROCESS EQUIVALENCE ]
-- On RBRACE reduce production lib -> NOUNIF nevartype SEMI tfnebindingseq DOT lib
-- On PROCESS reduce production lib -> NOUNIF nevartype SEMI tfnebindingseq DOT lib
-- On EQUIVALENCE reduce production lib -> NOUNIF nevartype SEMI tfnebindingseq DOT lib

State 741:
lib -> PARAM neidentseq options DOT lib . [ RBRACE PROCESS EQUIVALENCE ]
-- On RBRACE reduce production lib -> PARAM neidentseq options DOT lib
-- On PROCESS reduce production lib -> PARAM neidentseq options DOT lib
-- On EQUIVALENCE reduce production lib -> PARAM neidentseq options DOT lib

State 742:
lib -> PREDICATE IDENT LPAREN typeidseq RPAREN options DOT lib . [ RBRACE PROCESS EQUIVALENCE ]
-- On RBRACE reduce production lib -> PREDICATE IDENT LPAREN typeidseq RPAREN options DOT lib
-- On PROCESS reduce production lib -> PREDICATE IDENT LPAREN typeidseq RPAREN options DOT lib
-- On EQUIVALENCE reduce production lib -> PREDICATE IDENT LPAREN typeidseq RPAREN options DOT lib

State 743:
lib -> PREDICATE IDENT options . DOT lib [ RBRACE PROCESS EQUIVALENCE ]
-- On DOT shift to state 744

State 744:
lib -> PREDICATE IDENT options DOT . lib [ RBRACE PROCESS EQUIVALENCE ]
-- On WEAKSECRET shift to state 1
-- On TYPE shift to state 4
-- On TABLE shift to state 14
-- On SET shift to state 22
-- On REDUCTION shift to state 27
-- On QUERY shift to state 39
-- On PROOF shift to state 126
-- On PROBA shift to state 146
-- On PREDICATE shift to state 149
-- On PARAM shift to state 156
-- On NOUNIF shift to state 160
-- On NOT shift to state 229
-- On NONINTERF shift to state 234
-- On LETFUN shift to state 276
-- On LET shift to state 412
-- On IMPLEMENTATION shift to state 547
-- On FUN shift to state 594
-- On FREE shift to state 611
-- On EXPAND shift to state 617
-- On EVENT shift to state 623
-- On EQUATION shift to state 629
-- On ELIMTRUE shift to state 637
-- On DEFINE shift to state 641
-- On CONST shift to state 647
-- On CLAUSES shift to state 653
-- On CHANNEL shift to state 655
-- On lib shift to state 745
-- On RBRACE reduce production lib -> 
-- On PROCESS reduce production lib -> 
-- On EQUIVALENCE reduce production lib -> 

State 745:
lib -> PREDICATE IDENT options DOT lib . [ RBRACE PROCESS EQUIVALENCE ]
-- On RBRACE reduce production lib -> PREDICATE IDENT options DOT lib
-- On PROCESS reduce production lib -> PREDICATE IDENT options DOT lib
-- On EQUIVALENCE reduce production lib -> PREDICATE IDENT options DOT lib

State 746:
lib -> PROBA IDENT DOT lib . [ RBRACE PROCESS EQUIVALENCE ]
-- On RBRACE reduce production lib -> PROBA IDENT DOT lib
-- On PROCESS reduce production lib -> PROBA IDENT DOT lib
-- On EQUIVALENCE reduce production lib -> PROBA IDENT DOT lib

State 747:
lib -> PROOF LBRACE proof RBRACE lib . [ RBRACE PROCESS EQUIVALENCE ]
-- On RBRACE reduce production lib -> PROOF LBRACE proof RBRACE lib
-- On PROCESS reduce production lib -> PROOF LBRACE proof RBRACE lib
-- On EQUIVALENCE reduce production lib -> PROOF LBRACE proof RBRACE lib

State 748:
lib -> QUERY tqueryseq DOT lib . [ RBRACE PROCESS EQUIVALENCE ]
-- On RBRACE reduce production lib -> QUERY tqueryseq DOT lib
-- On PROCESS reduce production lib -> QUERY tqueryseq DOT lib
-- On EQUIVALENCE reduce production lib -> QUERY tqueryseq DOT lib

State 749:
tqueryseq -> tquery . SEMI tqueryseq [ DOT ]
tqueryseq -> tquery . [ DOT ]
-- On SEMI shift to state 750
-- On DOT reduce production tqueryseq -> tquery

State 750:
tqueryseq -> tquery SEMI . tqueryseq [ DOT ]
-- On TABLE shift to state 40
-- On SECRET shift to state 110
-- On PUTBEGIN shift to state 116
-- On NOT shift to state 42
-- On NEW shift to state 44
-- On LPAREN shift to state 50
-- On LET shift to state 51
-- On INJEVENT shift to state 54
-- On IDENT shift to state 56
-- On EVENT shift to state 58
-- On CHOICE shift to state 60
-- On tqueryseq shift to state 751
-- On tquery shift to state 749
-- On gterm shift to state 752

State 751:
tqueryseq -> tquery SEMI tqueryseq . [ DOT ]
-- On DOT reduce production tqueryseq -> tquery SEMI tqueryseq

State 752:
gterm -> gterm . EQUAL gterm [ WEDGE SEMI PUBLICVARS OR EQUAL DOT DIFF BEFORE ]
gterm -> gterm . DIFF gterm [ WEDGE SEMI PUBLICVARS OR EQUAL DOT DIFF BEFORE ]
gterm -> gterm . OR gterm [ WEDGE SEMI PUBLICVARS OR EQUAL DOT DIFF BEFORE ]
gterm -> gterm . WEDGE gterm [ WEDGE SEMI PUBLICVARS OR EQUAL DOT DIFF BEFORE ]
gterm -> gterm . BEFORE gterm [ WEDGE SEMI PUBLICVARS OR EQUAL DOT DIFF BEFORE ]
tquery -> gterm . optpublicvars [ SEMI DOT ]
-- On WEDGE shift to state 63
-- On PUBLICVARS shift to state 112
-- On OR shift to state 69
-- On EQUAL shift to state 65
-- On DIFF shift to state 67
-- On BEFORE shift to state 74
-- On optpublicvars shift to state 753
-- On SEMI reduce production optpublicvars -> 
-- On DOT reduce production optpublicvars -> 

State 753:
tquery -> gterm optpublicvars . [ SEMI DOT ]
-- On SEMI reduce production tquery -> gterm optpublicvars
-- On DOT reduce production tquery -> gterm optpublicvars

State 754:
lib -> QUERY nevartype . SEMI tqueryseq DOT lib [ RBRACE PROCESS EQUIVALENCE ]
-- On SEMI shift to state 755

State 755:
lib -> QUERY nevartype SEMI . tqueryseq DOT lib [ RBRACE PROCESS EQUIVALENCE ]
-- On TABLE shift to state 40
-- On SECRET shift to state 110
-- On PUTBEGIN shift to state 116
-- On NOT shift to state 42
-- On NEW shift to state 44
-- On LPAREN shift to state 50
-- On LET shift to state 51
-- On INJEVENT shift to state 54
-- On IDENT shift to state 56
-- On EVENT shift to state 58
-- On CHOICE shift to state 60
-- On tqueryseq shift to state 756
-- On tquery shift to state 749
-- On gterm shift to state 752

State 756:
lib -> QUERY nevartype SEMI tqueryseq . DOT lib [ RBRACE PROCESS EQUIVALENCE ]
-- On DOT shift to state 757

State 757:
lib -> QUERY nevartype SEMI tqueryseq DOT . lib [ RBRACE PROCESS EQUIVALENCE ]
-- On WEAKSECRET shift to state 1
-- On TYPE shift to state 4
-- On TABLE shift to state 14
-- On SET shift to state 22
-- On REDUCTION shift to state 27
-- On QUERY shift to state 39
-- On PROOF shift to state 126
-- On PROBA shift to state 146
-- On PREDICATE shift to state 149
-- On PARAM shift to state 156
-- On NOUNIF shift to state 160
-- On NOT shift to state 229
-- On NONINTERF shift to state 234
-- On LETFUN shift to state 276
-- On LET shift to state 412
-- On IMPLEMENTATION shift to state 547
-- On FUN shift to state 594
-- On FREE shift to state 611
-- On EXPAND shift to state 617
-- On EVENT shift to state 623
-- On EQUATION shift to state 629
-- On ELIMTRUE shift to state 637
-- On DEFINE shift to state 641
-- On CONST shift to state 647
-- On CLAUSES shift to state 653
-- On CHANNEL shift to state 655
-- On lib shift to state 758
-- On RBRACE reduce production lib -> 
-- On PROCESS reduce production lib -> 
-- On EQUIVALENCE reduce production lib -> 

State 758:
lib -> QUERY nevartype SEMI tqueryseq DOT lib . [ RBRACE PROCESS EQUIVALENCE ]
-- On RBRACE reduce production lib -> QUERY nevartype SEMI tqueryseq DOT lib
-- On PROCESS reduce production lib -> QUERY nevartype SEMI tqueryseq DOT lib
-- On EQUIVALENCE reduce production lib -> QUERY nevartype SEMI tqueryseq DOT lib

State 759:
lib -> REDUCTION treduc options DOT lib . [ RBRACE PROCESS EQUIVALENCE ]
-- On RBRACE reduce production lib -> REDUCTION treduc options DOT lib
-- On PROCESS reduce production lib -> REDUCTION treduc options DOT lib
-- On EQUIVALENCE reduce production lib -> REDUCTION treduc options DOT lib

State 760:
treduc -> forallvartype . term EQUAL term SEMI treduc [ LBRACKET DOT ]
treduc -> forallvartype . term EQUAL term [ LBRACKET DOT ]
-- On PROJECTION shift to state 238
-- On NOT shift to state 240
-- On LPAREN shift to state 242
-- On IDENT shift to state 243
-- On FAIL shift to state 245
-- On CHOICE shift to state 246
-- On term shift to state 761

State 761:
term -> term . EQUAL term [ WEDGE OR EQUAL DIFF ]
term -> term . DIFF term [ WEDGE OR EQUAL DIFF ]
term -> term . OR term [ WEDGE OR EQUAL DIFF ]
term -> term . WEDGE term [ WEDGE OR EQUAL DIFF ]
treduc -> forallvartype term . EQUAL term SEMI treduc [ LBRACKET DOT ]
treduc -> forallvartype term . EQUAL term [ LBRACKET DOT ]
-- On WEDGE shift to state 249
-- On OR shift to state 255
-- On EQUAL shift to state 762
-- On DIFF shift to state 253

State 762:
term -> term EQUAL . term [ WEDGE OR EQUAL DIFF ]
treduc -> forallvartype term EQUAL . term SEMI treduc [ LBRACKET DOT ]
treduc -> forallvartype term EQUAL . term [ LBRACKET DOT ]
-- On PROJECTION shift to state 238
-- On NOT shift to state 240
-- On LPAREN shift to state 242
-- On IDENT shift to state 243
-- On FAIL shift to state 245
-- On CHOICE shift to state 246
-- On term shift to state 763

State 763:
term -> term . EQUAL term [ WEDGE SEMI OR LBRACKET EQUAL DOT DIFF ]
term -> term EQUAL term . [ WEDGE OR EQUAL DIFF ]
term -> term . DIFF term [ WEDGE SEMI OR LBRACKET EQUAL DOT DIFF ]
term -> term . OR term [ WEDGE SEMI OR LBRACKET EQUAL DOT DIFF ]
term -> term . WEDGE term [ WEDGE SEMI OR LBRACKET EQUAL DOT DIFF ]
treduc -> forallvartype term EQUAL term . SEMI treduc [ LBRACKET DOT ]
treduc -> forallvartype term EQUAL term . [ LBRACKET DOT ]
-- On SEMI shift to state 764
-- On DIFF shift to state 253
-- On WEDGE reduce production term -> term EQUAL term
-- On OR reduce production term -> term EQUAL term
-- On LBRACKET reduce production treduc -> forallvartype term EQUAL term
-- On DOT reduce production treduc -> forallvartype term EQUAL term

State 764:
treduc -> forallvartype term EQUAL term SEMI . treduc [ LBRACKET DOT ]
-- On FORALL shift to state 28
-- On treduc shift to state 765
-- On forallvartype shift to state 760
-- On PROJECTION reduce production forallvartype -> 
-- On NOT reduce production forallvartype -> 
-- On LPAREN reduce production forallvartype -> 
-- On IDENT reduce production forallvartype -> 
-- On FAIL reduce production forallvartype -> 
-- On CHOICE reduce production forallvartype -> 

State 765:
treduc -> forallvartype term EQUAL term SEMI treduc . [ LBRACKET DOT ]
-- On LBRACKET reduce production treduc -> forallvartype term EQUAL term SEMI treduc
-- On DOT reduce production treduc -> forallvartype term EQUAL term SEMI treduc

State 766:
lib -> SET IDENT EQUAL STRING DOT lib . [ RBRACE PROCESS EQUIVALENCE ]
-- On RBRACE reduce production lib -> SET IDENT EQUAL STRING DOT lib
-- On PROCESS reduce production lib -> SET IDENT EQUAL STRING DOT lib
-- On EQUIVALENCE reduce production lib -> SET IDENT EQUAL STRING DOT lib

State 767:
lib -> SET IDENT EQUAL INT . DOT lib [ RBRACE PROCESS EQUIVALENCE ]
-- On DOT shift to state 768

State 768:
lib -> SET IDENT EQUAL INT DOT . lib [ RBRACE PROCESS EQUIVALENCE ]
-- On WEAKSECRET shift to state 1
-- On TYPE shift to state 4
-- On TABLE shift to state 14
-- On SET shift to state 22
-- On REDUCTION shift to state 27
-- On QUERY shift to state 39
-- On PROOF shift to state 126
-- On PROBA shift to state 146
-- On PREDICATE shift to state 149
-- On PARAM shift to state 156
-- On NOUNIF shift to state 160
-- On NOT shift to state 229
-- On NONINTERF shift to state 234
-- On LETFUN shift to state 276
-- On LET shift to state 412
-- On IMPLEMENTATION shift to state 547
-- On FUN shift to state 594
-- On FREE shift to state 611
-- On EXPAND shift to state 617
-- On EVENT shift to state 623
-- On EQUATION shift to state 629
-- On ELIMTRUE shift to state 637
-- On DEFINE shift to state 641
-- On CONST shift to state 647
-- On CLAUSES shift to state 653
-- On CHANNEL shift to state 655
-- On lib shift to state 769
-- On RBRACE reduce production lib -> 
-- On PROCESS reduce production lib -> 
-- On EQUIVALENCE reduce production lib -> 

State 769:
lib -> SET IDENT EQUAL INT DOT lib . [ RBRACE PROCESS EQUIVALENCE ]
-- On RBRACE reduce production lib -> SET IDENT EQUAL INT DOT lib
-- On PROCESS reduce production lib -> SET IDENT EQUAL INT DOT lib
-- On EQUIVALENCE reduce production lib -> SET IDENT EQUAL INT DOT lib

State 770:
lib -> SET IDENT EQUAL IDENT . DOT lib [ RBRACE PROCESS EQUIVALENCE ]
-- On DOT shift to state 771

State 771:
lib -> SET IDENT EQUAL IDENT DOT . lib [ RBRACE PROCESS EQUIVALENCE ]
-- On WEAKSECRET shift to state 1
-- On TYPE shift to state 4
-- On TABLE shift to state 14
-- On SET shift to state 22
-- On REDUCTION shift to state 27
-- On QUERY shift to state 39
-- On PROOF shift to state 126
-- On PROBA shift to state 146
-- On PREDICATE shift to state 149
-- On PARAM shift to state 156
-- On NOUNIF shift to state 160
-- On NOT shift to state 229
-- On NONINTERF shift to state 234
-- On LETFUN shift to state 276
-- On LET shift to state 412
-- On IMPLEMENTATION shift to state 547
-- On FUN shift to state 594
-- On FREE shift to state 611
-- On EXPAND shift to state 617
-- On EVENT shift to state 623
-- On EQUATION shift to state 629
-- On ELIMTRUE shift to state 637
-- On DEFINE shift to state 641
-- On CONST shift to state 647
-- On CLAUSES shift to state 653
-- On CHANNEL shift to state 655
-- On lib shift to state 772
-- On RBRACE reduce production lib -> 
-- On PROCESS reduce production lib -> 
-- On EQUIVALENCE reduce production lib -> 

State 772:
lib -> SET IDENT EQUAL IDENT DOT lib . [ RBRACE PROCESS EQUIVALENCE ]
-- On RBRACE reduce production lib -> SET IDENT EQUAL IDENT DOT lib
-- On PROCESS reduce production lib -> SET IDENT EQUAL IDENT DOT lib
-- On EQUIVALENCE reduce production lib -> SET IDENT EQUAL IDENT DOT lib

State 773:
lib -> TABLE IDENT LPAREN typeidseq RPAREN DOT lib . [ RBRACE PROCESS EQUIVALENCE ]
-- On RBRACE reduce production lib -> TABLE IDENT LPAREN typeidseq RPAREN DOT lib
-- On PROCESS reduce production lib -> TABLE IDENT LPAREN typeidseq RPAREN DOT lib
-- On EQUIVALENCE reduce production lib -> TABLE IDENT LPAREN typeidseq RPAREN DOT lib

State 774:
lib -> TYPE IDENT options DOT lib . [ RBRACE PROCESS EQUIVALENCE ]
-- On RBRACE reduce production lib -> TYPE IDENT options DOT lib
-- On PROCESS reduce production lib -> TYPE IDENT options DOT lib
-- On EQUIVALENCE reduce production lib -> TYPE IDENT options DOT lib

State 775:
lib -> WEAKSECRET IDENT DOT lib . [ RBRACE PROCESS EQUIVALENCE ]
-- On RBRACE reduce production lib -> WEAKSECRET IDENT DOT lib
-- On PROCESS reduce production lib -> WEAKSECRET IDENT DOT lib
-- On EQUIVALENCE reduce production lib -> WEAKSECRET IDENT DOT lib

State 776:
all -> lib . PROCESS tprocess EOF [ # ]
all -> lib . EQUIVALENCE tprocess tprocess EOF [ # ]
-- On PROCESS shift to state 777
-- On EQUIVALENCE shift to state 780

State 777:
all -> lib PROCESS . tprocess EOF [ # ]
-- On YIELD shift to state 418
-- On REPL shift to state 419
-- On PHASE shift to state 420
-- On OUT shift to state 423
-- On NEW shift to state 432
-- On LPAREN shift to state 438
-- On LET shift to state 439
-- On INT shift to state 444
-- On INSERT shift to state 445
-- On IN shift to state 451
-- On IF shift to state 458
-- On IDENT shift to state 461
-- On GET shift to state 481
-- On FOREACH shift to state 489
-- On EVENT shift to state 494
-- On BARRIER shift to state 503
-- On tprocess shift to state 778
-- On progbegin shift to state 511
-- On basicpattern shift to state 515

State 778:
all -> lib PROCESS tprocess . EOF [ # ]
tprocess -> tprocess . BAR tprocess [ EOF BAR ]
-- On EOF shift to state 779
-- On BAR shift to state 513

State 779:
all -> lib PROCESS tprocess EOF . [ # ]
-- On # reduce production all -> lib PROCESS tprocess EOF

State 780:
all -> lib EQUIVALENCE . tprocess tprocess EOF [ # ]
-- On YIELD shift to state 418
-- On REPL shift to state 419
-- On PHASE shift to state 420
-- On OUT shift to state 423
-- On NEW shift to state 432
-- On LPAREN shift to state 438
-- On LET shift to state 439
-- On INT shift to state 444
-- On INSERT shift to state 445
-- On IN shift to state 451
-- On IF shift to state 458
-- On IDENT shift to state 461
-- On GET shift to state 481
-- On FOREACH shift to state 489
-- On EVENT shift to state 494
-- On BARRIER shift to state 503
-- On tprocess shift to state 781
-- On progbegin shift to state 511
-- On basicpattern shift to state 515

State 781:
all -> lib EQUIVALENCE tprocess . tprocess EOF [ # ]
tprocess -> tprocess . BAR tprocess [ YIELD REPL PHASE OUT NEW LPAREN LET INT INSERT IN IF IDENT GET FOREACH EVENT BARRIER BAR ]
-- On YIELD shift to state 418
-- On REPL shift to state 419
-- On PHASE shift to state 420
-- On OUT shift to state 423
-- On NEW shift to state 432
-- On LPAREN shift to state 438
-- On LET shift to state 439
-- On INT shift to state 444
-- On INSERT shift to state 445
-- On IN shift to state 451
-- On IF shift to state 458
-- On IDENT shift to state 461
-- On GET shift to state 481
-- On FOREACH shift to state 489
-- On EVENT shift to state 494
-- On BARRIER shift to state 503
-- On BAR shift to state 513
-- On tprocess shift to state 782
-- On progbegin shift to state 511
-- On basicpattern shift to state 515

State 782:
all -> lib EQUIVALENCE tprocess tprocess . EOF [ # ]
tprocess -> tprocess . BAR tprocess [ EOF BAR ]
-- On EOF shift to state 783
-- On BAR shift to state 513

State 783:
all -> lib EQUIVALENCE tprocess tprocess EOF . [ # ]
-- On # reduce production all -> lib EQUIVALENCE tprocess tprocess EOF

State 784:
all' -> all . [ # ]
-- On # accept all

State 785:
lib' -> . lib [ # ]
-- On WEAKSECRET shift to state 786
-- On TYPE shift to state 789
-- On TABLE shift to state 793
-- On SET shift to state 799
-- On REDUCTION shift to state 804
-- On QUERY shift to state 808
-- On PROOF shift to state 811
-- On PROBA shift to state 815
-- On PREDICATE shift to state 818
-- On PARAM shift to state 825
-- On NOUNIF shift to state 829
-- On NOT shift to state 832
-- On NONINTERF shift to state 837
-- On LETFUN shift to state 840
-- On LET shift to state 848
-- On IMPLEMENTATION shift to state 856
-- On FUN shift to state 859
-- On FREE shift to state 870
-- On EXPAND shift to state 876
-- On EVENT shift to state 882
-- On EQUATION shift to state 888
-- On ELIMTRUE shift to state 892
-- On DEFINE shift to state 895
-- On CONST shift to state 903
-- On CLAUSES shift to state 909
-- On CHANNEL shift to state 911
-- On lib shift to state 985
-- On # reduce production lib -> 

State 786:
lib -> WEAKSECRET . IDENT DOT lib [ # ]
-- On IDENT shift to state 787

State 787:
lib -> WEAKSECRET IDENT . DOT lib [ # ]
-- On DOT shift to state 788

State 788:
lib -> WEAKSECRET IDENT DOT . lib [ # ]
-- On WEAKSECRET shift to state 786
-- On TYPE shift to state 789
-- On TABLE shift to state 793
-- On SET shift to state 799
-- On REDUCTION shift to state 804
-- On QUERY shift to state 808
-- On PROOF shift to state 811
-- On PROBA shift to state 815
-- On PREDICATE shift to state 818
-- On PARAM shift to state 825
-- On NOUNIF shift to state 829
-- On NOT shift to state 832
-- On NONINTERF shift to state 837
-- On LETFUN shift to state 840
-- On LET shift to state 848
-- On IMPLEMENTATION shift to state 856
-- On FUN shift to state 859
-- On FREE shift to state 870
-- On EXPAND shift to state 876
-- On EVENT shift to state 882
-- On EQUATION shift to state 888
-- On ELIMTRUE shift to state 892
-- On DEFINE shift to state 895
-- On CONST shift to state 903
-- On CLAUSES shift to state 909
-- On CHANNEL shift to state 911
-- On lib shift to state 984
-- On # reduce production lib -> 

State 789:
lib -> TYPE . IDENT options DOT lib [ # ]
-- On IDENT shift to state 790

State 790:
lib -> TYPE IDENT . options DOT lib [ # ]
-- On LBRACKET shift to state 6
-- On options shift to state 791
-- On DOT reduce production options -> 

State 791:
lib -> TYPE IDENT options . DOT lib [ # ]
-- On DOT shift to state 792

State 792:
lib -> TYPE IDENT options DOT . lib [ # ]
-- On WEAKSECRET shift to state 786
-- On TYPE shift to state 789
-- On TABLE shift to state 793
-- On SET shift to state 799
-- On REDUCTION shift to state 804
-- On QUERY shift to state 808
-- On PROOF shift to state 811
-- On PROBA shift to state 815
-- On PREDICATE shift to state 818
-- On PARAM shift to state 825
-- On NOUNIF shift to state 829
-- On NOT shift to state 832
-- On NONINTERF shift to state 837
-- On LETFUN shift to state 840
-- On LET shift to state 848
-- On IMPLEMENTATION shift to state 856
-- On FUN shift to state 859
-- On FREE shift to state 870
-- On EXPAND shift to state 876
-- On EVENT shift to state 882
-- On EQUATION shift to state 888
-- On ELIMTRUE shift to state 892
-- On DEFINE shift to state 895
-- On CONST shift to state 903
-- On CLAUSES shift to state 909
-- On CHANNEL shift to state 911
-- On lib shift to state 983
-- On # reduce production lib -> 

State 793:
lib -> TABLE . IDENT LPAREN typeidseq RPAREN DOT lib [ # ]
-- On IDENT shift to state 794

State 794:
lib -> TABLE IDENT . LPAREN typeidseq RPAREN DOT lib [ # ]
-- On LPAREN shift to state 795

State 795:
lib -> TABLE IDENT LPAREN . typeidseq RPAREN DOT lib [ # ]
-- On IDENT shift to state 17
-- On CHANNEL shift to state 18
-- On typeidseq shift to state 796
-- On typeid shift to state 676
-- On netypeidseq shift to state 679
-- On RPAREN reduce production typeidseq -> 

State 796:
lib -> TABLE IDENT LPAREN typeidseq . RPAREN DOT lib [ # ]
-- On RPAREN shift to state 797

State 797:
lib -> TABLE IDENT LPAREN typeidseq RPAREN . DOT lib [ # ]
-- On DOT shift to state 798

State 798:
lib -> TABLE IDENT LPAREN typeidseq RPAREN DOT . lib [ # ]
-- On WEAKSECRET shift to state 786
-- On TYPE shift to state 789
-- On TABLE shift to state 793
-- On SET shift to state 799
-- On REDUCTION shift to state 804
-- On QUERY shift to state 808
-- On PROOF shift to state 811
-- On PROBA shift to state 815
-- On PREDICATE shift to state 818
-- On PARAM shift to state 825
-- On NOUNIF shift to state 829
-- On NOT shift to state 832
-- On NONINTERF shift to state 837
-- On LETFUN shift to state 840
-- On LET shift to state 848
-- On IMPLEMENTATION shift to state 856
-- On FUN shift to state 859
-- On FREE shift to state 870
-- On EXPAND shift to state 876
-- On EVENT shift to state 882
-- On EQUATION shift to state 888
-- On ELIMTRUE shift to state 892
-- On DEFINE shift to state 895
-- On CONST shift to state 903
-- On CLAUSES shift to state 909
-- On CHANNEL shift to state 911
-- On lib shift to state 982
-- On # reduce production lib -> 

State 799:
lib -> SET . IDENT EQUAL IDENT DOT lib [ # ]
lib -> SET . IDENT EQUAL STRING DOT lib [ # ]
lib -> SET . IDENT EQUAL INT DOT lib [ # ]
-- On IDENT shift to state 800

State 800:
lib -> SET IDENT . EQUAL IDENT DOT lib [ # ]
lib -> SET IDENT . EQUAL STRING DOT lib [ # ]
lib -> SET IDENT . EQUAL INT DOT lib [ # ]
-- On EQUAL shift to state 801

State 801:
lib -> SET IDENT EQUAL . IDENT DOT lib [ # ]
lib -> SET IDENT EQUAL . STRING DOT lib [ # ]
lib -> SET IDENT EQUAL . INT DOT lib [ # ]
-- On STRING shift to state 802
-- On INT shift to state 976
-- On IDENT shift to state 979

State 802:
lib -> SET IDENT EQUAL STRING . DOT lib [ # ]
-- On DOT shift to state 803

State 803:
lib -> SET IDENT EQUAL STRING DOT . lib [ # ]
-- On WEAKSECRET shift to state 786
-- On TYPE shift to state 789
-- On TABLE shift to state 793
-- On SET shift to state 799
-- On REDUCTION shift to state 804
-- On QUERY shift to state 808
-- On PROOF shift to state 811
-- On PROBA shift to state 815
-- On PREDICATE shift to state 818
-- On PARAM shift to state 825
-- On NOUNIF shift to state 829
-- On NOT shift to state 832
-- On NONINTERF shift to state 837
-- On LETFUN shift to state 840
-- On LET shift to state 848
-- On IMPLEMENTATION shift to state 856
-- On FUN shift to state 859
-- On FREE shift to state 870
-- On EXPAND shift to state 876
-- On EVENT shift to state 882
-- On EQUATION shift to state 888
-- On ELIMTRUE shift to state 892
-- On DEFINE shift to state 895
-- On CONST shift to state 903
-- On CLAUSES shift to state 909
-- On CHANNEL shift to state 911
-- On lib shift to state 975
-- On # reduce production lib -> 

State 804:
lib -> REDUCTION . treduc options DOT lib [ # ]
-- On FORALL shift to state 28
-- On treduc shift to state 805
-- On forallvartype shift to state 760
-- On PROJECTION reduce production forallvartype -> 
-- On NOT reduce production forallvartype -> 
-- On LPAREN reduce production forallvartype -> 
-- On IDENT reduce production forallvartype -> 
-- On FAIL reduce production forallvartype -> 
-- On CHOICE reduce production forallvartype -> 

State 805:
lib -> REDUCTION treduc . options DOT lib [ # ]
-- On LBRACKET shift to state 6
-- On options shift to state 806
-- On DOT reduce production options -> 

State 806:
lib -> REDUCTION treduc options . DOT lib [ # ]
-- On DOT shift to state 807

State 807:
lib -> REDUCTION treduc options DOT . lib [ # ]
-- On WEAKSECRET shift to state 786
-- On TYPE shift to state 789
-- On TABLE shift to state 793
-- On SET shift to state 799
-- On REDUCTION shift to state 804
-- On QUERY shift to state 808
-- On PROOF shift to state 811
-- On PROBA shift to state 815
-- On PREDICATE shift to state 818
-- On PARAM shift to state 825
-- On NOUNIF shift to state 829
-- On NOT shift to state 832
-- On NONINTERF shift to state 837
-- On LETFUN shift to state 840
-- On LET shift to state 848
-- On IMPLEMENTATION shift to state 856
-- On FUN shift to state 859
-- On FREE shift to state 870
-- On EXPAND shift to state 876
-- On EVENT shift to state 882
-- On EQUATION shift to state 888
-- On ELIMTRUE shift to state 892
-- On DEFINE shift to state 895
-- On CONST shift to state 903
-- On CLAUSES shift to state 909
-- On CHANNEL shift to state 911
-- On lib shift to state 974
-- On # reduce production lib -> 

State 808:
lib -> QUERY . nevartype SEMI tqueryseq DOT lib [ # ]
lib -> QUERY . tqueryseq DOT lib [ # ]
-- On TABLE shift to state 40
-- On SECRET shift to state 110
-- On PUTBEGIN shift to state 116
-- On NOT shift to state 42
-- On NEW shift to state 44
-- On LPAREN shift to state 50
-- On LET shift to state 51
-- On INJEVENT shift to state 54
-- On IDENT shift to state 123
-- On EVENT shift to state 58
-- On CHOICE shift to state 60
-- On tqueryseq shift to state 809
-- On tquery shift to state 749
-- On nevartype shift to state 969
-- On gterm shift to state 752

State 809:
lib -> QUERY tqueryseq . DOT lib [ # ]
-- On DOT shift to state 810

State 810:
lib -> QUERY tqueryseq DOT . lib [ # ]
-- On WEAKSECRET shift to state 786
-- On TYPE shift to state 789
-- On TABLE shift to state 793
-- On SET shift to state 799
-- On REDUCTION shift to state 804
-- On QUERY shift to state 808
-- On PROOF shift to state 811
-- On PROBA shift to state 815
-- On PREDICATE shift to state 818
-- On PARAM shift to state 825
-- On NOUNIF shift to state 829
-- On NOT shift to state 832
-- On NONINTERF shift to state 837
-- On LETFUN shift to state 840
-- On LET shift to state 848
-- On IMPLEMENTATION shift to state 856
-- On FUN shift to state 859
-- On FREE shift to state 870
-- On EXPAND shift to state 876
-- On EVENT shift to state 882
-- On EQUATION shift to state 888
-- On ELIMTRUE shift to state 892
-- On DEFINE shift to state 895
-- On CONST shift to state 903
-- On CLAUSES shift to state 909
-- On CHANNEL shift to state 911
-- On lib shift to state 968
-- On # reduce production lib -> 

State 811:
lib -> PROOF . LBRACE proof RBRACE lib [ # ]
-- On LBRACE shift to state 812

State 812:
lib -> PROOF LBRACE . proof RBRACE lib [ # ]
-- On STRING shift to state 128
-- On STAR shift to state 129
-- On SET shift to state 130
-- On RPAREN shift to state 131
-- On LPAREN shift to state 132
-- On INT shift to state 133
-- On INSERT shift to state 134
-- On IDENT shift to state 135
-- On EQUAL shift to state 136
-- On DOT shift to state 137
-- On COMMA shift to state 138
-- On prooftoken shift to state 139
-- On proofcommand shift to state 141
-- On proof shift to state 813

State 813:
lib -> PROOF LBRACE proof . RBRACE lib [ # ]
-- On RBRACE shift to state 814

State 814:
lib -> PROOF LBRACE proof RBRACE . lib [ # ]
-- On WEAKSECRET shift to state 786
-- On TYPE shift to state 789
-- On TABLE shift to state 793
-- On SET shift to state 799
-- On REDUCTION shift to state 804
-- On QUERY shift to state 808
-- On PROOF shift to state 811
-- On PROBA shift to state 815
-- On PREDICATE shift to state 818
-- On PARAM shift to state 825
-- On NOUNIF shift to state 829
-- On NOT shift to state 832
-- On NONINTERF shift to state 837
-- On LETFUN shift to state 840
-- On LET shift to state 848
-- On IMPLEMENTATION shift to state 856
-- On FUN shift to state 859
-- On FREE shift to state 870
-- On EXPAND shift to state 876
-- On EVENT shift to state 882
-- On EQUATION shift to state 888
-- On ELIMTRUE shift to state 892
-- On DEFINE shift to state 895
-- On CONST shift to state 903
-- On CLAUSES shift to state 909
-- On CHANNEL shift to state 911
-- On lib shift to state 967
-- On # reduce production lib -> 

State 815:
lib -> PROBA . IDENT DOT lib [ # ]
-- On IDENT shift to state 816

State 816:
lib -> PROBA IDENT . DOT lib [ # ]
-- On DOT shift to state 817

State 817:
lib -> PROBA IDENT DOT . lib [ # ]
-- On WEAKSECRET shift to state 786
-- On TYPE shift to state 789
-- On TABLE shift to state 793
-- On SET shift to state 799
-- On REDUCTION shift to state 804
-- On QUERY shift to state 808
-- On PROOF shift to state 811
-- On PROBA shift to state 815
-- On PREDICATE shift to state 818
-- On PARAM shift to state 825
-- On NOUNIF shift to state 829
-- On NOT shift to state 832
-- On NONINTERF shift to state 837
-- On LETFUN shift to state 840
-- On LET shift to state 848
-- On IMPLEMENTATION shift to state 856
-- On FUN shift to state 859
-- On FREE shift to state 870
-- On EXPAND shift to state 876
-- On EVENT shift to state 882
-- On EQUATION shift to state 888
-- On ELIMTRUE shift to state 892
-- On DEFINE shift to state 895
-- On CONST shift to state 903
-- On CLAUSES shift to state 909
-- On CHANNEL shift to state 911
-- On lib shift to state 966
-- On # reduce production lib -> 

State 818:
lib -> PREDICATE . IDENT LPAREN typeidseq RPAREN options DOT lib [ # ]
lib -> PREDICATE . IDENT options DOT lib [ # ]
-- On IDENT shift to state 819

State 819:
lib -> PREDICATE IDENT . LPAREN typeidseq RPAREN options DOT lib [ # ]
lib -> PREDICATE IDENT . options DOT lib [ # ]
-- On LPAREN shift to state 820
-- On LBRACKET shift to state 6
-- On options shift to state 963
-- On DOT reduce production options -> 

State 820:
lib -> PREDICATE IDENT LPAREN . typeidseq RPAREN options DOT lib [ # ]
-- On IDENT shift to state 17
-- On CHANNEL shift to state 18
-- On typeidseq shift to state 821
-- On typeid shift to state 676
-- On netypeidseq shift to state 679
-- On RPAREN reduce production typeidseq -> 

State 821:
lib -> PREDICATE IDENT LPAREN typeidseq . RPAREN options DOT lib [ # ]
-- On RPAREN shift to state 822

State 822:
lib -> PREDICATE IDENT LPAREN typeidseq RPAREN . options DOT lib [ # ]
-- On LBRACKET shift to state 6
-- On options shift to state 823
-- On DOT reduce production options -> 

State 823:
lib -> PREDICATE IDENT LPAREN typeidseq RPAREN options . DOT lib [ # ]
-- On DOT shift to state 824

State 824:
lib -> PREDICATE IDENT LPAREN typeidseq RPAREN options DOT . lib [ # ]
-- On WEAKSECRET shift to state 786
-- On TYPE shift to state 789
-- On TABLE shift to state 793
-- On SET shift to state 799
-- On REDUCTION shift to state 804
-- On QUERY shift to state 808
-- On PROOF shift to state 811
-- On PROBA shift to state 815
-- On PREDICATE shift to state 818
-- On PARAM shift to state 825
-- On NOUNIF shift to state 829
-- On NOT shift to state 832
-- On NONINTERF shift to state 837
-- On LETFUN shift to state 840
-- On LET shift to state 848
-- On IMPLEMENTATION shift to state 856
-- On FUN shift to state 859
-- On FREE shift to state 870
-- On EXPAND shift to state 876
-- On EVENT shift to state 882
-- On EQUATION shift to state 888
-- On ELIMTRUE shift to state 892
-- On DEFINE shift to state 895
-- On CONST shift to state 903
-- On CLAUSES shift to state 909
-- On CHANNEL shift to state 911
-- On lib shift to state 962
-- On # reduce production lib -> 

State 825:
lib -> PARAM . neidentseq options DOT lib [ # ]
-- On IDENT shift to state 7
-- On neidentseq shift to state 826

State 826:
lib -> PARAM neidentseq . options DOT lib [ # ]
-- On LBRACKET shift to state 6
-- On options shift to state 827
-- On DOT reduce production options -> 

State 827:
lib -> PARAM neidentseq options . DOT lib [ # ]
-- On DOT shift to state 828

State 828:
lib -> PARAM neidentseq options DOT . lib [ # ]
-- On WEAKSECRET shift to state 786
-- On TYPE shift to state 789
-- On TABLE shift to state 793
-- On SET shift to state 799
-- On REDUCTION shift to state 804
-- On QUERY shift to state 808
-- On PROOF shift to state 811
-- On PROBA shift to state 815
-- On PREDICATE shift to state 818
-- On PARAM shift to state 825
-- On NOUNIF shift to state 829
-- On NOT shift to state 832
-- On NONINTERF shift to state 837
-- On LETFUN shift to state 840
-- On LET shift to state 848
-- On IMPLEMENTATION shift to state 856
-- On FUN shift to state 859
-- On FREE shift to state 870
-- On EXPAND shift to state 876
-- On EVENT shift to state 882
-- On EQUATION shift to state 888
-- On ELIMTRUE shift to state 892
-- On DEFINE shift to state 895
-- On CONST shift to state 903
-- On CLAUSES shift to state 909
-- On CHANNEL shift to state 911
-- On lib shift to state 961
-- On # reduce production lib -> 

State 829:
lib -> NOUNIF . nevartype SEMI tfnebindingseq DOT lib [ # ]
lib -> NOUNIF . tfnebindingseq DOT lib [ # ]
-- On TABLE shift to state 161
-- On LET shift to state 213
-- On IDENT shift to state 226
-- On tfnebindingseq shift to state 830
-- On nevartype shift to state 956

State 830:
lib -> NOUNIF tfnebindingseq . DOT lib [ # ]
-- On DOT shift to state 831

State 831:
lib -> NOUNIF tfnebindingseq DOT . lib [ # ]
-- On WEAKSECRET shift to state 786
-- On TYPE shift to state 789
-- On TABLE shift to state 793
-- On SET shift to state 799
-- On REDUCTION shift to state 804
-- On QUERY shift to state 808
-- On PROOF shift to state 811
-- On PROBA shift to state 815
-- On PREDICATE shift to state 818
-- On PARAM shift to state 825
-- On NOUNIF shift to state 829
-- On NOT shift to state 832
-- On NONINTERF shift to state 837
-- On LETFUN shift to state 840
-- On LET shift to state 848
-- On IMPLEMENTATION shift to state 856
-- On FUN shift to state 859
-- On FREE shift to state 870
-- On EXPAND shift to state 876
-- On EVENT shift to state 882
-- On EQUATION shift to state 888
-- On ELIMTRUE shift to state 892
-- On DEFINE shift to state 895
-- On CONST shift to state 903
-- On CLAUSES shift to state 909
-- On CHANNEL shift to state 911
-- On lib shift to state 955
-- On # reduce production lib -> 

State 832:
lib -> NOT . nevartype SEMI gterm DOT lib [ # ]
lib -> NOT . gterm DOT lib [ # ]
-- On TABLE shift to state 40
-- On NOT shift to state 42
-- On NEW shift to state 44
-- On LPAREN shift to state 50
-- On LET shift to state 51
-- On INJEVENT shift to state 54
-- On IDENT shift to state 123
-- On EVENT shift to state 58
-- On CHOICE shift to state 60
-- On nevartype shift to state 833
-- On gterm shift to state 952

State 833:
lib -> NOT nevartype . SEMI gterm DOT lib [ # ]
-- On SEMI shift to state 834

State 834:
lib -> NOT nevartype SEMI . gterm DOT lib [ # ]
-- On TABLE shift to state 40
-- On NOT shift to state 42
-- On NEW shift to state 44
-- On LPAREN shift to state 50
-- On LET shift to state 51
-- On INJEVENT shift to state 54
-- On IDENT shift to state 56
-- On EVENT shift to state 58
-- On CHOICE shift to state 60
-- On gterm shift to state 835

State 835:
gterm -> gterm . EQUAL gterm [ WEDGE OR EQUAL DOT DIFF BEFORE ]
gterm -> gterm . DIFF gterm [ WEDGE OR EQUAL DOT DIFF BEFORE ]
gterm -> gterm . OR gterm [ WEDGE OR EQUAL DOT DIFF BEFORE ]
gterm -> gterm . WEDGE gterm [ WEDGE OR EQUAL DOT DIFF BEFORE ]
gterm -> gterm . BEFORE gterm [ WEDGE OR EQUAL DOT DIFF BEFORE ]
lib -> NOT nevartype SEMI gterm . DOT lib [ # ]
-- On WEDGE shift to state 63
-- On OR shift to state 69
-- On EQUAL shift to state 65
-- On DOT shift to state 836
-- On DIFF shift to state 67
-- On BEFORE shift to state 74

State 836:
lib -> NOT nevartype SEMI gterm DOT . lib [ # ]
-- On WEAKSECRET shift to state 786
-- On TYPE shift to state 789
-- On TABLE shift to state 793
-- On SET shift to state 799
-- On REDUCTION shift to state 804
-- On QUERY shift to state 808
-- On PROOF shift to state 811
-- On PROBA shift to state 815
-- On PREDICATE shift to state 818
-- On PARAM shift to state 825
-- On NOUNIF shift to state 829
-- On NOT shift to state 832
-- On NONINTERF shift to state 837
-- On LETFUN shift to state 840
-- On LET shift to state 848
-- On IMPLEMENTATION shift to state 856
-- On FUN shift to state 859
-- On FREE shift to state 870
-- On EXPAND shift to state 876
-- On EVENT shift to state 882
-- On EQUATION shift to state 888
-- On ELIMTRUE shift to state 892
-- On DEFINE shift to state 895
-- On CONST shift to state 903
-- On CLAUSES shift to state 909
-- On CHANNEL shift to state 911
-- On lib shift to state 951
-- On # reduce production lib -> 

State 837:
lib -> NONINTERF . nevartype SEMI niseq DOT lib [ # ]
lib -> NONINTERF . niseq DOT lib [ # ]
-- On IDENT shift to state 235
-- On niseq shift to state 838
-- On ni shift to state 722
-- On nevartype shift to state 946

State 838:
lib -> NONINTERF niseq . DOT lib [ # ]
-- On DOT shift to state 839

State 839:
lib -> NONINTERF niseq DOT . lib [ # ]
-- On WEAKSECRET shift to state 786
-- On TYPE shift to state 789
-- On TABLE shift to state 793
-- On SET shift to state 799
-- On REDUCTION shift to state 804
-- On QUERY shift to state 808
-- On PROOF shift to state 811
-- On PROBA shift to state 815
-- On PREDICATE shift to state 818
-- On PARAM shift to state 825
-- On NOUNIF shift to state 829
-- On NOT shift to state 832
-- On NONINTERF shift to state 837
-- On LETFUN shift to state 840
-- On LET shift to state 848
-- On IMPLEMENTATION shift to state 856
-- On FUN shift to state 859
-- On FREE shift to state 870
-- On EXPAND shift to state 876
-- On EVENT shift to state 882
-- On EQUATION shift to state 888
-- On ELIMTRUE shift to state 892
-- On DEFINE shift to state 895
-- On CONST shift to state 903
-- On CLAUSES shift to state 909
-- On CHANNEL shift to state 911
-- On lib shift to state 945
-- On # reduce production lib -> 

State 840:
lib -> LETFUN . IDENT EQUAL pterm DOT lib [ # ]
lib -> LETFUN . IDENT LPAREN mayfailvartypeseq RPAREN EQUAL pterm DOT lib [ # ]
-- On IDENT shift to state 841

State 841:
lib -> LETFUN IDENT . EQUAL pterm DOT lib [ # ]
lib -> LETFUN IDENT . LPAREN mayfailvartypeseq RPAREN EQUAL pterm DOT lib [ # ]
-- On LPAREN shift to state 842
-- On EQUAL shift to state 941

State 842:
lib -> LETFUN IDENT LPAREN . mayfailvartypeseq RPAREN EQUAL pterm DOT lib [ # ]
-- On IDENT shift to state 279
-- On nemayfailvartypeseq shift to state 284
-- On mayfailvartypeseq shift to state 843
-- On mayfailvartype shift to state 605
-- On RPAREN reduce production mayfailvartypeseq -> 

State 843:
lib -> LETFUN IDENT LPAREN mayfailvartypeseq . RPAREN EQUAL pterm DOT lib [ # ]
-- On RPAREN shift to state 844

State 844:
lib -> LETFUN IDENT LPAREN mayfailvartypeseq RPAREN . EQUAL pterm DOT lib [ # ]
-- On EQUAL shift to state 845

State 845:
lib -> LETFUN IDENT LPAREN mayfailvartypeseq RPAREN EQUAL . pterm DOT lib [ # ]
-- On NOT shift to state 288
-- On NEW shift to state 290
-- On LPAREN shift to state 300
-- On LET shift to state 301
-- On INSERT shift to state 306
-- On IF shift to state 309
-- On IDENT shift to state 310
-- On GET shift to state 314
-- On EVENT shift to state 320
-- On CHOICE shift to state 323
-- On pterm shift to state 846
-- On basicpattern shift to state 332

State 846:
lib -> LETFUN IDENT LPAREN mayfailvartypeseq RPAREN EQUAL pterm . DOT lib [ # ]
pterm -> pterm . EQUAL pterm [ WEDGE OR EQUAL DOT DIFF ]
pterm -> pterm . DIFF pterm [ WEDGE OR EQUAL DOT DIFF ]
pterm -> pterm . OR pterm [ WEDGE OR EQUAL DOT DIFF ]
pterm -> pterm . WEDGE pterm [ WEDGE OR EQUAL DOT DIFF ]
-- On WEDGE shift to state 326
-- On OR shift to state 337
-- On EQUAL shift to state 328
-- On DOT shift to state 847
-- On DIFF shift to state 330

State 847:
lib -> LETFUN IDENT LPAREN mayfailvartypeseq RPAREN EQUAL pterm DOT . lib [ # ]
-- On WEAKSECRET shift to state 786
-- On TYPE shift to state 789
-- On TABLE shift to state 793
-- On SET shift to state 799
-- On REDUCTION shift to state 804
-- On QUERY shift to state 808
-- On PROOF shift to state 811
-- On PROBA shift to state 815
-- On PREDICATE shift to state 818
-- On PARAM shift to state 825
-- On NOUNIF shift to state 829
-- On NOT shift to state 832
-- On NONINTERF shift to state 837
-- On LETFUN shift to state 840
-- On LET shift to state 848
-- On IMPLEMENTATION shift to state 856
-- On FUN shift to state 859
-- On FREE shift to state 870
-- On EXPAND shift to state 876
-- On EVENT shift to state 882
-- On EQUATION shift to state 888
-- On ELIMTRUE shift to state 892
-- On DEFINE shift to state 895
-- On CONST shift to state 903
-- On CLAUSES shift to state 909
-- On CHANNEL shift to state 911
-- On lib shift to state 940
-- On # reduce production lib -> 

State 848:
lib -> LET . IDENT EQUAL tprocess DOT lib [ # ]
lib -> LET . IDENT LPAREN mayfailvartypeseq RPAREN EQUAL tprocess DOT lib [ # ]
-- On IDENT shift to state 849

State 849:
lib -> LET IDENT . EQUAL tprocess DOT lib [ # ]
lib -> LET IDENT . LPAREN mayfailvartypeseq RPAREN EQUAL tprocess DOT lib [ # ]
-- On LPAREN shift to state 850
-- On EQUAL shift to state 936

State 850:
lib -> LET IDENT LPAREN . mayfailvartypeseq RPAREN EQUAL tprocess DOT lib [ # ]
-- On IDENT shift to state 279
-- On nemayfailvartypeseq shift to state 284
-- On mayfailvartypeseq shift to state 851
-- On mayfailvartype shift to state 605
-- On RPAREN reduce production mayfailvartypeseq -> 

State 851:
lib -> LET IDENT LPAREN mayfailvartypeseq . RPAREN EQUAL tprocess DOT lib [ # ]
-- On RPAREN shift to state 852

State 852:
lib -> LET IDENT LPAREN mayfailvartypeseq RPAREN . EQUAL tprocess DOT lib [ # ]
-- On EQUAL shift to state 853

State 853:
lib -> LET IDENT LPAREN mayfailvartypeseq RPAREN EQUAL . tprocess DOT lib [ # ]
-- On YIELD shift to state 418
-- On REPL shift to state 419
-- On PHASE shift to state 420
-- On OUT shift to state 423
-- On NEW shift to state 432
-- On LPAREN shift to state 438
-- On LET shift to state 439
-- On INT shift to state 444
-- On INSERT shift to state 445
-- On IN shift to state 451
-- On IF shift to state 458
-- On IDENT shift to state 461
-- On GET shift to state 481
-- On FOREACH shift to state 489
-- On EVENT shift to state 494
-- On BARRIER shift to state 503
-- On tprocess shift to state 854
-- On progbegin shift to state 511
-- On basicpattern shift to state 515

State 854:
lib -> LET IDENT LPAREN mayfailvartypeseq RPAREN EQUAL tprocess . DOT lib [ # ]
tprocess -> tprocess . BAR tprocess [ DOT BAR ]
-- On DOT shift to state 855
-- On BAR shift to state 513

State 855:
lib -> LET IDENT LPAREN mayfailvartypeseq RPAREN EQUAL tprocess DOT . lib [ # ]
-- On WEAKSECRET shift to state 786
-- On TYPE shift to state 789
-- On TABLE shift to state 793
-- On SET shift to state 799
-- On REDUCTION shift to state 804
-- On QUERY shift to state 808
-- On PROOF shift to state 811
-- On PROBA shift to state 815
-- On PREDICATE shift to state 818
-- On PARAM shift to state 825
-- On NOUNIF shift to state 829
-- On NOT shift to state 832
-- On NONINTERF shift to state 837
-- On LETFUN shift to state 840
-- On LET shift to state 848
-- On IMPLEMENTATION shift to state 856
-- On FUN shift to state 859
-- On FREE shift to state 870
-- On EXPAND shift to state 876
-- On EVENT shift to state 882
-- On EQUATION shift to state 888
-- On ELIMTRUE shift to state 892
-- On DEFINE shift to state 895
-- On CONST shift to state 903
-- On CLAUSES shift to state 909
-- On CHANNEL shift to state 911
-- On lib shift to state 935
-- On # reduce production lib -> 

State 856:
lib -> IMPLEMENTATION . impllist DOT lib [ # ]
-- On TYPE shift to state 548
-- On TABLE shift to state 570
-- On FUN shift to state 574
-- On CONST shift to state 588
-- On impllist shift to state 857
-- On impl shift to state 708

State 857:
lib -> IMPLEMENTATION impllist . DOT lib [ # ]
-- On DOT shift to state 858

State 858:
lib -> IMPLEMENTATION impllist DOT . lib [ # ]
-- On WEAKSECRET shift to state 786
-- On TYPE shift to state 789
-- On TABLE shift to state 793
-- On SET shift to state 799
-- On REDUCTION shift to state 804
-- On QUERY shift to state 808
-- On PROOF shift to state 811
-- On PROBA shift to state 815
-- On PREDICATE shift to state 818
-- On PARAM shift to state 825
-- On NOUNIF shift to state 829
-- On NOT shift to state 832
-- On NONINTERF shift to state 837
-- On LETFUN shift to state 840
-- On LET shift to state 848
-- On IMPLEMENTATION shift to state 856
-- On FUN shift to state 859
-- On FREE shift to state 870
-- On EXPAND shift to state 876
-- On EVENT shift to state 882
-- On EQUATION shift to state 888
-- On ELIMTRUE shift to state 892
-- On DEFINE shift to state 895
-- On CONST shift to state 903
-- On CLAUSES shift to state 909
-- On CHANNEL shift to state 911
-- On lib shift to state 934
-- On # reduce production lib -> 

State 859:
lib -> FUN . IDENT LPAREN typeidseq RPAREN COLON typeid options DOT lib [ # ]
lib -> FUN . IDENT LPAREN typeidseq RPAREN COLON typeid REDUCTION treducmayfail options DOT lib [ # ]
-- On IDENT shift to state 860

State 860:
lib -> FUN IDENT . LPAREN typeidseq RPAREN COLON typeid options DOT lib [ # ]
lib -> FUN IDENT . LPAREN typeidseq RPAREN COLON typeid REDUCTION treducmayfail options DOT lib [ # ]
-- On LPAREN shift to state 861

State 861:
lib -> FUN IDENT LPAREN . typeidseq RPAREN COLON typeid options DOT lib [ # ]
lib -> FUN IDENT LPAREN . typeidseq RPAREN COLON typeid REDUCTION treducmayfail options DOT lib [ # ]
-- On IDENT shift to state 17
-- On CHANNEL shift to state 18
-- On typeidseq shift to state 862
-- On typeid shift to state 676
-- On netypeidseq shift to state 679
-- On RPAREN reduce production typeidseq -> 

State 862:
lib -> FUN IDENT LPAREN typeidseq . RPAREN COLON typeid options DOT lib [ # ]
lib -> FUN IDENT LPAREN typeidseq . RPAREN COLON typeid REDUCTION treducmayfail options DOT lib [ # ]
-- On RPAREN shift to state 863

State 863:
lib -> FUN IDENT LPAREN typeidseq RPAREN . COLON typeid options DOT lib [ # ]
lib -> FUN IDENT LPAREN typeidseq RPAREN . COLON typeid REDUCTION treducmayfail options DOT lib [ # ]
-- On COLON shift to state 864

State 864:
lib -> FUN IDENT LPAREN typeidseq RPAREN COLON . typeid options DOT lib [ # ]
lib -> FUN IDENT LPAREN typeidseq RPAREN COLON . typeid REDUCTION treducmayfail options DOT lib [ # ]
-- On IDENT shift to state 17
-- On CHANNEL shift to state 18
-- On typeid shift to state 865

State 865:
lib -> FUN IDENT LPAREN typeidseq RPAREN COLON typeid . options DOT lib [ # ]
lib -> FUN IDENT LPAREN typeidseq RPAREN COLON typeid . REDUCTION treducmayfail options DOT lib [ # ]
-- On REDUCTION shift to state 866
-- On LBRACKET shift to state 6
-- On options shift to state 931
-- On DOT reduce production options -> 

State 866:
lib -> FUN IDENT LPAREN typeidseq RPAREN COLON typeid REDUCTION . treducmayfail options DOT lib [ # ]
-- On FORALL shift to state 602
-- On treducmayfail shift to state 867
-- On forallmayfailvartype shift to state 693
-- On PROJECTION reduce production forallmayfailvartype -> 
-- On NOT reduce production forallmayfailvartype -> 
-- On LPAREN reduce production forallmayfailvartype -> 
-- On IDENT reduce production forallmayfailvartype -> 
-- On FAIL reduce production forallmayfailvartype -> 
-- On CHOICE reduce production forallmayfailvartype -> 

State 867:
lib -> FUN IDENT LPAREN typeidseq RPAREN COLON typeid REDUCTION treducmayfail . options DOT lib [ # ]
-- On LBRACKET shift to state 6
-- On options shift to state 868
-- On DOT reduce production options -> 

State 868:
lib -> FUN IDENT LPAREN typeidseq RPAREN COLON typeid REDUCTION treducmayfail options . DOT lib [ # ]
-- On DOT shift to state 869

State 869:
lib -> FUN IDENT LPAREN typeidseq RPAREN COLON typeid REDUCTION treducmayfail options DOT . lib [ # ]
-- On WEAKSECRET shift to state 786
-- On TYPE shift to state 789
-- On TABLE shift to state 793
-- On SET shift to state 799
-- On REDUCTION shift to state 804
-- On QUERY shift to state 808
-- On PROOF shift to state 811
-- On PROBA shift to state 815
-- On PREDICATE shift to state 818
-- On PARAM shift to state 825
-- On NOUNIF shift to state 829
-- On NOT shift to state 832
-- On NONINTERF shift to state 837
-- On LETFUN shift to state 840
-- On LET shift to state 848
-- On IMPLEMENTATION shift to state 856
-- On FUN shift to state 859
-- On FREE shift to state 870
-- On EXPAND shift to state 876
-- On EVENT shift to state 882
-- On EQUATION shift to state 888
-- On ELIMTRUE shift to state 892
-- On DEFINE shift to state 895
-- On CONST shift to state 903
-- On CLAUSES shift to state 909
-- On CHANNEL shift to state 911
-- On lib shift to state 930
-- On # reduce production lib -> 

State 870:
lib -> FREE . neidentseq COLON typeid options DOT lib [ # ]
-- On IDENT shift to state 7
-- On neidentseq shift to state 871

State 871:
lib -> FREE neidentseq . COLON typeid options DOT lib [ # ]
-- On COLON shift to state 872

State 872:
lib -> FREE neidentseq COLON . typeid options DOT lib [ # ]
-- On IDENT shift to state 17
-- On CHANNEL shift to state 18
-- On typeid shift to state 873

State 873:
lib -> FREE neidentseq COLON typeid . options DOT lib [ # ]
-- On LBRACKET shift to state 6
-- On options shift to state 874
-- On DOT reduce production options -> 

State 874:
lib -> FREE neidentseq COLON typeid options . DOT lib [ # ]
-- On DOT shift to state 875

State 875:
lib -> FREE neidentseq COLON typeid options DOT . lib [ # ]
-- On WEAKSECRET shift to state 786
-- On TYPE shift to state 789
-- On TABLE shift to state 793
-- On SET shift to state 799
-- On REDUCTION shift to state 804
-- On QUERY shift to state 808
-- On PROOF shift to state 811
-- On PROBA shift to state 815
-- On PREDICATE shift to state 818
-- On PARAM shift to state 825
-- On NOUNIF shift to state 829
-- On NOT shift to state 832
-- On NONINTERF shift to state 837
-- On LETFUN shift to state 840
-- On LET shift to state 848
-- On IMPLEMENTATION shift to state 856
-- On FUN shift to state 859
-- On FREE shift to state 870
-- On EXPAND shift to state 876
-- On EVENT shift to state 882
-- On EQUATION shift to state 888
-- On ELIMTRUE shift to state 892
-- On DEFINE shift to state 895
-- On CONST shift to state 903
-- On CLAUSES shift to state 909
-- On CHANNEL shift to state 911
-- On lib shift to state 929
-- On # reduce production lib -> 

State 876:
lib -> EXPAND . IDENT LPAREN typeidseq RPAREN DOT lib [ # ]
-- On IDENT shift to state 877

State 877:
lib -> EXPAND IDENT . LPAREN typeidseq RPAREN DOT lib [ # ]
-- On LPAREN shift to state 878

State 878:
lib -> EXPAND IDENT LPAREN . typeidseq RPAREN DOT lib [ # ]
-- On IDENT shift to state 17
-- On CHANNEL shift to state 18
-- On typeidseq shift to state 879
-- On typeid shift to state 676
-- On netypeidseq shift to state 679
-- On RPAREN reduce production typeidseq -> 

State 879:
lib -> EXPAND IDENT LPAREN typeidseq . RPAREN DOT lib [ # ]
-- On RPAREN shift to state 880

State 880:
lib -> EXPAND IDENT LPAREN typeidseq RPAREN . DOT lib [ # ]
-- On DOT shift to state 881

State 881:
lib -> EXPAND IDENT LPAREN typeidseq RPAREN DOT . lib [ # ]
-- On WEAKSECRET shift to state 786
-- On TYPE shift to state 789
-- On TABLE shift to state 793
-- On SET shift to state 799
-- On REDUCTION shift to state 804
-- On QUERY shift to state 808
-- On PROOF shift to state 811
-- On PROBA shift to state 815
-- On PREDICATE shift to state 818
-- On PARAM shift to state 825
-- On NOUNIF shift to state 829
-- On NOT shift to state 832
-- On NONINTERF shift to state 837
-- On LETFUN shift to state 840
-- On LET shift to state 848
-- On IMPLEMENTATION shift to state 856
-- On FUN shift to state 859
-- On FREE shift to state 870
-- On EXPAND shift to state 876
-- On EVENT shift to state 882
-- On EQUATION shift to state 888
-- On ELIMTRUE shift to state 892
-- On DEFINE shift to state 895
-- On CONST shift to state 903
-- On CLAUSES shift to state 909
-- On CHANNEL shift to state 911
-- On lib shift to state 928
-- On # reduce production lib -> 

State 882:
lib -> EVENT . IDENT DOT lib [ # ]
lib -> EVENT . IDENT LPAREN typeidseq RPAREN DOT lib [ # ]
-- On IDENT shift to state 883

State 883:
lib -> EVENT IDENT . DOT lib [ # ]
lib -> EVENT IDENT . LPAREN typeidseq RPAREN DOT lib [ # ]
-- On LPAREN shift to state 884
-- On DOT shift to state 926

State 884:
lib -> EVENT IDENT LPAREN . typeidseq RPAREN DOT lib [ # ]
-- On IDENT shift to state 17
-- On CHANNEL shift to state 18
-- On typeidseq shift to state 885
-- On typeid shift to state 676
-- On netypeidseq shift to state 679
-- On RPAREN reduce production typeidseq -> 

State 885:
lib -> EVENT IDENT LPAREN typeidseq . RPAREN DOT lib [ # ]
-- On RPAREN shift to state 886

State 886:
lib -> EVENT IDENT LPAREN typeidseq RPAREN . DOT lib [ # ]
-- On DOT shift to state 887

State 887:
lib -> EVENT IDENT LPAREN typeidseq RPAREN DOT . lib [ # ]
-- On WEAKSECRET shift to state 786
-- On TYPE shift to state 789
-- On TABLE shift to state 793
-- On SET shift to state 799
-- On REDUCTION shift to state 804
-- On QUERY shift to state 808
-- On PROOF shift to state 811
-- On PROBA shift to state 815
-- On PREDICATE shift to state 818
-- On PARAM shift to state 825
-- On NOUNIF shift to state 829
-- On NOT shift to state 832
-- On NONINTERF shift to state 837
-- On LETFUN shift to state 840
-- On LET shift to state 848
-- On IMPLEMENTATION shift to state 856
-- On FUN shift to state 859
-- On FREE shift to state 870
-- On EXPAND shift to state 876
-- On EVENT shift to state 882
-- On EQUATION shift to state 888
-- On ELIMTRUE shift to state 892
-- On DEFINE shift to state 895
-- On CONST shift to state 903
-- On CLAUSES shift to state 909
-- On CHANNEL shift to state 911
-- On lib shift to state 925
-- On # reduce production lib -> 

State 888:
lib -> EQUATION . eqlist options DOT lib [ # ]
-- On FORALL shift to state 28
-- On forallvartype shift to state 630
-- On eqlist shift to state 889
-- On PROJECTION reduce production forallvartype -> 
-- On NOT reduce production forallvartype -> 
-- On LPAREN reduce production forallvartype -> 
-- On IDENT reduce production forallvartype -> 
-- On FAIL reduce production forallvartype -> 
-- On CHOICE reduce production forallvartype -> 

State 889:
lib -> EQUATION eqlist . options DOT lib [ # ]
-- On LBRACKET shift to state 6
-- On options shift to state 890
-- On DOT reduce production options -> 

State 890:
lib -> EQUATION eqlist options . DOT lib [ # ]
-- On DOT shift to state 891

State 891:
lib -> EQUATION eqlist options DOT . lib [ # ]
-- On WEAKSECRET shift to state 786
-- On TYPE shift to state 789
-- On TABLE shift to state 793
-- On SET shift to state 799
-- On REDUCTION shift to state 804
-- On QUERY shift to state 808
-- On PROOF shift to state 811
-- On PROBA shift to state 815
-- On PREDICATE shift to state 818
-- On PARAM shift to state 825
-- On NOUNIF shift to state 829
-- On NOT shift to state 832
-- On NONINTERF shift to state 837
-- On LETFUN shift to state 840
-- On LET shift to state 848
-- On IMPLEMENTATION shift to state 856
-- On FUN shift to state 859
-- On FREE shift to state 870
-- On EXPAND shift to state 876
-- On EVENT shift to state 882
-- On EQUATION shift to state 888
-- On ELIMTRUE shift to state 892
-- On DEFINE shift to state 895
-- On CONST shift to state 903
-- On CLAUSES shift to state 909
-- On CHANNEL shift to state 911
-- On lib shift to state 924
-- On # reduce production lib -> 

State 892:
lib -> ELIMTRUE . nemayfailvartypeseq SEMI term DOT lib [ # ]
lib -> ELIMTRUE . term DOT lib [ # ]
-- On PROJECTION shift to state 238
-- On NOT shift to state 240
-- On LPAREN shift to state 242
-- On IDENT shift to state 638
-- On FAIL shift to state 245
-- On CHOICE shift to state 246
-- On term shift to state 893
-- On nemayfailvartypeseq shift to state 919
-- On mayfailvartype shift to state 605

State 893:
lib -> ELIMTRUE term . DOT lib [ # ]
term -> term . EQUAL term [ WEDGE OR EQUAL DOT DIFF ]
term -> term . DIFF term [ WEDGE OR EQUAL DOT DIFF ]
term -> term . OR term [ WEDGE OR EQUAL DOT DIFF ]
term -> term . WEDGE term [ WEDGE OR EQUAL DOT DIFF ]
-- On WEDGE shift to state 249
-- On OR shift to state 255
-- On EQUAL shift to state 251
-- On DOT shift to state 894
-- On DIFF shift to state 253

State 894:
lib -> ELIMTRUE term DOT . lib [ # ]
-- On WEAKSECRET shift to state 786
-- On TYPE shift to state 789
-- On TABLE shift to state 793
-- On SET shift to state 799
-- On REDUCTION shift to state 804
-- On QUERY shift to state 808
-- On PROOF shift to state 811
-- On PROBA shift to state 815
-- On PREDICATE shift to state 818
-- On PARAM shift to state 825
-- On NOUNIF shift to state 829
-- On NOT shift to state 832
-- On NONINTERF shift to state 837
-- On LETFUN shift to state 840
-- On LET shift to state 848
-- On IMPLEMENTATION shift to state 856
-- On FUN shift to state 859
-- On FREE shift to state 870
-- On EXPAND shift to state 876
-- On EVENT shift to state 882
-- On EQUATION shift to state 888
-- On ELIMTRUE shift to state 892
-- On DEFINE shift to state 895
-- On CONST shift to state 903
-- On CLAUSES shift to state 909
-- On CHANNEL shift to state 911
-- On lib shift to state 918
-- On # reduce production lib -> 

State 895:
lib -> DEFINE . IDENT LPAREN typeidseq RPAREN LBRACE lib RBRACE lib [ # ]
-- On IDENT shift to state 896

State 896:
lib -> DEFINE IDENT . LPAREN typeidseq RPAREN LBRACE lib RBRACE lib [ # ]
-- On LPAREN shift to state 897

State 897:
lib -> DEFINE IDENT LPAREN . typeidseq RPAREN LBRACE lib RBRACE lib [ # ]
-- On IDENT shift to state 17
-- On CHANNEL shift to state 18
-- On typeidseq shift to state 898
-- On typeid shift to state 676
-- On netypeidseq shift to state 679
-- On RPAREN reduce production typeidseq -> 

State 898:
lib -> DEFINE IDENT LPAREN typeidseq . RPAREN LBRACE lib RBRACE lib [ # ]
-- On RPAREN shift to state 899

State 899:
lib -> DEFINE IDENT LPAREN typeidseq RPAREN . LBRACE lib RBRACE lib [ # ]
-- On LBRACE shift to state 900

State 900:
lib -> DEFINE IDENT LPAREN typeidseq RPAREN LBRACE . lib RBRACE lib [ # ]
-- On WEAKSECRET shift to state 1
-- On TYPE shift to state 4
-- On TABLE shift to state 14
-- On SET shift to state 22
-- On REDUCTION shift to state 27
-- On QUERY shift to state 39
-- On PROOF shift to state 126
-- On PROBA shift to state 146
-- On PREDICATE shift to state 149
-- On PARAM shift to state 156
-- On NOUNIF shift to state 160
-- On NOT shift to state 229
-- On NONINTERF shift to state 234
-- On LETFUN shift to state 276
-- On LET shift to state 412
-- On IMPLEMENTATION shift to state 547
-- On FUN shift to state 594
-- On FREE shift to state 611
-- On EXPAND shift to state 617
-- On EVENT shift to state 623
-- On EQUATION shift to state 629
-- On ELIMTRUE shift to state 637
-- On DEFINE shift to state 641
-- On CONST shift to state 647
-- On CLAUSES shift to state 653
-- On CHANNEL shift to state 655
-- On lib shift to state 901
-- On RBRACE reduce production lib -> 

State 901:
lib -> DEFINE IDENT LPAREN typeidseq RPAREN LBRACE lib . RBRACE lib [ # ]
-- On RBRACE shift to state 902

State 902:
lib -> DEFINE IDENT LPAREN typeidseq RPAREN LBRACE lib RBRACE . lib [ # ]
-- On WEAKSECRET shift to state 786
-- On TYPE shift to state 789
-- On TABLE shift to state 793
-- On SET shift to state 799
-- On REDUCTION shift to state 804
-- On QUERY shift to state 808
-- On PROOF shift to state 811
-- On PROBA shift to state 815
-- On PREDICATE shift to state 818
-- On PARAM shift to state 825
-- On NOUNIF shift to state 829
-- On NOT shift to state 832
-- On NONINTERF shift to state 837
-- On LETFUN shift to state 840
-- On LET shift to state 848
-- On IMPLEMENTATION shift to state 856
-- On FUN shift to state 859
-- On FREE shift to state 870
-- On EXPAND shift to state 876
-- On EVENT shift to state 882
-- On EQUATION shift to state 888
-- On ELIMTRUE shift to state 892
-- On DEFINE shift to state 895
-- On CONST shift to state 903
-- On CLAUSES shift to state 909
-- On CHANNEL shift to state 911
-- On lib shift to state 917
-- On # reduce production lib -> 

State 903:
lib -> CONST . neidentseq COLON typeid options DOT lib [ # ]
-- On IDENT shift to state 7
-- On neidentseq shift to state 904

State 904:
lib -> CONST neidentseq . COLON typeid options DOT lib [ # ]
-- On COLON shift to state 905

State 905:
lib -> CONST neidentseq COLON . typeid options DOT lib [ # ]
-- On IDENT shift to state 17
-- On CHANNEL shift to state 18
-- On typeid shift to state 906

State 906:
lib -> CONST neidentseq COLON typeid . options DOT lib [ # ]
-- On LBRACKET shift to state 6
-- On options shift to state 907
-- On DOT reduce production options -> 

State 907:
lib -> CONST neidentseq COLON typeid options . DOT lib [ # ]
-- On DOT shift to state 908

State 908:
lib -> CONST neidentseq COLON typeid options DOT . lib [ # ]
-- On WEAKSECRET shift to state 786
-- On TYPE shift to state 789
-- On TABLE shift to state 793
-- On SET shift to state 799
-- On REDUCTION shift to state 804
-- On QUERY shift to state 808
-- On PROOF shift to state 811
-- On PROBA shift to state 815
-- On PREDICATE shift to state 818
-- On PARAM shift to state 825
-- On NOUNIF shift to state 829
-- On NOT shift to state 832
-- On NONINTERF shift to state 837
-- On LETFUN shift to state 840
-- On LET shift to state 848
-- On IMPLEMENTATION shift to state 856
-- On FUN shift to state 859
-- On FREE shift to state 870
-- On EXPAND shift to state 876
-- On EVENT shift to state 882
-- On EQUATION shift to state 888
-- On ELIMTRUE shift to state 892
-- On DEFINE shift to state 895
-- On CONST shift to state 903
-- On CLAUSES shift to state 909
-- On CHANNEL shift to state 911
-- On lib shift to state 916
-- On # reduce production lib -> 

State 909:
lib -> CLAUSES . tclauses lib [ # ]
-- On FORALL shift to state 602
-- On tclauses shift to state 910
-- On forallmayfailvartype shift to state 660
-- On PROJECTION reduce production forallmayfailvartype -> 
-- On NOT reduce production forallmayfailvartype -> 
-- On LPAREN reduce production forallmayfailvartype -> 
-- On IDENT reduce production forallmayfailvartype -> 
-- On FAIL reduce production forallmayfailvartype -> 
-- On CHOICE reduce production forallmayfailvartype -> 

State 910:
lib -> CLAUSES tclauses . lib [ # ]
-- On WEAKSECRET shift to state 786
-- On TYPE shift to state 789
-- On TABLE shift to state 793
-- On SET shift to state 799
-- On REDUCTION shift to state 804
-- On QUERY shift to state 808
-- On PROOF shift to state 811
-- On PROBA shift to state 815
-- On PREDICATE shift to state 818
-- On PARAM shift to state 825
-- On NOUNIF shift to state 829
-- On NOT shift to state 832
-- On NONINTERF shift to state 837
-- On LETFUN shift to state 840
-- On LET shift to state 848
-- On IMPLEMENTATION shift to state 856
-- On FUN shift to state 859
-- On FREE shift to state 870
-- On EXPAND shift to state 876
-- On EVENT shift to state 882
-- On EQUATION shift to state 888
-- On ELIMTRUE shift to state 892
-- On DEFINE shift to state 895
-- On CONST shift to state 903
-- On CLAUSES shift to state 909
-- On CHANNEL shift to state 911
-- On lib shift to state 915
-- On # reduce production lib -> 

State 911:
lib -> CHANNEL . neidentseq DOT lib [ # ]
-- On IDENT shift to state 7
-- On neidentseq shift to state 912

State 912:
lib -> CHANNEL neidentseq . DOT lib [ # ]
-- On DOT shift to state 913

State 913:
lib -> CHANNEL neidentseq DOT . lib [ # ]
-- On WEAKSECRET shift to state 786
-- On TYPE shift to state 789
-- On TABLE shift to state 793
-- On SET shift to state 799
-- On REDUCTION shift to state 804
-- On QUERY shift to state 808
-- On PROOF shift to state 811
-- On PROBA shift to state 815
-- On PREDICATE shift to state 818
-- On PARAM shift to state 825
-- On NOUNIF shift to state 829
-- On NOT shift to state 832
-- On NONINTERF shift to state 837
-- On LETFUN shift to state 840
-- On LET shift to state 848
-- On IMPLEMENTATION shift to state 856
-- On FUN shift to state 859
-- On FREE shift to state 870
-- On EXPAND shift to state 876
-- On EVENT shift to state 882
-- On EQUATION shift to state 888
-- On ELIMTRUE shift to state 892
-- On DEFINE shift to state 895
-- On CONST shift to state 903
-- On CLAUSES shift to state 909
-- On CHANNEL shift to state 911
-- On lib shift to state 914
-- On # reduce production lib -> 

State 914:
lib -> CHANNEL neidentseq DOT lib . [ # ]
-- On # reduce production lib -> CHANNEL neidentseq DOT lib

State 915:
lib -> CLAUSES tclauses lib . [ # ]
-- On # reduce production lib -> CLAUSES tclauses lib

State 916:
lib -> CONST neidentseq COLON typeid options DOT lib . [ # ]
-- On # reduce production lib -> CONST neidentseq COLON typeid options DOT lib

State 917:
lib -> DEFINE IDENT LPAREN typeidseq RPAREN LBRACE lib RBRACE lib . [ # ]
-- On # reduce production lib -> DEFINE IDENT LPAREN typeidseq RPAREN LBRACE lib RBRACE lib

State 918:
lib -> ELIMTRUE term DOT lib . [ # ]
-- On # reduce production lib -> ELIMTRUE term DOT lib

State 919:
lib -> ELIMTRUE nemayfailvartypeseq . SEMI term DOT lib [ # ]
-- On SEMI shift to state 920

State 920:
lib -> ELIMTRUE nemayfailvartypeseq SEMI . term DOT lib [ # ]
-- On PROJECTION shift to state 238
-- On NOT shift to state 240
-- On LPAREN shift to state 242
-- On IDENT shift to state 243
-- On FAIL shift to state 245
-- On CHOICE shift to state 246
-- On term shift to state 921

State 921:
lib -> ELIMTRUE nemayfailvartypeseq SEMI term . DOT lib [ # ]
term -> term . EQUAL term [ WEDGE OR EQUAL DOT DIFF ]
term -> term . DIFF term [ WEDGE OR EQUAL DOT DIFF ]
term -> term . OR term [ WEDGE OR EQUAL DOT DIFF ]
term -> term . WEDGE term [ WEDGE OR EQUAL DOT DIFF ]
-- On WEDGE shift to state 249
-- On OR shift to state 255
-- On EQUAL shift to state 251
-- On DOT shift to state 922
-- On DIFF shift to state 253

State 922:
lib -> ELIMTRUE nemayfailvartypeseq SEMI term DOT . lib [ # ]
-- On WEAKSECRET shift to state 786
-- On TYPE shift to state 789
-- On TABLE shift to state 793
-- On SET shift to state 799
-- On REDUCTION shift to state 804
-- On QUERY shift to state 808
-- On PROOF shift to state 811
-- On PROBA shift to state 815
-- On PREDICATE shift to state 818
-- On PARAM shift to state 825
-- On NOUNIF shift to state 829
-- On NOT shift to state 832
-- On NONINTERF shift to state 837
-- On LETFUN shift to state 840
-- On LET shift to state 848
-- On IMPLEMENTATION shift to state 856
-- On FUN shift to state 859
-- On FREE shift to state 870
-- On EXPAND shift to state 876
-- On EVENT shift to state 882
-- On EQUATION shift to state 888
-- On ELIMTRUE shift to state 892
-- On DEFINE shift to state 895
-- On CONST shift to state 903
-- On CLAUSES shift to state 909
-- On CHANNEL shift to state 911
-- On lib shift to state 923
-- On # reduce production lib -> 

State 923:
lib -> ELIMTRUE nemayfailvartypeseq SEMI term DOT lib . [ # ]
-- On # reduce production lib -> ELIMTRUE nemayfailvartypeseq SEMI term DOT lib

State 924:
lib -> EQUATION eqlist options DOT lib . [ # ]
-- On # reduce production lib -> EQUATION eqlist options DOT lib

State 925:
lib -> EVENT IDENT LPAREN typeidseq RPAREN DOT lib . [ # ]
-- On # reduce production lib -> EVENT IDENT LPAREN typeidseq RPAREN DOT lib

State 926:
lib -> EVENT IDENT DOT . lib [ # ]
-- On WEAKSECRET shift to state 786
-- On TYPE shift to state 789
-- On TABLE shift to state 793
-- On SET shift to state 799
-- On REDUCTION shift to state 804
-- On QUERY shift to state 808
-- On PROOF shift to state 811
-- On PROBA shift to state 815
-- On PREDICATE shift to state 818
-- On PARAM shift to state 825
-- On NOUNIF shift to state 829
-- On NOT shift to state 832
-- On NONINTERF shift to state 837
-- On LETFUN shift to state 840
-- On LET shift to state 848
-- On IMPLEMENTATION shift to state 856
-- On FUN shift to state 859
-- On FREE shift to state 870
-- On EXPAND shift to state 876
-- On EVENT shift to state 882
-- On EQUATION shift to state 888
-- On ELIMTRUE shift to state 892
-- On DEFINE shift to state 895
-- On CONST shift to state 903
-- On CLAUSES shift to state 909
-- On CHANNEL shift to state 911
-- On lib shift to state 927
-- On # reduce production lib -> 

State 927:
lib -> EVENT IDENT DOT lib . [ # ]
-- On # reduce production lib -> EVENT IDENT DOT lib

State 928:
lib -> EXPAND IDENT LPAREN typeidseq RPAREN DOT lib . [ # ]
-- On # reduce production lib -> EXPAND IDENT LPAREN typeidseq RPAREN DOT lib

State 929:
lib -> FREE neidentseq COLON typeid options DOT lib . [ # ]
-- On # reduce production lib -> FREE neidentseq COLON typeid options DOT lib

State 930:
lib -> FUN IDENT LPAREN typeidseq RPAREN COLON typeid REDUCTION treducmayfail options DOT lib . [ # ]
-- On # reduce production lib -> FUN IDENT LPAREN typeidseq RPAREN COLON typeid REDUCTION treducmayfail options DOT lib

State 931:
lib -> FUN IDENT LPAREN typeidseq RPAREN COLON typeid options . DOT lib [ # ]
-- On DOT shift to state 932

State 932:
lib -> FUN IDENT LPAREN typeidseq RPAREN COLON typeid options DOT . lib [ # ]
-- On WEAKSECRET shift to state 786
-- On TYPE shift to state 789
-- On TABLE shift to state 793
-- On SET shift to state 799
-- On REDUCTION shift to state 804
-- On QUERY shift to state 808
-- On PROOF shift to state 811
-- On PROBA shift to state 815
-- On PREDICATE shift to state 818
-- On PARAM shift to state 825
-- On NOUNIF shift to state 829
-- On NOT shift to state 832
-- On NONINTERF shift to state 837
-- On LETFUN shift to state 840
-- On LET shift to state 848
-- On IMPLEMENTATION shift to state 856
-- On FUN shift to state 859
-- On FREE shift to state 870
-- On EXPAND shift to state 876
-- On EVENT shift to state 882
-- On EQUATION shift to state 888
-- On ELIMTRUE shift to state 892
-- On DEFINE shift to state 895
-- On CONST shift to state 903
-- On CLAUSES shift to state 909
-- On CHANNEL shift to state 911
-- On lib shift to state 933
-- On # reduce production lib -> 

State 933:
lib -> FUN IDENT LPAREN typeidseq RPAREN COLON typeid options DOT lib . [ # ]
-- On # reduce production lib -> FUN IDENT LPAREN typeidseq RPAREN COLON typeid options DOT lib

State 934:
lib -> IMPLEMENTATION impllist DOT lib . [ # ]
-- On # reduce production lib -> IMPLEMENTATION impllist DOT lib

State 935:
lib -> LET IDENT LPAREN mayfailvartypeseq RPAREN EQUAL tprocess DOT lib . [ # ]
-- On # reduce production lib -> LET IDENT LPAREN mayfailvartypeseq RPAREN EQUAL tprocess DOT lib

State 936:
lib -> LET IDENT EQUAL . tprocess DOT lib [ # ]
-- On YIELD shift to state 418
-- On REPL shift to state 419
-- On PHASE shift to state 420
-- On OUT shift to state 423
-- On NEW shift to state 432
-- On LPAREN shift to state 438
-- On LET shift to state 439
-- On INT shift to state 444
-- On INSERT shift to state 445
-- On IN shift to state 451
-- On IF shift to state 458
-- On IDENT shift to state 461
-- On GET shift to state 481
-- On FOREACH shift to state 489
-- On EVENT shift to state 494
-- On BARRIER shift to state 503
-- On tprocess shift to state 937
-- On progbegin shift to state 511
-- On basicpattern shift to state 515

State 937:
lib -> LET IDENT EQUAL tprocess . DOT lib [ # ]
tprocess -> tprocess . BAR tprocess [ DOT BAR ]
-- On DOT shift to state 938
-- On BAR shift to state 513

State 938:
lib -> LET IDENT EQUAL tprocess DOT . lib [ # ]
-- On WEAKSECRET shift to state 786
-- On TYPE shift to state 789
-- On TABLE shift to state 793
-- On SET shift to state 799
-- On REDUCTION shift to state 804
-- On QUERY shift to state 808
-- On PROOF shift to state 811
-- On PROBA shift to state 815
-- On PREDICATE shift to state 818
-- On PARAM shift to state 825
-- On NOUNIF shift to state 829
-- On NOT shift to state 832
-- On NONINTERF shift to state 837
-- On LETFUN shift to state 840
-- On LET shift to state 848
-- On IMPLEMENTATION shift to state 856
-- On FUN shift to state 859
-- On FREE shift to state 870
-- On EXPAND shift to state 876
-- On EVENT shift to state 882
-- On EQUATION shift to state 888
-- On ELIMTRUE shift to state 892
-- On DEFINE shift to state 895
-- On CONST shift to state 903
-- On CLAUSES shift to state 909
-- On CHANNEL shift to state 911
-- On lib shift to state 939
-- On # reduce production lib -> 

State 939:
lib -> LET IDENT EQUAL tprocess DOT lib . [ # ]
-- On # reduce production lib -> LET IDENT EQUAL tprocess DOT lib

State 940:
lib -> LETFUN IDENT LPAREN mayfailvartypeseq RPAREN EQUAL pterm DOT lib . [ # ]
-- On # reduce production lib -> LETFUN IDENT LPAREN mayfailvartypeseq RPAREN EQUAL pterm DOT lib

State 941:
lib -> LETFUN IDENT EQUAL . pterm DOT lib [ # ]
-- On NOT shift to state 288
-- On NEW shift to state 290
-- On LPAREN shift to state 300
-- On LET shift to state 301
-- On INSERT shift to state 306
-- On IF shift to state 309
-- On IDENT shift to state 310
-- On GET shift to state 314
-- On EVENT shift to state 320
-- On CHOICE shift to state 323
-- On pterm shift to state 942
-- On basicpattern shift to state 332

State 942:
lib -> LETFUN IDENT EQUAL pterm . DOT lib [ # ]
pterm -> pterm . EQUAL pterm [ WEDGE OR EQUAL DOT DIFF ]
pterm -> pterm . DIFF pterm [ WEDGE OR EQUAL DOT DIFF ]
pterm -> pterm . OR pterm [ WEDGE OR EQUAL DOT DIFF ]
pterm -> pterm . WEDGE pterm [ WEDGE OR EQUAL DOT DIFF ]
-- On WEDGE shift to state 326
-- On OR shift to state 337
-- On EQUAL shift to state 328
-- On DOT shift to state 943
-- On DIFF shift to state 330

State 943:
lib -> LETFUN IDENT EQUAL pterm DOT . lib [ # ]
-- On WEAKSECRET shift to state 786
-- On TYPE shift to state 789
-- On TABLE shift to state 793
-- On SET shift to state 799
-- On REDUCTION shift to state 804
-- On QUERY shift to state 808
-- On PROOF shift to state 811
-- On PROBA shift to state 815
-- On PREDICATE shift to state 818
-- On PARAM shift to state 825
-- On NOUNIF shift to state 829
-- On NOT shift to state 832
-- On NONINTERF shift to state 837
-- On LETFUN shift to state 840
-- On LET shift to state 848
-- On IMPLEMENTATION shift to state 856
-- On FUN shift to state 859
-- On FREE shift to state 870
-- On EXPAND shift to state 876
-- On EVENT shift to state 882
-- On EQUATION shift to state 888
-- On ELIMTRUE shift to state 892
-- On DEFINE shift to state 895
-- On CONST shift to state 903
-- On CLAUSES shift to state 909
-- On CHANNEL shift to state 911
-- On lib shift to state 944
-- On # reduce production lib -> 

State 944:
lib -> LETFUN IDENT EQUAL pterm DOT lib . [ # ]
-- On # reduce production lib -> LETFUN IDENT EQUAL pterm DOT lib

State 945:
lib -> NONINTERF niseq DOT lib . [ # ]
-- On # reduce production lib -> NONINTERF niseq DOT lib

State 946:
lib -> NONINTERF nevartype . SEMI niseq DOT lib [ # ]
-- On SEMI shift to state 947

State 947:
lib -> NONINTERF nevartype SEMI . niseq DOT lib [ # ]
-- On IDENT shift to state 724
-- On niseq shift to state 948
-- On ni shift to state 722

State 948:
lib -> NONINTERF nevartype SEMI niseq . DOT lib [ # ]
-- On DOT shift to state 949

State 949:
lib -> NONINTERF nevartype SEMI niseq DOT . lib [ # ]
-- On WEAKSECRET shift to state 786
-- On TYPE shift to state 789
-- On TABLE shift to state 793
-- On SET shift to state 799
-- On REDUCTION shift to state 804
-- On QUERY shift to state 808
-- On PROOF shift to state 811
-- On PROBA shift to state 815
-- On PREDICATE shift to state 818
-- On PARAM shift to state 825
-- On NOUNIF shift to state 829
-- On NOT shift to state 832
-- On NONINTERF shift to state 837
-- On LETFUN shift to state 840
-- On LET shift to state 848
-- On IMPLEMENTATION shift to state 856
-- On FUN shift to state 859
-- On FREE shift to state 870
-- On EXPAND shift to state 876
-- On EVENT shift to state 882
-- On EQUATION shift to state 888
-- On ELIMTRUE shift to state 892
-- On DEFINE shift to state 895
-- On CONST shift to state 903
-- On CLAUSES shift to state 909
-- On CHANNEL shift to state 911
-- On lib shift to state 950
-- On # reduce production lib -> 

State 950:
lib -> NONINTERF nevartype SEMI niseq DOT lib . [ # ]
-- On # reduce production lib -> NONINTERF nevartype SEMI niseq DOT lib

State 951:
lib -> NOT nevartype SEMI gterm DOT lib . [ # ]
-- On # reduce production lib -> NOT nevartype SEMI gterm DOT lib

State 952:
gterm -> gterm . EQUAL gterm [ WEDGE OR EQUAL DOT DIFF BEFORE ]
gterm -> gterm . DIFF gterm [ WEDGE OR EQUAL DOT DIFF BEFORE ]
gterm -> gterm . OR gterm [ WEDGE OR EQUAL DOT DIFF BEFORE ]
gterm -> gterm . WEDGE gterm [ WEDGE OR EQUAL DOT DIFF BEFORE ]
gterm -> gterm . BEFORE gterm [ WEDGE OR EQUAL DOT DIFF BEFORE ]
lib -> NOT gterm . DOT lib [ # ]
-- On WEDGE shift to state 63
-- On OR shift to state 69
-- On EQUAL shift to state 65
-- On DOT shift to state 953
-- On DIFF shift to state 67
-- On BEFORE shift to state 74

State 953:
lib -> NOT gterm DOT . lib [ # ]
-- On WEAKSECRET shift to state 786
-- On TYPE shift to state 789
-- On TABLE shift to state 793
-- On SET shift to state 799
-- On REDUCTION shift to state 804
-- On QUERY shift to state 808
-- On PROOF shift to state 811
-- On PROBA shift to state 815
-- On PREDICATE shift to state 818
-- On PARAM shift to state 825
-- On NOUNIF shift to state 829
-- On NOT shift to state 832
-- On NONINTERF shift to state 837
-- On LETFUN shift to state 840
-- On LET shift to state 848
-- On IMPLEMENTATION shift to state 856
-- On FUN shift to state 859
-- On FREE shift to state 870
-- On EXPAND shift to state 876
-- On EVENT shift to state 882
-- On EQUATION shift to state 888
-- On ELIMTRUE shift to state 892
-- On DEFINE shift to state 895
-- On CONST shift to state 903
-- On CLAUSES shift to state 909
-- On CHANNEL shift to state 911
-- On lib shift to state 954
-- On # reduce production lib -> 

State 954:
lib -> NOT gterm DOT lib . [ # ]
-- On # reduce production lib -> NOT gterm DOT lib

State 955:
lib -> NOUNIF tfnebindingseq DOT lib . [ # ]
-- On # reduce production lib -> NOUNIF tfnebindingseq DOT lib

State 956:
lib -> NOUNIF nevartype . SEMI tfnebindingseq DOT lib [ # ]
-- On SEMI shift to state 957

State 957:
lib -> NOUNIF nevartype SEMI . tfnebindingseq DOT lib [ # ]
-- On TABLE shift to state 161
-- On LET shift to state 213
-- On IDENT shift to state 218
-- On tfnebindingseq shift to state 958

State 958:
lib -> NOUNIF nevartype SEMI tfnebindingseq . DOT lib [ # ]
-- On DOT shift to state 959

State 959:
lib -> NOUNIF nevartype SEMI tfnebindingseq DOT . lib [ # ]
-- On WEAKSECRET shift to state 786
-- On TYPE shift to state 789
-- On TABLE shift to state 793
-- On SET shift to state 799
-- On REDUCTION shift to state 804
-- On QUERY shift to state 808
-- On PROOF shift to state 811
-- On PROBA shift to state 815
-- On PREDICATE shift to state 818
-- On PARAM shift to state 825
-- On NOUNIF shift to state 829
-- On NOT shift to state 832
-- On NONINTERF shift to state 837
-- On LETFUN shift to state 840
-- On LET shift to state 848
-- On IMPLEMENTATION shift to state 856
-- On FUN shift to state 859
-- On FREE shift to state 870
-- On EXPAND shift to state 876
-- On EVENT shift to state 882
-- On EQUATION shift to state 888
-- On ELIMTRUE shift to state 892
-- On DEFINE shift to state 895
-- On CONST shift to state 903
-- On CLAUSES shift to state 909
-- On CHANNEL shift to state 911
-- On lib shift to state 960
-- On # reduce production lib -> 

State 960:
lib -> NOUNIF nevartype SEMI tfnebindingseq DOT lib . [ # ]
-- On # reduce production lib -> NOUNIF nevartype SEMI tfnebindingseq DOT lib

State 961:
lib -> PARAM neidentseq options DOT lib . [ # ]
-- On # reduce production lib -> PARAM neidentseq options DOT lib

State 962:
lib -> PREDICATE IDENT LPAREN typeidseq RPAREN options DOT lib . [ # ]
-- On # reduce production lib -> PREDICATE IDENT LPAREN typeidseq RPAREN options DOT lib

State 963:
lib -> PREDICATE IDENT options . DOT lib [ # ]
-- On DOT shift to state 964

State 964:
lib -> PREDICATE IDENT options DOT . lib [ # ]
-- On WEAKSECRET shift to state 786
-- On TYPE shift to state 789
-- On TABLE shift to state 793
-- On SET shift to state 799
-- On REDUCTION shift to state 804
-- On QUERY shift to state 808
-- On PROOF shift to state 811
-- On PROBA shift to state 815
-- On PREDICATE shift to state 818
-- On PARAM shift to state 825
-- On NOUNIF shift to state 829
-- On NOT shift to state 832
-- On NONINTERF shift to state 837
-- On LETFUN shift to state 840
-- On LET shift to state 848
-- On IMPLEMENTATION shift to state 856
-- On FUN shift to state 859
-- On FREE shift to state 870
-- On EXPAND shift to state 876
-- On EVENT shift to state 882
-- On EQUATION shift to state 888
-- On ELIMTRUE shift to state 892
-- On DEFINE shift to state 895
-- On CONST shift to state 903
-- On CLAUSES shift to state 909
-- On CHANNEL shift to state 911
-- On lib shift to state 965
-- On # reduce production lib -> 

State 965:
lib -> PREDICATE IDENT options DOT lib . [ # ]
-- On # reduce production lib -> PREDICATE IDENT options DOT lib

State 966:
lib -> PROBA IDENT DOT lib . [ # ]
-- On # reduce production lib -> PROBA IDENT DOT lib

State 967:
lib -> PROOF LBRACE proof RBRACE lib . [ # ]
-- On # reduce production lib -> PROOF LBRACE proof RBRACE lib

State 968:
lib -> QUERY tqueryseq DOT lib . [ # ]
-- On # reduce production lib -> QUERY tqueryseq DOT lib

State 969:
lib -> QUERY nevartype . SEMI tqueryseq DOT lib [ # ]
-- On SEMI shift to state 970

State 970:
lib -> QUERY nevartype SEMI . tqueryseq DOT lib [ # ]
-- On TABLE shift to state 40
-- On SECRET shift to state 110
-- On PUTBEGIN shift to state 116
-- On NOT shift to state 42
-- On NEW shift to state 44
-- On LPAREN shift to state 50
-- On LET shift to state 51
-- On INJEVENT shift to state 54
-- On IDENT shift to state 56
-- On EVENT shift to state 58
-- On CHOICE shift to state 60
-- On tqueryseq shift to state 971
-- On tquery shift to state 749
-- On gterm shift to state 752

State 971:
lib -> QUERY nevartype SEMI tqueryseq . DOT lib [ # ]
-- On DOT shift to state 972

State 972:
lib -> QUERY nevartype SEMI tqueryseq DOT . lib [ # ]
-- On WEAKSECRET shift to state 786
-- On TYPE shift to state 789
-- On TABLE shift to state 793
-- On SET shift to state 799
-- On REDUCTION shift to state 804
-- On QUERY shift to state 808
-- On PROOF shift to state 811
-- On PROBA shift to state 815
-- On PREDICATE shift to state 818
-- On PARAM shift to state 825
-- On NOUNIF shift to state 829
-- On NOT shift to state 832
-- On NONINTERF shift to state 837
-- On LETFUN shift to state 840
-- On LET shift to state 848
-- On IMPLEMENTATION shift to state 856
-- On FUN shift to state 859
-- On FREE shift to state 870
-- On EXPAND shift to state 876
-- On EVENT shift to state 882
-- On EQUATION shift to state 888
-- On ELIMTRUE shift to state 892
-- On DEFINE shift to state 895
-- On CONST shift to state 903
-- On CLAUSES shift to state 909
-- On CHANNEL shift to state 911
-- On lib shift to state 973
-- On # reduce production lib -> 

State 973:
lib -> QUERY nevartype SEMI tqueryseq DOT lib . [ # ]
-- On # reduce production lib -> QUERY nevartype SEMI tqueryseq DOT lib

State 974:
lib -> REDUCTION treduc options DOT lib . [ # ]
-- On # reduce production lib -> REDUCTION treduc options DOT lib

State 975:
lib -> SET IDENT EQUAL STRING DOT lib . [ # ]
-- On # reduce production lib -> SET IDENT EQUAL STRING DOT lib

State 976:
lib -> SET IDENT EQUAL INT . DOT lib [ # ]
-- On DOT shift to state 977

State 977:
lib -> SET IDENT EQUAL INT DOT . lib [ # ]
-- On WEAKSECRET shift to state 786
-- On TYPE shift to state 789
-- On TABLE shift to state 793
-- On SET shift to state 799
-- On REDUCTION shift to state 804
-- On QUERY shift to state 808
-- On PROOF shift to state 811
-- On PROBA shift to state 815
-- On PREDICATE shift to state 818
-- On PARAM shift to state 825
-- On NOUNIF shift to state 829
-- On NOT shift to state 832
-- On NONINTERF shift to state 837
-- On LETFUN shift to state 840
-- On LET shift to state 848
-- On IMPLEMENTATION shift to state 856
-- On FUN shift to state 859
-- On FREE shift to state 870
-- On EXPAND shift to state 876
-- On EVENT shift to state 882
-- On EQUATION shift to state 888
-- On ELIMTRUE shift to state 892
-- On DEFINE shift to state 895
-- On CONST shift to state 903
-- On CLAUSES shift to state 909
-- On CHANNEL shift to state 911
-- On lib shift to state 978
-- On # reduce production lib -> 

State 978:
lib -> SET IDENT EQUAL INT DOT lib . [ # ]
-- On # reduce production lib -> SET IDENT EQUAL INT DOT lib

State 979:
lib -> SET IDENT EQUAL IDENT . DOT lib [ # ]
-- On DOT shift to state 980

State 980:
lib -> SET IDENT EQUAL IDENT DOT . lib [ # ]
-- On WEAKSECRET shift to state 786
-- On TYPE shift to state 789
-- On TABLE shift to state 793
-- On SET shift to state 799
-- On REDUCTION shift to state 804
-- On QUERY shift to state 808
-- On PROOF shift to state 811
-- On PROBA shift to state 815
-- On PREDICATE shift to state 818
-- On PARAM shift to state 825
-- On NOUNIF shift to state 829
-- On NOT shift to state 832
-- On NONINTERF shift to state 837
-- On LETFUN shift to state 840
-- On LET shift to state 848
-- On IMPLEMENTATION shift to state 856
-- On FUN shift to state 859
-- On FREE shift to state 870
-- On EXPAND shift to state 876
-- On EVENT shift to state 882
-- On EQUATION shift to state 888
-- On ELIMTRUE shift to state 892
-- On DEFINE shift to state 895
-- On CONST shift to state 903
-- On CLAUSES shift to state 909
-- On CHANNEL shift to state 911
-- On lib shift to state 981
-- On # reduce production lib -> 

State 981:
lib -> SET IDENT EQUAL IDENT DOT lib . [ # ]
-- On # reduce production lib -> SET IDENT EQUAL IDENT DOT lib

State 982:
lib -> TABLE IDENT LPAREN typeidseq RPAREN DOT lib . [ # ]
-- On # reduce production lib -> TABLE IDENT LPAREN typeidseq RPAREN DOT lib

State 983:
lib -> TYPE IDENT options DOT lib . [ # ]
-- On # reduce production lib -> TYPE IDENT options DOT lib

State 984:
lib -> WEAKSECRET IDENT DOT lib . [ # ]
-- On # reduce production lib -> WEAKSECRET IDENT DOT lib

State 985:
lib' -> lib . [ # ]
-- On # accept lib

State 986:
order' -> . order [ # ]
-- On IDENT shift to state 987
-- On order shift to state 990

State 987:
order -> IDENT . GREATER order [ # ]
order -> IDENT . [ # ]
-- On GREATER shift to state 988
-- On # reduce production order -> IDENT

State 988:
order -> IDENT GREATER . order [ # ]
-- On IDENT shift to state 987
-- On order shift to state 989

State 989:
order -> IDENT GREATER order . [ # ]
-- On # reduce production order -> IDENT GREATER order

State 990:
order' -> order . [ # ]
-- On # accept order

State 991:
permut' -> . permut [ # ]
-- On IDENT shift to state 992
-- On ATIDENT shift to state 993
-- On tag shift to state 994
-- On permut shift to state 998
-- On onepermut shift to state 999
-- On # reduce production permut -> 

State 992:
tag -> IDENT . [ SEMI RED # ]
-- On SEMI reduce production tag -> IDENT
-- On RED reduce production tag -> IDENT
-- On # reduce production tag -> IDENT

State 993:
tag -> ATIDENT . [ SEMI RED # ]
-- On SEMI reduce production tag -> ATIDENT
-- On RED reduce production tag -> ATIDENT
-- On # reduce production tag -> ATIDENT

State 994:
onepermut -> tag . RED tag [ SEMI # ]
onepermut -> tag . RED onepermut [ SEMI # ]
-- On RED shift to state 995

State 995:
onepermut -> tag RED . tag [ SEMI # ]
onepermut -> tag RED . onepermut [ SEMI # ]
-- On IDENT shift to state 992
-- On ATIDENT shift to state 993
-- On tag shift to state 996
-- On onepermut shift to state 997

State 996:
onepermut -> tag . RED tag [ SEMI # ]
onepermut -> tag RED tag . [ SEMI # ]
onepermut -> tag . RED onepermut [ SEMI # ]
-- On RED shift to state 995
-- On SEMI reduce production onepermut -> tag RED tag
-- On # reduce production onepermut -> tag RED tag

State 997:
onepermut -> tag RED onepermut . [ SEMI # ]
-- On SEMI reduce production onepermut -> tag RED onepermut
-- On # reduce production onepermut -> tag RED onepermut

State 998:
permut' -> permut . [ # ]
-- On # accept permut

State 999:
permut -> onepermut . [ # ]
permut -> onepermut . SEMI permut [ # ]
-- On SEMI shift to state 1000
-- On # reduce production permut -> onepermut

State 1000:
permut -> onepermut SEMI . permut [ # ]
-- On IDENT shift to state 992
-- On ATIDENT shift to state 993
-- On tag shift to state 994
-- On permut shift to state 1001
-- On onepermut shift to state 999
-- On # reduce production permut -> 

State 1001:
permut -> onepermut SEMI permut . [ # ]
-- On # reduce production permut -> onepermut SEMI permut

State 1002:
term' -> . term [ # ]
-- On PROJECTION shift to state 238
-- On NOT shift to state 240
-- On LPAREN shift to state 242
-- On IDENT shift to state 243
-- On FAIL shift to state 245
-- On CHOICE shift to state 246
-- On term shift to state 1003

State 1003:
term' -> term . [ # ]
term -> term . EQUAL term [ WEDGE OR EQUAL DIFF # ]
term -> term . DIFF term [ WEDGE OR EQUAL DIFF # ]
term -> term . OR term [ WEDGE OR EQUAL DIFF # ]
term -> term . WEDGE term [ WEDGE OR EQUAL DIFF # ]
-- On WEDGE shift to state 249
-- On OR shift to state 255
-- On EQUAL shift to state 251
-- On DIFF shift to state 253
-- On # accept term

State 243 has an end-of-stream conflict. There is a tension between
(1) reducing production term -> IDENT
without even requesting a lookahead token, and
(2) checking whether the lookahead token is one of WEDGE SEMI RPAREN RED RBRACKET OTHERWISE OR LPAREN LBRACKET EQUIVEQ EQUIV EQUAL DOT DIFF COMMA,
which would require some other action.

State 245 has an end-of-stream conflict. There is a tension between
(1) reducing production term -> FAIL
without even requesting a lookahead token, and
(2) checking whether the lookahead token is one of WEDGE SEMI RPAREN RED RBRACKET OTHERWISE OR LBRACKET EQUIVEQ EQUIV EQUAL DOT DIFF COMMA,
which would require some other action.

State 250 has an end-of-stream conflict. There is a tension between
(1) reducing production term -> term WEDGE term
without even requesting a lookahead token, and
(2) checking whether the lookahead token is one of WEDGE SEMI RPAREN RED RBRACKET OTHERWISE OR LBRACKET EQUIVEQ EQUIV EQUAL DOT DIFF COMMA,
which would require some other action.

State 252 has an end-of-stream conflict. There is a tension between
(1) reducing production term -> term EQUAL term
without even requesting a lookahead token, and
(2) checking whether the lookahead token is one of WEDGE SEMI RPAREN RED RBRACKET OTHERWISE OR LBRACKET EQUIVEQ EQUIV DOT DIFF COMMA,
which would require some other action.

State 254 has an end-of-stream conflict. There is a tension between
(1) reducing production term -> term DIFF term
without even requesting a lookahead token, and
(2) checking whether the lookahead token is one of WEDGE SEMI RPAREN RED RBRACKET OTHERWISE OR LBRACKET EQUIVEQ EQUIV EQUAL DOT COMMA,
which would require some other action.

State 256 has an end-of-stream conflict. There is a tension between
(1) reducing production term -> term OR term
without even requesting a lookahead token, and
(2) checking whether the lookahead token is one of WEDGE SEMI RPAREN RED RBRACKET OTHERWISE OR LBRACKET EQUIVEQ EQUIV EQUAL DOT DIFF COMMA,
which would require some other action.

State 259 has an end-of-stream conflict. There is a tension between
(1) reducing production term -> CHOICE LBRACKET term COMMA term RBRACKET
without even requesting a lookahead token, and
(2) checking whether the lookahead token is one of WEDGE SEMI RPAREN RED RBRACKET OTHERWISE OR LBRACKET EQUIVEQ EQUIV EQUAL DOT DIFF COMMA,
which would require some other action.

State 261 has an end-of-stream conflict. There is a tension between
(1) reducing production term -> IDENT LPAREN termseq RPAREN
without even requesting a lookahead token, and
(2) checking whether the lookahead token is one of WEDGE SEMI RPAREN RED RBRACKET OTHERWISE OR LBRACKET EQUIVEQ EQUIV EQUAL DOT DIFF COMMA,
which would require some other action.

State 267 has an end-of-stream conflict. There is a tension between
(1) reducing production term -> LPAREN termseq RPAREN
without even requesting a lookahead token, and
(2) checking whether the lookahead token is one of WEDGE SEMI RPAREN RED RBRACKET OTHERWISE OR LBRACKET EQUIVEQ EQUIV EQUAL DOT DIFF COMMA,
which would require some other action.

State 269 has an end-of-stream conflict. There is a tension between
(1) reducing production term -> NOT LPAREN term RPAREN
without even requesting a lookahead token, and
(2) checking whether the lookahead token is one of WEDGE SEMI RPAREN RED RBRACKET OTHERWISE OR LBRACKET EQUIVEQ EQUIV EQUAL DOT DIFF COMMA,
which would require some other action.

State 271 has an end-of-stream conflict. There is a tension between
(1) reducing production term -> PROJECTION LPAREN term RPAREN
without even requesting a lookahead token, and
(2) checking whether the lookahead token is one of WEDGE SEMI RPAREN RED RBRACKET OTHERWISE OR LBRACKET EQUIVEQ EQUIV EQUAL DOT DIFF COMMA,
which would require some other action.

State 670 has an end-of-stream conflict. There is a tension between
(1) reducing production tclauses -> forallmayfailvartype tclause SEMI tclauses
without even requesting a lookahead token, and
(2) checking whether the lookahead token is one of WEAKSECRET TYPE TABLE SET REDUCTION RBRACE QUERY PROOF PROCESS PROBA PREDICATE PARAM NOUNIF NOT NONINTERF LETFUN LET IMPLEMENTATION FUN FREE EXPAND EVENT EQUIVALENCE EQUATION ELIMTRUE DEFINE CONST CLAUSES CHANNEL,
which would require some other action.

State 671 has an end-of-stream conflict. There is a tension between
(1) reducing production tclauses -> forallmayfailvartype tclause DOT
without even requesting a lookahead token, and
(2) checking whether the lookahead token is one of WEAKSECRET TYPE TABLE SET REDUCTION RBRACE QUERY PROOF PROCESS PROBA PREDICATE PARAM NOUNIF NOT NONINTERF LETFUN LET IMPLEMENTATION FUN FREE EXPAND EVENT EQUIVALENCE EQUATION ELIMTRUE DEFINE CONST CLAUSES CHANNEL,
which would require some other action.

State 785 has an end-of-stream conflict. There is a tension between
(1) reducing production lib -> 
without even requesting a lookahead token, and
(2) checking whether the lookahead token is one of WEAKSECRET TYPE TABLE SET REDUCTION QUERY PROOF PROBA PREDICATE PARAM NOUNIF NOT NONINTERF LETFUN LET IMPLEMENTATION FUN FREE EXPAND EVENT EQUATION ELIMTRUE DEFINE CONST CLAUSES CHANNEL,
which would require some other action.

State 788 has an end-of-stream conflict. There is a tension between
(1) reducing production lib -> 
without even requesting a lookahead token, and
(2) checking whether the lookahead token is one of WEAKSECRET TYPE TABLE SET REDUCTION QUERY PROOF PROBA PREDICATE PARAM NOUNIF NOT NONINTERF LETFUN LET IMPLEMENTATION FUN FREE EXPAND EVENT EQUATION ELIMTRUE DEFINE CONST CLAUSES CHANNEL,
which would require some other action.

State 792 has an end-of-stream conflict. There is a tension between
(1) reducing production lib -> 
without even requesting a lookahead token, and
(2) checking whether the lookahead token is one of WEAKSECRET TYPE TABLE SET REDUCTION QUERY PROOF PROBA PREDICATE PARAM NOUNIF NOT NONINTERF LETFUN LET IMPLEMENTATION FUN FREE EXPAND EVENT EQUATION ELIMTRUE DEFINE CONST CLAUSES CHANNEL,
which would require some other action.

State 798 has an end-of-stream conflict. There is a tension between
(1) reducing production lib -> 
without even requesting a lookahead token, and
(2) checking whether the lookahead token is one of WEAKSECRET TYPE TABLE SET REDUCTION QUERY PROOF PROBA PREDICATE PARAM NOUNIF NOT NONINTERF LETFUN LET IMPLEMENTATION FUN FREE EXPAND EVENT EQUATION ELIMTRUE DEFINE CONST CLAUSES CHANNEL,
which would require some other action.

State 803 has an end-of-stream conflict. There is a tension between
(1) reducing production lib -> 
without even requesting a lookahead token, and
(2) checking whether the lookahead token is one of WEAKSECRET TYPE TABLE SET REDUCTION QUERY PROOF PROBA PREDICATE PARAM NOUNIF NOT NONINTERF LETFUN LET IMPLEMENTATION FUN FREE EXPAND EVENT EQUATION ELIMTRUE DEFINE CONST CLAUSES CHANNEL,
which would require some other action.

State 807 has an end-of-stream conflict. There is a tension between
(1) reducing production lib -> 
without even requesting a lookahead token, and
(2) checking whether the lookahead token is one of WEAKSECRET TYPE TABLE SET REDUCTION QUERY PROOF PROBA PREDICATE PARAM NOUNIF NOT NONINTERF LETFUN LET IMPLEMENTATION FUN FREE EXPAND EVENT EQUATION ELIMTRUE DEFINE CONST CLAUSES CHANNEL,
which would require some other action.

State 810 has an end-of-stream conflict. There is a tension between
(1) reducing production lib -> 
without even requesting a lookahead token, and
(2) checking whether the lookahead token is one of WEAKSECRET TYPE TABLE SET REDUCTION QUERY PROOF PROBA PREDICATE PARAM NOUNIF NOT NONINTERF LETFUN LET IMPLEMENTATION FUN FREE EXPAND EVENT EQUATION ELIMTRUE DEFINE CONST CLAUSES CHANNEL,
which would require some other action.

State 814 has an end-of-stream conflict. There is a tension between
(1) reducing production lib -> 
without even requesting a lookahead token, and
(2) checking whether the lookahead token is one of WEAKSECRET TYPE TABLE SET REDUCTION QUERY PROOF PROBA PREDICATE PARAM NOUNIF NOT NONINTERF LETFUN LET IMPLEMENTATION FUN FREE EXPAND EVENT EQUATION ELIMTRUE DEFINE CONST CLAUSES CHANNEL,
which would require some other action.

State 817 has an end-of-stream conflict. There is a tension between
(1) reducing production lib -> 
without even requesting a lookahead token, and
(2) checking whether the lookahead token is one of WEAKSECRET TYPE TABLE SET REDUCTION QUERY PROOF PROBA PREDICATE PARAM NOUNIF NOT NONINTERF LETFUN LET IMPLEMENTATION FUN FREE EXPAND EVENT EQUATION ELIMTRUE DEFINE CONST CLAUSES CHANNEL,
which would require some other action.

State 824 has an end-of-stream conflict. There is a tension between
(1) reducing production lib -> 
without even requesting a lookahead token, and
(2) checking whether the lookahead token is one of WEAKSECRET TYPE TABLE SET REDUCTION QUERY PROOF PROBA PREDICATE PARAM NOUNIF NOT NONINTERF LETFUN LET IMPLEMENTATION FUN FREE EXPAND EVENT EQUATION ELIMTRUE DEFINE CONST CLAUSES CHANNEL,
which would require some other action.

State 828 has an end-of-stream conflict. There is a tension between
(1) reducing production lib -> 
without even requesting a lookahead token, and
(2) checking whether the lookahead token is one of WEAKSECRET TYPE TABLE SET REDUCTION QUERY PROOF PROBA PREDICATE PARAM NOUNIF NOT NONINTERF LETFUN LET IMPLEMENTATION FUN FREE EXPAND EVENT EQUATION ELIMTRUE DEFINE CONST CLAUSES CHANNEL,
which would require some other action.

State 831 has an end-of-stream conflict. There is a tension between
(1) reducing production lib -> 
without even requesting a lookahead token, and
(2) checking whether the lookahead token is one of WEAKSECRET TYPE TABLE SET REDUCTION QUERY PROOF PROBA PREDICATE PARAM NOUNIF NOT NONINTERF LETFUN LET IMPLEMENTATION FUN FREE EXPAND EVENT EQUATION ELIMTRUE DEFINE CONST CLAUSES CHANNEL,
which would require some other action.

State 836 has an end-of-stream conflict. There is a tension between
(1) reducing production lib -> 
without even requesting a lookahead token, and
(2) checking whether the lookahead token is one of WEAKSECRET TYPE TABLE SET REDUCTION QUERY PROOF PROBA PREDICATE PARAM NOUNIF NOT NONINTERF LETFUN LET IMPLEMENTATION FUN FREE EXPAND EVENT EQUATION ELIMTRUE DEFINE CONST CLAUSES CHANNEL,
which would require some other action.

State 839 has an end-of-stream conflict. There is a tension between
(1) reducing production lib -> 
without even requesting a lookahead token, and
(2) checking whether the lookahead token is one of WEAKSECRET TYPE TABLE SET REDUCTION QUERY PROOF PROBA PREDICATE PARAM NOUNIF NOT NONINTERF LETFUN LET IMPLEMENTATION FUN FREE EXPAND EVENT EQUATION ELIMTRUE DEFINE CONST CLAUSES CHANNEL,
which would require some other action.

State 847 has an end-of-stream conflict. There is a tension between
(1) reducing production lib -> 
without even requesting a lookahead token, and
(2) checking whether the lookahead token is one of WEAKSECRET TYPE TABLE SET REDUCTION QUERY PROOF PROBA PREDICATE PARAM NOUNIF NOT NONINTERF LETFUN LET IMPLEMENTATION FUN FREE EXPAND EVENT EQUATION ELIMTRUE DEFINE CONST CLAUSES CHANNEL,
which would require some other action.

State 855 has an end-of-stream conflict. There is a tension between
(1) reducing production lib -> 
without even requesting a lookahead token, and
(2) checking whether the lookahead token is one of WEAKSECRET TYPE TABLE SET REDUCTION QUERY PROOF PROBA PREDICATE PARAM NOUNIF NOT NONINTERF LETFUN LET IMPLEMENTATION FUN FREE EXPAND EVENT EQUATION ELIMTRUE DEFINE CONST CLAUSES CHANNEL,
which would require some other action.

State 858 has an end-of-stream conflict. There is a tension between
(1) reducing production lib -> 
without even requesting a lookahead token, and
(2) checking whether the lookahead token is one of WEAKSECRET TYPE TABLE SET REDUCTION QUERY PROOF PROBA PREDICATE PARAM NOUNIF NOT NONINTERF LETFUN LET IMPLEMENTATION FUN FREE EXPAND EVENT EQUATION ELIMTRUE DEFINE CONST CLAUSES CHANNEL,
which would require some other action.

State 869 has an end-of-stream conflict. There is a tension between
(1) reducing production lib -> 
without even requesting a lookahead token, and
(2) checking whether the lookahead token is one of WEAKSECRET TYPE TABLE SET REDUCTION QUERY PROOF PROBA PREDICATE PARAM NOUNIF NOT NONINTERF LETFUN LET IMPLEMENTATION FUN FREE EXPAND EVENT EQUATION ELIMTRUE DEFINE CONST CLAUSES CHANNEL,
which would require some other action.

State 875 has an end-of-stream conflict. There is a tension between
(1) reducing production lib -> 
without even requesting a lookahead token, and
(2) checking whether the lookahead token is one of WEAKSECRET TYPE TABLE SET REDUCTION QUERY PROOF PROBA PREDICATE PARAM NOUNIF NOT NONINTERF LETFUN LET IMPLEMENTATION FUN FREE EXPAND EVENT EQUATION ELIMTRUE DEFINE CONST CLAUSES CHANNEL,
which would require some other action.

State 881 has an end-of-stream conflict. There is a tension between
(1) reducing production lib -> 
without even requesting a lookahead token, and
(2) checking whether the lookahead token is one of WEAKSECRET TYPE TABLE SET REDUCTION QUERY PROOF PROBA PREDICATE PARAM NOUNIF NOT NONINTERF LETFUN LET IMPLEMENTATION FUN FREE EXPAND EVENT EQUATION ELIMTRUE DEFINE CONST CLAUSES CHANNEL,
which would require some other action.

State 887 has an end-of-stream conflict. There is a tension between
(1) reducing production lib -> 
without even requesting a lookahead token, and
(2) checking whether the lookahead token is one of WEAKSECRET TYPE TABLE SET REDUCTION QUERY PROOF PROBA PREDICATE PARAM NOUNIF NOT NONINTERF LETFUN LET IMPLEMENTATION FUN FREE EXPAND EVENT EQUATION ELIMTRUE DEFINE CONST CLAUSES CHANNEL,
which would require some other action.

State 891 has an end-of-stream conflict. There is a tension between
(1) reducing production lib -> 
without even requesting a lookahead token, and
(2) checking whether the lookahead token is one of WEAKSECRET TYPE TABLE SET REDUCTION QUERY PROOF PROBA PREDICATE PARAM NOUNIF NOT NONINTERF LETFUN LET IMPLEMENTATION FUN FREE EXPAND EVENT EQUATION ELIMTRUE DEFINE CONST CLAUSES CHANNEL,
which would require some other action.

State 894 has an end-of-stream conflict. There is a tension between
(1) reducing production lib -> 
without even requesting a lookahead token, and
(2) checking whether the lookahead token is one of WEAKSECRET TYPE TABLE SET REDUCTION QUERY PROOF PROBA PREDICATE PARAM NOUNIF NOT NONINTERF LETFUN LET IMPLEMENTATION FUN FREE EXPAND EVENT EQUATION ELIMTRUE DEFINE CONST CLAUSES CHANNEL,
which would require some other action.

State 902 has an end-of-stream conflict. There is a tension between
(1) reducing production lib -> 
without even requesting a lookahead token, and
(2) checking whether the lookahead token is one of WEAKSECRET TYPE TABLE SET REDUCTION QUERY PROOF PROBA PREDICATE PARAM NOUNIF NOT NONINTERF LETFUN LET IMPLEMENTATION FUN FREE EXPAND EVENT EQUATION ELIMTRUE DEFINE CONST CLAUSES CHANNEL,
which would require some other action.

State 908 has an end-of-stream conflict. There is a tension between
(1) reducing production lib -> 
without even requesting a lookahead token, and
(2) checking whether the lookahead token is one of WEAKSECRET TYPE TABLE SET REDUCTION QUERY PROOF PROBA PREDICATE PARAM NOUNIF NOT NONINTERF LETFUN LET IMPLEMENTATION FUN FREE EXPAND EVENT EQUATION ELIMTRUE DEFINE CONST CLAUSES CHANNEL,
which would require some other action.

State 910 has an end-of-stream conflict. There is a tension between
(1) reducing production lib -> 
without even requesting a lookahead token, and
(2) checking whether the lookahead token is one of WEAKSECRET TYPE TABLE SET REDUCTION QUERY PROOF PROBA PREDICATE PARAM NOUNIF NOT NONINTERF LETFUN LET IMPLEMENTATION FUN FREE EXPAND EVENT EQUATION ELIMTRUE DEFINE CONST CLAUSES CHANNEL,
which would require some other action.

State 913 has an end-of-stream conflict. There is a tension between
(1) reducing production lib -> 
without even requesting a lookahead token, and
(2) checking whether the lookahead token is one of WEAKSECRET TYPE TABLE SET REDUCTION QUERY PROOF PROBA PREDICATE PARAM NOUNIF NOT NONINTERF LETFUN LET IMPLEMENTATION FUN FREE EXPAND EVENT EQUATION ELIMTRUE DEFINE CONST CLAUSES CHANNEL,
which would require some other action.

State 922 has an end-of-stream conflict. There is a tension between
(1) reducing production lib -> 
without even requesting a lookahead token, and
(2) checking whether the lookahead token is one of WEAKSECRET TYPE TABLE SET REDUCTION QUERY PROOF PROBA PREDICATE PARAM NOUNIF NOT NONINTERF LETFUN LET IMPLEMENTATION FUN FREE EXPAND EVENT EQUATION ELIMTRUE DEFINE CONST CLAUSES CHANNEL,
which would require some other action.

State 926 has an end-of-stream conflict. There is a tension between
(1) reducing production lib -> 
without even requesting a lookahead token, and
(2) checking whether the lookahead token is one of WEAKSECRET TYPE TABLE SET REDUCTION QUERY PROOF PROBA PREDICATE PARAM NOUNIF NOT NONINTERF LETFUN LET IMPLEMENTATION FUN FREE EXPAND EVENT EQUATION ELIMTRUE DEFINE CONST CLAUSES CHANNEL,
which would require some other action.

State 932 has an end-of-stream conflict. There is a tension between
(1) reducing production lib -> 
without even requesting a lookahead token, and
(2) checking whether the lookahead token is one of WEAKSECRET TYPE TABLE SET REDUCTION QUERY PROOF PROBA PREDICATE PARAM NOUNIF NOT NONINTERF LETFUN LET IMPLEMENTATION FUN FREE EXPAND EVENT EQUATION ELIMTRUE DEFINE CONST CLAUSES CHANNEL,
which would require some other action.

State 938 has an end-of-stream conflict. There is a tension between
(1) reducing production lib -> 
without even requesting a lookahead token, and
(2) checking whether the lookahead token is one of WEAKSECRET TYPE TABLE SET REDUCTION QUERY PROOF PROBA PREDICATE PARAM NOUNIF NOT NONINTERF LETFUN LET IMPLEMENTATION FUN FREE EXPAND EVENT EQUATION ELIMTRUE DEFINE CONST CLAUSES CHANNEL,
which would require some other action.

State 943 has an end-of-stream conflict. There is a tension between
(1) reducing production lib -> 
without even requesting a lookahead token, and
(2) checking whether the lookahead token is one of WEAKSECRET TYPE TABLE SET REDUCTION QUERY PROOF PROBA PREDICATE PARAM NOUNIF NOT NONINTERF LETFUN LET IMPLEMENTATION FUN FREE EXPAND EVENT EQUATION ELIMTRUE DEFINE CONST CLAUSES CHANNEL,
which would require some other action.

State 949 has an end-of-stream conflict. There is a tension between
(1) reducing production lib -> 
without even requesting a lookahead token, and
(2) checking whether the lookahead token is one of WEAKSECRET TYPE TABLE SET REDUCTION QUERY PROOF PROBA PREDICATE PARAM NOUNIF NOT NONINTERF LETFUN LET IMPLEMENTATION FUN FREE EXPAND EVENT EQUATION ELIMTRUE DEFINE CONST CLAUSES CHANNEL,
which would require some other action.

State 953 has an end-of-stream conflict. There is a tension between
(1) reducing production lib -> 
without even requesting a lookahead token, and
(2) checking whether the lookahead token is one of WEAKSECRET TYPE TABLE SET REDUCTION QUERY PROOF PROBA PREDICATE PARAM NOUNIF NOT NONINTERF LETFUN LET IMPLEMENTATION FUN FREE EXPAND EVENT EQUATION ELIMTRUE DEFINE CONST CLAUSES CHANNEL,
which would require some other action.

State 959 has an end-of-stream conflict. There is a tension between
(1) reducing production lib -> 
without even requesting a lookahead token, and
(2) checking whether the lookahead token is one of WEAKSECRET TYPE TABLE SET REDUCTION QUERY PROOF PROBA PREDICATE PARAM NOUNIF NOT NONINTERF LETFUN LET IMPLEMENTATION FUN FREE EXPAND EVENT EQUATION ELIMTRUE DEFINE CONST CLAUSES CHANNEL,
which would require some other action.

State 964 has an end-of-stream conflict. There is a tension between
(1) reducing production lib -> 
without even requesting a lookahead token, and
(2) checking whether the lookahead token is one of WEAKSECRET TYPE TABLE SET REDUCTION QUERY PROOF PROBA PREDICATE PARAM NOUNIF NOT NONINTERF LETFUN LET IMPLEMENTATION FUN FREE EXPAND EVENT EQUATION ELIMTRUE DEFINE CONST CLAUSES CHANNEL,
which would require some other action.

State 972 has an end-of-stream conflict. There is a tension between
(1) reducing production lib -> 
without even requesting a lookahead token, and
(2) checking whether the lookahead token is one of WEAKSECRET TYPE TABLE SET REDUCTION QUERY PROOF PROBA PREDICATE PARAM NOUNIF NOT NONINTERF LETFUN LET IMPLEMENTATION FUN FREE EXPAND EVENT EQUATION ELIMTRUE DEFINE CONST CLAUSES CHANNEL,
which would require some other action.

State 977 has an end-of-stream conflict. There is a tension between
(1) reducing production lib -> 
without even requesting a lookahead token, and
(2) checking whether the lookahead token is one of WEAKSECRET TYPE TABLE SET REDUCTION QUERY PROOF PROBA PREDICATE PARAM NOUNIF NOT NONINTERF LETFUN LET IMPLEMENTATION FUN FREE EXPAND EVENT EQUATION ELIMTRUE DEFINE CONST CLAUSES CHANNEL,
which would require some other action.

State 980 has an end-of-stream conflict. There is a tension between
(1) reducing production lib -> 
without even requesting a lookahead token, and
(2) checking whether the lookahead token is one of WEAKSECRET TYPE TABLE SET REDUCTION QUERY PROOF PROBA PREDICATE PARAM NOUNIF NOT NONINTERF LETFUN LET IMPLEMENTATION FUN FREE EXPAND EVENT EQUATION ELIMTRUE DEFINE CONST CLAUSES CHANNEL,
which would require some other action.

State 987 has an end-of-stream conflict. There is a tension between
(1) reducing production order -> IDENT
without even requesting a lookahead token, and
(2) checking whether the lookahead token is GREATER,
which would require some other action.

State 991 has an end-of-stream conflict. There is a tension between
(1) reducing production permut -> 
without even requesting a lookahead token, and
(2) checking whether the lookahead token is one of IDENT ATIDENT,
which would require some other action.

State 992 has an end-of-stream conflict. There is a tension between
(1) reducing production tag -> IDENT
without even requesting a lookahead token, and
(2) checking whether the lookahead token is one of SEMI RED,
which would require some other action.

State 993 has an end-of-stream conflict. There is a tension between
(1) reducing production tag -> ATIDENT
without even requesting a lookahead token, and
(2) checking whether the lookahead token is one of SEMI RED,
which would require some other action.

State 996 has an end-of-stream conflict. There is a tension between
(1) reducing production onepermut -> tag RED tag
without even requesting a lookahead token, and
(2) checking whether the lookahead token is one of SEMI RED,
which would require some other action.

State 997 has an end-of-stream conflict. There is a tension between
(1) reducing production onepermut -> tag RED onepermut
without even requesting a lookahead token, and
(2) checking whether the lookahead token is SEMI,
which would require some other action.

State 999 has an end-of-stream conflict. There is a tension between
(1) reducing production permut -> onepermut
without even requesting a lookahead token, and
(2) checking whether the lookahead token is SEMI,
which would require some other action.

State 1000 has an end-of-stream conflict. There is a tension between
(1) reducing production permut -> 
without even requesting a lookahead token, and
(2) checking whether the lookahead token is one of IDENT ATIDENT,
which would require some other action.

State 1003 has an end-of-stream conflict. There is a tension between
(1) accepting term
without even requesting a lookahead token, and
(2) checking whether the lookahead token is one of WEDGE OR EQUAL DIFF,
which would require some other action.

