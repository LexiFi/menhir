State 0:
commands' -> . commands [ # ]
-- On LP shift to state 1
-- On EOF shift to state 364
-- On commands shift to state 365
-- On command shift to state 366

State 1:
command -> LP . ASSERT assert_dec RP [ LP EOF ]
command -> LP . CHECKSAT RP [ LP EOF ]
command -> LP . CHECKSATASSUMING LP list(prop_literal) RP RP [ LP EOF ]
command -> LP . CHECKENTAILMENT assert_dec RP [ LP EOF ]
command -> LP . DECLARECONST symbol const_dec RP [ LP EOF ]
command -> LP . DECLAREDATATYPE symbol datatype_dec RP [ LP EOF ]
command -> LP . DECLAREDATATYPES LP nonempty_list(sort_dec) RP LP nonempty_list(datatype_dec) RP RP [ LP EOF ]
command -> LP . DECLAREFUN symbol fun_dec RP [ LP EOF ]
command -> LP . DECLARESORT symbol NUMERAL RP [ LP EOF ]
command -> LP . DEFINEFUN fun_def term RP [ LP EOF ]
command -> LP . DEFINEFUNREC fun_def term RP [ LP EOF ]
command -> LP . DEFINEFUNSREC LP list(fun_defs) RP LP nonempty_list(term) RP RP [ LP EOF ]
command -> LP . DEFINESORT symbol LP list(symbol) RP sort RP [ LP EOF ]
command -> LP . ECHO symbol RP [ LP EOF ]
command -> LP . EXIT RP [ LP EOF ]
command -> LP . GETASSERT RP [ LP EOF ]
command -> LP . GETASSIGN RP [ LP EOF ]
command -> LP . GETINFO key_info RP [ LP EOF ]
command -> LP . GETMODEL RP [ LP EOF ]
command -> LP . GETOPTION keyword RP [ LP EOF ]
command -> LP . GETPROOF RP [ LP EOF ]
command -> LP . GETUNSATASSUMPTIONS RP [ LP EOF ]
command -> LP . GETUNSATCORE RP [ LP EOF ]
command -> LP . GETVALUE LP nonempty_list(term) RP RP [ LP EOF ]
command -> LP . PUSH NUMERAL RP [ LP EOF ]
command -> LP . POP NUMERAL RP [ LP EOF ]
command -> LP . RESET RP [ LP EOF ]
command -> LP . RESETASSERTIONS RP [ LP EOF ]
command -> LP . SETINFO attribute RP [ LP EOF ]
command -> LP . SETLOGIC symbol RP [ LP EOF ]
command -> LP . SETOPTION psmt2_frontend_0_1_smtlib_parser_option RP [ LP EOF ]
-- On SETOPTION shift to state 2
-- On SETLOGIC shift to state 75
-- On SETINFO shift to state 78
-- On RESETASSERTIONS shift to state 81
-- On RESET shift to state 83
-- On PUSH shift to state 85
-- On POP shift to state 88
-- On GETVALUE shift to state 91
-- On GETUNSATCORE shift to state 189
-- On GETUNSATASSUMPTIONS shift to state 191
-- On GETPROOF shift to state 193
-- On GETOPTION shift to state 195
-- On GETMODEL shift to state 198
-- On GETINFO shift to state 200
-- On GETASSIGN shift to state 203
-- On GETASSERT shift to state 205
-- On EXIT shift to state 207
-- On ECHO shift to state 209
-- On DEFINESORT shift to state 212
-- On DEFINEFUNSREC shift to state 221
-- On DEFINEFUNREC shift to state 250
-- On DEFINEFUN shift to state 254
-- On DECLARESORT shift to state 258
-- On DECLAREFUN shift to state 262
-- On DECLAREDATATYPES shift to state 281
-- On DECLAREDATATYPE shift to state 320
-- On DECLARECONST shift to state 324
-- On CHECKSATASSUMING shift to state 336
-- On CHECKSAT shift to state 348
-- On CHECKENTAILMENT shift to state 350
-- On ASSERT shift to state 361

State 2:
command -> LP SETOPTION . psmt2_frontend_0_1_smtlib_parser_option RP [ LP EOF ]
-- On VERSION shift to state 3
-- On VERBOSITY shift to state 4
-- On VALUES shift to state 5
-- On THEORIES shift to state 6
-- On STATUTS shift to state 7
-- On SOURCE shift to state 11
-- On SORTSDESCRIPTION shift to state 12
-- On SORTS shift to state 13
-- On SMTLIBVERSION shift to state 14
-- On SERIES shift to state 15
-- On RESSOURCELIMIT shift to state 16
-- On REGULAROUTPUTCHAN shift to state 17
-- On REASONUNKNOWN shift to state 18
-- On RANDOMSEED shift to state 19
-- On PRODUCEUNSATCORES shift to state 20
-- On PRODUCEUNSATASSUMPTIONS shift to state 21
-- On PRODUCEPROOFS shift to state 22
-- On PRODUCEMODELS shift to state 23
-- On PRODUCEASSIGNEMENT shift to state 24
-- On PRODUCEASSERTIONS shift to state 25
-- On PRINTSUCCESS shift to state 26
-- On NOTES shift to state 27
-- On NAME shift to state 28
-- On LICENSE shift to state 29
-- On LANGUAGE shift to state 30
-- On INTERACTIVE shift to state 31
-- On INSTANCE shift to state 32
-- On GLOBALDECLARATIONS shift to state 33
-- On FUNSDESCRIPT shift to state 34
-- On FUNS shift to state 35
-- On EXTENSIONS shift to state 36
-- On ERRORBEHAV shift to state 37
-- On DIFFICULTY shift to state 38
-- On DIAGNOOUTPUTCHAN shift to state 39
-- On DEFINITIO shift to state 40
-- On CATEGORY shift to state 41
-- On AXIOMS shift to state 42
-- On AUTHORS shift to state 43
-- On AUTHOR shift to state 44
-- On ASSERTIONSTACKLVL shift to state 45
-- On ALLSTATS shift to state 46
-- On psmt2_frontend_0_1_smtlib_parser_option shift to state 47
-- On keyword shift to state 49
-- On key_option shift to state 50
-- On key_info shift to state 54
-- On attribute shift to state 74

State 3:
key_info -> VERSION . [ SYMBOL STRINGLIT RP NUMERAL LP HEXADECIMAL DECIMAL BINARY ASCIIWOR ]
-- On SYMBOL reduce production key_info -> VERSION
-- On STRINGLIT reduce production key_info -> VERSION
-- On RP reduce production key_info -> VERSION
-- On NUMERAL reduce production key_info -> VERSION
-- On LP reduce production key_info -> VERSION
-- On HEXADECIMAL reduce production key_info -> VERSION
-- On DECIMAL reduce production key_info -> VERSION
-- On BINARY reduce production key_info -> VERSION
-- On ASCIIWOR reduce production key_info -> VERSION

State 4:
key_option -> VERBOSITY . [ SYMBOL NUMERAL ASCIIWOR ]
-- On SYMBOL reduce production key_option -> VERBOSITY
-- On NUMERAL reduce production key_option -> VERBOSITY
-- On ASCIIWOR reduce production key_option -> VERBOSITY

State 5:
keyword -> VALUES . [ VALUES THEORIES SYMBOL STRINGLIT STATUTS SOURCE SORTSDESCRIPTION SORTS SMTLIBVERSION RP NUMERAL NOTES LP LICENSE LANGUAGE HEXADECIMAL FUNSDESCRIPT FUNS EXTENSIONS DEFINITIO DECIMAL CATEGORY BINARY AXIOMS ASCIIWOR ]
-- On VALUES reduce production keyword -> VALUES
-- On THEORIES reduce production keyword -> VALUES
-- On SYMBOL reduce production keyword -> VALUES
-- On STRINGLIT reduce production keyword -> VALUES
-- On STATUTS reduce production keyword -> VALUES
-- On SOURCE reduce production keyword -> VALUES
-- On SORTSDESCRIPTION reduce production keyword -> VALUES
-- On SORTS reduce production keyword -> VALUES
-- On SMTLIBVERSION reduce production keyword -> VALUES
-- On RP reduce production keyword -> VALUES
-- On NUMERAL reduce production keyword -> VALUES
-- On NOTES reduce production keyword -> VALUES
-- On LP reduce production keyword -> VALUES
-- On LICENSE reduce production keyword -> VALUES
-- On LANGUAGE reduce production keyword -> VALUES
-- On HEXADECIMAL reduce production keyword -> VALUES
-- On FUNSDESCRIPT reduce production keyword -> VALUES
-- On FUNS reduce production keyword -> VALUES
-- On EXTENSIONS reduce production keyword -> VALUES
-- On DEFINITIO reduce production keyword -> VALUES
-- On DECIMAL reduce production keyword -> VALUES
-- On CATEGORY reduce production keyword -> VALUES
-- On BINARY reduce production keyword -> VALUES
-- On AXIOMS reduce production keyword -> VALUES
-- On ASCIIWOR reduce production keyword -> VALUES

State 6:
keyword -> THEORIES . [ VALUES THEORIES SYMBOL STRINGLIT STATUTS SOURCE SORTSDESCRIPTION SORTS SMTLIBVERSION RP NUMERAL NOTES LP LICENSE LANGUAGE HEXADECIMAL FUNSDESCRIPT FUNS EXTENSIONS DEFINITIO DECIMAL CATEGORY BINARY AXIOMS ASCIIWOR ]
-- On VALUES reduce production keyword -> THEORIES
-- On THEORIES reduce production keyword -> THEORIES
-- On SYMBOL reduce production keyword -> THEORIES
-- On STRINGLIT reduce production keyword -> THEORIES
-- On STATUTS reduce production keyword -> THEORIES
-- On SOURCE reduce production keyword -> THEORIES
-- On SORTSDESCRIPTION reduce production keyword -> THEORIES
-- On SORTS reduce production keyword -> THEORIES
-- On SMTLIBVERSION reduce production keyword -> THEORIES
-- On RP reduce production keyword -> THEORIES
-- On NUMERAL reduce production keyword -> THEORIES
-- On NOTES reduce production keyword -> THEORIES
-- On LP reduce production keyword -> THEORIES
-- On LICENSE reduce production keyword -> THEORIES
-- On LANGUAGE reduce production keyword -> THEORIES
-- On HEXADECIMAL reduce production keyword -> THEORIES
-- On FUNSDESCRIPT reduce production keyword -> THEORIES
-- On FUNS reduce production keyword -> THEORIES
-- On EXTENSIONS reduce production keyword -> THEORIES
-- On DEFINITIO reduce production keyword -> THEORIES
-- On DECIMAL reduce production keyword -> THEORIES
-- On CATEGORY reduce production keyword -> THEORIES
-- On BINARY reduce production keyword -> THEORIES
-- On AXIOMS reduce production keyword -> THEORIES
-- On ASCIIWOR reduce production keyword -> THEORIES

State 7:
keyword -> STATUTS . symbol [ VALUES THEORIES SYMBOL STRINGLIT STATUTS SOURCE SORTSDESCRIPTION SORTS SMTLIBVERSION RP NUMERAL NOTES LP LICENSE LANGUAGE HEXADECIMAL FUNSDESCRIPT FUNS EXTENSIONS DEFINITIO DECIMAL CATEGORY BINARY AXIOMS ASCIIWOR ]
-- On SYMBOL shift to state 8
-- On ASCIIWOR shift to state 9
-- On symbol shift to state 10

State 8:
symbol -> SYMBOL . [ VALUES THEORIES SYMBOL STRINGLIT STATUTS SOURCE SORTSDESCRIPTION SORTS SMTLIBVERSION RP PATTERN NUMERAL NOTES NAMED LP LICENSE LANGUAGE HEXADECIMAL FUNSDESCRIPT FUNS EXTENSIONS DEFINITIO DECIMAL CATEGORY BINARY AXIOMS ASCIIWOR # ]
-- On VALUES reduce production symbol -> SYMBOL
-- On THEORIES reduce production symbol -> SYMBOL
-- On SYMBOL reduce production symbol -> SYMBOL
-- On STRINGLIT reduce production symbol -> SYMBOL
-- On STATUTS reduce production symbol -> SYMBOL
-- On SOURCE reduce production symbol -> SYMBOL
-- On SORTSDESCRIPTION reduce production symbol -> SYMBOL
-- On SORTS reduce production symbol -> SYMBOL
-- On SMTLIBVERSION reduce production symbol -> SYMBOL
-- On RP reduce production symbol -> SYMBOL
-- On PATTERN reduce production symbol -> SYMBOL
-- On NUMERAL reduce production symbol -> SYMBOL
-- On NOTES reduce production symbol -> SYMBOL
-- On NAMED reduce production symbol -> SYMBOL
-- On LP reduce production symbol -> SYMBOL
-- On LICENSE reduce production symbol -> SYMBOL
-- On LANGUAGE reduce production symbol -> SYMBOL
-- On HEXADECIMAL reduce production symbol -> SYMBOL
-- On FUNSDESCRIPT reduce production symbol -> SYMBOL
-- On FUNS reduce production symbol -> SYMBOL
-- On EXTENSIONS reduce production symbol -> SYMBOL
-- On DEFINITIO reduce production symbol -> SYMBOL
-- On DECIMAL reduce production symbol -> SYMBOL
-- On CATEGORY reduce production symbol -> SYMBOL
-- On BINARY reduce production symbol -> SYMBOL
-- On AXIOMS reduce production symbol -> SYMBOL
-- On ASCIIWOR reduce production symbol -> SYMBOL

State 9:
symbol -> ASCIIWOR . [ VALUES THEORIES SYMBOL STRINGLIT STATUTS SOURCE SORTSDESCRIPTION SORTS SMTLIBVERSION RP PATTERN NUMERAL NOTES NAMED LP LICENSE LANGUAGE HEXADECIMAL FUNSDESCRIPT FUNS EXTENSIONS DEFINITIO DECIMAL CATEGORY BINARY AXIOMS ASCIIWOR # ]
-- On VALUES reduce production symbol -> ASCIIWOR
-- On THEORIES reduce production symbol -> ASCIIWOR
-- On SYMBOL reduce production symbol -> ASCIIWOR
-- On STRINGLIT reduce production symbol -> ASCIIWOR
-- On STATUTS reduce production symbol -> ASCIIWOR
-- On SOURCE reduce production symbol -> ASCIIWOR
-- On SORTSDESCRIPTION reduce production symbol -> ASCIIWOR
-- On SORTS reduce production symbol -> ASCIIWOR
-- On SMTLIBVERSION reduce production symbol -> ASCIIWOR
-- On RP reduce production symbol -> ASCIIWOR
-- On PATTERN reduce production symbol -> ASCIIWOR
-- On NUMERAL reduce production symbol -> ASCIIWOR
-- On NOTES reduce production symbol -> ASCIIWOR
-- On NAMED reduce production symbol -> ASCIIWOR
-- On LP reduce production symbol -> ASCIIWOR
-- On LICENSE reduce production symbol -> ASCIIWOR
-- On LANGUAGE reduce production symbol -> ASCIIWOR
-- On HEXADECIMAL reduce production symbol -> ASCIIWOR
-- On FUNSDESCRIPT reduce production symbol -> ASCIIWOR
-- On FUNS reduce production symbol -> ASCIIWOR
-- On EXTENSIONS reduce production symbol -> ASCIIWOR
-- On DEFINITIO reduce production symbol -> ASCIIWOR
-- On DECIMAL reduce production symbol -> ASCIIWOR
-- On CATEGORY reduce production symbol -> ASCIIWOR
-- On BINARY reduce production symbol -> ASCIIWOR
-- On AXIOMS reduce production symbol -> ASCIIWOR
-- On ASCIIWOR reduce production symbol -> ASCIIWOR

State 10:
keyword -> STATUTS symbol . [ VALUES THEORIES SYMBOL STRINGLIT STATUTS SOURCE SORTSDESCRIPTION SORTS SMTLIBVERSION RP NUMERAL NOTES LP LICENSE LANGUAGE HEXADECIMAL FUNSDESCRIPT FUNS EXTENSIONS DEFINITIO DECIMAL CATEGORY BINARY AXIOMS ASCIIWOR ]
-- On VALUES reduce production keyword -> STATUTS symbol
-- On THEORIES reduce production keyword -> STATUTS symbol
-- On SYMBOL reduce production keyword -> STATUTS symbol
-- On STRINGLIT reduce production keyword -> STATUTS symbol
-- On STATUTS reduce production keyword -> STATUTS symbol
-- On SOURCE reduce production keyword -> STATUTS symbol
-- On SORTSDESCRIPTION reduce production keyword -> STATUTS symbol
-- On SORTS reduce production keyword -> STATUTS symbol
-- On SMTLIBVERSION reduce production keyword -> STATUTS symbol
-- On RP reduce production keyword -> STATUTS symbol
-- On NUMERAL reduce production keyword -> STATUTS symbol
-- On NOTES reduce production keyword -> STATUTS symbol
-- On LP reduce production keyword -> STATUTS symbol
-- On LICENSE reduce production keyword -> STATUTS symbol
-- On LANGUAGE reduce production keyword -> STATUTS symbol
-- On HEXADECIMAL reduce production keyword -> STATUTS symbol
-- On FUNSDESCRIPT reduce production keyword -> STATUTS symbol
-- On FUNS reduce production keyword -> STATUTS symbol
-- On EXTENSIONS reduce production keyword -> STATUTS symbol
-- On DEFINITIO reduce production keyword -> STATUTS symbol
-- On DECIMAL reduce production keyword -> STATUTS symbol
-- On CATEGORY reduce production keyword -> STATUTS symbol
-- On BINARY reduce production keyword -> STATUTS symbol
-- On AXIOMS reduce production keyword -> STATUTS symbol
-- On ASCIIWOR reduce production keyword -> STATUTS symbol

State 11:
keyword -> SOURCE . [ VALUES THEORIES SYMBOL STRINGLIT STATUTS SOURCE SORTSDESCRIPTION SORTS SMTLIBVERSION RP NUMERAL NOTES LP LICENSE LANGUAGE HEXADECIMAL FUNSDESCRIPT FUNS EXTENSIONS DEFINITIO DECIMAL CATEGORY BINARY AXIOMS ASCIIWOR ]
-- On VALUES reduce production keyword -> SOURCE
-- On THEORIES reduce production keyword -> SOURCE
-- On SYMBOL reduce production keyword -> SOURCE
-- On STRINGLIT reduce production keyword -> SOURCE
-- On STATUTS reduce production keyword -> SOURCE
-- On SOURCE reduce production keyword -> SOURCE
-- On SORTSDESCRIPTION reduce production keyword -> SOURCE
-- On SORTS reduce production keyword -> SOURCE
-- On SMTLIBVERSION reduce production keyword -> SOURCE
-- On RP reduce production keyword -> SOURCE
-- On NUMERAL reduce production keyword -> SOURCE
-- On NOTES reduce production keyword -> SOURCE
-- On LP reduce production keyword -> SOURCE
-- On LICENSE reduce production keyword -> SOURCE
-- On LANGUAGE reduce production keyword -> SOURCE
-- On HEXADECIMAL reduce production keyword -> SOURCE
-- On FUNSDESCRIPT reduce production keyword -> SOURCE
-- On FUNS reduce production keyword -> SOURCE
-- On EXTENSIONS reduce production keyword -> SOURCE
-- On DEFINITIO reduce production keyword -> SOURCE
-- On DECIMAL reduce production keyword -> SOURCE
-- On CATEGORY reduce production keyword -> SOURCE
-- On BINARY reduce production keyword -> SOURCE
-- On AXIOMS reduce production keyword -> SOURCE
-- On ASCIIWOR reduce production keyword -> SOURCE

State 12:
keyword -> SORTSDESCRIPTION . [ VALUES THEORIES SYMBOL STRINGLIT STATUTS SOURCE SORTSDESCRIPTION SORTS SMTLIBVERSION RP NUMERAL NOTES LP LICENSE LANGUAGE HEXADECIMAL FUNSDESCRIPT FUNS EXTENSIONS DEFINITIO DECIMAL CATEGORY BINARY AXIOMS ASCIIWOR ]
-- On VALUES reduce production keyword -> SORTSDESCRIPTION
-- On THEORIES reduce production keyword -> SORTSDESCRIPTION
-- On SYMBOL reduce production keyword -> SORTSDESCRIPTION
-- On STRINGLIT reduce production keyword -> SORTSDESCRIPTION
-- On STATUTS reduce production keyword -> SORTSDESCRIPTION
-- On SOURCE reduce production keyword -> SORTSDESCRIPTION
-- On SORTSDESCRIPTION reduce production keyword -> SORTSDESCRIPTION
-- On SORTS reduce production keyword -> SORTSDESCRIPTION
-- On SMTLIBVERSION reduce production keyword -> SORTSDESCRIPTION
-- On RP reduce production keyword -> SORTSDESCRIPTION
-- On NUMERAL reduce production keyword -> SORTSDESCRIPTION
-- On NOTES reduce production keyword -> SORTSDESCRIPTION
-- On LP reduce production keyword -> SORTSDESCRIPTION
-- On LICENSE reduce production keyword -> SORTSDESCRIPTION
-- On LANGUAGE reduce production keyword -> SORTSDESCRIPTION
-- On HEXADECIMAL reduce production keyword -> SORTSDESCRIPTION
-- On FUNSDESCRIPT reduce production keyword -> SORTSDESCRIPTION
-- On FUNS reduce production keyword -> SORTSDESCRIPTION
-- On EXTENSIONS reduce production keyword -> SORTSDESCRIPTION
-- On DEFINITIO reduce production keyword -> SORTSDESCRIPTION
-- On DECIMAL reduce production keyword -> SORTSDESCRIPTION
-- On CATEGORY reduce production keyword -> SORTSDESCRIPTION
-- On BINARY reduce production keyword -> SORTSDESCRIPTION
-- On AXIOMS reduce production keyword -> SORTSDESCRIPTION
-- On ASCIIWOR reduce production keyword -> SORTSDESCRIPTION

State 13:
keyword -> SORTS . [ VALUES THEORIES SYMBOL STRINGLIT STATUTS SOURCE SORTSDESCRIPTION SORTS SMTLIBVERSION RP NUMERAL NOTES LP LICENSE LANGUAGE HEXADECIMAL FUNSDESCRIPT FUNS EXTENSIONS DEFINITIO DECIMAL CATEGORY BINARY AXIOMS ASCIIWOR ]
-- On VALUES reduce production keyword -> SORTS
-- On THEORIES reduce production keyword -> SORTS
-- On SYMBOL reduce production keyword -> SORTS
-- On STRINGLIT reduce production keyword -> SORTS
-- On STATUTS reduce production keyword -> SORTS
-- On SOURCE reduce production keyword -> SORTS
-- On SORTSDESCRIPTION reduce production keyword -> SORTS
-- On SORTS reduce production keyword -> SORTS
-- On SMTLIBVERSION reduce production keyword -> SORTS
-- On RP reduce production keyword -> SORTS
-- On NUMERAL reduce production keyword -> SORTS
-- On NOTES reduce production keyword -> SORTS
-- On LP reduce production keyword -> SORTS
-- On LICENSE reduce production keyword -> SORTS
-- On LANGUAGE reduce production keyword -> SORTS
-- On HEXADECIMAL reduce production keyword -> SORTS
-- On FUNSDESCRIPT reduce production keyword -> SORTS
-- On FUNS reduce production keyword -> SORTS
-- On EXTENSIONS reduce production keyword -> SORTS
-- On DEFINITIO reduce production keyword -> SORTS
-- On DECIMAL reduce production keyword -> SORTS
-- On CATEGORY reduce production keyword -> SORTS
-- On BINARY reduce production keyword -> SORTS
-- On AXIOMS reduce production keyword -> SORTS
-- On ASCIIWOR reduce production keyword -> SORTS

State 14:
keyword -> SMTLIBVERSION . [ VALUES THEORIES SYMBOL STRINGLIT STATUTS SOURCE SORTSDESCRIPTION SORTS SMTLIBVERSION RP NUMERAL NOTES LP LICENSE LANGUAGE HEXADECIMAL FUNSDESCRIPT FUNS EXTENSIONS DEFINITIO DECIMAL CATEGORY BINARY AXIOMS ASCIIWOR ]
-- On VALUES reduce production keyword -> SMTLIBVERSION
-- On THEORIES reduce production keyword -> SMTLIBVERSION
-- On SYMBOL reduce production keyword -> SMTLIBVERSION
-- On STRINGLIT reduce production keyword -> SMTLIBVERSION
-- On STATUTS reduce production keyword -> SMTLIBVERSION
-- On SOURCE reduce production keyword -> SMTLIBVERSION
-- On SORTSDESCRIPTION reduce production keyword -> SMTLIBVERSION
-- On SORTS reduce production keyword -> SMTLIBVERSION
-- On SMTLIBVERSION reduce production keyword -> SMTLIBVERSION
-- On RP reduce production keyword -> SMTLIBVERSION
-- On NUMERAL reduce production keyword -> SMTLIBVERSION
-- On NOTES reduce production keyword -> SMTLIBVERSION
-- On LP reduce production keyword -> SMTLIBVERSION
-- On LICENSE reduce production keyword -> SMTLIBVERSION
-- On LANGUAGE reduce production keyword -> SMTLIBVERSION
-- On HEXADECIMAL reduce production keyword -> SMTLIBVERSION
-- On FUNSDESCRIPT reduce production keyword -> SMTLIBVERSION
-- On FUNS reduce production keyword -> SMTLIBVERSION
-- On EXTENSIONS reduce production keyword -> SMTLIBVERSION
-- On DEFINITIO reduce production keyword -> SMTLIBVERSION
-- On DECIMAL reduce production keyword -> SMTLIBVERSION
-- On CATEGORY reduce production keyword -> SMTLIBVERSION
-- On BINARY reduce production keyword -> SMTLIBVERSION
-- On AXIOMS reduce production keyword -> SMTLIBVERSION
-- On ASCIIWOR reduce production keyword -> SMTLIBVERSION

State 15:
key_info -> SERIES . [ SYMBOL STRINGLIT RP NUMERAL LP HEXADECIMAL DECIMAL BINARY ASCIIWOR ]
-- On SYMBOL reduce production key_info -> SERIES
-- On STRINGLIT reduce production key_info -> SERIES
-- On RP reduce production key_info -> SERIES
-- On NUMERAL reduce production key_info -> SERIES
-- On LP reduce production key_info -> SERIES
-- On HEXADECIMAL reduce production key_info -> SERIES
-- On DECIMAL reduce production key_info -> SERIES
-- On BINARY reduce production key_info -> SERIES
-- On ASCIIWOR reduce production key_info -> SERIES

State 16:
key_option -> RESSOURCELIMIT . [ SYMBOL NUMERAL ASCIIWOR ]
-- On SYMBOL reduce production key_option -> RESSOURCELIMIT
-- On NUMERAL reduce production key_option -> RESSOURCELIMIT
-- On ASCIIWOR reduce production key_option -> RESSOURCELIMIT

State 17:
key_option -> REGULAROUTPUTCHAN . [ SYMBOL NUMERAL ASCIIWOR ]
-- On SYMBOL reduce production key_option -> REGULAROUTPUTCHAN
-- On NUMERAL reduce production key_option -> REGULAROUTPUTCHAN
-- On ASCIIWOR reduce production key_option -> REGULAROUTPUTCHAN

State 18:
key_info -> REASONUNKNOWN . [ SYMBOL STRINGLIT RP NUMERAL LP HEXADECIMAL DECIMAL BINARY ASCIIWOR ]
-- On SYMBOL reduce production key_info -> REASONUNKNOWN
-- On STRINGLIT reduce production key_info -> REASONUNKNOWN
-- On RP reduce production key_info -> REASONUNKNOWN
-- On NUMERAL reduce production key_info -> REASONUNKNOWN
-- On LP reduce production key_info -> REASONUNKNOWN
-- On HEXADECIMAL reduce production key_info -> REASONUNKNOWN
-- On DECIMAL reduce production key_info -> REASONUNKNOWN
-- On BINARY reduce production key_info -> REASONUNKNOWN
-- On ASCIIWOR reduce production key_info -> REASONUNKNOWN

State 19:
key_option -> RANDOMSEED . [ SYMBOL NUMERAL ASCIIWOR ]
-- On SYMBOL reduce production key_option -> RANDOMSEED
-- On NUMERAL reduce production key_option -> RANDOMSEED
-- On ASCIIWOR reduce production key_option -> RANDOMSEED

State 20:
key_option -> PRODUCEUNSATCORES . [ SYMBOL NUMERAL ASCIIWOR ]
-- On SYMBOL reduce production key_option -> PRODUCEUNSATCORES
-- On NUMERAL reduce production key_option -> PRODUCEUNSATCORES
-- On ASCIIWOR reduce production key_option -> PRODUCEUNSATCORES

State 21:
key_option -> PRODUCEUNSATASSUMPTIONS . [ SYMBOL NUMERAL ASCIIWOR ]
-- On SYMBOL reduce production key_option -> PRODUCEUNSATASSUMPTIONS
-- On NUMERAL reduce production key_option -> PRODUCEUNSATASSUMPTIONS
-- On ASCIIWOR reduce production key_option -> PRODUCEUNSATASSUMPTIONS

State 22:
key_option -> PRODUCEPROOFS . [ SYMBOL NUMERAL ASCIIWOR ]
-- On SYMBOL reduce production key_option -> PRODUCEPROOFS
-- On NUMERAL reduce production key_option -> PRODUCEPROOFS
-- On ASCIIWOR reduce production key_option -> PRODUCEPROOFS

State 23:
key_option -> PRODUCEMODELS . [ SYMBOL NUMERAL ASCIIWOR ]
-- On SYMBOL reduce production key_option -> PRODUCEMODELS
-- On NUMERAL reduce production key_option -> PRODUCEMODELS
-- On ASCIIWOR reduce production key_option -> PRODUCEMODELS

State 24:
key_option -> PRODUCEASSIGNEMENT . [ SYMBOL NUMERAL ASCIIWOR ]
-- On SYMBOL reduce production key_option -> PRODUCEASSIGNEMENT
-- On NUMERAL reduce production key_option -> PRODUCEASSIGNEMENT
-- On ASCIIWOR reduce production key_option -> PRODUCEASSIGNEMENT

State 25:
key_option -> PRODUCEASSERTIONS . [ SYMBOL NUMERAL ASCIIWOR ]
-- On SYMBOL reduce production key_option -> PRODUCEASSERTIONS
-- On NUMERAL reduce production key_option -> PRODUCEASSERTIONS
-- On ASCIIWOR reduce production key_option -> PRODUCEASSERTIONS

State 26:
key_option -> PRINTSUCCESS . [ SYMBOL NUMERAL ASCIIWOR ]
-- On SYMBOL reduce production key_option -> PRINTSUCCESS
-- On NUMERAL reduce production key_option -> PRINTSUCCESS
-- On ASCIIWOR reduce production key_option -> PRINTSUCCESS

State 27:
keyword -> NOTES . [ VALUES THEORIES SYMBOL STRINGLIT STATUTS SOURCE SORTSDESCRIPTION SORTS SMTLIBVERSION RP NUMERAL NOTES LP LICENSE LANGUAGE HEXADECIMAL FUNSDESCRIPT FUNS EXTENSIONS DEFINITIO DECIMAL CATEGORY BINARY AXIOMS ASCIIWOR ]
-- On VALUES reduce production keyword -> NOTES
-- On THEORIES reduce production keyword -> NOTES
-- On SYMBOL reduce production keyword -> NOTES
-- On STRINGLIT reduce production keyword -> NOTES
-- On STATUTS reduce production keyword -> NOTES
-- On SOURCE reduce production keyword -> NOTES
-- On SORTSDESCRIPTION reduce production keyword -> NOTES
-- On SORTS reduce production keyword -> NOTES
-- On SMTLIBVERSION reduce production keyword -> NOTES
-- On RP reduce production keyword -> NOTES
-- On NUMERAL reduce production keyword -> NOTES
-- On NOTES reduce production keyword -> NOTES
-- On LP reduce production keyword -> NOTES
-- On LICENSE reduce production keyword -> NOTES
-- On LANGUAGE reduce production keyword -> NOTES
-- On HEXADECIMAL reduce production keyword -> NOTES
-- On FUNSDESCRIPT reduce production keyword -> NOTES
-- On FUNS reduce production keyword -> NOTES
-- On EXTENSIONS reduce production keyword -> NOTES
-- On DEFINITIO reduce production keyword -> NOTES
-- On DECIMAL reduce production keyword -> NOTES
-- On CATEGORY reduce production keyword -> NOTES
-- On BINARY reduce production keyword -> NOTES
-- On AXIOMS reduce production keyword -> NOTES
-- On ASCIIWOR reduce production keyword -> NOTES

State 28:
key_info -> NAME . [ SYMBOL STRINGLIT RP NUMERAL LP HEXADECIMAL DECIMAL BINARY ASCIIWOR ]
-- On SYMBOL reduce production key_info -> NAME
-- On STRINGLIT reduce production key_info -> NAME
-- On RP reduce production key_info -> NAME
-- On NUMERAL reduce production key_info -> NAME
-- On LP reduce production key_info -> NAME
-- On HEXADECIMAL reduce production key_info -> NAME
-- On DECIMAL reduce production key_info -> NAME
-- On BINARY reduce production key_info -> NAME
-- On ASCIIWOR reduce production key_info -> NAME

State 29:
keyword -> LICENSE . [ VALUES THEORIES SYMBOL STRINGLIT STATUTS SOURCE SORTSDESCRIPTION SORTS SMTLIBVERSION RP NUMERAL NOTES LP LICENSE LANGUAGE HEXADECIMAL FUNSDESCRIPT FUNS EXTENSIONS DEFINITIO DECIMAL CATEGORY BINARY AXIOMS ASCIIWOR ]
-- On VALUES reduce production keyword -> LICENSE
-- On THEORIES reduce production keyword -> LICENSE
-- On SYMBOL reduce production keyword -> LICENSE
-- On STRINGLIT reduce production keyword -> LICENSE
-- On STATUTS reduce production keyword -> LICENSE
-- On SOURCE reduce production keyword -> LICENSE
-- On SORTSDESCRIPTION reduce production keyword -> LICENSE
-- On SORTS reduce production keyword -> LICENSE
-- On SMTLIBVERSION reduce production keyword -> LICENSE
-- On RP reduce production keyword -> LICENSE
-- On NUMERAL reduce production keyword -> LICENSE
-- On NOTES reduce production keyword -> LICENSE
-- On LP reduce production keyword -> LICENSE
-- On LICENSE reduce production keyword -> LICENSE
-- On LANGUAGE reduce production keyword -> LICENSE
-- On HEXADECIMAL reduce production keyword -> LICENSE
-- On FUNSDESCRIPT reduce production keyword -> LICENSE
-- On FUNS reduce production keyword -> LICENSE
-- On EXTENSIONS reduce production keyword -> LICENSE
-- On DEFINITIO reduce production keyword -> LICENSE
-- On DECIMAL reduce production keyword -> LICENSE
-- On CATEGORY reduce production keyword -> LICENSE
-- On BINARY reduce production keyword -> LICENSE
-- On AXIOMS reduce production keyword -> LICENSE
-- On ASCIIWOR reduce production keyword -> LICENSE

State 30:
keyword -> LANGUAGE . [ VALUES THEORIES SYMBOL STRINGLIT STATUTS SOURCE SORTSDESCRIPTION SORTS SMTLIBVERSION RP NUMERAL NOTES LP LICENSE LANGUAGE HEXADECIMAL FUNSDESCRIPT FUNS EXTENSIONS DEFINITIO DECIMAL CATEGORY BINARY AXIOMS ASCIIWOR ]
-- On VALUES reduce production keyword -> LANGUAGE
-- On THEORIES reduce production keyword -> LANGUAGE
-- On SYMBOL reduce production keyword -> LANGUAGE
-- On STRINGLIT reduce production keyword -> LANGUAGE
-- On STATUTS reduce production keyword -> LANGUAGE
-- On SOURCE reduce production keyword -> LANGUAGE
-- On SORTSDESCRIPTION reduce production keyword -> LANGUAGE
-- On SORTS reduce production keyword -> LANGUAGE
-- On SMTLIBVERSION reduce production keyword -> LANGUAGE
-- On RP reduce production keyword -> LANGUAGE
-- On NUMERAL reduce production keyword -> LANGUAGE
-- On NOTES reduce production keyword -> LANGUAGE
-- On LP reduce production keyword -> LANGUAGE
-- On LICENSE reduce production keyword -> LANGUAGE
-- On LANGUAGE reduce production keyword -> LANGUAGE
-- On HEXADECIMAL reduce production keyword -> LANGUAGE
-- On FUNSDESCRIPT reduce production keyword -> LANGUAGE
-- On FUNS reduce production keyword -> LANGUAGE
-- On EXTENSIONS reduce production keyword -> LANGUAGE
-- On DEFINITIO reduce production keyword -> LANGUAGE
-- On DECIMAL reduce production keyword -> LANGUAGE
-- On CATEGORY reduce production keyword -> LANGUAGE
-- On BINARY reduce production keyword -> LANGUAGE
-- On AXIOMS reduce production keyword -> LANGUAGE
-- On ASCIIWOR reduce production keyword -> LANGUAGE

State 31:
key_option -> INTERACTIVE . [ SYMBOL NUMERAL ASCIIWOR ]
-- On SYMBOL reduce production key_option -> INTERACTIVE
-- On NUMERAL reduce production key_option -> INTERACTIVE
-- On ASCIIWOR reduce production key_option -> INTERACTIVE

State 32:
key_info -> INSTANCE . [ SYMBOL STRINGLIT RP NUMERAL LP HEXADECIMAL DECIMAL BINARY ASCIIWOR ]
-- On SYMBOL reduce production key_info -> INSTANCE
-- On STRINGLIT reduce production key_info -> INSTANCE
-- On RP reduce production key_info -> INSTANCE
-- On NUMERAL reduce production key_info -> INSTANCE
-- On LP reduce production key_info -> INSTANCE
-- On HEXADECIMAL reduce production key_info -> INSTANCE
-- On DECIMAL reduce production key_info -> INSTANCE
-- On BINARY reduce production key_info -> INSTANCE
-- On ASCIIWOR reduce production key_info -> INSTANCE

State 33:
key_option -> GLOBALDECLARATIONS . [ SYMBOL NUMERAL ASCIIWOR ]
-- On SYMBOL reduce production key_option -> GLOBALDECLARATIONS
-- On NUMERAL reduce production key_option -> GLOBALDECLARATIONS
-- On ASCIIWOR reduce production key_option -> GLOBALDECLARATIONS

State 34:
keyword -> FUNSDESCRIPT . [ VALUES THEORIES SYMBOL STRINGLIT STATUTS SOURCE SORTSDESCRIPTION SORTS SMTLIBVERSION RP NUMERAL NOTES LP LICENSE LANGUAGE HEXADECIMAL FUNSDESCRIPT FUNS EXTENSIONS DEFINITIO DECIMAL CATEGORY BINARY AXIOMS ASCIIWOR ]
-- On VALUES reduce production keyword -> FUNSDESCRIPT
-- On THEORIES reduce production keyword -> FUNSDESCRIPT
-- On SYMBOL reduce production keyword -> FUNSDESCRIPT
-- On STRINGLIT reduce production keyword -> FUNSDESCRIPT
-- On STATUTS reduce production keyword -> FUNSDESCRIPT
-- On SOURCE reduce production keyword -> FUNSDESCRIPT
-- On SORTSDESCRIPTION reduce production keyword -> FUNSDESCRIPT
-- On SORTS reduce production keyword -> FUNSDESCRIPT
-- On SMTLIBVERSION reduce production keyword -> FUNSDESCRIPT
-- On RP reduce production keyword -> FUNSDESCRIPT
-- On NUMERAL reduce production keyword -> FUNSDESCRIPT
-- On NOTES reduce production keyword -> FUNSDESCRIPT
-- On LP reduce production keyword -> FUNSDESCRIPT
-- On LICENSE reduce production keyword -> FUNSDESCRIPT
-- On LANGUAGE reduce production keyword -> FUNSDESCRIPT
-- On HEXADECIMAL reduce production keyword -> FUNSDESCRIPT
-- On FUNSDESCRIPT reduce production keyword -> FUNSDESCRIPT
-- On FUNS reduce production keyword -> FUNSDESCRIPT
-- On EXTENSIONS reduce production keyword -> FUNSDESCRIPT
-- On DEFINITIO reduce production keyword -> FUNSDESCRIPT
-- On DECIMAL reduce production keyword -> FUNSDESCRIPT
-- On CATEGORY reduce production keyword -> FUNSDESCRIPT
-- On BINARY reduce production keyword -> FUNSDESCRIPT
-- On AXIOMS reduce production keyword -> FUNSDESCRIPT
-- On ASCIIWOR reduce production keyword -> FUNSDESCRIPT

State 35:
keyword -> FUNS . [ VALUES THEORIES SYMBOL STRINGLIT STATUTS SOURCE SORTSDESCRIPTION SORTS SMTLIBVERSION RP NUMERAL NOTES LP LICENSE LANGUAGE HEXADECIMAL FUNSDESCRIPT FUNS EXTENSIONS DEFINITIO DECIMAL CATEGORY BINARY AXIOMS ASCIIWOR ]
-- On VALUES reduce production keyword -> FUNS
-- On THEORIES reduce production keyword -> FUNS
-- On SYMBOL reduce production keyword -> FUNS
-- On STRINGLIT reduce production keyword -> FUNS
-- On STATUTS reduce production keyword -> FUNS
-- On SOURCE reduce production keyword -> FUNS
-- On SORTSDESCRIPTION reduce production keyword -> FUNS
-- On SORTS reduce production keyword -> FUNS
-- On SMTLIBVERSION reduce production keyword -> FUNS
-- On RP reduce production keyword -> FUNS
-- On NUMERAL reduce production keyword -> FUNS
-- On NOTES reduce production keyword -> FUNS
-- On LP reduce production keyword -> FUNS
-- On LICENSE reduce production keyword -> FUNS
-- On LANGUAGE reduce production keyword -> FUNS
-- On HEXADECIMAL reduce production keyword -> FUNS
-- On FUNSDESCRIPT reduce production keyword -> FUNS
-- On FUNS reduce production keyword -> FUNS
-- On EXTENSIONS reduce production keyword -> FUNS
-- On DEFINITIO reduce production keyword -> FUNS
-- On DECIMAL reduce production keyword -> FUNS
-- On CATEGORY reduce production keyword -> FUNS
-- On BINARY reduce production keyword -> FUNS
-- On AXIOMS reduce production keyword -> FUNS
-- On ASCIIWOR reduce production keyword -> FUNS

State 36:
keyword -> EXTENSIONS . [ VALUES THEORIES SYMBOL STRINGLIT STATUTS SOURCE SORTSDESCRIPTION SORTS SMTLIBVERSION RP NUMERAL NOTES LP LICENSE LANGUAGE HEXADECIMAL FUNSDESCRIPT FUNS EXTENSIONS DEFINITIO DECIMAL CATEGORY BINARY AXIOMS ASCIIWOR ]
-- On VALUES reduce production keyword -> EXTENSIONS
-- On THEORIES reduce production keyword -> EXTENSIONS
-- On SYMBOL reduce production keyword -> EXTENSIONS
-- On STRINGLIT reduce production keyword -> EXTENSIONS
-- On STATUTS reduce production keyword -> EXTENSIONS
-- On SOURCE reduce production keyword -> EXTENSIONS
-- On SORTSDESCRIPTION reduce production keyword -> EXTENSIONS
-- On SORTS reduce production keyword -> EXTENSIONS
-- On SMTLIBVERSION reduce production keyword -> EXTENSIONS
-- On RP reduce production keyword -> EXTENSIONS
-- On NUMERAL reduce production keyword -> EXTENSIONS
-- On NOTES reduce production keyword -> EXTENSIONS
-- On LP reduce production keyword -> EXTENSIONS
-- On LICENSE reduce production keyword -> EXTENSIONS
-- On LANGUAGE reduce production keyword -> EXTENSIONS
-- On HEXADECIMAL reduce production keyword -> EXTENSIONS
-- On FUNSDESCRIPT reduce production keyword -> EXTENSIONS
-- On FUNS reduce production keyword -> EXTENSIONS
-- On EXTENSIONS reduce production keyword -> EXTENSIONS
-- On DEFINITIO reduce production keyword -> EXTENSIONS
-- On DECIMAL reduce production keyword -> EXTENSIONS
-- On CATEGORY reduce production keyword -> EXTENSIONS
-- On BINARY reduce production keyword -> EXTENSIONS
-- On AXIOMS reduce production keyword -> EXTENSIONS
-- On ASCIIWOR reduce production keyword -> EXTENSIONS

State 37:
key_info -> ERRORBEHAV . [ SYMBOL STRINGLIT RP NUMERAL LP HEXADECIMAL DECIMAL BINARY ASCIIWOR ]
-- On SYMBOL reduce production key_info -> ERRORBEHAV
-- On STRINGLIT reduce production key_info -> ERRORBEHAV
-- On RP reduce production key_info -> ERRORBEHAV
-- On NUMERAL reduce production key_info -> ERRORBEHAV
-- On LP reduce production key_info -> ERRORBEHAV
-- On HEXADECIMAL reduce production key_info -> ERRORBEHAV
-- On DECIMAL reduce production key_info -> ERRORBEHAV
-- On BINARY reduce production key_info -> ERRORBEHAV
-- On ASCIIWOR reduce production key_info -> ERRORBEHAV

State 38:
key_info -> DIFFICULTY . [ SYMBOL STRINGLIT RP NUMERAL LP HEXADECIMAL DECIMAL BINARY ASCIIWOR ]
-- On SYMBOL reduce production key_info -> DIFFICULTY
-- On STRINGLIT reduce production key_info -> DIFFICULTY
-- On RP reduce production key_info -> DIFFICULTY
-- On NUMERAL reduce production key_info -> DIFFICULTY
-- On LP reduce production key_info -> DIFFICULTY
-- On HEXADECIMAL reduce production key_info -> DIFFICULTY
-- On DECIMAL reduce production key_info -> DIFFICULTY
-- On BINARY reduce production key_info -> DIFFICULTY
-- On ASCIIWOR reduce production key_info -> DIFFICULTY

State 39:
key_option -> DIAGNOOUTPUTCHAN . [ SYMBOL NUMERAL ASCIIWOR ]
-- On SYMBOL reduce production key_option -> DIAGNOOUTPUTCHAN
-- On NUMERAL reduce production key_option -> DIAGNOOUTPUTCHAN
-- On ASCIIWOR reduce production key_option -> DIAGNOOUTPUTCHAN

State 40:
keyword -> DEFINITIO . [ VALUES THEORIES SYMBOL STRINGLIT STATUTS SOURCE SORTSDESCRIPTION SORTS SMTLIBVERSION RP NUMERAL NOTES LP LICENSE LANGUAGE HEXADECIMAL FUNSDESCRIPT FUNS EXTENSIONS DEFINITIO DECIMAL CATEGORY BINARY AXIOMS ASCIIWOR ]
-- On VALUES reduce production keyword -> DEFINITIO
-- On THEORIES reduce production keyword -> DEFINITIO
-- On SYMBOL reduce production keyword -> DEFINITIO
-- On STRINGLIT reduce production keyword -> DEFINITIO
-- On STATUTS reduce production keyword -> DEFINITIO
-- On SOURCE reduce production keyword -> DEFINITIO
-- On SORTSDESCRIPTION reduce production keyword -> DEFINITIO
-- On SORTS reduce production keyword -> DEFINITIO
-- On SMTLIBVERSION reduce production keyword -> DEFINITIO
-- On RP reduce production keyword -> DEFINITIO
-- On NUMERAL reduce production keyword -> DEFINITIO
-- On NOTES reduce production keyword -> DEFINITIO
-- On LP reduce production keyword -> DEFINITIO
-- On LICENSE reduce production keyword -> DEFINITIO
-- On LANGUAGE reduce production keyword -> DEFINITIO
-- On HEXADECIMAL reduce production keyword -> DEFINITIO
-- On FUNSDESCRIPT reduce production keyword -> DEFINITIO
-- On FUNS reduce production keyword -> DEFINITIO
-- On EXTENSIONS reduce production keyword -> DEFINITIO
-- On DEFINITIO reduce production keyword -> DEFINITIO
-- On DECIMAL reduce production keyword -> DEFINITIO
-- On CATEGORY reduce production keyword -> DEFINITIO
-- On BINARY reduce production keyword -> DEFINITIO
-- On AXIOMS reduce production keyword -> DEFINITIO
-- On ASCIIWOR reduce production keyword -> DEFINITIO

State 41:
keyword -> CATEGORY . [ VALUES THEORIES SYMBOL STRINGLIT STATUTS SOURCE SORTSDESCRIPTION SORTS SMTLIBVERSION RP NUMERAL NOTES LP LICENSE LANGUAGE HEXADECIMAL FUNSDESCRIPT FUNS EXTENSIONS DEFINITIO DECIMAL CATEGORY BINARY AXIOMS ASCIIWOR ]
-- On VALUES reduce production keyword -> CATEGORY
-- On THEORIES reduce production keyword -> CATEGORY
-- On SYMBOL reduce production keyword -> CATEGORY
-- On STRINGLIT reduce production keyword -> CATEGORY
-- On STATUTS reduce production keyword -> CATEGORY
-- On SOURCE reduce production keyword -> CATEGORY
-- On SORTSDESCRIPTION reduce production keyword -> CATEGORY
-- On SORTS reduce production keyword -> CATEGORY
-- On SMTLIBVERSION reduce production keyword -> CATEGORY
-- On RP reduce production keyword -> CATEGORY
-- On NUMERAL reduce production keyword -> CATEGORY
-- On NOTES reduce production keyword -> CATEGORY
-- On LP reduce production keyword -> CATEGORY
-- On LICENSE reduce production keyword -> CATEGORY
-- On LANGUAGE reduce production keyword -> CATEGORY
-- On HEXADECIMAL reduce production keyword -> CATEGORY
-- On FUNSDESCRIPT reduce production keyword -> CATEGORY
-- On FUNS reduce production keyword -> CATEGORY
-- On EXTENSIONS reduce production keyword -> CATEGORY
-- On DEFINITIO reduce production keyword -> CATEGORY
-- On DECIMAL reduce production keyword -> CATEGORY
-- On CATEGORY reduce production keyword -> CATEGORY
-- On BINARY reduce production keyword -> CATEGORY
-- On AXIOMS reduce production keyword -> CATEGORY
-- On ASCIIWOR reduce production keyword -> CATEGORY

State 42:
keyword -> AXIOMS . [ VALUES THEORIES SYMBOL STRINGLIT STATUTS SOURCE SORTSDESCRIPTION SORTS SMTLIBVERSION RP NUMERAL NOTES LP LICENSE LANGUAGE HEXADECIMAL FUNSDESCRIPT FUNS EXTENSIONS DEFINITIO DECIMAL CATEGORY BINARY AXIOMS ASCIIWOR ]
-- On VALUES reduce production keyword -> AXIOMS
-- On THEORIES reduce production keyword -> AXIOMS
-- On SYMBOL reduce production keyword -> AXIOMS
-- On STRINGLIT reduce production keyword -> AXIOMS
-- On STATUTS reduce production keyword -> AXIOMS
-- On SOURCE reduce production keyword -> AXIOMS
-- On SORTSDESCRIPTION reduce production keyword -> AXIOMS
-- On SORTS reduce production keyword -> AXIOMS
-- On SMTLIBVERSION reduce production keyword -> AXIOMS
-- On RP reduce production keyword -> AXIOMS
-- On NUMERAL reduce production keyword -> AXIOMS
-- On NOTES reduce production keyword -> AXIOMS
-- On LP reduce production keyword -> AXIOMS
-- On LICENSE reduce production keyword -> AXIOMS
-- On LANGUAGE reduce production keyword -> AXIOMS
-- On HEXADECIMAL reduce production keyword -> AXIOMS
-- On FUNSDESCRIPT reduce production keyword -> AXIOMS
-- On FUNS reduce production keyword -> AXIOMS
-- On EXTENSIONS reduce production keyword -> AXIOMS
-- On DEFINITIO reduce production keyword -> AXIOMS
-- On DECIMAL reduce production keyword -> AXIOMS
-- On CATEGORY reduce production keyword -> AXIOMS
-- On BINARY reduce production keyword -> AXIOMS
-- On AXIOMS reduce production keyword -> AXIOMS
-- On ASCIIWOR reduce production keyword -> AXIOMS

State 43:
key_info -> AUTHORS . [ SYMBOL STRINGLIT RP NUMERAL LP HEXADECIMAL DECIMAL BINARY ASCIIWOR ]
-- On SYMBOL reduce production key_info -> AUTHORS
-- On STRINGLIT reduce production key_info -> AUTHORS
-- On RP reduce production key_info -> AUTHORS
-- On NUMERAL reduce production key_info -> AUTHORS
-- On LP reduce production key_info -> AUTHORS
-- On HEXADECIMAL reduce production key_info -> AUTHORS
-- On DECIMAL reduce production key_info -> AUTHORS
-- On BINARY reduce production key_info -> AUTHORS
-- On ASCIIWOR reduce production key_info -> AUTHORS

State 44:
key_info -> AUTHOR . [ SYMBOL STRINGLIT RP NUMERAL LP HEXADECIMAL DECIMAL BINARY ASCIIWOR ]
-- On SYMBOL reduce production key_info -> AUTHOR
-- On STRINGLIT reduce production key_info -> AUTHOR
-- On RP reduce production key_info -> AUTHOR
-- On NUMERAL reduce production key_info -> AUTHOR
-- On LP reduce production key_info -> AUTHOR
-- On HEXADECIMAL reduce production key_info -> AUTHOR
-- On DECIMAL reduce production key_info -> AUTHOR
-- On BINARY reduce production key_info -> AUTHOR
-- On ASCIIWOR reduce production key_info -> AUTHOR

State 45:
key_info -> ASSERTIONSTACKLVL . [ SYMBOL STRINGLIT RP NUMERAL LP HEXADECIMAL DECIMAL BINARY ASCIIWOR ]
-- On SYMBOL reduce production key_info -> ASSERTIONSTACKLVL
-- On STRINGLIT reduce production key_info -> ASSERTIONSTACKLVL
-- On RP reduce production key_info -> ASSERTIONSTACKLVL
-- On NUMERAL reduce production key_info -> ASSERTIONSTACKLVL
-- On LP reduce production key_info -> ASSERTIONSTACKLVL
-- On HEXADECIMAL reduce production key_info -> ASSERTIONSTACKLVL
-- On DECIMAL reduce production key_info -> ASSERTIONSTACKLVL
-- On BINARY reduce production key_info -> ASSERTIONSTACKLVL
-- On ASCIIWOR reduce production key_info -> ASSERTIONSTACKLVL

State 46:
key_info -> ALLSTATS . [ SYMBOL STRINGLIT RP NUMERAL LP HEXADECIMAL DECIMAL BINARY ASCIIWOR ]
-- On SYMBOL reduce production key_info -> ALLSTATS
-- On STRINGLIT reduce production key_info -> ALLSTATS
-- On RP reduce production key_info -> ALLSTATS
-- On NUMERAL reduce production key_info -> ALLSTATS
-- On LP reduce production key_info -> ALLSTATS
-- On HEXADECIMAL reduce production key_info -> ALLSTATS
-- On DECIMAL reduce production key_info -> ALLSTATS
-- On BINARY reduce production key_info -> ALLSTATS
-- On ASCIIWOR reduce production key_info -> ALLSTATS

State 47:
command -> LP SETOPTION psmt2_frontend_0_1_smtlib_parser_option . RP [ LP EOF ]
-- On RP shift to state 48

State 48:
command -> LP SETOPTION psmt2_frontend_0_1_smtlib_parser_option RP . [ LP EOF ]
-- On LP reduce production command -> LP SETOPTION psmt2_frontend_0_1_smtlib_parser_option RP
-- On EOF reduce production command -> LP SETOPTION psmt2_frontend_0_1_smtlib_parser_option RP

State 49:
key_info -> keyword . [ SYMBOL STRINGLIT RP NUMERAL LP HEXADECIMAL DECIMAL BINARY ASCIIWOR ]
-- On SYMBOL reduce production key_info -> keyword
-- On STRINGLIT reduce production key_info -> keyword
-- On RP reduce production key_info -> keyword
-- On NUMERAL reduce production key_info -> keyword
-- On LP reduce production key_info -> keyword
-- On HEXADECIMAL reduce production key_info -> keyword
-- On DECIMAL reduce production key_info -> keyword
-- On BINARY reduce production key_info -> keyword
-- On ASCIIWOR reduce production key_info -> keyword

State 50:
psmt2_frontend_0_1_smtlib_parser_option -> key_option . index [ RP ]
-- On SYMBOL shift to state 8
-- On NUMERAL shift to state 51
-- On ASCIIWOR shift to state 9
-- On symbol shift to state 52
-- On index shift to state 53

State 51:
index -> NUMERAL . [ SYMBOL RP NUMERAL ASCIIWOR ]
-- On SYMBOL reduce production index -> NUMERAL
-- On RP reduce production index -> NUMERAL
-- On NUMERAL reduce production index -> NUMERAL
-- On ASCIIWOR reduce production index -> NUMERAL

State 52:
index -> symbol . [ SYMBOL RP NUMERAL ASCIIWOR ]
-- On SYMBOL reduce production index -> symbol
-- On RP reduce production index -> symbol
-- On NUMERAL reduce production index -> symbol
-- On ASCIIWOR reduce production index -> symbol

State 53:
psmt2_frontend_0_1_smtlib_parser_option -> key_option index . [ RP ]
-- On RP reduce production psmt2_frontend_0_1_smtlib_parser_option -> key_option index

State 54:
attribute -> key_info . [ RP ]
attribute -> key_info . attribute_value [ RP ]
-- On SYMBOL shift to state 8
-- On STRINGLIT shift to state 55
-- On NUMERAL shift to state 56
-- On LP shift to state 57
-- On HEXADECIMAL shift to state 59
-- On DECIMAL shift to state 60
-- On BINARY shift to state 61
-- On ASCIIWOR shift to state 9
-- On symbol shift to state 71
-- On constant shift to state 72
-- On attribute_value shift to state 73
-- On RP reduce production attribute -> key_info

State 55:
constant -> STRINGLIT . [ VALUES THEORIES SYMBOL STRINGLIT STATUTS SOURCE SORTSDESCRIPTION SORTS SMTLIBVERSION RP PATTERN NUMERAL NOTES NAMED LP LICENSE LANGUAGE HEXADECIMAL FUNSDESCRIPT FUNS EXTENSIONS DEFINITIO DECIMAL CATEGORY BINARY AXIOMS ASCIIWOR # ]
-- On VALUES reduce production constant -> STRINGLIT
-- On THEORIES reduce production constant -> STRINGLIT
-- On SYMBOL reduce production constant -> STRINGLIT
-- On STRINGLIT reduce production constant -> STRINGLIT
-- On STATUTS reduce production constant -> STRINGLIT
-- On SOURCE reduce production constant -> STRINGLIT
-- On SORTSDESCRIPTION reduce production constant -> STRINGLIT
-- On SORTS reduce production constant -> STRINGLIT
-- On SMTLIBVERSION reduce production constant -> STRINGLIT
-- On RP reduce production constant -> STRINGLIT
-- On PATTERN reduce production constant -> STRINGLIT
-- On NUMERAL reduce production constant -> STRINGLIT
-- On NOTES reduce production constant -> STRINGLIT
-- On NAMED reduce production constant -> STRINGLIT
-- On LP reduce production constant -> STRINGLIT
-- On LICENSE reduce production constant -> STRINGLIT
-- On LANGUAGE reduce production constant -> STRINGLIT
-- On HEXADECIMAL reduce production constant -> STRINGLIT
-- On FUNSDESCRIPT reduce production constant -> STRINGLIT
-- On FUNS reduce production constant -> STRINGLIT
-- On EXTENSIONS reduce production constant -> STRINGLIT
-- On DEFINITIO reduce production constant -> STRINGLIT
-- On DECIMAL reduce production constant -> STRINGLIT
-- On CATEGORY reduce production constant -> STRINGLIT
-- On BINARY reduce production constant -> STRINGLIT
-- On AXIOMS reduce production constant -> STRINGLIT
-- On ASCIIWOR reduce production constant -> STRINGLIT

State 56:
constant -> NUMERAL . [ VALUES THEORIES SYMBOL STRINGLIT STATUTS SOURCE SORTSDESCRIPTION SORTS SMTLIBVERSION RP PATTERN NUMERAL NOTES NAMED LP LICENSE LANGUAGE HEXADECIMAL FUNSDESCRIPT FUNS EXTENSIONS DEFINITIO DECIMAL CATEGORY BINARY AXIOMS ASCIIWOR # ]
-- On VALUES reduce production constant -> NUMERAL
-- On THEORIES reduce production constant -> NUMERAL
-- On SYMBOL reduce production constant -> NUMERAL
-- On STRINGLIT reduce production constant -> NUMERAL
-- On STATUTS reduce production constant -> NUMERAL
-- On SOURCE reduce production constant -> NUMERAL
-- On SORTSDESCRIPTION reduce production constant -> NUMERAL
-- On SORTS reduce production constant -> NUMERAL
-- On SMTLIBVERSION reduce production constant -> NUMERAL
-- On RP reduce production constant -> NUMERAL
-- On PATTERN reduce production constant -> NUMERAL
-- On NUMERAL reduce production constant -> NUMERAL
-- On NOTES reduce production constant -> NUMERAL
-- On NAMED reduce production constant -> NUMERAL
-- On LP reduce production constant -> NUMERAL
-- On LICENSE reduce production constant -> NUMERAL
-- On LANGUAGE reduce production constant -> NUMERAL
-- On HEXADECIMAL reduce production constant -> NUMERAL
-- On FUNSDESCRIPT reduce production constant -> NUMERAL
-- On FUNS reduce production constant -> NUMERAL
-- On EXTENSIONS reduce production constant -> NUMERAL
-- On DEFINITIO reduce production constant -> NUMERAL
-- On DECIMAL reduce production constant -> NUMERAL
-- On CATEGORY reduce production constant -> NUMERAL
-- On BINARY reduce production constant -> NUMERAL
-- On AXIOMS reduce production constant -> NUMERAL
-- On ASCIIWOR reduce production constant -> NUMERAL

State 57:
attribute_value -> LP . list(sexpr) RP [ RP ]
-- On VALUES shift to state 5
-- On THEORIES shift to state 6
-- On SYMBOL shift to state 8
-- On STRINGLIT shift to state 55
-- On STATUTS shift to state 7
-- On SOURCE shift to state 11
-- On SORTSDESCRIPTION shift to state 12
-- On SORTS shift to state 13
-- On SMTLIBVERSION shift to state 14
-- On NUMERAL shift to state 56
-- On NOTES shift to state 27
-- On LP shift to state 58
-- On LICENSE shift to state 29
-- On LANGUAGE shift to state 30
-- On HEXADECIMAL shift to state 59
-- On FUNSDESCRIPT shift to state 34
-- On FUNS shift to state 35
-- On EXTENSIONS shift to state 36
-- On DEFINITIO shift to state 40
-- On DECIMAL shift to state 60
-- On CATEGORY shift to state 41
-- On BINARY shift to state 61
-- On AXIOMS shift to state 42
-- On ASCIIWOR shift to state 9
-- On symbol shift to state 62
-- On sexpr shift to state 63
-- On list(sexpr) shift to state 69
-- On keyword shift to state 65
-- On constant shift to state 66
-- On RP reduce production list(sexpr) ->

State 58:
sexpr -> LP . list(sexpr) RP [ VALUES THEORIES SYMBOL STRINGLIT STATUTS SOURCE SORTSDESCRIPTION SORTS SMTLIBVERSION RP NUMERAL NOTES LP LICENSE LANGUAGE HEXADECIMAL FUNSDESCRIPT FUNS EXTENSIONS DEFINITIO DECIMAL CATEGORY BINARY AXIOMS ASCIIWOR ]
-- On VALUES shift to state 5
-- On THEORIES shift to state 6
-- On SYMBOL shift to state 8
-- On STRINGLIT shift to state 55
-- On STATUTS shift to state 7
-- On SOURCE shift to state 11
-- On SORTSDESCRIPTION shift to state 12
-- On SORTS shift to state 13
-- On SMTLIBVERSION shift to state 14
-- On NUMERAL shift to state 56
-- On NOTES shift to state 27
-- On LP shift to state 58
-- On LICENSE shift to state 29
-- On LANGUAGE shift to state 30
-- On HEXADECIMAL shift to state 59
-- On FUNSDESCRIPT shift to state 34
-- On FUNS shift to state 35
-- On EXTENSIONS shift to state 36
-- On DEFINITIO shift to state 40
-- On DECIMAL shift to state 60
-- On CATEGORY shift to state 41
-- On BINARY shift to state 61
-- On AXIOMS shift to state 42
-- On ASCIIWOR shift to state 9
-- On symbol shift to state 62
-- On sexpr shift to state 63
-- On list(sexpr) shift to state 67
-- On keyword shift to state 65
-- On constant shift to state 66
-- On RP reduce production list(sexpr) ->

State 59:
constant -> HEXADECIMAL . [ VALUES THEORIES SYMBOL STRINGLIT STATUTS SOURCE SORTSDESCRIPTION SORTS SMTLIBVERSION RP PATTERN NUMERAL NOTES NAMED LP LICENSE LANGUAGE HEXADECIMAL FUNSDESCRIPT FUNS EXTENSIONS DEFINITIO DECIMAL CATEGORY BINARY AXIOMS ASCIIWOR # ]
-- On VALUES reduce production constant -> HEXADECIMAL
-- On THEORIES reduce production constant -> HEXADECIMAL
-- On SYMBOL reduce production constant -> HEXADECIMAL
-- On STRINGLIT reduce production constant -> HEXADECIMAL
-- On STATUTS reduce production constant -> HEXADECIMAL
-- On SOURCE reduce production constant -> HEXADECIMAL
-- On SORTSDESCRIPTION reduce production constant -> HEXADECIMAL
-- On SORTS reduce production constant -> HEXADECIMAL
-- On SMTLIBVERSION reduce production constant -> HEXADECIMAL
-- On RP reduce production constant -> HEXADECIMAL
-- On PATTERN reduce production constant -> HEXADECIMAL
-- On NUMERAL reduce production constant -> HEXADECIMAL
-- On NOTES reduce production constant -> HEXADECIMAL
-- On NAMED reduce production constant -> HEXADECIMAL
-- On LP reduce production constant -> HEXADECIMAL
-- On LICENSE reduce production constant -> HEXADECIMAL
-- On LANGUAGE reduce production constant -> HEXADECIMAL
-- On HEXADECIMAL reduce production constant -> HEXADECIMAL
-- On FUNSDESCRIPT reduce production constant -> HEXADECIMAL
-- On FUNS reduce production constant -> HEXADECIMAL
-- On EXTENSIONS reduce production constant -> HEXADECIMAL
-- On DEFINITIO reduce production constant -> HEXADECIMAL
-- On DECIMAL reduce production constant -> HEXADECIMAL
-- On CATEGORY reduce production constant -> HEXADECIMAL
-- On BINARY reduce production constant -> HEXADECIMAL
-- On AXIOMS reduce production constant -> HEXADECIMAL
-- On ASCIIWOR reduce production constant -> HEXADECIMAL

State 60:
constant -> DECIMAL . [ VALUES THEORIES SYMBOL STRINGLIT STATUTS SOURCE SORTSDESCRIPTION SORTS SMTLIBVERSION RP PATTERN NUMERAL NOTES NAMED LP LICENSE LANGUAGE HEXADECIMAL FUNSDESCRIPT FUNS EXTENSIONS DEFINITIO DECIMAL CATEGORY BINARY AXIOMS ASCIIWOR # ]
-- On VALUES reduce production constant -> DECIMAL
-- On THEORIES reduce production constant -> DECIMAL
-- On SYMBOL reduce production constant -> DECIMAL
-- On STRINGLIT reduce production constant -> DECIMAL
-- On STATUTS reduce production constant -> DECIMAL
-- On SOURCE reduce production constant -> DECIMAL
-- On SORTSDESCRIPTION reduce production constant -> DECIMAL
-- On SORTS reduce production constant -> DECIMAL
-- On SMTLIBVERSION reduce production constant -> DECIMAL
-- On RP reduce production constant -> DECIMAL
-- On PATTERN reduce production constant -> DECIMAL
-- On NUMERAL reduce production constant -> DECIMAL
-- On NOTES reduce production constant -> DECIMAL
-- On NAMED reduce production constant -> DECIMAL
-- On LP reduce production constant -> DECIMAL
-- On LICENSE reduce production constant -> DECIMAL
-- On LANGUAGE reduce production constant -> DECIMAL
-- On HEXADECIMAL reduce production constant -> DECIMAL
-- On FUNSDESCRIPT reduce production constant -> DECIMAL
-- On FUNS reduce production constant -> DECIMAL
-- On EXTENSIONS reduce production constant -> DECIMAL
-- On DEFINITIO reduce production constant -> DECIMAL
-- On DECIMAL reduce production constant -> DECIMAL
-- On CATEGORY reduce production constant -> DECIMAL
-- On BINARY reduce production constant -> DECIMAL
-- On AXIOMS reduce production constant -> DECIMAL
-- On ASCIIWOR reduce production constant -> DECIMAL

State 61:
constant -> BINARY . [ VALUES THEORIES SYMBOL STRINGLIT STATUTS SOURCE SORTSDESCRIPTION SORTS SMTLIBVERSION RP PATTERN NUMERAL NOTES NAMED LP LICENSE LANGUAGE HEXADECIMAL FUNSDESCRIPT FUNS EXTENSIONS DEFINITIO DECIMAL CATEGORY BINARY AXIOMS ASCIIWOR # ]
-- On VALUES reduce production constant -> BINARY
-- On THEORIES reduce production constant -> BINARY
-- On SYMBOL reduce production constant -> BINARY
-- On STRINGLIT reduce production constant -> BINARY
-- On STATUTS reduce production constant -> BINARY
-- On SOURCE reduce production constant -> BINARY
-- On SORTSDESCRIPTION reduce production constant -> BINARY
-- On SORTS reduce production constant -> BINARY
-- On SMTLIBVERSION reduce production constant -> BINARY
-- On RP reduce production constant -> BINARY
-- On PATTERN reduce production constant -> BINARY
-- On NUMERAL reduce production constant -> BINARY
-- On NOTES reduce production constant -> BINARY
-- On NAMED reduce production constant -> BINARY
-- On LP reduce production constant -> BINARY
-- On LICENSE reduce production constant -> BINARY
-- On LANGUAGE reduce production constant -> BINARY
-- On HEXADECIMAL reduce production constant -> BINARY
-- On FUNSDESCRIPT reduce production constant -> BINARY
-- On FUNS reduce production constant -> BINARY
-- On EXTENSIONS reduce production constant -> BINARY
-- On DEFINITIO reduce production constant -> BINARY
-- On DECIMAL reduce production constant -> BINARY
-- On CATEGORY reduce production constant -> BINARY
-- On BINARY reduce production constant -> BINARY
-- On AXIOMS reduce production constant -> BINARY
-- On ASCIIWOR reduce production constant -> BINARY

State 62:
sexpr -> symbol . [ VALUES THEORIES SYMBOL STRINGLIT STATUTS SOURCE SORTSDESCRIPTION SORTS SMTLIBVERSION RP NUMERAL NOTES LP LICENSE LANGUAGE HEXADECIMAL FUNSDESCRIPT FUNS EXTENSIONS DEFINITIO DECIMAL CATEGORY BINARY AXIOMS ASCIIWOR ]
-- On VALUES reduce production sexpr -> symbol
-- On THEORIES reduce production sexpr -> symbol
-- On SYMBOL reduce production sexpr -> symbol
-- On STRINGLIT reduce production sexpr -> symbol
-- On STATUTS reduce production sexpr -> symbol
-- On SOURCE reduce production sexpr -> symbol
-- On SORTSDESCRIPTION reduce production sexpr -> symbol
-- On SORTS reduce production sexpr -> symbol
-- On SMTLIBVERSION reduce production sexpr -> symbol
-- On RP reduce production sexpr -> symbol
-- On NUMERAL reduce production sexpr -> symbol
-- On NOTES reduce production sexpr -> symbol
-- On LP reduce production sexpr -> symbol
-- On LICENSE reduce production sexpr -> symbol
-- On LANGUAGE reduce production sexpr -> symbol
-- On HEXADECIMAL reduce production sexpr -> symbol
-- On FUNSDESCRIPT reduce production sexpr -> symbol
-- On FUNS reduce production sexpr -> symbol
-- On EXTENSIONS reduce production sexpr -> symbol
-- On DEFINITIO reduce production sexpr -> symbol
-- On DECIMAL reduce production sexpr -> symbol
-- On CATEGORY reduce production sexpr -> symbol
-- On BINARY reduce production sexpr -> symbol
-- On AXIOMS reduce production sexpr -> symbol
-- On ASCIIWOR reduce production sexpr -> symbol

State 63:
list(sexpr) -> sexpr . list(sexpr) [ RP ]
-- On VALUES shift to state 5
-- On THEORIES shift to state 6
-- On SYMBOL shift to state 8
-- On STRINGLIT shift to state 55
-- On STATUTS shift to state 7
-- On SOURCE shift to state 11
-- On SORTSDESCRIPTION shift to state 12
-- On SORTS shift to state 13
-- On SMTLIBVERSION shift to state 14
-- On NUMERAL shift to state 56
-- On NOTES shift to state 27
-- On LP shift to state 58
-- On LICENSE shift to state 29
-- On LANGUAGE shift to state 30
-- On HEXADECIMAL shift to state 59
-- On FUNSDESCRIPT shift to state 34
-- On FUNS shift to state 35
-- On EXTENSIONS shift to state 36
-- On DEFINITIO shift to state 40
-- On DECIMAL shift to state 60
-- On CATEGORY shift to state 41
-- On BINARY shift to state 61
-- On AXIOMS shift to state 42
-- On ASCIIWOR shift to state 9
-- On symbol shift to state 62
-- On sexpr shift to state 63
-- On list(sexpr) shift to state 64
-- On keyword shift to state 65
-- On constant shift to state 66
-- On RP reduce production list(sexpr) ->

State 64:
list(sexpr) -> sexpr list(sexpr) . [ RP ]
-- On RP reduce production list(sexpr) -> sexpr list(sexpr)

State 65:
sexpr -> keyword . [ VALUES THEORIES SYMBOL STRINGLIT STATUTS SOURCE SORTSDESCRIPTION SORTS SMTLIBVERSION RP NUMERAL NOTES LP LICENSE LANGUAGE HEXADECIMAL FUNSDESCRIPT FUNS EXTENSIONS DEFINITIO DECIMAL CATEGORY BINARY AXIOMS ASCIIWOR ]
-- On VALUES reduce production sexpr -> keyword
-- On THEORIES reduce production sexpr -> keyword
-- On SYMBOL reduce production sexpr -> keyword
-- On STRINGLIT reduce production sexpr -> keyword
-- On STATUTS reduce production sexpr -> keyword
-- On SOURCE reduce production sexpr -> keyword
-- On SORTSDESCRIPTION reduce production sexpr -> keyword
-- On SORTS reduce production sexpr -> keyword
-- On SMTLIBVERSION reduce production sexpr -> keyword
-- On RP reduce production sexpr -> keyword
-- On NUMERAL reduce production sexpr -> keyword
-- On NOTES reduce production sexpr -> keyword
-- On LP reduce production sexpr -> keyword
-- On LICENSE reduce production sexpr -> keyword
-- On LANGUAGE reduce production sexpr -> keyword
-- On HEXADECIMAL reduce production sexpr -> keyword
-- On FUNSDESCRIPT reduce production sexpr -> keyword
-- On FUNS reduce production sexpr -> keyword
-- On EXTENSIONS reduce production sexpr -> keyword
-- On DEFINITIO reduce production sexpr -> keyword
-- On DECIMAL reduce production sexpr -> keyword
-- On CATEGORY reduce production sexpr -> keyword
-- On BINARY reduce production sexpr -> keyword
-- On AXIOMS reduce production sexpr -> keyword
-- On ASCIIWOR reduce production sexpr -> keyword

State 66:
sexpr -> constant . [ VALUES THEORIES SYMBOL STRINGLIT STATUTS SOURCE SORTSDESCRIPTION SORTS SMTLIBVERSION RP NUMERAL NOTES LP LICENSE LANGUAGE HEXADECIMAL FUNSDESCRIPT FUNS EXTENSIONS DEFINITIO DECIMAL CATEGORY BINARY AXIOMS ASCIIWOR ]
-- On VALUES reduce production sexpr -> constant
-- On THEORIES reduce production sexpr -> constant
-- On SYMBOL reduce production sexpr -> constant
-- On STRINGLIT reduce production sexpr -> constant
-- On STATUTS reduce production sexpr -> constant
-- On SOURCE reduce production sexpr -> constant
-- On SORTSDESCRIPTION reduce production sexpr -> constant
-- On SORTS reduce production sexpr -> constant
-- On SMTLIBVERSION reduce production sexpr -> constant
-- On RP reduce production sexpr -> constant
-- On NUMERAL reduce production sexpr -> constant
-- On NOTES reduce production sexpr -> constant
-- On LP reduce production sexpr -> constant
-- On LICENSE reduce production sexpr -> constant
-- On LANGUAGE reduce production sexpr -> constant
-- On HEXADECIMAL reduce production sexpr -> constant
-- On FUNSDESCRIPT reduce production sexpr -> constant
-- On FUNS reduce production sexpr -> constant
-- On EXTENSIONS reduce production sexpr -> constant
-- On DEFINITIO reduce production sexpr -> constant
-- On DECIMAL reduce production sexpr -> constant
-- On CATEGORY reduce production sexpr -> constant
-- On BINARY reduce production sexpr -> constant
-- On AXIOMS reduce production sexpr -> constant
-- On ASCIIWOR reduce production sexpr -> constant

State 67:
sexpr -> LP list(sexpr) . RP [ VALUES THEORIES SYMBOL STRINGLIT STATUTS SOURCE SORTSDESCRIPTION SORTS SMTLIBVERSION RP NUMERAL NOTES LP LICENSE LANGUAGE HEXADECIMAL FUNSDESCRIPT FUNS EXTENSIONS DEFINITIO DECIMAL CATEGORY BINARY AXIOMS ASCIIWOR ]
-- On RP shift to state 68

State 68:
sexpr -> LP list(sexpr) RP . [ VALUES THEORIES SYMBOL STRINGLIT STATUTS SOURCE SORTSDESCRIPTION SORTS SMTLIBVERSION RP NUMERAL NOTES LP LICENSE LANGUAGE HEXADECIMAL FUNSDESCRIPT FUNS EXTENSIONS DEFINITIO DECIMAL CATEGORY BINARY AXIOMS ASCIIWOR ]
-- On VALUES reduce production sexpr -> LP list(sexpr) RP
-- On THEORIES reduce production sexpr -> LP list(sexpr) RP
-- On SYMBOL reduce production sexpr -> LP list(sexpr) RP
-- On STRINGLIT reduce production sexpr -> LP list(sexpr) RP
-- On STATUTS reduce production sexpr -> LP list(sexpr) RP
-- On SOURCE reduce production sexpr -> LP list(sexpr) RP
-- On SORTSDESCRIPTION reduce production sexpr -> LP list(sexpr) RP
-- On SORTS reduce production sexpr -> LP list(sexpr) RP
-- On SMTLIBVERSION reduce production sexpr -> LP list(sexpr) RP
-- On RP reduce production sexpr -> LP list(sexpr) RP
-- On NUMERAL reduce production sexpr -> LP list(sexpr) RP
-- On NOTES reduce production sexpr -> LP list(sexpr) RP
-- On LP reduce production sexpr -> LP list(sexpr) RP
-- On LICENSE reduce production sexpr -> LP list(sexpr) RP
-- On LANGUAGE reduce production sexpr -> LP list(sexpr) RP
-- On HEXADECIMAL reduce production sexpr -> LP list(sexpr) RP
-- On FUNSDESCRIPT reduce production sexpr -> LP list(sexpr) RP
-- On FUNS reduce production sexpr -> LP list(sexpr) RP
-- On EXTENSIONS reduce production sexpr -> LP list(sexpr) RP
-- On DEFINITIO reduce production sexpr -> LP list(sexpr) RP
-- On DECIMAL reduce production sexpr -> LP list(sexpr) RP
-- On CATEGORY reduce production sexpr -> LP list(sexpr) RP
-- On BINARY reduce production sexpr -> LP list(sexpr) RP
-- On AXIOMS reduce production sexpr -> LP list(sexpr) RP
-- On ASCIIWOR reduce production sexpr -> LP list(sexpr) RP

State 69:
attribute_value -> LP list(sexpr) . RP [ RP ]
-- On RP shift to state 70

State 70:
attribute_value -> LP list(sexpr) RP . [ RP ]
-- On RP reduce production attribute_value -> LP list(sexpr) RP

State 71:
attribute_value -> symbol . [ RP ]
-- On RP reduce production attribute_value -> symbol

State 72:
attribute_value -> constant . [ RP ]
-- On RP reduce production attribute_value -> constant

State 73:
attribute -> key_info attribute_value . [ RP ]
-- On RP reduce production attribute -> key_info attribute_value

State 74:
psmt2_frontend_0_1_smtlib_parser_option -> attribute . [ RP ]
-- On RP reduce production psmt2_frontend_0_1_smtlib_parser_option -> attribute

State 75:
command -> LP SETLOGIC . symbol RP [ LP EOF ]
-- On SYMBOL shift to state 8
-- On ASCIIWOR shift to state 9
-- On symbol shift to state 76

State 76:
command -> LP SETLOGIC symbol . RP [ LP EOF ]
-- On RP shift to state 77

State 77:
command -> LP SETLOGIC symbol RP . [ LP EOF ]
-- On LP reduce production command -> LP SETLOGIC symbol RP
-- On EOF reduce production command -> LP SETLOGIC symbol RP

State 78:
command -> LP SETINFO . attribute RP [ LP EOF ]
-- On VERSION shift to state 3
-- On VALUES shift to state 5
-- On THEORIES shift to state 6
-- On STATUTS shift to state 7
-- On SOURCE shift to state 11
-- On SORTSDESCRIPTION shift to state 12
-- On SORTS shift to state 13
-- On SMTLIBVERSION shift to state 14
-- On SERIES shift to state 15
-- On REASONUNKNOWN shift to state 18
-- On NOTES shift to state 27
-- On NAME shift to state 28
-- On LICENSE shift to state 29
-- On LANGUAGE shift to state 30
-- On INSTANCE shift to state 32
-- On FUNSDESCRIPT shift to state 34
-- On FUNS shift to state 35
-- On EXTENSIONS shift to state 36
-- On ERRORBEHAV shift to state 37
-- On DIFFICULTY shift to state 38
-- On DEFINITIO shift to state 40
-- On CATEGORY shift to state 41
-- On AXIOMS shift to state 42
-- On AUTHORS shift to state 43
-- On AUTHOR shift to state 44
-- On ASSERTIONSTACKLVL shift to state 45
-- On ALLSTATS shift to state 46
-- On keyword shift to state 49
-- On key_info shift to state 54
-- On attribute shift to state 79

State 79:
command -> LP SETINFO attribute . RP [ LP EOF ]
-- On RP shift to state 80

State 80:
command -> LP SETINFO attribute RP . [ LP EOF ]
-- On LP reduce production command -> LP SETINFO attribute RP
-- On EOF reduce production command -> LP SETINFO attribute RP

State 81:
command -> LP RESETASSERTIONS . RP [ LP EOF ]
-- On RP shift to state 82

State 82:
command -> LP RESETASSERTIONS RP . [ LP EOF ]
-- On LP reduce production command -> LP RESETASSERTIONS RP
-- On EOF reduce production command -> LP RESETASSERTIONS RP

State 83:
command -> LP RESET . RP [ LP EOF ]
-- On RP shift to state 84

State 84:
command -> LP RESET RP . [ LP EOF ]
-- On LP reduce production command -> LP RESET RP
-- On EOF reduce production command -> LP RESET RP

State 85:
command -> LP PUSH . NUMERAL RP [ LP EOF ]
-- On NUMERAL shift to state 86

State 86:
command -> LP PUSH NUMERAL . RP [ LP EOF ]
-- On RP shift to state 87

State 87:
command -> LP PUSH NUMERAL RP . [ LP EOF ]
-- On LP reduce production command -> LP PUSH NUMERAL RP
-- On EOF reduce production command -> LP PUSH NUMERAL RP

State 88:
command -> LP POP . NUMERAL RP [ LP EOF ]
-- On NUMERAL shift to state 89

State 89:
command -> LP POP NUMERAL . RP [ LP EOF ]
-- On RP shift to state 90

State 90:
command -> LP POP NUMERAL RP . [ LP EOF ]
-- On LP reduce production command -> LP POP NUMERAL RP
-- On EOF reduce production command -> LP POP NUMERAL RP

State 91:
command -> LP GETVALUE . LP nonempty_list(term) RP RP [ LP EOF ]
-- On LP shift to state 92

State 92:
command -> LP GETVALUE LP . nonempty_list(term) RP RP [ LP EOF ]
-- On SYMBOL shift to state 8
-- On STRINGLIT shift to state 55
-- On NUMERAL shift to state 56
-- On LP shift to state 93
-- On HEXADECIMAL shift to state 59
-- On DECIMAL shift to state 60
-- On BINARY shift to state 61
-- On ASCIIWOR shift to state 9
-- On term shift to state 173
-- On symbol shift to state 114
-- On qualidentifier shift to state 115
-- On nonempty_list(term) shift to state 186
-- On identifier shift to state 116
-- On constant shift to state 117

State 93:
identifier -> LP . UNDERSCORE symbol nonempty_list(index) RP [ SYMBOL STRINGLIT RP PATTERN NUMERAL NAMED LP HEXADECIMAL DECIMAL BINARY ASCIIWOR # ]
qualidentifier -> LP . AS identifier sort RP [ SYMBOL STRINGLIT RP PATTERN NUMERAL NAMED LP HEXADECIMAL DECIMAL BINARY ASCIIWOR # ]
term -> LP . qualidentifier nonempty_list(term) RP [ SYMBOL STRINGLIT RP PATTERN NUMERAL NAMED LP HEXADECIMAL DECIMAL BINARY ASCIIWOR # ]
term -> LP . LET LP nonempty_list(varbinding) RP term RP [ SYMBOL STRINGLIT RP PATTERN NUMERAL NAMED LP HEXADECIMAL DECIMAL BINARY ASCIIWOR # ]
term -> LP . LET LP RP term RP [ SYMBOL STRINGLIT RP PATTERN NUMERAL NAMED LP HEXADECIMAL DECIMAL BINARY ASCIIWOR # ]
term -> LP . FORALL LP nonempty_list(sorted_var) RP term RP [ SYMBOL STRINGLIT RP PATTERN NUMERAL NAMED LP HEXADECIMAL DECIMAL BINARY ASCIIWOR # ]
term -> LP . EXISTS LP nonempty_list(sorted_var) RP term RP [ SYMBOL STRINGLIT RP PATTERN NUMERAL NAMED LP HEXADECIMAL DECIMAL BINARY ASCIIWOR # ]
term -> LP . MATCH term LP nonempty_list(match_case) RP RP [ SYMBOL STRINGLIT RP PATTERN NUMERAL NAMED LP HEXADECIMAL DECIMAL BINARY ASCIIWOR # ]
term -> LP . EXCLIMATIONPT term list(key_term) RP [ SYMBOL STRINGLIT RP PATTERN NUMERAL NAMED LP HEXADECIMAL DECIMAL BINARY ASCIIWOR # ]
-- On UNDERSCORE shift to state 94
-- On SYMBOL shift to state 8
-- On MATCH shift to state 100
-- On LP shift to state 123
-- On LET shift to state 136
-- On FORALL shift to state 151
-- On EXISTS shift to state 163
-- On EXCLIMATIONPT shift to state 169
-- On ASCIIWOR shift to state 9
-- On AS shift to state 124
-- On symbol shift to state 114
-- On qualidentifier shift to state 183
-- On identifier shift to state 116

State 94:
identifier -> LP UNDERSCORE . symbol nonempty_list(index) RP [ SYMBOL STRINGLIT RP PATTERN NUMERAL NAMED LP HEXADECIMAL DECIMAL BINARY ASCIIWOR # ]
-- On SYMBOL shift to state 8
-- On ASCIIWOR shift to state 9
-- On symbol shift to state 95

State 95:
identifier -> LP UNDERSCORE symbol . nonempty_list(index) RP [ SYMBOL STRINGLIT RP PATTERN NUMERAL NAMED LP HEXADECIMAL DECIMAL BINARY ASCIIWOR # ]
-- On SYMBOL shift to state 8
-- On NUMERAL shift to state 51
-- On ASCIIWOR shift to state 9
-- On symbol shift to state 52
-- On nonempty_list(index) shift to state 96
-- On index shift to state 98

State 96:
identifier -> LP UNDERSCORE symbol nonempty_list(index) . RP [ SYMBOL STRINGLIT RP PATTERN NUMERAL NAMED LP HEXADECIMAL DECIMAL BINARY ASCIIWOR # ]
-- On RP shift to state 97

State 97:
identifier -> LP UNDERSCORE symbol nonempty_list(index) RP . [ SYMBOL STRINGLIT RP PATTERN NUMERAL NAMED LP HEXADECIMAL DECIMAL BINARY ASCIIWOR # ]
-- On SYMBOL reduce production identifier -> LP UNDERSCORE symbol nonempty_list(index) RP
-- On STRINGLIT reduce production identifier -> LP UNDERSCORE symbol nonempty_list(index) RP
-- On RP reduce production identifier -> LP UNDERSCORE symbol nonempty_list(index) RP
-- On PATTERN reduce production identifier -> LP UNDERSCORE symbol nonempty_list(index) RP
-- On NUMERAL reduce production identifier -> LP UNDERSCORE symbol nonempty_list(index) RP
-- On NAMED reduce production identifier -> LP UNDERSCORE symbol nonempty_list(index) RP
-- On LP reduce production identifier -> LP UNDERSCORE symbol nonempty_list(index) RP
-- On HEXADECIMAL reduce production identifier -> LP UNDERSCORE symbol nonempty_list(index) RP
-- On DECIMAL reduce production identifier -> LP UNDERSCORE symbol nonempty_list(index) RP
-- On BINARY reduce production identifier -> LP UNDERSCORE symbol nonempty_list(index) RP
-- On ASCIIWOR reduce production identifier -> LP UNDERSCORE symbol nonempty_list(index) RP

State 98:
nonempty_list(index) -> index . [ RP ]
nonempty_list(index) -> index . nonempty_list(index) [ RP ]
-- On SYMBOL shift to state 8
-- On NUMERAL shift to state 51
-- On ASCIIWOR shift to state 9
-- On symbol shift to state 52
-- On nonempty_list(index) shift to state 99
-- On index shift to state 98
-- On RP reduce production nonempty_list(index) -> index

State 99:
nonempty_list(index) -> index nonempty_list(index) . [ RP ]
-- On RP reduce production nonempty_list(index) -> index nonempty_list(index)

State 100:
term -> LP MATCH . term LP nonempty_list(match_case) RP RP [ SYMBOL STRINGLIT RP PATTERN NUMERAL NAMED LP HEXADECIMAL DECIMAL BINARY ASCIIWOR # ]
-- On SYMBOL shift to state 8
-- On STRINGLIT shift to state 55
-- On NUMERAL shift to state 56
-- On LP shift to state 93
-- On HEXADECIMAL shift to state 59
-- On DECIMAL shift to state 60
-- On BINARY shift to state 61
-- On ASCIIWOR shift to state 9
-- On term shift to state 101
-- On symbol shift to state 114
-- On qualidentifier shift to state 115
-- On identifier shift to state 116
-- On constant shift to state 117

State 101:
term -> LP MATCH term . LP nonempty_list(match_case) RP RP [ SYMBOL STRINGLIT RP PATTERN NUMERAL NAMED LP HEXADECIMAL DECIMAL BINARY ASCIIWOR # ]
-- On LP shift to state 102

State 102:
term -> LP MATCH term LP . nonempty_list(match_case) RP RP [ SYMBOL STRINGLIT RP PATTERN NUMERAL NAMED LP HEXADECIMAL DECIMAL BINARY ASCIIWOR # ]
-- On LP shift to state 103
-- On nonempty_list(match_case) shift to state 118
-- On match_case shift to state 121

State 103:
match_case -> LP . pattern term RP [ RP LP ]
-- On SYMBOL shift to state 8
-- On LP shift to state 104
-- On ASCIIWOR shift to state 9
-- On symbol shift to state 110
-- On pattern shift to state 111

State 104:
pattern -> LP . symbol nonempty_list(symbol) RP [ SYMBOL STRINGLIT NUMERAL LP HEXADECIMAL DECIMAL BINARY ASCIIWOR ]
-- On SYMBOL shift to state 8
-- On ASCIIWOR shift to state 9
-- On symbol shift to state 105

State 105:
pattern -> LP symbol . nonempty_list(symbol) RP [ SYMBOL STRINGLIT NUMERAL LP HEXADECIMAL DECIMAL BINARY ASCIIWOR ]
-- On SYMBOL shift to state 8
-- On ASCIIWOR shift to state 9
-- On symbol shift to state 106
-- On nonempty_list(symbol) shift to state 108

State 106:
nonempty_list(symbol) -> symbol . [ RP ]
nonempty_list(symbol) -> symbol . nonempty_list(symbol) [ RP ]
-- On SYMBOL shift to state 8
-- On ASCIIWOR shift to state 9
-- On symbol shift to state 106
-- On nonempty_list(symbol) shift to state 107
-- On RP reduce production nonempty_list(symbol) -> symbol

State 107:
nonempty_list(symbol) -> symbol nonempty_list(symbol) . [ RP ]
-- On RP reduce production nonempty_list(symbol) -> symbol nonempty_list(symbol)

State 108:
pattern -> LP symbol nonempty_list(symbol) . RP [ SYMBOL STRINGLIT NUMERAL LP HEXADECIMAL DECIMAL BINARY ASCIIWOR ]
-- On RP shift to state 109

State 109:
pattern -> LP symbol nonempty_list(symbol) RP . [ SYMBOL STRINGLIT NUMERAL LP HEXADECIMAL DECIMAL BINARY ASCIIWOR ]
-- On SYMBOL reduce production pattern -> LP symbol nonempty_list(symbol) RP
-- On STRINGLIT reduce production pattern -> LP symbol nonempty_list(symbol) RP
-- On NUMERAL reduce production pattern -> LP symbol nonempty_list(symbol) RP
-- On LP reduce production pattern -> LP symbol nonempty_list(symbol) RP
-- On HEXADECIMAL reduce production pattern -> LP symbol nonempty_list(symbol) RP
-- On DECIMAL reduce production pattern -> LP symbol nonempty_list(symbol) RP
-- On BINARY reduce production pattern -> LP symbol nonempty_list(symbol) RP
-- On ASCIIWOR reduce production pattern -> LP symbol nonempty_list(symbol) RP

State 110:
pattern -> symbol . [ SYMBOL STRINGLIT NUMERAL LP HEXADECIMAL DECIMAL BINARY ASCIIWOR ]
-- On SYMBOL reduce production pattern -> symbol
-- On STRINGLIT reduce production pattern -> symbol
-- On NUMERAL reduce production pattern -> symbol
-- On LP reduce production pattern -> symbol
-- On HEXADECIMAL reduce production pattern -> symbol
-- On DECIMAL reduce production pattern -> symbol
-- On BINARY reduce production pattern -> symbol
-- On ASCIIWOR reduce production pattern -> symbol

State 111:
match_case -> LP pattern . term RP [ RP LP ]
-- On SYMBOL shift to state 8
-- On STRINGLIT shift to state 55
-- On NUMERAL shift to state 56
-- On LP shift to state 93
-- On HEXADECIMAL shift to state 59
-- On DECIMAL shift to state 60
-- On BINARY shift to state 61
-- On ASCIIWOR shift to state 9
-- On term shift to state 112
-- On symbol shift to state 114
-- On qualidentifier shift to state 115
-- On identifier shift to state 116
-- On constant shift to state 117

State 112:
match_case -> LP pattern term . RP [ RP LP ]
-- On RP shift to state 113

State 113:
match_case -> LP pattern term RP . [ RP LP ]
-- On RP reduce production match_case -> LP pattern term RP
-- On LP reduce production match_case -> LP pattern term RP

State 114:
identifier -> symbol . [ SYMBOL STRINGLIT RP PATTERN NUMERAL NAMED LP HEXADECIMAL DECIMAL BINARY ASCIIWOR # ]
-- On SYMBOL reduce production identifier -> symbol
-- On STRINGLIT reduce production identifier -> symbol
-- On RP reduce production identifier -> symbol
-- On PATTERN reduce production identifier -> symbol
-- On NUMERAL reduce production identifier -> symbol
-- On NAMED reduce production identifier -> symbol
-- On LP reduce production identifier -> symbol
-- On HEXADECIMAL reduce production identifier -> symbol
-- On DECIMAL reduce production identifier -> symbol
-- On BINARY reduce production identifier -> symbol
-- On ASCIIWOR reduce production identifier -> symbol

State 115:
term -> qualidentifier . [ SYMBOL STRINGLIT RP PATTERN NUMERAL NAMED LP HEXADECIMAL DECIMAL BINARY ASCIIWOR # ]
-- On SYMBOL reduce production term -> qualidentifier
-- On STRINGLIT reduce production term -> qualidentifier
-- On RP reduce production term -> qualidentifier
-- On PATTERN reduce production term -> qualidentifier
-- On NUMERAL reduce production term -> qualidentifier
-- On NAMED reduce production term -> qualidentifier
-- On LP reduce production term -> qualidentifier
-- On HEXADECIMAL reduce production term -> qualidentifier
-- On DECIMAL reduce production term -> qualidentifier
-- On BINARY reduce production term -> qualidentifier
-- On ASCIIWOR reduce production term -> qualidentifier

State 116:
qualidentifier -> identifier . [ SYMBOL STRINGLIT RP PATTERN NUMERAL NAMED LP HEXADECIMAL DECIMAL BINARY ASCIIWOR # ]
-- On SYMBOL reduce production qualidentifier -> identifier
-- On STRINGLIT reduce production qualidentifier -> identifier
-- On RP reduce production qualidentifier -> identifier
-- On PATTERN reduce production qualidentifier -> identifier
-- On NUMERAL reduce production qualidentifier -> identifier
-- On NAMED reduce production qualidentifier -> identifier
-- On LP reduce production qualidentifier -> identifier
-- On HEXADECIMAL reduce production qualidentifier -> identifier
-- On DECIMAL reduce production qualidentifier -> identifier
-- On BINARY reduce production qualidentifier -> identifier
-- On ASCIIWOR reduce production qualidentifier -> identifier

State 117:
term -> constant . [ SYMBOL STRINGLIT RP PATTERN NUMERAL NAMED LP HEXADECIMAL DECIMAL BINARY ASCIIWOR # ]
-- On SYMBOL reduce production term -> constant
-- On STRINGLIT reduce production term -> constant
-- On RP reduce production term -> constant
-- On PATTERN reduce production term -> constant
-- On NUMERAL reduce production term -> constant
-- On NAMED reduce production term -> constant
-- On LP reduce production term -> constant
-- On HEXADECIMAL reduce production term -> constant
-- On DECIMAL reduce production term -> constant
-- On BINARY reduce production term -> constant
-- On ASCIIWOR reduce production term -> constant

State 118:
term -> LP MATCH term LP nonempty_list(match_case) . RP RP [ SYMBOL STRINGLIT RP PATTERN NUMERAL NAMED LP HEXADECIMAL DECIMAL BINARY ASCIIWOR # ]
-- On RP shift to state 119

State 119:
term -> LP MATCH term LP nonempty_list(match_case) RP . RP [ SYMBOL STRINGLIT RP PATTERN NUMERAL NAMED LP HEXADECIMAL DECIMAL BINARY ASCIIWOR # ]
-- On RP shift to state 120

State 120:
term -> LP MATCH term LP nonempty_list(match_case) RP RP . [ SYMBOL STRINGLIT RP PATTERN NUMERAL NAMED LP HEXADECIMAL DECIMAL BINARY ASCIIWOR # ]
-- On SYMBOL reduce production term -> LP MATCH term LP nonempty_list(match_case) RP RP
-- On STRINGLIT reduce production term -> LP MATCH term LP nonempty_list(match_case) RP RP
-- On RP reduce production term -> LP MATCH term LP nonempty_list(match_case) RP RP
-- On PATTERN reduce production term -> LP MATCH term LP nonempty_list(match_case) RP RP
-- On NUMERAL reduce production term -> LP MATCH term LP nonempty_list(match_case) RP RP
-- On NAMED reduce production term -> LP MATCH term LP nonempty_list(match_case) RP RP
-- On LP reduce production term -> LP MATCH term LP nonempty_list(match_case) RP RP
-- On HEXADECIMAL reduce production term -> LP MATCH term LP nonempty_list(match_case) RP RP
-- On DECIMAL reduce production term -> LP MATCH term LP nonempty_list(match_case) RP RP
-- On BINARY reduce production term -> LP MATCH term LP nonempty_list(match_case) RP RP
-- On ASCIIWOR reduce production term -> LP MATCH term LP nonempty_list(match_case) RP RP

State 121:
nonempty_list(match_case) -> match_case . [ RP ]
nonempty_list(match_case) -> match_case . nonempty_list(match_case) [ RP ]
-- On LP shift to state 103
-- On nonempty_list(match_case) shift to state 122
-- On match_case shift to state 121
-- On RP reduce production nonempty_list(match_case) -> match_case

State 122:
nonempty_list(match_case) -> match_case nonempty_list(match_case) . [ RP ]
-- On RP reduce production nonempty_list(match_case) -> match_case nonempty_list(match_case)

State 123:
identifier -> LP . UNDERSCORE symbol nonempty_list(index) RP [ SYMBOL STRINGLIT NUMERAL LP HEXADECIMAL DECIMAL BINARY ASCIIWOR ]
qualidentifier -> LP . AS identifier sort RP [ SYMBOL STRINGLIT NUMERAL LP HEXADECIMAL DECIMAL BINARY ASCIIWOR ]
-- On UNDERSCORE shift to state 94
-- On AS shift to state 124

State 124:
qualidentifier -> LP AS . identifier sort RP [ SYMBOL STRINGLIT RP PATTERN NUMERAL NAMED LP HEXADECIMAL DECIMAL BINARY ASCIIWOR # ]
-- On SYMBOL shift to state 8
-- On LP shift to state 125
-- On ASCIIWOR shift to state 9
-- On symbol shift to state 114
-- On identifier shift to state 126

State 125:
identifier -> LP . UNDERSCORE symbol nonempty_list(index) RP [ SYMBOL LP ASCIIWOR ]
-- On UNDERSCORE shift to state 94

State 126:
qualidentifier -> LP AS identifier . sort RP [ SYMBOL STRINGLIT RP PATTERN NUMERAL NAMED LP HEXADECIMAL DECIMAL BINARY ASCIIWOR # ]
-- On SYMBOL shift to state 8
-- On LP shift to state 127
-- On ASCIIWOR shift to state 9
-- On symbol shift to state 114
-- On sort shift to state 134
-- On identifier shift to state 131

State 127:
identifier -> LP . UNDERSCORE symbol nonempty_list(index) RP [ SYMBOL STRINGLIT RP NUMERAL LP HEXADECIMAL DECIMAL BINARY ASCIIWOR ]
sort -> LP . identifier nonempty_list(sort) RP [ SYMBOL STRINGLIT RP NUMERAL LP HEXADECIMAL DECIMAL BINARY ASCIIWOR ]
-- On UNDERSCORE shift to state 94
-- On SYMBOL shift to state 8
-- On LP shift to state 125
-- On ASCIIWOR shift to state 9
-- On symbol shift to state 114
-- On identifier shift to state 128

State 128:
sort -> LP identifier . nonempty_list(sort) RP [ SYMBOL STRINGLIT RP NUMERAL LP HEXADECIMAL DECIMAL BINARY ASCIIWOR ]
-- On SYMBOL shift to state 8
-- On LP shift to state 127
-- On ASCIIWOR shift to state 9
-- On symbol shift to state 114
-- On sort shift to state 129
-- On nonempty_list(sort) shift to state 132
-- On identifier shift to state 131

State 129:
nonempty_list(sort) -> sort . [ RP ]
nonempty_list(sort) -> sort . nonempty_list(sort) [ RP ]
-- On SYMBOL shift to state 8
-- On LP shift to state 127
-- On ASCIIWOR shift to state 9
-- On symbol shift to state 114
-- On sort shift to state 129
-- On nonempty_list(sort) shift to state 130
-- On identifier shift to state 131
-- On RP reduce production nonempty_list(sort) -> sort

State 130:
nonempty_list(sort) -> sort nonempty_list(sort) . [ RP ]
-- On RP reduce production nonempty_list(sort) -> sort nonempty_list(sort)

State 131:
sort -> identifier . [ SYMBOL STRINGLIT RP NUMERAL LP HEXADECIMAL DECIMAL BINARY ASCIIWOR ]
-- On SYMBOL reduce production sort -> identifier
-- On STRINGLIT reduce production sort -> identifier
-- On RP reduce production sort -> identifier
-- On NUMERAL reduce production sort -> identifier
-- On LP reduce production sort -> identifier
-- On HEXADECIMAL reduce production sort -> identifier
-- On DECIMAL reduce production sort -> identifier
-- On BINARY reduce production sort -> identifier
-- On ASCIIWOR reduce production sort -> identifier

State 132:
sort -> LP identifier nonempty_list(sort) . RP [ SYMBOL STRINGLIT RP NUMERAL LP HEXADECIMAL DECIMAL BINARY ASCIIWOR ]
-- On RP shift to state 133

State 133:
sort -> LP identifier nonempty_list(sort) RP . [ SYMBOL STRINGLIT RP NUMERAL LP HEXADECIMAL DECIMAL BINARY ASCIIWOR ]
-- On SYMBOL reduce production sort -> LP identifier nonempty_list(sort) RP
-- On STRINGLIT reduce production sort -> LP identifier nonempty_list(sort) RP
-- On RP reduce production sort -> LP identifier nonempty_list(sort) RP
-- On NUMERAL reduce production sort -> LP identifier nonempty_list(sort) RP
-- On LP reduce production sort -> LP identifier nonempty_list(sort) RP
-- On HEXADECIMAL reduce production sort -> LP identifier nonempty_list(sort) RP
-- On DECIMAL reduce production sort -> LP identifier nonempty_list(sort) RP
-- On BINARY reduce production sort -> LP identifier nonempty_list(sort) RP
-- On ASCIIWOR reduce production sort -> LP identifier nonempty_list(sort) RP

State 134:
qualidentifier -> LP AS identifier sort . RP [ SYMBOL STRINGLIT RP PATTERN NUMERAL NAMED LP HEXADECIMAL DECIMAL BINARY ASCIIWOR # ]
-- On RP shift to state 135

State 135:
qualidentifier -> LP AS identifier sort RP . [ SYMBOL STRINGLIT RP PATTERN NUMERAL NAMED LP HEXADECIMAL DECIMAL BINARY ASCIIWOR # ]
-- On SYMBOL reduce production qualidentifier -> LP AS identifier sort RP
-- On STRINGLIT reduce production qualidentifier -> LP AS identifier sort RP
-- On RP reduce production qualidentifier -> LP AS identifier sort RP
-- On PATTERN reduce production qualidentifier -> LP AS identifier sort RP
-- On NUMERAL reduce production qualidentifier -> LP AS identifier sort RP
-- On NAMED reduce production qualidentifier -> LP AS identifier sort RP
-- On LP reduce production qualidentifier -> LP AS identifier sort RP
-- On HEXADECIMAL reduce production qualidentifier -> LP AS identifier sort RP
-- On DECIMAL reduce production qualidentifier -> LP AS identifier sort RP
-- On BINARY reduce production qualidentifier -> LP AS identifier sort RP
-- On ASCIIWOR reduce production qualidentifier -> LP AS identifier sort RP

State 136:
term -> LP LET . LP nonempty_list(varbinding) RP term RP [ SYMBOL STRINGLIT RP PATTERN NUMERAL NAMED LP HEXADECIMAL DECIMAL BINARY ASCIIWOR # ]
term -> LP LET . LP RP term RP [ SYMBOL STRINGLIT RP PATTERN NUMERAL NAMED LP HEXADECIMAL DECIMAL BINARY ASCIIWOR # ]
-- On LP shift to state 137

State 137:
term -> LP LET LP . nonempty_list(varbinding) RP term RP [ SYMBOL STRINGLIT RP PATTERN NUMERAL NAMED LP HEXADECIMAL DECIMAL BINARY ASCIIWOR # ]
term -> LP LET LP . RP term RP [ SYMBOL STRINGLIT RP PATTERN NUMERAL NAMED LP HEXADECIMAL DECIMAL BINARY ASCIIWOR # ]
-- On RP shift to state 138
-- On LP shift to state 141
-- On varbinding shift to state 145
-- On nonempty_list(varbinding) shift to state 147

State 138:
term -> LP LET LP RP . term RP [ SYMBOL STRINGLIT RP PATTERN NUMERAL NAMED LP HEXADECIMAL DECIMAL BINARY ASCIIWOR # ]
-- On SYMBOL shift to state 8
-- On STRINGLIT shift to state 55
-- On NUMERAL shift to state 56
-- On LP shift to state 93
-- On HEXADECIMAL shift to state 59
-- On DECIMAL shift to state 60
-- On BINARY shift to state 61
-- On ASCIIWOR shift to state 9
-- On term shift to state 139
-- On symbol shift to state 114
-- On qualidentifier shift to state 115
-- On identifier shift to state 116
-- On constant shift to state 117

State 139:
term -> LP LET LP RP term . RP [ SYMBOL STRINGLIT RP PATTERN NUMERAL NAMED LP HEXADECIMAL DECIMAL BINARY ASCIIWOR # ]
-- On RP shift to state 140

State 140:
term -> LP LET LP RP term RP . [ SYMBOL STRINGLIT RP PATTERN NUMERAL NAMED LP HEXADECIMAL DECIMAL BINARY ASCIIWOR # ]
-- On SYMBOL reduce production term -> LP LET LP RP term RP
-- On STRINGLIT reduce production term -> LP LET LP RP term RP
-- On RP reduce production term -> LP LET LP RP term RP
-- On PATTERN reduce production term -> LP LET LP RP term RP
-- On NUMERAL reduce production term -> LP LET LP RP term RP
-- On NAMED reduce production term -> LP LET LP RP term RP
-- On LP reduce production term -> LP LET LP RP term RP
-- On HEXADECIMAL reduce production term -> LP LET LP RP term RP
-- On DECIMAL reduce production term -> LP LET LP RP term RP
-- On BINARY reduce production term -> LP LET LP RP term RP
-- On ASCIIWOR reduce production term -> LP LET LP RP term RP

State 141:
varbinding -> LP . symbol term RP [ RP LP ]
-- On SYMBOL shift to state 8
-- On ASCIIWOR shift to state 9
-- On symbol shift to state 142

State 142:
varbinding -> LP symbol . term RP [ RP LP ]
-- On SYMBOL shift to state 8
-- On STRINGLIT shift to state 55
-- On NUMERAL shift to state 56
-- On LP shift to state 93
-- On HEXADECIMAL shift to state 59
-- On DECIMAL shift to state 60
-- On BINARY shift to state 61
-- On ASCIIWOR shift to state 9
-- On term shift to state 143
-- On symbol shift to state 114
-- On qualidentifier shift to state 115
-- On identifier shift to state 116
-- On constant shift to state 117

State 143:
varbinding -> LP symbol term . RP [ RP LP ]
-- On RP shift to state 144

State 144:
varbinding -> LP symbol term RP . [ RP LP ]
-- On RP reduce production varbinding -> LP symbol term RP
-- On LP reduce production varbinding -> LP symbol term RP

State 145:
nonempty_list(varbinding) -> varbinding . [ RP ]
nonempty_list(varbinding) -> varbinding . nonempty_list(varbinding) [ RP ]
-- On LP shift to state 141
-- On varbinding shift to state 145
-- On nonempty_list(varbinding) shift to state 146
-- On RP reduce production nonempty_list(varbinding) -> varbinding

State 146:
nonempty_list(varbinding) -> varbinding nonempty_list(varbinding) . [ RP ]
-- On RP reduce production nonempty_list(varbinding) -> varbinding nonempty_list(varbinding)

State 147:
term -> LP LET LP nonempty_list(varbinding) . RP term RP [ SYMBOL STRINGLIT RP PATTERN NUMERAL NAMED LP HEXADECIMAL DECIMAL BINARY ASCIIWOR # ]
-- On RP shift to state 148

State 148:
term -> LP LET LP nonempty_list(varbinding) RP . term RP [ SYMBOL STRINGLIT RP PATTERN NUMERAL NAMED LP HEXADECIMAL DECIMAL BINARY ASCIIWOR # ]
-- On SYMBOL shift to state 8
-- On STRINGLIT shift to state 55
-- On NUMERAL shift to state 56
-- On LP shift to state 93
-- On HEXADECIMAL shift to state 59
-- On DECIMAL shift to state 60
-- On BINARY shift to state 61
-- On ASCIIWOR shift to state 9
-- On term shift to state 149
-- On symbol shift to state 114
-- On qualidentifier shift to state 115
-- On identifier shift to state 116
-- On constant shift to state 117

State 149:
term -> LP LET LP nonempty_list(varbinding) RP term . RP [ SYMBOL STRINGLIT RP PATTERN NUMERAL NAMED LP HEXADECIMAL DECIMAL BINARY ASCIIWOR # ]
-- On RP shift to state 150

State 150:
term -> LP LET LP nonempty_list(varbinding) RP term RP . [ SYMBOL STRINGLIT RP PATTERN NUMERAL NAMED LP HEXADECIMAL DECIMAL BINARY ASCIIWOR # ]
-- On SYMBOL reduce production term -> LP LET LP nonempty_list(varbinding) RP term RP
-- On STRINGLIT reduce production term -> LP LET LP nonempty_list(varbinding) RP term RP
-- On RP reduce production term -> LP LET LP nonempty_list(varbinding) RP term RP
-- On PATTERN reduce production term -> LP LET LP nonempty_list(varbinding) RP term RP
-- On NUMERAL reduce production term -> LP LET LP nonempty_list(varbinding) RP term RP
-- On NAMED reduce production term -> LP LET LP nonempty_list(varbinding) RP term RP
-- On LP reduce production term -> LP LET LP nonempty_list(varbinding) RP term RP
-- On HEXADECIMAL reduce production term -> LP LET LP nonempty_list(varbinding) RP term RP
-- On DECIMAL reduce production term -> LP LET LP nonempty_list(varbinding) RP term RP
-- On BINARY reduce production term -> LP LET LP nonempty_list(varbinding) RP term RP
-- On ASCIIWOR reduce production term -> LP LET LP nonempty_list(varbinding) RP term RP

State 151:
term -> LP FORALL . LP nonempty_list(sorted_var) RP term RP [ SYMBOL STRINGLIT RP PATTERN NUMERAL NAMED LP HEXADECIMAL DECIMAL BINARY ASCIIWOR # ]
-- On LP shift to state 152

State 152:
term -> LP FORALL LP . nonempty_list(sorted_var) RP term RP [ SYMBOL STRINGLIT RP PATTERN NUMERAL NAMED LP HEXADECIMAL DECIMAL BINARY ASCIIWOR # ]
-- On LP shift to state 153
-- On sorted_var shift to state 157
-- On nonempty_list(sorted_var) shift to state 159

State 153:
sorted_var -> LP . symbol sort RP [ RP LP ]
-- On SYMBOL shift to state 8
-- On ASCIIWOR shift to state 9
-- On symbol shift to state 154

State 154:
sorted_var -> LP symbol . sort RP [ RP LP ]
-- On SYMBOL shift to state 8
-- On LP shift to state 127
-- On ASCIIWOR shift to state 9
-- On symbol shift to state 114
-- On sort shift to state 155
-- On identifier shift to state 131

State 155:
sorted_var -> LP symbol sort . RP [ RP LP ]
-- On RP shift to state 156

State 156:
sorted_var -> LP symbol sort RP . [ RP LP ]
-- On RP reduce production sorted_var -> LP symbol sort RP
-- On LP reduce production sorted_var -> LP symbol sort RP

State 157:
nonempty_list(sorted_var) -> sorted_var . [ RP ]
nonempty_list(sorted_var) -> sorted_var . nonempty_list(sorted_var) [ RP ]
-- On LP shift to state 153
-- On sorted_var shift to state 157
-- On nonempty_list(sorted_var) shift to state 158
-- On RP reduce production nonempty_list(sorted_var) -> sorted_var

State 158:
nonempty_list(sorted_var) -> sorted_var nonempty_list(sorted_var) . [ RP ]
-- On RP reduce production nonempty_list(sorted_var) -> sorted_var nonempty_list(sorted_var)

State 159:
term -> LP FORALL LP nonempty_list(sorted_var) . RP term RP [ SYMBOL STRINGLIT RP PATTERN NUMERAL NAMED LP HEXADECIMAL DECIMAL BINARY ASCIIWOR # ]
-- On RP shift to state 160

State 160:
term -> LP FORALL LP nonempty_list(sorted_var) RP . term RP [ SYMBOL STRINGLIT RP PATTERN NUMERAL NAMED LP HEXADECIMAL DECIMAL BINARY ASCIIWOR # ]
-- On SYMBOL shift to state 8
-- On STRINGLIT shift to state 55
-- On NUMERAL shift to state 56
-- On LP shift to state 93
-- On HEXADECIMAL shift to state 59
-- On DECIMAL shift to state 60
-- On BINARY shift to state 61
-- On ASCIIWOR shift to state 9
-- On term shift to state 161
-- On symbol shift to state 114
-- On qualidentifier shift to state 115
-- On identifier shift to state 116
-- On constant shift to state 117

State 161:
term -> LP FORALL LP nonempty_list(sorted_var) RP term . RP [ SYMBOL STRINGLIT RP PATTERN NUMERAL NAMED LP HEXADECIMAL DECIMAL BINARY ASCIIWOR # ]
-- On RP shift to state 162

State 162:
term -> LP FORALL LP nonempty_list(sorted_var) RP term RP . [ SYMBOL STRINGLIT RP PATTERN NUMERAL NAMED LP HEXADECIMAL DECIMAL BINARY ASCIIWOR # ]
-- On SYMBOL reduce production term -> LP FORALL LP nonempty_list(sorted_var) RP term RP
-- On STRINGLIT reduce production term -> LP FORALL LP nonempty_list(sorted_var) RP term RP
-- On RP reduce production term -> LP FORALL LP nonempty_list(sorted_var) RP term RP
-- On PATTERN reduce production term -> LP FORALL LP nonempty_list(sorted_var) RP term RP
-- On NUMERAL reduce production term -> LP FORALL LP nonempty_list(sorted_var) RP term RP
-- On NAMED reduce production term -> LP FORALL LP nonempty_list(sorted_var) RP term RP
-- On LP reduce production term -> LP FORALL LP nonempty_list(sorted_var) RP term RP
-- On HEXADECIMAL reduce production term -> LP FORALL LP nonempty_list(sorted_var) RP term RP
-- On DECIMAL reduce production term -> LP FORALL LP nonempty_list(sorted_var) RP term RP
-- On BINARY reduce production term -> LP FORALL LP nonempty_list(sorted_var) RP term RP
-- On ASCIIWOR reduce production term -> LP FORALL LP nonempty_list(sorted_var) RP term RP

State 163:
term -> LP EXISTS . LP nonempty_list(sorted_var) RP term RP [ SYMBOL STRINGLIT RP PATTERN NUMERAL NAMED LP HEXADECIMAL DECIMAL BINARY ASCIIWOR # ]
-- On LP shift to state 164

State 164:
term -> LP EXISTS LP . nonempty_list(sorted_var) RP term RP [ SYMBOL STRINGLIT RP PATTERN NUMERAL NAMED LP HEXADECIMAL DECIMAL BINARY ASCIIWOR # ]
-- On LP shift to state 153
-- On sorted_var shift to state 157
-- On nonempty_list(sorted_var) shift to state 165

State 165:
term -> LP EXISTS LP nonempty_list(sorted_var) . RP term RP [ SYMBOL STRINGLIT RP PATTERN NUMERAL NAMED LP HEXADECIMAL DECIMAL BINARY ASCIIWOR # ]
-- On RP shift to state 166

State 166:
term -> LP EXISTS LP nonempty_list(sorted_var) RP . term RP [ SYMBOL STRINGLIT RP PATTERN NUMERAL NAMED LP HEXADECIMAL DECIMAL BINARY ASCIIWOR # ]
-- On SYMBOL shift to state 8
-- On STRINGLIT shift to state 55
-- On NUMERAL shift to state 56
-- On LP shift to state 93
-- On HEXADECIMAL shift to state 59
-- On DECIMAL shift to state 60
-- On BINARY shift to state 61
-- On ASCIIWOR shift to state 9
-- On term shift to state 167
-- On symbol shift to state 114
-- On qualidentifier shift to state 115
-- On identifier shift to state 116
-- On constant shift to state 117

State 167:
term -> LP EXISTS LP nonempty_list(sorted_var) RP term . RP [ SYMBOL STRINGLIT RP PATTERN NUMERAL NAMED LP HEXADECIMAL DECIMAL BINARY ASCIIWOR # ]
-- On RP shift to state 168

State 168:
term -> LP EXISTS LP nonempty_list(sorted_var) RP term RP . [ SYMBOL STRINGLIT RP PATTERN NUMERAL NAMED LP HEXADECIMAL DECIMAL BINARY ASCIIWOR # ]
-- On SYMBOL reduce production term -> LP EXISTS LP nonempty_list(sorted_var) RP term RP
-- On STRINGLIT reduce production term -> LP EXISTS LP nonempty_list(sorted_var) RP term RP
-- On RP reduce production term -> LP EXISTS LP nonempty_list(sorted_var) RP term RP
-- On PATTERN reduce production term -> LP EXISTS LP nonempty_list(sorted_var) RP term RP
-- On NUMERAL reduce production term -> LP EXISTS LP nonempty_list(sorted_var) RP term RP
-- On NAMED reduce production term -> LP EXISTS LP nonempty_list(sorted_var) RP term RP
-- On LP reduce production term -> LP EXISTS LP nonempty_list(sorted_var) RP term RP
-- On HEXADECIMAL reduce production term -> LP EXISTS LP nonempty_list(sorted_var) RP term RP
-- On DECIMAL reduce production term -> LP EXISTS LP nonempty_list(sorted_var) RP term RP
-- On BINARY reduce production term -> LP EXISTS LP nonempty_list(sorted_var) RP term RP
-- On ASCIIWOR reduce production term -> LP EXISTS LP nonempty_list(sorted_var) RP term RP

State 169:
term -> LP EXCLIMATIONPT . term list(key_term) RP [ SYMBOL STRINGLIT RP PATTERN NUMERAL NAMED LP HEXADECIMAL DECIMAL BINARY ASCIIWOR # ]
-- On SYMBOL shift to state 8
-- On STRINGLIT shift to state 55
-- On NUMERAL shift to state 56
-- On LP shift to state 93
-- On HEXADECIMAL shift to state 59
-- On DECIMAL shift to state 60
-- On BINARY shift to state 61
-- On ASCIIWOR shift to state 9
-- On term shift to state 170
-- On symbol shift to state 114
-- On qualidentifier shift to state 115
-- On identifier shift to state 116
-- On constant shift to state 117

State 170:
term -> LP EXCLIMATIONPT term . list(key_term) RP [ SYMBOL STRINGLIT RP PATTERN NUMERAL NAMED LP HEXADECIMAL DECIMAL BINARY ASCIIWOR # ]
-- On PATTERN shift to state 171
-- On NAMED shift to state 177
-- On list(key_term) shift to state 179
-- On key_term shift to state 181
-- On RP reduce production list(key_term) ->

State 171:
key_term -> PATTERN . LP nonempty_list(term) RP [ RP PATTERN NAMED ]
-- On LP shift to state 172

State 172:
key_term -> PATTERN LP . nonempty_list(term) RP [ RP PATTERN NAMED ]
-- On SYMBOL shift to state 8
-- On STRINGLIT shift to state 55
-- On NUMERAL shift to state 56
-- On LP shift to state 93
-- On HEXADECIMAL shift to state 59
-- On DECIMAL shift to state 60
-- On BINARY shift to state 61
-- On ASCIIWOR shift to state 9
-- On term shift to state 173
-- On symbol shift to state 114
-- On qualidentifier shift to state 115
-- On nonempty_list(term) shift to state 175
-- On identifier shift to state 116
-- On constant shift to state 117

State 173:
nonempty_list(term) -> term . [ RP ]
nonempty_list(term) -> term . nonempty_list(term) [ RP ]
-- On SYMBOL shift to state 8
-- On STRINGLIT shift to state 55
-- On NUMERAL shift to state 56
-- On LP shift to state 93
-- On HEXADECIMAL shift to state 59
-- On DECIMAL shift to state 60
-- On BINARY shift to state 61
-- On ASCIIWOR shift to state 9
-- On term shift to state 173
-- On symbol shift to state 114
-- On qualidentifier shift to state 115
-- On nonempty_list(term) shift to state 174
-- On identifier shift to state 116
-- On constant shift to state 117
-- On RP reduce production nonempty_list(term) -> term

State 174:
nonempty_list(term) -> term nonempty_list(term) . [ RP ]
-- On RP reduce production nonempty_list(term) -> term nonempty_list(term)

State 175:
key_term -> PATTERN LP nonempty_list(term) . RP [ RP PATTERN NAMED ]
-- On RP shift to state 176

State 176:
key_term -> PATTERN LP nonempty_list(term) RP . [ RP PATTERN NAMED ]
-- On RP reduce production key_term -> PATTERN LP nonempty_list(term) RP
-- On PATTERN reduce production key_term -> PATTERN LP nonempty_list(term) RP
-- On NAMED reduce production key_term -> PATTERN LP nonempty_list(term) RP

State 177:
key_term -> NAMED . symbol [ RP PATTERN NAMED ]
-- On SYMBOL shift to state 8
-- On ASCIIWOR shift to state 9
-- On symbol shift to state 178

State 178:
key_term -> NAMED symbol . [ RP PATTERN NAMED ]
-- On RP reduce production key_term -> NAMED symbol
-- On PATTERN reduce production key_term -> NAMED symbol
-- On NAMED reduce production key_term -> NAMED symbol

State 179:
term -> LP EXCLIMATIONPT term list(key_term) . RP [ SYMBOL STRINGLIT RP PATTERN NUMERAL NAMED LP HEXADECIMAL DECIMAL BINARY ASCIIWOR # ]
-- On RP shift to state 180

State 180:
term -> LP EXCLIMATIONPT term list(key_term) RP . [ SYMBOL STRINGLIT RP PATTERN NUMERAL NAMED LP HEXADECIMAL DECIMAL BINARY ASCIIWOR # ]
-- On SYMBOL reduce production term -> LP EXCLIMATIONPT term list(key_term) RP
-- On STRINGLIT reduce production term -> LP EXCLIMATIONPT term list(key_term) RP
-- On RP reduce production term -> LP EXCLIMATIONPT term list(key_term) RP
-- On PATTERN reduce production term -> LP EXCLIMATIONPT term list(key_term) RP
-- On NUMERAL reduce production term -> LP EXCLIMATIONPT term list(key_term) RP
-- On NAMED reduce production term -> LP EXCLIMATIONPT term list(key_term) RP
-- On LP reduce production term -> LP EXCLIMATIONPT term list(key_term) RP
-- On HEXADECIMAL reduce production term -> LP EXCLIMATIONPT term list(key_term) RP
-- On DECIMAL reduce production term -> LP EXCLIMATIONPT term list(key_term) RP
-- On BINARY reduce production term -> LP EXCLIMATIONPT term list(key_term) RP
-- On ASCIIWOR reduce production term -> LP EXCLIMATIONPT term list(key_term) RP

State 181:
list(key_term) -> key_term . list(key_term) [ RP ]
-- On PATTERN shift to state 171
-- On NAMED shift to state 177
-- On list(key_term) shift to state 182
-- On key_term shift to state 181
-- On RP reduce production list(key_term) ->

State 182:
list(key_term) -> key_term list(key_term) . [ RP ]
-- On RP reduce production list(key_term) -> key_term list(key_term)

State 183:
term -> LP qualidentifier . nonempty_list(term) RP [ SYMBOL STRINGLIT RP PATTERN NUMERAL NAMED LP HEXADECIMAL DECIMAL BINARY ASCIIWOR # ]
-- On SYMBOL shift to state 8
-- On STRINGLIT shift to state 55
-- On NUMERAL shift to state 56
-- On LP shift to state 93
-- On HEXADECIMAL shift to state 59
-- On DECIMAL shift to state 60
-- On BINARY shift to state 61
-- On ASCIIWOR shift to state 9
-- On term shift to state 173
-- On symbol shift to state 114
-- On qualidentifier shift to state 115
-- On nonempty_list(term) shift to state 184
-- On identifier shift to state 116
-- On constant shift to state 117

State 184:
term -> LP qualidentifier nonempty_list(term) . RP [ SYMBOL STRINGLIT RP PATTERN NUMERAL NAMED LP HEXADECIMAL DECIMAL BINARY ASCIIWOR # ]
-- On RP shift to state 185

State 185:
term -> LP qualidentifier nonempty_list(term) RP . [ SYMBOL STRINGLIT RP PATTERN NUMERAL NAMED LP HEXADECIMAL DECIMAL BINARY ASCIIWOR # ]
-- On SYMBOL reduce production term -> LP qualidentifier nonempty_list(term) RP
-- On STRINGLIT reduce production term -> LP qualidentifier nonempty_list(term) RP
-- On RP reduce production term -> LP qualidentifier nonempty_list(term) RP
-- On PATTERN reduce production term -> LP qualidentifier nonempty_list(term) RP
-- On NUMERAL reduce production term -> LP qualidentifier nonempty_list(term) RP
-- On NAMED reduce production term -> LP qualidentifier nonempty_list(term) RP
-- On LP reduce production term -> LP qualidentifier nonempty_list(term) RP
-- On HEXADECIMAL reduce production term -> LP qualidentifier nonempty_list(term) RP
-- On DECIMAL reduce production term -> LP qualidentifier nonempty_list(term) RP
-- On BINARY reduce production term -> LP qualidentifier nonempty_list(term) RP
-- On ASCIIWOR reduce production term -> LP qualidentifier nonempty_list(term) RP

State 186:
command -> LP GETVALUE LP nonempty_list(term) . RP RP [ LP EOF ]
-- On RP shift to state 187

State 187:
command -> LP GETVALUE LP nonempty_list(term) RP . RP [ LP EOF ]
-- On RP shift to state 188

State 188:
command -> LP GETVALUE LP nonempty_list(term) RP RP . [ LP EOF ]
-- On LP reduce production command -> LP GETVALUE LP nonempty_list(term) RP RP
-- On EOF reduce production command -> LP GETVALUE LP nonempty_list(term) RP RP

State 189:
command -> LP GETUNSATCORE . RP [ LP EOF ]
-- On RP shift to state 190

State 190:
command -> LP GETUNSATCORE RP . [ LP EOF ]
-- On LP reduce production command -> LP GETUNSATCORE RP
-- On EOF reduce production command -> LP GETUNSATCORE RP

State 191:
command -> LP GETUNSATASSUMPTIONS . RP [ LP EOF ]
-- On RP shift to state 192

State 192:
command -> LP GETUNSATASSUMPTIONS RP . [ LP EOF ]
-- On LP reduce production command -> LP GETUNSATASSUMPTIONS RP
-- On EOF reduce production command -> LP GETUNSATASSUMPTIONS RP

State 193:
command -> LP GETPROOF . RP [ LP EOF ]
-- On RP shift to state 194

State 194:
command -> LP GETPROOF RP . [ LP EOF ]
-- On LP reduce production command -> LP GETPROOF RP
-- On EOF reduce production command -> LP GETPROOF RP

State 195:
command -> LP GETOPTION . keyword RP [ LP EOF ]
-- On VALUES shift to state 5
-- On THEORIES shift to state 6
-- On STATUTS shift to state 7
-- On SOURCE shift to state 11
-- On SORTSDESCRIPTION shift to state 12
-- On SORTS shift to state 13
-- On SMTLIBVERSION shift to state 14
-- On NOTES shift to state 27
-- On LICENSE shift to state 29
-- On LANGUAGE shift to state 30
-- On FUNSDESCRIPT shift to state 34
-- On FUNS shift to state 35
-- On EXTENSIONS shift to state 36
-- On DEFINITIO shift to state 40
-- On CATEGORY shift to state 41
-- On AXIOMS shift to state 42
-- On keyword shift to state 196

State 196:
command -> LP GETOPTION keyword . RP [ LP EOF ]
-- On RP shift to state 197

State 197:
command -> LP GETOPTION keyword RP . [ LP EOF ]
-- On LP reduce production command -> LP GETOPTION keyword RP
-- On EOF reduce production command -> LP GETOPTION keyword RP

State 198:
command -> LP GETMODEL . RP [ LP EOF ]
-- On RP shift to state 199

State 199:
command -> LP GETMODEL RP . [ LP EOF ]
-- On LP reduce production command -> LP GETMODEL RP
-- On EOF reduce production command -> LP GETMODEL RP

State 200:
command -> LP GETINFO . key_info RP [ LP EOF ]
-- On VERSION shift to state 3
-- On VALUES shift to state 5
-- On THEORIES shift to state 6
-- On STATUTS shift to state 7
-- On SOURCE shift to state 11
-- On SORTSDESCRIPTION shift to state 12
-- On SORTS shift to state 13
-- On SMTLIBVERSION shift to state 14
-- On SERIES shift to state 15
-- On REASONUNKNOWN shift to state 18
-- On NOTES shift to state 27
-- On NAME shift to state 28
-- On LICENSE shift to state 29
-- On LANGUAGE shift to state 30
-- On INSTANCE shift to state 32
-- On FUNSDESCRIPT shift to state 34
-- On FUNS shift to state 35
-- On EXTENSIONS shift to state 36
-- On ERRORBEHAV shift to state 37
-- On DIFFICULTY shift to state 38
-- On DEFINITIO shift to state 40
-- On CATEGORY shift to state 41
-- On AXIOMS shift to state 42
-- On AUTHORS shift to state 43
-- On AUTHOR shift to state 44
-- On ASSERTIONSTACKLVL shift to state 45
-- On ALLSTATS shift to state 46
-- On keyword shift to state 49
-- On key_info shift to state 201

State 201:
command -> LP GETINFO key_info . RP [ LP EOF ]
-- On RP shift to state 202

State 202:
command -> LP GETINFO key_info RP . [ LP EOF ]
-- On LP reduce production command -> LP GETINFO key_info RP
-- On EOF reduce production command -> LP GETINFO key_info RP

State 203:
command -> LP GETASSIGN . RP [ LP EOF ]
-- On RP shift to state 204

State 204:
command -> LP GETASSIGN RP . [ LP EOF ]
-- On LP reduce production command -> LP GETASSIGN RP
-- On EOF reduce production command -> LP GETASSIGN RP

State 205:
command -> LP GETASSERT . RP [ LP EOF ]
-- On RP shift to state 206

State 206:
command -> LP GETASSERT RP . [ LP EOF ]
-- On LP reduce production command -> LP GETASSERT RP
-- On EOF reduce production command -> LP GETASSERT RP

State 207:
command -> LP EXIT . RP [ LP EOF ]
-- On RP shift to state 208

State 208:
command -> LP EXIT RP . [ LP EOF ]
-- On LP reduce production command -> LP EXIT RP
-- On EOF reduce production command -> LP EXIT RP

State 209:
command -> LP ECHO . symbol RP [ LP EOF ]
-- On SYMBOL shift to state 8
-- On ASCIIWOR shift to state 9
-- On symbol shift to state 210

State 210:
command -> LP ECHO symbol . RP [ LP EOF ]
-- On RP shift to state 211

State 211:
command -> LP ECHO symbol RP . [ LP EOF ]
-- On LP reduce production command -> LP ECHO symbol RP
-- On EOF reduce production command -> LP ECHO symbol RP

State 212:
command -> LP DEFINESORT . symbol LP list(symbol) RP sort RP [ LP EOF ]
-- On SYMBOL shift to state 8
-- On ASCIIWOR shift to state 9
-- On symbol shift to state 213

State 213:
command -> LP DEFINESORT symbol . LP list(symbol) RP sort RP [ LP EOF ]
-- On LP shift to state 214

State 214:
command -> LP DEFINESORT symbol LP . list(symbol) RP sort RP [ LP EOF ]
-- On SYMBOL shift to state 8
-- On ASCIIWOR shift to state 9
-- On symbol shift to state 215
-- On list(symbol) shift to state 217
-- On RP reduce production list(symbol) ->

State 215:
list(symbol) -> symbol . list(symbol) [ RP ]
-- On SYMBOL shift to state 8
-- On ASCIIWOR shift to state 9
-- On symbol shift to state 215
-- On list(symbol) shift to state 216
-- On RP reduce production list(symbol) ->

State 216:
list(symbol) -> symbol list(symbol) . [ RP ]
-- On RP reduce production list(symbol) -> symbol list(symbol)

State 217:
command -> LP DEFINESORT symbol LP list(symbol) . RP sort RP [ LP EOF ]
-- On RP shift to state 218

State 218:
command -> LP DEFINESORT symbol LP list(symbol) RP . sort RP [ LP EOF ]
-- On SYMBOL shift to state 8
-- On LP shift to state 127
-- On ASCIIWOR shift to state 9
-- On symbol shift to state 114
-- On sort shift to state 219
-- On identifier shift to state 131

State 219:
command -> LP DEFINESORT symbol LP list(symbol) RP sort . RP [ LP EOF ]
-- On RP shift to state 220

State 220:
command -> LP DEFINESORT symbol LP list(symbol) RP sort RP . [ LP EOF ]
-- On LP reduce production command -> LP DEFINESORT symbol LP list(symbol) RP sort RP
-- On EOF reduce production command -> LP DEFINESORT symbol LP list(symbol) RP sort RP

State 221:
command -> LP DEFINEFUNSREC . LP list(fun_defs) RP LP nonempty_list(term) RP RP [ LP EOF ]
-- On LP shift to state 222

State 222:
command -> LP DEFINEFUNSREC LP . list(fun_defs) RP LP nonempty_list(term) RP RP [ LP EOF ]
-- On LP shift to state 223
-- On list(fun_defs) shift to state 242
-- On fun_defs shift to state 248
-- On RP reduce production list(fun_defs) ->

State 223:
fun_defs -> LP . fun_def RP [ RP LP ]
-- On SYMBOL shift to state 8
-- On ASCIIWOR shift to state 9
-- On symbol shift to state 224
-- On fun_def shift to state 240

State 224:
fun_def -> symbol . LP list(sorted_var) RP sort [ SYMBOL STRINGLIT RP NUMERAL LP HEXADECIMAL DECIMAL BINARY ASCIIWOR ]
fun_def -> symbol . LP PAR LP nonempty_list(symbol) RP LP list(sorted_var) RP sort RP [ SYMBOL STRINGLIT RP NUMERAL LP HEXADECIMAL DECIMAL BINARY ASCIIWOR ]
-- On LP shift to state 225

State 225:
fun_def -> symbol LP . list(sorted_var) RP sort [ SYMBOL STRINGLIT RP NUMERAL LP HEXADECIMAL DECIMAL BINARY ASCIIWOR ]
fun_def -> symbol LP . PAR LP nonempty_list(symbol) RP LP list(sorted_var) RP sort RP [ SYMBOL STRINGLIT RP NUMERAL LP HEXADECIMAL DECIMAL BINARY ASCIIWOR ]
-- On PAR shift to state 226
-- On LP shift to state 153
-- On sorted_var shift to state 231
-- On list(sorted_var) shift to state 237
-- On RP reduce production list(sorted_var) ->

State 226:
fun_def -> symbol LP PAR . LP nonempty_list(symbol) RP LP list(sorted_var) RP sort RP [ SYMBOL STRINGLIT RP NUMERAL LP HEXADECIMAL DECIMAL BINARY ASCIIWOR ]
-- On LP shift to state 227

State 227:
fun_def -> symbol LP PAR LP . nonempty_list(symbol) RP LP list(sorted_var) RP sort RP [ SYMBOL STRINGLIT RP NUMERAL LP HEXADECIMAL DECIMAL BINARY ASCIIWOR ]
-- On SYMBOL shift to state 8
-- On ASCIIWOR shift to state 9
-- On symbol shift to state 106
-- On nonempty_list(symbol) shift to state 228

State 228:
fun_def -> symbol LP PAR LP nonempty_list(symbol) . RP LP list(sorted_var) RP sort RP [ SYMBOL STRINGLIT RP NUMERAL LP HEXADECIMAL DECIMAL BINARY ASCIIWOR ]
-- On RP shift to state 229

State 229:
fun_def -> symbol LP PAR LP nonempty_list(symbol) RP . LP list(sorted_var) RP sort RP [ SYMBOL STRINGLIT RP NUMERAL LP HEXADECIMAL DECIMAL BINARY ASCIIWOR ]
-- On LP shift to state 230

State 230:
fun_def -> symbol LP PAR LP nonempty_list(symbol) RP LP . list(sorted_var) RP sort RP [ SYMBOL STRINGLIT RP NUMERAL LP HEXADECIMAL DECIMAL BINARY ASCIIWOR ]
-- On LP shift to state 153
-- On sorted_var shift to state 231
-- On list(sorted_var) shift to state 233
-- On RP reduce production list(sorted_var) ->

State 231:
list(sorted_var) -> sorted_var . list(sorted_var) [ RP ]
-- On LP shift to state 153
-- On sorted_var shift to state 231
-- On list(sorted_var) shift to state 232
-- On RP reduce production list(sorted_var) ->

State 232:
list(sorted_var) -> sorted_var list(sorted_var) . [ RP ]
-- On RP reduce production list(sorted_var) -> sorted_var list(sorted_var)

State 233:
fun_def -> symbol LP PAR LP nonempty_list(symbol) RP LP list(sorted_var) . RP sort RP [ SYMBOL STRINGLIT RP NUMERAL LP HEXADECIMAL DECIMAL BINARY ASCIIWOR ]
-- On RP shift to state 234

State 234:
fun_def -> symbol LP PAR LP nonempty_list(symbol) RP LP list(sorted_var) RP . sort RP [ SYMBOL STRINGLIT RP NUMERAL LP HEXADECIMAL DECIMAL BINARY ASCIIWOR ]
-- On SYMBOL shift to state 8
-- On LP shift to state 127
-- On ASCIIWOR shift to state 9
-- On symbol shift to state 114
-- On sort shift to state 235
-- On identifier shift to state 131

State 235:
fun_def -> symbol LP PAR LP nonempty_list(symbol) RP LP list(sorted_var) RP sort . RP [ SYMBOL STRINGLIT RP NUMERAL LP HEXADECIMAL DECIMAL BINARY ASCIIWOR ]
-- On RP shift to state 236

State 236:
fun_def -> symbol LP PAR LP nonempty_list(symbol) RP LP list(sorted_var) RP sort RP . [ SYMBOL STRINGLIT RP NUMERAL LP HEXADECIMAL DECIMAL BINARY ASCIIWOR ]
-- On SYMBOL reduce production fun_def -> symbol LP PAR LP nonempty_list(symbol) RP LP list(sorted_var) RP sort RP
-- On STRINGLIT reduce production fun_def -> symbol LP PAR LP nonempty_list(symbol) RP LP list(sorted_var) RP sort RP
-- On RP reduce production fun_def -> symbol LP PAR LP nonempty_list(symbol) RP LP list(sorted_var) RP sort RP
-- On NUMERAL reduce production fun_def -> symbol LP PAR LP nonempty_list(symbol) RP LP list(sorted_var) RP sort RP
-- On LP reduce production fun_def -> symbol LP PAR LP nonempty_list(symbol) RP LP list(sorted_var) RP sort RP
-- On HEXADECIMAL reduce production fun_def -> symbol LP PAR LP nonempty_list(symbol) RP LP list(sorted_var) RP sort RP
-- On DECIMAL reduce production fun_def -> symbol LP PAR LP nonempty_list(symbol) RP LP list(sorted_var) RP sort RP
-- On BINARY reduce production fun_def -> symbol LP PAR LP nonempty_list(symbol) RP LP list(sorted_var) RP sort RP
-- On ASCIIWOR reduce production fun_def -> symbol LP PAR LP nonempty_list(symbol) RP LP list(sorted_var) RP sort RP

State 237:
fun_def -> symbol LP list(sorted_var) . RP sort [ SYMBOL STRINGLIT RP NUMERAL LP HEXADECIMAL DECIMAL BINARY ASCIIWOR ]
-- On RP shift to state 238

State 238:
fun_def -> symbol LP list(sorted_var) RP . sort [ SYMBOL STRINGLIT RP NUMERAL LP HEXADECIMAL DECIMAL BINARY ASCIIWOR ]
-- On SYMBOL shift to state 8
-- On LP shift to state 127
-- On ASCIIWOR shift to state 9
-- On symbol shift to state 114
-- On sort shift to state 239
-- On identifier shift to state 131

State 239:
fun_def -> symbol LP list(sorted_var) RP sort . [ SYMBOL STRINGLIT RP NUMERAL LP HEXADECIMAL DECIMAL BINARY ASCIIWOR ]
-- On SYMBOL reduce production fun_def -> symbol LP list(sorted_var) RP sort
-- On STRINGLIT reduce production fun_def -> symbol LP list(sorted_var) RP sort
-- On RP reduce production fun_def -> symbol LP list(sorted_var) RP sort
-- On NUMERAL reduce production fun_def -> symbol LP list(sorted_var) RP sort
-- On LP reduce production fun_def -> symbol LP list(sorted_var) RP sort
-- On HEXADECIMAL reduce production fun_def -> symbol LP list(sorted_var) RP sort
-- On DECIMAL reduce production fun_def -> symbol LP list(sorted_var) RP sort
-- On BINARY reduce production fun_def -> symbol LP list(sorted_var) RP sort
-- On ASCIIWOR reduce production fun_def -> symbol LP list(sorted_var) RP sort

State 240:
fun_defs -> LP fun_def . RP [ RP LP ]
-- On RP shift to state 241

State 241:
fun_defs -> LP fun_def RP . [ RP LP ]
-- On RP reduce production fun_defs -> LP fun_def RP
-- On LP reduce production fun_defs -> LP fun_def RP

State 242:
command -> LP DEFINEFUNSREC LP list(fun_defs) . RP LP nonempty_list(term) RP RP [ LP EOF ]
-- On RP shift to state 243

State 243:
command -> LP DEFINEFUNSREC LP list(fun_defs) RP . LP nonempty_list(term) RP RP [ LP EOF ]
-- On LP shift to state 244

State 244:
command -> LP DEFINEFUNSREC LP list(fun_defs) RP LP . nonempty_list(term) RP RP [ LP EOF ]
-- On SYMBOL shift to state 8
-- On STRINGLIT shift to state 55
-- On NUMERAL shift to state 56
-- On LP shift to state 93
-- On HEXADECIMAL shift to state 59
-- On DECIMAL shift to state 60
-- On BINARY shift to state 61
-- On ASCIIWOR shift to state 9
-- On term shift to state 173
-- On symbol shift to state 114
-- On qualidentifier shift to state 115
-- On nonempty_list(term) shift to state 245
-- On identifier shift to state 116
-- On constant shift to state 117

State 245:
command -> LP DEFINEFUNSREC LP list(fun_defs) RP LP nonempty_list(term) . RP RP [ LP EOF ]
-- On RP shift to state 246

State 246:
command -> LP DEFINEFUNSREC LP list(fun_defs) RP LP nonempty_list(term) RP . RP [ LP EOF ]
-- On RP shift to state 247

State 247:
command -> LP DEFINEFUNSREC LP list(fun_defs) RP LP nonempty_list(term) RP RP . [ LP EOF ]
-- On LP reduce production command -> LP DEFINEFUNSREC LP list(fun_defs) RP LP nonempty_list(term) RP RP
-- On EOF reduce production command -> LP DEFINEFUNSREC LP list(fun_defs) RP LP nonempty_list(term) RP RP

State 248:
list(fun_defs) -> fun_defs . list(fun_defs) [ RP ]
-- On LP shift to state 223
-- On list(fun_defs) shift to state 249
-- On fun_defs shift to state 248
-- On RP reduce production list(fun_defs) ->

State 249:
list(fun_defs) -> fun_defs list(fun_defs) . [ RP ]
-- On RP reduce production list(fun_defs) -> fun_defs list(fun_defs)

State 250:
command -> LP DEFINEFUNREC . fun_def term RP [ LP EOF ]
-- On SYMBOL shift to state 8
-- On ASCIIWOR shift to state 9
-- On symbol shift to state 224
-- On fun_def shift to state 251

State 251:
command -> LP DEFINEFUNREC fun_def . term RP [ LP EOF ]
-- On SYMBOL shift to state 8
-- On STRINGLIT shift to state 55
-- On NUMERAL shift to state 56
-- On LP shift to state 93
-- On HEXADECIMAL shift to state 59
-- On DECIMAL shift to state 60
-- On BINARY shift to state 61
-- On ASCIIWOR shift to state 9
-- On term shift to state 252
-- On symbol shift to state 114
-- On qualidentifier shift to state 115
-- On identifier shift to state 116
-- On constant shift to state 117

State 252:
command -> LP DEFINEFUNREC fun_def term . RP [ LP EOF ]
-- On RP shift to state 253

State 253:
command -> LP DEFINEFUNREC fun_def term RP . [ LP EOF ]
-- On LP reduce production command -> LP DEFINEFUNREC fun_def term RP
-- On EOF reduce production command -> LP DEFINEFUNREC fun_def term RP

State 254:
command -> LP DEFINEFUN . fun_def term RP [ LP EOF ]
-- On SYMBOL shift to state 8
-- On ASCIIWOR shift to state 9
-- On symbol shift to state 224
-- On fun_def shift to state 255

State 255:
command -> LP DEFINEFUN fun_def . term RP [ LP EOF ]
-- On SYMBOL shift to state 8
-- On STRINGLIT shift to state 55
-- On NUMERAL shift to state 56
-- On LP shift to state 93
-- On HEXADECIMAL shift to state 59
-- On DECIMAL shift to state 60
-- On BINARY shift to state 61
-- On ASCIIWOR shift to state 9
-- On term shift to state 256
-- On symbol shift to state 114
-- On qualidentifier shift to state 115
-- On identifier shift to state 116
-- On constant shift to state 117

State 256:
command -> LP DEFINEFUN fun_def term . RP [ LP EOF ]
-- On RP shift to state 257

State 257:
command -> LP DEFINEFUN fun_def term RP . [ LP EOF ]
-- On LP reduce production command -> LP DEFINEFUN fun_def term RP
-- On EOF reduce production command -> LP DEFINEFUN fun_def term RP

State 258:
command -> LP DECLARESORT . symbol NUMERAL RP [ LP EOF ]
-- On SYMBOL shift to state 8
-- On ASCIIWOR shift to state 9
-- On symbol shift to state 259

State 259:
command -> LP DECLARESORT symbol . NUMERAL RP [ LP EOF ]
-- On NUMERAL shift to state 260

State 260:
command -> LP DECLARESORT symbol NUMERAL . RP [ LP EOF ]
-- On RP shift to state 261

State 261:
command -> LP DECLARESORT symbol NUMERAL RP . [ LP EOF ]
-- On LP reduce production command -> LP DECLARESORT symbol NUMERAL RP
-- On EOF reduce production command -> LP DECLARESORT symbol NUMERAL RP

State 262:
command -> LP DECLAREFUN . symbol fun_dec RP [ LP EOF ]
-- On SYMBOL shift to state 8
-- On ASCIIWOR shift to state 9
-- On symbol shift to state 263

State 263:
command -> LP DECLAREFUN symbol . fun_dec RP [ LP EOF ]
-- On LP shift to state 264
-- On fun_dec shift to state 279

State 264:
fun_dec -> LP . list(sort) RP sort [ RP ]
fun_dec -> LP . PAR LP nonempty_list(symbol) RP LP list(sort) RP sort RP [ RP ]
-- On SYMBOL shift to state 8
-- On PAR shift to state 265
-- On LP shift to state 127
-- On ASCIIWOR shift to state 9
-- On symbol shift to state 114
-- On sort shift to state 270
-- On list(sort) shift to state 276
-- On identifier shift to state 131
-- On RP reduce production list(sort) ->

State 265:
fun_dec -> LP PAR . LP nonempty_list(symbol) RP LP list(sort) RP sort RP [ RP ]
-- On LP shift to state 266

State 266:
fun_dec -> LP PAR LP . nonempty_list(symbol) RP LP list(sort) RP sort RP [ RP ]
-- On SYMBOL shift to state 8
-- On ASCIIWOR shift to state 9
-- On symbol shift to state 106
-- On nonempty_list(symbol) shift to state 267

State 267:
fun_dec -> LP PAR LP nonempty_list(symbol) . RP LP list(sort) RP sort RP [ RP ]
-- On RP shift to state 268

State 268:
fun_dec -> LP PAR LP nonempty_list(symbol) RP . LP list(sort) RP sort RP [ RP ]
-- On LP shift to state 269

State 269:
fun_dec -> LP PAR LP nonempty_list(symbol) RP LP . list(sort) RP sort RP [ RP ]
-- On SYMBOL shift to state 8
-- On LP shift to state 127
-- On ASCIIWOR shift to state 9
-- On symbol shift to state 114
-- On sort shift to state 270
-- On list(sort) shift to state 272
-- On identifier shift to state 131
-- On RP reduce production list(sort) ->

State 270:
list(sort) -> sort . list(sort) [ RP ]
-- On SYMBOL shift to state 8
-- On LP shift to state 127
-- On ASCIIWOR shift to state 9
-- On symbol shift to state 114
-- On sort shift to state 270
-- On list(sort) shift to state 271
-- On identifier shift to state 131
-- On RP reduce production list(sort) ->

State 271:
list(sort) -> sort list(sort) . [ RP ]
-- On RP reduce production list(sort) -> sort list(sort)

State 272:
fun_dec -> LP PAR LP nonempty_list(symbol) RP LP list(sort) . RP sort RP [ RP ]
-- On RP shift to state 273

State 273:
fun_dec -> LP PAR LP nonempty_list(symbol) RP LP list(sort) RP . sort RP [ RP ]
-- On SYMBOL shift to state 8
-- On LP shift to state 127
-- On ASCIIWOR shift to state 9
-- On symbol shift to state 114
-- On sort shift to state 274
-- On identifier shift to state 131

State 274:
fun_dec -> LP PAR LP nonempty_list(symbol) RP LP list(sort) RP sort . RP [ RP ]
-- On RP shift to state 275

State 275:
fun_dec -> LP PAR LP nonempty_list(symbol) RP LP list(sort) RP sort RP . [ RP ]
-- On RP reduce production fun_dec -> LP PAR LP nonempty_list(symbol) RP LP list(sort) RP sort RP

State 276:
fun_dec -> LP list(sort) . RP sort [ RP ]
-- On RP shift to state 277

State 277:
fun_dec -> LP list(sort) RP . sort [ RP ]
-- On SYMBOL shift to state 8
-- On LP shift to state 127
-- On ASCIIWOR shift to state 9
-- On symbol shift to state 114
-- On sort shift to state 278
-- On identifier shift to state 131

State 278:
fun_dec -> LP list(sort) RP sort . [ RP ]
-- On RP reduce production fun_dec -> LP list(sort) RP sort

State 279:
command -> LP DECLAREFUN symbol fun_dec . RP [ LP EOF ]
-- On RP shift to state 280

State 280:
command -> LP DECLAREFUN symbol fun_dec RP . [ LP EOF ]
-- On LP reduce production command -> LP DECLAREFUN symbol fun_dec RP
-- On EOF reduce production command -> LP DECLAREFUN symbol fun_dec RP

State 281:
command -> LP DECLAREDATATYPES . LP nonempty_list(sort_dec) RP LP nonempty_list(datatype_dec) RP RP [ LP EOF ]
-- On LP shift to state 282

State 282:
command -> LP DECLAREDATATYPES LP . nonempty_list(sort_dec) RP LP nonempty_list(datatype_dec) RP RP [ LP EOF ]
-- On LP shift to state 283
-- On sort_dec shift to state 287
-- On nonempty_list(sort_dec) shift to state 289

State 283:
sort_dec -> LP . symbol NUMERAL RP [ RP LP ]
-- On SYMBOL shift to state 8
-- On ASCIIWOR shift to state 9
-- On symbol shift to state 284

State 284:
sort_dec -> LP symbol . NUMERAL RP [ RP LP ]
-- On NUMERAL shift to state 285

State 285:
sort_dec -> LP symbol NUMERAL . RP [ RP LP ]
-- On RP shift to state 286

State 286:
sort_dec -> LP symbol NUMERAL RP . [ RP LP ]
-- On RP reduce production sort_dec -> LP symbol NUMERAL RP
-- On LP reduce production sort_dec -> LP symbol NUMERAL RP

State 287:
nonempty_list(sort_dec) -> sort_dec . [ RP ]
nonempty_list(sort_dec) -> sort_dec . nonempty_list(sort_dec) [ RP ]
-- On LP shift to state 283
-- On sort_dec shift to state 287
-- On nonempty_list(sort_dec) shift to state 288
-- On RP reduce production nonempty_list(sort_dec) -> sort_dec

State 288:
nonempty_list(sort_dec) -> sort_dec nonempty_list(sort_dec) . [ RP ]
-- On RP reduce production nonempty_list(sort_dec) -> sort_dec nonempty_list(sort_dec)

State 289:
command -> LP DECLAREDATATYPES LP nonempty_list(sort_dec) . RP LP nonempty_list(datatype_dec) RP RP [ LP EOF ]
-- On RP shift to state 290

State 290:
command -> LP DECLAREDATATYPES LP nonempty_list(sort_dec) RP . LP nonempty_list(datatype_dec) RP RP [ LP EOF ]
-- On LP shift to state 291

State 291:
command -> LP DECLAREDATATYPES LP nonempty_list(sort_dec) RP LP . nonempty_list(datatype_dec) RP RP [ LP EOF ]
-- On LP shift to state 292
-- On nonempty_list(datatype_dec) shift to state 315
-- On datatype_dec shift to state 318

State 292:
datatype_dec -> LP . nonempty_list(constructor_dec) RP [ RP LP ]
datatype_dec -> LP . PAR LP nonempty_list(symbol) RP LP nonempty_list(constructor_dec) RP RP [ RP LP ]
-- On PAR shift to state 293
-- On LP shift to state 298
-- On nonempty_list(constructor_dec) shift to state 313
-- On constructor_dec shift to state 311

State 293:
datatype_dec -> LP PAR . LP nonempty_list(symbol) RP LP nonempty_list(constructor_dec) RP RP [ RP LP ]
-- On LP shift to state 294

State 294:
datatype_dec -> LP PAR LP . nonempty_list(symbol) RP LP nonempty_list(constructor_dec) RP RP [ RP LP ]
-- On SYMBOL shift to state 8
-- On ASCIIWOR shift to state 9
-- On symbol shift to state 106
-- On nonempty_list(symbol) shift to state 295

State 295:
datatype_dec -> LP PAR LP nonempty_list(symbol) . RP LP nonempty_list(constructor_dec) RP RP [ RP LP ]
-- On RP shift to state 296

State 296:
datatype_dec -> LP PAR LP nonempty_list(symbol) RP . LP nonempty_list(constructor_dec) RP RP [ RP LP ]
-- On LP shift to state 297

State 297:
datatype_dec -> LP PAR LP nonempty_list(symbol) RP LP . nonempty_list(constructor_dec) RP RP [ RP LP ]
-- On LP shift to state 298
-- On nonempty_list(constructor_dec) shift to state 308
-- On constructor_dec shift to state 311

State 298:
constructor_dec -> LP . symbol list(selector_dec) RP [ RP LP ]
-- On SYMBOL shift to state 8
-- On ASCIIWOR shift to state 9
-- On symbol shift to state 299

State 299:
constructor_dec -> LP symbol . list(selector_dec) RP [ RP LP ]
-- On LP shift to state 300
-- On selector_dec shift to state 304
-- On list(selector_dec) shift to state 306
-- On RP reduce production list(selector_dec) ->

State 300:
selector_dec -> LP . symbol sort RP [ RP LP ]
-- On SYMBOL shift to state 8
-- On ASCIIWOR shift to state 9
-- On symbol shift to state 301

State 301:
selector_dec -> LP symbol . sort RP [ RP LP ]
-- On SYMBOL shift to state 8
-- On LP shift to state 127
-- On ASCIIWOR shift to state 9
-- On symbol shift to state 114
-- On sort shift to state 302
-- On identifier shift to state 131

State 302:
selector_dec -> LP symbol sort . RP [ RP LP ]
-- On RP shift to state 303

State 303:
selector_dec -> LP symbol sort RP . [ RP LP ]
-- On RP reduce production selector_dec -> LP symbol sort RP
-- On LP reduce production selector_dec -> LP symbol sort RP

State 304:
list(selector_dec) -> selector_dec . list(selector_dec) [ RP ]
-- On LP shift to state 300
-- On selector_dec shift to state 304
-- On list(selector_dec) shift to state 305
-- On RP reduce production list(selector_dec) ->

State 305:
list(selector_dec) -> selector_dec list(selector_dec) . [ RP ]
-- On RP reduce production list(selector_dec) -> selector_dec list(selector_dec)

State 306:
constructor_dec -> LP symbol list(selector_dec) . RP [ RP LP ]
-- On RP shift to state 307

State 307:
constructor_dec -> LP symbol list(selector_dec) RP . [ RP LP ]
-- On RP reduce production constructor_dec -> LP symbol list(selector_dec) RP
-- On LP reduce production constructor_dec -> LP symbol list(selector_dec) RP

State 308:
datatype_dec -> LP PAR LP nonempty_list(symbol) RP LP nonempty_list(constructor_dec) . RP RP [ RP LP ]
-- On RP shift to state 309

State 309:
datatype_dec -> LP PAR LP nonempty_list(symbol) RP LP nonempty_list(constructor_dec) RP . RP [ RP LP ]
-- On RP shift to state 310

State 310:
datatype_dec -> LP PAR LP nonempty_list(symbol) RP LP nonempty_list(constructor_dec) RP RP . [ RP LP ]
-- On RP reduce production datatype_dec -> LP PAR LP nonempty_list(symbol) RP LP nonempty_list(constructor_dec) RP RP
-- On LP reduce production datatype_dec -> LP PAR LP nonempty_list(symbol) RP LP nonempty_list(constructor_dec) RP RP

State 311:
nonempty_list(constructor_dec) -> constructor_dec . [ RP ]
nonempty_list(constructor_dec) -> constructor_dec . nonempty_list(constructor_dec) [ RP ]
-- On LP shift to state 298
-- On nonempty_list(constructor_dec) shift to state 312
-- On constructor_dec shift to state 311
-- On RP reduce production nonempty_list(constructor_dec) -> constructor_dec

State 312:
nonempty_list(constructor_dec) -> constructor_dec nonempty_list(constructor_dec) . [ RP ]
-- On RP reduce production nonempty_list(constructor_dec) -> constructor_dec nonempty_list(constructor_dec)

State 313:
datatype_dec -> LP nonempty_list(constructor_dec) . RP [ RP LP ]
-- On RP shift to state 314

State 314:
datatype_dec -> LP nonempty_list(constructor_dec) RP . [ RP LP ]
-- On RP reduce production datatype_dec -> LP nonempty_list(constructor_dec) RP
-- On LP reduce production datatype_dec -> LP nonempty_list(constructor_dec) RP

State 315:
command -> LP DECLAREDATATYPES LP nonempty_list(sort_dec) RP LP nonempty_list(datatype_dec) . RP RP [ LP EOF ]
-- On RP shift to state 316

State 316:
command -> LP DECLAREDATATYPES LP nonempty_list(sort_dec) RP LP nonempty_list(datatype_dec) RP . RP [ LP EOF ]
-- On RP shift to state 317

State 317:
command -> LP DECLAREDATATYPES LP nonempty_list(sort_dec) RP LP nonempty_list(datatype_dec) RP RP . [ LP EOF ]
-- On LP reduce production command -> LP DECLAREDATATYPES LP nonempty_list(sort_dec) RP LP nonempty_list(datatype_dec) RP RP
-- On EOF reduce production command -> LP DECLAREDATATYPES LP nonempty_list(sort_dec) RP LP nonempty_list(datatype_dec) RP RP

State 318:
nonempty_list(datatype_dec) -> datatype_dec . [ RP ]
nonempty_list(datatype_dec) -> datatype_dec . nonempty_list(datatype_dec) [ RP ]
-- On LP shift to state 292
-- On nonempty_list(datatype_dec) shift to state 319
-- On datatype_dec shift to state 318
-- On RP reduce production nonempty_list(datatype_dec) -> datatype_dec

State 319:
nonempty_list(datatype_dec) -> datatype_dec nonempty_list(datatype_dec) . [ RP ]
-- On RP reduce production nonempty_list(datatype_dec) -> datatype_dec nonempty_list(datatype_dec)

State 320:
command -> LP DECLAREDATATYPE . symbol datatype_dec RP [ LP EOF ]
-- On SYMBOL shift to state 8
-- On ASCIIWOR shift to state 9
-- On symbol shift to state 321

State 321:
command -> LP DECLAREDATATYPE symbol . datatype_dec RP [ LP EOF ]
-- On LP shift to state 292
-- On datatype_dec shift to state 322

State 322:
command -> LP DECLAREDATATYPE symbol datatype_dec . RP [ LP EOF ]
-- On RP shift to state 323

State 323:
command -> LP DECLAREDATATYPE symbol datatype_dec RP . [ LP EOF ]
-- On LP reduce production command -> LP DECLAREDATATYPE symbol datatype_dec RP
-- On EOF reduce production command -> LP DECLAREDATATYPE symbol datatype_dec RP

State 324:
command -> LP DECLARECONST . symbol const_dec RP [ LP EOF ]
-- On SYMBOL shift to state 8
-- On ASCIIWOR shift to state 9
-- On symbol shift to state 325

State 325:
command -> LP DECLARECONST symbol . const_dec RP [ LP EOF ]
-- On SYMBOL shift to state 8
-- On LP shift to state 326
-- On ASCIIWOR shift to state 9
-- On symbol shift to state 114
-- On sort shift to state 333
-- On identifier shift to state 131
-- On const_dec shift to state 334

State 326:
const_dec -> LP . PAR LP nonempty_list(symbol) RP sort RP [ RP ]
identifier -> LP . UNDERSCORE symbol nonempty_list(index) RP [ RP ]
sort -> LP . identifier nonempty_list(sort) RP [ RP ]
-- On UNDERSCORE shift to state 94
-- On SYMBOL shift to state 8
-- On PAR shift to state 327
-- On LP shift to state 125
-- On ASCIIWOR shift to state 9
-- On symbol shift to state 114
-- On identifier shift to state 128

State 327:
const_dec -> LP PAR . LP nonempty_list(symbol) RP sort RP [ RP ]
-- On LP shift to state 328

State 328:
const_dec -> LP PAR LP . nonempty_list(symbol) RP sort RP [ RP ]
-- On SYMBOL shift to state 8
-- On ASCIIWOR shift to state 9
-- On symbol shift to state 106
-- On nonempty_list(symbol) shift to state 329

State 329:
const_dec -> LP PAR LP nonempty_list(symbol) . RP sort RP [ RP ]
-- On RP shift to state 330

State 330:
const_dec -> LP PAR LP nonempty_list(symbol) RP . sort RP [ RP ]
-- On SYMBOL shift to state 8
-- On LP shift to state 127
-- On ASCIIWOR shift to state 9
-- On symbol shift to state 114
-- On sort shift to state 331
-- On identifier shift to state 131

State 331:
const_dec -> LP PAR LP nonempty_list(symbol) RP sort . RP [ RP ]
-- On RP shift to state 332

State 332:
const_dec -> LP PAR LP nonempty_list(symbol) RP sort RP . [ RP ]
-- On RP reduce production const_dec -> LP PAR LP nonempty_list(symbol) RP sort RP

State 333:
const_dec -> sort . [ RP ]
-- On RP reduce production const_dec -> sort

State 334:
command -> LP DECLARECONST symbol const_dec . RP [ LP EOF ]
-- On RP shift to state 335

State 335:
command -> LP DECLARECONST symbol const_dec RP . [ LP EOF ]
-- On LP reduce production command -> LP DECLARECONST symbol const_dec RP
-- On EOF reduce production command -> LP DECLARECONST symbol const_dec RP

State 336:
command -> LP CHECKSATASSUMING . LP list(prop_literal) RP RP [ LP EOF ]
-- On LP shift to state 337

State 337:
command -> LP CHECKSATASSUMING LP . list(prop_literal) RP RP [ LP EOF ]
-- On SYMBOL shift to state 8
-- On LP shift to state 338
-- On ASCIIWOR shift to state 9
-- On symbol shift to state 342
-- On prop_literal shift to state 343
-- On list(prop_literal) shift to state 345
-- On RP reduce production list(prop_literal) ->

State 338:
prop_literal -> LP . symbol symbol RP [ SYMBOL RP LP ASCIIWOR ]
-- On SYMBOL shift to state 8
-- On ASCIIWOR shift to state 9
-- On symbol shift to state 339

State 339:
prop_literal -> LP symbol . symbol RP [ SYMBOL RP LP ASCIIWOR ]
-- On SYMBOL shift to state 8
-- On ASCIIWOR shift to state 9
-- On symbol shift to state 340

State 340:
prop_literal -> LP symbol symbol . RP [ SYMBOL RP LP ASCIIWOR ]
-- On RP shift to state 341

State 341:
prop_literal -> LP symbol symbol RP . [ SYMBOL RP LP ASCIIWOR ]
-- On SYMBOL reduce production prop_literal -> LP symbol symbol RP
-- On RP reduce production prop_literal -> LP symbol symbol RP
-- On LP reduce production prop_literal -> LP symbol symbol RP
-- On ASCIIWOR reduce production prop_literal -> LP symbol symbol RP

State 342:
prop_literal -> symbol . [ SYMBOL RP LP ASCIIWOR ]
-- On SYMBOL reduce production prop_literal -> symbol
-- On RP reduce production prop_literal -> symbol
-- On LP reduce production prop_literal -> symbol
-- On ASCIIWOR reduce production prop_literal -> symbol

State 343:
list(prop_literal) -> prop_literal . list(prop_literal) [ RP ]
-- On SYMBOL shift to state 8
-- On LP shift to state 338
-- On ASCIIWOR shift to state 9
-- On symbol shift to state 342
-- On prop_literal shift to state 343
-- On list(prop_literal) shift to state 344
-- On RP reduce production list(prop_literal) ->

State 344:
list(prop_literal) -> prop_literal list(prop_literal) . [ RP ]
-- On RP reduce production list(prop_literal) -> prop_literal list(prop_literal)

State 345:
command -> LP CHECKSATASSUMING LP list(prop_literal) . RP RP [ LP EOF ]
-- On RP shift to state 346

State 346:
command -> LP CHECKSATASSUMING LP list(prop_literal) RP . RP [ LP EOF ]
-- On RP shift to state 347

State 347:
command -> LP CHECKSATASSUMING LP list(prop_literal) RP RP . [ LP EOF ]
-- On LP reduce production command -> LP CHECKSATASSUMING LP list(prop_literal) RP RP
-- On EOF reduce production command -> LP CHECKSATASSUMING LP list(prop_literal) RP RP

State 348:
command -> LP CHECKSAT . RP [ LP EOF ]
-- On RP shift to state 349

State 349:
command -> LP CHECKSAT RP . [ LP EOF ]
-- On LP reduce production command -> LP CHECKSAT RP
-- On EOF reduce production command -> LP CHECKSAT RP

State 350:
command -> LP CHECKENTAILMENT . assert_dec RP [ LP EOF ]
-- On SYMBOL shift to state 8
-- On STRINGLIT shift to state 55
-- On NUMERAL shift to state 56
-- On LP shift to state 351
-- On HEXADECIMAL shift to state 59
-- On DECIMAL shift to state 60
-- On BINARY shift to state 61
-- On ASCIIWOR shift to state 9
-- On term shift to state 358
-- On symbol shift to state 114
-- On qualidentifier shift to state 115
-- On identifier shift to state 116
-- On constant shift to state 117
-- On assert_dec shift to state 359

State 351:
assert_dec -> LP . PAR LP nonempty_list(symbol) RP term RP [ RP ]
identifier -> LP . UNDERSCORE symbol nonempty_list(index) RP [ RP ]
qualidentifier -> LP . AS identifier sort RP [ RP ]
term -> LP . qualidentifier nonempty_list(term) RP [ RP ]
term -> LP . LET LP nonempty_list(varbinding) RP term RP [ RP ]
term -> LP . LET LP RP term RP [ RP ]
term -> LP . FORALL LP nonempty_list(sorted_var) RP term RP [ RP ]
term -> LP . EXISTS LP nonempty_list(sorted_var) RP term RP [ RP ]
term -> LP . MATCH term LP nonempty_list(match_case) RP RP [ RP ]
term -> LP . EXCLIMATIONPT term list(key_term) RP [ RP ]
-- On UNDERSCORE shift to state 94
-- On SYMBOL shift to state 8
-- On PAR shift to state 352
-- On MATCH shift to state 100
-- On LP shift to state 123
-- On LET shift to state 136
-- On FORALL shift to state 151
-- On EXISTS shift to state 163
-- On EXCLIMATIONPT shift to state 169
-- On ASCIIWOR shift to state 9
-- On AS shift to state 124
-- On symbol shift to state 114
-- On qualidentifier shift to state 183
-- On identifier shift to state 116

State 352:
assert_dec -> LP PAR . LP nonempty_list(symbol) RP term RP [ RP ]
-- On LP shift to state 353

State 353:
assert_dec -> LP PAR LP . nonempty_list(symbol) RP term RP [ RP ]
-- On SYMBOL shift to state 8
-- On ASCIIWOR shift to state 9
-- On symbol shift to state 106
-- On nonempty_list(symbol) shift to state 354

State 354:
assert_dec -> LP PAR LP nonempty_list(symbol) . RP term RP [ RP ]
-- On RP shift to state 355

State 355:
assert_dec -> LP PAR LP nonempty_list(symbol) RP . term RP [ RP ]
-- On SYMBOL shift to state 8
-- On STRINGLIT shift to state 55
-- On NUMERAL shift to state 56
-- On LP shift to state 93
-- On HEXADECIMAL shift to state 59
-- On DECIMAL shift to state 60
-- On BINARY shift to state 61
-- On ASCIIWOR shift to state 9
-- On term shift to state 356
-- On symbol shift to state 114
-- On qualidentifier shift to state 115
-- On identifier shift to state 116
-- On constant shift to state 117

State 356:
assert_dec -> LP PAR LP nonempty_list(symbol) RP term . RP [ RP ]
-- On RP shift to state 357

State 357:
assert_dec -> LP PAR LP nonempty_list(symbol) RP term RP . [ RP ]
-- On RP reduce production assert_dec -> LP PAR LP nonempty_list(symbol) RP term RP

State 358:
assert_dec -> term . [ RP ]
-- On RP reduce production assert_dec -> term

State 359:
command -> LP CHECKENTAILMENT assert_dec . RP [ LP EOF ]
-- On RP shift to state 360

State 360:
command -> LP CHECKENTAILMENT assert_dec RP . [ LP EOF ]
-- On LP reduce production command -> LP CHECKENTAILMENT assert_dec RP
-- On EOF reduce production command -> LP CHECKENTAILMENT assert_dec RP

State 361:
command -> LP ASSERT . assert_dec RP [ LP EOF ]
-- On SYMBOL shift to state 8
-- On STRINGLIT shift to state 55
-- On NUMERAL shift to state 56
-- On LP shift to state 351
-- On HEXADECIMAL shift to state 59
-- On DECIMAL shift to state 60
-- On BINARY shift to state 61
-- On ASCIIWOR shift to state 9
-- On term shift to state 358
-- On symbol shift to state 114
-- On qualidentifier shift to state 115
-- On identifier shift to state 116
-- On constant shift to state 117
-- On assert_dec shift to state 362

State 362:
command -> LP ASSERT assert_dec . RP [ LP EOF ]
-- On RP shift to state 363

State 363:
command -> LP ASSERT assert_dec RP . [ LP EOF ]
-- On LP reduce production command -> LP ASSERT assert_dec RP
-- On EOF reduce production command -> LP ASSERT assert_dec RP

State 364:
commands -> EOF . [ # ]
-- On # reduce production commands -> EOF

State 365:
commands' -> commands . [ # ]
-- On # accept commands

State 366:
commands -> command . commands [ # ]
-- On LP shift to state 1
-- On EOF shift to state 364
-- On commands shift to state 367
-- On command shift to state 366

State 367:
commands -> command commands . [ # ]
-- On # reduce production commands -> command commands

State 368:
term' -> . term [ # ]
-- On SYMBOL shift to state 8
-- On STRINGLIT shift to state 55
-- On NUMERAL shift to state 56
-- On LP shift to state 93
-- On HEXADECIMAL shift to state 59
-- On DECIMAL shift to state 60
-- On BINARY shift to state 61
-- On ASCIIWOR shift to state 9
-- On term shift to state 369
-- On symbol shift to state 114
-- On qualidentifier shift to state 115
-- On identifier shift to state 116
-- On constant shift to state 117

State 369:
term' -> term . [ # ]
-- On # accept term

State 370:
term_list' -> . term_list [ # ]
-- On SYMBOL shift to state 8
-- On STRINGLIT shift to state 55
-- On NUMERAL shift to state 56
-- On LP shift to state 93
-- On HEXADECIMAL shift to state 59
-- On DECIMAL shift to state 60
-- On BINARY shift to state 61
-- On ASCIIWOR shift to state 9
-- On term_list shift to state 371
-- On term shift to state 372
-- On symbol shift to state 114
-- On qualidentifier shift to state 115
-- On list(term) shift to state 374
-- On identifier shift to state 116
-- On constant shift to state 117

State 371:
term_list' -> term_list . [ # ]
-- On # accept term_list

State 372:
list(term) -> term . list(term) [ # ]
-- On SYMBOL shift to state 8
-- On STRINGLIT shift to state 55
-- On NUMERAL shift to state 56
-- On LP shift to state 93
-- On HEXADECIMAL shift to state 59
-- On DECIMAL shift to state 60
-- On BINARY shift to state 61
-- On ASCIIWOR shift to state 9
-- On term shift to state 372
-- On symbol shift to state 114
-- On qualidentifier shift to state 115
-- On list(term) shift to state 373
-- On identifier shift to state 116
-- On constant shift to state 117

State 373:
list(term) -> term list(term) . [ # ]
-- On # reduce production list(term) -> term list(term)

State 374:
term_list -> list(term) . [ # ]
-- On # reduce production term_list -> list(term)

