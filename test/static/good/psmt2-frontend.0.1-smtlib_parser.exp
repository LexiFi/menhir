Note: the nonterminal symbol option (from psmt2-frontend.0.1-smtlib_parser.mly) is renamed psmt2_frontend_0_1_smtlib_parser_option.
Grammar has 51 nonterminal symbols, among which 3 start symbols.
Grammar has 92 terminal symbols.
Grammar has 172 productions.
nullable(varbinding) = false
nullable(term_list) = true
nullable(term) = false
nullable(symbol) = false
nullable(sorted_var) = false
nullable(sort_dec) = false
nullable(sort) = false
nullable(sexpr) = false
nullable(selector_dec) = false
nullable(qualidentifier) = false
nullable(psmt2_frontend_0_1_smtlib_parser_option) = false
nullable(prop_literal) = false
nullable(pattern) = false
nullable(nonempty_list(varbinding)) = false
nullable(nonempty_list(term)) = false
nullable(nonempty_list(symbol)) = false
nullable(nonempty_list(sorted_var)) = false
nullable(nonempty_list(sort_dec)) = false
nullable(nonempty_list(sort)) = false
nullable(nonempty_list(match_case)) = false
nullable(nonempty_list(index)) = false
nullable(nonempty_list(datatype_dec)) = false
nullable(nonempty_list(constructor_dec)) = false
nullable(match_case) = false
nullable(list(term)) = true
nullable(list(symbol)) = true
nullable(list(sorted_var)) = true
nullable(list(sort)) = true
nullable(list(sexpr)) = true
nullable(list(selector_dec)) = true
nullable(list(prop_literal)) = true
nullable(list(key_term)) = true
nullable(list(fun_defs)) = true
nullable(keyword) = false
nullable(key_term) = false
nullable(key_option) = false
nullable(key_info) = false
nullable(index) = false
nullable(identifier) = false
nullable(fun_defs) = false
nullable(fun_def) = false
nullable(fun_dec) = false
nullable(datatype_dec) = false
nullable(constructor_dec) = false
nullable(constant) = false
nullable(const_dec) = false
nullable(commands) = false
nullable(command) = false
nullable(attribute_value) = false
nullable(attribute) = false
nullable(assert_dec) = false
first(varbinding) = LP
first(term_list) = SYMBOL STRINGLIT NUMERAL LP HEXADECIMAL DECIMAL BINARY ASCIIWOR
first(term) = SYMBOL STRINGLIT NUMERAL LP HEXADECIMAL DECIMAL BINARY ASCIIWOR
first(symbol) = SYMBOL ASCIIWOR
first(sorted_var) = LP
first(sort_dec) = LP
first(sort) = SYMBOL LP ASCIIWOR
first(sexpr) = VALUES THEORIES SYMBOL STRINGLIT STATUTS SOURCE SORTSDESCRIPTION SORTS SMTLIBVERSION NUMERAL NOTES LP LICENSE LANGUAGE HEXADECIMAL FUNSDESCRIPT FUNS EXTENSIONS DEFINITIO DECIMAL CATEGORY BINARY AXIOMS ASCIIWOR
first(selector_dec) = LP
first(qualidentifier) = SYMBOL LP ASCIIWOR
first(psmt2_frontend_0_1_smtlib_parser_option) = VERSION VERBOSITY VALUES THEORIES STATUTS SOURCE SORTSDESCRIPTION SORTS SMTLIBVERSION SERIES RESSOURCELIMIT REGULAROUTPUTCHAN REASONUNKNOWN RANDOMSEED PRODUCEUNSATCORES PRODUCEUNSATASSUMPTIONS PRODUCEPROOFS PRODUCEMODELS PRODUCEASSIGNEMENT PRODUCEASSERTIONS PRINTSUCCESS NOTES NAME LICENSE LANGUAGE INTERACTIVE INSTANCE GLOBALDECLARATIONS FUNSDESCRIPT FUNS EXTENSIONS ERRORBEHAV DIFFICULTY DIAGNOOUTPUTCHAN DEFINITIO CATEGORY AXIOMS AUTHORS AUTHOR ASSERTIONSTACKLVL ALLSTATS
first(prop_literal) = SYMBOL LP ASCIIWOR
first(pattern) = SYMBOL LP ASCIIWOR
first(nonempty_list(varbinding)) = LP
first(nonempty_list(term)) = SYMBOL STRINGLIT NUMERAL LP HEXADECIMAL DECIMAL BINARY ASCIIWOR
first(nonempty_list(symbol)) = SYMBOL ASCIIWOR
first(nonempty_list(sorted_var)) = LP
first(nonempty_list(sort_dec)) = LP
first(nonempty_list(sort)) = SYMBOL LP ASCIIWOR
first(nonempty_list(match_case)) = LP
first(nonempty_list(index)) = SYMBOL NUMERAL ASCIIWOR
first(nonempty_list(datatype_dec)) = LP
first(nonempty_list(constructor_dec)) = LP
first(match_case) = LP
first(list(term)) = SYMBOL STRINGLIT NUMERAL LP HEXADECIMAL DECIMAL BINARY ASCIIWOR
first(list(symbol)) = SYMBOL ASCIIWOR
first(list(sorted_var)) = LP
first(list(sort)) = SYMBOL LP ASCIIWOR
first(list(sexpr)) = VALUES THEORIES SYMBOL STRINGLIT STATUTS SOURCE SORTSDESCRIPTION SORTS SMTLIBVERSION NUMERAL NOTES LP LICENSE LANGUAGE HEXADECIMAL FUNSDESCRIPT FUNS EXTENSIONS DEFINITIO DECIMAL CATEGORY BINARY AXIOMS ASCIIWOR
first(list(selector_dec)) = LP
first(list(prop_literal)) = SYMBOL LP ASCIIWOR
first(list(key_term)) = PATTERN NAMED
first(list(fun_defs)) = LP
first(keyword) = VALUES THEORIES STATUTS SOURCE SORTSDESCRIPTION SORTS SMTLIBVERSION NOTES LICENSE LANGUAGE FUNSDESCRIPT FUNS EXTENSIONS DEFINITIO CATEGORY AXIOMS
first(key_term) = PATTERN NAMED
first(key_option) = VERBOSITY RESSOURCELIMIT REGULAROUTPUTCHAN RANDOMSEED PRODUCEUNSATCORES PRODUCEUNSATASSUMPTIONS PRODUCEPROOFS PRODUCEMODELS PRODUCEASSIGNEMENT PRODUCEASSERTIONS PRINTSUCCESS INTERACTIVE GLOBALDECLARATIONS DIAGNOOUTPUTCHAN
first(key_info) = VERSION VALUES THEORIES STATUTS SOURCE SORTSDESCRIPTION SORTS SMTLIBVERSION SERIES REASONUNKNOWN NOTES NAME LICENSE LANGUAGE INSTANCE FUNSDESCRIPT FUNS EXTENSIONS ERRORBEHAV DIFFICULTY DEFINITIO CATEGORY AXIOMS AUTHORS AUTHOR ASSERTIONSTACKLVL ALLSTATS
first(index) = SYMBOL NUMERAL ASCIIWOR
first(identifier) = SYMBOL LP ASCIIWOR
first(fun_defs) = LP
first(fun_def) = SYMBOL ASCIIWOR
first(fun_dec) = LP
first(datatype_dec) = LP
first(constructor_dec) = LP
first(constant) = STRINGLIT NUMERAL HEXADECIMAL DECIMAL BINARY
first(const_dec) = SYMBOL LP ASCIIWOR
first(commands) = LP EOF
first(command) = LP
first(attribute_value) = SYMBOL STRINGLIT NUMERAL LP HEXADECIMAL DECIMAL BINARY ASCIIWOR
first(attribute) = VERSION VALUES THEORIES STATUTS SOURCE SORTSDESCRIPTION SORTS SMTLIBVERSION SERIES REASONUNKNOWN NOTES NAME LICENSE LANGUAGE INSTANCE FUNSDESCRIPT FUNS EXTENSIONS ERRORBEHAV DIFFICULTY DEFINITIO CATEGORY AXIOMS AUTHORS AUTHOR ASSERTIONSTACKLVL ALLSTATS
first(assert_dec) = SYMBOL STRINGLIT NUMERAL LP HEXADECIMAL DECIMAL BINARY ASCIIWOR
minimal(varbinding) = (* 4 *) LP SYMBOL DECIMAL RP
minimal(term_list) = (* 0 *)
minimal(term) = (* 1 *) DECIMAL
minimal(symbol) = (* 1 *) SYMBOL
minimal(sorted_var) = (* 4 *) LP SYMBOL SYMBOL RP
minimal(sort_dec) = (* 4 *) LP SYMBOL NUMERAL RP
minimal(sort) = (* 1 *) SYMBOL
minimal(sexpr) = (* 1 *) DECIMAL
minimal(selector_dec) = (* 4 *) LP SYMBOL SYMBOL RP
minimal(qualidentifier) = (* 1 *) SYMBOL
minimal(psmt2_frontend_0_1_smtlib_parser_option) = (* 1 *) ALLSTATS
minimal(prop_literal) = (* 1 *) SYMBOL
minimal(pattern) = (* 1 *) SYMBOL
minimal(nonempty_list(varbinding)) = (* 4 *) LP SYMBOL DECIMAL RP
minimal(nonempty_list(term)) = (* 1 *) DECIMAL
minimal(nonempty_list(symbol)) = (* 1 *) SYMBOL
minimal(nonempty_list(sorted_var)) = (* 4 *) LP SYMBOL SYMBOL RP
minimal(nonempty_list(sort_dec)) = (* 4 *) LP SYMBOL NUMERAL RP
minimal(nonempty_list(sort)) = (* 1 *) SYMBOL
minimal(nonempty_list(match_case)) = (* 4 *) LP SYMBOL DECIMAL RP
minimal(nonempty_list(index)) = (* 1 *) SYMBOL
minimal(nonempty_list(datatype_dec)) = (* 5 *) LP LP SYMBOL RP RP
minimal(nonempty_list(constructor_dec)) = (* 3 *) LP SYMBOL RP
minimal(match_case) = (* 4 *) LP SYMBOL DECIMAL RP
minimal(list(term)) = (* 0 *)
minimal(list(symbol)) = (* 0 *)
minimal(list(sorted_var)) = (* 0 *)
minimal(list(sort)) = (* 0 *)
minimal(list(sexpr)) = (* 0 *)
minimal(list(selector_dec)) = (* 0 *)
minimal(list(prop_literal)) = (* 0 *)
minimal(list(key_term)) = (* 0 *)
minimal(list(fun_defs)) = (* 0 *)
minimal(keyword) = (* 1 *) CATEGORY
minimal(key_term) = (* 2 *) NAMED SYMBOL
minimal(key_option) = (* 1 *) DIAGNOOUTPUTCHAN
minimal(key_info) = (* 1 *) ALLSTATS
minimal(index) = (* 1 *) SYMBOL
minimal(identifier) = (* 1 *) SYMBOL
minimal(fun_defs) = (* 6 *) LP SYMBOL LP RP SYMBOL RP
minimal(fun_def) = (* 4 *) SYMBOL LP RP SYMBOL
minimal(fun_dec) = (* 3 *) LP RP SYMBOL
minimal(datatype_dec) = (* 5 *) LP LP SYMBOL RP RP
minimal(constructor_dec) = (* 3 *) LP SYMBOL RP
minimal(constant) = (* 1 *) DECIMAL
minimal(const_dec) = (* 1 *) SYMBOL
minimal(commands) = (* 1 *) EOF
minimal(command) = (* 3 *) LP CHECKSAT RP
minimal(attribute_value) = (* 1 *) DECIMAL
minimal(attribute) = (* 1 *) ALLSTATS
minimal(assert_dec) = (* 1 *) DECIMAL
follow(varbinding) = RP LP
follow(term_list) = #
follow(term) = SYMBOL STRINGLIT RP PATTERN NUMERAL NAMED LP HEXADECIMAL DECIMAL BINARY ASCIIWOR #
follow(symbol) = VALUES THEORIES SYMBOL STRINGLIT STATUTS SOURCE SORTSDESCRIPTION SORTS SMTLIBVERSION RP PATTERN NUMERAL NOTES NAMED LP LICENSE LANGUAGE HEXADECIMAL FUNSDESCRIPT FUNS EXTENSIONS DEFINITIO DECIMAL CATEGORY BINARY AXIOMS ASCIIWOR #
follow(sorted_var) = RP LP
follow(sort_dec) = RP LP
follow(sort) = SYMBOL STRINGLIT RP NUMERAL LP HEXADECIMAL DECIMAL BINARY ASCIIWOR
follow(sexpr) = VALUES THEORIES SYMBOL STRINGLIT STATUTS SOURCE SORTSDESCRIPTION SORTS SMTLIBVERSION RP NUMERAL NOTES LP LICENSE LANGUAGE HEXADECIMAL FUNSDESCRIPT FUNS EXTENSIONS DEFINITIO DECIMAL CATEGORY BINARY AXIOMS ASCIIWOR
follow(selector_dec) = RP LP
follow(qualidentifier) = SYMBOL STRINGLIT RP PATTERN NUMERAL NAMED LP HEXADECIMAL DECIMAL BINARY ASCIIWOR #
follow(psmt2_frontend_0_1_smtlib_parser_option) = RP
follow(prop_literal) = SYMBOL RP LP ASCIIWOR
follow(pattern) = SYMBOL STRINGLIT NUMERAL LP HEXADECIMAL DECIMAL BINARY ASCIIWOR
follow(nonempty_list(varbinding)) = RP
follow(nonempty_list(term)) = RP
follow(nonempty_list(symbol)) = RP
follow(nonempty_list(sorted_var)) = RP
follow(nonempty_list(sort_dec)) = RP
follow(nonempty_list(sort)) = RP
follow(nonempty_list(match_case)) = RP
follow(nonempty_list(index)) = RP
follow(nonempty_list(datatype_dec)) = RP
follow(nonempty_list(constructor_dec)) = RP
follow(match_case) = RP LP
follow(list(term)) = #
follow(list(symbol)) = RP
follow(list(sorted_var)) = RP
follow(list(sort)) = RP
follow(list(sexpr)) = RP
follow(list(selector_dec)) = RP
follow(list(prop_literal)) = RP
follow(list(key_term)) = RP
follow(list(fun_defs)) = RP
follow(keyword) = VALUES THEORIES SYMBOL STRINGLIT STATUTS SOURCE SORTSDESCRIPTION SORTS SMTLIBVERSION RP NUMERAL NOTES LP LICENSE LANGUAGE HEXADECIMAL FUNSDESCRIPT FUNS EXTENSIONS DEFINITIO DECIMAL CATEGORY BINARY AXIOMS ASCIIWOR
follow(key_term) = RP PATTERN NAMED
follow(key_option) = SYMBOL NUMERAL ASCIIWOR
follow(key_info) = SYMBOL STRINGLIT RP NUMERAL LP HEXADECIMAL DECIMAL BINARY ASCIIWOR
follow(index) = SYMBOL RP NUMERAL ASCIIWOR
follow(identifier) = SYMBOL STRINGLIT RP PATTERN NUMERAL NAMED LP HEXADECIMAL DECIMAL BINARY ASCIIWOR #
follow(fun_defs) = RP LP
follow(fun_def) = SYMBOL STRINGLIT RP NUMERAL LP HEXADECIMAL DECIMAL BINARY ASCIIWOR
follow(fun_dec) = RP
follow(datatype_dec) = RP LP
follow(constructor_dec) = RP LP
follow(constant) = VALUES THEORIES SYMBOL STRINGLIT STATUTS SOURCE SORTSDESCRIPTION SORTS SMTLIBVERSION RP PATTERN NUMERAL NOTES NAMED LP LICENSE LANGUAGE HEXADECIMAL FUNSDESCRIPT FUNS EXTENSIONS DEFINITIO DECIMAL CATEGORY BINARY AXIOMS ASCIIWOR #
follow(const_dec) = RP
follow(commands) = #
follow(command) = LP EOF
follow(attribute_value) = RP
follow(attribute) = RP
follow(assert_dec) = RP
Built an LR(0) automaton with 375 states.
The grammar is SLR(1).
The construction mode is pager.
Built an LR(1) automaton with 375 states.
Warning: 22 end-of-stream conflicts were arbitrarily resolved.
File "<standard.mly>", line 209, characters 16-16:
Warning: production list(term) -> is never reduced.
Warning: in total, 1 production is never reduced.
155 out of 375 states have a default reduction.
113 out of 375 states are represented.
59 out of 148 symbols keep track of their start position.
57 out of 148 symbols keep track of their end position.
117 out of 175 productions exploit shiftreduce optimization.
0 out of 375 states can peek at an error.
982 functions before inlining, 117 functions after inlining.
