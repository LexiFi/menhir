State 0:
text' -> . text [ # ]
-- On Token shift to state 1
-- On Separator shift to state 5
-- On text shift to state 6
-- On declarations shift to state 7
-- On declaration shift to state 75

State 1:
declaration -> Token . Uname [ Token Separator ]
declaration -> Token . Type Uname [ Token Separator ]
-- On Uname shift to state 2
-- On Type shift to state 3

State 2:
declaration -> Token Uname . [ Token Separator ]
-- On Token reduce production declaration -> Token Uname
-- On Separator reduce production declaration -> Token Uname

State 3:
declaration -> Token Type . Uname [ Token Separator ]
-- On Uname shift to state 4

State 4:
declaration -> Token Type Uname . [ Token Separator ]
-- On Token reduce production declaration -> Token Type Uname
-- On Separator reduce production declaration -> Token Type Uname

State 5:
declarations -> Separator . [ Separator Lname ]
-- On Separator reduce production declarations -> Separator
-- On Lname reduce production declarations -> Separator

State 6:
text' -> text . [ # ]
-- On # accept text

State 7:
text -> declarations . rules [ # ]
-- On Separator shift to state 8
-- On Lname shift to state 9
-- On rules shift to state 72
-- On rule shift to state 73

State 8:
rules -> Separator . [ # ]
-- On # reduce production rules -> Separator

State 9:
rule -> Lname . Lparen formal_arguments Colon branches [ Separator Lname ]
-- On Lparen shift to state 10

State 10:
rule -> Lname Lparen . formal_arguments Colon branches [ Separator Lname ]
-- On Rparen shift to state 11
-- On Lname shift to state 12
-- On formal_arguments shift to state 18

State 11:
formal_arguments -> Rparen . [ Colon ]
-- On Colon reduce production formal_arguments -> Rparen

State 12:
formal_arguments -> Lname . comma_formal_arguments [ Colon ]
-- On Rparen shift to state 13
-- On Comma shift to state 14
-- On comma_formal_arguments shift to state 17

State 13:
comma_formal_arguments -> Rparen . [ Colon ]
-- On Colon reduce production comma_formal_arguments -> Rparen

State 14:
comma_formal_arguments -> Comma . Lname comma_formal_arguments [ Colon ]
-- On Lname shift to state 15

State 15:
comma_formal_arguments -> Comma Lname . comma_formal_arguments [ Colon ]
-- On Rparen shift to state 13
-- On Comma shift to state 14
-- On comma_formal_arguments shift to state 16

State 16:
comma_formal_arguments -> Comma Lname comma_formal_arguments . [ Colon ]
-- On Colon reduce production comma_formal_arguments -> Comma Lname comma_formal_arguments

State 17:
formal_arguments -> Lname comma_formal_arguments . [ Colon ]
-- On Colon reduce production formal_arguments -> Lname comma_formal_arguments

State 18:
rule -> Lname Lparen formal_arguments . Colon branches [ Separator Lname ]
-- On Colon shift to state 19

State 19:
rule -> Lname Lparen formal_arguments Colon . branches [ Separator Lname ]
-- On Uname shift to state 20
-- On Lname shift to state 21
-- On Lbracket shift to state 41
-- On Dollar shift to state 46
-- On symbol shift to state 48
-- On simple_branch shift to state 65
-- On branches shift to state 66
-- On branch shift to state 67

State 20:
symbol -> Uname . [ Uname Loop_star Lname Lbracket Error Dollar Code ]
-- On Uname reduce production symbol -> Uname
-- On Loop_star reduce production symbol -> Uname
-- On Lname reduce production symbol -> Uname
-- On Lbracket reduce production symbol -> Uname
-- On Error reduce production symbol -> Uname
-- On Dollar reduce production symbol -> Uname
-- On Code reduce production symbol -> Uname

State 21:
symbol -> Lname . Colon Uname [ Uname Loop_star Lname Lbracket Error Dollar Code ]
symbol -> Lname . Colon Lname Lparen actual_arguments [ Uname Loop_star Lname Lbracket Error Dollar Code ]
symbol -> Lname . Colon Lbracket Lname Rbracket Lparen actual_arguments [ Uname Loop_star Lname Lbracket Error Dollar Code ]
symbol -> Lname . Lparen actual_arguments [ Uname Loop_star Lname Lbracket Error Dollar Code ]
-- On Lparen shift to state 22
-- On Colon shift to state 31

State 22:
symbol -> Lname Lparen . actual_arguments [ Uname Loop_star Lname Lbracket Error Dollar Code ]
-- On Rparen shift to state 23
-- On Lname shift to state 24
-- On actual_arguments shift to state 30

State 23:
actual_arguments -> Rparen . [ Uname Loop_star Lname Lbracket Error Dollar Code ]
-- On Uname reduce production actual_arguments -> Rparen
-- On Loop_star reduce production actual_arguments -> Rparen
-- On Lname reduce production actual_arguments -> Rparen
-- On Lbracket reduce production actual_arguments -> Rparen
-- On Error reduce production actual_arguments -> Rparen
-- On Dollar reduce production actual_arguments -> Rparen
-- On Code reduce production actual_arguments -> Rparen

State 24:
actual_arguments -> Lname . comma_actual_arguments [ Uname Loop_star Lname Lbracket Error Dollar Code ]
-- On Rparen shift to state 25
-- On Comma shift to state 26
-- On comma_actual_arguments shift to state 29

State 25:
comma_actual_arguments -> Rparen . [ Uname Loop_star Lname Lbracket Error Dollar Code ]
-- On Uname reduce production comma_actual_arguments -> Rparen
-- On Loop_star reduce production comma_actual_arguments -> Rparen
-- On Lname reduce production comma_actual_arguments -> Rparen
-- On Lbracket reduce production comma_actual_arguments -> Rparen
-- On Error reduce production comma_actual_arguments -> Rparen
-- On Dollar reduce production comma_actual_arguments -> Rparen
-- On Code reduce production comma_actual_arguments -> Rparen

State 26:
comma_actual_arguments -> Comma . Lname comma_actual_arguments [ Uname Loop_star Lname Lbracket Error Dollar Code ]
-- On Lname shift to state 27

State 27:
comma_actual_arguments -> Comma Lname . comma_actual_arguments [ Uname Loop_star Lname Lbracket Error Dollar Code ]
-- On Rparen shift to state 25
-- On Comma shift to state 26
-- On comma_actual_arguments shift to state 28

State 28:
comma_actual_arguments -> Comma Lname comma_actual_arguments . [ Uname Loop_star Lname Lbracket Error Dollar Code ]
-- On Uname reduce production comma_actual_arguments -> Comma Lname comma_actual_arguments
-- On Loop_star reduce production comma_actual_arguments -> Comma Lname comma_actual_arguments
-- On Lname reduce production comma_actual_arguments -> Comma Lname comma_actual_arguments
-- On Lbracket reduce production comma_actual_arguments -> Comma Lname comma_actual_arguments
-- On Error reduce production comma_actual_arguments -> Comma Lname comma_actual_arguments
-- On Dollar reduce production comma_actual_arguments -> Comma Lname comma_actual_arguments
-- On Code reduce production comma_actual_arguments -> Comma Lname comma_actual_arguments

State 29:
actual_arguments -> Lname comma_actual_arguments . [ Uname Loop_star Lname Lbracket Error Dollar Code ]
-- On Uname reduce production actual_arguments -> Lname comma_actual_arguments
-- On Loop_star reduce production actual_arguments -> Lname comma_actual_arguments
-- On Lname reduce production actual_arguments -> Lname comma_actual_arguments
-- On Lbracket reduce production actual_arguments -> Lname comma_actual_arguments
-- On Error reduce production actual_arguments -> Lname comma_actual_arguments
-- On Dollar reduce production actual_arguments -> Lname comma_actual_arguments
-- On Code reduce production actual_arguments -> Lname comma_actual_arguments

State 30:
symbol -> Lname Lparen actual_arguments . [ Uname Loop_star Lname Lbracket Error Dollar Code ]
-- On Uname reduce production symbol -> Lname Lparen actual_arguments
-- On Loop_star reduce production symbol -> Lname Lparen actual_arguments
-- On Lname reduce production symbol -> Lname Lparen actual_arguments
-- On Lbracket reduce production symbol -> Lname Lparen actual_arguments
-- On Error reduce production symbol -> Lname Lparen actual_arguments
-- On Dollar reduce production symbol -> Lname Lparen actual_arguments
-- On Code reduce production symbol -> Lname Lparen actual_arguments

State 31:
symbol -> Lname Colon . Uname [ Uname Loop_star Lname Lbracket Error Dollar Code ]
symbol -> Lname Colon . Lname Lparen actual_arguments [ Uname Loop_star Lname Lbracket Error Dollar Code ]
symbol -> Lname Colon . Lbracket Lname Rbracket Lparen actual_arguments [ Uname Loop_star Lname Lbracket Error Dollar Code ]
-- On Uname shift to state 32
-- On Lname shift to state 33
-- On Lbracket shift to state 36

State 32:
symbol -> Lname Colon Uname . [ Uname Loop_star Lname Lbracket Error Dollar Code ]
-- On Uname reduce production symbol -> Lname Colon Uname
-- On Loop_star reduce production symbol -> Lname Colon Uname
-- On Lname reduce production symbol -> Lname Colon Uname
-- On Lbracket reduce production symbol -> Lname Colon Uname
-- On Error reduce production symbol -> Lname Colon Uname
-- On Dollar reduce production symbol -> Lname Colon Uname
-- On Code reduce production symbol -> Lname Colon Uname

State 33:
symbol -> Lname Colon Lname . Lparen actual_arguments [ Uname Loop_star Lname Lbracket Error Dollar Code ]
-- On Lparen shift to state 34

State 34:
symbol -> Lname Colon Lname Lparen . actual_arguments [ Uname Loop_star Lname Lbracket Error Dollar Code ]
-- On Rparen shift to state 23
-- On Lname shift to state 24
-- On actual_arguments shift to state 35

State 35:
symbol -> Lname Colon Lname Lparen actual_arguments . [ Uname Loop_star Lname Lbracket Error Dollar Code ]
-- On Uname reduce production symbol -> Lname Colon Lname Lparen actual_arguments
-- On Loop_star reduce production symbol -> Lname Colon Lname Lparen actual_arguments
-- On Lname reduce production symbol -> Lname Colon Lname Lparen actual_arguments
-- On Lbracket reduce production symbol -> Lname Colon Lname Lparen actual_arguments
-- On Error reduce production symbol -> Lname Colon Lname Lparen actual_arguments
-- On Dollar reduce production symbol -> Lname Colon Lname Lparen actual_arguments
-- On Code reduce production symbol -> Lname Colon Lname Lparen actual_arguments

State 36:
symbol -> Lname Colon Lbracket . Lname Rbracket Lparen actual_arguments [ Uname Loop_star Lname Lbracket Error Dollar Code ]
-- On Lname shift to state 37

State 37:
symbol -> Lname Colon Lbracket Lname . Rbracket Lparen actual_arguments [ Uname Loop_star Lname Lbracket Error Dollar Code ]
-- On Rbracket shift to state 38

State 38:
symbol -> Lname Colon Lbracket Lname Rbracket . Lparen actual_arguments [ Uname Loop_star Lname Lbracket Error Dollar Code ]
-- On Lparen shift to state 39

State 39:
symbol -> Lname Colon Lbracket Lname Rbracket Lparen . actual_arguments [ Uname Loop_star Lname Lbracket Error Dollar Code ]
-- On Rparen shift to state 23
-- On Lname shift to state 24
-- On actual_arguments shift to state 40

State 40:
symbol -> Lname Colon Lbracket Lname Rbracket Lparen actual_arguments . [ Uname Loop_star Lname Lbracket Error Dollar Code ]
-- On Uname reduce production symbol -> Lname Colon Lbracket Lname Rbracket Lparen actual_arguments
-- On Loop_star reduce production symbol -> Lname Colon Lbracket Lname Rbracket Lparen actual_arguments
-- On Lname reduce production symbol -> Lname Colon Lbracket Lname Rbracket Lparen actual_arguments
-- On Lbracket reduce production symbol -> Lname Colon Lbracket Lname Rbracket Lparen actual_arguments
-- On Error reduce production symbol -> Lname Colon Lbracket Lname Rbracket Lparen actual_arguments
-- On Dollar reduce production symbol -> Lname Colon Lbracket Lname Rbracket Lparen actual_arguments
-- On Code reduce production symbol -> Lname Colon Lbracket Lname Rbracket Lparen actual_arguments

State 41:
symbol -> Lbracket . Lname Rbracket Lparen actual_arguments [ Uname Loop_star Lname Lbracket Error Dollar Code ]
-- On Lname shift to state 42

State 42:
symbol -> Lbracket Lname . Rbracket Lparen actual_arguments [ Uname Loop_star Lname Lbracket Error Dollar Code ]
-- On Rbracket shift to state 43

State 43:
symbol -> Lbracket Lname Rbracket . Lparen actual_arguments [ Uname Loop_star Lname Lbracket Error Dollar Code ]
-- On Lparen shift to state 44

State 44:
symbol -> Lbracket Lname Rbracket Lparen . actual_arguments [ Uname Loop_star Lname Lbracket Error Dollar Code ]
-- On Rparen shift to state 23
-- On Lname shift to state 24
-- On actual_arguments shift to state 45

State 45:
symbol -> Lbracket Lname Rbracket Lparen actual_arguments . [ Uname Loop_star Lname Lbracket Error Dollar Code ]
-- On Uname reduce production symbol -> Lbracket Lname Rbracket Lparen actual_arguments
-- On Loop_star reduce production symbol -> Lbracket Lname Rbracket Lparen actual_arguments
-- On Lname reduce production symbol -> Lbracket Lname Rbracket Lparen actual_arguments
-- On Lbracket reduce production symbol -> Lbracket Lname Rbracket Lparen actual_arguments
-- On Error reduce production symbol -> Lbracket Lname Rbracket Lparen actual_arguments
-- On Dollar reduce production symbol -> Lbracket Lname Rbracket Lparen actual_arguments
-- On Code reduce production symbol -> Lbracket Lname Rbracket Lparen actual_arguments

State 46:
branch -> Dollar . Code simple_branch [ Separator Lname Alt ]
-- On Code shift to state 47

State 47:
branch -> Dollar Code . simple_branch [ Separator Lname Alt ]
-- On Uname shift to state 20
-- On Lname shift to state 21
-- On Lbracket shift to state 41
-- On symbol shift to state 48
-- On simple_branch shift to state 64

State 48:
simple_branch -> symbol . Dollar Code patterns Code opt_error_handler [ Separator Lname Alt ]
simple_branch -> symbol . patterns Code opt_error_handler [ Separator Lname Alt ]
-- On Uname shift to state 20
-- On Lname shift to state 21
-- On Lbracket shift to state 41
-- On Dollar shift to state 49
-- On symbol shift to state 51
-- On patterns shift to state 61
-- On pattern shift to state 59
-- On Code reduce production patterns ->

State 49:
simple_branch -> symbol Dollar . Code patterns Code opt_error_handler [ Separator Lname Alt ]
-- On Code shift to state 50

State 50:
simple_branch -> symbol Dollar Code . patterns Code opt_error_handler [ Separator Lname Alt ]
-- On Uname shift to state 20
-- On Lname shift to state 21
-- On Lbracket shift to state 41
-- On symbol shift to state 51
-- On patterns shift to state 54
-- On pattern shift to state 59
-- On Code reduce production patterns ->

State 51:
pattern -> symbol . Loop_star [ Uname Lname Lbracket Code ]
pattern -> symbol . Error [ Uname Lname Lbracket Code ]
pattern -> symbol . [ Uname Lname Lbracket Code ]
-- On Loop_star shift to state 52
-- On Error shift to state 53
-- On Uname reduce production pattern -> symbol
-- On Lname reduce production pattern -> symbol
-- On Lbracket reduce production pattern -> symbol
-- On Code reduce production pattern -> symbol

State 52:
pattern -> symbol Loop_star . [ Uname Lname Lbracket Code ]
-- On Uname reduce production pattern -> symbol Loop_star
-- On Lname reduce production pattern -> symbol Loop_star
-- On Lbracket reduce production pattern -> symbol Loop_star
-- On Code reduce production pattern -> symbol Loop_star

State 53:
pattern -> symbol Error . [ Uname Lname Lbracket Code ]
-- On Uname reduce production pattern -> symbol Error
-- On Lname reduce production pattern -> symbol Error
-- On Lbracket reduce production pattern -> symbol Error
-- On Code reduce production pattern -> symbol Error

State 54:
simple_branch -> symbol Dollar Code patterns . Code opt_error_handler [ Separator Lname Alt ]
-- On Code shift to state 55

State 55:
simple_branch -> symbol Dollar Code patterns Code . opt_error_handler [ Separator Lname Alt ]
-- On Error shift to state 56
-- On opt_error_handler shift to state 58
-- On Separator reduce production opt_error_handler ->
-- On Lname reduce production opt_error_handler ->
-- On Alt reduce production opt_error_handler ->

State 56:
opt_error_handler -> Error . Code [ Separator Lname Alt ]
-- On Code shift to state 57

State 57:
opt_error_handler -> Error Code . [ Separator Lname Alt ]
-- On Separator reduce production opt_error_handler -> Error Code
-- On Lname reduce production opt_error_handler -> Error Code
-- On Alt reduce production opt_error_handler -> Error Code

State 58:
simple_branch -> symbol Dollar Code patterns Code opt_error_handler . [ Separator Lname Alt ]
-- On Separator reduce production simple_branch -> symbol Dollar Code patterns Code opt_error_handler
-- On Lname reduce production simple_branch -> symbol Dollar Code patterns Code opt_error_handler
-- On Alt reduce production simple_branch -> symbol Dollar Code patterns Code opt_error_handler

State 59:
patterns -> pattern . patterns [ Code ]
-- On Uname shift to state 20
-- On Lname shift to state 21
-- On Lbracket shift to state 41
-- On symbol shift to state 51
-- On patterns shift to state 60
-- On pattern shift to state 59
-- On Code reduce production patterns ->

State 60:
patterns -> pattern patterns . [ Code ]
-- On Code reduce production patterns -> pattern patterns

State 61:
simple_branch -> symbol patterns . Code opt_error_handler [ Separator Lname Alt ]
-- On Code shift to state 62

State 62:
simple_branch -> symbol patterns Code . opt_error_handler [ Separator Lname Alt ]
-- On Error shift to state 56
-- On opt_error_handler shift to state 63
-- On Separator reduce production opt_error_handler ->
-- On Lname reduce production opt_error_handler ->
-- On Alt reduce production opt_error_handler ->

State 63:
simple_branch -> symbol patterns Code opt_error_handler . [ Separator Lname Alt ]
-- On Separator reduce production simple_branch -> symbol patterns Code opt_error_handler
-- On Lname reduce production simple_branch -> symbol patterns Code opt_error_handler
-- On Alt reduce production simple_branch -> symbol patterns Code opt_error_handler

State 64:
branch -> Dollar Code simple_branch . [ Separator Lname Alt ]
-- On Separator reduce production branch -> Dollar Code simple_branch
-- On Lname reduce production branch -> Dollar Code simple_branch
-- On Alt reduce production branch -> Dollar Code simple_branch

State 65:
branch -> simple_branch . [ Separator Lname Alt ]
-- On Separator reduce production branch -> simple_branch
-- On Lname reduce production branch -> simple_branch
-- On Alt reduce production branch -> simple_branch

State 66:
rule -> Lname Lparen formal_arguments Colon branches . [ Separator Lname ]
-- On Separator reduce production rule -> Lname Lparen formal_arguments Colon branches
-- On Lname reduce production rule -> Lname Lparen formal_arguments Colon branches

State 67:
branches -> branch . alt_branches [ Separator Lname ]
-- On Alt shift to state 68
-- On alt_branches shift to state 71
-- On Separator reduce production alt_branches ->
-- On Lname reduce production alt_branches ->

State 68:
alt_branches -> Alt . branch alt_branches [ Separator Lname ]
-- On Uname shift to state 20
-- On Lname shift to state 21
-- On Lbracket shift to state 41
-- On Dollar shift to state 46
-- On symbol shift to state 48
-- On simple_branch shift to state 65
-- On branch shift to state 69

State 69:
alt_branches -> Alt branch . alt_branches [ Separator Lname ]
-- On Alt shift to state 68
-- On alt_branches shift to state 70
-- On Separator reduce production alt_branches ->
-- On Lname reduce production alt_branches ->

State 70:
alt_branches -> Alt branch alt_branches . [ Separator Lname ]
-- On Separator reduce production alt_branches -> Alt branch alt_branches
-- On Lname reduce production alt_branches -> Alt branch alt_branches

State 71:
branches -> branch alt_branches . [ Separator Lname ]
-- On Separator reduce production branches -> branch alt_branches
-- On Lname reduce production branches -> branch alt_branches

State 72:
text -> declarations rules . [ # ]
-- On # reduce production text -> declarations rules

State 73:
rules -> rule . rules [ # ]
-- On Separator shift to state 8
-- On Lname shift to state 9
-- On rules shift to state 74
-- On rule shift to state 73

State 74:
rules -> rule rules . [ # ]
-- On # reduce production rules -> rule rules

State 75:
declarations -> declaration . declarations [ Separator Lname ]
-- On Token shift to state 1
-- On Separator shift to state 5
-- On declarations shift to state 76
-- On declaration shift to state 75

State 76:
declarations -> declaration declarations . [ Separator Lname ]
-- On Separator reduce production declarations -> declaration declarations
-- On Lname reduce production declarations -> declaration declarations

