File "pxp-m2parsergen.mly", line 28, characters 22-25:
Warning: the token Eof is unused.
File "pxp-m2parsergen.mly", line 24, characters 7-16:
Warning: the token Loop_plus is unused.
File "pxp-m2parsergen.mly", line 11, characters 7-12:
Warning: the token Space is unused.
Grammar has 17 nonterminal symbols, among which 1 start symbols.
Grammar has 19 terminal symbols.
Grammar has 36 productions.
nullable(text) = false
nullable(symbol) = false
nullable(simple_branch) = false
nullable(rules) = false
nullable(rule) = false
nullable(patterns) = true
nullable(pattern) = false
nullable(opt_error_handler) = true
nullable(formal_arguments) = false
nullable(declarations) = false
nullable(declaration) = false
nullable(comma_formal_arguments) = false
nullable(comma_actual_arguments) = false
nullable(branches) = false
nullable(branch) = false
nullable(alt_branches) = true
nullable(actual_arguments) = false
first(text) = Token Separator
first(symbol) = Uname Lname Lbracket
first(simple_branch) = Uname Lname Lbracket
first(rules) = Separator Lname
first(rule) = Lname
first(patterns) = Uname Lname Lbracket
first(pattern) = Uname Lname Lbracket
first(opt_error_handler) = Error
first(formal_arguments) = Rparen Lname
first(declarations) = Token Separator
first(declaration) = Token
first(comma_formal_arguments) = Rparen Comma
first(comma_actual_arguments) = Rparen Comma
first(branches) = Uname Lname Lbracket Dollar
first(branch) = Uname Lname Lbracket Dollar
first(alt_branches) = Alt
first(actual_arguments) = Rparen Lname
minimal(text) = (* 2 *) Separator Separator
minimal(symbol) = (* 1 *) Uname
minimal(simple_branch) = (* 2 *) Uname Code
minimal(rules) = (* 1 *) Separator
minimal(rule) = (* 6 *) Lname Lparen Rparen Colon Uname Code
minimal(patterns) = (* 0 *)
minimal(pattern) = (* 1 *) Uname
minimal(opt_error_handler) = (* 0 *)
minimal(formal_arguments) = (* 1 *) Rparen
minimal(declarations) = (* 1 *) Separator
minimal(declaration) = (* 2 *) Token Uname
minimal(comma_formal_arguments) = (* 1 *) Rparen
minimal(comma_actual_arguments) = (* 1 *) Rparen
minimal(branches) = (* 2 *) Uname Code
minimal(branch) = (* 2 *) Uname Code
minimal(alt_branches) = (* 0 *)
minimal(actual_arguments) = (* 1 *) Rparen
follow(text) = #
follow(symbol) = Uname Loop_star Lname Lbracket Error Dollar Code
follow(simple_branch) = Separator Lname Alt
follow(rules) = #
follow(rule) = Separator Lname
follow(patterns) = Code
follow(pattern) = Uname Lname Lbracket Code
follow(opt_error_handler) = Separator Lname Alt
follow(formal_arguments) = Colon
follow(declarations) = Separator Lname
follow(declaration) = Token Separator
follow(comma_formal_arguments) = Colon
follow(comma_actual_arguments) = Uname Loop_star Lname Lbracket Error Dollar Code
follow(branches) = Separator Lname
follow(branch) = Separator Lname Alt
follow(alt_branches) = Separator Lname
follow(actual_arguments) = Uname Loop_star Lname Lbracket Error Dollar Code
Built an LR(0) automaton with 77 states.
The grammar is SLR(1).
The construction mode is pager.
Built an LR(1) automaton with 77 states.
33 out of 77 states have a default reduction.
22 out of 77 states are represented.
0 out of 39 symbols keep track of their start position.
0 out of 39 symbols keep track of their end position.
31 out of 37 productions exploit shiftreduce optimization.
0 out of 77 states can peek at an error.
213 functions before inlining, 37 functions after inlining.
