Grammar has 4 nonterminal symbols, among which 1 start symbols.
Grammar has 10 terminal symbols.
Grammar has 8 productions.
nullable(regexptoken) = false
nullable(regexp) = false
nullable(main) = false
nullable(declaration) = false
first(regexptoken) = LBRACKET IDENT CHAR
first(regexp) = LBRACKET IDENT CHAR
first(main) = LET EOF
first(declaration) = LET
minimal(regexptoken) = (* 1 *) CHAR
minimal(regexp) = (* 1 *) CHAR
minimal(main) = (* 1 *) EOF
minimal(declaration) = (* 5 *) LET IDENT EQ CHAR END_OF_LET
maximal(regexptoken) = 5
maximal(regexp) = infinity
maximal(main) = infinity
maximal(declaration) = infinity
follow(regexptoken) = PIPE END_OF_LET
follow(regexp) = END_OF_LET
follow(main) = #
follow(declaration) = LET EOF
Built an LR(0) automaton with 20 states.
The grammar is SLR(1).
The construction mode is pager.
Built an LR(1) automaton with 20 states.
8 out of 20 states have a default reduction.
The action table is 220 entries; 19 non-zero; 34 compressed.
The action table occupies roughly 128 bytes.
The goto table is 100 entries; 8 non-zero; 28 compressed.
The goto table occupies roughly 112 bytes.
The error table occupies roughly 64 bytes.
The default_reduction table occupies roughly 48 bytes.
The lhs table occupies roughly 40 bytes.
The trace table occupies roughly 8 bytes.
