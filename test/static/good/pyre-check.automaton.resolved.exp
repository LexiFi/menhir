State 0:
## Known stack suffix:
##
## LR(1) items:
parse' -> . parse [ # ]
## Transitions:
-- On YIELD shift to state 1
-- On WITH shift to state 220
-- On WHILE shift to state 390
-- On TRY shift to state 398
-- On TRUE shift to state 4
-- On TILDE shift to state 5
-- On STRING shift to state 6
-- On RETURN shift to state 234
-- On RAISE shift to state 236
-- On PLUS shift to state 12
-- On PASS shift to state 242
-- On NOT shift to state 17
-- On NONLOCAL shift to state 243
-- On NEWLINE shift to state 430
-- On MINUS shift to state 14
-- On LEFTPARENS shift to state 15
-- On LEFTCURLY shift to state 18
-- On LEFTBRACKET shift to state 20
-- On LAMBDA shift to state 21
-- On INTEGER shift to state 22
-- On IMPORT shift to state 253
-- On IF shift to state 431
-- On IDENTIFIER shift to state 23
-- On GLOBAL shift to state 276
-- On FROM shift to state 278
-- On FORMAT shift to state 24
-- On FOR shift to state 439
-- On FLOAT shift to state 26
-- On FALSE shift to state 27
-- On ELLIPSES shift to state 28
-- On DELETE shift to state 291
-- On DEFINE shift to state 447
-- On CONTINUE shift to state 293
-- On COMPLEX shift to state 29
-- On CLASS shift to state 493
-- On BYTES shift to state 30
-- On BREAK shift to state 294
-- On AWAIT shift to state 32
-- On AT shift to state 502
-- On ASYNC shift to state 509
-- On ASTERIKS shift to state 34
-- On ASSERT shift to state 295
-- On yield shift to state 299
-- On test_list shift to state 300
-- On test shift to state 75
-- On targets shift to state 336
-- On statements shift to state 529
-- On statement shift to state 514
-- On small_statement shift to state 348
-- On simple_statement shift to state 516
-- On set_or_dictionary shift to state 35
-- On separated_nonempty_list_indicator(COMMA,test) shift to state 80
-- On parser_generator_separated_nonempty_list_of_lists(SEMICOLON,small_statement) shift to state 386
-- On parse shift to state 531
-- On or_test shift to state 62
-- On not_test shift to state 49
-- On nonempty_list(decorator) shift to state 517
-- On nonempty_list(BYTES) shift to state 36
-- On identifier shift to state 67
-- On expression shift to state 353
-- On decorator shift to state 521
-- On decorated_statement shift to state 523
-- On compound_statement shift to state 524
-- On comparison shift to state 70
-- On atom shift to state 71
-- On async_statement shift to state 525
-- On and_test shift to state 72
## Reductions:
-- On EOF
--   reduce production statements ->

State 1:
## Known stack suffix:
## YIELD
## LR(1) items:
yield -> YIELD . option(FROM) option(test_list) [ SEMICOLON RIGHTPARENS NEWLINE ANNOTATION_COMMENT ]
## Transitions:
-- On FROM shift to state 2
-- On option(FROM) shift to state 3
## Reductions:
-- On TRUE TILDE STRING SEMICOLON RIGHTPARENS PLUS NOT NEWLINE MINUS LEFTPARENS LEFTCURLY LEFTBRACKET LAMBDA INTEGER IDENTIFIER FORMAT FLOAT FALSE ELLIPSES COMPLEX BYTES AWAIT ASYNC ASTERIKS ANNOTATION_COMMENT
--   reduce production option(FROM) ->

State 2:
## Known stack suffix:
## FROM
## LR(1) items:
option(FROM) -> FROM . [ TRUE TILDE STRING SEMICOLON RIGHTPARENS PLUS NOT NEWLINE MINUS LEFTPARENS LEFTCURLY LEFTBRACKET LAMBDA INTEGER IDENTIFIER FORMAT FLOAT FALSE ELLIPSES COMPLEX BYTES AWAIT ASYNC ASTERIKS ANNOTATION_COMMENT ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production option(FROM) -> FROM

State 3:
## Known stack suffix:
## YIELD option(FROM)
## LR(1) items:
yield -> YIELD option(FROM) . option(test_list) [ SEMICOLON RIGHTPARENS NEWLINE ANNOTATION_COMMENT ]
## Transitions:
-- On TRUE shift to state 4
-- On TILDE shift to state 5
-- On STRING shift to state 6
-- On PLUS shift to state 12
-- On NOT shift to state 17
-- On MINUS shift to state 14
-- On LEFTPARENS shift to state 15
-- On LEFTCURLY shift to state 18
-- On LEFTBRACKET shift to state 20
-- On LAMBDA shift to state 21
-- On INTEGER shift to state 22
-- On IDENTIFIER shift to state 23
-- On FORMAT shift to state 24
-- On FLOAT shift to state 26
-- On FALSE shift to state 27
-- On ELLIPSES shift to state 28
-- On COMPLEX shift to state 29
-- On BYTES shift to state 30
-- On AWAIT shift to state 32
-- On ASYNC shift to state 33
-- On ASTERIKS shift to state 34
-- On test_list shift to state 218
-- On test shift to state 75
-- On set_or_dictionary shift to state 35
-- On separated_nonempty_list_indicator(COMMA,test) shift to state 80
-- On or_test shift to state 62
-- On option(test_list) shift to state 219
-- On not_test shift to state 49
-- On nonempty_list(BYTES) shift to state 36
-- On identifier shift to state 67
-- On expression shift to state 51
-- On comparison shift to state 70
-- On atom shift to state 71
-- On and_test shift to state 72
## Reductions:
-- On SEMICOLON RIGHTPARENS NEWLINE ANNOTATION_COMMENT
--   reduce production option(test_list) ->

State 4:
## Known stack suffix:
## TRUE
## LR(1) items:
atom -> TRUE . [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production atom -> TRUE

State 5:
## Known stack suffix:
## TILDE
## LR(1) items:
atom -> TILDE . expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
## Transitions:
-- On TRUE shift to state 4
-- On TILDE shift to state 5
-- On STRING shift to state 6
-- On PLUS shift to state 12
-- On NOT shift to state 13
-- On MINUS shift to state 14
-- On LEFTPARENS shift to state 15
-- On LEFTCURLY shift to state 18
-- On LEFTBRACKET shift to state 20
-- On INTEGER shift to state 22
-- On IDENTIFIER shift to state 23
-- On FORMAT shift to state 24
-- On FLOAT shift to state 26
-- On FALSE shift to state 27
-- On ELLIPSES shift to state 28
-- On COMPLEX shift to state 29
-- On BYTES shift to state 30
-- On AWAIT shift to state 32
-- On ASYNC shift to state 33
-- On ASTERIKS shift to state 34
-- On set_or_dictionary shift to state 35
-- On nonempty_list(BYTES) shift to state 36
-- On identifier shift to state 37
-- On expression shift to state 217
-- On atom shift to state 71
## Reductions:

State 6:
## Known stack suffix:
## STRING
## LR(1) items:
atom -> STRING . mixed_string [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
## Transitions:
-- On STRING shift to state 7
-- On FORMAT shift to state 8
-- On mixed_string shift to state 11
## Reductions:
-- On SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND
--   reduce production mixed_string ->

State 7:
## Known stack suffix:
## STRING
## LR(1) items:
mixed_string -> STRING . mixed_string [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
## Transitions:
-- On STRING shift to state 7
-- On FORMAT shift to state 8
-- On mixed_string shift to state 10
## Reductions:
-- On SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND
--   reduce production mixed_string ->

State 8:
## Known stack suffix:
## FORMAT
## LR(1) items:
mixed_string -> FORMAT . mixed_string [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
## Transitions:
-- On STRING shift to state 7
-- On FORMAT shift to state 8
-- On mixed_string shift to state 9
## Reductions:
-- On SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND
--   reduce production mixed_string ->

State 9:
## Known stack suffix:
## FORMAT mixed_string
## LR(1) items:
mixed_string -> FORMAT mixed_string . [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production mixed_string -> FORMAT mixed_string

State 10:
## Known stack suffix:
## STRING mixed_string
## LR(1) items:
mixed_string -> STRING mixed_string . [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production mixed_string -> STRING mixed_string

State 11:
## Known stack suffix:
## STRING mixed_string
## LR(1) items:
atom -> STRING mixed_string . [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production atom -> STRING mixed_string

State 12:
## Known stack suffix:
## PLUS
## LR(1) items:
atom -> PLUS . expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
## Transitions:
-- On TRUE shift to state 4
-- On TILDE shift to state 5
-- On STRING shift to state 6
-- On PLUS shift to state 12
-- On NOT shift to state 13
-- On MINUS shift to state 14
-- On LEFTPARENS shift to state 15
-- On LEFTCURLY shift to state 18
-- On LEFTBRACKET shift to state 20
-- On INTEGER shift to state 22
-- On IDENTIFIER shift to state 23
-- On FORMAT shift to state 24
-- On FLOAT shift to state 26
-- On FALSE shift to state 27
-- On ELLIPSES shift to state 28
-- On COMPLEX shift to state 29
-- On BYTES shift to state 30
-- On AWAIT shift to state 32
-- On ASYNC shift to state 33
-- On ASTERIKS shift to state 34
-- On set_or_dictionary shift to state 35
-- On nonempty_list(BYTES) shift to state 36
-- On identifier shift to state 37
-- On expression shift to state 216
-- On atom shift to state 71
## Reductions:

State 13:
## Known stack suffix:
## NOT
## LR(1) items:
atom -> NOT . expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
## Transitions:
-- On TRUE shift to state 4
-- On TILDE shift to state 5
-- On STRING shift to state 6
-- On PLUS shift to state 12
-- On NOT shift to state 13
-- On MINUS shift to state 14
-- On LEFTPARENS shift to state 15
-- On LEFTCURLY shift to state 18
-- On LEFTBRACKET shift to state 20
-- On INTEGER shift to state 22
-- On IDENTIFIER shift to state 23
-- On FORMAT shift to state 24
-- On FLOAT shift to state 26
-- On FALSE shift to state 27
-- On ELLIPSES shift to state 28
-- On COMPLEX shift to state 29
-- On BYTES shift to state 30
-- On AWAIT shift to state 32
-- On ASYNC shift to state 33
-- On ASTERIKS shift to state 34
-- On set_or_dictionary shift to state 35
-- On nonempty_list(BYTES) shift to state 36
-- On identifier shift to state 37
-- On expression shift to state 215
-- On atom shift to state 71
## Reductions:

State 14:
## Known stack suffix:
## MINUS
## LR(1) items:
atom -> MINUS . expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
## Transitions:
-- On TRUE shift to state 4
-- On TILDE shift to state 5
-- On STRING shift to state 6
-- On PLUS shift to state 12
-- On NOT shift to state 13
-- On MINUS shift to state 14
-- On LEFTPARENS shift to state 15
-- On LEFTCURLY shift to state 18
-- On LEFTBRACKET shift to state 20
-- On INTEGER shift to state 22
-- On IDENTIFIER shift to state 23
-- On FORMAT shift to state 24
-- On FLOAT shift to state 26
-- On FALSE shift to state 27
-- On ELLIPSES shift to state 28
-- On COMPLEX shift to state 29
-- On BYTES shift to state 30
-- On AWAIT shift to state 32
-- On ASYNC shift to state 33
-- On ASTERIKS shift to state 34
-- On set_or_dictionary shift to state 35
-- On nonempty_list(BYTES) shift to state 36
-- On identifier shift to state 37
-- On expression shift to state 214
-- On atom shift to state 71
## Reductions:

State 15:
## Known stack suffix:
## LEFTPARENS
## LR(1) items:
expression -> LEFTPARENS . RIGHTPARENS [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
expression -> LEFTPARENS . test_list RIGHTPARENS [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
expression -> LEFTPARENS . generator RIGHTPARENS [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
expression -> LEFTPARENS . yield RIGHTPARENS [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
## Transitions:
-- On YIELD shift to state 1
-- On TRUE shift to state 4
-- On TILDE shift to state 5
-- On STRING shift to state 6
-- On RIGHTPARENS shift to state 16
-- On PLUS shift to state 12
-- On NOT shift to state 17
-- On MINUS shift to state 14
-- On LEFTPARENS shift to state 15
-- On LEFTCURLY shift to state 18
-- On LEFTBRACKET shift to state 20
-- On LAMBDA shift to state 21
-- On INTEGER shift to state 22
-- On IDENTIFIER shift to state 23
-- On FORMAT shift to state 24
-- On FLOAT shift to state 26
-- On FALSE shift to state 27
-- On ELLIPSES shift to state 28
-- On COMPLEX shift to state 29
-- On BYTES shift to state 30
-- On AWAIT shift to state 32
-- On ASYNC shift to state 33
-- On ASTERIKS shift to state 34
-- On yield shift to state 207
-- On test_list shift to state 209
-- On test shift to state 211
-- On set_or_dictionary shift to state 35
-- On separated_nonempty_list_indicator(COMMA,test) shift to state 80
-- On or_test shift to state 62
-- On not_test shift to state 49
-- On nonempty_list(BYTES) shift to state 36
-- On identifier shift to state 67
-- On generator shift to state 212
-- On expression shift to state 51
-- On comparison shift to state 70
-- On atom shift to state 71
-- On and_test shift to state 72
## Reductions:

State 16:
## Known stack suffix:
## LEFTPARENS RIGHTPARENS
## LR(1) items:
expression -> LEFTPARENS RIGHTPARENS . [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production expression -> LEFTPARENS RIGHTPARENS

State 17:
## Known stack suffix:
## NOT
## LR(1) items:
atom -> NOT . expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
not_test -> NOT . not_test [ SLASHSLASHEQUALS SLASHEQUALS SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS PLUSEQUALS PERCENTEQUALS OR NEWLINE MINUSEQUALS LEFTANGLELEFTANGLEEQUALS IF HATEQUALS FROM FOR EQUALS ELSE COMMA COLON BAREQUALS ATEQUALS ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS ]
## Transitions:
-- On TRUE shift to state 4
-- On TILDE shift to state 5
-- On STRING shift to state 6
-- On PLUS shift to state 12
-- On NOT shift to state 17
-- On MINUS shift to state 14
-- On LEFTPARENS shift to state 15
-- On LEFTCURLY shift to state 18
-- On LEFTBRACKET shift to state 20
-- On INTEGER shift to state 22
-- On IDENTIFIER shift to state 23
-- On FORMAT shift to state 24
-- On FLOAT shift to state 26
-- On FALSE shift to state 27
-- On ELLIPSES shift to state 28
-- On COMPLEX shift to state 29
-- On BYTES shift to state 30
-- On AWAIT shift to state 32
-- On ASYNC shift to state 33
-- On ASTERIKS shift to state 34
-- On set_or_dictionary shift to state 35
-- On not_test shift to state 205
-- On nonempty_list(BYTES) shift to state 36
-- On identifier shift to state 37
-- On expression shift to state 206
-- On comparison shift to state 70
-- On atom shift to state 71
## Reductions:

State 18:
## Known stack suffix:
## LEFTCURLY
## LR(1) items:
atom -> LEFTCURLY . test nonempty_list(comprehension) RIGHTCURLY [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
set_or_dictionary -> LEFTCURLY . RIGHTCURLY [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
set_or_dictionary -> LEFTCURLY . set_or_dictionary_maker option(COMMA) RIGHTCURLY [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
## Transitions:
-- On TRUE shift to state 4
-- On TILDE shift to state 5
-- On STRING shift to state 6
-- On RIGHTCURLY shift to state 19
-- On PLUS shift to state 12
-- On NOT shift to state 17
-- On MINUS shift to state 14
-- On LEFTPARENS shift to state 15
-- On LEFTCURLY shift to state 18
-- On LEFTBRACKET shift to state 20
-- On LAMBDA shift to state 21
-- On INTEGER shift to state 22
-- On IDENTIFIER shift to state 23
-- On FORMAT shift to state 24
-- On FLOAT shift to state 26
-- On FALSE shift to state 27
-- On ELLIPSES shift to state 28
-- On COMPLEX shift to state 29
-- On BYTES shift to state 30
-- On AWAIT shift to state 32
-- On ASYNC shift to state 33
-- On ASTERIKS shift to state 34
-- On test shift to state 192
-- On set_or_dictionary_maker shift to state 197
-- On set_or_dictionary_entry shift to state 204
-- On set_or_dictionary shift to state 35
-- On or_test shift to state 62
-- On not_test shift to state 49
-- On nonempty_list(BYTES) shift to state 36
-- On identifier shift to state 67
-- On expression shift to state 51
-- On comparison shift to state 70
-- On atom shift to state 71
-- On and_test shift to state 72
## Reductions:

State 19:
## Known stack suffix:
## LEFTCURLY RIGHTCURLY
## LR(1) items:
set_or_dictionary -> LEFTCURLY RIGHTCURLY . [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production set_or_dictionary -> LEFTCURLY RIGHTCURLY

State 20:
## Known stack suffix:
## LEFTBRACKET
## LR(1) items:
atom -> LEFTBRACKET . parser_generator_separated_list(COMMA,test) RIGHTBRACKET [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> LEFTBRACKET . test nonempty_list(comprehension) RIGHTBRACKET [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
## Transitions:
-- On TRUE shift to state 4
-- On TILDE shift to state 5
-- On STRING shift to state 6
-- On PLUS shift to state 12
-- On NOT shift to state 17
-- On MINUS shift to state 14
-- On LEFTPARENS shift to state 15
-- On LEFTCURLY shift to state 18
-- On LEFTBRACKET shift to state 20
-- On LAMBDA shift to state 21
-- On INTEGER shift to state 22
-- On IDENTIFIER shift to state 23
-- On FORMAT shift to state 24
-- On FLOAT shift to state 26
-- On FALSE shift to state 27
-- On ELLIPSES shift to state 28
-- On COMPLEX shift to state 29
-- On BYTES shift to state 30
-- On AWAIT shift to state 32
-- On ASYNC shift to state 33
-- On ASTERIKS shift to state 34
-- On test shift to state 184
-- On set_or_dictionary shift to state 35
-- On parser_generator_separated_list(COMMA,test) shift to state 190
-- On or_test shift to state 62
-- On not_test shift to state 49
-- On nonempty_list(BYTES) shift to state 36
-- On identifier shift to state 67
-- On expression shift to state 51
-- On comparison shift to state 70
-- On atom shift to state 71
-- On and_test shift to state 72
## Reductions:
-- On RIGHTBRACKET
--   reduce production parser_generator_separated_list(COMMA,test) ->

State 21:
## Known stack suffix:
## LAMBDA
## LR(1) items:
test -> LAMBDA . parser_generator_separated_list(COMMA,lambda_parameter) COLON test [ SLASHSLASHEQUALS SLASHEQUALS SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS PLUSEQUALS PERCENTEQUALS NEWLINE MINUSEQUALS LEFTANGLELEFTANGLEEQUALS HATEQUALS FROM FOR EQUALS ELSE COMMA COLON BAREQUALS ATEQUALS ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS AS ANNOTATION_COMMENT AMPERSANDEQUALS ]
## Transitions:
-- On TRUE shift to state 4
-- On TILDE shift to state 5
-- On STRING shift to state 6
-- On PLUS shift to state 12
-- On NOT shift to state 13
-- On MINUS shift to state 14
-- On LEFTPARENS shift to state 15
-- On LEFTCURLY shift to state 18
-- On LEFTBRACKET shift to state 20
-- On INTEGER shift to state 22
-- On IDENTIFIER shift to state 23
-- On FORMAT shift to state 24
-- On FLOAT shift to state 26
-- On FALSE shift to state 27
-- On ELLIPSES shift to state 28
-- On COMPLEX shift to state 29
-- On BYTES shift to state 30
-- On AWAIT shift to state 32
-- On ASYNC shift to state 33
-- On ASTERIKS shift to state 171
-- On set_or_dictionary shift to state 35
-- On parser_generator_separated_list(COMMA,lambda_parameter) shift to state 181
-- On nonempty_list(BYTES) shift to state 36
-- On identifier shift to state 37
-- On expression shift to state 174
-- On atom shift to state 71
## Reductions:
-- On COLON
--   reduce production parser_generator_separated_list(COMMA,lambda_parameter) ->

State 22:
## Known stack suffix:
## INTEGER
## LR(1) items:
atom -> INTEGER . [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production atom -> INTEGER

State 23:
## Known stack suffix:
## IDENTIFIER
## LR(1) items:
identifier -> IDENTIFIER . [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IMPORT IF IDENTIFIER HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE ELLIPSES DOUBLEEQUALS DOT COMMA COLONEQUALS COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production identifier -> IDENTIFIER

State 24:
## Known stack suffix:
## FORMAT
## LR(1) items:
atom -> FORMAT . mixed_string [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
## Transitions:
-- On STRING shift to state 7
-- On FORMAT shift to state 8
-- On mixed_string shift to state 25
## Reductions:
-- On SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND
--   reduce production mixed_string ->

State 25:
## Known stack suffix:
## FORMAT mixed_string
## LR(1) items:
atom -> FORMAT mixed_string . [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production atom -> FORMAT mixed_string

State 26:
## Known stack suffix:
## FLOAT
## LR(1) items:
atom -> FLOAT . [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production atom -> FLOAT

State 27:
## Known stack suffix:
## FALSE
## LR(1) items:
atom -> FALSE . [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production atom -> FALSE

State 28:
## Known stack suffix:
## ELLIPSES
## LR(1) items:
atom -> ELLIPSES . [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production atom -> ELLIPSES

State 29:
## Known stack suffix:
## COMPLEX
## LR(1) items:
atom -> COMPLEX . [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production atom -> COMPLEX

State 30:
## Known stack suffix:
## BYTES
## LR(1) items:
nonempty_list(BYTES) -> BYTES . [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
nonempty_list(BYTES) -> BYTES . nonempty_list(BYTES) [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
## Transitions:
-- On BYTES shift to state 30
-- On nonempty_list(BYTES) shift to state 31
## Reductions:
-- On SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND
--   reduce production nonempty_list(BYTES) -> BYTES

State 31:
## Known stack suffix:
## BYTES nonempty_list(BYTES)
## LR(1) items:
nonempty_list(BYTES) -> BYTES nonempty_list(BYTES) . [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production nonempty_list(BYTES) -> BYTES nonempty_list(BYTES)

State 32:
## Known stack suffix:
## AWAIT
## LR(1) items:
expression -> AWAIT . expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
## Transitions:
-- On TRUE shift to state 4
-- On TILDE shift to state 5
-- On STRING shift to state 6
-- On PLUS shift to state 12
-- On NOT shift to state 13
-- On MINUS shift to state 14
-- On LEFTPARENS shift to state 15
-- On LEFTCURLY shift to state 18
-- On LEFTBRACKET shift to state 20
-- On INTEGER shift to state 22
-- On IDENTIFIER shift to state 23
-- On FORMAT shift to state 24
-- On FLOAT shift to state 26
-- On FALSE shift to state 27
-- On ELLIPSES shift to state 28
-- On COMPLEX shift to state 29
-- On BYTES shift to state 30
-- On AWAIT shift to state 32
-- On ASYNC shift to state 33
-- On ASTERIKS shift to state 34
-- On set_or_dictionary shift to state 35
-- On nonempty_list(BYTES) shift to state 36
-- On identifier shift to state 37
-- On expression shift to state 170
-- On atom shift to state 71
## Reductions:

State 33:
## Known stack suffix:
## ASYNC
## LR(1) items:
identifier -> ASYNC . [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IMPORT IF IDENTIFIER HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE ELLIPSES DOUBLEEQUALS DOT COMMA COLONEQUALS COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production identifier -> ASYNC

State 34:
## Known stack suffix:
## ASTERIKS
## LR(1) items:
atom -> ASTERIKS . expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
## Transitions:
-- On TRUE shift to state 4
-- On TILDE shift to state 5
-- On STRING shift to state 6
-- On PLUS shift to state 12
-- On NOT shift to state 13
-- On MINUS shift to state 14
-- On LEFTPARENS shift to state 15
-- On LEFTCURLY shift to state 18
-- On LEFTBRACKET shift to state 20
-- On INTEGER shift to state 22
-- On IDENTIFIER shift to state 23
-- On FORMAT shift to state 24
-- On FLOAT shift to state 26
-- On FALSE shift to state 27
-- On ELLIPSES shift to state 28
-- On COMPLEX shift to state 29
-- On BYTES shift to state 30
-- On AWAIT shift to state 32
-- On ASYNC shift to state 33
-- On ASTERIKS shift to state 34
-- On set_or_dictionary shift to state 35
-- On nonempty_list(BYTES) shift to state 36
-- On identifier shift to state 37
-- On expression shift to state 38
-- On atom shift to state 71
## Reductions:

State 35:
## Known stack suffix:
## set_or_dictionary
## LR(1) items:
atom -> set_or_dictionary . [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production atom -> set_or_dictionary

State 36:
## Known stack suffix:
## nonempty_list(BYTES)
## LR(1) items:
atom -> nonempty_list(BYTES) . [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production atom -> nonempty_list(BYTES)

State 37:
## Known stack suffix:
## identifier
## LR(1) items:
atom -> identifier . [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production atom -> identifier

State 38:
## Known stack suffix:
## ASTERIKS expression
## LR(1) items:
atom -> expression . PLUS expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . AT expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . AMPERSAND expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . BAR expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . HAT expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . SLASH SLASH expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . SLASH expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . LEFTANGLELEFTANGLE expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . PERCENT expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . ASTERIKS ASTERIKS expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . ASTERIKS expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . RIGHTANGLERIGHTANGLE expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . MINUS expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . LEFTPARENS arguments RIGHTPARENS [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> ASTERIKS expression . [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
expression -> expression . DOT identifier [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
expression -> expression . LEFTBRACKET parser_generator_separated_nonempty_list(COMMA,subscript_key) RIGHTBRACKET [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
## Transitions:
-- On LEFTPARENS shift to state 39
-- On LEFTBRACKET shift to state 55
-- On DOT shift to state 90
-- On AT shift to state 92
## Reductions:
-- On SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS COMMA COLON BAREQUALS BAR ATEQUALS ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND
--   reduce production atom -> ASTERIKS expression

State 39:
## Known stack suffix:
## expression LEFTPARENS
## LR(1) items:
atom -> expression LEFTPARENS . arguments RIGHTPARENS [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
## Transitions:
-- On TRUE shift to state 4
-- On TILDE shift to state 5
-- On STRING shift to state 6
-- On PLUS shift to state 12
-- On NOT shift to state 17
-- On MINUS shift to state 14
-- On LEFTPARENS shift to state 15
-- On LEFTCURLY shift to state 18
-- On LEFTBRACKET shift to state 20
-- On LAMBDA shift to state 21
-- On INTEGER shift to state 22
-- On IDENTIFIER shift to state 23
-- On FORMAT shift to state 24
-- On FLOAT shift to state 26
-- On FALSE shift to state 27
-- On ELLIPSES shift to state 28
-- On COMPLEX shift to state 29
-- On BYTES shift to state 30
-- On AWAIT shift to state 32
-- On ASYNC shift to state 33
-- On ASTERIKS shift to state 34
-- On test_with_generator shift to state 40
-- On test shift to state 41
-- On set_or_dictionary shift to state 35
-- On parser_generator_separated_list(COMMA,argument) shift to state 158
-- On or_test shift to state 62
-- On not_test shift to state 49
-- On nonempty_list(BYTES) shift to state 36
-- On identifier shift to state 159
-- On generator shift to state 162
-- On expression shift to state 51
-- On comparison shift to state 70
-- On atom shift to state 71
-- On arguments shift to state 164
-- On argument shift to state 166
-- On and_test shift to state 72
## Reductions:
-- On RIGHTPARENS
--   reduce production parser_generator_separated_list(COMMA,argument) ->

State 40:
## Known stack suffix:
## test_with_generator
## LR(1) items:
arguments -> test_with_generator . [ RIGHTPARENS ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production arguments -> test_with_generator

State 41:
## Known stack suffix:
## test
## LR(1) items:
argument -> test . [ RIGHTPARENS COMMA ]
generator -> test . nonempty_list(comprehension) [ RIGHTPARENS COMMA ]
test_with_generator -> test . [ RIGHTPARENS ]
## Transitions:
-- On FOR shift to state 42
-- On ASYNC shift to state 149
-- On nonempty_list(comprehension) shift to state 155
-- On comprehension shift to state 156
## Reductions:
-- On COMMA
--   reduce production argument -> test
-- On RIGHTPARENS
--   reduce production test_with_generator -> test

State 42:
## Known stack suffix:
## FOR
## LR(1) items:
comprehension -> FOR . expression_list IN or_test list(condition) [ RIGHTPARENS RIGHTCURLY RIGHTBRACKET FOR COMMA ASYNC ]
## Transitions:
-- On TRUE shift to state 4
-- On TILDE shift to state 5
-- On STRING shift to state 6
-- On PLUS shift to state 12
-- On NOT shift to state 13
-- On MINUS shift to state 14
-- On LEFTPARENS shift to state 15
-- On LEFTCURLY shift to state 18
-- On LEFTBRACKET shift to state 20
-- On INTEGER shift to state 22
-- On IDENTIFIER shift to state 23
-- On FORMAT shift to state 24
-- On FLOAT shift to state 26
-- On FALSE shift to state 27
-- On ELLIPSES shift to state 28
-- On COMPLEX shift to state 29
-- On BYTES shift to state 30
-- On AWAIT shift to state 32
-- On ASYNC shift to state 33
-- On ASTERIKS shift to state 34
-- On set_or_dictionary shift to state 35
-- On separated_nonempty_list_indicator(COMMA,expression) shift to state 43
-- On nonempty_list(BYTES) shift to state 36
-- On identifier shift to state 37
-- On expression_list shift to state 44
-- On expression shift to state 144
-- On atom shift to state 71
## Reductions:

State 43:
## Known stack suffix:
## separated_nonempty_list_indicator(COMMA,expression)
## LR(1) items:
expression_list -> separated_nonempty_list_indicator(COMMA,expression) . [ SEMICOLON NEWLINE IN ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production expression_list -> separated_nonempty_list_indicator(COMMA,expression)

State 44:
## Known stack suffix:
## FOR expression_list
## LR(1) items:
comprehension -> FOR expression_list . IN or_test list(condition) [ RIGHTPARENS RIGHTCURLY RIGHTBRACKET FOR COMMA ASYNC ]
## Transitions:
-- On IN shift to state 45
## Reductions:

State 45:
## Known stack suffix:
## FOR expression_list IN
## LR(1) items:
comprehension -> FOR expression_list IN . or_test list(condition) [ RIGHTPARENS RIGHTCURLY RIGHTBRACKET FOR COMMA ASYNC ]
## Transitions:
-- On TRUE shift to state 4
-- On TILDE shift to state 5
-- On STRING shift to state 6
-- On PLUS shift to state 12
-- On NOT shift to state 17
-- On MINUS shift to state 14
-- On LEFTPARENS shift to state 15
-- On LEFTCURLY shift to state 18
-- On LEFTBRACKET shift to state 20
-- On INTEGER shift to state 22
-- On IDENTIFIER shift to state 23
-- On FORMAT shift to state 24
-- On FLOAT shift to state 26
-- On FALSE shift to state 27
-- On ELLIPSES shift to state 28
-- On COMPLEX shift to state 29
-- On BYTES shift to state 30
-- On AWAIT shift to state 32
-- On ASYNC shift to state 33
-- On ASTERIKS shift to state 34
-- On set_or_dictionary shift to state 35
-- On or_test shift to state 46
-- On not_test shift to state 49
-- On nonempty_list(BYTES) shift to state 36
-- On identifier shift to state 37
-- On expression shift to state 51
-- On comparison shift to state 70
-- On atom shift to state 71
-- On and_test shift to state 72
## Reductions:

State 46:
## Known stack suffix:
## FOR expression_list IN or_test
## LR(1) items:
comprehension -> FOR expression_list IN or_test . list(condition) [ RIGHTPARENS RIGHTCURLY RIGHTBRACKET FOR COMMA ASYNC ]
## Transitions:
-- On IF shift to state 47
-- On list(condition) shift to state 141
-- On condition shift to state 142
## Reductions:
-- On RIGHTPARENS RIGHTCURLY RIGHTBRACKET FOR COMMA ASYNC
--   reduce production list(condition) ->

State 47:
## Known stack suffix:
## IF
## LR(1) items:
condition -> IF . or_test [ RIGHTPARENS RIGHTCURLY RIGHTBRACKET IF FOR COMMA ASYNC ]
## Transitions:
-- On TRUE shift to state 4
-- On TILDE shift to state 5
-- On STRING shift to state 6
-- On PLUS shift to state 12
-- On NOT shift to state 17
-- On MINUS shift to state 14
-- On LEFTPARENS shift to state 15
-- On LEFTCURLY shift to state 18
-- On LEFTBRACKET shift to state 20
-- On INTEGER shift to state 22
-- On IDENTIFIER shift to state 23
-- On FORMAT shift to state 24
-- On FLOAT shift to state 26
-- On FALSE shift to state 27
-- On ELLIPSES shift to state 28
-- On COMPLEX shift to state 29
-- On BYTES shift to state 30
-- On AWAIT shift to state 32
-- On ASYNC shift to state 33
-- On ASTERIKS shift to state 34
-- On set_or_dictionary shift to state 35
-- On or_test shift to state 48
-- On not_test shift to state 49
-- On nonempty_list(BYTES) shift to state 36
-- On identifier shift to state 37
-- On expression shift to state 51
-- On comparison shift to state 70
-- On atom shift to state 71
-- On and_test shift to state 72
## Reductions:

State 48:
## Known stack suffix:
## IF or_test
## LR(1) items:
condition -> IF or_test . [ RIGHTPARENS RIGHTCURLY RIGHTBRACKET IF FOR COMMA ASYNC ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production condition -> IF or_test

State 49:
## Known stack suffix:
## not_test
## LR(1) items:
and_test -> not_test . [ SLASHSLASHEQUALS SLASHEQUALS SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS PLUSEQUALS PERCENTEQUALS OR NEWLINE MINUSEQUALS LEFTANGLELEFTANGLEEQUALS IF HATEQUALS FROM FOR EQUALS ELSE COMMA COLON BAREQUALS ATEQUALS ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS AS ANNOTATION_COMMENT AMPERSANDEQUALS ]
and_test -> not_test . AND and_test [ SLASHSLASHEQUALS SLASHEQUALS SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS PLUSEQUALS PERCENTEQUALS OR NEWLINE MINUSEQUALS LEFTANGLELEFTANGLEEQUALS IF HATEQUALS FROM FOR EQUALS ELSE COMMA COLON BAREQUALS ATEQUALS ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS AS ANNOTATION_COMMENT AMPERSANDEQUALS ]
## Transitions:
-- On AND shift to state 50
## Reductions:
-- On SLASHSLASHEQUALS SLASHEQUALS SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS PLUSEQUALS PERCENTEQUALS OR NEWLINE MINUSEQUALS LEFTANGLELEFTANGLEEQUALS IF HATEQUALS FROM FOR EQUALS ELSE COMMA COLON BAREQUALS ATEQUALS ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS AS ANNOTATION_COMMENT AMPERSANDEQUALS
--   reduce production and_test -> not_test

State 50:
## Known stack suffix:
## not_test AND
## LR(1) items:
and_test -> not_test AND . and_test [ SLASHSLASHEQUALS SLASHEQUALS SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS PLUSEQUALS PERCENTEQUALS OR NEWLINE MINUSEQUALS LEFTANGLELEFTANGLEEQUALS IF HATEQUALS FROM FOR EQUALS ELSE COMMA COLON BAREQUALS ATEQUALS ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS AS ANNOTATION_COMMENT AMPERSANDEQUALS ]
## Transitions:
-- On TRUE shift to state 4
-- On TILDE shift to state 5
-- On STRING shift to state 6
-- On PLUS shift to state 12
-- On NOT shift to state 17
-- On MINUS shift to state 14
-- On LEFTPARENS shift to state 15
-- On LEFTCURLY shift to state 18
-- On LEFTBRACKET shift to state 20
-- On INTEGER shift to state 22
-- On IDENTIFIER shift to state 23
-- On FORMAT shift to state 24
-- On FLOAT shift to state 26
-- On FALSE shift to state 27
-- On ELLIPSES shift to state 28
-- On COMPLEX shift to state 29
-- On BYTES shift to state 30
-- On AWAIT shift to state 32
-- On ASYNC shift to state 33
-- On ASTERIKS shift to state 34
-- On set_or_dictionary shift to state 35
-- On not_test shift to state 49
-- On nonempty_list(BYTES) shift to state 36
-- On identifier shift to state 37
-- On expression shift to state 51
-- On comparison shift to state 70
-- On atom shift to state 71
-- On and_test shift to state 140
## Reductions:

State 51:
## Known stack suffix:
## expression
## LR(1) items:
atom -> expression . PLUS expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . AT expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . AMPERSAND expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . BAR expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . HAT expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . SLASH SLASH expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . SLASH expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . LEFTANGLELEFTANGLE expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . PERCENT expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . ASTERIKS ASTERIKS expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . ASTERIKS expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . RIGHTANGLERIGHTANGLE expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . MINUS expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . LEFTPARENS arguments RIGHTPARENS [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
comparison -> expression . [ SLASHSLASHEQUALS SLASHEQUALS SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS PLUSEQUALS PERCENTEQUALS OR NEWLINE MINUSEQUALS LEFTANGLELEFTANGLEEQUALS IF HATEQUALS FROM FOR EQUALS ELSE COMMA COLON BAREQUALS ATEQUALS ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS ]
comparison -> expression . nonempty_list(comparison_operator) [ SLASHSLASHEQUALS SLASHEQUALS SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS PLUSEQUALS PERCENTEQUALS OR NEWLINE MINUSEQUALS LEFTANGLELEFTANGLEEQUALS IF HATEQUALS FROM FOR EQUALS ELSE COMMA COLON BAREQUALS ATEQUALS ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS ]
expression -> expression . DOT identifier [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
expression -> expression . LEFTBRACKET parser_generator_separated_nonempty_list(COMMA,subscript_key) RIGHTBRACKET [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
## Transitions:
-- On SLASH shift to state 52
-- On RIGHTANGLERIGHTANGLE shift to state 95
-- On RIGHTANGLEEQUALS shift to state 115
-- On RIGHTANGLE shift to state 117
-- On PLUS shift to state 97
-- On PERCENT shift to state 99
-- On NOT shift to state 119
-- On MINUS shift to state 104
-- On LEFTPARENS shift to state 39
-- On LEFTBRACKET shift to state 55
-- On LEFTANGLELEFTANGLE shift to state 106
-- On LEFTANGLEEQUALS shift to state 122
-- On LEFTANGLE shift to state 124
-- On ISNOT shift to state 126
-- On IS shift to state 128
-- On IN shift to state 130
-- On HAT shift to state 108
-- On EXCLAMATIONMARK shift to state 132
-- On DOUBLEEQUALS shift to state 135
-- On DOT shift to state 90
-- On BAR shift to state 112
-- On AT shift to state 92
-- On ASTERIKS shift to state 101
-- On AMPERSAND shift to state 110
-- On nonempty_list(comparison_operator) shift to state 137
-- On comparison_operator shift to state 138
## Reductions:
-- On SLASHSLASHEQUALS SLASHEQUALS SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS PLUSEQUALS PERCENTEQUALS OR NEWLINE MINUSEQUALS LEFTANGLELEFTANGLEEQUALS IF HATEQUALS FROM FOR EQUALS ELSE COMMA COLON BAREQUALS ATEQUALS ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS
--   reduce production comparison -> expression

State 52:
## Known stack suffix:
## expression SLASH
## LR(1) items:
atom -> expression SLASH . SLASH expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression SLASH . expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
## Transitions:
-- On TRUE shift to state 4
-- On TILDE shift to state 5
-- On STRING shift to state 6
-- On SLASH shift to state 53
-- On PLUS shift to state 12
-- On NOT shift to state 13
-- On MINUS shift to state 14
-- On LEFTPARENS shift to state 15
-- On LEFTCURLY shift to state 18
-- On LEFTBRACKET shift to state 20
-- On INTEGER shift to state 22
-- On IDENTIFIER shift to state 23
-- On FORMAT shift to state 24
-- On FLOAT shift to state 26
-- On FALSE shift to state 27
-- On ELLIPSES shift to state 28
-- On COMPLEX shift to state 29
-- On BYTES shift to state 30
-- On AWAIT shift to state 32
-- On ASYNC shift to state 33
-- On ASTERIKS shift to state 34
-- On set_or_dictionary shift to state 35
-- On nonempty_list(BYTES) shift to state 36
-- On identifier shift to state 37
-- On expression shift to state 94
-- On atom shift to state 71
## Reductions:

State 53:
## Known stack suffix:
## expression SLASH SLASH
## LR(1) items:
atom -> expression SLASH SLASH . expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
## Transitions:
-- On TRUE shift to state 4
-- On TILDE shift to state 5
-- On STRING shift to state 6
-- On PLUS shift to state 12
-- On NOT shift to state 13
-- On MINUS shift to state 14
-- On LEFTPARENS shift to state 15
-- On LEFTCURLY shift to state 18
-- On LEFTBRACKET shift to state 20
-- On INTEGER shift to state 22
-- On IDENTIFIER shift to state 23
-- On FORMAT shift to state 24
-- On FLOAT shift to state 26
-- On FALSE shift to state 27
-- On ELLIPSES shift to state 28
-- On COMPLEX shift to state 29
-- On BYTES shift to state 30
-- On AWAIT shift to state 32
-- On ASYNC shift to state 33
-- On ASTERIKS shift to state 34
-- On set_or_dictionary shift to state 35
-- On nonempty_list(BYTES) shift to state 36
-- On identifier shift to state 37
-- On expression shift to state 54
-- On atom shift to state 71
## Reductions:

State 54:
## Known stack suffix:
## expression SLASH SLASH expression
## LR(1) items:
atom -> expression . PLUS expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . AT expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . AMPERSAND expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . BAR expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . HAT expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . SLASH SLASH expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression SLASH SLASH expression . [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . SLASH expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . LEFTANGLELEFTANGLE expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . PERCENT expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . ASTERIKS ASTERIKS expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . ASTERIKS expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . RIGHTANGLERIGHTANGLE expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . MINUS expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . LEFTPARENS arguments RIGHTPARENS [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
expression -> expression . DOT identifier [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
expression -> expression . LEFTBRACKET parser_generator_separated_nonempty_list(COMMA,subscript_key) RIGHTBRACKET [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
## Transitions:
-- On LEFTPARENS shift to state 39
-- On LEFTBRACKET shift to state 55
-- On DOT shift to state 90
-- On AT shift to state 92
## Reductions:
-- On SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS COMMA COLON BAREQUALS BAR ATEQUALS ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND
--   reduce production atom -> expression SLASH SLASH expression

State 55:
## Known stack suffix:
## expression LEFTBRACKET
## LR(1) items:
expression -> expression LEFTBRACKET . parser_generator_separated_nonempty_list(COMMA,subscript_key) RIGHTBRACKET [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
## Transitions:
-- On TRUE shift to state 4
-- On TILDE shift to state 5
-- On STRING shift to state 6
-- On PLUS shift to state 12
-- On NOT shift to state 17
-- On MINUS shift to state 14
-- On LEFTPARENS shift to state 15
-- On LEFTCURLY shift to state 18
-- On LEFTBRACKET shift to state 20
-- On LAMBDA shift to state 21
-- On INTEGER shift to state 22
-- On IDENTIFIER shift to state 23
-- On FORMAT shift to state 24
-- On FLOAT shift to state 26
-- On FALSE shift to state 27
-- On ELLIPSES shift to state 28
-- On COMPLEX shift to state 29
-- On BYTES shift to state 30
-- On AWAIT shift to state 32
-- On ASYNC shift to state 33
-- On ASTERIKS shift to state 34
-- On test shift to state 56
-- On subscript_key shift to state 57
-- On set_or_dictionary shift to state 35
-- On parser_generator_separated_nonempty_list(COMMA,subscript_key) shift to state 88
-- On or_test shift to state 62
-- On option(test) shift to state 81
-- On not_test shift to state 49
-- On nonempty_list(BYTES) shift to state 36
-- On identifier shift to state 67
-- On expression shift to state 51
-- On comparison shift to state 70
-- On atom shift to state 71
-- On and_test shift to state 72
## Reductions:
-- On COLON
--   reduce production option(test) ->

State 56:
## Known stack suffix:
## test
## LR(1) items:
option(test) -> test . [ COLON ]
subscript_key -> test . [ RIGHTBRACKET COMMA ]
## Transitions:
## Reductions:
-- On COLON
--   reduce production option(test) -> test
-- On RIGHTBRACKET COMMA
--   reduce production subscript_key -> test

State 57:
## Known stack suffix:
## subscript_key
## LR(1) items:
parser_generator_separated_nonempty_list(COMMA,subscript_key) -> subscript_key . [ RIGHTBRACKET ]
parser_generator_separated_nonempty_list(COMMA,subscript_key) -> subscript_key . COMMA parser_generator_separated_list(COMMA,subscript_key) [ RIGHTBRACKET ]
## Transitions:
-- On COMMA shift to state 58
## Reductions:
-- On RIGHTBRACKET
--   reduce production parser_generator_separated_nonempty_list(COMMA,subscript_key) -> subscript_key

State 58:
## Known stack suffix:
## subscript_key COMMA
## LR(1) items:
parser_generator_separated_nonempty_list(COMMA,subscript_key) -> subscript_key COMMA . parser_generator_separated_list(COMMA,subscript_key) [ RIGHTBRACKET ]
## Transitions:
-- On TRUE shift to state 4
-- On TILDE shift to state 5
-- On STRING shift to state 6
-- On PLUS shift to state 12
-- On NOT shift to state 17
-- On MINUS shift to state 14
-- On LEFTPARENS shift to state 15
-- On LEFTCURLY shift to state 18
-- On LEFTBRACKET shift to state 20
-- On LAMBDA shift to state 21
-- On INTEGER shift to state 22
-- On IDENTIFIER shift to state 23
-- On FORMAT shift to state 24
-- On FLOAT shift to state 26
-- On FALSE shift to state 27
-- On ELLIPSES shift to state 28
-- On COMPLEX shift to state 29
-- On BYTES shift to state 30
-- On AWAIT shift to state 32
-- On ASYNC shift to state 33
-- On ASTERIKS shift to state 34
-- On test shift to state 56
-- On subscript_key shift to state 59
-- On set_or_dictionary shift to state 35
-- On parser_generator_separated_list(COMMA,subscript_key) shift to state 87
-- On or_test shift to state 62
-- On option(test) shift to state 81
-- On not_test shift to state 49
-- On nonempty_list(BYTES) shift to state 36
-- On identifier shift to state 67
-- On expression shift to state 51
-- On comparison shift to state 70
-- On atom shift to state 71
-- On and_test shift to state 72
## Reductions:
-- On COLON
--   reduce production option(test) ->
-- On RIGHTBRACKET
--   reduce production parser_generator_separated_list(COMMA,subscript_key) ->

State 59:
## Known stack suffix:
## subscript_key
## LR(1) items:
parser_generator_separated_list(COMMA,subscript_key) -> subscript_key . [ RIGHTBRACKET ]
parser_generator_separated_list(COMMA,subscript_key) -> subscript_key . COMMA parser_generator_separated_list(COMMA,subscript_key) [ RIGHTBRACKET ]
## Transitions:
-- On COMMA shift to state 60
## Reductions:
-- On RIGHTBRACKET
--   reduce production parser_generator_separated_list(COMMA,subscript_key) -> subscript_key

State 60:
## Known stack suffix:
## subscript_key COMMA
## LR(1) items:
parser_generator_separated_list(COMMA,subscript_key) -> subscript_key COMMA . parser_generator_separated_list(COMMA,subscript_key) [ RIGHTBRACKET ]
## Transitions:
-- On TRUE shift to state 4
-- On TILDE shift to state 5
-- On STRING shift to state 6
-- On PLUS shift to state 12
-- On NOT shift to state 17
-- On MINUS shift to state 14
-- On LEFTPARENS shift to state 15
-- On LEFTCURLY shift to state 18
-- On LEFTBRACKET shift to state 20
-- On LAMBDA shift to state 21
-- On INTEGER shift to state 22
-- On IDENTIFIER shift to state 23
-- On FORMAT shift to state 24
-- On FLOAT shift to state 26
-- On FALSE shift to state 27
-- On ELLIPSES shift to state 28
-- On COMPLEX shift to state 29
-- On BYTES shift to state 30
-- On AWAIT shift to state 32
-- On ASYNC shift to state 33
-- On ASTERIKS shift to state 34
-- On test shift to state 56
-- On subscript_key shift to state 59
-- On set_or_dictionary shift to state 35
-- On parser_generator_separated_list(COMMA,subscript_key) shift to state 61
-- On or_test shift to state 62
-- On option(test) shift to state 81
-- On not_test shift to state 49
-- On nonempty_list(BYTES) shift to state 36
-- On identifier shift to state 67
-- On expression shift to state 51
-- On comparison shift to state 70
-- On atom shift to state 71
-- On and_test shift to state 72
## Reductions:
-- On COLON
--   reduce production option(test) ->
-- On RIGHTBRACKET
--   reduce production parser_generator_separated_list(COMMA,subscript_key) ->

State 61:
## Known stack suffix:
## subscript_key COMMA parser_generator_separated_list(COMMA,subscript_key)
## LR(1) items:
parser_generator_separated_list(COMMA,subscript_key) -> subscript_key COMMA parser_generator_separated_list(COMMA,subscript_key) . [ RIGHTBRACKET ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production parser_generator_separated_list(COMMA,subscript_key) -> subscript_key COMMA parser_generator_separated_list(COMMA,subscript_key)

State 62:
## Known stack suffix:
## or_test
## LR(1) items:
test -> or_test . [ SLASHSLASHEQUALS SLASHEQUALS SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS PLUSEQUALS PERCENTEQUALS NEWLINE MINUSEQUALS LEFTANGLELEFTANGLEEQUALS HATEQUALS FROM FOR EQUALS ELSE COMMA COLON BAREQUALS ATEQUALS ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS AS ANNOTATION_COMMENT AMPERSANDEQUALS ]
test -> or_test . IF test_list ELSE test [ SLASHSLASHEQUALS SLASHEQUALS SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS PLUSEQUALS PERCENTEQUALS NEWLINE MINUSEQUALS LEFTANGLELEFTANGLEEQUALS HATEQUALS FROM FOR EQUALS ELSE COMMA COLON BAREQUALS ATEQUALS ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS AS ANNOTATION_COMMENT AMPERSANDEQUALS ]
## Transitions:
-- On IF shift to state 63
## Reductions:
-- On SLASHSLASHEQUALS SLASHEQUALS SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS PLUSEQUALS PERCENTEQUALS NEWLINE MINUSEQUALS LEFTANGLELEFTANGLEEQUALS HATEQUALS FROM FOR EQUALS ELSE COMMA COLON BAREQUALS ATEQUALS ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS AS ANNOTATION_COMMENT AMPERSANDEQUALS
--   reduce production test -> or_test

State 63:
## Known stack suffix:
## or_test IF
## LR(1) items:
test -> or_test IF . test_list ELSE test [ SLASHSLASHEQUALS SLASHEQUALS SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS PLUSEQUALS PERCENTEQUALS NEWLINE MINUSEQUALS LEFTANGLELEFTANGLEEQUALS HATEQUALS FROM FOR EQUALS ELSE COMMA COLON BAREQUALS ATEQUALS ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS AS ANNOTATION_COMMENT AMPERSANDEQUALS ]
## Transitions:
-- On TRUE shift to state 4
-- On TILDE shift to state 5
-- On STRING shift to state 6
-- On PLUS shift to state 12
-- On NOT shift to state 17
-- On MINUS shift to state 14
-- On LEFTPARENS shift to state 15
-- On LEFTCURLY shift to state 18
-- On LEFTBRACKET shift to state 20
-- On LAMBDA shift to state 21
-- On INTEGER shift to state 22
-- On IDENTIFIER shift to state 23
-- On FORMAT shift to state 24
-- On FLOAT shift to state 26
-- On FALSE shift to state 27
-- On ELLIPSES shift to state 28
-- On COMPLEX shift to state 29
-- On BYTES shift to state 30
-- On AWAIT shift to state 32
-- On ASYNC shift to state 33
-- On ASTERIKS shift to state 34
-- On test_list shift to state 64
-- On test shift to state 75
-- On set_or_dictionary shift to state 35
-- On separated_nonempty_list_indicator(COMMA,test) shift to state 80
-- On or_test shift to state 62
-- On not_test shift to state 49
-- On nonempty_list(BYTES) shift to state 36
-- On identifier shift to state 67
-- On expression shift to state 51
-- On comparison shift to state 70
-- On atom shift to state 71
-- On and_test shift to state 72
## Reductions:

State 64:
## Known stack suffix:
## or_test IF test_list
## LR(1) items:
test -> or_test IF test_list . ELSE test [ SLASHSLASHEQUALS SLASHEQUALS SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS PLUSEQUALS PERCENTEQUALS NEWLINE MINUSEQUALS LEFTANGLELEFTANGLEEQUALS HATEQUALS FROM FOR EQUALS ELSE COMMA COLON BAREQUALS ATEQUALS ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS AS ANNOTATION_COMMENT AMPERSANDEQUALS ]
## Transitions:
-- On ELSE shift to state 65
## Reductions:

State 65:
## Known stack suffix:
## or_test IF test_list ELSE
## LR(1) items:
test -> or_test IF test_list ELSE . test [ SLASHSLASHEQUALS SLASHEQUALS SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS PLUSEQUALS PERCENTEQUALS NEWLINE MINUSEQUALS LEFTANGLELEFTANGLEEQUALS HATEQUALS FROM FOR EQUALS ELSE COMMA COLON BAREQUALS ATEQUALS ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS AS ANNOTATION_COMMENT AMPERSANDEQUALS ]
## Transitions:
-- On TRUE shift to state 4
-- On TILDE shift to state 5
-- On STRING shift to state 6
-- On PLUS shift to state 12
-- On NOT shift to state 17
-- On MINUS shift to state 14
-- On LEFTPARENS shift to state 15
-- On LEFTCURLY shift to state 18
-- On LEFTBRACKET shift to state 20
-- On LAMBDA shift to state 21
-- On INTEGER shift to state 22
-- On IDENTIFIER shift to state 23
-- On FORMAT shift to state 24
-- On FLOAT shift to state 26
-- On FALSE shift to state 27
-- On ELLIPSES shift to state 28
-- On COMPLEX shift to state 29
-- On BYTES shift to state 30
-- On AWAIT shift to state 32
-- On ASYNC shift to state 33
-- On ASTERIKS shift to state 34
-- On test shift to state 66
-- On set_or_dictionary shift to state 35
-- On or_test shift to state 62
-- On not_test shift to state 49
-- On nonempty_list(BYTES) shift to state 36
-- On identifier shift to state 67
-- On expression shift to state 51
-- On comparison shift to state 70
-- On atom shift to state 71
-- On and_test shift to state 72
## Reductions:

State 66:
## Known stack suffix:
## or_test IF test_list ELSE test
## LR(1) items:
test -> or_test IF test_list ELSE test . [ SLASHSLASHEQUALS SLASHEQUALS SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS PLUSEQUALS PERCENTEQUALS NEWLINE MINUSEQUALS LEFTANGLELEFTANGLEEQUALS HATEQUALS FROM FOR EQUALS ELSE COMMA COLON BAREQUALS ATEQUALS ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS AS ANNOTATION_COMMENT AMPERSANDEQUALS ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production test -> or_test IF test_list ELSE test

State 67:
## Known stack suffix:
## identifier
## LR(1) items:
atom -> identifier . [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
test -> identifier . COLONEQUALS test [ SLASHSLASHEQUALS SLASHEQUALS SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS PLUSEQUALS PERCENTEQUALS NEWLINE MINUSEQUALS LEFTANGLELEFTANGLEEQUALS HATEQUALS FROM FOR EQUALS ELSE COMMA COLON BAREQUALS ATEQUALS ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS AS ANNOTATION_COMMENT AMPERSANDEQUALS ]
## Transitions:
-- On COLONEQUALS shift to state 68
## Reductions:
-- On SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND
--   reduce production atom -> identifier

State 68:
## Known stack suffix:
## identifier COLONEQUALS
## LR(1) items:
test -> identifier COLONEQUALS . test [ SLASHSLASHEQUALS SLASHEQUALS SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS PLUSEQUALS PERCENTEQUALS NEWLINE MINUSEQUALS LEFTANGLELEFTANGLEEQUALS HATEQUALS FROM FOR EQUALS ELSE COMMA COLON BAREQUALS ATEQUALS ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS AS ANNOTATION_COMMENT AMPERSANDEQUALS ]
## Transitions:
-- On TRUE shift to state 4
-- On TILDE shift to state 5
-- On STRING shift to state 6
-- On PLUS shift to state 12
-- On NOT shift to state 17
-- On MINUS shift to state 14
-- On LEFTPARENS shift to state 15
-- On LEFTCURLY shift to state 18
-- On LEFTBRACKET shift to state 20
-- On LAMBDA shift to state 21
-- On INTEGER shift to state 22
-- On IDENTIFIER shift to state 23
-- On FORMAT shift to state 24
-- On FLOAT shift to state 26
-- On FALSE shift to state 27
-- On ELLIPSES shift to state 28
-- On COMPLEX shift to state 29
-- On BYTES shift to state 30
-- On AWAIT shift to state 32
-- On ASYNC shift to state 33
-- On ASTERIKS shift to state 34
-- On test shift to state 69
-- On set_or_dictionary shift to state 35
-- On or_test shift to state 62
-- On not_test shift to state 49
-- On nonempty_list(BYTES) shift to state 36
-- On identifier shift to state 67
-- On expression shift to state 51
-- On comparison shift to state 70
-- On atom shift to state 71
-- On and_test shift to state 72
## Reductions:

State 69:
## Known stack suffix:
## identifier COLONEQUALS test
## LR(1) items:
test -> identifier COLONEQUALS test . [ SLASHSLASHEQUALS SLASHEQUALS SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS PLUSEQUALS PERCENTEQUALS NEWLINE MINUSEQUALS LEFTANGLELEFTANGLEEQUALS HATEQUALS FROM FOR EQUALS ELSE COMMA COLON BAREQUALS ATEQUALS ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS AS ANNOTATION_COMMENT AMPERSANDEQUALS ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production test -> identifier COLONEQUALS test

State 70:
## Known stack suffix:
## comparison
## LR(1) items:
not_test -> comparison . [ SLASHSLASHEQUALS SLASHEQUALS SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS PLUSEQUALS PERCENTEQUALS OR NEWLINE MINUSEQUALS LEFTANGLELEFTANGLEEQUALS IF HATEQUALS FROM FOR EQUALS ELSE COMMA COLON BAREQUALS ATEQUALS ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production not_test -> comparison

State 71:
## Known stack suffix:
## atom
## LR(1) items:
expression -> atom . [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production expression -> atom

State 72:
## Known stack suffix:
## and_test
## LR(1) items:
or_test -> and_test . [ SLASHSLASHEQUALS SLASHEQUALS SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS PLUSEQUALS PERCENTEQUALS NEWLINE MINUSEQUALS LEFTANGLELEFTANGLEEQUALS IF HATEQUALS FROM FOR EQUALS ELSE COMMA COLON BAREQUALS ATEQUALS ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS AS ANNOTATION_COMMENT AMPERSANDEQUALS ]
or_test -> and_test . OR or_test [ SLASHSLASHEQUALS SLASHEQUALS SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS PLUSEQUALS PERCENTEQUALS NEWLINE MINUSEQUALS LEFTANGLELEFTANGLEEQUALS IF HATEQUALS FROM FOR EQUALS ELSE COMMA COLON BAREQUALS ATEQUALS ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS AS ANNOTATION_COMMENT AMPERSANDEQUALS ]
## Transitions:
-- On OR shift to state 73
## Reductions:
-- On SLASHSLASHEQUALS SLASHEQUALS SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS PLUSEQUALS PERCENTEQUALS NEWLINE MINUSEQUALS LEFTANGLELEFTANGLEEQUALS IF HATEQUALS FROM FOR EQUALS ELSE COMMA COLON BAREQUALS ATEQUALS ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS AS ANNOTATION_COMMENT AMPERSANDEQUALS
--   reduce production or_test -> and_test

State 73:
## Known stack suffix:
## and_test OR
## LR(1) items:
or_test -> and_test OR . or_test [ SLASHSLASHEQUALS SLASHEQUALS SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS PLUSEQUALS PERCENTEQUALS NEWLINE MINUSEQUALS LEFTANGLELEFTANGLEEQUALS IF HATEQUALS FROM FOR EQUALS ELSE COMMA COLON BAREQUALS ATEQUALS ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS AS ANNOTATION_COMMENT AMPERSANDEQUALS ]
## Transitions:
-- On TRUE shift to state 4
-- On TILDE shift to state 5
-- On STRING shift to state 6
-- On PLUS shift to state 12
-- On NOT shift to state 17
-- On MINUS shift to state 14
-- On LEFTPARENS shift to state 15
-- On LEFTCURLY shift to state 18
-- On LEFTBRACKET shift to state 20
-- On INTEGER shift to state 22
-- On IDENTIFIER shift to state 23
-- On FORMAT shift to state 24
-- On FLOAT shift to state 26
-- On FALSE shift to state 27
-- On ELLIPSES shift to state 28
-- On COMPLEX shift to state 29
-- On BYTES shift to state 30
-- On AWAIT shift to state 32
-- On ASYNC shift to state 33
-- On ASTERIKS shift to state 34
-- On set_or_dictionary shift to state 35
-- On or_test shift to state 74
-- On not_test shift to state 49
-- On nonempty_list(BYTES) shift to state 36
-- On identifier shift to state 37
-- On expression shift to state 51
-- On comparison shift to state 70
-- On atom shift to state 71
-- On and_test shift to state 72
## Reductions:

State 74:
## Known stack suffix:
## and_test OR or_test
## LR(1) items:
or_test -> and_test OR or_test . [ SLASHSLASHEQUALS SLASHEQUALS SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS PLUSEQUALS PERCENTEQUALS NEWLINE MINUSEQUALS LEFTANGLELEFTANGLEEQUALS IF HATEQUALS FROM FOR EQUALS ELSE COMMA COLON BAREQUALS ATEQUALS ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS AS ANNOTATION_COMMENT AMPERSANDEQUALS ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production or_test -> and_test OR or_test

State 75:
## Known stack suffix:
## test
## LR(1) items:
separated_nonempty_list_indicator(COMMA,test) -> test . separated_nonempty_list_indicator_tail(COMMA,test) [ SLASHSLASHEQUALS SLASHEQUALS SEMICOLON RIGHTPARENS RIGHTANGLERIGHTANGLEEQUALS PLUSEQUALS PERCENTEQUALS NEWLINE MINUSEQUALS LEFTANGLELEFTANGLEEQUALS HATEQUALS FROM EQUALS ELSE COLON BAREQUALS ATEQUALS ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ANNOTATION_COMMENT AMPERSANDEQUALS ]
## Transitions:
-- On COMMA shift to state 76
-- On separated_nonempty_list_indicator_tail(COMMA,test) shift to state 79
## Reductions:
-- On SLASHSLASHEQUALS SLASHEQUALS SEMICOLON RIGHTPARENS RIGHTANGLERIGHTANGLEEQUALS PLUSEQUALS PERCENTEQUALS NEWLINE MINUSEQUALS LEFTANGLELEFTANGLEEQUALS HATEQUALS FROM EQUALS ELSE COLON BAREQUALS ATEQUALS ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ANNOTATION_COMMENT AMPERSANDEQUALS
--   reduce production separated_nonempty_list_indicator_tail(COMMA,test) ->

State 76:
## Known stack suffix:
## COMMA
## LR(1) items:
separated_nonempty_list_indicator_tail(COMMA,test) -> COMMA . [ SLASHSLASHEQUALS SLASHEQUALS SEMICOLON RIGHTPARENS RIGHTANGLERIGHTANGLEEQUALS PLUSEQUALS PERCENTEQUALS NEWLINE MINUSEQUALS LEFTANGLELEFTANGLEEQUALS HATEQUALS FROM EQUALS ELSE COLON BAREQUALS ATEQUALS ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ANNOTATION_COMMENT AMPERSANDEQUALS ]
separated_nonempty_list_indicator_tail(COMMA,test) -> COMMA . test separated_nonempty_list_indicator_tail(COMMA,test) [ SLASHSLASHEQUALS SLASHEQUALS SEMICOLON RIGHTPARENS RIGHTANGLERIGHTANGLEEQUALS PLUSEQUALS PERCENTEQUALS NEWLINE MINUSEQUALS LEFTANGLELEFTANGLEEQUALS HATEQUALS FROM EQUALS ELSE COLON BAREQUALS ATEQUALS ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ANNOTATION_COMMENT AMPERSANDEQUALS ]
## Transitions:
-- On TRUE shift to state 4
-- On TILDE shift to state 5
-- On STRING shift to state 6
-- On PLUS shift to state 12
-- On NOT shift to state 17
-- On MINUS shift to state 14
-- On LEFTPARENS shift to state 15
-- On LEFTCURLY shift to state 18
-- On LEFTBRACKET shift to state 20
-- On LAMBDA shift to state 21
-- On INTEGER shift to state 22
-- On IDENTIFIER shift to state 23
-- On FORMAT shift to state 24
-- On FLOAT shift to state 26
-- On FALSE shift to state 27
-- On ELLIPSES shift to state 28
-- On COMPLEX shift to state 29
-- On BYTES shift to state 30
-- On AWAIT shift to state 32
-- On ASYNC shift to state 33
-- On ASTERIKS shift to state 34
-- On test shift to state 77
-- On set_or_dictionary shift to state 35
-- On or_test shift to state 62
-- On not_test shift to state 49
-- On nonempty_list(BYTES) shift to state 36
-- On identifier shift to state 67
-- On expression shift to state 51
-- On comparison shift to state 70
-- On atom shift to state 71
-- On and_test shift to state 72
## Reductions:
-- On SLASHSLASHEQUALS SLASHEQUALS SEMICOLON RIGHTPARENS RIGHTANGLERIGHTANGLEEQUALS PLUSEQUALS PERCENTEQUALS NEWLINE MINUSEQUALS LEFTANGLELEFTANGLEEQUALS HATEQUALS FROM EQUALS ELSE COLON BAREQUALS ATEQUALS ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ANNOTATION_COMMENT AMPERSANDEQUALS
--   reduce production separated_nonempty_list_indicator_tail(COMMA,test) -> COMMA

State 77:
## Known stack suffix:
## COMMA test
## LR(1) items:
separated_nonempty_list_indicator_tail(COMMA,test) -> COMMA test . separated_nonempty_list_indicator_tail(COMMA,test) [ SLASHSLASHEQUALS SLASHEQUALS SEMICOLON RIGHTPARENS RIGHTANGLERIGHTANGLEEQUALS PLUSEQUALS PERCENTEQUALS NEWLINE MINUSEQUALS LEFTANGLELEFTANGLEEQUALS HATEQUALS FROM EQUALS ELSE COLON BAREQUALS ATEQUALS ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ANNOTATION_COMMENT AMPERSANDEQUALS ]
## Transitions:
-- On COMMA shift to state 76
-- On separated_nonempty_list_indicator_tail(COMMA,test) shift to state 78
## Reductions:
-- On SLASHSLASHEQUALS SLASHEQUALS SEMICOLON RIGHTPARENS RIGHTANGLERIGHTANGLEEQUALS PLUSEQUALS PERCENTEQUALS NEWLINE MINUSEQUALS LEFTANGLELEFTANGLEEQUALS HATEQUALS FROM EQUALS ELSE COLON BAREQUALS ATEQUALS ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ANNOTATION_COMMENT AMPERSANDEQUALS
--   reduce production separated_nonempty_list_indicator_tail(COMMA,test) ->

State 78:
## Known stack suffix:
## COMMA test separated_nonempty_list_indicator_tail(COMMA,test)
## LR(1) items:
separated_nonempty_list_indicator_tail(COMMA,test) -> COMMA test separated_nonempty_list_indicator_tail(COMMA,test) . [ SLASHSLASHEQUALS SLASHEQUALS SEMICOLON RIGHTPARENS RIGHTANGLERIGHTANGLEEQUALS PLUSEQUALS PERCENTEQUALS NEWLINE MINUSEQUALS LEFTANGLELEFTANGLEEQUALS HATEQUALS FROM EQUALS ELSE COLON BAREQUALS ATEQUALS ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ANNOTATION_COMMENT AMPERSANDEQUALS ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production separated_nonempty_list_indicator_tail(COMMA,test) -> COMMA test separated_nonempty_list_indicator_tail(COMMA,test)

State 79:
## Known stack suffix:
## test separated_nonempty_list_indicator_tail(COMMA,test)
## LR(1) items:
separated_nonempty_list_indicator(COMMA,test) -> test separated_nonempty_list_indicator_tail(COMMA,test) . [ SLASHSLASHEQUALS SLASHEQUALS SEMICOLON RIGHTPARENS RIGHTANGLERIGHTANGLEEQUALS PLUSEQUALS PERCENTEQUALS NEWLINE MINUSEQUALS LEFTANGLELEFTANGLEEQUALS HATEQUALS FROM EQUALS ELSE COLON BAREQUALS ATEQUALS ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ANNOTATION_COMMENT AMPERSANDEQUALS ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production separated_nonempty_list_indicator(COMMA,test) -> test separated_nonempty_list_indicator_tail(COMMA,test)

State 80:
## Known stack suffix:
## separated_nonempty_list_indicator(COMMA,test)
## LR(1) items:
test_list -> separated_nonempty_list_indicator(COMMA,test) . [ SLASHSLASHEQUALS SLASHEQUALS SEMICOLON RIGHTPARENS RIGHTANGLERIGHTANGLEEQUALS PLUSEQUALS PERCENTEQUALS NEWLINE MINUSEQUALS LEFTANGLELEFTANGLEEQUALS HATEQUALS FROM EQUALS ELSE COLON BAREQUALS ATEQUALS ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ANNOTATION_COMMENT AMPERSANDEQUALS ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production test_list -> separated_nonempty_list_indicator(COMMA,test)

State 81:
## Known stack suffix:
## option(test)
## LR(1) items:
subscript_key -> option(test) . COLON option(test) [ RIGHTBRACKET COMMA ]
subscript_key -> option(test) . COLON option(test) COLON option(test) [ RIGHTBRACKET COMMA ]
## Transitions:
-- On COLON shift to state 82
## Reductions:

State 82:
## Known stack suffix:
## option(test) COLON
## LR(1) items:
subscript_key -> option(test) COLON . option(test) [ RIGHTBRACKET COMMA ]
subscript_key -> option(test) COLON . option(test) COLON option(test) [ RIGHTBRACKET COMMA ]
## Transitions:
-- On TRUE shift to state 4
-- On TILDE shift to state 5
-- On STRING shift to state 6
-- On PLUS shift to state 12
-- On NOT shift to state 17
-- On MINUS shift to state 14
-- On LEFTPARENS shift to state 15
-- On LEFTCURLY shift to state 18
-- On LEFTBRACKET shift to state 20
-- On LAMBDA shift to state 21
-- On INTEGER shift to state 22
-- On IDENTIFIER shift to state 23
-- On FORMAT shift to state 24
-- On FLOAT shift to state 26
-- On FALSE shift to state 27
-- On ELLIPSES shift to state 28
-- On COMPLEX shift to state 29
-- On BYTES shift to state 30
-- On AWAIT shift to state 32
-- On ASYNC shift to state 33
-- On ASTERIKS shift to state 34
-- On test shift to state 83
-- On set_or_dictionary shift to state 35
-- On or_test shift to state 62
-- On option(test) shift to state 84
-- On not_test shift to state 49
-- On nonempty_list(BYTES) shift to state 36
-- On identifier shift to state 67
-- On expression shift to state 51
-- On comparison shift to state 70
-- On atom shift to state 71
-- On and_test shift to state 72
## Reductions:
-- On RIGHTBRACKET COMMA COLON
--   reduce production option(test) ->

State 83:
## Known stack suffix:
## test
## LR(1) items:
option(test) -> test . [ RIGHTBRACKET COMMA COLON ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production option(test) -> test

State 84:
## Known stack suffix:
## option(test) COLON option(test)
## LR(1) items:
subscript_key -> option(test) COLON option(test) . [ RIGHTBRACKET COMMA ]
subscript_key -> option(test) COLON option(test) . COLON option(test) [ RIGHTBRACKET COMMA ]
## Transitions:
-- On COLON shift to state 85
## Reductions:
-- On RIGHTBRACKET COMMA
--   reduce production subscript_key -> option(test) COLON option(test)

State 85:
## Known stack suffix:
## option(test) COLON option(test) COLON
## LR(1) items:
subscript_key -> option(test) COLON option(test) COLON . option(test) [ RIGHTBRACKET COMMA ]
## Transitions:
-- On TRUE shift to state 4
-- On TILDE shift to state 5
-- On STRING shift to state 6
-- On PLUS shift to state 12
-- On NOT shift to state 17
-- On MINUS shift to state 14
-- On LEFTPARENS shift to state 15
-- On LEFTCURLY shift to state 18
-- On LEFTBRACKET shift to state 20
-- On LAMBDA shift to state 21
-- On INTEGER shift to state 22
-- On IDENTIFIER shift to state 23
-- On FORMAT shift to state 24
-- On FLOAT shift to state 26
-- On FALSE shift to state 27
-- On ELLIPSES shift to state 28
-- On COMPLEX shift to state 29
-- On BYTES shift to state 30
-- On AWAIT shift to state 32
-- On ASYNC shift to state 33
-- On ASTERIKS shift to state 34
-- On test shift to state 83
-- On set_or_dictionary shift to state 35
-- On or_test shift to state 62
-- On option(test) shift to state 86
-- On not_test shift to state 49
-- On nonempty_list(BYTES) shift to state 36
-- On identifier shift to state 67
-- On expression shift to state 51
-- On comparison shift to state 70
-- On atom shift to state 71
-- On and_test shift to state 72
## Reductions:
-- On RIGHTBRACKET COMMA
--   reduce production option(test) ->

State 86:
## Known stack suffix:
## option(test) COLON option(test) COLON option(test)
## LR(1) items:
subscript_key -> option(test) COLON option(test) COLON option(test) . [ RIGHTBRACKET COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production subscript_key -> option(test) COLON option(test) COLON option(test)

State 87:
## Known stack suffix:
## subscript_key COMMA parser_generator_separated_list(COMMA,subscript_key)
## LR(1) items:
parser_generator_separated_nonempty_list(COMMA,subscript_key) -> subscript_key COMMA parser_generator_separated_list(COMMA,subscript_key) . [ RIGHTBRACKET ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production parser_generator_separated_nonempty_list(COMMA,subscript_key) -> subscript_key COMMA parser_generator_separated_list(COMMA,subscript_key)

State 88:
## Known stack suffix:
## expression LEFTBRACKET parser_generator_separated_nonempty_list(COMMA,subscript_key)
## LR(1) items:
expression -> expression LEFTBRACKET parser_generator_separated_nonempty_list(COMMA,subscript_key) . RIGHTBRACKET [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
## Transitions:
-- On RIGHTBRACKET shift to state 89
## Reductions:

State 89:
## Known stack suffix:
## expression LEFTBRACKET parser_generator_separated_nonempty_list(COMMA,subscript_key) RIGHTBRACKET
## LR(1) items:
expression -> expression LEFTBRACKET parser_generator_separated_nonempty_list(COMMA,subscript_key) RIGHTBRACKET . [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production expression -> expression LEFTBRACKET parser_generator_separated_nonempty_list(COMMA,subscript_key) RIGHTBRACKET

State 90:
## Known stack suffix:
## expression DOT
## LR(1) items:
expression -> expression DOT . identifier [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
## Transitions:
-- On IDENTIFIER shift to state 23
-- On ASYNC shift to state 33
-- On identifier shift to state 91
## Reductions:

State 91:
## Known stack suffix:
## expression DOT identifier
## LR(1) items:
expression -> expression DOT identifier . [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production expression -> expression DOT identifier

State 92:
## Known stack suffix:
## expression AT
## LR(1) items:
atom -> expression AT . expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
## Transitions:
-- On TRUE shift to state 4
-- On TILDE shift to state 5
-- On STRING shift to state 6
-- On PLUS shift to state 12
-- On NOT shift to state 13
-- On MINUS shift to state 14
-- On LEFTPARENS shift to state 15
-- On LEFTCURLY shift to state 18
-- On LEFTBRACKET shift to state 20
-- On INTEGER shift to state 22
-- On IDENTIFIER shift to state 23
-- On FORMAT shift to state 24
-- On FLOAT shift to state 26
-- On FALSE shift to state 27
-- On ELLIPSES shift to state 28
-- On COMPLEX shift to state 29
-- On BYTES shift to state 30
-- On AWAIT shift to state 32
-- On ASYNC shift to state 33
-- On ASTERIKS shift to state 34
-- On set_or_dictionary shift to state 35
-- On nonempty_list(BYTES) shift to state 36
-- On identifier shift to state 37
-- On expression shift to state 93
-- On atom shift to state 71
## Reductions:

State 93:
## Known stack suffix:
## expression AT expression
## LR(1) items:
atom -> expression . PLUS expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . AT expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression AT expression . [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . AMPERSAND expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . BAR expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . HAT expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . SLASH SLASH expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . SLASH expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . LEFTANGLELEFTANGLE expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . PERCENT expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . ASTERIKS ASTERIKS expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . ASTERIKS expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . RIGHTANGLERIGHTANGLE expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . MINUS expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . LEFTPARENS arguments RIGHTPARENS [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
expression -> expression . DOT identifier [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
expression -> expression . LEFTBRACKET parser_generator_separated_nonempty_list(COMMA,subscript_key) RIGHTBRACKET [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
## Transitions:
-- On LEFTPARENS shift to state 39
-- On LEFTBRACKET shift to state 55
-- On DOT shift to state 90
## Reductions:
-- On SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND
--   reduce production atom -> expression AT expression

State 94:
## Known stack suffix:
## expression SLASH expression
## LR(1) items:
atom -> expression . PLUS expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . AT expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . AMPERSAND expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . BAR expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . HAT expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . SLASH SLASH expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . SLASH expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression SLASH expression . [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . LEFTANGLELEFTANGLE expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . PERCENT expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . ASTERIKS ASTERIKS expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . ASTERIKS expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . RIGHTANGLERIGHTANGLE expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . MINUS expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . LEFTPARENS arguments RIGHTPARENS [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
expression -> expression . DOT identifier [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
expression -> expression . LEFTBRACKET parser_generator_separated_nonempty_list(COMMA,subscript_key) RIGHTBRACKET [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
## Transitions:
-- On LEFTPARENS shift to state 39
-- On LEFTBRACKET shift to state 55
-- On DOT shift to state 90
-- On AT shift to state 92
## Reductions:
-- On SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS COMMA COLON BAREQUALS BAR ATEQUALS ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND
--   reduce production atom -> expression SLASH expression

State 95:
## Known stack suffix:
## expression RIGHTANGLERIGHTANGLE
## LR(1) items:
atom -> expression RIGHTANGLERIGHTANGLE . expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
## Transitions:
-- On TRUE shift to state 4
-- On TILDE shift to state 5
-- On STRING shift to state 6
-- On PLUS shift to state 12
-- On NOT shift to state 13
-- On MINUS shift to state 14
-- On LEFTPARENS shift to state 15
-- On LEFTCURLY shift to state 18
-- On LEFTBRACKET shift to state 20
-- On INTEGER shift to state 22
-- On IDENTIFIER shift to state 23
-- On FORMAT shift to state 24
-- On FLOAT shift to state 26
-- On FALSE shift to state 27
-- On ELLIPSES shift to state 28
-- On COMPLEX shift to state 29
-- On BYTES shift to state 30
-- On AWAIT shift to state 32
-- On ASYNC shift to state 33
-- On ASTERIKS shift to state 34
-- On set_or_dictionary shift to state 35
-- On nonempty_list(BYTES) shift to state 36
-- On identifier shift to state 37
-- On expression shift to state 96
-- On atom shift to state 71
## Reductions:

State 96:
## Known stack suffix:
## expression RIGHTANGLERIGHTANGLE expression
## LR(1) items:
atom -> expression . PLUS expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . AT expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . AMPERSAND expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . BAR expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . HAT expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . SLASH SLASH expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . SLASH expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . LEFTANGLELEFTANGLE expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . PERCENT expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . ASTERIKS ASTERIKS expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . ASTERIKS expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . RIGHTANGLERIGHTANGLE expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression RIGHTANGLERIGHTANGLE expression . [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . MINUS expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . LEFTPARENS arguments RIGHTPARENS [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
expression -> expression . DOT identifier [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
expression -> expression . LEFTBRACKET parser_generator_separated_nonempty_list(COMMA,subscript_key) RIGHTBRACKET [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
## Transitions:
-- On SLASH shift to state 52
-- On PLUS shift to state 97
-- On PERCENT shift to state 99
-- On MINUS shift to state 104
-- On LEFTPARENS shift to state 39
-- On LEFTBRACKET shift to state 55
-- On HAT shift to state 108
-- On DOT shift to state 90
-- On BAR shift to state 112
-- On AT shift to state 92
-- On ASTERIKS shift to state 101
-- On AMPERSAND shift to state 110
## Reductions:
-- On SLASHSLASHEQUALS SLASHEQUALS SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PERCENTEQUALS OR NOT NEWLINE MINUSEQUALS LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS COMMA COLON BAREQUALS ATEQUALS ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS
--   reduce production atom -> expression RIGHTANGLERIGHTANGLE expression

State 97:
## Known stack suffix:
## expression PLUS
## LR(1) items:
atom -> expression PLUS . expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
## Transitions:
-- On TRUE shift to state 4
-- On TILDE shift to state 5
-- On STRING shift to state 6
-- On PLUS shift to state 12
-- On NOT shift to state 13
-- On MINUS shift to state 14
-- On LEFTPARENS shift to state 15
-- On LEFTCURLY shift to state 18
-- On LEFTBRACKET shift to state 20
-- On INTEGER shift to state 22
-- On IDENTIFIER shift to state 23
-- On FORMAT shift to state 24
-- On FLOAT shift to state 26
-- On FALSE shift to state 27
-- On ELLIPSES shift to state 28
-- On COMPLEX shift to state 29
-- On BYTES shift to state 30
-- On AWAIT shift to state 32
-- On ASYNC shift to state 33
-- On ASTERIKS shift to state 34
-- On set_or_dictionary shift to state 35
-- On nonempty_list(BYTES) shift to state 36
-- On identifier shift to state 37
-- On expression shift to state 98
-- On atom shift to state 71
## Reductions:

State 98:
## Known stack suffix:
## expression PLUS expression
## LR(1) items:
atom -> expression . PLUS expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression PLUS expression . [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . AT expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . AMPERSAND expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . BAR expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . HAT expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . SLASH SLASH expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . SLASH expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . LEFTANGLELEFTANGLE expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . PERCENT expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . ASTERIKS ASTERIKS expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . ASTERIKS expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . RIGHTANGLERIGHTANGLE expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . MINUS expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . LEFTPARENS arguments RIGHTPARENS [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
expression -> expression . DOT identifier [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
expression -> expression . LEFTBRACKET parser_generator_separated_nonempty_list(COMMA,subscript_key) RIGHTBRACKET [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
## Transitions:
-- On SLASH shift to state 52
-- On PERCENT shift to state 99
-- On LEFTPARENS shift to state 39
-- On LEFTBRACKET shift to state 55
-- On DOT shift to state 90
-- On AT shift to state 92
-- On ASTERIKS shift to state 101
## Reductions:
-- On SLASHSLASHEQUALS SLASHEQUALS SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS OR NOT NEWLINE MINUSEQUALS MINUS LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS COMMA COLON BAREQUALS BAR ATEQUALS ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND
--   reduce production atom -> expression PLUS expression

State 99:
## Known stack suffix:
## expression PERCENT
## LR(1) items:
atom -> expression PERCENT . expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
## Transitions:
-- On TRUE shift to state 4
-- On TILDE shift to state 5
-- On STRING shift to state 6
-- On PLUS shift to state 12
-- On NOT shift to state 13
-- On MINUS shift to state 14
-- On LEFTPARENS shift to state 15
-- On LEFTCURLY shift to state 18
-- On LEFTBRACKET shift to state 20
-- On INTEGER shift to state 22
-- On IDENTIFIER shift to state 23
-- On FORMAT shift to state 24
-- On FLOAT shift to state 26
-- On FALSE shift to state 27
-- On ELLIPSES shift to state 28
-- On COMPLEX shift to state 29
-- On BYTES shift to state 30
-- On AWAIT shift to state 32
-- On ASYNC shift to state 33
-- On ASTERIKS shift to state 34
-- On set_or_dictionary shift to state 35
-- On nonempty_list(BYTES) shift to state 36
-- On identifier shift to state 37
-- On expression shift to state 100
-- On atom shift to state 71
## Reductions:

State 100:
## Known stack suffix:
## expression PERCENT expression
## LR(1) items:
atom -> expression . PLUS expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . AT expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . AMPERSAND expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . BAR expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . HAT expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . SLASH SLASH expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . SLASH expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . LEFTANGLELEFTANGLE expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . PERCENT expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression PERCENT expression . [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . ASTERIKS ASTERIKS expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . ASTERIKS expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . RIGHTANGLERIGHTANGLE expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . MINUS expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . LEFTPARENS arguments RIGHTPARENS [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
expression -> expression . DOT identifier [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
expression -> expression . LEFTBRACKET parser_generator_separated_nonempty_list(COMMA,subscript_key) RIGHTBRACKET [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
## Transitions:
-- On LEFTPARENS shift to state 39
-- On LEFTBRACKET shift to state 55
-- On DOT shift to state 90
-- On AT shift to state 92
## Reductions:
-- On SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS COMMA COLON BAREQUALS BAR ATEQUALS ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND
--   reduce production atom -> expression PERCENT expression

State 101:
## Known stack suffix:
## expression ASTERIKS
## LR(1) items:
atom -> expression ASTERIKS . ASTERIKS expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression ASTERIKS . expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
## Transitions:
-- On TRUE shift to state 4
-- On TILDE shift to state 5
-- On STRING shift to state 6
-- On PLUS shift to state 12
-- On NOT shift to state 13
-- On MINUS shift to state 14
-- On LEFTPARENS shift to state 15
-- On LEFTCURLY shift to state 18
-- On LEFTBRACKET shift to state 20
-- On INTEGER shift to state 22
-- On IDENTIFIER shift to state 23
-- On FORMAT shift to state 24
-- On FLOAT shift to state 26
-- On FALSE shift to state 27
-- On ELLIPSES shift to state 28
-- On COMPLEX shift to state 29
-- On BYTES shift to state 30
-- On AWAIT shift to state 32
-- On ASYNC shift to state 33
-- On ASTERIKS shift to state 102
-- On set_or_dictionary shift to state 35
-- On nonempty_list(BYTES) shift to state 36
-- On identifier shift to state 37
-- On expression shift to state 114
-- On atom shift to state 71
## Reductions:

State 102:
## Known stack suffix:
## expression ASTERIKS ASTERIKS
## LR(1) items:
atom -> expression ASTERIKS ASTERIKS . expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> ASTERIKS . expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
## Transitions:
-- On TRUE shift to state 4
-- On TILDE shift to state 5
-- On STRING shift to state 6
-- On PLUS shift to state 12
-- On NOT shift to state 13
-- On MINUS shift to state 14
-- On LEFTPARENS shift to state 15
-- On LEFTCURLY shift to state 18
-- On LEFTBRACKET shift to state 20
-- On INTEGER shift to state 22
-- On IDENTIFIER shift to state 23
-- On FORMAT shift to state 24
-- On FLOAT shift to state 26
-- On FALSE shift to state 27
-- On ELLIPSES shift to state 28
-- On COMPLEX shift to state 29
-- On BYTES shift to state 30
-- On AWAIT shift to state 32
-- On ASYNC shift to state 33
-- On ASTERIKS shift to state 34
-- On set_or_dictionary shift to state 35
-- On nonempty_list(BYTES) shift to state 36
-- On identifier shift to state 37
-- On expression shift to state 103
-- On atom shift to state 71
## Reductions:

State 103:
## Known stack suffix:
## expression ASTERIKS ASTERIKS expression
## LR(1) items:
atom -> expression . PLUS expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . AT expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . AMPERSAND expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . BAR expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . HAT expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . SLASH SLASH expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . SLASH expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . LEFTANGLELEFTANGLE expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . PERCENT expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . ASTERIKS ASTERIKS expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression ASTERIKS ASTERIKS expression . [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . ASTERIKS expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . RIGHTANGLERIGHTANGLE expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . MINUS expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . LEFTPARENS arguments RIGHTPARENS [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> ASTERIKS expression . [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
expression -> expression . DOT identifier [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
expression -> expression . LEFTBRACKET parser_generator_separated_nonempty_list(COMMA,subscript_key) RIGHTBRACKET [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
## Transitions:
-- On SLASH shift to state 52
-- On RIGHTANGLERIGHTANGLE shift to state 95
-- On PLUS shift to state 97
-- On PERCENT shift to state 99
-- On MINUS shift to state 104
-- On LEFTPARENS shift to state 39
-- On LEFTBRACKET shift to state 55
-- On LEFTANGLELEFTANGLE shift to state 106
-- On HAT shift to state 108
-- On DOT shift to state 90
-- On BAR shift to state 112
-- On AT shift to state 92
-- On ASTERIKS shift to state 101
-- On AMPERSAND shift to state 110
## Reductions:
-- On SLASHSLASHEQUALS SLASHEQUALS SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PERCENTEQUALS OR NOT NEWLINE MINUSEQUALS LEFTANGLELEFTANGLEEQUALS LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS COMMA COLON BAREQUALS ATEQUALS ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS
--   reduce production atom -> expression ASTERIKS ASTERIKS expression

State 104:
## Known stack suffix:
## expression MINUS
## LR(1) items:
atom -> expression MINUS . expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
## Transitions:
-- On TRUE shift to state 4
-- On TILDE shift to state 5
-- On STRING shift to state 6
-- On PLUS shift to state 12
-- On NOT shift to state 13
-- On MINUS shift to state 14
-- On LEFTPARENS shift to state 15
-- On LEFTCURLY shift to state 18
-- On LEFTBRACKET shift to state 20
-- On INTEGER shift to state 22
-- On IDENTIFIER shift to state 23
-- On FORMAT shift to state 24
-- On FLOAT shift to state 26
-- On FALSE shift to state 27
-- On ELLIPSES shift to state 28
-- On COMPLEX shift to state 29
-- On BYTES shift to state 30
-- On AWAIT shift to state 32
-- On ASYNC shift to state 33
-- On ASTERIKS shift to state 34
-- On set_or_dictionary shift to state 35
-- On nonempty_list(BYTES) shift to state 36
-- On identifier shift to state 37
-- On expression shift to state 105
-- On atom shift to state 71
## Reductions:

State 105:
## Known stack suffix:
## expression MINUS expression
## LR(1) items:
atom -> expression . PLUS expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . AT expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . AMPERSAND expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . BAR expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . HAT expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . SLASH SLASH expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . SLASH expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . LEFTANGLELEFTANGLE expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . PERCENT expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . ASTERIKS ASTERIKS expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . ASTERIKS expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . RIGHTANGLERIGHTANGLE expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . MINUS expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression MINUS expression . [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . LEFTPARENS arguments RIGHTPARENS [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
expression -> expression . DOT identifier [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
expression -> expression . LEFTBRACKET parser_generator_separated_nonempty_list(COMMA,subscript_key) RIGHTBRACKET [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
## Transitions:
-- On SLASH shift to state 52
-- On PERCENT shift to state 99
-- On LEFTPARENS shift to state 39
-- On LEFTBRACKET shift to state 55
-- On DOT shift to state 90
-- On AT shift to state 92
-- On ASTERIKS shift to state 101
## Reductions:
-- On SLASHSLASHEQUALS SLASHEQUALS SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS OR NOT NEWLINE MINUSEQUALS MINUS LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS COMMA COLON BAREQUALS BAR ATEQUALS ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND
--   reduce production atom -> expression MINUS expression

State 106:
## Known stack suffix:
## expression LEFTANGLELEFTANGLE
## LR(1) items:
atom -> expression LEFTANGLELEFTANGLE . expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
## Transitions:
-- On TRUE shift to state 4
-- On TILDE shift to state 5
-- On STRING shift to state 6
-- On PLUS shift to state 12
-- On NOT shift to state 13
-- On MINUS shift to state 14
-- On LEFTPARENS shift to state 15
-- On LEFTCURLY shift to state 18
-- On LEFTBRACKET shift to state 20
-- On INTEGER shift to state 22
-- On IDENTIFIER shift to state 23
-- On FORMAT shift to state 24
-- On FLOAT shift to state 26
-- On FALSE shift to state 27
-- On ELLIPSES shift to state 28
-- On COMPLEX shift to state 29
-- On BYTES shift to state 30
-- On AWAIT shift to state 32
-- On ASYNC shift to state 33
-- On ASTERIKS shift to state 34
-- On set_or_dictionary shift to state 35
-- On nonempty_list(BYTES) shift to state 36
-- On identifier shift to state 37
-- On expression shift to state 107
-- On atom shift to state 71
## Reductions:

State 107:
## Known stack suffix:
## expression LEFTANGLELEFTANGLE expression
## LR(1) items:
atom -> expression . PLUS expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . AT expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . AMPERSAND expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . BAR expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . HAT expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . SLASH SLASH expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . SLASH expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . LEFTANGLELEFTANGLE expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression LEFTANGLELEFTANGLE expression . [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . PERCENT expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . ASTERIKS ASTERIKS expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . ASTERIKS expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . RIGHTANGLERIGHTANGLE expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . MINUS expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . LEFTPARENS arguments RIGHTPARENS [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
expression -> expression . DOT identifier [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
expression -> expression . LEFTBRACKET parser_generator_separated_nonempty_list(COMMA,subscript_key) RIGHTBRACKET [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
## Transitions:
-- On SLASH shift to state 52
-- On PLUS shift to state 97
-- On PERCENT shift to state 99
-- On MINUS shift to state 104
-- On LEFTPARENS shift to state 39
-- On LEFTBRACKET shift to state 55
-- On HAT shift to state 108
-- On DOT shift to state 90
-- On BAR shift to state 112
-- On AT shift to state 92
-- On ASTERIKS shift to state 101
-- On AMPERSAND shift to state 110
## Reductions:
-- On SLASHSLASHEQUALS SLASHEQUALS SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PERCENTEQUALS OR NOT NEWLINE MINUSEQUALS LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS COMMA COLON BAREQUALS ATEQUALS ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS
--   reduce production atom -> expression LEFTANGLELEFTANGLE expression

State 108:
## Known stack suffix:
## expression HAT
## LR(1) items:
atom -> expression HAT . expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
## Transitions:
-- On TRUE shift to state 4
-- On TILDE shift to state 5
-- On STRING shift to state 6
-- On PLUS shift to state 12
-- On NOT shift to state 13
-- On MINUS shift to state 14
-- On LEFTPARENS shift to state 15
-- On LEFTCURLY shift to state 18
-- On LEFTBRACKET shift to state 20
-- On INTEGER shift to state 22
-- On IDENTIFIER shift to state 23
-- On FORMAT shift to state 24
-- On FLOAT shift to state 26
-- On FALSE shift to state 27
-- On ELLIPSES shift to state 28
-- On COMPLEX shift to state 29
-- On BYTES shift to state 30
-- On AWAIT shift to state 32
-- On ASYNC shift to state 33
-- On ASTERIKS shift to state 34
-- On set_or_dictionary shift to state 35
-- On nonempty_list(BYTES) shift to state 36
-- On identifier shift to state 37
-- On expression shift to state 109
-- On atom shift to state 71
## Reductions:

State 109:
## Known stack suffix:
## expression HAT expression
## LR(1) items:
atom -> expression . PLUS expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . AT expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . AMPERSAND expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . BAR expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . HAT expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression HAT expression . [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . SLASH SLASH expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . SLASH expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . LEFTANGLELEFTANGLE expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . PERCENT expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . ASTERIKS ASTERIKS expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . ASTERIKS expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . RIGHTANGLERIGHTANGLE expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . MINUS expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . LEFTPARENS arguments RIGHTPARENS [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
expression -> expression . DOT identifier [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
expression -> expression . LEFTBRACKET parser_generator_separated_nonempty_list(COMMA,subscript_key) RIGHTBRACKET [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
## Transitions:
-- On SLASH shift to state 52
-- On PLUS shift to state 97
-- On PERCENT shift to state 99
-- On MINUS shift to state 104
-- On LEFTPARENS shift to state 39
-- On LEFTBRACKET shift to state 55
-- On DOT shift to state 90
-- On AT shift to state 92
-- On ASTERIKS shift to state 101
-- On AMPERSAND shift to state 110
## Reductions:
-- On SLASHSLASHEQUALS SLASHEQUALS SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PERCENTEQUALS OR NOT NEWLINE MINUSEQUALS LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS COMMA COLON BAREQUALS BAR ATEQUALS ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS
--   reduce production atom -> expression HAT expression

State 110:
## Known stack suffix:
## expression AMPERSAND
## LR(1) items:
atom -> expression AMPERSAND . expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
## Transitions:
-- On TRUE shift to state 4
-- On TILDE shift to state 5
-- On STRING shift to state 6
-- On PLUS shift to state 12
-- On NOT shift to state 13
-- On MINUS shift to state 14
-- On LEFTPARENS shift to state 15
-- On LEFTCURLY shift to state 18
-- On LEFTBRACKET shift to state 20
-- On INTEGER shift to state 22
-- On IDENTIFIER shift to state 23
-- On FORMAT shift to state 24
-- On FLOAT shift to state 26
-- On FALSE shift to state 27
-- On ELLIPSES shift to state 28
-- On COMPLEX shift to state 29
-- On BYTES shift to state 30
-- On AWAIT shift to state 32
-- On ASYNC shift to state 33
-- On ASTERIKS shift to state 34
-- On set_or_dictionary shift to state 35
-- On nonempty_list(BYTES) shift to state 36
-- On identifier shift to state 37
-- On expression shift to state 111
-- On atom shift to state 71
## Reductions:

State 111:
## Known stack suffix:
## expression AMPERSAND expression
## LR(1) items:
atom -> expression . PLUS expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . AT expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . AMPERSAND expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression AMPERSAND expression . [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . BAR expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . HAT expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . SLASH SLASH expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . SLASH expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . LEFTANGLELEFTANGLE expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . PERCENT expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . ASTERIKS ASTERIKS expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . ASTERIKS expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . RIGHTANGLERIGHTANGLE expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . MINUS expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . LEFTPARENS arguments RIGHTPARENS [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
expression -> expression . DOT identifier [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
expression -> expression . LEFTBRACKET parser_generator_separated_nonempty_list(COMMA,subscript_key) RIGHTBRACKET [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
## Transitions:
-- On SLASH shift to state 52
-- On PLUS shift to state 97
-- On PERCENT shift to state 99
-- On MINUS shift to state 104
-- On LEFTPARENS shift to state 39
-- On LEFTBRACKET shift to state 55
-- On DOT shift to state 90
-- On AT shift to state 92
-- On ASTERIKS shift to state 101
## Reductions:
-- On SLASHSLASHEQUALS SLASHEQUALS SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PERCENTEQUALS OR NOT NEWLINE MINUSEQUALS LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS COMMA COLON BAREQUALS BAR ATEQUALS ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND
--   reduce production atom -> expression AMPERSAND expression

State 112:
## Known stack suffix:
## expression BAR
## LR(1) items:
atom -> expression BAR . expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
## Transitions:
-- On TRUE shift to state 4
-- On TILDE shift to state 5
-- On STRING shift to state 6
-- On PLUS shift to state 12
-- On NOT shift to state 13
-- On MINUS shift to state 14
-- On LEFTPARENS shift to state 15
-- On LEFTCURLY shift to state 18
-- On LEFTBRACKET shift to state 20
-- On INTEGER shift to state 22
-- On IDENTIFIER shift to state 23
-- On FORMAT shift to state 24
-- On FLOAT shift to state 26
-- On FALSE shift to state 27
-- On ELLIPSES shift to state 28
-- On COMPLEX shift to state 29
-- On BYTES shift to state 30
-- On AWAIT shift to state 32
-- On ASYNC shift to state 33
-- On ASTERIKS shift to state 34
-- On set_or_dictionary shift to state 35
-- On nonempty_list(BYTES) shift to state 36
-- On identifier shift to state 37
-- On expression shift to state 113
-- On atom shift to state 71
## Reductions:

State 113:
## Known stack suffix:
## expression BAR expression
## LR(1) items:
atom -> expression . PLUS expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . AT expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . AMPERSAND expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . BAR expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression BAR expression . [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . HAT expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . SLASH SLASH expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . SLASH expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . LEFTANGLELEFTANGLE expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . PERCENT expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . ASTERIKS ASTERIKS expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . ASTERIKS expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . RIGHTANGLERIGHTANGLE expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . MINUS expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . LEFTPARENS arguments RIGHTPARENS [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
expression -> expression . DOT identifier [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
expression -> expression . LEFTBRACKET parser_generator_separated_nonempty_list(COMMA,subscript_key) RIGHTBRACKET [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
## Transitions:
-- On SLASH shift to state 52
-- On PLUS shift to state 97
-- On PERCENT shift to state 99
-- On MINUS shift to state 104
-- On LEFTPARENS shift to state 39
-- On LEFTBRACKET shift to state 55
-- On HAT shift to state 108
-- On DOT shift to state 90
-- On AT shift to state 92
-- On ASTERIKS shift to state 101
-- On AMPERSAND shift to state 110
## Reductions:
-- On SLASHSLASHEQUALS SLASHEQUALS SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PERCENTEQUALS OR NOT NEWLINE MINUSEQUALS LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS COMMA COLON BAREQUALS BAR ATEQUALS ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS
--   reduce production atom -> expression BAR expression

State 114:
## Known stack suffix:
## expression ASTERIKS expression
## LR(1) items:
atom -> expression . PLUS expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . AT expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . AMPERSAND expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . BAR expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . HAT expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . SLASH SLASH expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . SLASH expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . LEFTANGLELEFTANGLE expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . PERCENT expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . ASTERIKS ASTERIKS expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . ASTERIKS expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression ASTERIKS expression . [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . RIGHTANGLERIGHTANGLE expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . MINUS expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . LEFTPARENS arguments RIGHTPARENS [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
expression -> expression . DOT identifier [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
expression -> expression . LEFTBRACKET parser_generator_separated_nonempty_list(COMMA,subscript_key) RIGHTBRACKET [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
## Transitions:
-- On LEFTPARENS shift to state 39
-- On LEFTBRACKET shift to state 55
-- On DOT shift to state 90
-- On AT shift to state 92
## Reductions:
-- On SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS COMMA COLON BAREQUALS BAR ATEQUALS ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND
--   reduce production atom -> expression ASTERIKS expression

State 115:
## Known stack suffix:
## RIGHTANGLEEQUALS
## LR(1) items:
comparison_operator -> RIGHTANGLEEQUALS . expression [ SLASHSLASHEQUALS SLASHEQUALS SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PERCENTEQUALS OR NOT NEWLINE MINUSEQUALS LEFTANGLELEFTANGLEEQUALS LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS COMMA COLON BAREQUALS ATEQUALS ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS ]
## Transitions:
-- On TRUE shift to state 4
-- On TILDE shift to state 5
-- On STRING shift to state 6
-- On PLUS shift to state 12
-- On NOT shift to state 13
-- On MINUS shift to state 14
-- On LEFTPARENS shift to state 15
-- On LEFTCURLY shift to state 18
-- On LEFTBRACKET shift to state 20
-- On INTEGER shift to state 22
-- On IDENTIFIER shift to state 23
-- On FORMAT shift to state 24
-- On FLOAT shift to state 26
-- On FALSE shift to state 27
-- On ELLIPSES shift to state 28
-- On COMPLEX shift to state 29
-- On BYTES shift to state 30
-- On AWAIT shift to state 32
-- On ASYNC shift to state 33
-- On ASTERIKS shift to state 34
-- On set_or_dictionary shift to state 35
-- On nonempty_list(BYTES) shift to state 36
-- On identifier shift to state 37
-- On expression shift to state 116
-- On atom shift to state 71
## Reductions:

State 116:
## Known stack suffix:
## RIGHTANGLEEQUALS expression
## LR(1) items:
atom -> expression . PLUS expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . AT expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . AMPERSAND expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . BAR expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . HAT expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . SLASH SLASH expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . SLASH expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . LEFTANGLELEFTANGLE expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . PERCENT expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . ASTERIKS ASTERIKS expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . ASTERIKS expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . RIGHTANGLERIGHTANGLE expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . MINUS expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . LEFTPARENS arguments RIGHTPARENS [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
comparison_operator -> RIGHTANGLEEQUALS expression . [ SLASHSLASHEQUALS SLASHEQUALS SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PERCENTEQUALS OR NOT NEWLINE MINUSEQUALS LEFTANGLELEFTANGLEEQUALS LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS COMMA COLON BAREQUALS ATEQUALS ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS ]
expression -> expression . DOT identifier [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
expression -> expression . LEFTBRACKET parser_generator_separated_nonempty_list(COMMA,subscript_key) RIGHTBRACKET [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
## Transitions:
-- On SLASH shift to state 52
-- On RIGHTANGLERIGHTANGLE shift to state 95
-- On PLUS shift to state 97
-- On PERCENT shift to state 99
-- On MINUS shift to state 104
-- On LEFTPARENS shift to state 39
-- On LEFTBRACKET shift to state 55
-- On LEFTANGLELEFTANGLE shift to state 106
-- On HAT shift to state 108
-- On DOT shift to state 90
-- On BAR shift to state 112
-- On AT shift to state 92
-- On ASTERIKS shift to state 101
-- On AMPERSAND shift to state 110
## Reductions:
-- On SLASHSLASHEQUALS SLASHEQUALS SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PERCENTEQUALS OR NOT NEWLINE MINUSEQUALS LEFTANGLELEFTANGLEEQUALS LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS COMMA COLON BAREQUALS ATEQUALS ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS
--   reduce production comparison_operator -> RIGHTANGLEEQUALS expression

State 117:
## Known stack suffix:
## RIGHTANGLE
## LR(1) items:
comparison_operator -> RIGHTANGLE . expression [ SLASHSLASHEQUALS SLASHEQUALS SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PERCENTEQUALS OR NOT NEWLINE MINUSEQUALS LEFTANGLELEFTANGLEEQUALS LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS COMMA COLON BAREQUALS ATEQUALS ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS ]
## Transitions:
-- On TRUE shift to state 4
-- On TILDE shift to state 5
-- On STRING shift to state 6
-- On PLUS shift to state 12
-- On NOT shift to state 13
-- On MINUS shift to state 14
-- On LEFTPARENS shift to state 15
-- On LEFTCURLY shift to state 18
-- On LEFTBRACKET shift to state 20
-- On INTEGER shift to state 22
-- On IDENTIFIER shift to state 23
-- On FORMAT shift to state 24
-- On FLOAT shift to state 26
-- On FALSE shift to state 27
-- On ELLIPSES shift to state 28
-- On COMPLEX shift to state 29
-- On BYTES shift to state 30
-- On AWAIT shift to state 32
-- On ASYNC shift to state 33
-- On ASTERIKS shift to state 34
-- On set_or_dictionary shift to state 35
-- On nonempty_list(BYTES) shift to state 36
-- On identifier shift to state 37
-- On expression shift to state 118
-- On atom shift to state 71
## Reductions:

State 118:
## Known stack suffix:
## RIGHTANGLE expression
## LR(1) items:
atom -> expression . PLUS expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . AT expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . AMPERSAND expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . BAR expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . HAT expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . SLASH SLASH expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . SLASH expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . LEFTANGLELEFTANGLE expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . PERCENT expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . ASTERIKS ASTERIKS expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . ASTERIKS expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . RIGHTANGLERIGHTANGLE expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . MINUS expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . LEFTPARENS arguments RIGHTPARENS [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
comparison_operator -> RIGHTANGLE expression . [ SLASHSLASHEQUALS SLASHEQUALS SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PERCENTEQUALS OR NOT NEWLINE MINUSEQUALS LEFTANGLELEFTANGLEEQUALS LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS COMMA COLON BAREQUALS ATEQUALS ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS ]
expression -> expression . DOT identifier [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
expression -> expression . LEFTBRACKET parser_generator_separated_nonempty_list(COMMA,subscript_key) RIGHTBRACKET [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
## Transitions:
-- On SLASH shift to state 52
-- On RIGHTANGLERIGHTANGLE shift to state 95
-- On PLUS shift to state 97
-- On PERCENT shift to state 99
-- On MINUS shift to state 104
-- On LEFTPARENS shift to state 39
-- On LEFTBRACKET shift to state 55
-- On LEFTANGLELEFTANGLE shift to state 106
-- On HAT shift to state 108
-- On DOT shift to state 90
-- On BAR shift to state 112
-- On AT shift to state 92
-- On ASTERIKS shift to state 101
-- On AMPERSAND shift to state 110
## Reductions:
-- On SLASHSLASHEQUALS SLASHEQUALS SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PERCENTEQUALS OR NOT NEWLINE MINUSEQUALS LEFTANGLELEFTANGLEEQUALS LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS COMMA COLON BAREQUALS ATEQUALS ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS
--   reduce production comparison_operator -> RIGHTANGLE expression

State 119:
## Known stack suffix:
## NOT
## LR(1) items:
comparison_operator -> NOT . IN expression [ SLASHSLASHEQUALS SLASHEQUALS SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PERCENTEQUALS OR NOT NEWLINE MINUSEQUALS LEFTANGLELEFTANGLEEQUALS LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS COMMA COLON BAREQUALS ATEQUALS ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS ]
## Transitions:
-- On IN shift to state 120
## Reductions:

State 120:
## Known stack suffix:
## NOT IN
## LR(1) items:
comparison_operator -> NOT IN . expression [ SLASHSLASHEQUALS SLASHEQUALS SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PERCENTEQUALS OR NOT NEWLINE MINUSEQUALS LEFTANGLELEFTANGLEEQUALS LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS COMMA COLON BAREQUALS ATEQUALS ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS ]
## Transitions:
-- On TRUE shift to state 4
-- On TILDE shift to state 5
-- On STRING shift to state 6
-- On PLUS shift to state 12
-- On NOT shift to state 13
-- On MINUS shift to state 14
-- On LEFTPARENS shift to state 15
-- On LEFTCURLY shift to state 18
-- On LEFTBRACKET shift to state 20
-- On INTEGER shift to state 22
-- On IDENTIFIER shift to state 23
-- On FORMAT shift to state 24
-- On FLOAT shift to state 26
-- On FALSE shift to state 27
-- On ELLIPSES shift to state 28
-- On COMPLEX shift to state 29
-- On BYTES shift to state 30
-- On AWAIT shift to state 32
-- On ASYNC shift to state 33
-- On ASTERIKS shift to state 34
-- On set_or_dictionary shift to state 35
-- On nonempty_list(BYTES) shift to state 36
-- On identifier shift to state 37
-- On expression shift to state 121
-- On atom shift to state 71
## Reductions:

State 121:
## Known stack suffix:
## NOT IN expression
## LR(1) items:
atom -> expression . PLUS expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . AT expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . AMPERSAND expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . BAR expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . HAT expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . SLASH SLASH expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . SLASH expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . LEFTANGLELEFTANGLE expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . PERCENT expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . ASTERIKS ASTERIKS expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . ASTERIKS expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . RIGHTANGLERIGHTANGLE expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . MINUS expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . LEFTPARENS arguments RIGHTPARENS [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
comparison_operator -> NOT IN expression . [ SLASHSLASHEQUALS SLASHEQUALS SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PERCENTEQUALS OR NOT NEWLINE MINUSEQUALS LEFTANGLELEFTANGLEEQUALS LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS COMMA COLON BAREQUALS ATEQUALS ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS ]
expression -> expression . DOT identifier [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
expression -> expression . LEFTBRACKET parser_generator_separated_nonempty_list(COMMA,subscript_key) RIGHTBRACKET [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
## Transitions:
-- On SLASH shift to state 52
-- On RIGHTANGLERIGHTANGLE shift to state 95
-- On PLUS shift to state 97
-- On PERCENT shift to state 99
-- On MINUS shift to state 104
-- On LEFTPARENS shift to state 39
-- On LEFTBRACKET shift to state 55
-- On LEFTANGLELEFTANGLE shift to state 106
-- On HAT shift to state 108
-- On DOT shift to state 90
-- On BAR shift to state 112
-- On AT shift to state 92
-- On ASTERIKS shift to state 101
-- On AMPERSAND shift to state 110
## Reductions:
-- On SLASHSLASHEQUALS SLASHEQUALS SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PERCENTEQUALS OR NOT NEWLINE MINUSEQUALS LEFTANGLELEFTANGLEEQUALS LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS COMMA COLON BAREQUALS ATEQUALS ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS
--   reduce production comparison_operator -> NOT IN expression

State 122:
## Known stack suffix:
## LEFTANGLEEQUALS
## LR(1) items:
comparison_operator -> LEFTANGLEEQUALS . expression [ SLASHSLASHEQUALS SLASHEQUALS SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PERCENTEQUALS OR NOT NEWLINE MINUSEQUALS LEFTANGLELEFTANGLEEQUALS LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS COMMA COLON BAREQUALS ATEQUALS ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS ]
## Transitions:
-- On TRUE shift to state 4
-- On TILDE shift to state 5
-- On STRING shift to state 6
-- On PLUS shift to state 12
-- On NOT shift to state 13
-- On MINUS shift to state 14
-- On LEFTPARENS shift to state 15
-- On LEFTCURLY shift to state 18
-- On LEFTBRACKET shift to state 20
-- On INTEGER shift to state 22
-- On IDENTIFIER shift to state 23
-- On FORMAT shift to state 24
-- On FLOAT shift to state 26
-- On FALSE shift to state 27
-- On ELLIPSES shift to state 28
-- On COMPLEX shift to state 29
-- On BYTES shift to state 30
-- On AWAIT shift to state 32
-- On ASYNC shift to state 33
-- On ASTERIKS shift to state 34
-- On set_or_dictionary shift to state 35
-- On nonempty_list(BYTES) shift to state 36
-- On identifier shift to state 37
-- On expression shift to state 123
-- On atom shift to state 71
## Reductions:

State 123:
## Known stack suffix:
## LEFTANGLEEQUALS expression
## LR(1) items:
atom -> expression . PLUS expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . AT expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . AMPERSAND expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . BAR expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . HAT expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . SLASH SLASH expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . SLASH expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . LEFTANGLELEFTANGLE expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . PERCENT expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . ASTERIKS ASTERIKS expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . ASTERIKS expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . RIGHTANGLERIGHTANGLE expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . MINUS expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . LEFTPARENS arguments RIGHTPARENS [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
comparison_operator -> LEFTANGLEEQUALS expression . [ SLASHSLASHEQUALS SLASHEQUALS SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PERCENTEQUALS OR NOT NEWLINE MINUSEQUALS LEFTANGLELEFTANGLEEQUALS LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS COMMA COLON BAREQUALS ATEQUALS ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS ]
expression -> expression . DOT identifier [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
expression -> expression . LEFTBRACKET parser_generator_separated_nonempty_list(COMMA,subscript_key) RIGHTBRACKET [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
## Transitions:
-- On SLASH shift to state 52
-- On RIGHTANGLERIGHTANGLE shift to state 95
-- On PLUS shift to state 97
-- On PERCENT shift to state 99
-- On MINUS shift to state 104
-- On LEFTPARENS shift to state 39
-- On LEFTBRACKET shift to state 55
-- On LEFTANGLELEFTANGLE shift to state 106
-- On HAT shift to state 108
-- On DOT shift to state 90
-- On BAR shift to state 112
-- On AT shift to state 92
-- On ASTERIKS shift to state 101
-- On AMPERSAND shift to state 110
## Reductions:
-- On SLASHSLASHEQUALS SLASHEQUALS SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PERCENTEQUALS OR NOT NEWLINE MINUSEQUALS LEFTANGLELEFTANGLEEQUALS LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS COMMA COLON BAREQUALS ATEQUALS ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS
--   reduce production comparison_operator -> LEFTANGLEEQUALS expression

State 124:
## Known stack suffix:
## LEFTANGLE
## LR(1) items:
comparison_operator -> LEFTANGLE . expression [ SLASHSLASHEQUALS SLASHEQUALS SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PERCENTEQUALS OR NOT NEWLINE MINUSEQUALS LEFTANGLELEFTANGLEEQUALS LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS COMMA COLON BAREQUALS ATEQUALS ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS ]
## Transitions:
-- On TRUE shift to state 4
-- On TILDE shift to state 5
-- On STRING shift to state 6
-- On PLUS shift to state 12
-- On NOT shift to state 13
-- On MINUS shift to state 14
-- On LEFTPARENS shift to state 15
-- On LEFTCURLY shift to state 18
-- On LEFTBRACKET shift to state 20
-- On INTEGER shift to state 22
-- On IDENTIFIER shift to state 23
-- On FORMAT shift to state 24
-- On FLOAT shift to state 26
-- On FALSE shift to state 27
-- On ELLIPSES shift to state 28
-- On COMPLEX shift to state 29
-- On BYTES shift to state 30
-- On AWAIT shift to state 32
-- On ASYNC shift to state 33
-- On ASTERIKS shift to state 34
-- On set_or_dictionary shift to state 35
-- On nonempty_list(BYTES) shift to state 36
-- On identifier shift to state 37
-- On expression shift to state 125
-- On atom shift to state 71
## Reductions:

State 125:
## Known stack suffix:
## LEFTANGLE expression
## LR(1) items:
atom -> expression . PLUS expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . AT expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . AMPERSAND expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . BAR expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . HAT expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . SLASH SLASH expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . SLASH expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . LEFTANGLELEFTANGLE expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . PERCENT expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . ASTERIKS ASTERIKS expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . ASTERIKS expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . RIGHTANGLERIGHTANGLE expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . MINUS expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . LEFTPARENS arguments RIGHTPARENS [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
comparison_operator -> LEFTANGLE expression . [ SLASHSLASHEQUALS SLASHEQUALS SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PERCENTEQUALS OR NOT NEWLINE MINUSEQUALS LEFTANGLELEFTANGLEEQUALS LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS COMMA COLON BAREQUALS ATEQUALS ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS ]
expression -> expression . DOT identifier [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
expression -> expression . LEFTBRACKET parser_generator_separated_nonempty_list(COMMA,subscript_key) RIGHTBRACKET [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
## Transitions:
-- On SLASH shift to state 52
-- On RIGHTANGLERIGHTANGLE shift to state 95
-- On PLUS shift to state 97
-- On PERCENT shift to state 99
-- On MINUS shift to state 104
-- On LEFTPARENS shift to state 39
-- On LEFTBRACKET shift to state 55
-- On LEFTANGLELEFTANGLE shift to state 106
-- On HAT shift to state 108
-- On DOT shift to state 90
-- On BAR shift to state 112
-- On AT shift to state 92
-- On ASTERIKS shift to state 101
-- On AMPERSAND shift to state 110
## Reductions:
-- On SLASHSLASHEQUALS SLASHEQUALS SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PERCENTEQUALS OR NOT NEWLINE MINUSEQUALS LEFTANGLELEFTANGLEEQUALS LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS COMMA COLON BAREQUALS ATEQUALS ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS
--   reduce production comparison_operator -> LEFTANGLE expression

State 126:
## Known stack suffix:
## ISNOT
## LR(1) items:
comparison_operator -> ISNOT . expression [ SLASHSLASHEQUALS SLASHEQUALS SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PERCENTEQUALS OR NOT NEWLINE MINUSEQUALS LEFTANGLELEFTANGLEEQUALS LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS COMMA COLON BAREQUALS ATEQUALS ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS ]
## Transitions:
-- On TRUE shift to state 4
-- On TILDE shift to state 5
-- On STRING shift to state 6
-- On PLUS shift to state 12
-- On NOT shift to state 13
-- On MINUS shift to state 14
-- On LEFTPARENS shift to state 15
-- On LEFTCURLY shift to state 18
-- On LEFTBRACKET shift to state 20
-- On INTEGER shift to state 22
-- On IDENTIFIER shift to state 23
-- On FORMAT shift to state 24
-- On FLOAT shift to state 26
-- On FALSE shift to state 27
-- On ELLIPSES shift to state 28
-- On COMPLEX shift to state 29
-- On BYTES shift to state 30
-- On AWAIT shift to state 32
-- On ASYNC shift to state 33
-- On ASTERIKS shift to state 34
-- On set_or_dictionary shift to state 35
-- On nonempty_list(BYTES) shift to state 36
-- On identifier shift to state 37
-- On expression shift to state 127
-- On atom shift to state 71
## Reductions:

State 127:
## Known stack suffix:
## ISNOT expression
## LR(1) items:
atom -> expression . PLUS expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . AT expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . AMPERSAND expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . BAR expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . HAT expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . SLASH SLASH expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . SLASH expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . LEFTANGLELEFTANGLE expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . PERCENT expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . ASTERIKS ASTERIKS expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . ASTERIKS expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . RIGHTANGLERIGHTANGLE expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . MINUS expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . LEFTPARENS arguments RIGHTPARENS [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
comparison_operator -> ISNOT expression . [ SLASHSLASHEQUALS SLASHEQUALS SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PERCENTEQUALS OR NOT NEWLINE MINUSEQUALS LEFTANGLELEFTANGLEEQUALS LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS COMMA COLON BAREQUALS ATEQUALS ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS ]
expression -> expression . DOT identifier [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
expression -> expression . LEFTBRACKET parser_generator_separated_nonempty_list(COMMA,subscript_key) RIGHTBRACKET [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
## Transitions:
-- On SLASH shift to state 52
-- On RIGHTANGLERIGHTANGLE shift to state 95
-- On PLUS shift to state 97
-- On PERCENT shift to state 99
-- On MINUS shift to state 104
-- On LEFTPARENS shift to state 39
-- On LEFTBRACKET shift to state 55
-- On LEFTANGLELEFTANGLE shift to state 106
-- On HAT shift to state 108
-- On DOT shift to state 90
-- On BAR shift to state 112
-- On AT shift to state 92
-- On ASTERIKS shift to state 101
-- On AMPERSAND shift to state 110
## Reductions:
-- On SLASHSLASHEQUALS SLASHEQUALS SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PERCENTEQUALS OR NOT NEWLINE MINUSEQUALS LEFTANGLELEFTANGLEEQUALS LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS COMMA COLON BAREQUALS ATEQUALS ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS
--   reduce production comparison_operator -> ISNOT expression

State 128:
## Known stack suffix:
## IS
## LR(1) items:
comparison_operator -> IS . expression [ SLASHSLASHEQUALS SLASHEQUALS SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PERCENTEQUALS OR NOT NEWLINE MINUSEQUALS LEFTANGLELEFTANGLEEQUALS LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS COMMA COLON BAREQUALS ATEQUALS ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS ]
## Transitions:
-- On TRUE shift to state 4
-- On TILDE shift to state 5
-- On STRING shift to state 6
-- On PLUS shift to state 12
-- On NOT shift to state 13
-- On MINUS shift to state 14
-- On LEFTPARENS shift to state 15
-- On LEFTCURLY shift to state 18
-- On LEFTBRACKET shift to state 20
-- On INTEGER shift to state 22
-- On IDENTIFIER shift to state 23
-- On FORMAT shift to state 24
-- On FLOAT shift to state 26
-- On FALSE shift to state 27
-- On ELLIPSES shift to state 28
-- On COMPLEX shift to state 29
-- On BYTES shift to state 30
-- On AWAIT shift to state 32
-- On ASYNC shift to state 33
-- On ASTERIKS shift to state 34
-- On set_or_dictionary shift to state 35
-- On nonempty_list(BYTES) shift to state 36
-- On identifier shift to state 37
-- On expression shift to state 129
-- On atom shift to state 71
## Reductions:

State 129:
## Known stack suffix:
## IS expression
## LR(1) items:
atom -> expression . PLUS expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . AT expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . AMPERSAND expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . BAR expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . HAT expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . SLASH SLASH expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . SLASH expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . LEFTANGLELEFTANGLE expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . PERCENT expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . ASTERIKS ASTERIKS expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . ASTERIKS expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . RIGHTANGLERIGHTANGLE expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . MINUS expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . LEFTPARENS arguments RIGHTPARENS [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
comparison_operator -> IS expression . [ SLASHSLASHEQUALS SLASHEQUALS SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PERCENTEQUALS OR NOT NEWLINE MINUSEQUALS LEFTANGLELEFTANGLEEQUALS LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS COMMA COLON BAREQUALS ATEQUALS ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS ]
expression -> expression . DOT identifier [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
expression -> expression . LEFTBRACKET parser_generator_separated_nonempty_list(COMMA,subscript_key) RIGHTBRACKET [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
## Transitions:
-- On SLASH shift to state 52
-- On RIGHTANGLERIGHTANGLE shift to state 95
-- On PLUS shift to state 97
-- On PERCENT shift to state 99
-- On MINUS shift to state 104
-- On LEFTPARENS shift to state 39
-- On LEFTBRACKET shift to state 55
-- On LEFTANGLELEFTANGLE shift to state 106
-- On HAT shift to state 108
-- On DOT shift to state 90
-- On BAR shift to state 112
-- On AT shift to state 92
-- On ASTERIKS shift to state 101
-- On AMPERSAND shift to state 110
## Reductions:
-- On SLASHSLASHEQUALS SLASHEQUALS SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PERCENTEQUALS OR NOT NEWLINE MINUSEQUALS LEFTANGLELEFTANGLEEQUALS LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS COMMA COLON BAREQUALS ATEQUALS ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS
--   reduce production comparison_operator -> IS expression

State 130:
## Known stack suffix:
## IN
## LR(1) items:
comparison_operator -> IN . expression [ SLASHSLASHEQUALS SLASHEQUALS SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PERCENTEQUALS OR NOT NEWLINE MINUSEQUALS LEFTANGLELEFTANGLEEQUALS LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS COMMA COLON BAREQUALS ATEQUALS ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS ]
## Transitions:
-- On TRUE shift to state 4
-- On TILDE shift to state 5
-- On STRING shift to state 6
-- On PLUS shift to state 12
-- On NOT shift to state 13
-- On MINUS shift to state 14
-- On LEFTPARENS shift to state 15
-- On LEFTCURLY shift to state 18
-- On LEFTBRACKET shift to state 20
-- On INTEGER shift to state 22
-- On IDENTIFIER shift to state 23
-- On FORMAT shift to state 24
-- On FLOAT shift to state 26
-- On FALSE shift to state 27
-- On ELLIPSES shift to state 28
-- On COMPLEX shift to state 29
-- On BYTES shift to state 30
-- On AWAIT shift to state 32
-- On ASYNC shift to state 33
-- On ASTERIKS shift to state 34
-- On set_or_dictionary shift to state 35
-- On nonempty_list(BYTES) shift to state 36
-- On identifier shift to state 37
-- On expression shift to state 131
-- On atom shift to state 71
## Reductions:

State 131:
## Known stack suffix:
## IN expression
## LR(1) items:
atom -> expression . PLUS expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . AT expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . AMPERSAND expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . BAR expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . HAT expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . SLASH SLASH expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . SLASH expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . LEFTANGLELEFTANGLE expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . PERCENT expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . ASTERIKS ASTERIKS expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . ASTERIKS expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . RIGHTANGLERIGHTANGLE expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . MINUS expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . LEFTPARENS arguments RIGHTPARENS [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
comparison_operator -> IN expression . [ SLASHSLASHEQUALS SLASHEQUALS SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PERCENTEQUALS OR NOT NEWLINE MINUSEQUALS LEFTANGLELEFTANGLEEQUALS LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS COMMA COLON BAREQUALS ATEQUALS ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS ]
expression -> expression . DOT identifier [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
expression -> expression . LEFTBRACKET parser_generator_separated_nonempty_list(COMMA,subscript_key) RIGHTBRACKET [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
## Transitions:
-- On SLASH shift to state 52
-- On RIGHTANGLERIGHTANGLE shift to state 95
-- On PLUS shift to state 97
-- On PERCENT shift to state 99
-- On MINUS shift to state 104
-- On LEFTPARENS shift to state 39
-- On LEFTBRACKET shift to state 55
-- On LEFTANGLELEFTANGLE shift to state 106
-- On HAT shift to state 108
-- On DOT shift to state 90
-- On BAR shift to state 112
-- On AT shift to state 92
-- On ASTERIKS shift to state 101
-- On AMPERSAND shift to state 110
## Reductions:
-- On SLASHSLASHEQUALS SLASHEQUALS SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PERCENTEQUALS OR NOT NEWLINE MINUSEQUALS LEFTANGLELEFTANGLEEQUALS LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS COMMA COLON BAREQUALS ATEQUALS ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS
--   reduce production comparison_operator -> IN expression

State 132:
## Known stack suffix:
## EXCLAMATIONMARK
## LR(1) items:
comparison_operator -> EXCLAMATIONMARK . EQUALS expression [ SLASHSLASHEQUALS SLASHEQUALS SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PERCENTEQUALS OR NOT NEWLINE MINUSEQUALS LEFTANGLELEFTANGLEEQUALS LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS COMMA COLON BAREQUALS ATEQUALS ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS ]
## Transitions:
-- On EQUALS shift to state 133
## Reductions:

State 133:
## Known stack suffix:
## EXCLAMATIONMARK EQUALS
## LR(1) items:
comparison_operator -> EXCLAMATIONMARK EQUALS . expression [ SLASHSLASHEQUALS SLASHEQUALS SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PERCENTEQUALS OR NOT NEWLINE MINUSEQUALS LEFTANGLELEFTANGLEEQUALS LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS COMMA COLON BAREQUALS ATEQUALS ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS ]
## Transitions:
-- On TRUE shift to state 4
-- On TILDE shift to state 5
-- On STRING shift to state 6
-- On PLUS shift to state 12
-- On NOT shift to state 13
-- On MINUS shift to state 14
-- On LEFTPARENS shift to state 15
-- On LEFTCURLY shift to state 18
-- On LEFTBRACKET shift to state 20
-- On INTEGER shift to state 22
-- On IDENTIFIER shift to state 23
-- On FORMAT shift to state 24
-- On FLOAT shift to state 26
-- On FALSE shift to state 27
-- On ELLIPSES shift to state 28
-- On COMPLEX shift to state 29
-- On BYTES shift to state 30
-- On AWAIT shift to state 32
-- On ASYNC shift to state 33
-- On ASTERIKS shift to state 34
-- On set_or_dictionary shift to state 35
-- On nonempty_list(BYTES) shift to state 36
-- On identifier shift to state 37
-- On expression shift to state 134
-- On atom shift to state 71
## Reductions:

State 134:
## Known stack suffix:
## EXCLAMATIONMARK EQUALS expression
## LR(1) items:
atom -> expression . PLUS expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . AT expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . AMPERSAND expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . BAR expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . HAT expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . SLASH SLASH expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . SLASH expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . LEFTANGLELEFTANGLE expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . PERCENT expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . ASTERIKS ASTERIKS expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . ASTERIKS expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . RIGHTANGLERIGHTANGLE expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . MINUS expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . LEFTPARENS arguments RIGHTPARENS [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
comparison_operator -> EXCLAMATIONMARK EQUALS expression . [ SLASHSLASHEQUALS SLASHEQUALS SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PERCENTEQUALS OR NOT NEWLINE MINUSEQUALS LEFTANGLELEFTANGLEEQUALS LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS COMMA COLON BAREQUALS ATEQUALS ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS ]
expression -> expression . DOT identifier [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
expression -> expression . LEFTBRACKET parser_generator_separated_nonempty_list(COMMA,subscript_key) RIGHTBRACKET [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
## Transitions:
-- On SLASH shift to state 52
-- On RIGHTANGLERIGHTANGLE shift to state 95
-- On PLUS shift to state 97
-- On PERCENT shift to state 99
-- On MINUS shift to state 104
-- On LEFTPARENS shift to state 39
-- On LEFTBRACKET shift to state 55
-- On LEFTANGLELEFTANGLE shift to state 106
-- On HAT shift to state 108
-- On DOT shift to state 90
-- On BAR shift to state 112
-- On AT shift to state 92
-- On ASTERIKS shift to state 101
-- On AMPERSAND shift to state 110
## Reductions:
-- On SLASHSLASHEQUALS SLASHEQUALS SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PERCENTEQUALS OR NOT NEWLINE MINUSEQUALS LEFTANGLELEFTANGLEEQUALS LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS COMMA COLON BAREQUALS ATEQUALS ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS
--   reduce production comparison_operator -> EXCLAMATIONMARK EQUALS expression

State 135:
## Known stack suffix:
## DOUBLEEQUALS
## LR(1) items:
comparison_operator -> DOUBLEEQUALS . expression [ SLASHSLASHEQUALS SLASHEQUALS SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PERCENTEQUALS OR NOT NEWLINE MINUSEQUALS LEFTANGLELEFTANGLEEQUALS LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS COMMA COLON BAREQUALS ATEQUALS ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS ]
## Transitions:
-- On TRUE shift to state 4
-- On TILDE shift to state 5
-- On STRING shift to state 6
-- On PLUS shift to state 12
-- On NOT shift to state 13
-- On MINUS shift to state 14
-- On LEFTPARENS shift to state 15
-- On LEFTCURLY shift to state 18
-- On LEFTBRACKET shift to state 20
-- On INTEGER shift to state 22
-- On IDENTIFIER shift to state 23
-- On FORMAT shift to state 24
-- On FLOAT shift to state 26
-- On FALSE shift to state 27
-- On ELLIPSES shift to state 28
-- On COMPLEX shift to state 29
-- On BYTES shift to state 30
-- On AWAIT shift to state 32
-- On ASYNC shift to state 33
-- On ASTERIKS shift to state 34
-- On set_or_dictionary shift to state 35
-- On nonempty_list(BYTES) shift to state 36
-- On identifier shift to state 37
-- On expression shift to state 136
-- On atom shift to state 71
## Reductions:

State 136:
## Known stack suffix:
## DOUBLEEQUALS expression
## LR(1) items:
atom -> expression . PLUS expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . AT expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . AMPERSAND expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . BAR expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . HAT expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . SLASH SLASH expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . SLASH expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . LEFTANGLELEFTANGLE expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . PERCENT expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . ASTERIKS ASTERIKS expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . ASTERIKS expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . RIGHTANGLERIGHTANGLE expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . MINUS expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . LEFTPARENS arguments RIGHTPARENS [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
comparison_operator -> DOUBLEEQUALS expression . [ SLASHSLASHEQUALS SLASHEQUALS SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PERCENTEQUALS OR NOT NEWLINE MINUSEQUALS LEFTANGLELEFTANGLEEQUALS LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS COMMA COLON BAREQUALS ATEQUALS ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS ]
expression -> expression . DOT identifier [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
expression -> expression . LEFTBRACKET parser_generator_separated_nonempty_list(COMMA,subscript_key) RIGHTBRACKET [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
## Transitions:
-- On SLASH shift to state 52
-- On RIGHTANGLERIGHTANGLE shift to state 95
-- On PLUS shift to state 97
-- On PERCENT shift to state 99
-- On MINUS shift to state 104
-- On LEFTPARENS shift to state 39
-- On LEFTBRACKET shift to state 55
-- On LEFTANGLELEFTANGLE shift to state 106
-- On HAT shift to state 108
-- On DOT shift to state 90
-- On BAR shift to state 112
-- On AT shift to state 92
-- On ASTERIKS shift to state 101
-- On AMPERSAND shift to state 110
## Reductions:
-- On SLASHSLASHEQUALS SLASHEQUALS SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PERCENTEQUALS OR NOT NEWLINE MINUSEQUALS LEFTANGLELEFTANGLEEQUALS LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS COMMA COLON BAREQUALS ATEQUALS ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS
--   reduce production comparison_operator -> DOUBLEEQUALS expression

State 137:
## Known stack suffix:
## expression nonempty_list(comparison_operator)
## LR(1) items:
comparison -> expression nonempty_list(comparison_operator) . [ SLASHSLASHEQUALS SLASHEQUALS SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS PLUSEQUALS PERCENTEQUALS OR NEWLINE MINUSEQUALS LEFTANGLELEFTANGLEEQUALS IF HATEQUALS FROM FOR EQUALS ELSE COMMA COLON BAREQUALS ATEQUALS ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production comparison -> expression nonempty_list(comparison_operator)

State 138:
## Known stack suffix:
## comparison_operator
## LR(1) items:
nonempty_list(comparison_operator) -> comparison_operator . [ SLASHSLASHEQUALS SLASHEQUALS SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS PLUSEQUALS PERCENTEQUALS OR NEWLINE MINUSEQUALS LEFTANGLELEFTANGLEEQUALS IF HATEQUALS FROM FOR EQUALS ELSE COMMA COLON BAREQUALS ATEQUALS ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS ]
nonempty_list(comparison_operator) -> comparison_operator . nonempty_list(comparison_operator) [ SLASHSLASHEQUALS SLASHEQUALS SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS PLUSEQUALS PERCENTEQUALS OR NEWLINE MINUSEQUALS LEFTANGLELEFTANGLEEQUALS IF HATEQUALS FROM FOR EQUALS ELSE COMMA COLON BAREQUALS ATEQUALS ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS ]
## Transitions:
-- On RIGHTANGLEEQUALS shift to state 115
-- On RIGHTANGLE shift to state 117
-- On NOT shift to state 119
-- On LEFTANGLEEQUALS shift to state 122
-- On LEFTANGLE shift to state 124
-- On ISNOT shift to state 126
-- On IS shift to state 128
-- On IN shift to state 130
-- On EXCLAMATIONMARK shift to state 132
-- On DOUBLEEQUALS shift to state 135
-- On nonempty_list(comparison_operator) shift to state 139
-- On comparison_operator shift to state 138
## Reductions:
-- On SLASHSLASHEQUALS SLASHEQUALS SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS PLUSEQUALS PERCENTEQUALS OR NEWLINE MINUSEQUALS LEFTANGLELEFTANGLEEQUALS IF HATEQUALS FROM FOR EQUALS ELSE COMMA COLON BAREQUALS ATEQUALS ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS
--   reduce production nonempty_list(comparison_operator) -> comparison_operator

State 139:
## Known stack suffix:
## comparison_operator nonempty_list(comparison_operator)
## LR(1) items:
nonempty_list(comparison_operator) -> comparison_operator nonempty_list(comparison_operator) . [ SLASHSLASHEQUALS SLASHEQUALS SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS PLUSEQUALS PERCENTEQUALS OR NEWLINE MINUSEQUALS LEFTANGLELEFTANGLEEQUALS IF HATEQUALS FROM FOR EQUALS ELSE COMMA COLON BAREQUALS ATEQUALS ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production nonempty_list(comparison_operator) -> comparison_operator nonempty_list(comparison_operator)

State 140:
## Known stack suffix:
## not_test AND and_test
## LR(1) items:
and_test -> not_test AND and_test . [ SLASHSLASHEQUALS SLASHEQUALS SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS PLUSEQUALS PERCENTEQUALS OR NEWLINE MINUSEQUALS LEFTANGLELEFTANGLEEQUALS IF HATEQUALS FROM FOR EQUALS ELSE COMMA COLON BAREQUALS ATEQUALS ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS AS ANNOTATION_COMMENT AMPERSANDEQUALS ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production and_test -> not_test AND and_test

State 141:
## Known stack suffix:
## FOR expression_list IN or_test list(condition)
## LR(1) items:
comprehension -> FOR expression_list IN or_test list(condition) . [ RIGHTPARENS RIGHTCURLY RIGHTBRACKET FOR COMMA ASYNC ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production comprehension -> FOR expression_list IN or_test list(condition)

State 142:
## Known stack suffix:
## condition
## LR(1) items:
list(condition) -> condition . list(condition) [ RIGHTPARENS RIGHTCURLY RIGHTBRACKET FOR COMMA ASYNC ]
## Transitions:
-- On IF shift to state 47
-- On list(condition) shift to state 143
-- On condition shift to state 142
## Reductions:
-- On RIGHTPARENS RIGHTCURLY RIGHTBRACKET FOR COMMA ASYNC
--   reduce production list(condition) ->

State 143:
## Known stack suffix:
## condition list(condition)
## LR(1) items:
list(condition) -> condition list(condition) . [ RIGHTPARENS RIGHTCURLY RIGHTBRACKET FOR COMMA ASYNC ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production list(condition) -> condition list(condition)

State 144:
## Known stack suffix:
## expression
## LR(1) items:
atom -> expression . PLUS expression [ SLASH SEMICOLON RIGHTANGLERIGHTANGLE PLUS PERCENT NEWLINE MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLE IN HAT DOT COMMA BAR AT ASTERIKS AMPERSAND ]
atom -> expression . AT expression [ SLASH SEMICOLON RIGHTANGLERIGHTANGLE PLUS PERCENT NEWLINE MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLE IN HAT DOT COMMA BAR AT ASTERIKS AMPERSAND ]
atom -> expression . AMPERSAND expression [ SLASH SEMICOLON RIGHTANGLERIGHTANGLE PLUS PERCENT NEWLINE MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLE IN HAT DOT COMMA BAR AT ASTERIKS AMPERSAND ]
atom -> expression . BAR expression [ SLASH SEMICOLON RIGHTANGLERIGHTANGLE PLUS PERCENT NEWLINE MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLE IN HAT DOT COMMA BAR AT ASTERIKS AMPERSAND ]
atom -> expression . HAT expression [ SLASH SEMICOLON RIGHTANGLERIGHTANGLE PLUS PERCENT NEWLINE MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLE IN HAT DOT COMMA BAR AT ASTERIKS AMPERSAND ]
atom -> expression . SLASH SLASH expression [ SLASH SEMICOLON RIGHTANGLERIGHTANGLE PLUS PERCENT NEWLINE MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLE IN HAT DOT COMMA BAR AT ASTERIKS AMPERSAND ]
atom -> expression . SLASH expression [ SLASH SEMICOLON RIGHTANGLERIGHTANGLE PLUS PERCENT NEWLINE MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLE IN HAT DOT COMMA BAR AT ASTERIKS AMPERSAND ]
atom -> expression . LEFTANGLELEFTANGLE expression [ SLASH SEMICOLON RIGHTANGLERIGHTANGLE PLUS PERCENT NEWLINE MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLE IN HAT DOT COMMA BAR AT ASTERIKS AMPERSAND ]
atom -> expression . PERCENT expression [ SLASH SEMICOLON RIGHTANGLERIGHTANGLE PLUS PERCENT NEWLINE MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLE IN HAT DOT COMMA BAR AT ASTERIKS AMPERSAND ]
atom -> expression . ASTERIKS ASTERIKS expression [ SLASH SEMICOLON RIGHTANGLERIGHTANGLE PLUS PERCENT NEWLINE MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLE IN HAT DOT COMMA BAR AT ASTERIKS AMPERSAND ]
atom -> expression . ASTERIKS expression [ SLASH SEMICOLON RIGHTANGLERIGHTANGLE PLUS PERCENT NEWLINE MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLE IN HAT DOT COMMA BAR AT ASTERIKS AMPERSAND ]
atom -> expression . RIGHTANGLERIGHTANGLE expression [ SLASH SEMICOLON RIGHTANGLERIGHTANGLE PLUS PERCENT NEWLINE MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLE IN HAT DOT COMMA BAR AT ASTERIKS AMPERSAND ]
atom -> expression . MINUS expression [ SLASH SEMICOLON RIGHTANGLERIGHTANGLE PLUS PERCENT NEWLINE MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLE IN HAT DOT COMMA BAR AT ASTERIKS AMPERSAND ]
atom -> expression . LEFTPARENS arguments RIGHTPARENS [ SLASH SEMICOLON RIGHTANGLERIGHTANGLE PLUS PERCENT NEWLINE MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLE IN HAT DOT COMMA BAR AT ASTERIKS AMPERSAND ]
expression -> expression . DOT identifier [ SLASH SEMICOLON RIGHTANGLERIGHTANGLE PLUS PERCENT NEWLINE MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLE IN HAT DOT COMMA BAR AT ASTERIKS AMPERSAND ]
expression -> expression . LEFTBRACKET parser_generator_separated_nonempty_list(COMMA,subscript_key) RIGHTBRACKET [ SLASH SEMICOLON RIGHTANGLERIGHTANGLE PLUS PERCENT NEWLINE MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLE IN HAT DOT COMMA BAR AT ASTERIKS AMPERSAND ]
separated_nonempty_list_indicator(COMMA,expression) -> expression . separated_nonempty_list_indicator_tail(COMMA,expression) [ SEMICOLON NEWLINE IN ]
## Transitions:
-- On SLASH shift to state 52
-- On RIGHTANGLERIGHTANGLE shift to state 95
-- On PLUS shift to state 97
-- On PERCENT shift to state 99
-- On MINUS shift to state 104
-- On LEFTPARENS shift to state 39
-- On LEFTBRACKET shift to state 55
-- On LEFTANGLELEFTANGLE shift to state 106
-- On HAT shift to state 108
-- On DOT shift to state 90
-- On COMMA shift to state 145
-- On BAR shift to state 112
-- On AT shift to state 92
-- On ASTERIKS shift to state 101
-- On AMPERSAND shift to state 110
-- On separated_nonempty_list_indicator_tail(COMMA,expression) shift to state 148
## Reductions:
-- On SEMICOLON NEWLINE IN
--   reduce production separated_nonempty_list_indicator_tail(COMMA,expression) ->

State 145:
## Known stack suffix:
## COMMA
## LR(1) items:
separated_nonempty_list_indicator_tail(COMMA,expression) -> COMMA . [ SEMICOLON NEWLINE IN ]
separated_nonempty_list_indicator_tail(COMMA,expression) -> COMMA . expression separated_nonempty_list_indicator_tail(COMMA,expression) [ SEMICOLON NEWLINE IN ]
## Transitions:
-- On TRUE shift to state 4
-- On TILDE shift to state 5
-- On STRING shift to state 6
-- On PLUS shift to state 12
-- On NOT shift to state 13
-- On MINUS shift to state 14
-- On LEFTPARENS shift to state 15
-- On LEFTCURLY shift to state 18
-- On LEFTBRACKET shift to state 20
-- On INTEGER shift to state 22
-- On IDENTIFIER shift to state 23
-- On FORMAT shift to state 24
-- On FLOAT shift to state 26
-- On FALSE shift to state 27
-- On ELLIPSES shift to state 28
-- On COMPLEX shift to state 29
-- On BYTES shift to state 30
-- On AWAIT shift to state 32
-- On ASYNC shift to state 33
-- On ASTERIKS shift to state 34
-- On set_or_dictionary shift to state 35
-- On nonempty_list(BYTES) shift to state 36
-- On identifier shift to state 37
-- On expression shift to state 146
-- On atom shift to state 71
## Reductions:
-- On SEMICOLON NEWLINE IN
--   reduce production separated_nonempty_list_indicator_tail(COMMA,expression) -> COMMA

State 146:
## Known stack suffix:
## COMMA expression
## LR(1) items:
atom -> expression . PLUS expression [ SLASH SEMICOLON RIGHTANGLERIGHTANGLE PLUS PERCENT NEWLINE MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLE IN HAT DOT COMMA BAR AT ASTERIKS AMPERSAND ]
atom -> expression . AT expression [ SLASH SEMICOLON RIGHTANGLERIGHTANGLE PLUS PERCENT NEWLINE MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLE IN HAT DOT COMMA BAR AT ASTERIKS AMPERSAND ]
atom -> expression . AMPERSAND expression [ SLASH SEMICOLON RIGHTANGLERIGHTANGLE PLUS PERCENT NEWLINE MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLE IN HAT DOT COMMA BAR AT ASTERIKS AMPERSAND ]
atom -> expression . BAR expression [ SLASH SEMICOLON RIGHTANGLERIGHTANGLE PLUS PERCENT NEWLINE MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLE IN HAT DOT COMMA BAR AT ASTERIKS AMPERSAND ]
atom -> expression . HAT expression [ SLASH SEMICOLON RIGHTANGLERIGHTANGLE PLUS PERCENT NEWLINE MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLE IN HAT DOT COMMA BAR AT ASTERIKS AMPERSAND ]
atom -> expression . SLASH SLASH expression [ SLASH SEMICOLON RIGHTANGLERIGHTANGLE PLUS PERCENT NEWLINE MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLE IN HAT DOT COMMA BAR AT ASTERIKS AMPERSAND ]
atom -> expression . SLASH expression [ SLASH SEMICOLON RIGHTANGLERIGHTANGLE PLUS PERCENT NEWLINE MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLE IN HAT DOT COMMA BAR AT ASTERIKS AMPERSAND ]
atom -> expression . LEFTANGLELEFTANGLE expression [ SLASH SEMICOLON RIGHTANGLERIGHTANGLE PLUS PERCENT NEWLINE MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLE IN HAT DOT COMMA BAR AT ASTERIKS AMPERSAND ]
atom -> expression . PERCENT expression [ SLASH SEMICOLON RIGHTANGLERIGHTANGLE PLUS PERCENT NEWLINE MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLE IN HAT DOT COMMA BAR AT ASTERIKS AMPERSAND ]
atom -> expression . ASTERIKS ASTERIKS expression [ SLASH SEMICOLON RIGHTANGLERIGHTANGLE PLUS PERCENT NEWLINE MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLE IN HAT DOT COMMA BAR AT ASTERIKS AMPERSAND ]
atom -> expression . ASTERIKS expression [ SLASH SEMICOLON RIGHTANGLERIGHTANGLE PLUS PERCENT NEWLINE MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLE IN HAT DOT COMMA BAR AT ASTERIKS AMPERSAND ]
atom -> expression . RIGHTANGLERIGHTANGLE expression [ SLASH SEMICOLON RIGHTANGLERIGHTANGLE PLUS PERCENT NEWLINE MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLE IN HAT DOT COMMA BAR AT ASTERIKS AMPERSAND ]
atom -> expression . MINUS expression [ SLASH SEMICOLON RIGHTANGLERIGHTANGLE PLUS PERCENT NEWLINE MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLE IN HAT DOT COMMA BAR AT ASTERIKS AMPERSAND ]
atom -> expression . LEFTPARENS arguments RIGHTPARENS [ SLASH SEMICOLON RIGHTANGLERIGHTANGLE PLUS PERCENT NEWLINE MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLE IN HAT DOT COMMA BAR AT ASTERIKS AMPERSAND ]
expression -> expression . DOT identifier [ SLASH SEMICOLON RIGHTANGLERIGHTANGLE PLUS PERCENT NEWLINE MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLE IN HAT DOT COMMA BAR AT ASTERIKS AMPERSAND ]
expression -> expression . LEFTBRACKET parser_generator_separated_nonempty_list(COMMA,subscript_key) RIGHTBRACKET [ SLASH SEMICOLON RIGHTANGLERIGHTANGLE PLUS PERCENT NEWLINE MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLE IN HAT DOT COMMA BAR AT ASTERIKS AMPERSAND ]
separated_nonempty_list_indicator_tail(COMMA,expression) -> COMMA expression . separated_nonempty_list_indicator_tail(COMMA,expression) [ SEMICOLON NEWLINE IN ]
## Transitions:
-- On SLASH shift to state 52
-- On RIGHTANGLERIGHTANGLE shift to state 95
-- On PLUS shift to state 97
-- On PERCENT shift to state 99
-- On MINUS shift to state 104
-- On LEFTPARENS shift to state 39
-- On LEFTBRACKET shift to state 55
-- On LEFTANGLELEFTANGLE shift to state 106
-- On HAT shift to state 108
-- On DOT shift to state 90
-- On COMMA shift to state 145
-- On BAR shift to state 112
-- On AT shift to state 92
-- On ASTERIKS shift to state 101
-- On AMPERSAND shift to state 110
-- On separated_nonempty_list_indicator_tail(COMMA,expression) shift to state 147
## Reductions:
-- On SEMICOLON NEWLINE IN
--   reduce production separated_nonempty_list_indicator_tail(COMMA,expression) ->

State 147:
## Known stack suffix:
## COMMA expression separated_nonempty_list_indicator_tail(COMMA,expression)
## LR(1) items:
separated_nonempty_list_indicator_tail(COMMA,expression) -> COMMA expression separated_nonempty_list_indicator_tail(COMMA,expression) . [ SEMICOLON NEWLINE IN ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production separated_nonempty_list_indicator_tail(COMMA,expression) -> COMMA expression separated_nonempty_list_indicator_tail(COMMA,expression)

State 148:
## Known stack suffix:
## expression separated_nonempty_list_indicator_tail(COMMA,expression)
## LR(1) items:
separated_nonempty_list_indicator(COMMA,expression) -> expression separated_nonempty_list_indicator_tail(COMMA,expression) . [ SEMICOLON NEWLINE IN ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production separated_nonempty_list_indicator(COMMA,expression) -> expression separated_nonempty_list_indicator_tail(COMMA,expression)

State 149:
## Known stack suffix:
## ASYNC
## LR(1) items:
comprehension -> ASYNC . FOR expression_list IN or_test list(condition) [ RIGHTPARENS RIGHTCURLY RIGHTBRACKET FOR COMMA ASYNC ]
## Transitions:
-- On FOR shift to state 150
## Reductions:

State 150:
## Known stack suffix:
## ASYNC FOR
## LR(1) items:
comprehension -> ASYNC FOR . expression_list IN or_test list(condition) [ RIGHTPARENS RIGHTCURLY RIGHTBRACKET FOR COMMA ASYNC ]
## Transitions:
-- On TRUE shift to state 4
-- On TILDE shift to state 5
-- On STRING shift to state 6
-- On PLUS shift to state 12
-- On NOT shift to state 13
-- On MINUS shift to state 14
-- On LEFTPARENS shift to state 15
-- On LEFTCURLY shift to state 18
-- On LEFTBRACKET shift to state 20
-- On INTEGER shift to state 22
-- On IDENTIFIER shift to state 23
-- On FORMAT shift to state 24
-- On FLOAT shift to state 26
-- On FALSE shift to state 27
-- On ELLIPSES shift to state 28
-- On COMPLEX shift to state 29
-- On BYTES shift to state 30
-- On AWAIT shift to state 32
-- On ASYNC shift to state 33
-- On ASTERIKS shift to state 34
-- On set_or_dictionary shift to state 35
-- On separated_nonempty_list_indicator(COMMA,expression) shift to state 43
-- On nonempty_list(BYTES) shift to state 36
-- On identifier shift to state 37
-- On expression_list shift to state 151
-- On expression shift to state 144
-- On atom shift to state 71
## Reductions:

State 151:
## Known stack suffix:
## ASYNC FOR expression_list
## LR(1) items:
comprehension -> ASYNC FOR expression_list . IN or_test list(condition) [ RIGHTPARENS RIGHTCURLY RIGHTBRACKET FOR COMMA ASYNC ]
## Transitions:
-- On IN shift to state 152
## Reductions:

State 152:
## Known stack suffix:
## ASYNC FOR expression_list IN
## LR(1) items:
comprehension -> ASYNC FOR expression_list IN . or_test list(condition) [ RIGHTPARENS RIGHTCURLY RIGHTBRACKET FOR COMMA ASYNC ]
## Transitions:
-- On TRUE shift to state 4
-- On TILDE shift to state 5
-- On STRING shift to state 6
-- On PLUS shift to state 12
-- On NOT shift to state 17
-- On MINUS shift to state 14
-- On LEFTPARENS shift to state 15
-- On LEFTCURLY shift to state 18
-- On LEFTBRACKET shift to state 20
-- On INTEGER shift to state 22
-- On IDENTIFIER shift to state 23
-- On FORMAT shift to state 24
-- On FLOAT shift to state 26
-- On FALSE shift to state 27
-- On ELLIPSES shift to state 28
-- On COMPLEX shift to state 29
-- On BYTES shift to state 30
-- On AWAIT shift to state 32
-- On ASYNC shift to state 33
-- On ASTERIKS shift to state 34
-- On set_or_dictionary shift to state 35
-- On or_test shift to state 153
-- On not_test shift to state 49
-- On nonempty_list(BYTES) shift to state 36
-- On identifier shift to state 37
-- On expression shift to state 51
-- On comparison shift to state 70
-- On atom shift to state 71
-- On and_test shift to state 72
## Reductions:

State 153:
## Known stack suffix:
## ASYNC FOR expression_list IN or_test
## LR(1) items:
comprehension -> ASYNC FOR expression_list IN or_test . list(condition) [ RIGHTPARENS RIGHTCURLY RIGHTBRACKET FOR COMMA ASYNC ]
## Transitions:
-- On IF shift to state 47
-- On list(condition) shift to state 154
-- On condition shift to state 142
## Reductions:
-- On RIGHTPARENS RIGHTCURLY RIGHTBRACKET FOR COMMA ASYNC
--   reduce production list(condition) ->

State 154:
## Known stack suffix:
## ASYNC FOR expression_list IN or_test list(condition)
## LR(1) items:
comprehension -> ASYNC FOR expression_list IN or_test list(condition) . [ RIGHTPARENS RIGHTCURLY RIGHTBRACKET FOR COMMA ASYNC ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production comprehension -> ASYNC FOR expression_list IN or_test list(condition)

State 155:
## Known stack suffix:
## test nonempty_list(comprehension)
## LR(1) items:
generator -> test nonempty_list(comprehension) . [ RIGHTPARENS COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production generator -> test nonempty_list(comprehension)

State 156:
## Known stack suffix:
## comprehension
## LR(1) items:
nonempty_list(comprehension) -> comprehension . [ RIGHTPARENS RIGHTCURLY RIGHTBRACKET COMMA ]
nonempty_list(comprehension) -> comprehension . nonempty_list(comprehension) [ RIGHTPARENS RIGHTCURLY RIGHTBRACKET COMMA ]
## Transitions:
-- On FOR shift to state 42
-- On ASYNC shift to state 149
-- On nonempty_list(comprehension) shift to state 157
-- On comprehension shift to state 156
## Reductions:
-- On RIGHTPARENS RIGHTCURLY RIGHTBRACKET COMMA
--   reduce production nonempty_list(comprehension) -> comprehension

State 157:
## Known stack suffix:
## comprehension nonempty_list(comprehension)
## LR(1) items:
nonempty_list(comprehension) -> comprehension nonempty_list(comprehension) . [ RIGHTPARENS RIGHTCURLY RIGHTBRACKET COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production nonempty_list(comprehension) -> comprehension nonempty_list(comprehension)

State 158:
## Known stack suffix:
## parser_generator_separated_list(COMMA,argument)
## LR(1) items:
arguments -> parser_generator_separated_list(COMMA,argument) . [ RIGHTPARENS ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production arguments -> parser_generator_separated_list(COMMA,argument)

State 159:
## Known stack suffix:
## identifier
## LR(1) items:
argument -> identifier . EQUALS test [ RIGHTPARENS COMMA ]
atom -> identifier . [ SLASH RIGHTPARENS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUS PERCENT OR NOT MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HAT FOR EXCLAMATIONMARK DOUBLEEQUALS DOT COMMA BAR AT ASYNC ASTERIKS AND AMPERSAND ]
test -> identifier . COLONEQUALS test [ RIGHTPARENS FOR COMMA ASYNC ]
## Transitions:
-- On EQUALS shift to state 160
-- On COLONEQUALS shift to state 68
## Reductions:
-- On SLASH RIGHTPARENS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUS PERCENT OR NOT MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HAT FOR EXCLAMATIONMARK DOUBLEEQUALS DOT COMMA BAR AT ASYNC ASTERIKS AND AMPERSAND
--   reduce production atom -> identifier

State 160:
## Known stack suffix:
## identifier EQUALS
## LR(1) items:
argument -> identifier EQUALS . test [ RIGHTPARENS COMMA ]
## Transitions:
-- On TRUE shift to state 4
-- On TILDE shift to state 5
-- On STRING shift to state 6
-- On PLUS shift to state 12
-- On NOT shift to state 17
-- On MINUS shift to state 14
-- On LEFTPARENS shift to state 15
-- On LEFTCURLY shift to state 18
-- On LEFTBRACKET shift to state 20
-- On LAMBDA shift to state 21
-- On INTEGER shift to state 22
-- On IDENTIFIER shift to state 23
-- On FORMAT shift to state 24
-- On FLOAT shift to state 26
-- On FALSE shift to state 27
-- On ELLIPSES shift to state 28
-- On COMPLEX shift to state 29
-- On BYTES shift to state 30
-- On AWAIT shift to state 32
-- On ASYNC shift to state 33
-- On ASTERIKS shift to state 34
-- On test shift to state 161
-- On set_or_dictionary shift to state 35
-- On or_test shift to state 62
-- On not_test shift to state 49
-- On nonempty_list(BYTES) shift to state 36
-- On identifier shift to state 67
-- On expression shift to state 51
-- On comparison shift to state 70
-- On atom shift to state 71
-- On and_test shift to state 72
## Reductions:

State 161:
## Known stack suffix:
## identifier EQUALS test
## LR(1) items:
argument -> identifier EQUALS test . [ RIGHTPARENS COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production argument -> identifier EQUALS test

State 162:
## Known stack suffix:
## generator
## LR(1) items:
arguments -> generator . COMMA [ RIGHTPARENS ]
test_with_generator -> generator . [ RIGHTPARENS ]
## Transitions:
-- On COMMA shift to state 163
## Reductions:
-- On RIGHTPARENS
--   reduce production test_with_generator -> generator

State 163:
## Known stack suffix:
## generator COMMA
## LR(1) items:
arguments -> generator COMMA . [ RIGHTPARENS ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production arguments -> generator COMMA

State 164:
## Known stack suffix:
## expression LEFTPARENS arguments
## LR(1) items:
atom -> expression LEFTPARENS arguments . RIGHTPARENS [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
## Transitions:
-- On RIGHTPARENS shift to state 165
## Reductions:

State 165:
## Known stack suffix:
## expression LEFTPARENS arguments RIGHTPARENS
## LR(1) items:
atom -> expression LEFTPARENS arguments RIGHTPARENS . [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production atom -> expression LEFTPARENS arguments RIGHTPARENS

State 166:
## Known stack suffix:
## argument
## LR(1) items:
parser_generator_separated_list(COMMA,argument) -> argument . [ RIGHTPARENS ]
parser_generator_separated_list(COMMA,argument) -> argument . COMMA parser_generator_separated_list(COMMA,argument) [ RIGHTPARENS ]
## Transitions:
-- On COMMA shift to state 167
## Reductions:
-- On RIGHTPARENS
--   reduce production parser_generator_separated_list(COMMA,argument) -> argument

State 167:
## Known stack suffix:
## argument COMMA
## LR(1) items:
parser_generator_separated_list(COMMA,argument) -> argument COMMA . parser_generator_separated_list(COMMA,argument) [ RIGHTPARENS ]
## Transitions:
-- On TRUE shift to state 4
-- On TILDE shift to state 5
-- On STRING shift to state 6
-- On PLUS shift to state 12
-- On NOT shift to state 17
-- On MINUS shift to state 14
-- On LEFTPARENS shift to state 15
-- On LEFTCURLY shift to state 18
-- On LEFTBRACKET shift to state 20
-- On LAMBDA shift to state 21
-- On INTEGER shift to state 22
-- On IDENTIFIER shift to state 23
-- On FORMAT shift to state 24
-- On FLOAT shift to state 26
-- On FALSE shift to state 27
-- On ELLIPSES shift to state 28
-- On COMPLEX shift to state 29
-- On BYTES shift to state 30
-- On AWAIT shift to state 32
-- On ASYNC shift to state 33
-- On ASTERIKS shift to state 34
-- On test shift to state 168
-- On set_or_dictionary shift to state 35
-- On parser_generator_separated_list(COMMA,argument) shift to state 169
-- On or_test shift to state 62
-- On not_test shift to state 49
-- On nonempty_list(BYTES) shift to state 36
-- On identifier shift to state 159
-- On expression shift to state 51
-- On comparison shift to state 70
-- On atom shift to state 71
-- On argument shift to state 166
-- On and_test shift to state 72
## Reductions:
-- On RIGHTPARENS
--   reduce production parser_generator_separated_list(COMMA,argument) ->

State 168:
## Known stack suffix:
## test
## LR(1) items:
argument -> test . [ RIGHTPARENS COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production argument -> test

State 169:
## Known stack suffix:
## argument COMMA parser_generator_separated_list(COMMA,argument)
## LR(1) items:
parser_generator_separated_list(COMMA,argument) -> argument COMMA parser_generator_separated_list(COMMA,argument) . [ RIGHTPARENS ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production parser_generator_separated_list(COMMA,argument) -> argument COMMA parser_generator_separated_list(COMMA,argument)

State 170:
## Known stack suffix:
## AWAIT expression
## LR(1) items:
atom -> expression . PLUS expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . AT expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . AMPERSAND expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . BAR expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . HAT expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . SLASH SLASH expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . SLASH expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . LEFTANGLELEFTANGLE expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . PERCENT expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . ASTERIKS ASTERIKS expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . ASTERIKS expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . RIGHTANGLERIGHTANGLE expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . MINUS expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . LEFTPARENS arguments RIGHTPARENS [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
expression -> expression . DOT identifier [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
expression -> expression . LEFTBRACKET parser_generator_separated_nonempty_list(COMMA,subscript_key) RIGHTBRACKET [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
expression -> AWAIT expression . [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
## Transitions:
-- On LEFTPARENS shift to state 39
-- On LEFTBRACKET shift to state 55
-- On DOT shift to state 90
-- On AT shift to state 92
## Reductions:
-- On SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS COMMA COLON BAREQUALS BAR ATEQUALS ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND
--   reduce production expression -> AWAIT expression

State 171:
## Known stack suffix:
## ASTERIKS
## LR(1) items:
atom -> ASTERIKS . expression [ SLASH RIGHTANGLERIGHTANGLE PLUS PERCENT MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLE HAT EQUALS DOT COMMA COLON BAR AT ASTERIKS AMPERSAND ]
parser_generator_separated_list(COMMA,lambda_parameter) -> ASTERIKS . [ COLON ]
parser_generator_separated_list(COMMA,lambda_parameter) -> ASTERIKS . COMMA parser_generator_separated_list(COMMA,lambda_parameter) [ COLON ]
## Transitions:
-- On TRUE shift to state 4
-- On TILDE shift to state 5
-- On STRING shift to state 6
-- On PLUS shift to state 12
-- On NOT shift to state 13
-- On MINUS shift to state 14
-- On LEFTPARENS shift to state 15
-- On LEFTCURLY shift to state 18
-- On LEFTBRACKET shift to state 20
-- On INTEGER shift to state 22
-- On IDENTIFIER shift to state 23
-- On FORMAT shift to state 24
-- On FLOAT shift to state 26
-- On FALSE shift to state 27
-- On ELLIPSES shift to state 28
-- On COMPLEX shift to state 29
-- On COMMA shift to state 172
-- On BYTES shift to state 30
-- On AWAIT shift to state 32
-- On ASYNC shift to state 33
-- On ASTERIKS shift to state 34
-- On set_or_dictionary shift to state 35
-- On nonempty_list(BYTES) shift to state 36
-- On identifier shift to state 37
-- On expression shift to state 38
-- On atom shift to state 71
## Reductions:
-- On COLON
--   reduce production parser_generator_separated_list(COMMA,lambda_parameter) -> ASTERIKS

State 172:
## Known stack suffix:
## ASTERIKS COMMA
## LR(1) items:
parser_generator_separated_list(COMMA,lambda_parameter) -> ASTERIKS COMMA . parser_generator_separated_list(COMMA,lambda_parameter) [ COLON ]
## Transitions:
-- On TRUE shift to state 4
-- On TILDE shift to state 5
-- On STRING shift to state 6
-- On PLUS shift to state 12
-- On NOT shift to state 13
-- On MINUS shift to state 14
-- On LEFTPARENS shift to state 15
-- On LEFTCURLY shift to state 18
-- On LEFTBRACKET shift to state 20
-- On INTEGER shift to state 22
-- On IDENTIFIER shift to state 23
-- On FORMAT shift to state 24
-- On FLOAT shift to state 26
-- On FALSE shift to state 27
-- On ELLIPSES shift to state 28
-- On COMPLEX shift to state 29
-- On BYTES shift to state 30
-- On AWAIT shift to state 32
-- On ASYNC shift to state 33
-- On ASTERIKS shift to state 171
-- On set_or_dictionary shift to state 35
-- On parser_generator_separated_list(COMMA,lambda_parameter) shift to state 173
-- On nonempty_list(BYTES) shift to state 36
-- On identifier shift to state 37
-- On expression shift to state 174
-- On atom shift to state 71
## Reductions:
-- On COLON
--   reduce production parser_generator_separated_list(COMMA,lambda_parameter) ->

State 173:
## Known stack suffix:
## ASTERIKS COMMA parser_generator_separated_list(COMMA,lambda_parameter)
## LR(1) items:
parser_generator_separated_list(COMMA,lambda_parameter) -> ASTERIKS COMMA parser_generator_separated_list(COMMA,lambda_parameter) . [ COLON ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production parser_generator_separated_list(COMMA,lambda_parameter) -> ASTERIKS COMMA parser_generator_separated_list(COMMA,lambda_parameter)

State 174:
## Known stack suffix:
## expression
## LR(1) items:
atom -> expression . PLUS expression [ SLASH RIGHTANGLERIGHTANGLE PLUS PERCENT MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLE HAT EQUALS DOT COMMA COLON BAR AT ASTERIKS AMPERSAND ]
atom -> expression . AT expression [ SLASH RIGHTANGLERIGHTANGLE PLUS PERCENT MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLE HAT EQUALS DOT COMMA COLON BAR AT ASTERIKS AMPERSAND ]
atom -> expression . AMPERSAND expression [ SLASH RIGHTANGLERIGHTANGLE PLUS PERCENT MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLE HAT EQUALS DOT COMMA COLON BAR AT ASTERIKS AMPERSAND ]
atom -> expression . BAR expression [ SLASH RIGHTANGLERIGHTANGLE PLUS PERCENT MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLE HAT EQUALS DOT COMMA COLON BAR AT ASTERIKS AMPERSAND ]
atom -> expression . HAT expression [ SLASH RIGHTANGLERIGHTANGLE PLUS PERCENT MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLE HAT EQUALS DOT COMMA COLON BAR AT ASTERIKS AMPERSAND ]
atom -> expression . SLASH SLASH expression [ SLASH RIGHTANGLERIGHTANGLE PLUS PERCENT MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLE HAT EQUALS DOT COMMA COLON BAR AT ASTERIKS AMPERSAND ]
atom -> expression . SLASH expression [ SLASH RIGHTANGLERIGHTANGLE PLUS PERCENT MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLE HAT EQUALS DOT COMMA COLON BAR AT ASTERIKS AMPERSAND ]
atom -> expression . LEFTANGLELEFTANGLE expression [ SLASH RIGHTANGLERIGHTANGLE PLUS PERCENT MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLE HAT EQUALS DOT COMMA COLON BAR AT ASTERIKS AMPERSAND ]
atom -> expression . PERCENT expression [ SLASH RIGHTANGLERIGHTANGLE PLUS PERCENT MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLE HAT EQUALS DOT COMMA COLON BAR AT ASTERIKS AMPERSAND ]
atom -> expression . ASTERIKS ASTERIKS expression [ SLASH RIGHTANGLERIGHTANGLE PLUS PERCENT MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLE HAT EQUALS DOT COMMA COLON BAR AT ASTERIKS AMPERSAND ]
atom -> expression . ASTERIKS expression [ SLASH RIGHTANGLERIGHTANGLE PLUS PERCENT MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLE HAT EQUALS DOT COMMA COLON BAR AT ASTERIKS AMPERSAND ]
atom -> expression . RIGHTANGLERIGHTANGLE expression [ SLASH RIGHTANGLERIGHTANGLE PLUS PERCENT MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLE HAT EQUALS DOT COMMA COLON BAR AT ASTERIKS AMPERSAND ]
atom -> expression . MINUS expression [ SLASH RIGHTANGLERIGHTANGLE PLUS PERCENT MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLE HAT EQUALS DOT COMMA COLON BAR AT ASTERIKS AMPERSAND ]
atom -> expression . LEFTPARENS arguments RIGHTPARENS [ SLASH RIGHTANGLERIGHTANGLE PLUS PERCENT MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLE HAT EQUALS DOT COMMA COLON BAR AT ASTERIKS AMPERSAND ]
expression -> expression . DOT identifier [ SLASH RIGHTANGLERIGHTANGLE PLUS PERCENT MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLE HAT EQUALS DOT COMMA COLON BAR AT ASTERIKS AMPERSAND ]
expression -> expression . LEFTBRACKET parser_generator_separated_nonempty_list(COMMA,subscript_key) RIGHTBRACKET [ SLASH RIGHTANGLERIGHTANGLE PLUS PERCENT MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLE HAT EQUALS DOT COMMA COLON BAR AT ASTERIKS AMPERSAND ]
parser_generator_separated_list(COMMA,lambda_parameter) -> expression . [ COLON ]
parser_generator_separated_list(COMMA,lambda_parameter) -> expression . EQUALS test [ COLON ]
parser_generator_separated_list(COMMA,lambda_parameter) -> expression . COMMA parser_generator_separated_list(COMMA,lambda_parameter) [ COLON ]
parser_generator_separated_list(COMMA,lambda_parameter) -> expression . EQUALS test COMMA parser_generator_separated_list(COMMA,lambda_parameter) [ COLON ]
## Transitions:
-- On SLASH shift to state 52
-- On RIGHTANGLERIGHTANGLE shift to state 95
-- On PLUS shift to state 97
-- On PERCENT shift to state 99
-- On MINUS shift to state 104
-- On LEFTPARENS shift to state 39
-- On LEFTBRACKET shift to state 55
-- On LEFTANGLELEFTANGLE shift to state 106
-- On HAT shift to state 108
-- On EQUALS shift to state 175
-- On DOT shift to state 90
-- On COMMA shift to state 179
-- On BAR shift to state 112
-- On AT shift to state 92
-- On ASTERIKS shift to state 101
-- On AMPERSAND shift to state 110
## Reductions:
-- On COLON
--   reduce production parser_generator_separated_list(COMMA,lambda_parameter) -> expression

State 175:
## Known stack suffix:
## expression EQUALS
## LR(1) items:
parser_generator_separated_list(COMMA,lambda_parameter) -> expression EQUALS . test [ COLON ]
parser_generator_separated_list(COMMA,lambda_parameter) -> expression EQUALS . test COMMA parser_generator_separated_list(COMMA,lambda_parameter) [ COLON ]
## Transitions:
-- On TRUE shift to state 4
-- On TILDE shift to state 5
-- On STRING shift to state 6
-- On PLUS shift to state 12
-- On NOT shift to state 17
-- On MINUS shift to state 14
-- On LEFTPARENS shift to state 15
-- On LEFTCURLY shift to state 18
-- On LEFTBRACKET shift to state 20
-- On LAMBDA shift to state 21
-- On INTEGER shift to state 22
-- On IDENTIFIER shift to state 23
-- On FORMAT shift to state 24
-- On FLOAT shift to state 26
-- On FALSE shift to state 27
-- On ELLIPSES shift to state 28
-- On COMPLEX shift to state 29
-- On BYTES shift to state 30
-- On AWAIT shift to state 32
-- On ASYNC shift to state 33
-- On ASTERIKS shift to state 34
-- On test shift to state 176
-- On set_or_dictionary shift to state 35
-- On or_test shift to state 62
-- On not_test shift to state 49
-- On nonempty_list(BYTES) shift to state 36
-- On identifier shift to state 67
-- On expression shift to state 51
-- On comparison shift to state 70
-- On atom shift to state 71
-- On and_test shift to state 72
## Reductions:

State 176:
## Known stack suffix:
## expression EQUALS test
## LR(1) items:
parser_generator_separated_list(COMMA,lambda_parameter) -> expression EQUALS test . [ COLON ]
parser_generator_separated_list(COMMA,lambda_parameter) -> expression EQUALS test . COMMA parser_generator_separated_list(COMMA,lambda_parameter) [ COLON ]
## Transitions:
-- On COMMA shift to state 177
## Reductions:
-- On COLON
--   reduce production parser_generator_separated_list(COMMA,lambda_parameter) -> expression EQUALS test

State 177:
## Known stack suffix:
## expression EQUALS test COMMA
## LR(1) items:
parser_generator_separated_list(COMMA,lambda_parameter) -> expression EQUALS test COMMA . parser_generator_separated_list(COMMA,lambda_parameter) [ COLON ]
## Transitions:
-- On TRUE shift to state 4
-- On TILDE shift to state 5
-- On STRING shift to state 6
-- On PLUS shift to state 12
-- On NOT shift to state 13
-- On MINUS shift to state 14
-- On LEFTPARENS shift to state 15
-- On LEFTCURLY shift to state 18
-- On LEFTBRACKET shift to state 20
-- On INTEGER shift to state 22
-- On IDENTIFIER shift to state 23
-- On FORMAT shift to state 24
-- On FLOAT shift to state 26
-- On FALSE shift to state 27
-- On ELLIPSES shift to state 28
-- On COMPLEX shift to state 29
-- On BYTES shift to state 30
-- On AWAIT shift to state 32
-- On ASYNC shift to state 33
-- On ASTERIKS shift to state 171
-- On set_or_dictionary shift to state 35
-- On parser_generator_separated_list(COMMA,lambda_parameter) shift to state 178
-- On nonempty_list(BYTES) shift to state 36
-- On identifier shift to state 37
-- On expression shift to state 174
-- On atom shift to state 71
## Reductions:
-- On COLON
--   reduce production parser_generator_separated_list(COMMA,lambda_parameter) ->

State 178:
## Known stack suffix:
## expression EQUALS test COMMA parser_generator_separated_list(COMMA,lambda_parameter)
## LR(1) items:
parser_generator_separated_list(COMMA,lambda_parameter) -> expression EQUALS test COMMA parser_generator_separated_list(COMMA,lambda_parameter) . [ COLON ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production parser_generator_separated_list(COMMA,lambda_parameter) -> expression EQUALS test COMMA parser_generator_separated_list(COMMA,lambda_parameter)

State 179:
## Known stack suffix:
## expression COMMA
## LR(1) items:
parser_generator_separated_list(COMMA,lambda_parameter) -> expression COMMA . parser_generator_separated_list(COMMA,lambda_parameter) [ COLON ]
## Transitions:
-- On TRUE shift to state 4
-- On TILDE shift to state 5
-- On STRING shift to state 6
-- On PLUS shift to state 12
-- On NOT shift to state 13
-- On MINUS shift to state 14
-- On LEFTPARENS shift to state 15
-- On LEFTCURLY shift to state 18
-- On LEFTBRACKET shift to state 20
-- On INTEGER shift to state 22
-- On IDENTIFIER shift to state 23
-- On FORMAT shift to state 24
-- On FLOAT shift to state 26
-- On FALSE shift to state 27
-- On ELLIPSES shift to state 28
-- On COMPLEX shift to state 29
-- On BYTES shift to state 30
-- On AWAIT shift to state 32
-- On ASYNC shift to state 33
-- On ASTERIKS shift to state 171
-- On set_or_dictionary shift to state 35
-- On parser_generator_separated_list(COMMA,lambda_parameter) shift to state 180
-- On nonempty_list(BYTES) shift to state 36
-- On identifier shift to state 37
-- On expression shift to state 174
-- On atom shift to state 71
## Reductions:
-- On COLON
--   reduce production parser_generator_separated_list(COMMA,lambda_parameter) ->

State 180:
## Known stack suffix:
## expression COMMA parser_generator_separated_list(COMMA,lambda_parameter)
## LR(1) items:
parser_generator_separated_list(COMMA,lambda_parameter) -> expression COMMA parser_generator_separated_list(COMMA,lambda_parameter) . [ COLON ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production parser_generator_separated_list(COMMA,lambda_parameter) -> expression COMMA parser_generator_separated_list(COMMA,lambda_parameter)

State 181:
## Known stack suffix:
## LAMBDA parser_generator_separated_list(COMMA,lambda_parameter)
## LR(1) items:
test -> LAMBDA parser_generator_separated_list(COMMA,lambda_parameter) . COLON test [ SLASHSLASHEQUALS SLASHEQUALS SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS PLUSEQUALS PERCENTEQUALS NEWLINE MINUSEQUALS LEFTANGLELEFTANGLEEQUALS HATEQUALS FROM FOR EQUALS ELSE COMMA COLON BAREQUALS ATEQUALS ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS AS ANNOTATION_COMMENT AMPERSANDEQUALS ]
## Transitions:
-- On COLON shift to state 182
## Reductions:

State 182:
## Known stack suffix:
## LAMBDA parser_generator_separated_list(COMMA,lambda_parameter) COLON
## LR(1) items:
test -> LAMBDA parser_generator_separated_list(COMMA,lambda_parameter) COLON . test [ SLASHSLASHEQUALS SLASHEQUALS SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS PLUSEQUALS PERCENTEQUALS NEWLINE MINUSEQUALS LEFTANGLELEFTANGLEEQUALS HATEQUALS FROM FOR EQUALS ELSE COMMA COLON BAREQUALS ATEQUALS ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS AS ANNOTATION_COMMENT AMPERSANDEQUALS ]
## Transitions:
-- On TRUE shift to state 4
-- On TILDE shift to state 5
-- On STRING shift to state 6
-- On PLUS shift to state 12
-- On NOT shift to state 17
-- On MINUS shift to state 14
-- On LEFTPARENS shift to state 15
-- On LEFTCURLY shift to state 18
-- On LEFTBRACKET shift to state 20
-- On LAMBDA shift to state 21
-- On INTEGER shift to state 22
-- On IDENTIFIER shift to state 23
-- On FORMAT shift to state 24
-- On FLOAT shift to state 26
-- On FALSE shift to state 27
-- On ELLIPSES shift to state 28
-- On COMPLEX shift to state 29
-- On BYTES shift to state 30
-- On AWAIT shift to state 32
-- On ASYNC shift to state 33
-- On ASTERIKS shift to state 34
-- On test shift to state 183
-- On set_or_dictionary shift to state 35
-- On or_test shift to state 62
-- On not_test shift to state 49
-- On nonempty_list(BYTES) shift to state 36
-- On identifier shift to state 67
-- On expression shift to state 51
-- On comparison shift to state 70
-- On atom shift to state 71
-- On and_test shift to state 72
## Reductions:

State 183:
## Known stack suffix:
## LAMBDA parser_generator_separated_list(COMMA,lambda_parameter) COLON test
## LR(1) items:
test -> LAMBDA parser_generator_separated_list(COMMA,lambda_parameter) COLON test . [ SLASHSLASHEQUALS SLASHEQUALS SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS PLUSEQUALS PERCENTEQUALS NEWLINE MINUSEQUALS LEFTANGLELEFTANGLEEQUALS HATEQUALS FROM FOR EQUALS ELSE COMMA COLON BAREQUALS ATEQUALS ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS AS ANNOTATION_COMMENT AMPERSANDEQUALS ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production test -> LAMBDA parser_generator_separated_list(COMMA,lambda_parameter) COLON test

State 184:
## Known stack suffix:
## LEFTBRACKET test
## LR(1) items:
atom -> LEFTBRACKET test . nonempty_list(comprehension) RIGHTBRACKET [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
parser_generator_separated_list(COMMA,test) -> test . [ RIGHTBRACKET ]
parser_generator_separated_list(COMMA,test) -> test . COMMA parser_generator_separated_list(COMMA,test) [ RIGHTBRACKET ]
## Transitions:
-- On FOR shift to state 42
-- On COMMA shift to state 185
-- On ASYNC shift to state 149
-- On nonempty_list(comprehension) shift to state 188
-- On comprehension shift to state 156
## Reductions:
-- On RIGHTBRACKET
--   reduce production parser_generator_separated_list(COMMA,test) -> test

State 185:
## Known stack suffix:
## test COMMA
## LR(1) items:
parser_generator_separated_list(COMMA,test) -> test COMMA . parser_generator_separated_list(COMMA,test) [ RIGHTBRACKET ]
## Transitions:
-- On TRUE shift to state 4
-- On TILDE shift to state 5
-- On STRING shift to state 6
-- On PLUS shift to state 12
-- On NOT shift to state 17
-- On MINUS shift to state 14
-- On LEFTPARENS shift to state 15
-- On LEFTCURLY shift to state 18
-- On LEFTBRACKET shift to state 20
-- On LAMBDA shift to state 21
-- On INTEGER shift to state 22
-- On IDENTIFIER shift to state 23
-- On FORMAT shift to state 24
-- On FLOAT shift to state 26
-- On FALSE shift to state 27
-- On ELLIPSES shift to state 28
-- On COMPLEX shift to state 29
-- On BYTES shift to state 30
-- On AWAIT shift to state 32
-- On ASYNC shift to state 33
-- On ASTERIKS shift to state 34
-- On test shift to state 186
-- On set_or_dictionary shift to state 35
-- On parser_generator_separated_list(COMMA,test) shift to state 187
-- On or_test shift to state 62
-- On not_test shift to state 49
-- On nonempty_list(BYTES) shift to state 36
-- On identifier shift to state 67
-- On expression shift to state 51
-- On comparison shift to state 70
-- On atom shift to state 71
-- On and_test shift to state 72
## Reductions:
-- On RIGHTBRACKET
--   reduce production parser_generator_separated_list(COMMA,test) ->

State 186:
## Known stack suffix:
## test
## LR(1) items:
parser_generator_separated_list(COMMA,test) -> test . [ RIGHTBRACKET ]
parser_generator_separated_list(COMMA,test) -> test . COMMA parser_generator_separated_list(COMMA,test) [ RIGHTBRACKET ]
## Transitions:
-- On COMMA shift to state 185
## Reductions:
-- On RIGHTBRACKET
--   reduce production parser_generator_separated_list(COMMA,test) -> test

State 187:
## Known stack suffix:
## test COMMA parser_generator_separated_list(COMMA,test)
## LR(1) items:
parser_generator_separated_list(COMMA,test) -> test COMMA parser_generator_separated_list(COMMA,test) . [ RIGHTBRACKET ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production parser_generator_separated_list(COMMA,test) -> test COMMA parser_generator_separated_list(COMMA,test)

State 188:
## Known stack suffix:
## LEFTBRACKET test nonempty_list(comprehension)
## LR(1) items:
atom -> LEFTBRACKET test nonempty_list(comprehension) . RIGHTBRACKET [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
## Transitions:
-- On RIGHTBRACKET shift to state 189
## Reductions:

State 189:
## Known stack suffix:
## LEFTBRACKET test nonempty_list(comprehension) RIGHTBRACKET
## LR(1) items:
atom -> LEFTBRACKET test nonempty_list(comprehension) RIGHTBRACKET . [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production atom -> LEFTBRACKET test nonempty_list(comprehension) RIGHTBRACKET

State 190:
## Known stack suffix:
## LEFTBRACKET parser_generator_separated_list(COMMA,test)
## LR(1) items:
atom -> LEFTBRACKET parser_generator_separated_list(COMMA,test) . RIGHTBRACKET [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
## Transitions:
-- On RIGHTBRACKET shift to state 191
## Reductions:

State 191:
## Known stack suffix:
## LEFTBRACKET parser_generator_separated_list(COMMA,test) RIGHTBRACKET
## LR(1) items:
atom -> LEFTBRACKET parser_generator_separated_list(COMMA,test) RIGHTBRACKET . [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production atom -> LEFTBRACKET parser_generator_separated_list(COMMA,test) RIGHTBRACKET

State 192:
## Known stack suffix:
## LEFTCURLY test
## LR(1) items:
atom -> LEFTCURLY test . nonempty_list(comprehension) RIGHTCURLY [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
set_or_dictionary_entry -> test . [ RIGHTCURLY FOR COMMA ASYNC ]
set_or_dictionary_entry -> test . COLON test [ RIGHTCURLY FOR COMMA ASYNC ]
## Transitions:
-- On FOR shift to state 42
-- On COLON shift to state 193
-- On ASYNC shift to state 149
-- On nonempty_list(comprehension) shift to state 195
-- On comprehension shift to state 156
## Reductions:
-- On RIGHTCURLY COMMA
--   reduce production set_or_dictionary_entry -> test

State 193:
## Known stack suffix:
## test COLON
## LR(1) items:
set_or_dictionary_entry -> test COLON . test [ RIGHTCURLY FOR COMMA ASYNC ]
## Transitions:
-- On TRUE shift to state 4
-- On TILDE shift to state 5
-- On STRING shift to state 6
-- On PLUS shift to state 12
-- On NOT shift to state 17
-- On MINUS shift to state 14
-- On LEFTPARENS shift to state 15
-- On LEFTCURLY shift to state 18
-- On LEFTBRACKET shift to state 20
-- On LAMBDA shift to state 21
-- On INTEGER shift to state 22
-- On IDENTIFIER shift to state 23
-- On FORMAT shift to state 24
-- On FLOAT shift to state 26
-- On FALSE shift to state 27
-- On ELLIPSES shift to state 28
-- On COMPLEX shift to state 29
-- On BYTES shift to state 30
-- On AWAIT shift to state 32
-- On ASYNC shift to state 33
-- On ASTERIKS shift to state 34
-- On test shift to state 194
-- On set_or_dictionary shift to state 35
-- On or_test shift to state 62
-- On not_test shift to state 49
-- On nonempty_list(BYTES) shift to state 36
-- On identifier shift to state 67
-- On expression shift to state 51
-- On comparison shift to state 70
-- On atom shift to state 71
-- On and_test shift to state 72
## Reductions:

State 194:
## Known stack suffix:
## test COLON test
## LR(1) items:
set_or_dictionary_entry -> test COLON test . [ RIGHTCURLY FOR COMMA ASYNC ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production set_or_dictionary_entry -> test COLON test

State 195:
## Known stack suffix:
## LEFTCURLY test nonempty_list(comprehension)
## LR(1) items:
atom -> LEFTCURLY test nonempty_list(comprehension) . RIGHTCURLY [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
## Transitions:
-- On RIGHTCURLY shift to state 196
## Reductions:

State 196:
## Known stack suffix:
## LEFTCURLY test nonempty_list(comprehension) RIGHTCURLY
## LR(1) items:
atom -> LEFTCURLY test nonempty_list(comprehension) RIGHTCURLY . [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production atom -> LEFTCURLY test nonempty_list(comprehension) RIGHTCURLY

State 197:
## Known stack suffix:
## LEFTCURLY set_or_dictionary_maker
## LR(1) items:
set_or_dictionary -> LEFTCURLY set_or_dictionary_maker . option(COMMA) RIGHTCURLY [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
set_or_dictionary_maker -> set_or_dictionary_maker . COMMA set_or_dictionary_entry [ RIGHTCURLY FOR COMMA ASYNC ]
set_or_dictionary_maker -> set_or_dictionary_maker . comprehension [ RIGHTCURLY FOR COMMA ASYNC ]
## Transitions:
-- On FOR shift to state 42
-- On COMMA shift to state 198
-- On ASYNC shift to state 149
-- On option(COMMA) shift to state 201
-- On comprehension shift to state 203
## Reductions:
-- On RIGHTCURLY
--   reduce production option(COMMA) ->

State 198:
## Known stack suffix:
## set_or_dictionary_maker COMMA
## LR(1) items:
option(COMMA) -> COMMA . [ RIGHTCURLY ]
set_or_dictionary_maker -> set_or_dictionary_maker COMMA . set_or_dictionary_entry [ RIGHTCURLY FOR COMMA ASYNC ]
## Transitions:
-- On TRUE shift to state 4
-- On TILDE shift to state 5
-- On STRING shift to state 6
-- On PLUS shift to state 12
-- On NOT shift to state 17
-- On MINUS shift to state 14
-- On LEFTPARENS shift to state 15
-- On LEFTCURLY shift to state 18
-- On LEFTBRACKET shift to state 20
-- On LAMBDA shift to state 21
-- On INTEGER shift to state 22
-- On IDENTIFIER shift to state 23
-- On FORMAT shift to state 24
-- On FLOAT shift to state 26
-- On FALSE shift to state 27
-- On ELLIPSES shift to state 28
-- On COMPLEX shift to state 29
-- On BYTES shift to state 30
-- On AWAIT shift to state 32
-- On ASYNC shift to state 33
-- On ASTERIKS shift to state 34
-- On test shift to state 199
-- On set_or_dictionary_entry shift to state 200
-- On set_or_dictionary shift to state 35
-- On or_test shift to state 62
-- On not_test shift to state 49
-- On nonempty_list(BYTES) shift to state 36
-- On identifier shift to state 67
-- On expression shift to state 51
-- On comparison shift to state 70
-- On atom shift to state 71
-- On and_test shift to state 72
## Reductions:
-- On RIGHTCURLY
--   reduce production option(COMMA) -> COMMA

State 199:
## Known stack suffix:
## test
## LR(1) items:
set_or_dictionary_entry -> test . [ RIGHTCURLY FOR COMMA ASYNC ]
set_or_dictionary_entry -> test . COLON test [ RIGHTCURLY FOR COMMA ASYNC ]
## Transitions:
-- On COLON shift to state 193
## Reductions:
-- On RIGHTCURLY FOR COMMA ASYNC
--   reduce production set_or_dictionary_entry -> test

State 200:
## Known stack suffix:
## set_or_dictionary_maker COMMA set_or_dictionary_entry
## LR(1) items:
set_or_dictionary_maker -> set_or_dictionary_maker COMMA set_or_dictionary_entry . [ RIGHTCURLY FOR COMMA ASYNC ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production set_or_dictionary_maker -> set_or_dictionary_maker COMMA set_or_dictionary_entry

State 201:
## Known stack suffix:
## LEFTCURLY set_or_dictionary_maker option(COMMA)
## LR(1) items:
set_or_dictionary -> LEFTCURLY set_or_dictionary_maker option(COMMA) . RIGHTCURLY [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
## Transitions:
-- On RIGHTCURLY shift to state 202
## Reductions:

State 202:
## Known stack suffix:
## LEFTCURLY set_or_dictionary_maker option(COMMA) RIGHTCURLY
## LR(1) items:
set_or_dictionary -> LEFTCURLY set_or_dictionary_maker option(COMMA) RIGHTCURLY . [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production set_or_dictionary -> LEFTCURLY set_or_dictionary_maker option(COMMA) RIGHTCURLY

State 203:
## Known stack suffix:
## set_or_dictionary_maker comprehension
## LR(1) items:
set_or_dictionary_maker -> set_or_dictionary_maker comprehension . [ RIGHTCURLY FOR COMMA ASYNC ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production set_or_dictionary_maker -> set_or_dictionary_maker comprehension

State 204:
## Known stack suffix:
## set_or_dictionary_entry
## LR(1) items:
set_or_dictionary_maker -> set_or_dictionary_entry . [ RIGHTCURLY FOR COMMA ASYNC ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production set_or_dictionary_maker -> set_or_dictionary_entry

State 205:
## Known stack suffix:
## NOT not_test
## LR(1) items:
not_test -> NOT not_test . [ SLASHSLASHEQUALS SLASHEQUALS SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS PLUSEQUALS PERCENTEQUALS OR NEWLINE MINUSEQUALS LEFTANGLELEFTANGLEEQUALS IF HATEQUALS FROM FOR EQUALS ELSE COMMA COLON BAREQUALS ATEQUALS ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production not_test -> NOT not_test

State 206:
## Known stack suffix:
## NOT expression
## LR(1) items:
atom -> expression . PLUS expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . AT expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . AMPERSAND expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . BAR expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . HAT expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . SLASH SLASH expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . SLASH expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . LEFTANGLELEFTANGLE expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . PERCENT expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . ASTERIKS ASTERIKS expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . ASTERIKS expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . RIGHTANGLERIGHTANGLE expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . MINUS expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . LEFTPARENS arguments RIGHTPARENS [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> NOT expression . [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
comparison -> expression . [ SLASHSLASHEQUALS SLASHEQUALS SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS PLUSEQUALS PERCENTEQUALS OR NEWLINE MINUSEQUALS LEFTANGLELEFTANGLEEQUALS IF HATEQUALS FROM FOR EQUALS ELSE COMMA COLON BAREQUALS ATEQUALS ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS ]
comparison -> expression . nonempty_list(comparison_operator) [ SLASHSLASHEQUALS SLASHEQUALS SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS PLUSEQUALS PERCENTEQUALS OR NEWLINE MINUSEQUALS LEFTANGLELEFTANGLEEQUALS IF HATEQUALS FROM FOR EQUALS ELSE COMMA COLON BAREQUALS ATEQUALS ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS ]
expression -> expression . DOT identifier [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
expression -> expression . LEFTBRACKET parser_generator_separated_nonempty_list(COMMA,subscript_key) RIGHTBRACKET [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
## Transitions:
-- On SLASH shift to state 52
-- On RIGHTANGLEEQUALS shift to state 115
-- On RIGHTANGLE shift to state 117
-- On PLUS shift to state 97
-- On PERCENT shift to state 99
-- On MINUS shift to state 104
-- On LEFTPARENS shift to state 39
-- On LEFTBRACKET shift to state 55
-- On LEFTANGLEEQUALS shift to state 122
-- On LEFTANGLE shift to state 124
-- On ISNOT shift to state 126
-- On IS shift to state 128
-- On IN shift to state 130
-- On HAT shift to state 108
-- On EXCLAMATIONMARK shift to state 132
-- On DOUBLEEQUALS shift to state 135
-- On DOT shift to state 90
-- On BAR shift to state 112
-- On AT shift to state 92
-- On ASTERIKS shift to state 101
-- On AMPERSAND shift to state 110
-- On nonempty_list(comparison_operator) shift to state 137
-- On comparison_operator shift to state 138
## Reductions:
-- On SLASHSLASHEQUALS SLASHEQUALS SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE PLUSEQUALS PERCENTEQUALS OR NOT NEWLINE MINUSEQUALS LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE IF HATEQUALS FROM FOR EQUALS ELSE COMMA COLON BAREQUALS ATEQUALS ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS
--   reduce production atom -> NOT expression

State 207:
## Known stack suffix:
## LEFTPARENS yield
## LR(1) items:
expression -> LEFTPARENS yield . RIGHTPARENS [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
## Transitions:
-- On RIGHTPARENS shift to state 208
## Reductions:

State 208:
## Known stack suffix:
## LEFTPARENS yield RIGHTPARENS
## LR(1) items:
expression -> LEFTPARENS yield RIGHTPARENS . [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production expression -> LEFTPARENS yield RIGHTPARENS

State 209:
## Known stack suffix:
## LEFTPARENS test_list
## LR(1) items:
expression -> LEFTPARENS test_list . RIGHTPARENS [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
## Transitions:
-- On RIGHTPARENS shift to state 210
## Reductions:

State 210:
## Known stack suffix:
## LEFTPARENS test_list RIGHTPARENS
## LR(1) items:
expression -> LEFTPARENS test_list RIGHTPARENS . [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production expression -> LEFTPARENS test_list RIGHTPARENS

State 211:
## Known stack suffix:
## test
## LR(1) items:
generator -> test . nonempty_list(comprehension) [ RIGHTPARENS ]
separated_nonempty_list_indicator(COMMA,test) -> test . separated_nonempty_list_indicator_tail(COMMA,test) [ RIGHTPARENS ]
## Transitions:
-- On FOR shift to state 42
-- On COMMA shift to state 76
-- On ASYNC shift to state 149
-- On separated_nonempty_list_indicator_tail(COMMA,test) shift to state 79
-- On nonempty_list(comprehension) shift to state 155
-- On comprehension shift to state 156
## Reductions:
-- On RIGHTPARENS
--   reduce production separated_nonempty_list_indicator_tail(COMMA,test) ->

State 212:
## Known stack suffix:
## LEFTPARENS generator
## LR(1) items:
expression -> LEFTPARENS generator . RIGHTPARENS [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
## Transitions:
-- On RIGHTPARENS shift to state 213
## Reductions:

State 213:
## Known stack suffix:
## LEFTPARENS generator RIGHTPARENS
## LR(1) items:
expression -> LEFTPARENS generator RIGHTPARENS . [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production expression -> LEFTPARENS generator RIGHTPARENS

State 214:
## Known stack suffix:
## MINUS expression
## LR(1) items:
atom -> expression . PLUS expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . AT expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . AMPERSAND expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . BAR expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . HAT expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . SLASH SLASH expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . SLASH expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . LEFTANGLELEFTANGLE expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . PERCENT expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . ASTERIKS ASTERIKS expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . ASTERIKS expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . RIGHTANGLERIGHTANGLE expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . MINUS expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . LEFTPARENS arguments RIGHTPARENS [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> MINUS expression . [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
expression -> expression . DOT identifier [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
expression -> expression . LEFTBRACKET parser_generator_separated_nonempty_list(COMMA,subscript_key) RIGHTBRACKET [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
## Transitions:
-- On SLASH shift to state 52
-- On PERCENT shift to state 99
-- On LEFTPARENS shift to state 39
-- On LEFTBRACKET shift to state 55
-- On DOT shift to state 90
-- On AT shift to state 92
-- On ASTERIKS shift to state 101
## Reductions:
-- On SLASHSLASHEQUALS SLASHEQUALS SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS OR NOT NEWLINE MINUSEQUALS MINUS LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS COMMA COLON BAREQUALS BAR ATEQUALS ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND
--   reduce production atom -> MINUS expression

State 215:
## Known stack suffix:
## NOT expression
## LR(1) items:
atom -> expression . PLUS expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . AT expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . AMPERSAND expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . BAR expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . HAT expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . SLASH SLASH expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . SLASH expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . LEFTANGLELEFTANGLE expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . PERCENT expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . ASTERIKS ASTERIKS expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . ASTERIKS expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . RIGHTANGLERIGHTANGLE expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . MINUS expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . LEFTPARENS arguments RIGHTPARENS [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> NOT expression . [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
expression -> expression . DOT identifier [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
expression -> expression . LEFTBRACKET parser_generator_separated_nonempty_list(COMMA,subscript_key) RIGHTBRACKET [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
## Transitions:
-- On SLASH shift to state 52
-- On PLUS shift to state 97
-- On PERCENT shift to state 99
-- On MINUS shift to state 104
-- On LEFTPARENS shift to state 39
-- On LEFTBRACKET shift to state 55
-- On HAT shift to state 108
-- On DOT shift to state 90
-- On BAR shift to state 112
-- On AT shift to state 92
-- On ASTERIKS shift to state 101
-- On AMPERSAND shift to state 110
## Reductions:
-- On SLASHSLASHEQUALS SLASHEQUALS SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PERCENTEQUALS OR NOT NEWLINE MINUSEQUALS LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS COMMA COLON BAREQUALS ATEQUALS ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS
--   reduce production atom -> NOT expression

State 216:
## Known stack suffix:
## PLUS expression
## LR(1) items:
atom -> expression . PLUS expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . AT expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . AMPERSAND expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . BAR expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . HAT expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . SLASH SLASH expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . SLASH expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . LEFTANGLELEFTANGLE expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . PERCENT expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . ASTERIKS ASTERIKS expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . ASTERIKS expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . RIGHTANGLERIGHTANGLE expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . MINUS expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . LEFTPARENS arguments RIGHTPARENS [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> PLUS expression . [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
expression -> expression . DOT identifier [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
expression -> expression . LEFTBRACKET parser_generator_separated_nonempty_list(COMMA,subscript_key) RIGHTBRACKET [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
## Transitions:
-- On SLASH shift to state 52
-- On PERCENT shift to state 99
-- On LEFTPARENS shift to state 39
-- On LEFTBRACKET shift to state 55
-- On DOT shift to state 90
-- On AT shift to state 92
-- On ASTERIKS shift to state 101
## Reductions:
-- On SLASHSLASHEQUALS SLASHEQUALS SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS OR NOT NEWLINE MINUSEQUALS MINUS LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS COMMA COLON BAREQUALS BAR ATEQUALS ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND
--   reduce production atom -> PLUS expression

State 217:
## Known stack suffix:
## TILDE expression
## LR(1) items:
atom -> expression . PLUS expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . AT expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . AMPERSAND expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . BAR expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . HAT expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . SLASH SLASH expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . SLASH expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . LEFTANGLELEFTANGLE expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . PERCENT expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . ASTERIKS ASTERIKS expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . ASTERIKS expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . RIGHTANGLERIGHTANGLE expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . MINUS expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . LEFTPARENS arguments RIGHTPARENS [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> TILDE expression . [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
expression -> expression . DOT identifier [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
expression -> expression . LEFTBRACKET parser_generator_separated_nonempty_list(COMMA,subscript_key) RIGHTBRACKET [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
## Transitions:
-- On LEFTPARENS shift to state 39
-- On LEFTBRACKET shift to state 55
-- On DOT shift to state 90
-- On AT shift to state 92
## Reductions:
-- On SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTPARENS RIGHTCURLY RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT FROM FOR EXCLAMATIONMARK EQUALS ELSE DOUBLEEQUALS COMMA COLON BAREQUALS BAR ATEQUALS ASYNC ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS AS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND
--   reduce production atom -> TILDE expression

State 218:
## Known stack suffix:
## test_list
## LR(1) items:
option(test_list) -> test_list . [ SEMICOLON RIGHTPARENS NEWLINE FROM ANNOTATION_COMMENT ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production option(test_list) -> test_list

State 219:
## Known stack suffix:
## YIELD option(FROM) option(test_list)
## LR(1) items:
yield -> YIELD option(FROM) option(test_list) . [ SEMICOLON RIGHTPARENS NEWLINE ANNOTATION_COMMENT ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production yield -> YIELD option(FROM) option(test_list)

State 220:
## Known stack suffix:
## WITH
## LR(1) items:
compound_statement -> WITH . parser_generator_separated_nonempty_list(COMMA,with_item) COLON option(ANNOTATION_COMMENT) block [ YIELD WITH WHILE TRY TRUE TILDE STRING RETURN RAISE PLUS PASS NOT NONLOCAL NEWLINE MINUS LEFTPARENS LEFTCURLY LEFTBRACKET LAMBDA INTEGER IMPORT IF IDENTIFIER GLOBAL FROM FORMAT FOR FLOAT FALSE EOF ELLIPSES DELETE DEFINE DEDENT CONTINUE COMPLEX CLASS BYTES BREAK AWAIT AT ASYNC ASTERIKS ASSERT ]
## Transitions:
-- On TRUE shift to state 4
-- On TILDE shift to state 5
-- On STRING shift to state 6
-- On PLUS shift to state 12
-- On NOT shift to state 17
-- On MINUS shift to state 14
-- On LEFTPARENS shift to state 15
-- On LEFTCURLY shift to state 18
-- On LEFTBRACKET shift to state 20
-- On LAMBDA shift to state 21
-- On INTEGER shift to state 22
-- On IDENTIFIER shift to state 23
-- On FORMAT shift to state 24
-- On FLOAT shift to state 26
-- On FALSE shift to state 27
-- On ELLIPSES shift to state 28
-- On COMPLEX shift to state 29
-- On BYTES shift to state 30
-- On AWAIT shift to state 32
-- On ASYNC shift to state 33
-- On ASTERIKS shift to state 34
-- On with_item shift to state 221
-- On test shift to state 225
-- On set_or_dictionary shift to state 35
-- On parser_generator_separated_nonempty_list(COMMA,with_item) shift to state 230
-- On or_test shift to state 62
-- On not_test shift to state 49
-- On nonempty_list(BYTES) shift to state 36
-- On identifier shift to state 67
-- On expression shift to state 51
-- On comparison shift to state 70
-- On atom shift to state 71
-- On and_test shift to state 72
## Reductions:

State 221:
## Known stack suffix:
## with_item
## LR(1) items:
parser_generator_separated_nonempty_list(COMMA,with_item) -> with_item . [ COLON ]
parser_generator_separated_nonempty_list(COMMA,with_item) -> with_item . COMMA parser_generator_separated_list(COMMA,with_item) [ COLON ]
## Transitions:
-- On COMMA shift to state 222
## Reductions:
-- On COLON
--   reduce production parser_generator_separated_nonempty_list(COMMA,with_item) -> with_item

State 222:
## Known stack suffix:
## with_item COMMA
## LR(1) items:
parser_generator_separated_nonempty_list(COMMA,with_item) -> with_item COMMA . parser_generator_separated_list(COMMA,with_item) [ COLON ]
## Transitions:
-- On TRUE shift to state 4
-- On TILDE shift to state 5
-- On STRING shift to state 6
-- On PLUS shift to state 12
-- On NOT shift to state 17
-- On MINUS shift to state 14
-- On LEFTPARENS shift to state 15
-- On LEFTCURLY shift to state 18
-- On LEFTBRACKET shift to state 20
-- On LAMBDA shift to state 21
-- On INTEGER shift to state 22
-- On IDENTIFIER shift to state 23
-- On FORMAT shift to state 24
-- On FLOAT shift to state 26
-- On FALSE shift to state 27
-- On ELLIPSES shift to state 28
-- On COMPLEX shift to state 29
-- On BYTES shift to state 30
-- On AWAIT shift to state 32
-- On ASYNC shift to state 33
-- On ASTERIKS shift to state 34
-- On with_item shift to state 223
-- On test shift to state 225
-- On set_or_dictionary shift to state 35
-- On parser_generator_separated_list(COMMA,with_item) shift to state 229
-- On or_test shift to state 62
-- On not_test shift to state 49
-- On nonempty_list(BYTES) shift to state 36
-- On identifier shift to state 67
-- On expression shift to state 51
-- On comparison shift to state 70
-- On atom shift to state 71
-- On and_test shift to state 72
## Reductions:
-- On COLON
--   reduce production parser_generator_separated_list(COMMA,with_item) ->

State 223:
## Known stack suffix:
## with_item
## LR(1) items:
parser_generator_separated_list(COMMA,with_item) -> with_item . [ COLON ]
parser_generator_separated_list(COMMA,with_item) -> with_item . COMMA parser_generator_separated_list(COMMA,with_item) [ COLON ]
## Transitions:
-- On COMMA shift to state 224
## Reductions:
-- On COLON
--   reduce production parser_generator_separated_list(COMMA,with_item) -> with_item

State 224:
## Known stack suffix:
## with_item COMMA
## LR(1) items:
parser_generator_separated_list(COMMA,with_item) -> with_item COMMA . parser_generator_separated_list(COMMA,with_item) [ COLON ]
## Transitions:
-- On TRUE shift to state 4
-- On TILDE shift to state 5
-- On STRING shift to state 6
-- On PLUS shift to state 12
-- On NOT shift to state 17
-- On MINUS shift to state 14
-- On LEFTPARENS shift to state 15
-- On LEFTCURLY shift to state 18
-- On LEFTBRACKET shift to state 20
-- On LAMBDA shift to state 21
-- On INTEGER shift to state 22
-- On IDENTIFIER shift to state 23
-- On FORMAT shift to state 24
-- On FLOAT shift to state 26
-- On FALSE shift to state 27
-- On ELLIPSES shift to state 28
-- On COMPLEX shift to state 29
-- On BYTES shift to state 30
-- On AWAIT shift to state 32
-- On ASYNC shift to state 33
-- On ASTERIKS shift to state 34
-- On with_item shift to state 223
-- On test shift to state 225
-- On set_or_dictionary shift to state 35
-- On parser_generator_separated_list(COMMA,with_item) shift to state 228
-- On or_test shift to state 62
-- On not_test shift to state 49
-- On nonempty_list(BYTES) shift to state 36
-- On identifier shift to state 67
-- On expression shift to state 51
-- On comparison shift to state 70
-- On atom shift to state 71
-- On and_test shift to state 72
## Reductions:
-- On COLON
--   reduce production parser_generator_separated_list(COMMA,with_item) ->

State 225:
## Known stack suffix:
## test
## LR(1) items:
with_item -> test . [ COMMA COLON ]
with_item -> test . AS expression [ COMMA COLON ]
## Transitions:
-- On AS shift to state 226
## Reductions:
-- On COMMA COLON
--   reduce production with_item -> test

State 226:
## Known stack suffix:
## test AS
## LR(1) items:
with_item -> test AS . expression [ COMMA COLON ]
## Transitions:
-- On TRUE shift to state 4
-- On TILDE shift to state 5
-- On STRING shift to state 6
-- On PLUS shift to state 12
-- On NOT shift to state 13
-- On MINUS shift to state 14
-- On LEFTPARENS shift to state 15
-- On LEFTCURLY shift to state 18
-- On LEFTBRACKET shift to state 20
-- On INTEGER shift to state 22
-- On IDENTIFIER shift to state 23
-- On FORMAT shift to state 24
-- On FLOAT shift to state 26
-- On FALSE shift to state 27
-- On ELLIPSES shift to state 28
-- On COMPLEX shift to state 29
-- On BYTES shift to state 30
-- On AWAIT shift to state 32
-- On ASYNC shift to state 33
-- On ASTERIKS shift to state 34
-- On set_or_dictionary shift to state 35
-- On nonempty_list(BYTES) shift to state 36
-- On identifier shift to state 37
-- On expression shift to state 227
-- On atom shift to state 71
## Reductions:

State 227:
## Known stack suffix:
## test AS expression
## LR(1) items:
atom -> expression . PLUS expression [ SLASH RIGHTANGLERIGHTANGLE PLUS PERCENT MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLE HAT DOT COMMA COLON BAR AT ASTERIKS AMPERSAND ]
atom -> expression . AT expression [ SLASH RIGHTANGLERIGHTANGLE PLUS PERCENT MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLE HAT DOT COMMA COLON BAR AT ASTERIKS AMPERSAND ]
atom -> expression . AMPERSAND expression [ SLASH RIGHTANGLERIGHTANGLE PLUS PERCENT MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLE HAT DOT COMMA COLON BAR AT ASTERIKS AMPERSAND ]
atom -> expression . BAR expression [ SLASH RIGHTANGLERIGHTANGLE PLUS PERCENT MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLE HAT DOT COMMA COLON BAR AT ASTERIKS AMPERSAND ]
atom -> expression . HAT expression [ SLASH RIGHTANGLERIGHTANGLE PLUS PERCENT MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLE HAT DOT COMMA COLON BAR AT ASTERIKS AMPERSAND ]
atom -> expression . SLASH SLASH expression [ SLASH RIGHTANGLERIGHTANGLE PLUS PERCENT MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLE HAT DOT COMMA COLON BAR AT ASTERIKS AMPERSAND ]
atom -> expression . SLASH expression [ SLASH RIGHTANGLERIGHTANGLE PLUS PERCENT MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLE HAT DOT COMMA COLON BAR AT ASTERIKS AMPERSAND ]
atom -> expression . LEFTANGLELEFTANGLE expression [ SLASH RIGHTANGLERIGHTANGLE PLUS PERCENT MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLE HAT DOT COMMA COLON BAR AT ASTERIKS AMPERSAND ]
atom -> expression . PERCENT expression [ SLASH RIGHTANGLERIGHTANGLE PLUS PERCENT MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLE HAT DOT COMMA COLON BAR AT ASTERIKS AMPERSAND ]
atom -> expression . ASTERIKS ASTERIKS expression [ SLASH RIGHTANGLERIGHTANGLE PLUS PERCENT MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLE HAT DOT COMMA COLON BAR AT ASTERIKS AMPERSAND ]
atom -> expression . ASTERIKS expression [ SLASH RIGHTANGLERIGHTANGLE PLUS PERCENT MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLE HAT DOT COMMA COLON BAR AT ASTERIKS AMPERSAND ]
atom -> expression . RIGHTANGLERIGHTANGLE expression [ SLASH RIGHTANGLERIGHTANGLE PLUS PERCENT MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLE HAT DOT COMMA COLON BAR AT ASTERIKS AMPERSAND ]
atom -> expression . MINUS expression [ SLASH RIGHTANGLERIGHTANGLE PLUS PERCENT MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLE HAT DOT COMMA COLON BAR AT ASTERIKS AMPERSAND ]
atom -> expression . LEFTPARENS arguments RIGHTPARENS [ SLASH RIGHTANGLERIGHTANGLE PLUS PERCENT MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLE HAT DOT COMMA COLON BAR AT ASTERIKS AMPERSAND ]
expression -> expression . DOT identifier [ SLASH RIGHTANGLERIGHTANGLE PLUS PERCENT MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLE HAT DOT COMMA COLON BAR AT ASTERIKS AMPERSAND ]
expression -> expression . LEFTBRACKET parser_generator_separated_nonempty_list(COMMA,subscript_key) RIGHTBRACKET [ SLASH RIGHTANGLERIGHTANGLE PLUS PERCENT MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLE HAT DOT COMMA COLON BAR AT ASTERIKS AMPERSAND ]
with_item -> test AS expression . [ COMMA COLON ]
## Transitions:
-- On SLASH shift to state 52
-- On RIGHTANGLERIGHTANGLE shift to state 95
-- On PLUS shift to state 97
-- On PERCENT shift to state 99
-- On MINUS shift to state 104
-- On LEFTPARENS shift to state 39
-- On LEFTBRACKET shift to state 55
-- On LEFTANGLELEFTANGLE shift to state 106
-- On HAT shift to state 108
-- On DOT shift to state 90
-- On BAR shift to state 112
-- On AT shift to state 92
-- On ASTERIKS shift to state 101
-- On AMPERSAND shift to state 110
## Reductions:
-- On COMMA COLON
--   reduce production with_item -> test AS expression

State 228:
## Known stack suffix:
## with_item COMMA parser_generator_separated_list(COMMA,with_item)
## LR(1) items:
parser_generator_separated_list(COMMA,with_item) -> with_item COMMA parser_generator_separated_list(COMMA,with_item) . [ COLON ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production parser_generator_separated_list(COMMA,with_item) -> with_item COMMA parser_generator_separated_list(COMMA,with_item)

State 229:
## Known stack suffix:
## with_item COMMA parser_generator_separated_list(COMMA,with_item)
## LR(1) items:
parser_generator_separated_nonempty_list(COMMA,with_item) -> with_item COMMA parser_generator_separated_list(COMMA,with_item) . [ COLON ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production parser_generator_separated_nonempty_list(COMMA,with_item) -> with_item COMMA parser_generator_separated_list(COMMA,with_item)

State 230:
## Known stack suffix:
## WITH parser_generator_separated_nonempty_list(COMMA,with_item)
## LR(1) items:
compound_statement -> WITH parser_generator_separated_nonempty_list(COMMA,with_item) . COLON option(ANNOTATION_COMMENT) block [ YIELD WITH WHILE TRY TRUE TILDE STRING RETURN RAISE PLUS PASS NOT NONLOCAL NEWLINE MINUS LEFTPARENS LEFTCURLY LEFTBRACKET LAMBDA INTEGER IMPORT IF IDENTIFIER GLOBAL FROM FORMAT FOR FLOAT FALSE EOF ELLIPSES DELETE DEFINE DEDENT CONTINUE COMPLEX CLASS BYTES BREAK AWAIT AT ASYNC ASTERIKS ASSERT ]
## Transitions:
-- On COLON shift to state 231
## Reductions:

State 231:
## Known stack suffix:
## WITH parser_generator_separated_nonempty_list(COMMA,with_item) COLON
## LR(1) items:
compound_statement -> WITH parser_generator_separated_nonempty_list(COMMA,with_item) COLON . option(ANNOTATION_COMMENT) block [ YIELD WITH WHILE TRY TRUE TILDE STRING RETURN RAISE PLUS PASS NOT NONLOCAL NEWLINE MINUS LEFTPARENS LEFTCURLY LEFTBRACKET LAMBDA INTEGER IMPORT IF IDENTIFIER GLOBAL FROM FORMAT FOR FLOAT FALSE EOF ELLIPSES DELETE DEFINE DEDENT CONTINUE COMPLEX CLASS BYTES BREAK AWAIT AT ASYNC ASTERIKS ASSERT ]
## Transitions:
-- On ANNOTATION_COMMENT shift to state 232
-- On option(ANNOTATION_COMMENT) shift to state 233
## Reductions:
-- On YIELD TRUE TILDE STRING RETURN RAISE PLUS PASS NOT NONLOCAL NEWLINE MINUS LEFTPARENS LEFTCURLY LEFTBRACKET LAMBDA INTEGER IMPORT IDENTIFIER GLOBAL FROM FORMAT FLOAT FALSE ELLIPSES DELETE CONTINUE COMPLEX BYTES BREAK AWAIT ASYNC ASTERIKS ASSERT
--   reduce production option(ANNOTATION_COMMENT) ->

State 232:
## Known stack suffix:
## ANNOTATION_COMMENT
## LR(1) items:
option(ANNOTATION_COMMENT) -> ANNOTATION_COMMENT . [ YIELD TRUE TILDE STRING RETURN RAISE PLUS PASS NOT NONLOCAL NEWLINE MINUS LEFTPARENS LEFTCURLY LEFTBRACKET LAMBDA INTEGER IMPORT IDENTIFIER GLOBAL FROM FORMAT FLOAT FALSE ELLIPSES DELETE CONTINUE COMPLEX BYTES BREAK AWAIT ASYNC ASTERIKS ASSERT ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production option(ANNOTATION_COMMENT) -> ANNOTATION_COMMENT

State 233:
## Known stack suffix:
## WITH parser_generator_separated_nonempty_list(COMMA,with_item) COLON option(ANNOTATION_COMMENT)
## LR(1) items:
compound_statement -> WITH parser_generator_separated_nonempty_list(COMMA,with_item) COLON option(ANNOTATION_COMMENT) . block [ YIELD WITH WHILE TRY TRUE TILDE STRING RETURN RAISE PLUS PASS NOT NONLOCAL NEWLINE MINUS LEFTPARENS LEFTCURLY LEFTBRACKET LAMBDA INTEGER IMPORT IF IDENTIFIER GLOBAL FROM FORMAT FOR FLOAT FALSE EOF ELLIPSES DELETE DEFINE DEDENT CONTINUE COMPLEX CLASS BYTES BREAK AWAIT AT ASYNC ASTERIKS ASSERT ]
## Transitions:
-- On YIELD shift to state 1
-- On TRUE shift to state 4
-- On TILDE shift to state 5
-- On STRING shift to state 6
-- On RETURN shift to state 234
-- On RAISE shift to state 236
-- On PLUS shift to state 12
-- On PASS shift to state 242
-- On NOT shift to state 17
-- On NONLOCAL shift to state 243
-- On NEWLINE shift to state 251
-- On MINUS shift to state 14
-- On LEFTPARENS shift to state 15
-- On LEFTCURLY shift to state 18
-- On LEFTBRACKET shift to state 20
-- On LAMBDA shift to state 21
-- On INTEGER shift to state 22
-- On IMPORT shift to state 253
-- On IDENTIFIER shift to state 23
-- On GLOBAL shift to state 276
-- On FROM shift to state 278
-- On FORMAT shift to state 24
-- On FLOAT shift to state 26
-- On FALSE shift to state 27
-- On ELLIPSES shift to state 28
-- On DELETE shift to state 291
-- On CONTINUE shift to state 293
-- On COMPLEX shift to state 29
-- On BYTES shift to state 30
-- On BREAK shift to state 294
-- On AWAIT shift to state 32
-- On ASYNC shift to state 33
-- On ASTERIKS shift to state 34
-- On ASSERT shift to state 295
-- On yield shift to state 299
-- On test_list shift to state 300
-- On test shift to state 75
-- On targets shift to state 336
-- On small_statement shift to state 348
-- On simple_statement shift to state 385
-- On set_or_dictionary shift to state 35
-- On separated_nonempty_list_indicator(COMMA,test) shift to state 80
-- On parser_generator_separated_nonempty_list_of_lists(SEMICOLON,small_statement) shift to state 386
-- On or_test shift to state 62
-- On not_test shift to state 49
-- On nonempty_list(NEWLINE) shift to state 388
-- On nonempty_list(BYTES) shift to state 36
-- On identifier shift to state 67
-- On expression shift to state 353
-- On comparison shift to state 70
-- On block shift to state 528
-- On atom shift to state 71
-- On and_test shift to state 72
## Reductions:

State 234:
## Known stack suffix:
## RETURN
## LR(1) items:
small_statement -> RETURN . option(test_list) [ SEMICOLON NEWLINE ]
## Transitions:
-- On TRUE shift to state 4
-- On TILDE shift to state 5
-- On STRING shift to state 6
-- On PLUS shift to state 12
-- On NOT shift to state 17
-- On MINUS shift to state 14
-- On LEFTPARENS shift to state 15
-- On LEFTCURLY shift to state 18
-- On LEFTBRACKET shift to state 20
-- On LAMBDA shift to state 21
-- On INTEGER shift to state 22
-- On IDENTIFIER shift to state 23
-- On FORMAT shift to state 24
-- On FLOAT shift to state 26
-- On FALSE shift to state 27
-- On ELLIPSES shift to state 28
-- On COMPLEX shift to state 29
-- On BYTES shift to state 30
-- On AWAIT shift to state 32
-- On ASYNC shift to state 33
-- On ASTERIKS shift to state 34
-- On test_list shift to state 218
-- On test shift to state 75
-- On set_or_dictionary shift to state 35
-- On separated_nonempty_list_indicator(COMMA,test) shift to state 80
-- On or_test shift to state 62
-- On option(test_list) shift to state 235
-- On not_test shift to state 49
-- On nonempty_list(BYTES) shift to state 36
-- On identifier shift to state 67
-- On expression shift to state 51
-- On comparison shift to state 70
-- On atom shift to state 71
-- On and_test shift to state 72
## Reductions:
-- On SEMICOLON NEWLINE
--   reduce production option(test_list) ->

State 235:
## Known stack suffix:
## RETURN option(test_list)
## LR(1) items:
small_statement -> RETURN option(test_list) . [ SEMICOLON NEWLINE ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production small_statement -> RETURN option(test_list)

State 236:
## Known stack suffix:
## RAISE
## LR(1) items:
small_statement -> RAISE . option(test_list) option(raise_from) [ SEMICOLON NEWLINE ]
## Transitions:
-- On TRUE shift to state 4
-- On TILDE shift to state 5
-- On STRING shift to state 6
-- On PLUS shift to state 12
-- On NOT shift to state 17
-- On MINUS shift to state 14
-- On LEFTPARENS shift to state 15
-- On LEFTCURLY shift to state 18
-- On LEFTBRACKET shift to state 20
-- On LAMBDA shift to state 21
-- On INTEGER shift to state 22
-- On IDENTIFIER shift to state 23
-- On FORMAT shift to state 24
-- On FLOAT shift to state 26
-- On FALSE shift to state 27
-- On ELLIPSES shift to state 28
-- On COMPLEX shift to state 29
-- On BYTES shift to state 30
-- On AWAIT shift to state 32
-- On ASYNC shift to state 33
-- On ASTERIKS shift to state 34
-- On test_list shift to state 218
-- On test shift to state 75
-- On set_or_dictionary shift to state 35
-- On separated_nonempty_list_indicator(COMMA,test) shift to state 80
-- On or_test shift to state 62
-- On option(test_list) shift to state 237
-- On not_test shift to state 49
-- On nonempty_list(BYTES) shift to state 36
-- On identifier shift to state 67
-- On expression shift to state 51
-- On comparison shift to state 70
-- On atom shift to state 71
-- On and_test shift to state 72
## Reductions:
-- On SEMICOLON NEWLINE FROM
--   reduce production option(test_list) ->

State 237:
## Known stack suffix:
## RAISE option(test_list)
## LR(1) items:
small_statement -> RAISE option(test_list) . option(raise_from) [ SEMICOLON NEWLINE ]
## Transitions:
-- On FROM shift to state 238
-- On raise_from shift to state 240
-- On option(raise_from) shift to state 241
## Reductions:
-- On SEMICOLON NEWLINE
--   reduce production option(raise_from) ->

State 238:
## Known stack suffix:
## FROM
## LR(1) items:
raise_from -> FROM . test_list [ SEMICOLON NEWLINE ]
## Transitions:
-- On TRUE shift to state 4
-- On TILDE shift to state 5
-- On STRING shift to state 6
-- On PLUS shift to state 12
-- On NOT shift to state 17
-- On MINUS shift to state 14
-- On LEFTPARENS shift to state 15
-- On LEFTCURLY shift to state 18
-- On LEFTBRACKET shift to state 20
-- On LAMBDA shift to state 21
-- On INTEGER shift to state 22
-- On IDENTIFIER shift to state 23
-- On FORMAT shift to state 24
-- On FLOAT shift to state 26
-- On FALSE shift to state 27
-- On ELLIPSES shift to state 28
-- On COMPLEX shift to state 29
-- On BYTES shift to state 30
-- On AWAIT shift to state 32
-- On ASYNC shift to state 33
-- On ASTERIKS shift to state 34
-- On test_list shift to state 239
-- On test shift to state 75
-- On set_or_dictionary shift to state 35
-- On separated_nonempty_list_indicator(COMMA,test) shift to state 80
-- On or_test shift to state 62
-- On not_test shift to state 49
-- On nonempty_list(BYTES) shift to state 36
-- On identifier shift to state 67
-- On expression shift to state 51
-- On comparison shift to state 70
-- On atom shift to state 71
-- On and_test shift to state 72
## Reductions:

State 239:
## Known stack suffix:
## FROM test_list
## LR(1) items:
raise_from -> FROM test_list . [ SEMICOLON NEWLINE ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production raise_from -> FROM test_list

State 240:
## Known stack suffix:
## raise_from
## LR(1) items:
option(raise_from) -> raise_from . [ SEMICOLON NEWLINE ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production option(raise_from) -> raise_from

State 241:
## Known stack suffix:
## RAISE option(test_list) option(raise_from)
## LR(1) items:
small_statement -> RAISE option(test_list) option(raise_from) . [ SEMICOLON NEWLINE ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production small_statement -> RAISE option(test_list) option(raise_from)

State 242:
## Known stack suffix:
## PASS
## LR(1) items:
small_statement -> PASS . [ SEMICOLON NEWLINE ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production small_statement -> PASS

State 243:
## Known stack suffix:
## NONLOCAL
## LR(1) items:
small_statement -> NONLOCAL . parser_generator_separated_nonempty_list(COMMA,identifier) [ SEMICOLON NEWLINE ]
## Transitions:
-- On IDENTIFIER shift to state 23
-- On ASYNC shift to state 33
-- On parser_generator_separated_nonempty_list(COMMA,identifier) shift to state 244
-- On identifier shift to state 245
## Reductions:

State 244:
## Known stack suffix:
## NONLOCAL parser_generator_separated_nonempty_list(COMMA,identifier)
## LR(1) items:
small_statement -> NONLOCAL parser_generator_separated_nonempty_list(COMMA,identifier) . [ SEMICOLON NEWLINE ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production small_statement -> NONLOCAL parser_generator_separated_nonempty_list(COMMA,identifier)

State 245:
## Known stack suffix:
## identifier
## LR(1) items:
parser_generator_separated_nonempty_list(COMMA,identifier) -> identifier . [ SEMICOLON NEWLINE ]
parser_generator_separated_nonempty_list(COMMA,identifier) -> identifier . COMMA parser_generator_separated_list(COMMA,identifier) [ SEMICOLON NEWLINE ]
## Transitions:
-- On COMMA shift to state 246
## Reductions:
-- On SEMICOLON NEWLINE
--   reduce production parser_generator_separated_nonempty_list(COMMA,identifier) -> identifier

State 246:
## Known stack suffix:
## identifier COMMA
## LR(1) items:
parser_generator_separated_nonempty_list(COMMA,identifier) -> identifier COMMA . parser_generator_separated_list(COMMA,identifier) [ SEMICOLON NEWLINE ]
## Transitions:
-- On IDENTIFIER shift to state 23
-- On ASYNC shift to state 33
-- On parser_generator_separated_list(COMMA,identifier) shift to state 247
-- On identifier shift to state 248
## Reductions:
-- On SEMICOLON NEWLINE
--   reduce production parser_generator_separated_list(COMMA,identifier) ->

State 247:
## Known stack suffix:
## identifier COMMA parser_generator_separated_list(COMMA,identifier)
## LR(1) items:
parser_generator_separated_nonempty_list(COMMA,identifier) -> identifier COMMA parser_generator_separated_list(COMMA,identifier) . [ SEMICOLON NEWLINE ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production parser_generator_separated_nonempty_list(COMMA,identifier) -> identifier COMMA parser_generator_separated_list(COMMA,identifier)

State 248:
## Known stack suffix:
## identifier
## LR(1) items:
parser_generator_separated_list(COMMA,identifier) -> identifier . [ SEMICOLON NEWLINE ]
parser_generator_separated_list(COMMA,identifier) -> identifier . COMMA parser_generator_separated_list(COMMA,identifier) [ SEMICOLON NEWLINE ]
## Transitions:
-- On COMMA shift to state 249
## Reductions:
-- On SEMICOLON NEWLINE
--   reduce production parser_generator_separated_list(COMMA,identifier) -> identifier

State 249:
## Known stack suffix:
## identifier COMMA
## LR(1) items:
parser_generator_separated_list(COMMA,identifier) -> identifier COMMA . parser_generator_separated_list(COMMA,identifier) [ SEMICOLON NEWLINE ]
## Transitions:
-- On IDENTIFIER shift to state 23
-- On ASYNC shift to state 33
-- On parser_generator_separated_list(COMMA,identifier) shift to state 250
-- On identifier shift to state 248
## Reductions:
-- On SEMICOLON NEWLINE
--   reduce production parser_generator_separated_list(COMMA,identifier) ->

State 250:
## Known stack suffix:
## identifier COMMA parser_generator_separated_list(COMMA,identifier)
## LR(1) items:
parser_generator_separated_list(COMMA,identifier) -> identifier COMMA parser_generator_separated_list(COMMA,identifier) . [ SEMICOLON NEWLINE ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production parser_generator_separated_list(COMMA,identifier) -> identifier COMMA parser_generator_separated_list(COMMA,identifier)

State 251:
## Known stack suffix:
## NEWLINE
## LR(1) items:
nonempty_list(NEWLINE) -> NEWLINE . [ WITH WHILE TRY INDENT IF FOR DEFINE CLASS AT ASYNC ]
nonempty_list(NEWLINE) -> NEWLINE . nonempty_list(NEWLINE) [ WITH WHILE TRY INDENT IF FOR DEFINE CLASS AT ASYNC ]
## Transitions:
-- On NEWLINE shift to state 251
-- On nonempty_list(NEWLINE) shift to state 252
## Reductions:
-- On WITH WHILE TRY INDENT IF FOR DEFINE CLASS AT ASYNC
--   reduce production nonempty_list(NEWLINE) -> NEWLINE

State 252:
## Known stack suffix:
## NEWLINE nonempty_list(NEWLINE)
## LR(1) items:
nonempty_list(NEWLINE) -> NEWLINE nonempty_list(NEWLINE) . [ WITH WHILE TRY INDENT IF FOR DEFINE CLASS AT ASYNC ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production nonempty_list(NEWLINE) -> NEWLINE nonempty_list(NEWLINE)

State 253:
## Known stack suffix:
## IMPORT
## LR(1) items:
small_statement -> IMPORT . imports [ SEMICOLON NEWLINE ]
## Transitions:
-- On LEFTPARENS shift to state 254
-- On IDENTIFIER shift to state 23
-- On ASYNC shift to state 33
-- On ASTERIKS shift to state 255
-- On reference shift to state 256
-- On parser_generator_separated_nonempty_list(DOT,identifier) shift to state 259
-- On parser_generator_separated_nonempty_list(COMMA,import) shift to state 274
-- On imports shift to state 275
-- On import shift to state 262
-- On identifier shift to state 268
## Reductions:

State 254:
## Known stack suffix:
## LEFTPARENS
## LR(1) items:
imports -> LEFTPARENS . parser_generator_separated_nonempty_list(COMMA,import) RIGHTPARENS [ SEMICOLON NEWLINE ]
## Transitions:
-- On IDENTIFIER shift to state 23
-- On ASYNC shift to state 33
-- On ASTERIKS shift to state 255
-- On reference shift to state 256
-- On parser_generator_separated_nonempty_list(DOT,identifier) shift to state 259
-- On parser_generator_separated_nonempty_list(COMMA,import) shift to state 260
-- On import shift to state 262
-- On identifier shift to state 268
## Reductions:

State 255:
## Known stack suffix:
## ASTERIKS
## LR(1) items:
import -> ASTERIKS . [ SEMICOLON RIGHTPARENS NEWLINE COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production import -> ASTERIKS

State 256:
## Known stack suffix:
## reference
## LR(1) items:
import -> reference . [ SEMICOLON RIGHTPARENS NEWLINE COMMA ]
import -> reference . AS identifier [ SEMICOLON RIGHTPARENS NEWLINE COMMA ]
## Transitions:
-- On AS shift to state 257
## Reductions:
-- On SEMICOLON RIGHTPARENS NEWLINE COMMA
--   reduce production import -> reference

State 257:
## Known stack suffix:
## reference AS
## LR(1) items:
import -> reference AS . identifier [ SEMICOLON RIGHTPARENS NEWLINE COMMA ]
## Transitions:
-- On IDENTIFIER shift to state 23
-- On ASYNC shift to state 33
-- On identifier shift to state 258
## Reductions:

State 258:
## Known stack suffix:
## reference AS identifier
## LR(1) items:
import -> reference AS identifier . [ SEMICOLON RIGHTPARENS NEWLINE COMMA ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production import -> reference AS identifier

State 259:
## Known stack suffix:
## parser_generator_separated_nonempty_list(DOT,identifier)
## LR(1) items:
reference -> parser_generator_separated_nonempty_list(DOT,identifier) . [ SEMICOLON RIGHTPARENS NEWLINE LEFTPARENS COMMA COLON AS ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production reference -> parser_generator_separated_nonempty_list(DOT,identifier)

State 260:
## Known stack suffix:
## LEFTPARENS parser_generator_separated_nonempty_list(COMMA,import)
## LR(1) items:
imports -> LEFTPARENS parser_generator_separated_nonempty_list(COMMA,import) . RIGHTPARENS [ SEMICOLON NEWLINE ]
## Transitions:
-- On RIGHTPARENS shift to state 261
## Reductions:

State 261:
## Known stack suffix:
## LEFTPARENS parser_generator_separated_nonempty_list(COMMA,import) RIGHTPARENS
## LR(1) items:
imports -> LEFTPARENS parser_generator_separated_nonempty_list(COMMA,import) RIGHTPARENS . [ SEMICOLON NEWLINE ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production imports -> LEFTPARENS parser_generator_separated_nonempty_list(COMMA,import) RIGHTPARENS

State 262:
## Known stack suffix:
## import
## LR(1) items:
parser_generator_separated_nonempty_list(COMMA,import) -> import . [ SEMICOLON RIGHTPARENS NEWLINE ]
parser_generator_separated_nonempty_list(COMMA,import) -> import . COMMA parser_generator_separated_list(COMMA,import) [ SEMICOLON RIGHTPARENS NEWLINE ]
## Transitions:
-- On COMMA shift to state 263
## Reductions:
-- On SEMICOLON RIGHTPARENS NEWLINE
--   reduce production parser_generator_separated_nonempty_list(COMMA,import) -> import

State 263:
## Known stack suffix:
## import COMMA
## LR(1) items:
parser_generator_separated_nonempty_list(COMMA,import) -> import COMMA . parser_generator_separated_list(COMMA,import) [ SEMICOLON RIGHTPARENS NEWLINE ]
## Transitions:
-- On IDENTIFIER shift to state 23
-- On ASYNC shift to state 33
-- On ASTERIKS shift to state 255
-- On reference shift to state 256
-- On parser_generator_separated_nonempty_list(DOT,identifier) shift to state 259
-- On parser_generator_separated_list(COMMA,import) shift to state 264
-- On import shift to state 265
-- On identifier shift to state 268
## Reductions:
-- On SEMICOLON RIGHTPARENS NEWLINE
--   reduce production parser_generator_separated_list(COMMA,import) ->

State 264:
## Known stack suffix:
## import COMMA parser_generator_separated_list(COMMA,import)
## LR(1) items:
parser_generator_separated_nonempty_list(COMMA,import) -> import COMMA parser_generator_separated_list(COMMA,import) . [ SEMICOLON RIGHTPARENS NEWLINE ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production parser_generator_separated_nonempty_list(COMMA,import) -> import COMMA parser_generator_separated_list(COMMA,import)

State 265:
## Known stack suffix:
## import
## LR(1) items:
parser_generator_separated_list(COMMA,import) -> import . [ SEMICOLON RIGHTPARENS NEWLINE ]
parser_generator_separated_list(COMMA,import) -> import . COMMA parser_generator_separated_list(COMMA,import) [ SEMICOLON RIGHTPARENS NEWLINE ]
## Transitions:
-- On COMMA shift to state 266
## Reductions:
-- On SEMICOLON RIGHTPARENS NEWLINE
--   reduce production parser_generator_separated_list(COMMA,import) -> import

State 266:
## Known stack suffix:
## import COMMA
## LR(1) items:
parser_generator_separated_list(COMMA,import) -> import COMMA . parser_generator_separated_list(COMMA,import) [ SEMICOLON RIGHTPARENS NEWLINE ]
## Transitions:
-- On IDENTIFIER shift to state 23
-- On ASYNC shift to state 33
-- On ASTERIKS shift to state 255
-- On reference shift to state 256
-- On parser_generator_separated_nonempty_list(DOT,identifier) shift to state 259
-- On parser_generator_separated_list(COMMA,import) shift to state 267
-- On import shift to state 265
-- On identifier shift to state 268
## Reductions:
-- On SEMICOLON RIGHTPARENS NEWLINE
--   reduce production parser_generator_separated_list(COMMA,import) ->

State 267:
## Known stack suffix:
## import COMMA parser_generator_separated_list(COMMA,import)
## LR(1) items:
parser_generator_separated_list(COMMA,import) -> import COMMA parser_generator_separated_list(COMMA,import) . [ SEMICOLON RIGHTPARENS NEWLINE ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production parser_generator_separated_list(COMMA,import) -> import COMMA parser_generator_separated_list(COMMA,import)

State 268:
## Known stack suffix:
## identifier
## LR(1) items:
parser_generator_separated_nonempty_list(DOT,identifier) -> identifier . [ SEMICOLON RIGHTPARENS NEWLINE LEFTPARENS COMMA COLON AS ]
parser_generator_separated_nonempty_list(DOT,identifier) -> identifier . DOT parser_generator_separated_list(DOT,identifier) [ SEMICOLON RIGHTPARENS NEWLINE LEFTPARENS COMMA COLON AS ]
## Transitions:
-- On DOT shift to state 269
## Reductions:
-- On SEMICOLON RIGHTPARENS NEWLINE LEFTPARENS COMMA COLON AS
--   reduce production parser_generator_separated_nonempty_list(DOT,identifier) -> identifier

State 269:
## Known stack suffix:
## identifier DOT
## LR(1) items:
parser_generator_separated_nonempty_list(DOT,identifier) -> identifier DOT . parser_generator_separated_list(DOT,identifier) [ SEMICOLON RIGHTPARENS NEWLINE LEFTPARENS COMMA COLON AS ]
## Transitions:
-- On IDENTIFIER shift to state 23
-- On ASYNC shift to state 33
-- On parser_generator_separated_list(DOT,identifier) shift to state 270
-- On identifier shift to state 271
## Reductions:
-- On SEMICOLON RIGHTPARENS NEWLINE LEFTPARENS COMMA COLON AS
--   reduce production parser_generator_separated_list(DOT,identifier) ->

State 270:
## Known stack suffix:
## identifier DOT parser_generator_separated_list(DOT,identifier)
## LR(1) items:
parser_generator_separated_nonempty_list(DOT,identifier) -> identifier DOT parser_generator_separated_list(DOT,identifier) . [ SEMICOLON RIGHTPARENS NEWLINE LEFTPARENS COMMA COLON AS ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production parser_generator_separated_nonempty_list(DOT,identifier) -> identifier DOT parser_generator_separated_list(DOT,identifier)

State 271:
## Known stack suffix:
## identifier
## LR(1) items:
parser_generator_separated_list(DOT,identifier) -> identifier . [ SEMICOLON RIGHTPARENS NEWLINE LEFTPARENS COMMA COLON AS ]
parser_generator_separated_list(DOT,identifier) -> identifier . DOT parser_generator_separated_list(DOT,identifier) [ SEMICOLON RIGHTPARENS NEWLINE LEFTPARENS COMMA COLON AS ]
## Transitions:
-- On DOT shift to state 272
## Reductions:
-- On SEMICOLON RIGHTPARENS NEWLINE LEFTPARENS COMMA COLON AS
--   reduce production parser_generator_separated_list(DOT,identifier) -> identifier

State 272:
## Known stack suffix:
## identifier DOT
## LR(1) items:
parser_generator_separated_list(DOT,identifier) -> identifier DOT . parser_generator_separated_list(DOT,identifier) [ SEMICOLON RIGHTPARENS NEWLINE LEFTPARENS COMMA COLON AS ]
## Transitions:
-- On IDENTIFIER shift to state 23
-- On ASYNC shift to state 33
-- On parser_generator_separated_list(DOT,identifier) shift to state 273
-- On identifier shift to state 271
## Reductions:
-- On SEMICOLON RIGHTPARENS NEWLINE LEFTPARENS COMMA COLON AS
--   reduce production parser_generator_separated_list(DOT,identifier) ->

State 273:
## Known stack suffix:
## identifier DOT parser_generator_separated_list(DOT,identifier)
## LR(1) items:
parser_generator_separated_list(DOT,identifier) -> identifier DOT parser_generator_separated_list(DOT,identifier) . [ SEMICOLON RIGHTPARENS NEWLINE LEFTPARENS COMMA COLON AS ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production parser_generator_separated_list(DOT,identifier) -> identifier DOT parser_generator_separated_list(DOT,identifier)

State 274:
## Known stack suffix:
## parser_generator_separated_nonempty_list(COMMA,import)
## LR(1) items:
imports -> parser_generator_separated_nonempty_list(COMMA,import) . [ SEMICOLON NEWLINE ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production imports -> parser_generator_separated_nonempty_list(COMMA,import)

State 275:
## Known stack suffix:
## IMPORT imports
## LR(1) items:
small_statement -> IMPORT imports . [ SEMICOLON NEWLINE ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production small_statement -> IMPORT imports

State 276:
## Known stack suffix:
## GLOBAL
## LR(1) items:
small_statement -> GLOBAL . parser_generator_separated_nonempty_list(COMMA,identifier) [ SEMICOLON NEWLINE ]
## Transitions:
-- On IDENTIFIER shift to state 23
-- On ASYNC shift to state 33
-- On parser_generator_separated_nonempty_list(COMMA,identifier) shift to state 277
-- On identifier shift to state 245
## Reductions:

State 277:
## Known stack suffix:
## GLOBAL parser_generator_separated_nonempty_list(COMMA,identifier)
## LR(1) items:
small_statement -> GLOBAL parser_generator_separated_nonempty_list(COMMA,identifier) . [ SEMICOLON NEWLINE ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production small_statement -> GLOBAL parser_generator_separated_nonempty_list(COMMA,identifier)

State 278:
## Known stack suffix:
## FROM
## LR(1) items:
small_statement -> FROM . from IMPORT imports [ SEMICOLON NEWLINE ]
## Transitions:
-- On IDENTIFIER shift to state 23
-- On ELLIPSES shift to state 279
-- On DOT shift to state 280
-- On ASYNC shift to state 33
-- On nonempty_list(ellipsis_or_dot) shift to state 281
-- On identifier shift to state 282
-- On from_string shift to state 287
-- On from shift to state 288
-- On ellipsis_or_dot shift to state 284
## Reductions:

State 279:
## Known stack suffix:
## ELLIPSES
## LR(1) items:
ellipsis_or_dot -> ELLIPSES . [ IMPORT IDENTIFIER ELLIPSES DOT ASYNC ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production ellipsis_or_dot -> ELLIPSES

State 280:
## Known stack suffix:
## DOT
## LR(1) items:
ellipsis_or_dot -> DOT . [ IMPORT IDENTIFIER ELLIPSES DOT ASYNC ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production ellipsis_or_dot -> DOT

State 281:
## Known stack suffix:
## nonempty_list(ellipsis_or_dot)
## LR(1) items:
from_string -> nonempty_list(ellipsis_or_dot) . [ IMPORT ]
from_string -> nonempty_list(ellipsis_or_dot) . from_string [ IMPORT ]
## Transitions:
-- On IDENTIFIER shift to state 23
-- On ELLIPSES shift to state 279
-- On DOT shift to state 280
-- On ASYNC shift to state 33
-- On nonempty_list(ellipsis_or_dot) shift to state 281
-- On identifier shift to state 282
-- On from_string shift to state 286
-- On ellipsis_or_dot shift to state 284
## Reductions:
-- On IMPORT
--   reduce production from_string -> nonempty_list(ellipsis_or_dot)

State 282:
## Known stack suffix:
## identifier
## LR(1) items:
from_string -> identifier . [ IMPORT ]
from_string -> identifier . from_string [ IMPORT ]
## Transitions:
-- On IDENTIFIER shift to state 23
-- On ELLIPSES shift to state 279
-- On DOT shift to state 280
-- On ASYNC shift to state 33
-- On nonempty_list(ellipsis_or_dot) shift to state 281
-- On identifier shift to state 282
-- On from_string shift to state 283
-- On ellipsis_or_dot shift to state 284
## Reductions:
-- On IMPORT
--   reduce production from_string -> identifier

State 283:
## Known stack suffix:
## identifier from_string
## LR(1) items:
from_string -> identifier from_string . [ IMPORT ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production from_string -> identifier from_string

State 284:
## Known stack suffix:
## ellipsis_or_dot
## LR(1) items:
nonempty_list(ellipsis_or_dot) -> ellipsis_or_dot . [ IMPORT IDENTIFIER ELLIPSES DOT ASYNC ]
nonempty_list(ellipsis_or_dot) -> ellipsis_or_dot . nonempty_list(ellipsis_or_dot) [ IMPORT IDENTIFIER ELLIPSES DOT ASYNC ]
## Transitions:
-- On ELLIPSES shift to state 279
-- On DOT shift to state 280
-- On nonempty_list(ellipsis_or_dot) shift to state 285
-- On ellipsis_or_dot shift to state 284
## Reductions:
-- On IMPORT IDENTIFIER ASYNC
--   reduce production nonempty_list(ellipsis_or_dot) -> ellipsis_or_dot

State 285:
## Known stack suffix:
## ellipsis_or_dot nonempty_list(ellipsis_or_dot)
## LR(1) items:
nonempty_list(ellipsis_or_dot) -> ellipsis_or_dot nonempty_list(ellipsis_or_dot) . [ IMPORT IDENTIFIER ELLIPSES DOT ASYNC ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production nonempty_list(ellipsis_or_dot) -> ellipsis_or_dot nonempty_list(ellipsis_or_dot)

State 286:
## Known stack suffix:
## nonempty_list(ellipsis_or_dot) from_string
## LR(1) items:
from_string -> nonempty_list(ellipsis_or_dot) from_string . [ IMPORT ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production from_string -> nonempty_list(ellipsis_or_dot) from_string

State 287:
## Known stack suffix:
## from_string
## LR(1) items:
from -> from_string . [ IMPORT ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production from -> from_string

State 288:
## Known stack suffix:
## FROM from
## LR(1) items:
small_statement -> FROM from . IMPORT imports [ SEMICOLON NEWLINE ]
## Transitions:
-- On IMPORT shift to state 289
## Reductions:

State 289:
## Known stack suffix:
## FROM from IMPORT
## LR(1) items:
small_statement -> FROM from IMPORT . imports [ SEMICOLON NEWLINE ]
## Transitions:
-- On LEFTPARENS shift to state 254
-- On IDENTIFIER shift to state 23
-- On ASYNC shift to state 33
-- On ASTERIKS shift to state 255
-- On reference shift to state 256
-- On parser_generator_separated_nonempty_list(DOT,identifier) shift to state 259
-- On parser_generator_separated_nonempty_list(COMMA,import) shift to state 274
-- On imports shift to state 290
-- On import shift to state 262
-- On identifier shift to state 268
## Reductions:

State 290:
## Known stack suffix:
## FROM from IMPORT imports
## LR(1) items:
small_statement -> FROM from IMPORT imports . [ SEMICOLON NEWLINE ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production small_statement -> FROM from IMPORT imports

State 291:
## Known stack suffix:
## DELETE
## LR(1) items:
small_statement -> DELETE . expression_list [ SEMICOLON NEWLINE ]
## Transitions:
-- On TRUE shift to state 4
-- On TILDE shift to state 5
-- On STRING shift to state 6
-- On PLUS shift to state 12
-- On NOT shift to state 13
-- On MINUS shift to state 14
-- On LEFTPARENS shift to state 15
-- On LEFTCURLY shift to state 18
-- On LEFTBRACKET shift to state 20
-- On INTEGER shift to state 22
-- On IDENTIFIER shift to state 23
-- On FORMAT shift to state 24
-- On FLOAT shift to state 26
-- On FALSE shift to state 27
-- On ELLIPSES shift to state 28
-- On COMPLEX shift to state 29
-- On BYTES shift to state 30
-- On AWAIT shift to state 32
-- On ASYNC shift to state 33
-- On ASTERIKS shift to state 34
-- On set_or_dictionary shift to state 35
-- On separated_nonempty_list_indicator(COMMA,expression) shift to state 43
-- On nonempty_list(BYTES) shift to state 36
-- On identifier shift to state 37
-- On expression_list shift to state 292
-- On expression shift to state 144
-- On atom shift to state 71
## Reductions:

State 292:
## Known stack suffix:
## DELETE expression_list
## LR(1) items:
small_statement -> DELETE expression_list . [ SEMICOLON NEWLINE ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production small_statement -> DELETE expression_list

State 293:
## Known stack suffix:
## CONTINUE
## LR(1) items:
small_statement -> CONTINUE . [ SEMICOLON NEWLINE ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production small_statement -> CONTINUE

State 294:
## Known stack suffix:
## BREAK
## LR(1) items:
small_statement -> BREAK . [ SEMICOLON NEWLINE ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production small_statement -> BREAK

State 295:
## Known stack suffix:
## ASSERT
## LR(1) items:
small_statement -> ASSERT . test [ SEMICOLON NEWLINE ]
small_statement -> ASSERT . test COMMA test [ SEMICOLON NEWLINE ]
## Transitions:
-- On TRUE shift to state 4
-- On TILDE shift to state 5
-- On STRING shift to state 6
-- On PLUS shift to state 12
-- On NOT shift to state 17
-- On MINUS shift to state 14
-- On LEFTPARENS shift to state 15
-- On LEFTCURLY shift to state 18
-- On LEFTBRACKET shift to state 20
-- On LAMBDA shift to state 21
-- On INTEGER shift to state 22
-- On IDENTIFIER shift to state 23
-- On FORMAT shift to state 24
-- On FLOAT shift to state 26
-- On FALSE shift to state 27
-- On ELLIPSES shift to state 28
-- On COMPLEX shift to state 29
-- On BYTES shift to state 30
-- On AWAIT shift to state 32
-- On ASYNC shift to state 33
-- On ASTERIKS shift to state 34
-- On test shift to state 296
-- On set_or_dictionary shift to state 35
-- On or_test shift to state 62
-- On not_test shift to state 49
-- On nonempty_list(BYTES) shift to state 36
-- On identifier shift to state 67
-- On expression shift to state 51
-- On comparison shift to state 70
-- On atom shift to state 71
-- On and_test shift to state 72
## Reductions:

State 296:
## Known stack suffix:
## ASSERT test
## LR(1) items:
small_statement -> ASSERT test . [ SEMICOLON NEWLINE ]
small_statement -> ASSERT test . COMMA test [ SEMICOLON NEWLINE ]
## Transitions:
-- On COMMA shift to state 297
## Reductions:
-- On SEMICOLON NEWLINE
--   reduce production small_statement -> ASSERT test

State 297:
## Known stack suffix:
## ASSERT test COMMA
## LR(1) items:
small_statement -> ASSERT test COMMA . test [ SEMICOLON NEWLINE ]
## Transitions:
-- On TRUE shift to state 4
-- On TILDE shift to state 5
-- On STRING shift to state 6
-- On PLUS shift to state 12
-- On NOT shift to state 17
-- On MINUS shift to state 14
-- On LEFTPARENS shift to state 15
-- On LEFTCURLY shift to state 18
-- On LEFTBRACKET shift to state 20
-- On LAMBDA shift to state 21
-- On INTEGER shift to state 22
-- On IDENTIFIER shift to state 23
-- On FORMAT shift to state 24
-- On FLOAT shift to state 26
-- On FALSE shift to state 27
-- On ELLIPSES shift to state 28
-- On COMPLEX shift to state 29
-- On BYTES shift to state 30
-- On AWAIT shift to state 32
-- On ASYNC shift to state 33
-- On ASTERIKS shift to state 34
-- On test shift to state 298
-- On set_or_dictionary shift to state 35
-- On or_test shift to state 62
-- On not_test shift to state 49
-- On nonempty_list(BYTES) shift to state 36
-- On identifier shift to state 67
-- On expression shift to state 51
-- On comparison shift to state 70
-- On atom shift to state 71
-- On and_test shift to state 72
## Reductions:

State 298:
## Known stack suffix:
## ASSERT test COMMA test
## LR(1) items:
small_statement -> ASSERT test COMMA test . [ SEMICOLON NEWLINE ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production small_statement -> ASSERT test COMMA test

State 299:
## Known stack suffix:
## yield
## LR(1) items:
small_statement -> yield . [ SEMICOLON NEWLINE ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production small_statement -> yield

State 300:
## Known stack suffix:
## test_list
## LR(1) items:
small_statement -> test_list . PLUSEQUALS value [ SEMICOLON NEWLINE ]
small_statement -> test_list . ATEQUALS value [ SEMICOLON NEWLINE ]
small_statement -> test_list . AMPERSANDEQUALS value [ SEMICOLON NEWLINE ]
small_statement -> test_list . BAREQUALS value [ SEMICOLON NEWLINE ]
small_statement -> test_list . HATEQUALS value [ SEMICOLON NEWLINE ]
small_statement -> test_list . SLASHSLASHEQUALS value [ SEMICOLON NEWLINE ]
small_statement -> test_list . SLASHEQUALS value [ SEMICOLON NEWLINE ]
small_statement -> test_list . LEFTANGLELEFTANGLEEQUALS value [ SEMICOLON NEWLINE ]
small_statement -> test_list . PERCENTEQUALS value [ SEMICOLON NEWLINE ]
small_statement -> test_list . ASTERIKSASTERIKSEQUALS value [ SEMICOLON NEWLINE ]
small_statement -> test_list . ASTERIKSEQUALS value [ SEMICOLON NEWLINE ]
small_statement -> test_list . RIGHTANGLERIGHTANGLEEQUALS value [ SEMICOLON NEWLINE ]
small_statement -> test_list . MINUSEQUALS value [ SEMICOLON NEWLINE ]
small_statement -> test_list . COLON expression [ SEMICOLON NEWLINE ]
small_statement -> test_list . ANNOTATION_COMMENT [ SEMICOLON NEWLINE ]
small_statement -> test_list . COLON expression EQUALS test_list [ SEMICOLON NEWLINE ]
small_statement -> test_list . COLON expression EQUALS ELLIPSES [ SEMICOLON NEWLINE ]
small_statement -> test_list . [ SEMICOLON NEWLINE ]
targets -> test_list . EQUALS [ YIELD TRUE TILDE STRING PLUS NOT MINUS LEFTPARENS LEFTCURLY LEFTBRACKET LAMBDA INTEGER IDENTIFIER FORMAT FLOAT FALSE ELLIPSES COMPLEX BYTES AWAIT ASYNC ASTERIKS ]
## Transitions:
-- On SLASHSLASHEQUALS shift to state 301
-- On SLASHEQUALS shift to state 305
-- On RIGHTANGLERIGHTANGLEEQUALS shift to state 307
-- On PLUSEQUALS shift to state 309
-- On PERCENTEQUALS shift to state 311
-- On MINUSEQUALS shift to state 313
-- On LEFTANGLELEFTANGLEEQUALS shift to state 315
-- On HATEQUALS shift to state 317
-- On EQUALS shift to state 319
-- On COLON shift to state 320
-- On BAREQUALS shift to state 325
-- On ATEQUALS shift to state 327
-- On ASTERIKSEQUALS shift to state 329
-- On ASTERIKSASTERIKSEQUALS shift to state 331
-- On ANNOTATION_COMMENT shift to state 333
-- On AMPERSANDEQUALS shift to state 334
## Reductions:
-- On SEMICOLON NEWLINE
--   reduce production small_statement -> test_list

State 301:
## Known stack suffix:
## test_list SLASHSLASHEQUALS
## LR(1) items:
small_statement -> test_list SLASHSLASHEQUALS . value [ SEMICOLON NEWLINE ]
## Transitions:
-- On YIELD shift to state 1
-- On TRUE shift to state 4
-- On TILDE shift to state 5
-- On STRING shift to state 6
-- On PLUS shift to state 12
-- On NOT shift to state 17
-- On MINUS shift to state 14
-- On LEFTPARENS shift to state 15
-- On LEFTCURLY shift to state 18
-- On LEFTBRACKET shift to state 20
-- On LAMBDA shift to state 21
-- On INTEGER shift to state 22
-- On IDENTIFIER shift to state 23
-- On FORMAT shift to state 24
-- On FLOAT shift to state 26
-- On FALSE shift to state 27
-- On ELLIPSES shift to state 28
-- On COMPLEX shift to state 29
-- On BYTES shift to state 30
-- On AWAIT shift to state 32
-- On ASYNC shift to state 33
-- On ASTERIKS shift to state 34
-- On yield shift to state 302
-- On value shift to state 303
-- On test_list shift to state 304
-- On test shift to state 75
-- On set_or_dictionary shift to state 35
-- On separated_nonempty_list_indicator(COMMA,test) shift to state 80
-- On or_test shift to state 62
-- On not_test shift to state 49
-- On nonempty_list(BYTES) shift to state 36
-- On identifier shift to state 67
-- On expression shift to state 51
-- On comparison shift to state 70
-- On atom shift to state 71
-- On and_test shift to state 72
## Reductions:

State 302:
## Known stack suffix:
## yield
## LR(1) items:
value -> yield . [ SEMICOLON NEWLINE ANNOTATION_COMMENT ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production value -> yield

State 303:
## Known stack suffix:
## test_list SLASHSLASHEQUALS value
## LR(1) items:
small_statement -> test_list SLASHSLASHEQUALS value . [ SEMICOLON NEWLINE ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production small_statement -> test_list SLASHSLASHEQUALS value

State 304:
## Known stack suffix:
## test_list
## LR(1) items:
value -> test_list . [ SEMICOLON NEWLINE ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production value -> test_list

State 305:
## Known stack suffix:
## test_list SLASHEQUALS
## LR(1) items:
small_statement -> test_list SLASHEQUALS . value [ SEMICOLON NEWLINE ]
## Transitions:
-- On YIELD shift to state 1
-- On TRUE shift to state 4
-- On TILDE shift to state 5
-- On STRING shift to state 6
-- On PLUS shift to state 12
-- On NOT shift to state 17
-- On MINUS shift to state 14
-- On LEFTPARENS shift to state 15
-- On LEFTCURLY shift to state 18
-- On LEFTBRACKET shift to state 20
-- On LAMBDA shift to state 21
-- On INTEGER shift to state 22
-- On IDENTIFIER shift to state 23
-- On FORMAT shift to state 24
-- On FLOAT shift to state 26
-- On FALSE shift to state 27
-- On ELLIPSES shift to state 28
-- On COMPLEX shift to state 29
-- On BYTES shift to state 30
-- On AWAIT shift to state 32
-- On ASYNC shift to state 33
-- On ASTERIKS shift to state 34
-- On yield shift to state 302
-- On value shift to state 306
-- On test_list shift to state 304
-- On test shift to state 75
-- On set_or_dictionary shift to state 35
-- On separated_nonempty_list_indicator(COMMA,test) shift to state 80
-- On or_test shift to state 62
-- On not_test shift to state 49
-- On nonempty_list(BYTES) shift to state 36
-- On identifier shift to state 67
-- On expression shift to state 51
-- On comparison shift to state 70
-- On atom shift to state 71
-- On and_test shift to state 72
## Reductions:

State 306:
## Known stack suffix:
## test_list SLASHEQUALS value
## LR(1) items:
small_statement -> test_list SLASHEQUALS value . [ SEMICOLON NEWLINE ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production small_statement -> test_list SLASHEQUALS value

State 307:
## Known stack suffix:
## test_list RIGHTANGLERIGHTANGLEEQUALS
## LR(1) items:
small_statement -> test_list RIGHTANGLERIGHTANGLEEQUALS . value [ SEMICOLON NEWLINE ]
## Transitions:
-- On YIELD shift to state 1
-- On TRUE shift to state 4
-- On TILDE shift to state 5
-- On STRING shift to state 6
-- On PLUS shift to state 12
-- On NOT shift to state 17
-- On MINUS shift to state 14
-- On LEFTPARENS shift to state 15
-- On LEFTCURLY shift to state 18
-- On LEFTBRACKET shift to state 20
-- On LAMBDA shift to state 21
-- On INTEGER shift to state 22
-- On IDENTIFIER shift to state 23
-- On FORMAT shift to state 24
-- On FLOAT shift to state 26
-- On FALSE shift to state 27
-- On ELLIPSES shift to state 28
-- On COMPLEX shift to state 29
-- On BYTES shift to state 30
-- On AWAIT shift to state 32
-- On ASYNC shift to state 33
-- On ASTERIKS shift to state 34
-- On yield shift to state 302
-- On value shift to state 308
-- On test_list shift to state 304
-- On test shift to state 75
-- On set_or_dictionary shift to state 35
-- On separated_nonempty_list_indicator(COMMA,test) shift to state 80
-- On or_test shift to state 62
-- On not_test shift to state 49
-- On nonempty_list(BYTES) shift to state 36
-- On identifier shift to state 67
-- On expression shift to state 51
-- On comparison shift to state 70
-- On atom shift to state 71
-- On and_test shift to state 72
## Reductions:

State 308:
## Known stack suffix:
## test_list RIGHTANGLERIGHTANGLEEQUALS value
## LR(1) items:
small_statement -> test_list RIGHTANGLERIGHTANGLEEQUALS value . [ SEMICOLON NEWLINE ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production small_statement -> test_list RIGHTANGLERIGHTANGLEEQUALS value

State 309:
## Known stack suffix:
## test_list PLUSEQUALS
## LR(1) items:
small_statement -> test_list PLUSEQUALS . value [ SEMICOLON NEWLINE ]
## Transitions:
-- On YIELD shift to state 1
-- On TRUE shift to state 4
-- On TILDE shift to state 5
-- On STRING shift to state 6
-- On PLUS shift to state 12
-- On NOT shift to state 17
-- On MINUS shift to state 14
-- On LEFTPARENS shift to state 15
-- On LEFTCURLY shift to state 18
-- On LEFTBRACKET shift to state 20
-- On LAMBDA shift to state 21
-- On INTEGER shift to state 22
-- On IDENTIFIER shift to state 23
-- On FORMAT shift to state 24
-- On FLOAT shift to state 26
-- On FALSE shift to state 27
-- On ELLIPSES shift to state 28
-- On COMPLEX shift to state 29
-- On BYTES shift to state 30
-- On AWAIT shift to state 32
-- On ASYNC shift to state 33
-- On ASTERIKS shift to state 34
-- On yield shift to state 302
-- On value shift to state 310
-- On test_list shift to state 304
-- On test shift to state 75
-- On set_or_dictionary shift to state 35
-- On separated_nonempty_list_indicator(COMMA,test) shift to state 80
-- On or_test shift to state 62
-- On not_test shift to state 49
-- On nonempty_list(BYTES) shift to state 36
-- On identifier shift to state 67
-- On expression shift to state 51
-- On comparison shift to state 70
-- On atom shift to state 71
-- On and_test shift to state 72
## Reductions:

State 310:
## Known stack suffix:
## test_list PLUSEQUALS value
## LR(1) items:
small_statement -> test_list PLUSEQUALS value . [ SEMICOLON NEWLINE ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production small_statement -> test_list PLUSEQUALS value

State 311:
## Known stack suffix:
## test_list PERCENTEQUALS
## LR(1) items:
small_statement -> test_list PERCENTEQUALS . value [ SEMICOLON NEWLINE ]
## Transitions:
-- On YIELD shift to state 1
-- On TRUE shift to state 4
-- On TILDE shift to state 5
-- On STRING shift to state 6
-- On PLUS shift to state 12
-- On NOT shift to state 17
-- On MINUS shift to state 14
-- On LEFTPARENS shift to state 15
-- On LEFTCURLY shift to state 18
-- On LEFTBRACKET shift to state 20
-- On LAMBDA shift to state 21
-- On INTEGER shift to state 22
-- On IDENTIFIER shift to state 23
-- On FORMAT shift to state 24
-- On FLOAT shift to state 26
-- On FALSE shift to state 27
-- On ELLIPSES shift to state 28
-- On COMPLEX shift to state 29
-- On BYTES shift to state 30
-- On AWAIT shift to state 32
-- On ASYNC shift to state 33
-- On ASTERIKS shift to state 34
-- On yield shift to state 302
-- On value shift to state 312
-- On test_list shift to state 304
-- On test shift to state 75
-- On set_or_dictionary shift to state 35
-- On separated_nonempty_list_indicator(COMMA,test) shift to state 80
-- On or_test shift to state 62
-- On not_test shift to state 49
-- On nonempty_list(BYTES) shift to state 36
-- On identifier shift to state 67
-- On expression shift to state 51
-- On comparison shift to state 70
-- On atom shift to state 71
-- On and_test shift to state 72
## Reductions:

State 312:
## Known stack suffix:
## test_list PERCENTEQUALS value
## LR(1) items:
small_statement -> test_list PERCENTEQUALS value . [ SEMICOLON NEWLINE ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production small_statement -> test_list PERCENTEQUALS value

State 313:
## Known stack suffix:
## test_list MINUSEQUALS
## LR(1) items:
small_statement -> test_list MINUSEQUALS . value [ SEMICOLON NEWLINE ]
## Transitions:
-- On YIELD shift to state 1
-- On TRUE shift to state 4
-- On TILDE shift to state 5
-- On STRING shift to state 6
-- On PLUS shift to state 12
-- On NOT shift to state 17
-- On MINUS shift to state 14
-- On LEFTPARENS shift to state 15
-- On LEFTCURLY shift to state 18
-- On LEFTBRACKET shift to state 20
-- On LAMBDA shift to state 21
-- On INTEGER shift to state 22
-- On IDENTIFIER shift to state 23
-- On FORMAT shift to state 24
-- On FLOAT shift to state 26
-- On FALSE shift to state 27
-- On ELLIPSES shift to state 28
-- On COMPLEX shift to state 29
-- On BYTES shift to state 30
-- On AWAIT shift to state 32
-- On ASYNC shift to state 33
-- On ASTERIKS shift to state 34
-- On yield shift to state 302
-- On value shift to state 314
-- On test_list shift to state 304
-- On test shift to state 75
-- On set_or_dictionary shift to state 35
-- On separated_nonempty_list_indicator(COMMA,test) shift to state 80
-- On or_test shift to state 62
-- On not_test shift to state 49
-- On nonempty_list(BYTES) shift to state 36
-- On identifier shift to state 67
-- On expression shift to state 51
-- On comparison shift to state 70
-- On atom shift to state 71
-- On and_test shift to state 72
## Reductions:

State 314:
## Known stack suffix:
## test_list MINUSEQUALS value
## LR(1) items:
small_statement -> test_list MINUSEQUALS value . [ SEMICOLON NEWLINE ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production small_statement -> test_list MINUSEQUALS value

State 315:
## Known stack suffix:
## test_list LEFTANGLELEFTANGLEEQUALS
## LR(1) items:
small_statement -> test_list LEFTANGLELEFTANGLEEQUALS . value [ SEMICOLON NEWLINE ]
## Transitions:
-- On YIELD shift to state 1
-- On TRUE shift to state 4
-- On TILDE shift to state 5
-- On STRING shift to state 6
-- On PLUS shift to state 12
-- On NOT shift to state 17
-- On MINUS shift to state 14
-- On LEFTPARENS shift to state 15
-- On LEFTCURLY shift to state 18
-- On LEFTBRACKET shift to state 20
-- On LAMBDA shift to state 21
-- On INTEGER shift to state 22
-- On IDENTIFIER shift to state 23
-- On FORMAT shift to state 24
-- On FLOAT shift to state 26
-- On FALSE shift to state 27
-- On ELLIPSES shift to state 28
-- On COMPLEX shift to state 29
-- On BYTES shift to state 30
-- On AWAIT shift to state 32
-- On ASYNC shift to state 33
-- On ASTERIKS shift to state 34
-- On yield shift to state 302
-- On value shift to state 316
-- On test_list shift to state 304
-- On test shift to state 75
-- On set_or_dictionary shift to state 35
-- On separated_nonempty_list_indicator(COMMA,test) shift to state 80
-- On or_test shift to state 62
-- On not_test shift to state 49
-- On nonempty_list(BYTES) shift to state 36
-- On identifier shift to state 67
-- On expression shift to state 51
-- On comparison shift to state 70
-- On atom shift to state 71
-- On and_test shift to state 72
## Reductions:

State 316:
## Known stack suffix:
## test_list LEFTANGLELEFTANGLEEQUALS value
## LR(1) items:
small_statement -> test_list LEFTANGLELEFTANGLEEQUALS value . [ SEMICOLON NEWLINE ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production small_statement -> test_list LEFTANGLELEFTANGLEEQUALS value

State 317:
## Known stack suffix:
## test_list HATEQUALS
## LR(1) items:
small_statement -> test_list HATEQUALS . value [ SEMICOLON NEWLINE ]
## Transitions:
-- On YIELD shift to state 1
-- On TRUE shift to state 4
-- On TILDE shift to state 5
-- On STRING shift to state 6
-- On PLUS shift to state 12
-- On NOT shift to state 17
-- On MINUS shift to state 14
-- On LEFTPARENS shift to state 15
-- On LEFTCURLY shift to state 18
-- On LEFTBRACKET shift to state 20
-- On LAMBDA shift to state 21
-- On INTEGER shift to state 22
-- On IDENTIFIER shift to state 23
-- On FORMAT shift to state 24
-- On FLOAT shift to state 26
-- On FALSE shift to state 27
-- On ELLIPSES shift to state 28
-- On COMPLEX shift to state 29
-- On BYTES shift to state 30
-- On AWAIT shift to state 32
-- On ASYNC shift to state 33
-- On ASTERIKS shift to state 34
-- On yield shift to state 302
-- On value shift to state 318
-- On test_list shift to state 304
-- On test shift to state 75
-- On set_or_dictionary shift to state 35
-- On separated_nonempty_list_indicator(COMMA,test) shift to state 80
-- On or_test shift to state 62
-- On not_test shift to state 49
-- On nonempty_list(BYTES) shift to state 36
-- On identifier shift to state 67
-- On expression shift to state 51
-- On comparison shift to state 70
-- On atom shift to state 71
-- On and_test shift to state 72
## Reductions:

State 318:
## Known stack suffix:
## test_list HATEQUALS value
## LR(1) items:
small_statement -> test_list HATEQUALS value . [ SEMICOLON NEWLINE ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production small_statement -> test_list HATEQUALS value

State 319:
## Known stack suffix:
## test_list EQUALS
## LR(1) items:
targets -> test_list EQUALS . [ YIELD TRUE TILDE STRING PLUS NOT MINUS LEFTPARENS LEFTCURLY LEFTBRACKET LAMBDA INTEGER IDENTIFIER FORMAT FLOAT FALSE ELLIPSES COMPLEX BYTES AWAIT ASYNC ASTERIKS ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production targets -> test_list EQUALS

State 320:
## Known stack suffix:
## test_list COLON
## LR(1) items:
small_statement -> test_list COLON . expression [ SEMICOLON NEWLINE ]
small_statement -> test_list COLON . expression EQUALS test_list [ SEMICOLON NEWLINE ]
small_statement -> test_list COLON . expression EQUALS ELLIPSES [ SEMICOLON NEWLINE ]
## Transitions:
-- On TRUE shift to state 4
-- On TILDE shift to state 5
-- On STRING shift to state 6
-- On PLUS shift to state 12
-- On NOT shift to state 13
-- On MINUS shift to state 14
-- On LEFTPARENS shift to state 15
-- On LEFTCURLY shift to state 18
-- On LEFTBRACKET shift to state 20
-- On INTEGER shift to state 22
-- On IDENTIFIER shift to state 23
-- On FORMAT shift to state 24
-- On FLOAT shift to state 26
-- On FALSE shift to state 27
-- On ELLIPSES shift to state 28
-- On COMPLEX shift to state 29
-- On BYTES shift to state 30
-- On AWAIT shift to state 32
-- On ASYNC shift to state 33
-- On ASTERIKS shift to state 34
-- On set_or_dictionary shift to state 35
-- On nonempty_list(BYTES) shift to state 36
-- On identifier shift to state 37
-- On expression shift to state 321
-- On atom shift to state 71
## Reductions:

State 321:
## Known stack suffix:
## test_list COLON expression
## LR(1) items:
atom -> expression . PLUS expression [ SLASH SEMICOLON RIGHTANGLERIGHTANGLE PLUS PERCENT NEWLINE MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLE HAT EQUALS DOT BAR AT ASTERIKS AMPERSAND ]
atom -> expression . AT expression [ SLASH SEMICOLON RIGHTANGLERIGHTANGLE PLUS PERCENT NEWLINE MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLE HAT EQUALS DOT BAR AT ASTERIKS AMPERSAND ]
atom -> expression . AMPERSAND expression [ SLASH SEMICOLON RIGHTANGLERIGHTANGLE PLUS PERCENT NEWLINE MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLE HAT EQUALS DOT BAR AT ASTERIKS AMPERSAND ]
atom -> expression . BAR expression [ SLASH SEMICOLON RIGHTANGLERIGHTANGLE PLUS PERCENT NEWLINE MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLE HAT EQUALS DOT BAR AT ASTERIKS AMPERSAND ]
atom -> expression . HAT expression [ SLASH SEMICOLON RIGHTANGLERIGHTANGLE PLUS PERCENT NEWLINE MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLE HAT EQUALS DOT BAR AT ASTERIKS AMPERSAND ]
atom -> expression . SLASH SLASH expression [ SLASH SEMICOLON RIGHTANGLERIGHTANGLE PLUS PERCENT NEWLINE MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLE HAT EQUALS DOT BAR AT ASTERIKS AMPERSAND ]
atom -> expression . SLASH expression [ SLASH SEMICOLON RIGHTANGLERIGHTANGLE PLUS PERCENT NEWLINE MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLE HAT EQUALS DOT BAR AT ASTERIKS AMPERSAND ]
atom -> expression . LEFTANGLELEFTANGLE expression [ SLASH SEMICOLON RIGHTANGLERIGHTANGLE PLUS PERCENT NEWLINE MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLE HAT EQUALS DOT BAR AT ASTERIKS AMPERSAND ]
atom -> expression . PERCENT expression [ SLASH SEMICOLON RIGHTANGLERIGHTANGLE PLUS PERCENT NEWLINE MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLE HAT EQUALS DOT BAR AT ASTERIKS AMPERSAND ]
atom -> expression . ASTERIKS ASTERIKS expression [ SLASH SEMICOLON RIGHTANGLERIGHTANGLE PLUS PERCENT NEWLINE MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLE HAT EQUALS DOT BAR AT ASTERIKS AMPERSAND ]
atom -> expression . ASTERIKS expression [ SLASH SEMICOLON RIGHTANGLERIGHTANGLE PLUS PERCENT NEWLINE MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLE HAT EQUALS DOT BAR AT ASTERIKS AMPERSAND ]
atom -> expression . RIGHTANGLERIGHTANGLE expression [ SLASH SEMICOLON RIGHTANGLERIGHTANGLE PLUS PERCENT NEWLINE MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLE HAT EQUALS DOT BAR AT ASTERIKS AMPERSAND ]
atom -> expression . MINUS expression [ SLASH SEMICOLON RIGHTANGLERIGHTANGLE PLUS PERCENT NEWLINE MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLE HAT EQUALS DOT BAR AT ASTERIKS AMPERSAND ]
atom -> expression . LEFTPARENS arguments RIGHTPARENS [ SLASH SEMICOLON RIGHTANGLERIGHTANGLE PLUS PERCENT NEWLINE MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLE HAT EQUALS DOT BAR AT ASTERIKS AMPERSAND ]
expression -> expression . DOT identifier [ SLASH SEMICOLON RIGHTANGLERIGHTANGLE PLUS PERCENT NEWLINE MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLE HAT EQUALS DOT BAR AT ASTERIKS AMPERSAND ]
expression -> expression . LEFTBRACKET parser_generator_separated_nonempty_list(COMMA,subscript_key) RIGHTBRACKET [ SLASH SEMICOLON RIGHTANGLERIGHTANGLE PLUS PERCENT NEWLINE MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLE HAT EQUALS DOT BAR AT ASTERIKS AMPERSAND ]
small_statement -> test_list COLON expression . [ SEMICOLON NEWLINE ]
small_statement -> test_list COLON expression . EQUALS test_list [ SEMICOLON NEWLINE ]
small_statement -> test_list COLON expression . EQUALS ELLIPSES [ SEMICOLON NEWLINE ]
## Transitions:
-- On SLASH shift to state 52
-- On RIGHTANGLERIGHTANGLE shift to state 95
-- On PLUS shift to state 97
-- On PERCENT shift to state 99
-- On MINUS shift to state 104
-- On LEFTPARENS shift to state 39
-- On LEFTBRACKET shift to state 55
-- On LEFTANGLELEFTANGLE shift to state 106
-- On HAT shift to state 108
-- On EQUALS shift to state 322
-- On DOT shift to state 90
-- On BAR shift to state 112
-- On AT shift to state 92
-- On ASTERIKS shift to state 101
-- On AMPERSAND shift to state 110
## Reductions:
-- On SEMICOLON NEWLINE
--   reduce production small_statement -> test_list COLON expression

State 322:
## Known stack suffix:
## test_list COLON expression EQUALS
## LR(1) items:
small_statement -> test_list COLON expression EQUALS . test_list [ SEMICOLON NEWLINE ]
small_statement -> test_list COLON expression EQUALS . ELLIPSES [ SEMICOLON NEWLINE ]
## Transitions:
-- On TRUE shift to state 4
-- On TILDE shift to state 5
-- On STRING shift to state 6
-- On PLUS shift to state 12
-- On NOT shift to state 17
-- On MINUS shift to state 14
-- On LEFTPARENS shift to state 15
-- On LEFTCURLY shift to state 18
-- On LEFTBRACKET shift to state 20
-- On LAMBDA shift to state 21
-- On INTEGER shift to state 22
-- On IDENTIFIER shift to state 23
-- On FORMAT shift to state 24
-- On FLOAT shift to state 26
-- On FALSE shift to state 27
-- On ELLIPSES shift to state 323
-- On COMPLEX shift to state 29
-- On BYTES shift to state 30
-- On AWAIT shift to state 32
-- On ASYNC shift to state 33
-- On ASTERIKS shift to state 34
-- On test_list shift to state 324
-- On test shift to state 75
-- On set_or_dictionary shift to state 35
-- On separated_nonempty_list_indicator(COMMA,test) shift to state 80
-- On or_test shift to state 62
-- On not_test shift to state 49
-- On nonempty_list(BYTES) shift to state 36
-- On identifier shift to state 67
-- On expression shift to state 51
-- On comparison shift to state 70
-- On atom shift to state 71
-- On and_test shift to state 72
## Reductions:

State 323:
## Known stack suffix:
## test_list COLON expression EQUALS ELLIPSES
## LR(1) items:
atom -> ELLIPSES . [ SLASH SEMICOLON RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUS PERCENT OR NOT NEWLINE MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HAT EXCLAMATIONMARK DOUBLEEQUALS DOT COMMA BAR AT ASTERIKS AND AMPERSAND ]
small_statement -> test_list COLON expression EQUALS ELLIPSES . [ SEMICOLON NEWLINE ]
## Transitions:
## Reductions:
-- On SLASH RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUS PERCENT OR NOT MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HAT EXCLAMATIONMARK DOUBLEEQUALS DOT COMMA BAR AT ASTERIKS AND AMPERSAND
--   reduce production atom -> ELLIPSES
-- On SEMICOLON NEWLINE
--   reduce production small_statement -> test_list COLON expression EQUALS ELLIPSES

State 324:
## Known stack suffix:
## test_list COLON expression EQUALS test_list
## LR(1) items:
small_statement -> test_list COLON expression EQUALS test_list . [ SEMICOLON NEWLINE ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production small_statement -> test_list COLON expression EQUALS test_list

State 325:
## Known stack suffix:
## test_list BAREQUALS
## LR(1) items:
small_statement -> test_list BAREQUALS . value [ SEMICOLON NEWLINE ]
## Transitions:
-- On YIELD shift to state 1
-- On TRUE shift to state 4
-- On TILDE shift to state 5
-- On STRING shift to state 6
-- On PLUS shift to state 12
-- On NOT shift to state 17
-- On MINUS shift to state 14
-- On LEFTPARENS shift to state 15
-- On LEFTCURLY shift to state 18
-- On LEFTBRACKET shift to state 20
-- On LAMBDA shift to state 21
-- On INTEGER shift to state 22
-- On IDENTIFIER shift to state 23
-- On FORMAT shift to state 24
-- On FLOAT shift to state 26
-- On FALSE shift to state 27
-- On ELLIPSES shift to state 28
-- On COMPLEX shift to state 29
-- On BYTES shift to state 30
-- On AWAIT shift to state 32
-- On ASYNC shift to state 33
-- On ASTERIKS shift to state 34
-- On yield shift to state 302
-- On value shift to state 326
-- On test_list shift to state 304
-- On test shift to state 75
-- On set_or_dictionary shift to state 35
-- On separated_nonempty_list_indicator(COMMA,test) shift to state 80
-- On or_test shift to state 62
-- On not_test shift to state 49
-- On nonempty_list(BYTES) shift to state 36
-- On identifier shift to state 67
-- On expression shift to state 51
-- On comparison shift to state 70
-- On atom shift to state 71
-- On and_test shift to state 72
## Reductions:

State 326:
## Known stack suffix:
## test_list BAREQUALS value
## LR(1) items:
small_statement -> test_list BAREQUALS value . [ SEMICOLON NEWLINE ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production small_statement -> test_list BAREQUALS value

State 327:
## Known stack suffix:
## test_list ATEQUALS
## LR(1) items:
small_statement -> test_list ATEQUALS . value [ SEMICOLON NEWLINE ]
## Transitions:
-- On YIELD shift to state 1
-- On TRUE shift to state 4
-- On TILDE shift to state 5
-- On STRING shift to state 6
-- On PLUS shift to state 12
-- On NOT shift to state 17
-- On MINUS shift to state 14
-- On LEFTPARENS shift to state 15
-- On LEFTCURLY shift to state 18
-- On LEFTBRACKET shift to state 20
-- On LAMBDA shift to state 21
-- On INTEGER shift to state 22
-- On IDENTIFIER shift to state 23
-- On FORMAT shift to state 24
-- On FLOAT shift to state 26
-- On FALSE shift to state 27
-- On ELLIPSES shift to state 28
-- On COMPLEX shift to state 29
-- On BYTES shift to state 30
-- On AWAIT shift to state 32
-- On ASYNC shift to state 33
-- On ASTERIKS shift to state 34
-- On yield shift to state 302
-- On value shift to state 328
-- On test_list shift to state 304
-- On test shift to state 75
-- On set_or_dictionary shift to state 35
-- On separated_nonempty_list_indicator(COMMA,test) shift to state 80
-- On or_test shift to state 62
-- On not_test shift to state 49
-- On nonempty_list(BYTES) shift to state 36
-- On identifier shift to state 67
-- On expression shift to state 51
-- On comparison shift to state 70
-- On atom shift to state 71
-- On and_test shift to state 72
## Reductions:

State 328:
## Known stack suffix:
## test_list ATEQUALS value
## LR(1) items:
small_statement -> test_list ATEQUALS value . [ SEMICOLON NEWLINE ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production small_statement -> test_list ATEQUALS value

State 329:
## Known stack suffix:
## test_list ASTERIKSEQUALS
## LR(1) items:
small_statement -> test_list ASTERIKSEQUALS . value [ SEMICOLON NEWLINE ]
## Transitions:
-- On YIELD shift to state 1
-- On TRUE shift to state 4
-- On TILDE shift to state 5
-- On STRING shift to state 6
-- On PLUS shift to state 12
-- On NOT shift to state 17
-- On MINUS shift to state 14
-- On LEFTPARENS shift to state 15
-- On LEFTCURLY shift to state 18
-- On LEFTBRACKET shift to state 20
-- On LAMBDA shift to state 21
-- On INTEGER shift to state 22
-- On IDENTIFIER shift to state 23
-- On FORMAT shift to state 24
-- On FLOAT shift to state 26
-- On FALSE shift to state 27
-- On ELLIPSES shift to state 28
-- On COMPLEX shift to state 29
-- On BYTES shift to state 30
-- On AWAIT shift to state 32
-- On ASYNC shift to state 33
-- On ASTERIKS shift to state 34
-- On yield shift to state 302
-- On value shift to state 330
-- On test_list shift to state 304
-- On test shift to state 75
-- On set_or_dictionary shift to state 35
-- On separated_nonempty_list_indicator(COMMA,test) shift to state 80
-- On or_test shift to state 62
-- On not_test shift to state 49
-- On nonempty_list(BYTES) shift to state 36
-- On identifier shift to state 67
-- On expression shift to state 51
-- On comparison shift to state 70
-- On atom shift to state 71
-- On and_test shift to state 72
## Reductions:

State 330:
## Known stack suffix:
## test_list ASTERIKSEQUALS value
## LR(1) items:
small_statement -> test_list ASTERIKSEQUALS value . [ SEMICOLON NEWLINE ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production small_statement -> test_list ASTERIKSEQUALS value

State 331:
## Known stack suffix:
## test_list ASTERIKSASTERIKSEQUALS
## LR(1) items:
small_statement -> test_list ASTERIKSASTERIKSEQUALS . value [ SEMICOLON NEWLINE ]
## Transitions:
-- On YIELD shift to state 1
-- On TRUE shift to state 4
-- On TILDE shift to state 5
-- On STRING shift to state 6
-- On PLUS shift to state 12
-- On NOT shift to state 17
-- On MINUS shift to state 14
-- On LEFTPARENS shift to state 15
-- On LEFTCURLY shift to state 18
-- On LEFTBRACKET shift to state 20
-- On LAMBDA shift to state 21
-- On INTEGER shift to state 22
-- On IDENTIFIER shift to state 23
-- On FORMAT shift to state 24
-- On FLOAT shift to state 26
-- On FALSE shift to state 27
-- On ELLIPSES shift to state 28
-- On COMPLEX shift to state 29
-- On BYTES shift to state 30
-- On AWAIT shift to state 32
-- On ASYNC shift to state 33
-- On ASTERIKS shift to state 34
-- On yield shift to state 302
-- On value shift to state 332
-- On test_list shift to state 304
-- On test shift to state 75
-- On set_or_dictionary shift to state 35
-- On separated_nonempty_list_indicator(COMMA,test) shift to state 80
-- On or_test shift to state 62
-- On not_test shift to state 49
-- On nonempty_list(BYTES) shift to state 36
-- On identifier shift to state 67
-- On expression shift to state 51
-- On comparison shift to state 70
-- On atom shift to state 71
-- On and_test shift to state 72
## Reductions:

State 332:
## Known stack suffix:
## test_list ASTERIKSASTERIKSEQUALS value
## LR(1) items:
small_statement -> test_list ASTERIKSASTERIKSEQUALS value . [ SEMICOLON NEWLINE ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production small_statement -> test_list ASTERIKSASTERIKSEQUALS value

State 333:
## Known stack suffix:
## test_list ANNOTATION_COMMENT
## LR(1) items:
small_statement -> test_list ANNOTATION_COMMENT . [ SEMICOLON NEWLINE ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production small_statement -> test_list ANNOTATION_COMMENT

State 334:
## Known stack suffix:
## test_list AMPERSANDEQUALS
## LR(1) items:
small_statement -> test_list AMPERSANDEQUALS . value [ SEMICOLON NEWLINE ]
## Transitions:
-- On YIELD shift to state 1
-- On TRUE shift to state 4
-- On TILDE shift to state 5
-- On STRING shift to state 6
-- On PLUS shift to state 12
-- On NOT shift to state 17
-- On MINUS shift to state 14
-- On LEFTPARENS shift to state 15
-- On LEFTCURLY shift to state 18
-- On LEFTBRACKET shift to state 20
-- On LAMBDA shift to state 21
-- On INTEGER shift to state 22
-- On IDENTIFIER shift to state 23
-- On FORMAT shift to state 24
-- On FLOAT shift to state 26
-- On FALSE shift to state 27
-- On ELLIPSES shift to state 28
-- On COMPLEX shift to state 29
-- On BYTES shift to state 30
-- On AWAIT shift to state 32
-- On ASYNC shift to state 33
-- On ASTERIKS shift to state 34
-- On yield shift to state 302
-- On value shift to state 335
-- On test_list shift to state 304
-- On test shift to state 75
-- On set_or_dictionary shift to state 35
-- On separated_nonempty_list_indicator(COMMA,test) shift to state 80
-- On or_test shift to state 62
-- On not_test shift to state 49
-- On nonempty_list(BYTES) shift to state 36
-- On identifier shift to state 67
-- On expression shift to state 51
-- On comparison shift to state 70
-- On atom shift to state 71
-- On and_test shift to state 72
## Reductions:

State 335:
## Known stack suffix:
## test_list AMPERSANDEQUALS value
## LR(1) items:
small_statement -> test_list AMPERSANDEQUALS value . [ SEMICOLON NEWLINE ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production small_statement -> test_list AMPERSANDEQUALS value

State 336:
## Known stack suffix:
## targets
## LR(1) items:
small_statement -> targets . value option(comment_annotation) [ SEMICOLON NEWLINE ]
small_statement -> targets . ELLIPSES [ SEMICOLON NEWLINE ]
targets -> targets . test_list EQUALS [ YIELD TRUE TILDE STRING PLUS NOT MINUS LEFTPARENS LEFTCURLY LEFTBRACKET LAMBDA INTEGER IDENTIFIER FORMAT FLOAT FALSE ELLIPSES COMPLEX BYTES AWAIT ASYNC ASTERIKS ]
targets -> targets . expression LEFTBRACKET parser_generator_separated_nonempty_list(COMMA,subscript_key) RIGHTBRACKET EQUALS [ YIELD TRUE TILDE STRING PLUS NOT MINUS LEFTPARENS LEFTCURLY LEFTBRACKET LAMBDA INTEGER IDENTIFIER FORMAT FLOAT FALSE ELLIPSES COMPLEX BYTES AWAIT ASYNC ASTERIKS ]
## Transitions:
-- On YIELD shift to state 1
-- On TRUE shift to state 4
-- On TILDE shift to state 5
-- On STRING shift to state 6
-- On PLUS shift to state 12
-- On NOT shift to state 17
-- On MINUS shift to state 14
-- On LEFTPARENS shift to state 15
-- On LEFTCURLY shift to state 18
-- On LEFTBRACKET shift to state 20
-- On LAMBDA shift to state 21
-- On INTEGER shift to state 22
-- On IDENTIFIER shift to state 23
-- On FORMAT shift to state 24
-- On FLOAT shift to state 26
-- On FALSE shift to state 27
-- On ELLIPSES shift to state 337
-- On COMPLEX shift to state 29
-- On BYTES shift to state 30
-- On AWAIT shift to state 32
-- On ASYNC shift to state 33
-- On ASTERIKS shift to state 34
-- On yield shift to state 302
-- On value shift to state 338
-- On test_list shift to state 341
-- On test shift to state 75
-- On set_or_dictionary shift to state 35
-- On separated_nonempty_list_indicator(COMMA,test) shift to state 80
-- On or_test shift to state 62
-- On not_test shift to state 49
-- On nonempty_list(BYTES) shift to state 36
-- On identifier shift to state 67
-- On expression shift to state 343
-- On comparison shift to state 70
-- On atom shift to state 71
-- On and_test shift to state 72
## Reductions:

State 337:
## Known stack suffix:
## targets ELLIPSES
## LR(1) items:
atom -> ELLIPSES . [ SLASH SEMICOLON RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUS PERCENT OR NOT NEWLINE MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HAT EXCLAMATIONMARK EQUALS DOUBLEEQUALS DOT COMMA BAR AT ASTERIKS ANNOTATION_COMMENT AND AMPERSAND ]
small_statement -> targets ELLIPSES . [ SEMICOLON NEWLINE ]
## Transitions:
## Reductions:
-- On SLASH RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUS PERCENT OR NOT MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HAT EXCLAMATIONMARK EQUALS DOUBLEEQUALS DOT COMMA BAR AT ASTERIKS ANNOTATION_COMMENT AND AMPERSAND
--   reduce production atom -> ELLIPSES
-- On SEMICOLON NEWLINE
--   reduce production small_statement -> targets ELLIPSES

State 338:
## Known stack suffix:
## targets value
## LR(1) items:
small_statement -> targets value . option(comment_annotation) [ SEMICOLON NEWLINE ]
## Transitions:
-- On ANNOTATION_COMMENT shift to state 339
-- On option(comment_annotation) shift to state 340
## Reductions:
-- On SEMICOLON NEWLINE
--   reduce production option(comment_annotation) ->

State 339:
## Known stack suffix:
## ANNOTATION_COMMENT
## LR(1) items:
option(comment_annotation) -> ANNOTATION_COMMENT . [ TRUE TILDE STRING SLASH SEMICOLON RIGHTPARENS PLUS NOT NEWLINE MINUS LEFTPARENS LEFTCURLY LEFTBRACKET INTEGER IDENTIFIER FORMAT FLOAT FALSE ELLIPSES COMPLEX BYTES AWAIT ASYNC ASTERIKS ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production option(comment_annotation) -> ANNOTATION_COMMENT

State 340:
## Known stack suffix:
## targets value option(comment_annotation)
## LR(1) items:
small_statement -> targets value option(comment_annotation) . [ SEMICOLON NEWLINE ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production small_statement -> targets value option(comment_annotation)

State 341:
## Known stack suffix:
## targets test_list
## LR(1) items:
targets -> targets test_list . EQUALS [ YIELD TRUE TILDE STRING PLUS NOT MINUS LEFTPARENS LEFTCURLY LEFTBRACKET LAMBDA INTEGER IDENTIFIER FORMAT FLOAT FALSE ELLIPSES COMPLEX BYTES AWAIT ASYNC ASTERIKS ]
value -> test_list . [ SEMICOLON NEWLINE ANNOTATION_COMMENT ]
## Transitions:
-- On EQUALS shift to state 342
## Reductions:
-- On SEMICOLON NEWLINE ANNOTATION_COMMENT
--   reduce production value -> test_list

State 342:
## Known stack suffix:
## targets test_list EQUALS
## LR(1) items:
targets -> targets test_list EQUALS . [ YIELD TRUE TILDE STRING PLUS NOT MINUS LEFTPARENS LEFTCURLY LEFTBRACKET LAMBDA INTEGER IDENTIFIER FORMAT FLOAT FALSE ELLIPSES COMPLEX BYTES AWAIT ASYNC ASTERIKS ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production targets -> targets test_list EQUALS

State 343:
## Known stack suffix:
## targets expression
## LR(1) items:
atom -> expression . PLUS expression [ SLASH SEMICOLON RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUS PERCENT OR NOT NEWLINE MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HAT EXCLAMATIONMARK EQUALS DOUBLEEQUALS DOT COMMA BAR AT ASTERIKS ANNOTATION_COMMENT AND AMPERSAND ]
atom -> expression . AT expression [ SLASH SEMICOLON RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUS PERCENT OR NOT NEWLINE MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HAT EXCLAMATIONMARK EQUALS DOUBLEEQUALS DOT COMMA BAR AT ASTERIKS ANNOTATION_COMMENT AND AMPERSAND ]
atom -> expression . AMPERSAND expression [ SLASH SEMICOLON RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUS PERCENT OR NOT NEWLINE MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HAT EXCLAMATIONMARK EQUALS DOUBLEEQUALS DOT COMMA BAR AT ASTERIKS ANNOTATION_COMMENT AND AMPERSAND ]
atom -> expression . BAR expression [ SLASH SEMICOLON RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUS PERCENT OR NOT NEWLINE MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HAT EXCLAMATIONMARK EQUALS DOUBLEEQUALS DOT COMMA BAR AT ASTERIKS ANNOTATION_COMMENT AND AMPERSAND ]
atom -> expression . HAT expression [ SLASH SEMICOLON RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUS PERCENT OR NOT NEWLINE MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HAT EXCLAMATIONMARK EQUALS DOUBLEEQUALS DOT COMMA BAR AT ASTERIKS ANNOTATION_COMMENT AND AMPERSAND ]
atom -> expression . SLASH SLASH expression [ SLASH SEMICOLON RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUS PERCENT OR NOT NEWLINE MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HAT EXCLAMATIONMARK EQUALS DOUBLEEQUALS DOT COMMA BAR AT ASTERIKS ANNOTATION_COMMENT AND AMPERSAND ]
atom -> expression . SLASH expression [ SLASH SEMICOLON RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUS PERCENT OR NOT NEWLINE MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HAT EXCLAMATIONMARK EQUALS DOUBLEEQUALS DOT COMMA BAR AT ASTERIKS ANNOTATION_COMMENT AND AMPERSAND ]
atom -> expression . LEFTANGLELEFTANGLE expression [ SLASH SEMICOLON RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUS PERCENT OR NOT NEWLINE MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HAT EXCLAMATIONMARK EQUALS DOUBLEEQUALS DOT COMMA BAR AT ASTERIKS ANNOTATION_COMMENT AND AMPERSAND ]
atom -> expression . PERCENT expression [ SLASH SEMICOLON RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUS PERCENT OR NOT NEWLINE MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HAT EXCLAMATIONMARK EQUALS DOUBLEEQUALS DOT COMMA BAR AT ASTERIKS ANNOTATION_COMMENT AND AMPERSAND ]
atom -> expression . ASTERIKS ASTERIKS expression [ SLASH SEMICOLON RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUS PERCENT OR NOT NEWLINE MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HAT EXCLAMATIONMARK EQUALS DOUBLEEQUALS DOT COMMA BAR AT ASTERIKS ANNOTATION_COMMENT AND AMPERSAND ]
atom -> expression . ASTERIKS expression [ SLASH SEMICOLON RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUS PERCENT OR NOT NEWLINE MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HAT EXCLAMATIONMARK EQUALS DOUBLEEQUALS DOT COMMA BAR AT ASTERIKS ANNOTATION_COMMENT AND AMPERSAND ]
atom -> expression . RIGHTANGLERIGHTANGLE expression [ SLASH SEMICOLON RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUS PERCENT OR NOT NEWLINE MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HAT EXCLAMATIONMARK EQUALS DOUBLEEQUALS DOT COMMA BAR AT ASTERIKS ANNOTATION_COMMENT AND AMPERSAND ]
atom -> expression . MINUS expression [ SLASH SEMICOLON RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUS PERCENT OR NOT NEWLINE MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HAT EXCLAMATIONMARK EQUALS DOUBLEEQUALS DOT COMMA BAR AT ASTERIKS ANNOTATION_COMMENT AND AMPERSAND ]
atom -> expression . LEFTPARENS arguments RIGHTPARENS [ SLASH SEMICOLON RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUS PERCENT OR NOT NEWLINE MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HAT EXCLAMATIONMARK EQUALS DOUBLEEQUALS DOT COMMA BAR AT ASTERIKS ANNOTATION_COMMENT AND AMPERSAND ]
comparison -> expression . [ SEMICOLON OR NEWLINE IF EQUALS COMMA ANNOTATION_COMMENT AND ]
comparison -> expression . nonempty_list(comparison_operator) [ SEMICOLON OR NEWLINE IF EQUALS COMMA ANNOTATION_COMMENT AND ]
expression -> expression . DOT identifier [ SLASH SEMICOLON RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUS PERCENT OR NOT NEWLINE MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HAT EXCLAMATIONMARK EQUALS DOUBLEEQUALS DOT COMMA BAR AT ASTERIKS ANNOTATION_COMMENT AND AMPERSAND ]
expression -> expression . LEFTBRACKET parser_generator_separated_nonempty_list(COMMA,subscript_key) RIGHTBRACKET [ SLASH SEMICOLON RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUS PERCENT OR NOT NEWLINE MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HAT EXCLAMATIONMARK EQUALS DOUBLEEQUALS DOT COMMA BAR AT ASTERIKS ANNOTATION_COMMENT AND AMPERSAND ]
targets -> targets expression . LEFTBRACKET parser_generator_separated_nonempty_list(COMMA,subscript_key) RIGHTBRACKET EQUALS [ YIELD TRUE TILDE STRING PLUS NOT MINUS LEFTPARENS LEFTCURLY LEFTBRACKET LAMBDA INTEGER IDENTIFIER FORMAT FLOAT FALSE ELLIPSES COMPLEX BYTES AWAIT ASYNC ASTERIKS ]
## Transitions:
-- On SLASH shift to state 52
-- On RIGHTANGLERIGHTANGLE shift to state 95
-- On RIGHTANGLEEQUALS shift to state 115
-- On RIGHTANGLE shift to state 117
-- On PLUS shift to state 97
-- On PERCENT shift to state 99
-- On NOT shift to state 119
-- On MINUS shift to state 104
-- On LEFTPARENS shift to state 39
-- On LEFTBRACKET shift to state 344
-- On LEFTANGLELEFTANGLE shift to state 106
-- On LEFTANGLEEQUALS shift to state 122
-- On LEFTANGLE shift to state 124
-- On ISNOT shift to state 126
-- On IS shift to state 128
-- On IN shift to state 130
-- On HAT shift to state 108
-- On EXCLAMATIONMARK shift to state 132
-- On DOUBLEEQUALS shift to state 135
-- On DOT shift to state 90
-- On BAR shift to state 112
-- On AT shift to state 92
-- On ASTERIKS shift to state 101
-- On AMPERSAND shift to state 110
-- On nonempty_list(comparison_operator) shift to state 137
-- On comparison_operator shift to state 138
## Reductions:
-- On SEMICOLON OR NEWLINE IF EQUALS COMMA ANNOTATION_COMMENT AND
--   reduce production comparison -> expression

State 344:
## Known stack suffix:
## targets expression LEFTBRACKET
## LR(1) items:
expression -> expression LEFTBRACKET . parser_generator_separated_nonempty_list(COMMA,subscript_key) RIGHTBRACKET [ SLASH SEMICOLON RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUS PERCENT OR NOT NEWLINE MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HAT EXCLAMATIONMARK EQUALS DOUBLEEQUALS DOT COMMA BAR AT ASTERIKS ANNOTATION_COMMENT AND AMPERSAND ]
targets -> targets expression LEFTBRACKET . parser_generator_separated_nonempty_list(COMMA,subscript_key) RIGHTBRACKET EQUALS [ YIELD TRUE TILDE STRING PLUS NOT MINUS LEFTPARENS LEFTCURLY LEFTBRACKET LAMBDA INTEGER IDENTIFIER FORMAT FLOAT FALSE ELLIPSES COMPLEX BYTES AWAIT ASYNC ASTERIKS ]
## Transitions:
-- On TRUE shift to state 4
-- On TILDE shift to state 5
-- On STRING shift to state 6
-- On PLUS shift to state 12
-- On NOT shift to state 17
-- On MINUS shift to state 14
-- On LEFTPARENS shift to state 15
-- On LEFTCURLY shift to state 18
-- On LEFTBRACKET shift to state 20
-- On LAMBDA shift to state 21
-- On INTEGER shift to state 22
-- On IDENTIFIER shift to state 23
-- On FORMAT shift to state 24
-- On FLOAT shift to state 26
-- On FALSE shift to state 27
-- On ELLIPSES shift to state 28
-- On COMPLEX shift to state 29
-- On BYTES shift to state 30
-- On AWAIT shift to state 32
-- On ASYNC shift to state 33
-- On ASTERIKS shift to state 34
-- On test shift to state 56
-- On subscript_key shift to state 57
-- On set_or_dictionary shift to state 35
-- On parser_generator_separated_nonempty_list(COMMA,subscript_key) shift to state 345
-- On or_test shift to state 62
-- On option(test) shift to state 81
-- On not_test shift to state 49
-- On nonempty_list(BYTES) shift to state 36
-- On identifier shift to state 67
-- On expression shift to state 51
-- On comparison shift to state 70
-- On atom shift to state 71
-- On and_test shift to state 72
## Reductions:
-- On COLON
--   reduce production option(test) ->

State 345:
## Known stack suffix:
## targets expression LEFTBRACKET parser_generator_separated_nonempty_list(COMMA,subscript_key)
## LR(1) items:
expression -> expression LEFTBRACKET parser_generator_separated_nonempty_list(COMMA,subscript_key) . RIGHTBRACKET [ SLASH SEMICOLON RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUS PERCENT OR NOT NEWLINE MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HAT EXCLAMATIONMARK EQUALS DOUBLEEQUALS DOT COMMA BAR AT ASTERIKS ANNOTATION_COMMENT AND AMPERSAND ]
targets -> targets expression LEFTBRACKET parser_generator_separated_nonempty_list(COMMA,subscript_key) . RIGHTBRACKET EQUALS [ YIELD TRUE TILDE STRING PLUS NOT MINUS LEFTPARENS LEFTCURLY LEFTBRACKET LAMBDA INTEGER IDENTIFIER FORMAT FLOAT FALSE ELLIPSES COMPLEX BYTES AWAIT ASYNC ASTERIKS ]
## Transitions:
-- On RIGHTBRACKET shift to state 346
## Reductions:

State 346:
## Known stack suffix:
## targets expression LEFTBRACKET parser_generator_separated_nonempty_list(COMMA,subscript_key) RIGHTBRACKET
## LR(1) items:
expression -> expression LEFTBRACKET parser_generator_separated_nonempty_list(COMMA,subscript_key) RIGHTBRACKET . [ SLASH SEMICOLON RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUS PERCENT OR NOT NEWLINE MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HAT EXCLAMATIONMARK EQUALS DOUBLEEQUALS DOT COMMA BAR AT ASTERIKS ANNOTATION_COMMENT AND AMPERSAND ]
targets -> targets expression LEFTBRACKET parser_generator_separated_nonempty_list(COMMA,subscript_key) RIGHTBRACKET . EQUALS [ YIELD TRUE TILDE STRING PLUS NOT MINUS LEFTPARENS LEFTCURLY LEFTBRACKET LAMBDA INTEGER IDENTIFIER FORMAT FLOAT FALSE ELLIPSES COMPLEX BYTES AWAIT ASYNC ASTERIKS ]
## Transitions:
-- On EQUALS shift to state 347
## Reductions:
-- On SLASH SEMICOLON RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUS PERCENT OR NOT NEWLINE MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HAT EXCLAMATIONMARK DOUBLEEQUALS DOT COMMA BAR AT ASTERIKS ANNOTATION_COMMENT AND AMPERSAND
--   reduce production expression -> expression LEFTBRACKET parser_generator_separated_nonempty_list(COMMA,subscript_key) RIGHTBRACKET

State 347:
## Known stack suffix:
## targets expression LEFTBRACKET parser_generator_separated_nonempty_list(COMMA,subscript_key) RIGHTBRACKET EQUALS
## LR(1) items:
targets -> targets expression LEFTBRACKET parser_generator_separated_nonempty_list(COMMA,subscript_key) RIGHTBRACKET EQUALS . [ YIELD TRUE TILDE STRING PLUS NOT MINUS LEFTPARENS LEFTCURLY LEFTBRACKET LAMBDA INTEGER IDENTIFIER FORMAT FLOAT FALSE ELLIPSES COMPLEX BYTES AWAIT ASYNC ASTERIKS ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production targets -> targets expression LEFTBRACKET parser_generator_separated_nonempty_list(COMMA,subscript_key) RIGHTBRACKET EQUALS

State 348:
## Known stack suffix:
## small_statement
## LR(1) items:
parser_generator_separated_nonempty_list_of_lists(SEMICOLON,small_statement) -> small_statement . [ NEWLINE ]
parser_generator_separated_nonempty_list_of_lists(SEMICOLON,small_statement) -> small_statement . SEMICOLON parser_generator_separated_list_of_lists(SEMICOLON,small_statement) [ NEWLINE ]
## Transitions:
-- On SEMICOLON shift to state 349
## Reductions:
-- On NEWLINE
--   reduce production parser_generator_separated_nonempty_list_of_lists(SEMICOLON,small_statement) -> small_statement

State 349:
## Known stack suffix:
## small_statement SEMICOLON
## LR(1) items:
parser_generator_separated_nonempty_list_of_lists(SEMICOLON,small_statement) -> small_statement SEMICOLON . parser_generator_separated_list_of_lists(SEMICOLON,small_statement) [ NEWLINE ]
## Transitions:
-- On YIELD shift to state 1
-- On TRUE shift to state 4
-- On TILDE shift to state 5
-- On STRING shift to state 6
-- On RETURN shift to state 234
-- On RAISE shift to state 236
-- On PLUS shift to state 12
-- On PASS shift to state 242
-- On NOT shift to state 17
-- On NONLOCAL shift to state 243
-- On MINUS shift to state 14
-- On LEFTPARENS shift to state 15
-- On LEFTCURLY shift to state 18
-- On LEFTBRACKET shift to state 20
-- On LAMBDA shift to state 21
-- On INTEGER shift to state 22
-- On IMPORT shift to state 253
-- On IDENTIFIER shift to state 23
-- On GLOBAL shift to state 276
-- On FROM shift to state 278
-- On FORMAT shift to state 24
-- On FLOAT shift to state 26
-- On FALSE shift to state 27
-- On ELLIPSES shift to state 28
-- On DELETE shift to state 291
-- On CONTINUE shift to state 293
-- On COMPLEX shift to state 29
-- On BYTES shift to state 30
-- On BREAK shift to state 294
-- On AWAIT shift to state 32
-- On ASYNC shift to state 33
-- On ASTERIKS shift to state 34
-- On ASSERT shift to state 295
-- On yield shift to state 299
-- On test_list shift to state 300
-- On test shift to state 75
-- On targets shift to state 336
-- On small_statement shift to state 350
-- On set_or_dictionary shift to state 35
-- On separated_nonempty_list_indicator(COMMA,test) shift to state 80
-- On parser_generator_separated_list_of_lists(SEMICOLON,small_statement) shift to state 384
-- On or_test shift to state 62
-- On not_test shift to state 49
-- On nonempty_list(BYTES) shift to state 36
-- On identifier shift to state 67
-- On expression shift to state 353
-- On comparison shift to state 70
-- On atom shift to state 71
-- On and_test shift to state 72
## Reductions:
-- On NEWLINE
--   reduce production parser_generator_separated_list_of_lists(SEMICOLON,small_statement) ->

State 350:
## Known stack suffix:
## small_statement
## LR(1) items:
parser_generator_separated_list_of_lists(SEMICOLON,small_statement) -> small_statement . [ NEWLINE ]
parser_generator_separated_list_of_lists(SEMICOLON,small_statement) -> small_statement . SEMICOLON parser_generator_separated_list_of_lists(SEMICOLON,small_statement) [ NEWLINE ]
## Transitions:
-- On SEMICOLON shift to state 351
## Reductions:
-- On NEWLINE
--   reduce production parser_generator_separated_list_of_lists(SEMICOLON,small_statement) -> small_statement

State 351:
## Known stack suffix:
## small_statement SEMICOLON
## LR(1) items:
parser_generator_separated_list_of_lists(SEMICOLON,small_statement) -> small_statement SEMICOLON . parser_generator_separated_list_of_lists(SEMICOLON,small_statement) [ NEWLINE ]
## Transitions:
-- On YIELD shift to state 1
-- On TRUE shift to state 4
-- On TILDE shift to state 5
-- On STRING shift to state 6
-- On RETURN shift to state 234
-- On RAISE shift to state 236
-- On PLUS shift to state 12
-- On PASS shift to state 242
-- On NOT shift to state 17
-- On NONLOCAL shift to state 243
-- On MINUS shift to state 14
-- On LEFTPARENS shift to state 15
-- On LEFTCURLY shift to state 18
-- On LEFTBRACKET shift to state 20
-- On LAMBDA shift to state 21
-- On INTEGER shift to state 22
-- On IMPORT shift to state 253
-- On IDENTIFIER shift to state 23
-- On GLOBAL shift to state 276
-- On FROM shift to state 278
-- On FORMAT shift to state 24
-- On FLOAT shift to state 26
-- On FALSE shift to state 27
-- On ELLIPSES shift to state 28
-- On DELETE shift to state 291
-- On CONTINUE shift to state 293
-- On COMPLEX shift to state 29
-- On BYTES shift to state 30
-- On BREAK shift to state 294
-- On AWAIT shift to state 32
-- On ASYNC shift to state 33
-- On ASTERIKS shift to state 34
-- On ASSERT shift to state 295
-- On yield shift to state 299
-- On test_list shift to state 300
-- On test shift to state 75
-- On targets shift to state 336
-- On small_statement shift to state 350
-- On set_or_dictionary shift to state 35
-- On separated_nonempty_list_indicator(COMMA,test) shift to state 80
-- On parser_generator_separated_list_of_lists(SEMICOLON,small_statement) shift to state 352
-- On or_test shift to state 62
-- On not_test shift to state 49
-- On nonempty_list(BYTES) shift to state 36
-- On identifier shift to state 67
-- On expression shift to state 353
-- On comparison shift to state 70
-- On atom shift to state 71
-- On and_test shift to state 72
## Reductions:
-- On NEWLINE
--   reduce production parser_generator_separated_list_of_lists(SEMICOLON,small_statement) ->

State 352:
## Known stack suffix:
## small_statement SEMICOLON parser_generator_separated_list_of_lists(SEMICOLON,small_statement)
## LR(1) items:
parser_generator_separated_list_of_lists(SEMICOLON,small_statement) -> small_statement SEMICOLON parser_generator_separated_list_of_lists(SEMICOLON,small_statement) . [ NEWLINE ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production parser_generator_separated_list_of_lists(SEMICOLON,small_statement) -> small_statement SEMICOLON parser_generator_separated_list_of_lists(SEMICOLON,small_statement)

State 353:
## Known stack suffix:
## expression
## LR(1) items:
atom -> expression . PLUS expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT EXCLAMATIONMARK EQUALS DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . AT expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT EXCLAMATIONMARK EQUALS DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . AMPERSAND expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT EXCLAMATIONMARK EQUALS DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . BAR expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT EXCLAMATIONMARK EQUALS DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . HAT expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT EXCLAMATIONMARK EQUALS DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . SLASH SLASH expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT EXCLAMATIONMARK EQUALS DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . SLASH expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT EXCLAMATIONMARK EQUALS DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . LEFTANGLELEFTANGLE expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT EXCLAMATIONMARK EQUALS DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . PERCENT expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT EXCLAMATIONMARK EQUALS DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . ASTERIKS ASTERIKS expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT EXCLAMATIONMARK EQUALS DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . ASTERIKS expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT EXCLAMATIONMARK EQUALS DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . RIGHTANGLERIGHTANGLE expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT EXCLAMATIONMARK EQUALS DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . MINUS expression [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT EXCLAMATIONMARK EQUALS DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
atom -> expression . LEFTPARENS arguments RIGHTPARENS [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT EXCLAMATIONMARK EQUALS DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
comparison -> expression . [ SLASHSLASHEQUALS SLASHEQUALS SEMICOLON RIGHTANGLERIGHTANGLEEQUALS PLUSEQUALS PERCENTEQUALS OR NEWLINE MINUSEQUALS LEFTANGLELEFTANGLEEQUALS IF HATEQUALS EQUALS COMMA COLON BAREQUALS ATEQUALS ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ANNOTATION_COMMENT AND AMPERSANDEQUALS ]
comparison -> expression . nonempty_list(comparison_operator) [ SLASHSLASHEQUALS SLASHEQUALS SEMICOLON RIGHTANGLERIGHTANGLEEQUALS PLUSEQUALS PERCENTEQUALS OR NEWLINE MINUSEQUALS LEFTANGLELEFTANGLEEQUALS IF HATEQUALS EQUALS COMMA COLON BAREQUALS ATEQUALS ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ANNOTATION_COMMENT AND AMPERSANDEQUALS ]
expression -> expression . DOT identifier [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT EXCLAMATIONMARK EQUALS DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
expression -> expression . LEFTBRACKET parser_generator_separated_nonempty_list(COMMA,subscript_key) RIGHTBRACKET [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT EXCLAMATIONMARK EQUALS DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
small_statement -> expression . LEFTBRACKET parser_generator_separated_nonempty_list(COMMA,subscript_key) RIGHTBRACKET PLUSEQUALS value [ SEMICOLON NEWLINE ]
small_statement -> expression . LEFTBRACKET parser_generator_separated_nonempty_list(COMMA,subscript_key) RIGHTBRACKET ATEQUALS value [ SEMICOLON NEWLINE ]
small_statement -> expression . LEFTBRACKET parser_generator_separated_nonempty_list(COMMA,subscript_key) RIGHTBRACKET AMPERSANDEQUALS value [ SEMICOLON NEWLINE ]
small_statement -> expression . LEFTBRACKET parser_generator_separated_nonempty_list(COMMA,subscript_key) RIGHTBRACKET BAREQUALS value [ SEMICOLON NEWLINE ]
small_statement -> expression . LEFTBRACKET parser_generator_separated_nonempty_list(COMMA,subscript_key) RIGHTBRACKET HATEQUALS value [ SEMICOLON NEWLINE ]
small_statement -> expression . LEFTBRACKET parser_generator_separated_nonempty_list(COMMA,subscript_key) RIGHTBRACKET SLASHSLASHEQUALS value [ SEMICOLON NEWLINE ]
small_statement -> expression . LEFTBRACKET parser_generator_separated_nonempty_list(COMMA,subscript_key) RIGHTBRACKET SLASHEQUALS value [ SEMICOLON NEWLINE ]
small_statement -> expression . LEFTBRACKET parser_generator_separated_nonempty_list(COMMA,subscript_key) RIGHTBRACKET LEFTANGLELEFTANGLEEQUALS value [ SEMICOLON NEWLINE ]
small_statement -> expression . LEFTBRACKET parser_generator_separated_nonempty_list(COMMA,subscript_key) RIGHTBRACKET PERCENTEQUALS value [ SEMICOLON NEWLINE ]
small_statement -> expression . LEFTBRACKET parser_generator_separated_nonempty_list(COMMA,subscript_key) RIGHTBRACKET ASTERIKSASTERIKSEQUALS value [ SEMICOLON NEWLINE ]
small_statement -> expression . LEFTBRACKET parser_generator_separated_nonempty_list(COMMA,subscript_key) RIGHTBRACKET ASTERIKSEQUALS value [ SEMICOLON NEWLINE ]
small_statement -> expression . LEFTBRACKET parser_generator_separated_nonempty_list(COMMA,subscript_key) RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS value [ SEMICOLON NEWLINE ]
small_statement -> expression . LEFTBRACKET parser_generator_separated_nonempty_list(COMMA,subscript_key) RIGHTBRACKET MINUSEQUALS value [ SEMICOLON NEWLINE ]
targets -> expression . LEFTBRACKET parser_generator_separated_nonempty_list(COMMA,subscript_key) RIGHTBRACKET EQUALS [ YIELD TRUE TILDE STRING PLUS NOT MINUS LEFTPARENS LEFTCURLY LEFTBRACKET LAMBDA INTEGER IDENTIFIER FORMAT FLOAT FALSE ELLIPSES COMPLEX BYTES AWAIT ASYNC ASTERIKS ]
## Transitions:
-- On SLASH shift to state 52
-- On RIGHTANGLERIGHTANGLE shift to state 95
-- On RIGHTANGLEEQUALS shift to state 115
-- On RIGHTANGLE shift to state 117
-- On PLUS shift to state 97
-- On PERCENT shift to state 99
-- On NOT shift to state 119
-- On MINUS shift to state 104
-- On LEFTPARENS shift to state 39
-- On LEFTBRACKET shift to state 354
-- On LEFTANGLELEFTANGLE shift to state 106
-- On LEFTANGLEEQUALS shift to state 122
-- On LEFTANGLE shift to state 124
-- On ISNOT shift to state 126
-- On IS shift to state 128
-- On IN shift to state 130
-- On HAT shift to state 108
-- On EXCLAMATIONMARK shift to state 132
-- On DOUBLEEQUALS shift to state 135
-- On DOT shift to state 90
-- On BAR shift to state 112
-- On AT shift to state 92
-- On ASTERIKS shift to state 101
-- On AMPERSAND shift to state 110
-- On nonempty_list(comparison_operator) shift to state 137
-- On comparison_operator shift to state 138
## Reductions:
-- On SLASHSLASHEQUALS SLASHEQUALS SEMICOLON RIGHTANGLERIGHTANGLEEQUALS PLUSEQUALS PERCENTEQUALS OR NEWLINE MINUSEQUALS LEFTANGLELEFTANGLEEQUALS IF HATEQUALS EQUALS COMMA COLON BAREQUALS ATEQUALS ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ANNOTATION_COMMENT AND AMPERSANDEQUALS
--   reduce production comparison -> expression

State 354:
## Known stack suffix:
## expression LEFTBRACKET
## LR(1) items:
expression -> expression LEFTBRACKET . parser_generator_separated_nonempty_list(COMMA,subscript_key) RIGHTBRACKET [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT EXCLAMATIONMARK EQUALS DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
small_statement -> expression LEFTBRACKET . parser_generator_separated_nonempty_list(COMMA,subscript_key) RIGHTBRACKET PLUSEQUALS value [ SEMICOLON NEWLINE ]
small_statement -> expression LEFTBRACKET . parser_generator_separated_nonempty_list(COMMA,subscript_key) RIGHTBRACKET ATEQUALS value [ SEMICOLON NEWLINE ]
small_statement -> expression LEFTBRACKET . parser_generator_separated_nonempty_list(COMMA,subscript_key) RIGHTBRACKET AMPERSANDEQUALS value [ SEMICOLON NEWLINE ]
small_statement -> expression LEFTBRACKET . parser_generator_separated_nonempty_list(COMMA,subscript_key) RIGHTBRACKET BAREQUALS value [ SEMICOLON NEWLINE ]
small_statement -> expression LEFTBRACKET . parser_generator_separated_nonempty_list(COMMA,subscript_key) RIGHTBRACKET HATEQUALS value [ SEMICOLON NEWLINE ]
small_statement -> expression LEFTBRACKET . parser_generator_separated_nonempty_list(COMMA,subscript_key) RIGHTBRACKET SLASHSLASHEQUALS value [ SEMICOLON NEWLINE ]
small_statement -> expression LEFTBRACKET . parser_generator_separated_nonempty_list(COMMA,subscript_key) RIGHTBRACKET SLASHEQUALS value [ SEMICOLON NEWLINE ]
small_statement -> expression LEFTBRACKET . parser_generator_separated_nonempty_list(COMMA,subscript_key) RIGHTBRACKET LEFTANGLELEFTANGLEEQUALS value [ SEMICOLON NEWLINE ]
small_statement -> expression LEFTBRACKET . parser_generator_separated_nonempty_list(COMMA,subscript_key) RIGHTBRACKET PERCENTEQUALS value [ SEMICOLON NEWLINE ]
small_statement -> expression LEFTBRACKET . parser_generator_separated_nonempty_list(COMMA,subscript_key) RIGHTBRACKET ASTERIKSASTERIKSEQUALS value [ SEMICOLON NEWLINE ]
small_statement -> expression LEFTBRACKET . parser_generator_separated_nonempty_list(COMMA,subscript_key) RIGHTBRACKET ASTERIKSEQUALS value [ SEMICOLON NEWLINE ]
small_statement -> expression LEFTBRACKET . parser_generator_separated_nonempty_list(COMMA,subscript_key) RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS value [ SEMICOLON NEWLINE ]
small_statement -> expression LEFTBRACKET . parser_generator_separated_nonempty_list(COMMA,subscript_key) RIGHTBRACKET MINUSEQUALS value [ SEMICOLON NEWLINE ]
targets -> expression LEFTBRACKET . parser_generator_separated_nonempty_list(COMMA,subscript_key) RIGHTBRACKET EQUALS [ YIELD TRUE TILDE STRING PLUS NOT MINUS LEFTPARENS LEFTCURLY LEFTBRACKET LAMBDA INTEGER IDENTIFIER FORMAT FLOAT FALSE ELLIPSES COMPLEX BYTES AWAIT ASYNC ASTERIKS ]
## Transitions:
-- On TRUE shift to state 4
-- On TILDE shift to state 5
-- On STRING shift to state 6
-- On PLUS shift to state 12
-- On NOT shift to state 17
-- On MINUS shift to state 14
-- On LEFTPARENS shift to state 15
-- On LEFTCURLY shift to state 18
-- On LEFTBRACKET shift to state 20
-- On LAMBDA shift to state 21
-- On INTEGER shift to state 22
-- On IDENTIFIER shift to state 23
-- On FORMAT shift to state 24
-- On FLOAT shift to state 26
-- On FALSE shift to state 27
-- On ELLIPSES shift to state 28
-- On COMPLEX shift to state 29
-- On BYTES shift to state 30
-- On AWAIT shift to state 32
-- On ASYNC shift to state 33
-- On ASTERIKS shift to state 34
-- On test shift to state 56
-- On subscript_key shift to state 57
-- On set_or_dictionary shift to state 35
-- On parser_generator_separated_nonempty_list(COMMA,subscript_key) shift to state 355
-- On or_test shift to state 62
-- On option(test) shift to state 81
-- On not_test shift to state 49
-- On nonempty_list(BYTES) shift to state 36
-- On identifier shift to state 67
-- On expression shift to state 51
-- On comparison shift to state 70
-- On atom shift to state 71
-- On and_test shift to state 72
## Reductions:
-- On COLON
--   reduce production option(test) ->

State 355:
## Known stack suffix:
## expression LEFTBRACKET parser_generator_separated_nonempty_list(COMMA,subscript_key)
## LR(1) items:
expression -> expression LEFTBRACKET parser_generator_separated_nonempty_list(COMMA,subscript_key) . RIGHTBRACKET [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT EXCLAMATIONMARK EQUALS DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
small_statement -> expression LEFTBRACKET parser_generator_separated_nonempty_list(COMMA,subscript_key) . RIGHTBRACKET PLUSEQUALS value [ SEMICOLON NEWLINE ]
small_statement -> expression LEFTBRACKET parser_generator_separated_nonempty_list(COMMA,subscript_key) . RIGHTBRACKET ATEQUALS value [ SEMICOLON NEWLINE ]
small_statement -> expression LEFTBRACKET parser_generator_separated_nonempty_list(COMMA,subscript_key) . RIGHTBRACKET AMPERSANDEQUALS value [ SEMICOLON NEWLINE ]
small_statement -> expression LEFTBRACKET parser_generator_separated_nonempty_list(COMMA,subscript_key) . RIGHTBRACKET BAREQUALS value [ SEMICOLON NEWLINE ]
small_statement -> expression LEFTBRACKET parser_generator_separated_nonempty_list(COMMA,subscript_key) . RIGHTBRACKET HATEQUALS value [ SEMICOLON NEWLINE ]
small_statement -> expression LEFTBRACKET parser_generator_separated_nonempty_list(COMMA,subscript_key) . RIGHTBRACKET SLASHSLASHEQUALS value [ SEMICOLON NEWLINE ]
small_statement -> expression LEFTBRACKET parser_generator_separated_nonempty_list(COMMA,subscript_key) . RIGHTBRACKET SLASHEQUALS value [ SEMICOLON NEWLINE ]
small_statement -> expression LEFTBRACKET parser_generator_separated_nonempty_list(COMMA,subscript_key) . RIGHTBRACKET LEFTANGLELEFTANGLEEQUALS value [ SEMICOLON NEWLINE ]
small_statement -> expression LEFTBRACKET parser_generator_separated_nonempty_list(COMMA,subscript_key) . RIGHTBRACKET PERCENTEQUALS value [ SEMICOLON NEWLINE ]
small_statement -> expression LEFTBRACKET parser_generator_separated_nonempty_list(COMMA,subscript_key) . RIGHTBRACKET ASTERIKSASTERIKSEQUALS value [ SEMICOLON NEWLINE ]
small_statement -> expression LEFTBRACKET parser_generator_separated_nonempty_list(COMMA,subscript_key) . RIGHTBRACKET ASTERIKSEQUALS value [ SEMICOLON NEWLINE ]
small_statement -> expression LEFTBRACKET parser_generator_separated_nonempty_list(COMMA,subscript_key) . RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS value [ SEMICOLON NEWLINE ]
small_statement -> expression LEFTBRACKET parser_generator_separated_nonempty_list(COMMA,subscript_key) . RIGHTBRACKET MINUSEQUALS value [ SEMICOLON NEWLINE ]
targets -> expression LEFTBRACKET parser_generator_separated_nonempty_list(COMMA,subscript_key) . RIGHTBRACKET EQUALS [ YIELD TRUE TILDE STRING PLUS NOT MINUS LEFTPARENS LEFTCURLY LEFTBRACKET LAMBDA INTEGER IDENTIFIER FORMAT FLOAT FALSE ELLIPSES COMPLEX BYTES AWAIT ASYNC ASTERIKS ]
## Transitions:
-- On RIGHTBRACKET shift to state 356
## Reductions:

State 356:
## Known stack suffix:
## expression LEFTBRACKET parser_generator_separated_nonempty_list(COMMA,subscript_key) RIGHTBRACKET
## LR(1) items:
expression -> expression LEFTBRACKET parser_generator_separated_nonempty_list(COMMA,subscript_key) RIGHTBRACKET . [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT EXCLAMATIONMARK EQUALS DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
small_statement -> expression LEFTBRACKET parser_generator_separated_nonempty_list(COMMA,subscript_key) RIGHTBRACKET . PLUSEQUALS value [ SEMICOLON NEWLINE ]
small_statement -> expression LEFTBRACKET parser_generator_separated_nonempty_list(COMMA,subscript_key) RIGHTBRACKET . ATEQUALS value [ SEMICOLON NEWLINE ]
small_statement -> expression LEFTBRACKET parser_generator_separated_nonempty_list(COMMA,subscript_key) RIGHTBRACKET . AMPERSANDEQUALS value [ SEMICOLON NEWLINE ]
small_statement -> expression LEFTBRACKET parser_generator_separated_nonempty_list(COMMA,subscript_key) RIGHTBRACKET . BAREQUALS value [ SEMICOLON NEWLINE ]
small_statement -> expression LEFTBRACKET parser_generator_separated_nonempty_list(COMMA,subscript_key) RIGHTBRACKET . HATEQUALS value [ SEMICOLON NEWLINE ]
small_statement -> expression LEFTBRACKET parser_generator_separated_nonempty_list(COMMA,subscript_key) RIGHTBRACKET . SLASHSLASHEQUALS value [ SEMICOLON NEWLINE ]
small_statement -> expression LEFTBRACKET parser_generator_separated_nonempty_list(COMMA,subscript_key) RIGHTBRACKET . SLASHEQUALS value [ SEMICOLON NEWLINE ]
small_statement -> expression LEFTBRACKET parser_generator_separated_nonempty_list(COMMA,subscript_key) RIGHTBRACKET . LEFTANGLELEFTANGLEEQUALS value [ SEMICOLON NEWLINE ]
small_statement -> expression LEFTBRACKET parser_generator_separated_nonempty_list(COMMA,subscript_key) RIGHTBRACKET . PERCENTEQUALS value [ SEMICOLON NEWLINE ]
small_statement -> expression LEFTBRACKET parser_generator_separated_nonempty_list(COMMA,subscript_key) RIGHTBRACKET . ASTERIKSASTERIKSEQUALS value [ SEMICOLON NEWLINE ]
small_statement -> expression LEFTBRACKET parser_generator_separated_nonempty_list(COMMA,subscript_key) RIGHTBRACKET . ASTERIKSEQUALS value [ SEMICOLON NEWLINE ]
small_statement -> expression LEFTBRACKET parser_generator_separated_nonempty_list(COMMA,subscript_key) RIGHTBRACKET . RIGHTANGLERIGHTANGLEEQUALS value [ SEMICOLON NEWLINE ]
small_statement -> expression LEFTBRACKET parser_generator_separated_nonempty_list(COMMA,subscript_key) RIGHTBRACKET . MINUSEQUALS value [ SEMICOLON NEWLINE ]
targets -> expression LEFTBRACKET parser_generator_separated_nonempty_list(COMMA,subscript_key) RIGHTBRACKET . EQUALS [ YIELD TRUE TILDE STRING PLUS NOT MINUS LEFTPARENS LEFTCURLY LEFTBRACKET LAMBDA INTEGER IDENTIFIER FORMAT FLOAT FALSE ELLIPSES COMPLEX BYTES AWAIT ASYNC ASTERIKS ]
## Transitions:
-- On SLASHSLASHEQUALS shift to state 357
-- On SLASHEQUALS shift to state 359
-- On RIGHTANGLERIGHTANGLEEQUALS shift to state 361
-- On PLUSEQUALS shift to state 363
-- On PERCENTEQUALS shift to state 365
-- On MINUSEQUALS shift to state 367
-- On LEFTANGLELEFTANGLEEQUALS shift to state 369
-- On HATEQUALS shift to state 371
-- On EQUALS shift to state 373
-- On BAREQUALS shift to state 374
-- On ATEQUALS shift to state 376
-- On ASTERIKSEQUALS shift to state 378
-- On ASTERIKSASTERIKSEQUALS shift to state 380
-- On AMPERSANDEQUALS shift to state 382
## Reductions:
-- On SLASH SEMICOLON RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUS PERCENT OR NOT NEWLINE MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HAT EXCLAMATIONMARK DOUBLEEQUALS DOT COMMA COLON BAR AT ASTERIKS ANNOTATION_COMMENT AND AMPERSAND
--   reduce production expression -> expression LEFTBRACKET parser_generator_separated_nonempty_list(COMMA,subscript_key) RIGHTBRACKET

State 357:
## Known stack suffix:
## expression LEFTBRACKET parser_generator_separated_nonempty_list(COMMA,subscript_key) RIGHTBRACKET SLASHSLASHEQUALS
## LR(1) items:
small_statement -> expression LEFTBRACKET parser_generator_separated_nonempty_list(COMMA,subscript_key) RIGHTBRACKET SLASHSLASHEQUALS . value [ SEMICOLON NEWLINE ]
## Transitions:
-- On YIELD shift to state 1
-- On TRUE shift to state 4
-- On TILDE shift to state 5
-- On STRING shift to state 6
-- On PLUS shift to state 12
-- On NOT shift to state 17
-- On MINUS shift to state 14
-- On LEFTPARENS shift to state 15
-- On LEFTCURLY shift to state 18
-- On LEFTBRACKET shift to state 20
-- On LAMBDA shift to state 21
-- On INTEGER shift to state 22
-- On IDENTIFIER shift to state 23
-- On FORMAT shift to state 24
-- On FLOAT shift to state 26
-- On FALSE shift to state 27
-- On ELLIPSES shift to state 28
-- On COMPLEX shift to state 29
-- On BYTES shift to state 30
-- On AWAIT shift to state 32
-- On ASYNC shift to state 33
-- On ASTERIKS shift to state 34
-- On yield shift to state 302
-- On value shift to state 358
-- On test_list shift to state 304
-- On test shift to state 75
-- On set_or_dictionary shift to state 35
-- On separated_nonempty_list_indicator(COMMA,test) shift to state 80
-- On or_test shift to state 62
-- On not_test shift to state 49
-- On nonempty_list(BYTES) shift to state 36
-- On identifier shift to state 67
-- On expression shift to state 51
-- On comparison shift to state 70
-- On atom shift to state 71
-- On and_test shift to state 72
## Reductions:

State 358:
## Known stack suffix:
## expression LEFTBRACKET parser_generator_separated_nonempty_list(COMMA,subscript_key) RIGHTBRACKET SLASHSLASHEQUALS value
## LR(1) items:
small_statement -> expression LEFTBRACKET parser_generator_separated_nonempty_list(COMMA,subscript_key) RIGHTBRACKET SLASHSLASHEQUALS value . [ SEMICOLON NEWLINE ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production small_statement -> expression LEFTBRACKET parser_generator_separated_nonempty_list(COMMA,subscript_key) RIGHTBRACKET SLASHSLASHEQUALS value

State 359:
## Known stack suffix:
## expression LEFTBRACKET parser_generator_separated_nonempty_list(COMMA,subscript_key) RIGHTBRACKET SLASHEQUALS
## LR(1) items:
small_statement -> expression LEFTBRACKET parser_generator_separated_nonempty_list(COMMA,subscript_key) RIGHTBRACKET SLASHEQUALS . value [ SEMICOLON NEWLINE ]
## Transitions:
-- On YIELD shift to state 1
-- On TRUE shift to state 4
-- On TILDE shift to state 5
-- On STRING shift to state 6
-- On PLUS shift to state 12
-- On NOT shift to state 17
-- On MINUS shift to state 14
-- On LEFTPARENS shift to state 15
-- On LEFTCURLY shift to state 18
-- On LEFTBRACKET shift to state 20
-- On LAMBDA shift to state 21
-- On INTEGER shift to state 22
-- On IDENTIFIER shift to state 23
-- On FORMAT shift to state 24
-- On FLOAT shift to state 26
-- On FALSE shift to state 27
-- On ELLIPSES shift to state 28
-- On COMPLEX shift to state 29
-- On BYTES shift to state 30
-- On AWAIT shift to state 32
-- On ASYNC shift to state 33
-- On ASTERIKS shift to state 34
-- On yield shift to state 302
-- On value shift to state 360
-- On test_list shift to state 304
-- On test shift to state 75
-- On set_or_dictionary shift to state 35
-- On separated_nonempty_list_indicator(COMMA,test) shift to state 80
-- On or_test shift to state 62
-- On not_test shift to state 49
-- On nonempty_list(BYTES) shift to state 36
-- On identifier shift to state 67
-- On expression shift to state 51
-- On comparison shift to state 70
-- On atom shift to state 71
-- On and_test shift to state 72
## Reductions:

State 360:
## Known stack suffix:
## expression LEFTBRACKET parser_generator_separated_nonempty_list(COMMA,subscript_key) RIGHTBRACKET SLASHEQUALS value
## LR(1) items:
small_statement -> expression LEFTBRACKET parser_generator_separated_nonempty_list(COMMA,subscript_key) RIGHTBRACKET SLASHEQUALS value . [ SEMICOLON NEWLINE ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production small_statement -> expression LEFTBRACKET parser_generator_separated_nonempty_list(COMMA,subscript_key) RIGHTBRACKET SLASHEQUALS value

State 361:
## Known stack suffix:
## expression LEFTBRACKET parser_generator_separated_nonempty_list(COMMA,subscript_key) RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS
## LR(1) items:
small_statement -> expression LEFTBRACKET parser_generator_separated_nonempty_list(COMMA,subscript_key) RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS . value [ SEMICOLON NEWLINE ]
## Transitions:
-- On YIELD shift to state 1
-- On TRUE shift to state 4
-- On TILDE shift to state 5
-- On STRING shift to state 6
-- On PLUS shift to state 12
-- On NOT shift to state 17
-- On MINUS shift to state 14
-- On LEFTPARENS shift to state 15
-- On LEFTCURLY shift to state 18
-- On LEFTBRACKET shift to state 20
-- On LAMBDA shift to state 21
-- On INTEGER shift to state 22
-- On IDENTIFIER shift to state 23
-- On FORMAT shift to state 24
-- On FLOAT shift to state 26
-- On FALSE shift to state 27
-- On ELLIPSES shift to state 28
-- On COMPLEX shift to state 29
-- On BYTES shift to state 30
-- On AWAIT shift to state 32
-- On ASYNC shift to state 33
-- On ASTERIKS shift to state 34
-- On yield shift to state 302
-- On value shift to state 362
-- On test_list shift to state 304
-- On test shift to state 75
-- On set_or_dictionary shift to state 35
-- On separated_nonempty_list_indicator(COMMA,test) shift to state 80
-- On or_test shift to state 62
-- On not_test shift to state 49
-- On nonempty_list(BYTES) shift to state 36
-- On identifier shift to state 67
-- On expression shift to state 51
-- On comparison shift to state 70
-- On atom shift to state 71
-- On and_test shift to state 72
## Reductions:

State 362:
## Known stack suffix:
## expression LEFTBRACKET parser_generator_separated_nonempty_list(COMMA,subscript_key) RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS value
## LR(1) items:
small_statement -> expression LEFTBRACKET parser_generator_separated_nonempty_list(COMMA,subscript_key) RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS value . [ SEMICOLON NEWLINE ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production small_statement -> expression LEFTBRACKET parser_generator_separated_nonempty_list(COMMA,subscript_key) RIGHTBRACKET RIGHTANGLERIGHTANGLEEQUALS value

State 363:
## Known stack suffix:
## expression LEFTBRACKET parser_generator_separated_nonempty_list(COMMA,subscript_key) RIGHTBRACKET PLUSEQUALS
## LR(1) items:
small_statement -> expression LEFTBRACKET parser_generator_separated_nonempty_list(COMMA,subscript_key) RIGHTBRACKET PLUSEQUALS . value [ SEMICOLON NEWLINE ]
## Transitions:
-- On YIELD shift to state 1
-- On TRUE shift to state 4
-- On TILDE shift to state 5
-- On STRING shift to state 6
-- On PLUS shift to state 12
-- On NOT shift to state 17
-- On MINUS shift to state 14
-- On LEFTPARENS shift to state 15
-- On LEFTCURLY shift to state 18
-- On LEFTBRACKET shift to state 20
-- On LAMBDA shift to state 21
-- On INTEGER shift to state 22
-- On IDENTIFIER shift to state 23
-- On FORMAT shift to state 24
-- On FLOAT shift to state 26
-- On FALSE shift to state 27
-- On ELLIPSES shift to state 28
-- On COMPLEX shift to state 29
-- On BYTES shift to state 30
-- On AWAIT shift to state 32
-- On ASYNC shift to state 33
-- On ASTERIKS shift to state 34
-- On yield shift to state 302
-- On value shift to state 364
-- On test_list shift to state 304
-- On test shift to state 75
-- On set_or_dictionary shift to state 35
-- On separated_nonempty_list_indicator(COMMA,test) shift to state 80
-- On or_test shift to state 62
-- On not_test shift to state 49
-- On nonempty_list(BYTES) shift to state 36
-- On identifier shift to state 67
-- On expression shift to state 51
-- On comparison shift to state 70
-- On atom shift to state 71
-- On and_test shift to state 72
## Reductions:

State 364:
## Known stack suffix:
## expression LEFTBRACKET parser_generator_separated_nonempty_list(COMMA,subscript_key) RIGHTBRACKET PLUSEQUALS value
## LR(1) items:
small_statement -> expression LEFTBRACKET parser_generator_separated_nonempty_list(COMMA,subscript_key) RIGHTBRACKET PLUSEQUALS value . [ SEMICOLON NEWLINE ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production small_statement -> expression LEFTBRACKET parser_generator_separated_nonempty_list(COMMA,subscript_key) RIGHTBRACKET PLUSEQUALS value

State 365:
## Known stack suffix:
## expression LEFTBRACKET parser_generator_separated_nonempty_list(COMMA,subscript_key) RIGHTBRACKET PERCENTEQUALS
## LR(1) items:
small_statement -> expression LEFTBRACKET parser_generator_separated_nonempty_list(COMMA,subscript_key) RIGHTBRACKET PERCENTEQUALS . value [ SEMICOLON NEWLINE ]
## Transitions:
-- On YIELD shift to state 1
-- On TRUE shift to state 4
-- On TILDE shift to state 5
-- On STRING shift to state 6
-- On PLUS shift to state 12
-- On NOT shift to state 17
-- On MINUS shift to state 14
-- On LEFTPARENS shift to state 15
-- On LEFTCURLY shift to state 18
-- On LEFTBRACKET shift to state 20
-- On LAMBDA shift to state 21
-- On INTEGER shift to state 22
-- On IDENTIFIER shift to state 23
-- On FORMAT shift to state 24
-- On FLOAT shift to state 26
-- On FALSE shift to state 27
-- On ELLIPSES shift to state 28
-- On COMPLEX shift to state 29
-- On BYTES shift to state 30
-- On AWAIT shift to state 32
-- On ASYNC shift to state 33
-- On ASTERIKS shift to state 34
-- On yield shift to state 302
-- On value shift to state 366
-- On test_list shift to state 304
-- On test shift to state 75
-- On set_or_dictionary shift to state 35
-- On separated_nonempty_list_indicator(COMMA,test) shift to state 80
-- On or_test shift to state 62
-- On not_test shift to state 49
-- On nonempty_list(BYTES) shift to state 36
-- On identifier shift to state 67
-- On expression shift to state 51
-- On comparison shift to state 70
-- On atom shift to state 71
-- On and_test shift to state 72
## Reductions:

State 366:
## Known stack suffix:
## expression LEFTBRACKET parser_generator_separated_nonempty_list(COMMA,subscript_key) RIGHTBRACKET PERCENTEQUALS value
## LR(1) items:
small_statement -> expression LEFTBRACKET parser_generator_separated_nonempty_list(COMMA,subscript_key) RIGHTBRACKET PERCENTEQUALS value . [ SEMICOLON NEWLINE ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production small_statement -> expression LEFTBRACKET parser_generator_separated_nonempty_list(COMMA,subscript_key) RIGHTBRACKET PERCENTEQUALS value

State 367:
## Known stack suffix:
## expression LEFTBRACKET parser_generator_separated_nonempty_list(COMMA,subscript_key) RIGHTBRACKET MINUSEQUALS
## LR(1) items:
small_statement -> expression LEFTBRACKET parser_generator_separated_nonempty_list(COMMA,subscript_key) RIGHTBRACKET MINUSEQUALS . value [ SEMICOLON NEWLINE ]
## Transitions:
-- On YIELD shift to state 1
-- On TRUE shift to state 4
-- On TILDE shift to state 5
-- On STRING shift to state 6
-- On PLUS shift to state 12
-- On NOT shift to state 17
-- On MINUS shift to state 14
-- On LEFTPARENS shift to state 15
-- On LEFTCURLY shift to state 18
-- On LEFTBRACKET shift to state 20
-- On LAMBDA shift to state 21
-- On INTEGER shift to state 22
-- On IDENTIFIER shift to state 23
-- On FORMAT shift to state 24
-- On FLOAT shift to state 26
-- On FALSE shift to state 27
-- On ELLIPSES shift to state 28
-- On COMPLEX shift to state 29
-- On BYTES shift to state 30
-- On AWAIT shift to state 32
-- On ASYNC shift to state 33
-- On ASTERIKS shift to state 34
-- On yield shift to state 302
-- On value shift to state 368
-- On test_list shift to state 304
-- On test shift to state 75
-- On set_or_dictionary shift to state 35
-- On separated_nonempty_list_indicator(COMMA,test) shift to state 80
-- On or_test shift to state 62
-- On not_test shift to state 49
-- On nonempty_list(BYTES) shift to state 36
-- On identifier shift to state 67
-- On expression shift to state 51
-- On comparison shift to state 70
-- On atom shift to state 71
-- On and_test shift to state 72
## Reductions:

State 368:
## Known stack suffix:
## expression LEFTBRACKET parser_generator_separated_nonempty_list(COMMA,subscript_key) RIGHTBRACKET MINUSEQUALS value
## LR(1) items:
small_statement -> expression LEFTBRACKET parser_generator_separated_nonempty_list(COMMA,subscript_key) RIGHTBRACKET MINUSEQUALS value . [ SEMICOLON NEWLINE ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production small_statement -> expression LEFTBRACKET parser_generator_separated_nonempty_list(COMMA,subscript_key) RIGHTBRACKET MINUSEQUALS value

State 369:
## Known stack suffix:
## expression LEFTBRACKET parser_generator_separated_nonempty_list(COMMA,subscript_key) RIGHTBRACKET LEFTANGLELEFTANGLEEQUALS
## LR(1) items:
small_statement -> expression LEFTBRACKET parser_generator_separated_nonempty_list(COMMA,subscript_key) RIGHTBRACKET LEFTANGLELEFTANGLEEQUALS . value [ SEMICOLON NEWLINE ]
## Transitions:
-- On YIELD shift to state 1
-- On TRUE shift to state 4
-- On TILDE shift to state 5
-- On STRING shift to state 6
-- On PLUS shift to state 12
-- On NOT shift to state 17
-- On MINUS shift to state 14
-- On LEFTPARENS shift to state 15
-- On LEFTCURLY shift to state 18
-- On LEFTBRACKET shift to state 20
-- On LAMBDA shift to state 21
-- On INTEGER shift to state 22
-- On IDENTIFIER shift to state 23
-- On FORMAT shift to state 24
-- On FLOAT shift to state 26
-- On FALSE shift to state 27
-- On ELLIPSES shift to state 28
-- On COMPLEX shift to state 29
-- On BYTES shift to state 30
-- On AWAIT shift to state 32
-- On ASYNC shift to state 33
-- On ASTERIKS shift to state 34
-- On yield shift to state 302
-- On value shift to state 370
-- On test_list shift to state 304
-- On test shift to state 75
-- On set_or_dictionary shift to state 35
-- On separated_nonempty_list_indicator(COMMA,test) shift to state 80
-- On or_test shift to state 62
-- On not_test shift to state 49
-- On nonempty_list(BYTES) shift to state 36
-- On identifier shift to state 67
-- On expression shift to state 51
-- On comparison shift to state 70
-- On atom shift to state 71
-- On and_test shift to state 72
## Reductions:

State 370:
## Known stack suffix:
## expression LEFTBRACKET parser_generator_separated_nonempty_list(COMMA,subscript_key) RIGHTBRACKET LEFTANGLELEFTANGLEEQUALS value
## LR(1) items:
small_statement -> expression LEFTBRACKET parser_generator_separated_nonempty_list(COMMA,subscript_key) RIGHTBRACKET LEFTANGLELEFTANGLEEQUALS value . [ SEMICOLON NEWLINE ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production small_statement -> expression LEFTBRACKET parser_generator_separated_nonempty_list(COMMA,subscript_key) RIGHTBRACKET LEFTANGLELEFTANGLEEQUALS value

State 371:
## Known stack suffix:
## expression LEFTBRACKET parser_generator_separated_nonempty_list(COMMA,subscript_key) RIGHTBRACKET HATEQUALS
## LR(1) items:
small_statement -> expression LEFTBRACKET parser_generator_separated_nonempty_list(COMMA,subscript_key) RIGHTBRACKET HATEQUALS . value [ SEMICOLON NEWLINE ]
## Transitions:
-- On YIELD shift to state 1
-- On TRUE shift to state 4
-- On TILDE shift to state 5
-- On STRING shift to state 6
-- On PLUS shift to state 12
-- On NOT shift to state 17
-- On MINUS shift to state 14
-- On LEFTPARENS shift to state 15
-- On LEFTCURLY shift to state 18
-- On LEFTBRACKET shift to state 20
-- On LAMBDA shift to state 21
-- On INTEGER shift to state 22
-- On IDENTIFIER shift to state 23
-- On FORMAT shift to state 24
-- On FLOAT shift to state 26
-- On FALSE shift to state 27
-- On ELLIPSES shift to state 28
-- On COMPLEX shift to state 29
-- On BYTES shift to state 30
-- On AWAIT shift to state 32
-- On ASYNC shift to state 33
-- On ASTERIKS shift to state 34
-- On yield shift to state 302
-- On value shift to state 372
-- On test_list shift to state 304
-- On test shift to state 75
-- On set_or_dictionary shift to state 35
-- On separated_nonempty_list_indicator(COMMA,test) shift to state 80
-- On or_test shift to state 62
-- On not_test shift to state 49
-- On nonempty_list(BYTES) shift to state 36
-- On identifier shift to state 67
-- On expression shift to state 51
-- On comparison shift to state 70
-- On atom shift to state 71
-- On and_test shift to state 72
## Reductions:

State 372:
## Known stack suffix:
## expression LEFTBRACKET parser_generator_separated_nonempty_list(COMMA,subscript_key) RIGHTBRACKET HATEQUALS value
## LR(1) items:
small_statement -> expression LEFTBRACKET parser_generator_separated_nonempty_list(COMMA,subscript_key) RIGHTBRACKET HATEQUALS value . [ SEMICOLON NEWLINE ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production small_statement -> expression LEFTBRACKET parser_generator_separated_nonempty_list(COMMA,subscript_key) RIGHTBRACKET HATEQUALS value

State 373:
## Known stack suffix:
## expression LEFTBRACKET parser_generator_separated_nonempty_list(COMMA,subscript_key) RIGHTBRACKET EQUALS
## LR(1) items:
targets -> expression LEFTBRACKET parser_generator_separated_nonempty_list(COMMA,subscript_key) RIGHTBRACKET EQUALS . [ YIELD TRUE TILDE STRING PLUS NOT MINUS LEFTPARENS LEFTCURLY LEFTBRACKET LAMBDA INTEGER IDENTIFIER FORMAT FLOAT FALSE ELLIPSES COMPLEX BYTES AWAIT ASYNC ASTERIKS ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production targets -> expression LEFTBRACKET parser_generator_separated_nonempty_list(COMMA,subscript_key) RIGHTBRACKET EQUALS

State 374:
## Known stack suffix:
## expression LEFTBRACKET parser_generator_separated_nonempty_list(COMMA,subscript_key) RIGHTBRACKET BAREQUALS
## LR(1) items:
small_statement -> expression LEFTBRACKET parser_generator_separated_nonempty_list(COMMA,subscript_key) RIGHTBRACKET BAREQUALS . value [ SEMICOLON NEWLINE ]
## Transitions:
-- On YIELD shift to state 1
-- On TRUE shift to state 4
-- On TILDE shift to state 5
-- On STRING shift to state 6
-- On PLUS shift to state 12
-- On NOT shift to state 17
-- On MINUS shift to state 14
-- On LEFTPARENS shift to state 15
-- On LEFTCURLY shift to state 18
-- On LEFTBRACKET shift to state 20
-- On LAMBDA shift to state 21
-- On INTEGER shift to state 22
-- On IDENTIFIER shift to state 23
-- On FORMAT shift to state 24
-- On FLOAT shift to state 26
-- On FALSE shift to state 27
-- On ELLIPSES shift to state 28
-- On COMPLEX shift to state 29
-- On BYTES shift to state 30
-- On AWAIT shift to state 32
-- On ASYNC shift to state 33
-- On ASTERIKS shift to state 34
-- On yield shift to state 302
-- On value shift to state 375
-- On test_list shift to state 304
-- On test shift to state 75
-- On set_or_dictionary shift to state 35
-- On separated_nonempty_list_indicator(COMMA,test) shift to state 80
-- On or_test shift to state 62
-- On not_test shift to state 49
-- On nonempty_list(BYTES) shift to state 36
-- On identifier shift to state 67
-- On expression shift to state 51
-- On comparison shift to state 70
-- On atom shift to state 71
-- On and_test shift to state 72
## Reductions:

State 375:
## Known stack suffix:
## expression LEFTBRACKET parser_generator_separated_nonempty_list(COMMA,subscript_key) RIGHTBRACKET BAREQUALS value
## LR(1) items:
small_statement -> expression LEFTBRACKET parser_generator_separated_nonempty_list(COMMA,subscript_key) RIGHTBRACKET BAREQUALS value . [ SEMICOLON NEWLINE ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production small_statement -> expression LEFTBRACKET parser_generator_separated_nonempty_list(COMMA,subscript_key) RIGHTBRACKET BAREQUALS value

State 376:
## Known stack suffix:
## expression LEFTBRACKET parser_generator_separated_nonempty_list(COMMA,subscript_key) RIGHTBRACKET ATEQUALS
## LR(1) items:
small_statement -> expression LEFTBRACKET parser_generator_separated_nonempty_list(COMMA,subscript_key) RIGHTBRACKET ATEQUALS . value [ SEMICOLON NEWLINE ]
## Transitions:
-- On YIELD shift to state 1
-- On TRUE shift to state 4
-- On TILDE shift to state 5
-- On STRING shift to state 6
-- On PLUS shift to state 12
-- On NOT shift to state 17
-- On MINUS shift to state 14
-- On LEFTPARENS shift to state 15
-- On LEFTCURLY shift to state 18
-- On LEFTBRACKET shift to state 20
-- On LAMBDA shift to state 21
-- On INTEGER shift to state 22
-- On IDENTIFIER shift to state 23
-- On FORMAT shift to state 24
-- On FLOAT shift to state 26
-- On FALSE shift to state 27
-- On ELLIPSES shift to state 28
-- On COMPLEX shift to state 29
-- On BYTES shift to state 30
-- On AWAIT shift to state 32
-- On ASYNC shift to state 33
-- On ASTERIKS shift to state 34
-- On yield shift to state 302
-- On value shift to state 377
-- On test_list shift to state 304
-- On test shift to state 75
-- On set_or_dictionary shift to state 35
-- On separated_nonempty_list_indicator(COMMA,test) shift to state 80
-- On or_test shift to state 62
-- On not_test shift to state 49
-- On nonempty_list(BYTES) shift to state 36
-- On identifier shift to state 67
-- On expression shift to state 51
-- On comparison shift to state 70
-- On atom shift to state 71
-- On and_test shift to state 72
## Reductions:

State 377:
## Known stack suffix:
## expression LEFTBRACKET parser_generator_separated_nonempty_list(COMMA,subscript_key) RIGHTBRACKET ATEQUALS value
## LR(1) items:
small_statement -> expression LEFTBRACKET parser_generator_separated_nonempty_list(COMMA,subscript_key) RIGHTBRACKET ATEQUALS value . [ SEMICOLON NEWLINE ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production small_statement -> expression LEFTBRACKET parser_generator_separated_nonempty_list(COMMA,subscript_key) RIGHTBRACKET ATEQUALS value

State 378:
## Known stack suffix:
## expression LEFTBRACKET parser_generator_separated_nonempty_list(COMMA,subscript_key) RIGHTBRACKET ASTERIKSEQUALS
## LR(1) items:
small_statement -> expression LEFTBRACKET parser_generator_separated_nonempty_list(COMMA,subscript_key) RIGHTBRACKET ASTERIKSEQUALS . value [ SEMICOLON NEWLINE ]
## Transitions:
-- On YIELD shift to state 1
-- On TRUE shift to state 4
-- On TILDE shift to state 5
-- On STRING shift to state 6
-- On PLUS shift to state 12
-- On NOT shift to state 17
-- On MINUS shift to state 14
-- On LEFTPARENS shift to state 15
-- On LEFTCURLY shift to state 18
-- On LEFTBRACKET shift to state 20
-- On LAMBDA shift to state 21
-- On INTEGER shift to state 22
-- On IDENTIFIER shift to state 23
-- On FORMAT shift to state 24
-- On FLOAT shift to state 26
-- On FALSE shift to state 27
-- On ELLIPSES shift to state 28
-- On COMPLEX shift to state 29
-- On BYTES shift to state 30
-- On AWAIT shift to state 32
-- On ASYNC shift to state 33
-- On ASTERIKS shift to state 34
-- On yield shift to state 302
-- On value shift to state 379
-- On test_list shift to state 304
-- On test shift to state 75
-- On set_or_dictionary shift to state 35
-- On separated_nonempty_list_indicator(COMMA,test) shift to state 80
-- On or_test shift to state 62
-- On not_test shift to state 49
-- On nonempty_list(BYTES) shift to state 36
-- On identifier shift to state 67
-- On expression shift to state 51
-- On comparison shift to state 70
-- On atom shift to state 71
-- On and_test shift to state 72
## Reductions:

State 379:
## Known stack suffix:
## expression LEFTBRACKET parser_generator_separated_nonempty_list(COMMA,subscript_key) RIGHTBRACKET ASTERIKSEQUALS value
## LR(1) items:
small_statement -> expression LEFTBRACKET parser_generator_separated_nonempty_list(COMMA,subscript_key) RIGHTBRACKET ASTERIKSEQUALS value . [ SEMICOLON NEWLINE ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production small_statement -> expression LEFTBRACKET parser_generator_separated_nonempty_list(COMMA,subscript_key) RIGHTBRACKET ASTERIKSEQUALS value

State 380:
## Known stack suffix:
## expression LEFTBRACKET parser_generator_separated_nonempty_list(COMMA,subscript_key) RIGHTBRACKET ASTERIKSASTERIKSEQUALS
## LR(1) items:
small_statement -> expression LEFTBRACKET parser_generator_separated_nonempty_list(COMMA,subscript_key) RIGHTBRACKET ASTERIKSASTERIKSEQUALS . value [ SEMICOLON NEWLINE ]
## Transitions:
-- On YIELD shift to state 1
-- On TRUE shift to state 4
-- On TILDE shift to state 5
-- On STRING shift to state 6
-- On PLUS shift to state 12
-- On NOT shift to state 17
-- On MINUS shift to state 14
-- On LEFTPARENS shift to state 15
-- On LEFTCURLY shift to state 18
-- On LEFTBRACKET shift to state 20
-- On LAMBDA shift to state 21
-- On INTEGER shift to state 22
-- On IDENTIFIER shift to state 23
-- On FORMAT shift to state 24
-- On FLOAT shift to state 26
-- On FALSE shift to state 27
-- On ELLIPSES shift to state 28
-- On COMPLEX shift to state 29
-- On BYTES shift to state 30
-- On AWAIT shift to state 32
-- On ASYNC shift to state 33
-- On ASTERIKS shift to state 34
-- On yield shift to state 302
-- On value shift to state 381
-- On test_list shift to state 304
-- On test shift to state 75
-- On set_or_dictionary shift to state 35
-- On separated_nonempty_list_indicator(COMMA,test) shift to state 80
-- On or_test shift to state 62
-- On not_test shift to state 49
-- On nonempty_list(BYTES) shift to state 36
-- On identifier shift to state 67
-- On expression shift to state 51
-- On comparison shift to state 70
-- On atom shift to state 71
-- On and_test shift to state 72
## Reductions:

State 381:
## Known stack suffix:
## expression LEFTBRACKET parser_generator_separated_nonempty_list(COMMA,subscript_key) RIGHTBRACKET ASTERIKSASTERIKSEQUALS value
## LR(1) items:
small_statement -> expression LEFTBRACKET parser_generator_separated_nonempty_list(COMMA,subscript_key) RIGHTBRACKET ASTERIKSASTERIKSEQUALS value . [ SEMICOLON NEWLINE ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production small_statement -> expression LEFTBRACKET parser_generator_separated_nonempty_list(COMMA,subscript_key) RIGHTBRACKET ASTERIKSASTERIKSEQUALS value

State 382:
## Known stack suffix:
## expression LEFTBRACKET parser_generator_separated_nonempty_list(COMMA,subscript_key) RIGHTBRACKET AMPERSANDEQUALS
## LR(1) items:
small_statement -> expression LEFTBRACKET parser_generator_separated_nonempty_list(COMMA,subscript_key) RIGHTBRACKET AMPERSANDEQUALS . value [ SEMICOLON NEWLINE ]
## Transitions:
-- On YIELD shift to state 1
-- On TRUE shift to state 4
-- On TILDE shift to state 5
-- On STRING shift to state 6
-- On PLUS shift to state 12
-- On NOT shift to state 17
-- On MINUS shift to state 14
-- On LEFTPARENS shift to state 15
-- On LEFTCURLY shift to state 18
-- On LEFTBRACKET shift to state 20
-- On LAMBDA shift to state 21
-- On INTEGER shift to state 22
-- On IDENTIFIER shift to state 23
-- On FORMAT shift to state 24
-- On FLOAT shift to state 26
-- On FALSE shift to state 27
-- On ELLIPSES shift to state 28
-- On COMPLEX shift to state 29
-- On BYTES shift to state 30
-- On AWAIT shift to state 32
-- On ASYNC shift to state 33
-- On ASTERIKS shift to state 34
-- On yield shift to state 302
-- On value shift to state 383
-- On test_list shift to state 304
-- On test shift to state 75
-- On set_or_dictionary shift to state 35
-- On separated_nonempty_list_indicator(COMMA,test) shift to state 80
-- On or_test shift to state 62
-- On not_test shift to state 49
-- On nonempty_list(BYTES) shift to state 36
-- On identifier shift to state 67
-- On expression shift to state 51
-- On comparison shift to state 70
-- On atom shift to state 71
-- On and_test shift to state 72
## Reductions:

State 383:
## Known stack suffix:
## expression LEFTBRACKET parser_generator_separated_nonempty_list(COMMA,subscript_key) RIGHTBRACKET AMPERSANDEQUALS value
## LR(1) items:
small_statement -> expression LEFTBRACKET parser_generator_separated_nonempty_list(COMMA,subscript_key) RIGHTBRACKET AMPERSANDEQUALS value . [ SEMICOLON NEWLINE ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production small_statement -> expression LEFTBRACKET parser_generator_separated_nonempty_list(COMMA,subscript_key) RIGHTBRACKET AMPERSANDEQUALS value

State 384:
## Known stack suffix:
## small_statement SEMICOLON parser_generator_separated_list_of_lists(SEMICOLON,small_statement)
## LR(1) items:
parser_generator_separated_nonempty_list_of_lists(SEMICOLON,small_statement) -> small_statement SEMICOLON parser_generator_separated_list_of_lists(SEMICOLON,small_statement) . [ NEWLINE ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production parser_generator_separated_nonempty_list_of_lists(SEMICOLON,small_statement) -> small_statement SEMICOLON parser_generator_separated_list_of_lists(SEMICOLON,small_statement)

State 385:
## Known stack suffix:
## simple_statement
## LR(1) items:
block -> simple_statement . [ YIELD WITH WHILE TRY TRUE TILDE STRING RETURN RAISE PLUS PASS NOT NONLOCAL NEWLINE MINUS LEFTPARENS LEFTCURLY LEFTBRACKET LAMBDA INTEGER IMPORT IF IDENTIFIER GLOBAL FROM FORMAT FOR FLOAT FINALLY FALSE EXCEPT EOF ELSEIF ELSE ELLIPSES DELETE DEFINE DEDENT CONTINUE COMPLEX CLASS BYTES BREAK AWAIT AT ASYNC ASTERIKS ASSERT ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production block -> simple_statement

State 386:
## Known stack suffix:
## parser_generator_separated_nonempty_list_of_lists(SEMICOLON,small_statement)
## LR(1) items:
simple_statement -> parser_generator_separated_nonempty_list_of_lists(SEMICOLON,small_statement) . NEWLINE [ YIELD WITH WHILE TRY TRUE TILDE STRING RETURN RAISE PLUS PASS NOT NONLOCAL NEWLINE MINUS LEFTPARENS LEFTCURLY LEFTBRACKET LAMBDA INTEGER IMPORT IF IDENTIFIER GLOBAL FROM FORMAT FOR FLOAT FINALLY FALSE EXCEPT EOF ELSEIF ELSE ELLIPSES DELETE DEFINE DEDENT CONTINUE COMPLEX CLASS BYTES BREAK AWAIT AT ASYNC ASTERIKS ASSERT ]
## Transitions:
-- On NEWLINE shift to state 387
## Reductions:

State 387:
## Known stack suffix:
## parser_generator_separated_nonempty_list_of_lists(SEMICOLON,small_statement) NEWLINE
## LR(1) items:
simple_statement -> parser_generator_separated_nonempty_list_of_lists(SEMICOLON,small_statement) NEWLINE . [ YIELD WITH WHILE TRY TRUE TILDE STRING RETURN RAISE PLUS PASS NOT NONLOCAL NEWLINE MINUS LEFTPARENS LEFTCURLY LEFTBRACKET LAMBDA INTEGER IMPORT IF IDENTIFIER GLOBAL FROM FORMAT FOR FLOAT FINALLY FALSE EXCEPT EOF ELSEIF ELSE ELLIPSES DELETE DEFINE DEDENT CONTINUE COMPLEX CLASS BYTES BREAK AWAIT AT ASYNC ASTERIKS ASSERT ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production simple_statement -> parser_generator_separated_nonempty_list_of_lists(SEMICOLON,small_statement) NEWLINE

State 388:
## Known stack suffix:
## nonempty_list(NEWLINE)
## LR(1) items:
block -> nonempty_list(NEWLINE) . INDENT statements DEDENT list(NEWLINE) [ YIELD WITH WHILE TRY TRUE TILDE STRING RETURN RAISE PLUS PASS NOT NONLOCAL NEWLINE MINUS LEFTPARENS LEFTCURLY LEFTBRACKET LAMBDA INTEGER IMPORT IF IDENTIFIER GLOBAL FROM FORMAT FOR FLOAT FINALLY FALSE EXCEPT EOF ELSEIF ELSE ELLIPSES DELETE DEFINE DEDENT CONTINUE COMPLEX CLASS BYTES BREAK AWAIT AT ASYNC ASTERIKS ASSERT ]
## Transitions:
-- On INDENT shift to state 389
## Reductions:

State 389:
## Known stack suffix:
## nonempty_list(NEWLINE) INDENT
## LR(1) items:
block -> nonempty_list(NEWLINE) INDENT . statements DEDENT list(NEWLINE) [ YIELD WITH WHILE TRY TRUE TILDE STRING RETURN RAISE PLUS PASS NOT NONLOCAL NEWLINE MINUS LEFTPARENS LEFTCURLY LEFTBRACKET LAMBDA INTEGER IMPORT IF IDENTIFIER GLOBAL FROM FORMAT FOR FLOAT FINALLY FALSE EXCEPT EOF ELSEIF ELSE ELLIPSES DELETE DEFINE DEDENT CONTINUE COMPLEX CLASS BYTES BREAK AWAIT AT ASYNC ASTERIKS ASSERT ]
## Transitions:
-- On YIELD shift to state 1
-- On WITH shift to state 220
-- On WHILE shift to state 390
-- On TRY shift to state 398
-- On TRUE shift to state 4
-- On TILDE shift to state 5
-- On STRING shift to state 6
-- On RETURN shift to state 234
-- On RAISE shift to state 236
-- On PLUS shift to state 12
-- On PASS shift to state 242
-- On NOT shift to state 17
-- On NONLOCAL shift to state 243
-- On NEWLINE shift to state 430
-- On MINUS shift to state 14
-- On LEFTPARENS shift to state 15
-- On LEFTCURLY shift to state 18
-- On LEFTBRACKET shift to state 20
-- On LAMBDA shift to state 21
-- On INTEGER shift to state 22
-- On IMPORT shift to state 253
-- On IF shift to state 431
-- On IDENTIFIER shift to state 23
-- On GLOBAL shift to state 276
-- On FROM shift to state 278
-- On FORMAT shift to state 24
-- On FOR shift to state 439
-- On FLOAT shift to state 26
-- On FALSE shift to state 27
-- On ELLIPSES shift to state 28
-- On DELETE shift to state 291
-- On DEFINE shift to state 447
-- On CONTINUE shift to state 293
-- On COMPLEX shift to state 29
-- On CLASS shift to state 493
-- On BYTES shift to state 30
-- On BREAK shift to state 294
-- On AWAIT shift to state 32
-- On AT shift to state 502
-- On ASYNC shift to state 509
-- On ASTERIKS shift to state 34
-- On ASSERT shift to state 295
-- On yield shift to state 299
-- On test_list shift to state 300
-- On test shift to state 75
-- On targets shift to state 336
-- On statements shift to state 511
-- On statement shift to state 514
-- On small_statement shift to state 348
-- On simple_statement shift to state 516
-- On set_or_dictionary shift to state 35
-- On separated_nonempty_list_indicator(COMMA,test) shift to state 80
-- On parser_generator_separated_nonempty_list_of_lists(SEMICOLON,small_statement) shift to state 386
-- On or_test shift to state 62
-- On not_test shift to state 49
-- On nonempty_list(decorator) shift to state 517
-- On nonempty_list(BYTES) shift to state 36
-- On identifier shift to state 67
-- On expression shift to state 353
-- On decorator shift to state 521
-- On decorated_statement shift to state 523
-- On compound_statement shift to state 524
-- On comparison shift to state 70
-- On atom shift to state 71
-- On async_statement shift to state 525
-- On and_test shift to state 72
## Reductions:
-- On DEDENT
--   reduce production statements ->

State 390:
## Known stack suffix:
## WHILE
## LR(1) items:
compound_statement -> WHILE . test_list COLON block named_optional_block(ELSE) [ YIELD WITH WHILE TRY TRUE TILDE STRING RETURN RAISE PLUS PASS NOT NONLOCAL NEWLINE MINUS LEFTPARENS LEFTCURLY LEFTBRACKET LAMBDA INTEGER IMPORT IF IDENTIFIER GLOBAL FROM FORMAT FOR FLOAT FALSE EOF ELLIPSES DELETE DEFINE DEDENT CONTINUE COMPLEX CLASS BYTES BREAK AWAIT AT ASYNC ASTERIKS ASSERT ]
## Transitions:
-- On TRUE shift to state 4
-- On TILDE shift to state 5
-- On STRING shift to state 6
-- On PLUS shift to state 12
-- On NOT shift to state 17
-- On MINUS shift to state 14
-- On LEFTPARENS shift to state 15
-- On LEFTCURLY shift to state 18
-- On LEFTBRACKET shift to state 20
-- On LAMBDA shift to state 21
-- On INTEGER shift to state 22
-- On IDENTIFIER shift to state 23
-- On FORMAT shift to state 24
-- On FLOAT shift to state 26
-- On FALSE shift to state 27
-- On ELLIPSES shift to state 28
-- On COMPLEX shift to state 29
-- On BYTES shift to state 30
-- On AWAIT shift to state 32
-- On ASYNC shift to state 33
-- On ASTERIKS shift to state 34
-- On test_list shift to state 391
-- On test shift to state 75
-- On set_or_dictionary shift to state 35
-- On separated_nonempty_list_indicator(COMMA,test) shift to state 80
-- On or_test shift to state 62
-- On not_test shift to state 49
-- On nonempty_list(BYTES) shift to state 36
-- On identifier shift to state 67
-- On expression shift to state 51
-- On comparison shift to state 70
-- On atom shift to state 71
-- On and_test shift to state 72
## Reductions:

State 391:
## Known stack suffix:
## WHILE test_list
## LR(1) items:
compound_statement -> WHILE test_list . COLON block named_optional_block(ELSE) [ YIELD WITH WHILE TRY TRUE TILDE STRING RETURN RAISE PLUS PASS NOT NONLOCAL NEWLINE MINUS LEFTPARENS LEFTCURLY LEFTBRACKET LAMBDA INTEGER IMPORT IF IDENTIFIER GLOBAL FROM FORMAT FOR FLOAT FALSE EOF ELLIPSES DELETE DEFINE DEDENT CONTINUE COMPLEX CLASS BYTES BREAK AWAIT AT ASYNC ASTERIKS ASSERT ]
## Transitions:
-- On COLON shift to state 392
## Reductions:

State 392:
## Known stack suffix:
## WHILE test_list COLON
## LR(1) items:
compound_statement -> WHILE test_list COLON . block named_optional_block(ELSE) [ YIELD WITH WHILE TRY TRUE TILDE STRING RETURN RAISE PLUS PASS NOT NONLOCAL NEWLINE MINUS LEFTPARENS LEFTCURLY LEFTBRACKET LAMBDA INTEGER IMPORT IF IDENTIFIER GLOBAL FROM FORMAT FOR FLOAT FALSE EOF ELLIPSES DELETE DEFINE DEDENT CONTINUE COMPLEX CLASS BYTES BREAK AWAIT AT ASYNC ASTERIKS ASSERT ]
## Transitions:
-- On YIELD shift to state 1
-- On TRUE shift to state 4
-- On TILDE shift to state 5
-- On STRING shift to state 6
-- On RETURN shift to state 234
-- On RAISE shift to state 236
-- On PLUS shift to state 12
-- On PASS shift to state 242
-- On NOT shift to state 17
-- On NONLOCAL shift to state 243
-- On NEWLINE shift to state 251
-- On MINUS shift to state 14
-- On LEFTPARENS shift to state 15
-- On LEFTCURLY shift to state 18
-- On LEFTBRACKET shift to state 20
-- On LAMBDA shift to state 21
-- On INTEGER shift to state 22
-- On IMPORT shift to state 253
-- On IDENTIFIER shift to state 23
-- On GLOBAL shift to state 276
-- On FROM shift to state 278
-- On FORMAT shift to state 24
-- On FLOAT shift to state 26
-- On FALSE shift to state 27
-- On ELLIPSES shift to state 28
-- On DELETE shift to state 291
-- On CONTINUE shift to state 293
-- On COMPLEX shift to state 29
-- On BYTES shift to state 30
-- On BREAK shift to state 294
-- On AWAIT shift to state 32
-- On ASYNC shift to state 33
-- On ASTERIKS shift to state 34
-- On ASSERT shift to state 295
-- On yield shift to state 299
-- On test_list shift to state 300
-- On test shift to state 75
-- On targets shift to state 336
-- On small_statement shift to state 348
-- On simple_statement shift to state 385
-- On set_or_dictionary shift to state 35
-- On separated_nonempty_list_indicator(COMMA,test) shift to state 80
-- On parser_generator_separated_nonempty_list_of_lists(SEMICOLON,small_statement) shift to state 386
-- On or_test shift to state 62
-- On not_test shift to state 49
-- On nonempty_list(NEWLINE) shift to state 388
-- On nonempty_list(BYTES) shift to state 36
-- On identifier shift to state 67
-- On expression shift to state 353
-- On comparison shift to state 70
-- On block shift to state 393
-- On atom shift to state 71
-- On and_test shift to state 72
## Reductions:

State 393:
## Known stack suffix:
## WHILE test_list COLON block
## LR(1) items:
compound_statement -> WHILE test_list COLON block . named_optional_block(ELSE) [ YIELD WITH WHILE TRY TRUE TILDE STRING RETURN RAISE PLUS PASS NOT NONLOCAL NEWLINE MINUS LEFTPARENS LEFTCURLY LEFTBRACKET LAMBDA INTEGER IMPORT IF IDENTIFIER GLOBAL FROM FORMAT FOR FLOAT FALSE EOF ELLIPSES DELETE DEFINE DEDENT CONTINUE COMPLEX CLASS BYTES BREAK AWAIT AT ASYNC ASTERIKS ASSERT ]
## Transitions:
-- On ELSE shift to state 394
-- On named_optional_block(ELSE) shift to state 397
## Reductions:
-- On YIELD WITH WHILE TRY TRUE TILDE STRING RETURN RAISE PLUS PASS NOT NONLOCAL NEWLINE MINUS LEFTPARENS LEFTCURLY LEFTBRACKET LAMBDA INTEGER IMPORT IF IDENTIFIER GLOBAL FROM FORMAT FOR FLOAT FALSE EOF ELLIPSES DELETE DEFINE DEDENT CONTINUE COMPLEX CLASS BYTES BREAK AWAIT AT ASYNC ASTERIKS ASSERT
--   reduce production named_optional_block(ELSE) ->

State 394:
## Known stack suffix:
## ELSE
## LR(1) items:
named_optional_block(ELSE) -> ELSE . COLON block [ YIELD WITH WHILE TRY TRUE TILDE STRING RETURN RAISE PLUS PASS NOT NONLOCAL NEWLINE MINUS LEFTPARENS LEFTCURLY LEFTBRACKET LAMBDA INTEGER IMPORT IF IDENTIFIER GLOBAL FROM FORMAT FOR FLOAT FINALLY FALSE EOF ELLIPSES DELETE DEFINE DEDENT CONTINUE COMPLEX CLASS BYTES BREAK AWAIT AT ASYNC ASTERIKS ASSERT ]
## Transitions:
-- On COLON shift to state 395
## Reductions:

State 395:
## Known stack suffix:
## ELSE COLON
## LR(1) items:
named_optional_block(ELSE) -> ELSE COLON . block [ YIELD WITH WHILE TRY TRUE TILDE STRING RETURN RAISE PLUS PASS NOT NONLOCAL NEWLINE MINUS LEFTPARENS LEFTCURLY LEFTBRACKET LAMBDA INTEGER IMPORT IF IDENTIFIER GLOBAL FROM FORMAT FOR FLOAT FINALLY FALSE EOF ELLIPSES DELETE DEFINE DEDENT CONTINUE COMPLEX CLASS BYTES BREAK AWAIT AT ASYNC ASTERIKS ASSERT ]
## Transitions:
-- On YIELD shift to state 1
-- On TRUE shift to state 4
-- On TILDE shift to state 5
-- On STRING shift to state 6
-- On RETURN shift to state 234
-- On RAISE shift to state 236
-- On PLUS shift to state 12
-- On PASS shift to state 242
-- On NOT shift to state 17
-- On NONLOCAL shift to state 243
-- On NEWLINE shift to state 251
-- On MINUS shift to state 14
-- On LEFTPARENS shift to state 15
-- On LEFTCURLY shift to state 18
-- On LEFTBRACKET shift to state 20
-- On LAMBDA shift to state 21
-- On INTEGER shift to state 22
-- On IMPORT shift to state 253
-- On IDENTIFIER shift to state 23
-- On GLOBAL shift to state 276
-- On FROM shift to state 278
-- On FORMAT shift to state 24
-- On FLOAT shift to state 26
-- On FALSE shift to state 27
-- On ELLIPSES shift to state 28
-- On DELETE shift to state 291
-- On CONTINUE shift to state 293
-- On COMPLEX shift to state 29
-- On BYTES shift to state 30
-- On BREAK shift to state 294
-- On AWAIT shift to state 32
-- On ASYNC shift to state 33
-- On ASTERIKS shift to state 34
-- On ASSERT shift to state 295
-- On yield shift to state 299
-- On test_list shift to state 300
-- On test shift to state 75
-- On targets shift to state 336
-- On small_statement shift to state 348
-- On simple_statement shift to state 385
-- On set_or_dictionary shift to state 35
-- On separated_nonempty_list_indicator(COMMA,test) shift to state 80
-- On parser_generator_separated_nonempty_list_of_lists(SEMICOLON,small_statement) shift to state 386
-- On or_test shift to state 62
-- On not_test shift to state 49
-- On nonempty_list(NEWLINE) shift to state 388
-- On nonempty_list(BYTES) shift to state 36
-- On identifier shift to state 67
-- On expression shift to state 353
-- On comparison shift to state 70
-- On block shift to state 396
-- On atom shift to state 71
-- On and_test shift to state 72
## Reductions:

State 396:
## Known stack suffix:
## ELSE COLON block
## LR(1) items:
named_optional_block(ELSE) -> ELSE COLON block . [ YIELD WITH WHILE TRY TRUE TILDE STRING RETURN RAISE PLUS PASS NOT NONLOCAL NEWLINE MINUS LEFTPARENS LEFTCURLY LEFTBRACKET LAMBDA INTEGER IMPORT IF IDENTIFIER GLOBAL FROM FORMAT FOR FLOAT FINALLY FALSE EOF ELLIPSES DELETE DEFINE DEDENT CONTINUE COMPLEX CLASS BYTES BREAK AWAIT AT ASYNC ASTERIKS ASSERT ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production named_optional_block(ELSE) -> ELSE COLON block

State 397:
## Known stack suffix:
## WHILE test_list COLON block named_optional_block(ELSE)
## LR(1) items:
compound_statement -> WHILE test_list COLON block named_optional_block(ELSE) . [ YIELD WITH WHILE TRY TRUE TILDE STRING RETURN RAISE PLUS PASS NOT NONLOCAL NEWLINE MINUS LEFTPARENS LEFTCURLY LEFTBRACKET LAMBDA INTEGER IMPORT IF IDENTIFIER GLOBAL FROM FORMAT FOR FLOAT FALSE EOF ELLIPSES DELETE DEFINE DEDENT CONTINUE COMPLEX CLASS BYTES BREAK AWAIT AT ASYNC ASTERIKS ASSERT ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production compound_statement -> WHILE test_list COLON block named_optional_block(ELSE)

State 398:
## Known stack suffix:
## TRY
## LR(1) items:
compound_statement -> TRY . COLON block list(handler) named_optional_block(ELSE) named_optional_block(FINALLY) [ YIELD WITH WHILE TRY TRUE TILDE STRING RETURN RAISE PLUS PASS NOT NONLOCAL NEWLINE MINUS LEFTPARENS LEFTCURLY LEFTBRACKET LAMBDA INTEGER IMPORT IF IDENTIFIER GLOBAL FROM FORMAT FOR FLOAT FALSE EOF ELLIPSES DELETE DEFINE DEDENT CONTINUE COMPLEX CLASS BYTES BREAK AWAIT AT ASYNC ASTERIKS ASSERT ]
## Transitions:
-- On COLON shift to state 399
## Reductions:

State 399:
## Known stack suffix:
## TRY COLON
## LR(1) items:
compound_statement -> TRY COLON . block list(handler) named_optional_block(ELSE) named_optional_block(FINALLY) [ YIELD WITH WHILE TRY TRUE TILDE STRING RETURN RAISE PLUS PASS NOT NONLOCAL NEWLINE MINUS LEFTPARENS LEFTCURLY LEFTBRACKET LAMBDA INTEGER IMPORT IF IDENTIFIER GLOBAL FROM FORMAT FOR FLOAT FALSE EOF ELLIPSES DELETE DEFINE DEDENT CONTINUE COMPLEX CLASS BYTES BREAK AWAIT AT ASYNC ASTERIKS ASSERT ]
## Transitions:
-- On YIELD shift to state 1
-- On TRUE shift to state 4
-- On TILDE shift to state 5
-- On STRING shift to state 6
-- On RETURN shift to state 234
-- On RAISE shift to state 236
-- On PLUS shift to state 12
-- On PASS shift to state 242
-- On NOT shift to state 17
-- On NONLOCAL shift to state 243
-- On NEWLINE shift to state 251
-- On MINUS shift to state 14
-- On LEFTPARENS shift to state 15
-- On LEFTCURLY shift to state 18
-- On LEFTBRACKET shift to state 20
-- On LAMBDA shift to state 21
-- On INTEGER shift to state 22
-- On IMPORT shift to state 253
-- On IDENTIFIER shift to state 23
-- On GLOBAL shift to state 276
-- On FROM shift to state 278
-- On FORMAT shift to state 24
-- On FLOAT shift to state 26
-- On FALSE shift to state 27
-- On ELLIPSES shift to state 28
-- On DELETE shift to state 291
-- On CONTINUE shift to state 293
-- On COMPLEX shift to state 29
-- On BYTES shift to state 30
-- On BREAK shift to state 294
-- On AWAIT shift to state 32
-- On ASYNC shift to state 33
-- On ASTERIKS shift to state 34
-- On ASSERT shift to state 295
-- On yield shift to state 299
-- On test_list shift to state 300
-- On test shift to state 75
-- On targets shift to state 336
-- On small_statement shift to state 348
-- On simple_statement shift to state 385
-- On set_or_dictionary shift to state 35
-- On separated_nonempty_list_indicator(COMMA,test) shift to state 80
-- On parser_generator_separated_nonempty_list_of_lists(SEMICOLON,small_statement) shift to state 386
-- On or_test shift to state 62
-- On not_test shift to state 49
-- On nonempty_list(NEWLINE) shift to state 388
-- On nonempty_list(BYTES) shift to state 36
-- On identifier shift to state 67
-- On expression shift to state 353
-- On comparison shift to state 70
-- On block shift to state 400
-- On atom shift to state 71
-- On and_test shift to state 72
## Reductions:

State 400:
## Known stack suffix:
## TRY COLON block
## LR(1) items:
compound_statement -> TRY COLON block . list(handler) named_optional_block(ELSE) named_optional_block(FINALLY) [ YIELD WITH WHILE TRY TRUE TILDE STRING RETURN RAISE PLUS PASS NOT NONLOCAL NEWLINE MINUS LEFTPARENS LEFTCURLY LEFTBRACKET LAMBDA INTEGER IMPORT IF IDENTIFIER GLOBAL FROM FORMAT FOR FLOAT FALSE EOF ELLIPSES DELETE DEFINE DEDENT CONTINUE COMPLEX CLASS BYTES BREAK AWAIT AT ASYNC ASTERIKS ASSERT ]
## Transitions:
-- On EXCEPT shift to state 401
-- On list(handler) shift to state 422
-- On handler shift to state 428
## Reductions:
-- On YIELD WITH WHILE TRY TRUE TILDE STRING RETURN RAISE PLUS PASS NOT NONLOCAL NEWLINE MINUS LEFTPARENS LEFTCURLY LEFTBRACKET LAMBDA INTEGER IMPORT IF IDENTIFIER GLOBAL FROM FORMAT FOR FLOAT FINALLY FALSE EOF ELSE ELLIPSES DELETE DEFINE DEDENT CONTINUE COMPLEX CLASS BYTES BREAK AWAIT AT ASYNC ASTERIKS ASSERT
--   reduce production list(handler) ->

State 401:
## Known stack suffix:
## EXCEPT
## LR(1) items:
handler -> EXCEPT . COLON block [ YIELD WITH WHILE TRY TRUE TILDE STRING RETURN RAISE PLUS PASS NOT NONLOCAL NEWLINE MINUS LEFTPARENS LEFTCURLY LEFTBRACKET LAMBDA INTEGER IMPORT IF IDENTIFIER GLOBAL FROM FORMAT FOR FLOAT FINALLY FALSE EXCEPT EOF ELSE ELLIPSES DELETE DEFINE DEDENT CONTINUE COMPLEX CLASS BYTES BREAK AWAIT AT ASYNC ASTERIKS ASSERT ]
handler -> EXCEPT . expression COLON block [ YIELD WITH WHILE TRY TRUE TILDE STRING RETURN RAISE PLUS PASS NOT NONLOCAL NEWLINE MINUS LEFTPARENS LEFTCURLY LEFTBRACKET LAMBDA INTEGER IMPORT IF IDENTIFIER GLOBAL FROM FORMAT FOR FLOAT FINALLY FALSE EXCEPT EOF ELSE ELLIPSES DELETE DEFINE DEDENT CONTINUE COMPLEX CLASS BYTES BREAK AWAIT AT ASYNC ASTERIKS ASSERT ]
handler -> EXCEPT . expression AS identifier COLON block [ YIELD WITH WHILE TRY TRUE TILDE STRING RETURN RAISE PLUS PASS NOT NONLOCAL NEWLINE MINUS LEFTPARENS LEFTCURLY LEFTBRACKET LAMBDA INTEGER IMPORT IF IDENTIFIER GLOBAL FROM FORMAT FOR FLOAT FINALLY FALSE EXCEPT EOF ELSE ELLIPSES DELETE DEFINE DEDENT CONTINUE COMPLEX CLASS BYTES BREAK AWAIT AT ASYNC ASTERIKS ASSERT ]
handler -> EXCEPT . expression COMMA identifier COLON block [ YIELD WITH WHILE TRY TRUE TILDE STRING RETURN RAISE PLUS PASS NOT NONLOCAL NEWLINE MINUS LEFTPARENS LEFTCURLY LEFTBRACKET LAMBDA INTEGER IMPORT IF IDENTIFIER GLOBAL FROM FORMAT FOR FLOAT FINALLY FALSE EXCEPT EOF ELSE ELLIPSES DELETE DEFINE DEDENT CONTINUE COMPLEX CLASS BYTES BREAK AWAIT AT ASYNC ASTERIKS ASSERT ]
handler -> EXCEPT . or_test COLON block [ YIELD WITH WHILE TRY TRUE TILDE STRING RETURN RAISE PLUS PASS NOT NONLOCAL NEWLINE MINUS LEFTPARENS LEFTCURLY LEFTBRACKET LAMBDA INTEGER IMPORT IF IDENTIFIER GLOBAL FROM FORMAT FOR FLOAT FINALLY FALSE EXCEPT EOF ELSE ELLIPSES DELETE DEFINE DEDENT CONTINUE COMPLEX CLASS BYTES BREAK AWAIT AT ASYNC ASTERIKS ASSERT ]
handler -> EXCEPT . or_test AS identifier COLON block [ YIELD WITH WHILE TRY TRUE TILDE STRING RETURN RAISE PLUS PASS NOT NONLOCAL NEWLINE MINUS LEFTPARENS LEFTCURLY LEFTBRACKET LAMBDA INTEGER IMPORT IF IDENTIFIER GLOBAL FROM FORMAT FOR FLOAT FINALLY FALSE EXCEPT EOF ELSE ELLIPSES DELETE DEFINE DEDENT CONTINUE COMPLEX CLASS BYTES BREAK AWAIT AT ASYNC ASTERIKS ASSERT ]
## Transitions:
-- On TRUE shift to state 4
-- On TILDE shift to state 5
-- On STRING shift to state 6
-- On PLUS shift to state 12
-- On NOT shift to state 17
-- On MINUS shift to state 14
-- On LEFTPARENS shift to state 15
-- On LEFTCURLY shift to state 18
-- On LEFTBRACKET shift to state 20
-- On INTEGER shift to state 22
-- On IDENTIFIER shift to state 23
-- On FORMAT shift to state 24
-- On FLOAT shift to state 26
-- On FALSE shift to state 27
-- On ELLIPSES shift to state 28
-- On COMPLEX shift to state 29
-- On COLON shift to state 402
-- On BYTES shift to state 30
-- On AWAIT shift to state 32
-- On ASYNC shift to state 33
-- On ASTERIKS shift to state 34
-- On set_or_dictionary shift to state 35
-- On or_test shift to state 404
-- On not_test shift to state 49
-- On nonempty_list(BYTES) shift to state 36
-- On identifier shift to state 37
-- On expression shift to state 411
-- On comparison shift to state 70
-- On atom shift to state 71
-- On and_test shift to state 72
## Reductions:

State 402:
## Known stack suffix:
## EXCEPT COLON
## LR(1) items:
handler -> EXCEPT COLON . block [ YIELD WITH WHILE TRY TRUE TILDE STRING RETURN RAISE PLUS PASS NOT NONLOCAL NEWLINE MINUS LEFTPARENS LEFTCURLY LEFTBRACKET LAMBDA INTEGER IMPORT IF IDENTIFIER GLOBAL FROM FORMAT FOR FLOAT FINALLY FALSE EXCEPT EOF ELSE ELLIPSES DELETE DEFINE DEDENT CONTINUE COMPLEX CLASS BYTES BREAK AWAIT AT ASYNC ASTERIKS ASSERT ]
## Transitions:
-- On YIELD shift to state 1
-- On TRUE shift to state 4
-- On TILDE shift to state 5
-- On STRING shift to state 6
-- On RETURN shift to state 234
-- On RAISE shift to state 236
-- On PLUS shift to state 12
-- On PASS shift to state 242
-- On NOT shift to state 17
-- On NONLOCAL shift to state 243
-- On NEWLINE shift to state 251
-- On MINUS shift to state 14
-- On LEFTPARENS shift to state 15
-- On LEFTCURLY shift to state 18
-- On LEFTBRACKET shift to state 20
-- On LAMBDA shift to state 21
-- On INTEGER shift to state 22
-- On IMPORT shift to state 253
-- On IDENTIFIER shift to state 23
-- On GLOBAL shift to state 276
-- On FROM shift to state 278
-- On FORMAT shift to state 24
-- On FLOAT shift to state 26
-- On FALSE shift to state 27
-- On ELLIPSES shift to state 28
-- On DELETE shift to state 291
-- On CONTINUE shift to state 293
-- On COMPLEX shift to state 29
-- On BYTES shift to state 30
-- On BREAK shift to state 294
-- On AWAIT shift to state 32
-- On ASYNC shift to state 33
-- On ASTERIKS shift to state 34
-- On ASSERT shift to state 295
-- On yield shift to state 299
-- On test_list shift to state 300
-- On test shift to state 75
-- On targets shift to state 336
-- On small_statement shift to state 348
-- On simple_statement shift to state 385
-- On set_or_dictionary shift to state 35
-- On separated_nonempty_list_indicator(COMMA,test) shift to state 80
-- On parser_generator_separated_nonempty_list_of_lists(SEMICOLON,small_statement) shift to state 386
-- On or_test shift to state 62
-- On not_test shift to state 49
-- On nonempty_list(NEWLINE) shift to state 388
-- On nonempty_list(BYTES) shift to state 36
-- On identifier shift to state 67
-- On expression shift to state 353
-- On comparison shift to state 70
-- On block shift to state 403
-- On atom shift to state 71
-- On and_test shift to state 72
## Reductions:

State 403:
## Known stack suffix:
## EXCEPT COLON block
## LR(1) items:
handler -> EXCEPT COLON block . [ YIELD WITH WHILE TRY TRUE TILDE STRING RETURN RAISE PLUS PASS NOT NONLOCAL NEWLINE MINUS LEFTPARENS LEFTCURLY LEFTBRACKET LAMBDA INTEGER IMPORT IF IDENTIFIER GLOBAL FROM FORMAT FOR FLOAT FINALLY FALSE EXCEPT EOF ELSE ELLIPSES DELETE DEFINE DEDENT CONTINUE COMPLEX CLASS BYTES BREAK AWAIT AT ASYNC ASTERIKS ASSERT ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production handler -> EXCEPT COLON block

State 404:
## Known stack suffix:
## EXCEPT or_test
## LR(1) items:
handler -> EXCEPT or_test . COLON block [ YIELD WITH WHILE TRY TRUE TILDE STRING RETURN RAISE PLUS PASS NOT NONLOCAL NEWLINE MINUS LEFTPARENS LEFTCURLY LEFTBRACKET LAMBDA INTEGER IMPORT IF IDENTIFIER GLOBAL FROM FORMAT FOR FLOAT FINALLY FALSE EXCEPT EOF ELSE ELLIPSES DELETE DEFINE DEDENT CONTINUE COMPLEX CLASS BYTES BREAK AWAIT AT ASYNC ASTERIKS ASSERT ]
handler -> EXCEPT or_test . AS identifier COLON block [ YIELD WITH WHILE TRY TRUE TILDE STRING RETURN RAISE PLUS PASS NOT NONLOCAL NEWLINE MINUS LEFTPARENS LEFTCURLY LEFTBRACKET LAMBDA INTEGER IMPORT IF IDENTIFIER GLOBAL FROM FORMAT FOR FLOAT FINALLY FALSE EXCEPT EOF ELSE ELLIPSES DELETE DEFINE DEDENT CONTINUE COMPLEX CLASS BYTES BREAK AWAIT AT ASYNC ASTERIKS ASSERT ]
## Transitions:
-- On COLON shift to state 405
-- On AS shift to state 407
## Reductions:

State 405:
## Known stack suffix:
## EXCEPT or_test COLON
## LR(1) items:
handler -> EXCEPT or_test COLON . block [ YIELD WITH WHILE TRY TRUE TILDE STRING RETURN RAISE PLUS PASS NOT NONLOCAL NEWLINE MINUS LEFTPARENS LEFTCURLY LEFTBRACKET LAMBDA INTEGER IMPORT IF IDENTIFIER GLOBAL FROM FORMAT FOR FLOAT FINALLY FALSE EXCEPT EOF ELSE ELLIPSES DELETE DEFINE DEDENT CONTINUE COMPLEX CLASS BYTES BREAK AWAIT AT ASYNC ASTERIKS ASSERT ]
## Transitions:
-- On YIELD shift to state 1
-- On TRUE shift to state 4
-- On TILDE shift to state 5
-- On STRING shift to state 6
-- On RETURN shift to state 234
-- On RAISE shift to state 236
-- On PLUS shift to state 12
-- On PASS shift to state 242
-- On NOT shift to state 17
-- On NONLOCAL shift to state 243
-- On NEWLINE shift to state 251
-- On MINUS shift to state 14
-- On LEFTPARENS shift to state 15
-- On LEFTCURLY shift to state 18
-- On LEFTBRACKET shift to state 20
-- On LAMBDA shift to state 21
-- On INTEGER shift to state 22
-- On IMPORT shift to state 253
-- On IDENTIFIER shift to state 23
-- On GLOBAL shift to state 276
-- On FROM shift to state 278
-- On FORMAT shift to state 24
-- On FLOAT shift to state 26
-- On FALSE shift to state 27
-- On ELLIPSES shift to state 28
-- On DELETE shift to state 291
-- On CONTINUE shift to state 293
-- On COMPLEX shift to state 29
-- On BYTES shift to state 30
-- On BREAK shift to state 294
-- On AWAIT shift to state 32
-- On ASYNC shift to state 33
-- On ASTERIKS shift to state 34
-- On ASSERT shift to state 295
-- On yield shift to state 299
-- On test_list shift to state 300
-- On test shift to state 75
-- On targets shift to state 336
-- On small_statement shift to state 348
-- On simple_statement shift to state 385
-- On set_or_dictionary shift to state 35
-- On separated_nonempty_list_indicator(COMMA,test) shift to state 80
-- On parser_generator_separated_nonempty_list_of_lists(SEMICOLON,small_statement) shift to state 386
-- On or_test shift to state 62
-- On not_test shift to state 49
-- On nonempty_list(NEWLINE) shift to state 388
-- On nonempty_list(BYTES) shift to state 36
-- On identifier shift to state 67
-- On expression shift to state 353
-- On comparison shift to state 70
-- On block shift to state 406
-- On atom shift to state 71
-- On and_test shift to state 72
## Reductions:

State 406:
## Known stack suffix:
## EXCEPT or_test COLON block
## LR(1) items:
handler -> EXCEPT or_test COLON block . [ YIELD WITH WHILE TRY TRUE TILDE STRING RETURN RAISE PLUS PASS NOT NONLOCAL NEWLINE MINUS LEFTPARENS LEFTCURLY LEFTBRACKET LAMBDA INTEGER IMPORT IF IDENTIFIER GLOBAL FROM FORMAT FOR FLOAT FINALLY FALSE EXCEPT EOF ELSE ELLIPSES DELETE DEFINE DEDENT CONTINUE COMPLEX CLASS BYTES BREAK AWAIT AT ASYNC ASTERIKS ASSERT ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production handler -> EXCEPT or_test COLON block

State 407:
## Known stack suffix:
## EXCEPT or_test AS
## LR(1) items:
handler -> EXCEPT or_test AS . identifier COLON block [ YIELD WITH WHILE TRY TRUE TILDE STRING RETURN RAISE PLUS PASS NOT NONLOCAL NEWLINE MINUS LEFTPARENS LEFTCURLY LEFTBRACKET LAMBDA INTEGER IMPORT IF IDENTIFIER GLOBAL FROM FORMAT FOR FLOAT FINALLY FALSE EXCEPT EOF ELSE ELLIPSES DELETE DEFINE DEDENT CONTINUE COMPLEX CLASS BYTES BREAK AWAIT AT ASYNC ASTERIKS ASSERT ]
## Transitions:
-- On IDENTIFIER shift to state 23
-- On ASYNC shift to state 33
-- On identifier shift to state 408
## Reductions:

State 408:
## Known stack suffix:
## EXCEPT or_test AS identifier
## LR(1) items:
handler -> EXCEPT or_test AS identifier . COLON block [ YIELD WITH WHILE TRY TRUE TILDE STRING RETURN RAISE PLUS PASS NOT NONLOCAL NEWLINE MINUS LEFTPARENS LEFTCURLY LEFTBRACKET LAMBDA INTEGER IMPORT IF IDENTIFIER GLOBAL FROM FORMAT FOR FLOAT FINALLY FALSE EXCEPT EOF ELSE ELLIPSES DELETE DEFINE DEDENT CONTINUE COMPLEX CLASS BYTES BREAK AWAIT AT ASYNC ASTERIKS ASSERT ]
## Transitions:
-- On COLON shift to state 409
## Reductions:

State 409:
## Known stack suffix:
## EXCEPT or_test AS identifier COLON
## LR(1) items:
handler -> EXCEPT or_test AS identifier COLON . block [ YIELD WITH WHILE TRY TRUE TILDE STRING RETURN RAISE PLUS PASS NOT NONLOCAL NEWLINE MINUS LEFTPARENS LEFTCURLY LEFTBRACKET LAMBDA INTEGER IMPORT IF IDENTIFIER GLOBAL FROM FORMAT FOR FLOAT FINALLY FALSE EXCEPT EOF ELSE ELLIPSES DELETE DEFINE DEDENT CONTINUE COMPLEX CLASS BYTES BREAK AWAIT AT ASYNC ASTERIKS ASSERT ]
## Transitions:
-- On YIELD shift to state 1
-- On TRUE shift to state 4
-- On TILDE shift to state 5
-- On STRING shift to state 6
-- On RETURN shift to state 234
-- On RAISE shift to state 236
-- On PLUS shift to state 12
-- On PASS shift to state 242
-- On NOT shift to state 17
-- On NONLOCAL shift to state 243
-- On NEWLINE shift to state 251
-- On MINUS shift to state 14
-- On LEFTPARENS shift to state 15
-- On LEFTCURLY shift to state 18
-- On LEFTBRACKET shift to state 20
-- On LAMBDA shift to state 21
-- On INTEGER shift to state 22
-- On IMPORT shift to state 253
-- On IDENTIFIER shift to state 23
-- On GLOBAL shift to state 276
-- On FROM shift to state 278
-- On FORMAT shift to state 24
-- On FLOAT shift to state 26
-- On FALSE shift to state 27
-- On ELLIPSES shift to state 28
-- On DELETE shift to state 291
-- On CONTINUE shift to state 293
-- On COMPLEX shift to state 29
-- On BYTES shift to state 30
-- On BREAK shift to state 294
-- On AWAIT shift to state 32
-- On ASYNC shift to state 33
-- On ASTERIKS shift to state 34
-- On ASSERT shift to state 295
-- On yield shift to state 299
-- On test_list shift to state 300
-- On test shift to state 75
-- On targets shift to state 336
-- On small_statement shift to state 348
-- On simple_statement shift to state 385
-- On set_or_dictionary shift to state 35
-- On separated_nonempty_list_indicator(COMMA,test) shift to state 80
-- On parser_generator_separated_nonempty_list_of_lists(SEMICOLON,small_statement) shift to state 386
-- On or_test shift to state 62
-- On not_test shift to state 49
-- On nonempty_list(NEWLINE) shift to state 388
-- On nonempty_list(BYTES) shift to state 36
-- On identifier shift to state 67
-- On expression shift to state 353
-- On comparison shift to state 70
-- On block shift to state 410
-- On atom shift to state 71
-- On and_test shift to state 72
## Reductions:

State 410:
## Known stack suffix:
## EXCEPT or_test AS identifier COLON block
## LR(1) items:
handler -> EXCEPT or_test AS identifier COLON block . [ YIELD WITH WHILE TRY TRUE TILDE STRING RETURN RAISE PLUS PASS NOT NONLOCAL NEWLINE MINUS LEFTPARENS LEFTCURLY LEFTBRACKET LAMBDA INTEGER IMPORT IF IDENTIFIER GLOBAL FROM FORMAT FOR FLOAT FINALLY FALSE EXCEPT EOF ELSE ELLIPSES DELETE DEFINE DEDENT CONTINUE COMPLEX CLASS BYTES BREAK AWAIT AT ASYNC ASTERIKS ASSERT ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production handler -> EXCEPT or_test AS identifier COLON block

State 411:
## Known stack suffix:
## EXCEPT expression
## LR(1) items:
atom -> expression . PLUS expression [ SLASH RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUS PERCENT OR NOT MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN HAT EXCLAMATIONMARK DOUBLEEQUALS DOT COMMA COLON BAR AT ASTERIKS AS AND AMPERSAND ]
atom -> expression . AT expression [ SLASH RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUS PERCENT OR NOT MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN HAT EXCLAMATIONMARK DOUBLEEQUALS DOT COMMA COLON BAR AT ASTERIKS AS AND AMPERSAND ]
atom -> expression . AMPERSAND expression [ SLASH RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUS PERCENT OR NOT MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN HAT EXCLAMATIONMARK DOUBLEEQUALS DOT COMMA COLON BAR AT ASTERIKS AS AND AMPERSAND ]
atom -> expression . BAR expression [ SLASH RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUS PERCENT OR NOT MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN HAT EXCLAMATIONMARK DOUBLEEQUALS DOT COMMA COLON BAR AT ASTERIKS AS AND AMPERSAND ]
atom -> expression . HAT expression [ SLASH RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUS PERCENT OR NOT MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN HAT EXCLAMATIONMARK DOUBLEEQUALS DOT COMMA COLON BAR AT ASTERIKS AS AND AMPERSAND ]
atom -> expression . SLASH SLASH expression [ SLASH RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUS PERCENT OR NOT MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN HAT EXCLAMATIONMARK DOUBLEEQUALS DOT COMMA COLON BAR AT ASTERIKS AS AND AMPERSAND ]
atom -> expression . SLASH expression [ SLASH RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUS PERCENT OR NOT MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN HAT EXCLAMATIONMARK DOUBLEEQUALS DOT COMMA COLON BAR AT ASTERIKS AS AND AMPERSAND ]
atom -> expression . LEFTANGLELEFTANGLE expression [ SLASH RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUS PERCENT OR NOT MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN HAT EXCLAMATIONMARK DOUBLEEQUALS DOT COMMA COLON BAR AT ASTERIKS AS AND AMPERSAND ]
atom -> expression . PERCENT expression [ SLASH RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUS PERCENT OR NOT MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN HAT EXCLAMATIONMARK DOUBLEEQUALS DOT COMMA COLON BAR AT ASTERIKS AS AND AMPERSAND ]
atom -> expression . ASTERIKS ASTERIKS expression [ SLASH RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUS PERCENT OR NOT MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN HAT EXCLAMATIONMARK DOUBLEEQUALS DOT COMMA COLON BAR AT ASTERIKS AS AND AMPERSAND ]
atom -> expression . ASTERIKS expression [ SLASH RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUS PERCENT OR NOT MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN HAT EXCLAMATIONMARK DOUBLEEQUALS DOT COMMA COLON BAR AT ASTERIKS AS AND AMPERSAND ]
atom -> expression . RIGHTANGLERIGHTANGLE expression [ SLASH RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUS PERCENT OR NOT MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN HAT EXCLAMATIONMARK DOUBLEEQUALS DOT COMMA COLON BAR AT ASTERIKS AS AND AMPERSAND ]
atom -> expression . MINUS expression [ SLASH RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUS PERCENT OR NOT MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN HAT EXCLAMATIONMARK DOUBLEEQUALS DOT COMMA COLON BAR AT ASTERIKS AS AND AMPERSAND ]
atom -> expression . LEFTPARENS arguments RIGHTPARENS [ SLASH RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUS PERCENT OR NOT MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN HAT EXCLAMATIONMARK DOUBLEEQUALS DOT COMMA COLON BAR AT ASTERIKS AS AND AMPERSAND ]
comparison -> expression . [ OR COLON AS AND ]
comparison -> expression . nonempty_list(comparison_operator) [ OR COLON AS AND ]
expression -> expression . DOT identifier [ SLASH RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUS PERCENT OR NOT MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN HAT EXCLAMATIONMARK DOUBLEEQUALS DOT COMMA COLON BAR AT ASTERIKS AS AND AMPERSAND ]
expression -> expression . LEFTBRACKET parser_generator_separated_nonempty_list(COMMA,subscript_key) RIGHTBRACKET [ SLASH RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUS PERCENT OR NOT MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN HAT EXCLAMATIONMARK DOUBLEEQUALS DOT COMMA COLON BAR AT ASTERIKS AS AND AMPERSAND ]
handler -> EXCEPT expression . COLON block [ YIELD WITH WHILE TRY TRUE TILDE STRING RETURN RAISE PLUS PASS NOT NONLOCAL NEWLINE MINUS LEFTPARENS LEFTCURLY LEFTBRACKET LAMBDA INTEGER IMPORT IF IDENTIFIER GLOBAL FROM FORMAT FOR FLOAT FINALLY FALSE EXCEPT EOF ELSE ELLIPSES DELETE DEFINE DEDENT CONTINUE COMPLEX CLASS BYTES BREAK AWAIT AT ASYNC ASTERIKS ASSERT ]
handler -> EXCEPT expression . AS identifier COLON block [ YIELD WITH WHILE TRY TRUE TILDE STRING RETURN RAISE PLUS PASS NOT NONLOCAL NEWLINE MINUS LEFTPARENS LEFTCURLY LEFTBRACKET LAMBDA INTEGER IMPORT IF IDENTIFIER GLOBAL FROM FORMAT FOR FLOAT FINALLY FALSE EXCEPT EOF ELSE ELLIPSES DELETE DEFINE DEDENT CONTINUE COMPLEX CLASS BYTES BREAK AWAIT AT ASYNC ASTERIKS ASSERT ]
handler -> EXCEPT expression . COMMA identifier COLON block [ YIELD WITH WHILE TRY TRUE TILDE STRING RETURN RAISE PLUS PASS NOT NONLOCAL NEWLINE MINUS LEFTPARENS LEFTCURLY LEFTBRACKET LAMBDA INTEGER IMPORT IF IDENTIFIER GLOBAL FROM FORMAT FOR FLOAT FINALLY FALSE EXCEPT EOF ELSE ELLIPSES DELETE DEFINE DEDENT CONTINUE COMPLEX CLASS BYTES BREAK AWAIT AT ASYNC ASTERIKS ASSERT ]
## Transitions:
-- On SLASH shift to state 52
-- On RIGHTANGLERIGHTANGLE shift to state 95
-- On RIGHTANGLEEQUALS shift to state 115
-- On RIGHTANGLE shift to state 117
-- On PLUS shift to state 97
-- On PERCENT shift to state 99
-- On NOT shift to state 119
-- On MINUS shift to state 104
-- On LEFTPARENS shift to state 39
-- On LEFTBRACKET shift to state 55
-- On LEFTANGLELEFTANGLE shift to state 106
-- On LEFTANGLEEQUALS shift to state 122
-- On LEFTANGLE shift to state 124
-- On ISNOT shift to state 126
-- On IS shift to state 128
-- On IN shift to state 130
-- On HAT shift to state 108
-- On EXCLAMATIONMARK shift to state 132
-- On DOUBLEEQUALS shift to state 135
-- On DOT shift to state 90
-- On COMMA shift to state 412
-- On COLON shift to state 416
-- On BAR shift to state 112
-- On AT shift to state 92
-- On ASTERIKS shift to state 101
-- On AS shift to state 418
-- On AMPERSAND shift to state 110
-- On nonempty_list(comparison_operator) shift to state 137
-- On comparison_operator shift to state 138
## Reductions:
-- On OR AND
--   reduce production comparison -> expression

State 412:
## Known stack suffix:
## EXCEPT expression COMMA
## LR(1) items:
handler -> EXCEPT expression COMMA . identifier COLON block [ YIELD WITH WHILE TRY TRUE TILDE STRING RETURN RAISE PLUS PASS NOT NONLOCAL NEWLINE MINUS LEFTPARENS LEFTCURLY LEFTBRACKET LAMBDA INTEGER IMPORT IF IDENTIFIER GLOBAL FROM FORMAT FOR FLOAT FINALLY FALSE EXCEPT EOF ELSE ELLIPSES DELETE DEFINE DEDENT CONTINUE COMPLEX CLASS BYTES BREAK AWAIT AT ASYNC ASTERIKS ASSERT ]
## Transitions:
-- On IDENTIFIER shift to state 23
-- On ASYNC shift to state 33
-- On identifier shift to state 413
## Reductions:

State 413:
## Known stack suffix:
## EXCEPT expression COMMA identifier
## LR(1) items:
handler -> EXCEPT expression COMMA identifier . COLON block [ YIELD WITH WHILE TRY TRUE TILDE STRING RETURN RAISE PLUS PASS NOT NONLOCAL NEWLINE MINUS LEFTPARENS LEFTCURLY LEFTBRACKET LAMBDA INTEGER IMPORT IF IDENTIFIER GLOBAL FROM FORMAT FOR FLOAT FINALLY FALSE EXCEPT EOF ELSE ELLIPSES DELETE DEFINE DEDENT CONTINUE COMPLEX CLASS BYTES BREAK AWAIT AT ASYNC ASTERIKS ASSERT ]
## Transitions:
-- On COLON shift to state 414
## Reductions:

State 414:
## Known stack suffix:
## EXCEPT expression COMMA identifier COLON
## LR(1) items:
handler -> EXCEPT expression COMMA identifier COLON . block [ YIELD WITH WHILE TRY TRUE TILDE STRING RETURN RAISE PLUS PASS NOT NONLOCAL NEWLINE MINUS LEFTPARENS LEFTCURLY LEFTBRACKET LAMBDA INTEGER IMPORT IF IDENTIFIER GLOBAL FROM FORMAT FOR FLOAT FINALLY FALSE EXCEPT EOF ELSE ELLIPSES DELETE DEFINE DEDENT CONTINUE COMPLEX CLASS BYTES BREAK AWAIT AT ASYNC ASTERIKS ASSERT ]
## Transitions:
-- On YIELD shift to state 1
-- On TRUE shift to state 4
-- On TILDE shift to state 5
-- On STRING shift to state 6
-- On RETURN shift to state 234
-- On RAISE shift to state 236
-- On PLUS shift to state 12
-- On PASS shift to state 242
-- On NOT shift to state 17
-- On NONLOCAL shift to state 243
-- On NEWLINE shift to state 251
-- On MINUS shift to state 14
-- On LEFTPARENS shift to state 15
-- On LEFTCURLY shift to state 18
-- On LEFTBRACKET shift to state 20
-- On LAMBDA shift to state 21
-- On INTEGER shift to state 22
-- On IMPORT shift to state 253
-- On IDENTIFIER shift to state 23
-- On GLOBAL shift to state 276
-- On FROM shift to state 278
-- On FORMAT shift to state 24
-- On FLOAT shift to state 26
-- On FALSE shift to state 27
-- On ELLIPSES shift to state 28
-- On DELETE shift to state 291
-- On CONTINUE shift to state 293
-- On COMPLEX shift to state 29
-- On BYTES shift to state 30
-- On BREAK shift to state 294
-- On AWAIT shift to state 32
-- On ASYNC shift to state 33
-- On ASTERIKS shift to state 34
-- On ASSERT shift to state 295
-- On yield shift to state 299
-- On test_list shift to state 300
-- On test shift to state 75
-- On targets shift to state 336
-- On small_statement shift to state 348
-- On simple_statement shift to state 385
-- On set_or_dictionary shift to state 35
-- On separated_nonempty_list_indicator(COMMA,test) shift to state 80
-- On parser_generator_separated_nonempty_list_of_lists(SEMICOLON,small_statement) shift to state 386
-- On or_test shift to state 62
-- On not_test shift to state 49
-- On nonempty_list(NEWLINE) shift to state 388
-- On nonempty_list(BYTES) shift to state 36
-- On identifier shift to state 67
-- On expression shift to state 353
-- On comparison shift to state 70
-- On block shift to state 415
-- On atom shift to state 71
-- On and_test shift to state 72
## Reductions:

State 415:
## Known stack suffix:
## EXCEPT expression COMMA identifier COLON block
## LR(1) items:
handler -> EXCEPT expression COMMA identifier COLON block . [ YIELD WITH WHILE TRY TRUE TILDE STRING RETURN RAISE PLUS PASS NOT NONLOCAL NEWLINE MINUS LEFTPARENS LEFTCURLY LEFTBRACKET LAMBDA INTEGER IMPORT IF IDENTIFIER GLOBAL FROM FORMAT FOR FLOAT FINALLY FALSE EXCEPT EOF ELSE ELLIPSES DELETE DEFINE DEDENT CONTINUE COMPLEX CLASS BYTES BREAK AWAIT AT ASYNC ASTERIKS ASSERT ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production handler -> EXCEPT expression COMMA identifier COLON block

State 416:
## Known stack suffix:
## EXCEPT expression COLON
## LR(1) items:
handler -> EXCEPT expression COLON . block [ YIELD WITH WHILE TRY TRUE TILDE STRING RETURN RAISE PLUS PASS NOT NONLOCAL NEWLINE MINUS LEFTPARENS LEFTCURLY LEFTBRACKET LAMBDA INTEGER IMPORT IF IDENTIFIER GLOBAL FROM FORMAT FOR FLOAT FINALLY FALSE EXCEPT EOF ELSE ELLIPSES DELETE DEFINE DEDENT CONTINUE COMPLEX CLASS BYTES BREAK AWAIT AT ASYNC ASTERIKS ASSERT ]
## Transitions:
-- On YIELD shift to state 1
-- On TRUE shift to state 4
-- On TILDE shift to state 5
-- On STRING shift to state 6
-- On RETURN shift to state 234
-- On RAISE shift to state 236
-- On PLUS shift to state 12
-- On PASS shift to state 242
-- On NOT shift to state 17
-- On NONLOCAL shift to state 243
-- On NEWLINE shift to state 251
-- On MINUS shift to state 14
-- On LEFTPARENS shift to state 15
-- On LEFTCURLY shift to state 18
-- On LEFTBRACKET shift to state 20
-- On LAMBDA shift to state 21
-- On INTEGER shift to state 22
-- On IMPORT shift to state 253
-- On IDENTIFIER shift to state 23
-- On GLOBAL shift to state 276
-- On FROM shift to state 278
-- On FORMAT shift to state 24
-- On FLOAT shift to state 26
-- On FALSE shift to state 27
-- On ELLIPSES shift to state 28
-- On DELETE shift to state 291
-- On CONTINUE shift to state 293
-- On COMPLEX shift to state 29
-- On BYTES shift to state 30
-- On BREAK shift to state 294
-- On AWAIT shift to state 32
-- On ASYNC shift to state 33
-- On ASTERIKS shift to state 34
-- On ASSERT shift to state 295
-- On yield shift to state 299
-- On test_list shift to state 300
-- On test shift to state 75
-- On targets shift to state 336
-- On small_statement shift to state 348
-- On simple_statement shift to state 385
-- On set_or_dictionary shift to state 35
-- On separated_nonempty_list_indicator(COMMA,test) shift to state 80
-- On parser_generator_separated_nonempty_list_of_lists(SEMICOLON,small_statement) shift to state 386
-- On or_test shift to state 62
-- On not_test shift to state 49
-- On nonempty_list(NEWLINE) shift to state 388
-- On nonempty_list(BYTES) shift to state 36
-- On identifier shift to state 67
-- On expression shift to state 353
-- On comparison shift to state 70
-- On block shift to state 417
-- On atom shift to state 71
-- On and_test shift to state 72
## Reductions:

State 417:
## Known stack suffix:
## EXCEPT expression COLON block
## LR(1) items:
handler -> EXCEPT expression COLON block . [ YIELD WITH WHILE TRY TRUE TILDE STRING RETURN RAISE PLUS PASS NOT NONLOCAL NEWLINE MINUS LEFTPARENS LEFTCURLY LEFTBRACKET LAMBDA INTEGER IMPORT IF IDENTIFIER GLOBAL FROM FORMAT FOR FLOAT FINALLY FALSE EXCEPT EOF ELSE ELLIPSES DELETE DEFINE DEDENT CONTINUE COMPLEX CLASS BYTES BREAK AWAIT AT ASYNC ASTERIKS ASSERT ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production handler -> EXCEPT expression COLON block

State 418:
## Known stack suffix:
## EXCEPT expression AS
## LR(1) items:
handler -> EXCEPT expression AS . identifier COLON block [ YIELD WITH WHILE TRY TRUE TILDE STRING RETURN RAISE PLUS PASS NOT NONLOCAL NEWLINE MINUS LEFTPARENS LEFTCURLY LEFTBRACKET LAMBDA INTEGER IMPORT IF IDENTIFIER GLOBAL FROM FORMAT FOR FLOAT FINALLY FALSE EXCEPT EOF ELSE ELLIPSES DELETE DEFINE DEDENT CONTINUE COMPLEX CLASS BYTES BREAK AWAIT AT ASYNC ASTERIKS ASSERT ]
## Transitions:
-- On IDENTIFIER shift to state 23
-- On ASYNC shift to state 33
-- On identifier shift to state 419
## Reductions:

State 419:
## Known stack suffix:
## EXCEPT expression AS identifier
## LR(1) items:
handler -> EXCEPT expression AS identifier . COLON block [ YIELD WITH WHILE TRY TRUE TILDE STRING RETURN RAISE PLUS PASS NOT NONLOCAL NEWLINE MINUS LEFTPARENS LEFTCURLY LEFTBRACKET LAMBDA INTEGER IMPORT IF IDENTIFIER GLOBAL FROM FORMAT FOR FLOAT FINALLY FALSE EXCEPT EOF ELSE ELLIPSES DELETE DEFINE DEDENT CONTINUE COMPLEX CLASS BYTES BREAK AWAIT AT ASYNC ASTERIKS ASSERT ]
## Transitions:
-- On COLON shift to state 420
## Reductions:

State 420:
## Known stack suffix:
## EXCEPT expression AS identifier COLON
## LR(1) items:
handler -> EXCEPT expression AS identifier COLON . block [ YIELD WITH WHILE TRY TRUE TILDE STRING RETURN RAISE PLUS PASS NOT NONLOCAL NEWLINE MINUS LEFTPARENS LEFTCURLY LEFTBRACKET LAMBDA INTEGER IMPORT IF IDENTIFIER GLOBAL FROM FORMAT FOR FLOAT FINALLY FALSE EXCEPT EOF ELSE ELLIPSES DELETE DEFINE DEDENT CONTINUE COMPLEX CLASS BYTES BREAK AWAIT AT ASYNC ASTERIKS ASSERT ]
## Transitions:
-- On YIELD shift to state 1
-- On TRUE shift to state 4
-- On TILDE shift to state 5
-- On STRING shift to state 6
-- On RETURN shift to state 234
-- On RAISE shift to state 236
-- On PLUS shift to state 12
-- On PASS shift to state 242
-- On NOT shift to state 17
-- On NONLOCAL shift to state 243
-- On NEWLINE shift to state 251
-- On MINUS shift to state 14
-- On LEFTPARENS shift to state 15
-- On LEFTCURLY shift to state 18
-- On LEFTBRACKET shift to state 20
-- On LAMBDA shift to state 21
-- On INTEGER shift to state 22
-- On IMPORT shift to state 253
-- On IDENTIFIER shift to state 23
-- On GLOBAL shift to state 276
-- On FROM shift to state 278
-- On FORMAT shift to state 24
-- On FLOAT shift to state 26
-- On FALSE shift to state 27
-- On ELLIPSES shift to state 28
-- On DELETE shift to state 291
-- On CONTINUE shift to state 293
-- On COMPLEX shift to state 29
-- On BYTES shift to state 30
-- On BREAK shift to state 294
-- On AWAIT shift to state 32
-- On ASYNC shift to state 33
-- On ASTERIKS shift to state 34
-- On ASSERT shift to state 295
-- On yield shift to state 299
-- On test_list shift to state 300
-- On test shift to state 75
-- On targets shift to state 336
-- On small_statement shift to state 348
-- On simple_statement shift to state 385
-- On set_or_dictionary shift to state 35
-- On separated_nonempty_list_indicator(COMMA,test) shift to state 80
-- On parser_generator_separated_nonempty_list_of_lists(SEMICOLON,small_statement) shift to state 386
-- On or_test shift to state 62
-- On not_test shift to state 49
-- On nonempty_list(NEWLINE) shift to state 388
-- On nonempty_list(BYTES) shift to state 36
-- On identifier shift to state 67
-- On expression shift to state 353
-- On comparison shift to state 70
-- On block shift to state 421
-- On atom shift to state 71
-- On and_test shift to state 72
## Reductions:

State 421:
## Known stack suffix:
## EXCEPT expression AS identifier COLON block
## LR(1) items:
handler -> EXCEPT expression AS identifier COLON block . [ YIELD WITH WHILE TRY TRUE TILDE STRING RETURN RAISE PLUS PASS NOT NONLOCAL NEWLINE MINUS LEFTPARENS LEFTCURLY LEFTBRACKET LAMBDA INTEGER IMPORT IF IDENTIFIER GLOBAL FROM FORMAT FOR FLOAT FINALLY FALSE EXCEPT EOF ELSE ELLIPSES DELETE DEFINE DEDENT CONTINUE COMPLEX CLASS BYTES BREAK AWAIT AT ASYNC ASTERIKS ASSERT ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production handler -> EXCEPT expression AS identifier COLON block

State 422:
## Known stack suffix:
## TRY COLON block list(handler)
## LR(1) items:
compound_statement -> TRY COLON block list(handler) . named_optional_block(ELSE) named_optional_block(FINALLY) [ YIELD WITH WHILE TRY TRUE TILDE STRING RETURN RAISE PLUS PASS NOT NONLOCAL NEWLINE MINUS LEFTPARENS LEFTCURLY LEFTBRACKET LAMBDA INTEGER IMPORT IF IDENTIFIER GLOBAL FROM FORMAT FOR FLOAT FALSE EOF ELLIPSES DELETE DEFINE DEDENT CONTINUE COMPLEX CLASS BYTES BREAK AWAIT AT ASYNC ASTERIKS ASSERT ]
## Transitions:
-- On ELSE shift to state 394
-- On named_optional_block(ELSE) shift to state 423
## Reductions:
-- On YIELD WITH WHILE TRY TRUE TILDE STRING RETURN RAISE PLUS PASS NOT NONLOCAL NEWLINE MINUS LEFTPARENS LEFTCURLY LEFTBRACKET LAMBDA INTEGER IMPORT IF IDENTIFIER GLOBAL FROM FORMAT FOR FLOAT FINALLY FALSE EOF ELLIPSES DELETE DEFINE DEDENT CONTINUE COMPLEX CLASS BYTES BREAK AWAIT AT ASYNC ASTERIKS ASSERT
--   reduce production named_optional_block(ELSE) ->

State 423:
## Known stack suffix:
## TRY COLON block list(handler) named_optional_block(ELSE)
## LR(1) items:
compound_statement -> TRY COLON block list(handler) named_optional_block(ELSE) . named_optional_block(FINALLY) [ YIELD WITH WHILE TRY TRUE TILDE STRING RETURN RAISE PLUS PASS NOT NONLOCAL NEWLINE MINUS LEFTPARENS LEFTCURLY LEFTBRACKET LAMBDA INTEGER IMPORT IF IDENTIFIER GLOBAL FROM FORMAT FOR FLOAT FALSE EOF ELLIPSES DELETE DEFINE DEDENT CONTINUE COMPLEX CLASS BYTES BREAK AWAIT AT ASYNC ASTERIKS ASSERT ]
## Transitions:
-- On FINALLY shift to state 424
-- On named_optional_block(FINALLY) shift to state 427
## Reductions:
-- On YIELD WITH WHILE TRY TRUE TILDE STRING RETURN RAISE PLUS PASS NOT NONLOCAL NEWLINE MINUS LEFTPARENS LEFTCURLY LEFTBRACKET LAMBDA INTEGER IMPORT IF IDENTIFIER GLOBAL FROM FORMAT FOR FLOAT FALSE EOF ELLIPSES DELETE DEFINE DEDENT CONTINUE COMPLEX CLASS BYTES BREAK AWAIT AT ASYNC ASTERIKS ASSERT
--   reduce production named_optional_block(FINALLY) ->

State 424:
## Known stack suffix:
## FINALLY
## LR(1) items:
named_optional_block(FINALLY) -> FINALLY . COLON block [ YIELD WITH WHILE TRY TRUE TILDE STRING RETURN RAISE PLUS PASS NOT NONLOCAL NEWLINE MINUS LEFTPARENS LEFTCURLY LEFTBRACKET LAMBDA INTEGER IMPORT IF IDENTIFIER GLOBAL FROM FORMAT FOR FLOAT FALSE EOF ELLIPSES DELETE DEFINE DEDENT CONTINUE COMPLEX CLASS BYTES BREAK AWAIT AT ASYNC ASTERIKS ASSERT ]
## Transitions:
-- On COLON shift to state 425
## Reductions:

State 425:
## Known stack suffix:
## FINALLY COLON
## LR(1) items:
named_optional_block(FINALLY) -> FINALLY COLON . block [ YIELD WITH WHILE TRY TRUE TILDE STRING RETURN RAISE PLUS PASS NOT NONLOCAL NEWLINE MINUS LEFTPARENS LEFTCURLY LEFTBRACKET LAMBDA INTEGER IMPORT IF IDENTIFIER GLOBAL FROM FORMAT FOR FLOAT FALSE EOF ELLIPSES DELETE DEFINE DEDENT CONTINUE COMPLEX CLASS BYTES BREAK AWAIT AT ASYNC ASTERIKS ASSERT ]
## Transitions:
-- On YIELD shift to state 1
-- On TRUE shift to state 4
-- On TILDE shift to state 5
-- On STRING shift to state 6
-- On RETURN shift to state 234
-- On RAISE shift to state 236
-- On PLUS shift to state 12
-- On PASS shift to state 242
-- On NOT shift to state 17
-- On NONLOCAL shift to state 243
-- On NEWLINE shift to state 251
-- On MINUS shift to state 14
-- On LEFTPARENS shift to state 15
-- On LEFTCURLY shift to state 18
-- On LEFTBRACKET shift to state 20
-- On LAMBDA shift to state 21
-- On INTEGER shift to state 22
-- On IMPORT shift to state 253
-- On IDENTIFIER shift to state 23
-- On GLOBAL shift to state 276
-- On FROM shift to state 278
-- On FORMAT shift to state 24
-- On FLOAT shift to state 26
-- On FALSE shift to state 27
-- On ELLIPSES shift to state 28
-- On DELETE shift to state 291
-- On CONTINUE shift to state 293
-- On COMPLEX shift to state 29
-- On BYTES shift to state 30
-- On BREAK shift to state 294
-- On AWAIT shift to state 32
-- On ASYNC shift to state 33
-- On ASTERIKS shift to state 34
-- On ASSERT shift to state 295
-- On yield shift to state 299
-- On test_list shift to state 300
-- On test shift to state 75
-- On targets shift to state 336
-- On small_statement shift to state 348
-- On simple_statement shift to state 385
-- On set_or_dictionary shift to state 35
-- On separated_nonempty_list_indicator(COMMA,test) shift to state 80
-- On parser_generator_separated_nonempty_list_of_lists(SEMICOLON,small_statement) shift to state 386
-- On or_test shift to state 62
-- On not_test shift to state 49
-- On nonempty_list(NEWLINE) shift to state 388
-- On nonempty_list(BYTES) shift to state 36
-- On identifier shift to state 67
-- On expression shift to state 353
-- On comparison shift to state 70
-- On block shift to state 426
-- On atom shift to state 71
-- On and_test shift to state 72
## Reductions:

State 426:
## Known stack suffix:
## FINALLY COLON block
## LR(1) items:
named_optional_block(FINALLY) -> FINALLY COLON block . [ YIELD WITH WHILE TRY TRUE TILDE STRING RETURN RAISE PLUS PASS NOT NONLOCAL NEWLINE MINUS LEFTPARENS LEFTCURLY LEFTBRACKET LAMBDA INTEGER IMPORT IF IDENTIFIER GLOBAL FROM FORMAT FOR FLOAT FALSE EOF ELLIPSES DELETE DEFINE DEDENT CONTINUE COMPLEX CLASS BYTES BREAK AWAIT AT ASYNC ASTERIKS ASSERT ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production named_optional_block(FINALLY) -> FINALLY COLON block

State 427:
## Known stack suffix:
## TRY COLON block list(handler) named_optional_block(ELSE) named_optional_block(FINALLY)
## LR(1) items:
compound_statement -> TRY COLON block list(handler) named_optional_block(ELSE) named_optional_block(FINALLY) . [ YIELD WITH WHILE TRY TRUE TILDE STRING RETURN RAISE PLUS PASS NOT NONLOCAL NEWLINE MINUS LEFTPARENS LEFTCURLY LEFTBRACKET LAMBDA INTEGER IMPORT IF IDENTIFIER GLOBAL FROM FORMAT FOR FLOAT FALSE EOF ELLIPSES DELETE DEFINE DEDENT CONTINUE COMPLEX CLASS BYTES BREAK AWAIT AT ASYNC ASTERIKS ASSERT ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production compound_statement -> TRY COLON block list(handler) named_optional_block(ELSE) named_optional_block(FINALLY)

State 428:
## Known stack suffix:
## handler
## LR(1) items:
list(handler) -> handler . list(handler) [ YIELD WITH WHILE TRY TRUE TILDE STRING RETURN RAISE PLUS PASS NOT NONLOCAL NEWLINE MINUS LEFTPARENS LEFTCURLY LEFTBRACKET LAMBDA INTEGER IMPORT IF IDENTIFIER GLOBAL FROM FORMAT FOR FLOAT FINALLY FALSE EOF ELSE ELLIPSES DELETE DEFINE DEDENT CONTINUE COMPLEX CLASS BYTES BREAK AWAIT AT ASYNC ASTERIKS ASSERT ]
## Transitions:
-- On EXCEPT shift to state 401
-- On list(handler) shift to state 429
-- On handler shift to state 428
## Reductions:
-- On YIELD WITH WHILE TRY TRUE TILDE STRING RETURN RAISE PLUS PASS NOT NONLOCAL NEWLINE MINUS LEFTPARENS LEFTCURLY LEFTBRACKET LAMBDA INTEGER IMPORT IF IDENTIFIER GLOBAL FROM FORMAT FOR FLOAT FINALLY FALSE EOF ELSE ELLIPSES DELETE DEFINE DEDENT CONTINUE COMPLEX CLASS BYTES BREAK AWAIT AT ASYNC ASTERIKS ASSERT
--   reduce production list(handler) ->

State 429:
## Known stack suffix:
## handler list(handler)
## LR(1) items:
list(handler) -> handler list(handler) . [ YIELD WITH WHILE TRY TRUE TILDE STRING RETURN RAISE PLUS PASS NOT NONLOCAL NEWLINE MINUS LEFTPARENS LEFTCURLY LEFTBRACKET LAMBDA INTEGER IMPORT IF IDENTIFIER GLOBAL FROM FORMAT FOR FLOAT FINALLY FALSE EOF ELSE ELLIPSES DELETE DEFINE DEDENT CONTINUE COMPLEX CLASS BYTES BREAK AWAIT AT ASYNC ASTERIKS ASSERT ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production list(handler) -> handler list(handler)

State 430:
## Known stack suffix:
## NEWLINE
## LR(1) items:
statements -> NEWLINE . statements [ EOF DEDENT ]
## Transitions:
-- On YIELD shift to state 1
-- On WITH shift to state 220
-- On WHILE shift to state 390
-- On TRY shift to state 398
-- On TRUE shift to state 4
-- On TILDE shift to state 5
-- On STRING shift to state 6
-- On RETURN shift to state 234
-- On RAISE shift to state 236
-- On PLUS shift to state 12
-- On PASS shift to state 242
-- On NOT shift to state 17
-- On NONLOCAL shift to state 243
-- On NEWLINE shift to state 430
-- On MINUS shift to state 14
-- On LEFTPARENS shift to state 15
-- On LEFTCURLY shift to state 18
-- On LEFTBRACKET shift to state 20
-- On LAMBDA shift to state 21
-- On INTEGER shift to state 22
-- On IMPORT shift to state 253
-- On IF shift to state 431
-- On IDENTIFIER shift to state 23
-- On GLOBAL shift to state 276
-- On FROM shift to state 278
-- On FORMAT shift to state 24
-- On FOR shift to state 439
-- On FLOAT shift to state 26
-- On FALSE shift to state 27
-- On ELLIPSES shift to state 28
-- On DELETE shift to state 291
-- On DEFINE shift to state 447
-- On CONTINUE shift to state 293
-- On COMPLEX shift to state 29
-- On CLASS shift to state 493
-- On BYTES shift to state 30
-- On BREAK shift to state 294
-- On AWAIT shift to state 32
-- On AT shift to state 502
-- On ASYNC shift to state 509
-- On ASTERIKS shift to state 34
-- On ASSERT shift to state 295
-- On yield shift to state 299
-- On test_list shift to state 300
-- On test shift to state 75
-- On targets shift to state 336
-- On statements shift to state 527
-- On statement shift to state 514
-- On small_statement shift to state 348
-- On simple_statement shift to state 516
-- On set_or_dictionary shift to state 35
-- On separated_nonempty_list_indicator(COMMA,test) shift to state 80
-- On parser_generator_separated_nonempty_list_of_lists(SEMICOLON,small_statement) shift to state 386
-- On or_test shift to state 62
-- On not_test shift to state 49
-- On nonempty_list(decorator) shift to state 517
-- On nonempty_list(BYTES) shift to state 36
-- On identifier shift to state 67
-- On expression shift to state 353
-- On decorator shift to state 521
-- On decorated_statement shift to state 523
-- On compound_statement shift to state 524
-- On comparison shift to state 70
-- On atom shift to state 71
-- On async_statement shift to state 525
-- On and_test shift to state 72
## Reductions:
-- On EOF DEDENT
--   reduce production statements ->

State 431:
## Known stack suffix:
## IF
## LR(1) items:
compound_statement -> IF . conditional [ YIELD WITH WHILE TRY TRUE TILDE STRING RETURN RAISE PLUS PASS NOT NONLOCAL NEWLINE MINUS LEFTPARENS LEFTCURLY LEFTBRACKET LAMBDA INTEGER IMPORT IF IDENTIFIER GLOBAL FROM FORMAT FOR FLOAT FALSE EOF ELLIPSES DELETE DEFINE DEDENT CONTINUE COMPLEX CLASS BYTES BREAK AWAIT AT ASYNC ASTERIKS ASSERT ]
## Transitions:
-- On TRUE shift to state 4
-- On TILDE shift to state 5
-- On STRING shift to state 6
-- On PLUS shift to state 12
-- On NOT shift to state 17
-- On MINUS shift to state 14
-- On LEFTPARENS shift to state 15
-- On LEFTCURLY shift to state 18
-- On LEFTBRACKET shift to state 20
-- On LAMBDA shift to state 21
-- On INTEGER shift to state 22
-- On IDENTIFIER shift to state 23
-- On FORMAT shift to state 24
-- On FLOAT shift to state 26
-- On FALSE shift to state 27
-- On ELLIPSES shift to state 28
-- On COMPLEX shift to state 29
-- On BYTES shift to state 30
-- On AWAIT shift to state 32
-- On ASYNC shift to state 33
-- On ASTERIKS shift to state 34
-- On test_list shift to state 432
-- On test shift to state 75
-- On set_or_dictionary shift to state 35
-- On separated_nonempty_list_indicator(COMMA,test) shift to state 80
-- On or_test shift to state 62
-- On not_test shift to state 49
-- On nonempty_list(BYTES) shift to state 36
-- On identifier shift to state 67
-- On expression shift to state 51
-- On conditional shift to state 438
-- On comparison shift to state 70
-- On atom shift to state 71
-- On and_test shift to state 72
## Reductions:

State 432:
## Known stack suffix:
## test_list
## LR(1) items:
conditional -> test_list . COLON block named_optional_block(ELSE) [ YIELD WITH WHILE TRY TRUE TILDE STRING RETURN RAISE PLUS PASS NOT NONLOCAL NEWLINE MINUS LEFTPARENS LEFTCURLY LEFTBRACKET LAMBDA INTEGER IMPORT IF IDENTIFIER GLOBAL FROM FORMAT FOR FLOAT FALSE EOF ELLIPSES DELETE DEFINE DEDENT CONTINUE COMPLEX CLASS BYTES BREAK AWAIT AT ASYNC ASTERIKS ASSERT ]
conditional -> test_list . COLON block ELSEIF conditional [ YIELD WITH WHILE TRY TRUE TILDE STRING RETURN RAISE PLUS PASS NOT NONLOCAL NEWLINE MINUS LEFTPARENS LEFTCURLY LEFTBRACKET LAMBDA INTEGER IMPORT IF IDENTIFIER GLOBAL FROM FORMAT FOR FLOAT FALSE EOF ELLIPSES DELETE DEFINE DEDENT CONTINUE COMPLEX CLASS BYTES BREAK AWAIT AT ASYNC ASTERIKS ASSERT ]
## Transitions:
-- On COLON shift to state 433
## Reductions:

State 433:
## Known stack suffix:
## test_list COLON
## LR(1) items:
conditional -> test_list COLON . block named_optional_block(ELSE) [ YIELD WITH WHILE TRY TRUE TILDE STRING RETURN RAISE PLUS PASS NOT NONLOCAL NEWLINE MINUS LEFTPARENS LEFTCURLY LEFTBRACKET LAMBDA INTEGER IMPORT IF IDENTIFIER GLOBAL FROM FORMAT FOR FLOAT FALSE EOF ELLIPSES DELETE DEFINE DEDENT CONTINUE COMPLEX CLASS BYTES BREAK AWAIT AT ASYNC ASTERIKS ASSERT ]
conditional -> test_list COLON . block ELSEIF conditional [ YIELD WITH WHILE TRY TRUE TILDE STRING RETURN RAISE PLUS PASS NOT NONLOCAL NEWLINE MINUS LEFTPARENS LEFTCURLY LEFTBRACKET LAMBDA INTEGER IMPORT IF IDENTIFIER GLOBAL FROM FORMAT FOR FLOAT FALSE EOF ELLIPSES DELETE DEFINE DEDENT CONTINUE COMPLEX CLASS BYTES BREAK AWAIT AT ASYNC ASTERIKS ASSERT ]
## Transitions:
-- On YIELD shift to state 1
-- On TRUE shift to state 4
-- On TILDE shift to state 5
-- On STRING shift to state 6
-- On RETURN shift to state 234
-- On RAISE shift to state 236
-- On PLUS shift to state 12
-- On PASS shift to state 242
-- On NOT shift to state 17
-- On NONLOCAL shift to state 243
-- On NEWLINE shift to state 251
-- On MINUS shift to state 14
-- On LEFTPARENS shift to state 15
-- On LEFTCURLY shift to state 18
-- On LEFTBRACKET shift to state 20
-- On LAMBDA shift to state 21
-- On INTEGER shift to state 22
-- On IMPORT shift to state 253
-- On IDENTIFIER shift to state 23
-- On GLOBAL shift to state 276
-- On FROM shift to state 278
-- On FORMAT shift to state 24
-- On FLOAT shift to state 26
-- On FALSE shift to state 27
-- On ELLIPSES shift to state 28
-- On DELETE shift to state 291
-- On CONTINUE shift to state 293
-- On COMPLEX shift to state 29
-- On BYTES shift to state 30
-- On BREAK shift to state 294
-- On AWAIT shift to state 32
-- On ASYNC shift to state 33
-- On ASTERIKS shift to state 34
-- On ASSERT shift to state 295
-- On yield shift to state 299
-- On test_list shift to state 300
-- On test shift to state 75
-- On targets shift to state 336
-- On small_statement shift to state 348
-- On simple_statement shift to state 385
-- On set_or_dictionary shift to state 35
-- On separated_nonempty_list_indicator(COMMA,test) shift to state 80
-- On parser_generator_separated_nonempty_list_of_lists(SEMICOLON,small_statement) shift to state 386
-- On or_test shift to state 62
-- On not_test shift to state 49
-- On nonempty_list(NEWLINE) shift to state 388
-- On nonempty_list(BYTES) shift to state 36
-- On identifier shift to state 67
-- On expression shift to state 353
-- On comparison shift to state 70
-- On block shift to state 434
-- On atom shift to state 71
-- On and_test shift to state 72
## Reductions:

State 434:
## Known stack suffix:
## test_list COLON block
## LR(1) items:
conditional -> test_list COLON block . named_optional_block(ELSE) [ YIELD WITH WHILE TRY TRUE TILDE STRING RETURN RAISE PLUS PASS NOT NONLOCAL NEWLINE MINUS LEFTPARENS LEFTCURLY LEFTBRACKET LAMBDA INTEGER IMPORT IF IDENTIFIER GLOBAL FROM FORMAT FOR FLOAT FALSE EOF ELLIPSES DELETE DEFINE DEDENT CONTINUE COMPLEX CLASS BYTES BREAK AWAIT AT ASYNC ASTERIKS ASSERT ]
conditional -> test_list COLON block . ELSEIF conditional [ YIELD WITH WHILE TRY TRUE TILDE STRING RETURN RAISE PLUS PASS NOT NONLOCAL NEWLINE MINUS LEFTPARENS LEFTCURLY LEFTBRACKET LAMBDA INTEGER IMPORT IF IDENTIFIER GLOBAL FROM FORMAT FOR FLOAT FALSE EOF ELLIPSES DELETE DEFINE DEDENT CONTINUE COMPLEX CLASS BYTES BREAK AWAIT AT ASYNC ASTERIKS ASSERT ]
## Transitions:
-- On ELSEIF shift to state 435
-- On ELSE shift to state 394
-- On named_optional_block(ELSE) shift to state 437
## Reductions:
-- On YIELD WITH WHILE TRY TRUE TILDE STRING RETURN RAISE PLUS PASS NOT NONLOCAL NEWLINE MINUS LEFTPARENS LEFTCURLY LEFTBRACKET LAMBDA INTEGER IMPORT IF IDENTIFIER GLOBAL FROM FORMAT FOR FLOAT FALSE EOF ELLIPSES DELETE DEFINE DEDENT CONTINUE COMPLEX CLASS BYTES BREAK AWAIT AT ASYNC ASTERIKS ASSERT
--   reduce production named_optional_block(ELSE) ->

State 435:
## Known stack suffix:
## test_list COLON block ELSEIF
## LR(1) items:
conditional -> test_list COLON block ELSEIF . conditional [ YIELD WITH WHILE TRY TRUE TILDE STRING RETURN RAISE PLUS PASS NOT NONLOCAL NEWLINE MINUS LEFTPARENS LEFTCURLY LEFTBRACKET LAMBDA INTEGER IMPORT IF IDENTIFIER GLOBAL FROM FORMAT FOR FLOAT FALSE EOF ELLIPSES DELETE DEFINE DEDENT CONTINUE COMPLEX CLASS BYTES BREAK AWAIT AT ASYNC ASTERIKS ASSERT ]
## Transitions:
-- On TRUE shift to state 4
-- On TILDE shift to state 5
-- On STRING shift to state 6
-- On PLUS shift to state 12
-- On NOT shift to state 17
-- On MINUS shift to state 14
-- On LEFTPARENS shift to state 15
-- On LEFTCURLY shift to state 18
-- On LEFTBRACKET shift to state 20
-- On LAMBDA shift to state 21
-- On INTEGER shift to state 22
-- On IDENTIFIER shift to state 23
-- On FORMAT shift to state 24
-- On FLOAT shift to state 26
-- On FALSE shift to state 27
-- On ELLIPSES shift to state 28
-- On COMPLEX shift to state 29
-- On BYTES shift to state 30
-- On AWAIT shift to state 32
-- On ASYNC shift to state 33
-- On ASTERIKS shift to state 34
-- On test_list shift to state 432
-- On test shift to state 75
-- On set_or_dictionary shift to state 35
-- On separated_nonempty_list_indicator(COMMA,test) shift to state 80
-- On or_test shift to state 62
-- On not_test shift to state 49
-- On nonempty_list(BYTES) shift to state 36
-- On identifier shift to state 67
-- On expression shift to state 51
-- On conditional shift to state 436
-- On comparison shift to state 70
-- On atom shift to state 71
-- On and_test shift to state 72
## Reductions:

State 436:
## Known stack suffix:
## test_list COLON block ELSEIF conditional
## LR(1) items:
conditional -> test_list COLON block ELSEIF conditional . [ YIELD WITH WHILE TRY TRUE TILDE STRING RETURN RAISE PLUS PASS NOT NONLOCAL NEWLINE MINUS LEFTPARENS LEFTCURLY LEFTBRACKET LAMBDA INTEGER IMPORT IF IDENTIFIER GLOBAL FROM FORMAT FOR FLOAT FALSE EOF ELLIPSES DELETE DEFINE DEDENT CONTINUE COMPLEX CLASS BYTES BREAK AWAIT AT ASYNC ASTERIKS ASSERT ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production conditional -> test_list COLON block ELSEIF conditional

State 437:
## Known stack suffix:
## test_list COLON block named_optional_block(ELSE)
## LR(1) items:
conditional -> test_list COLON block named_optional_block(ELSE) . [ YIELD WITH WHILE TRY TRUE TILDE STRING RETURN RAISE PLUS PASS NOT NONLOCAL NEWLINE MINUS LEFTPARENS LEFTCURLY LEFTBRACKET LAMBDA INTEGER IMPORT IF IDENTIFIER GLOBAL FROM FORMAT FOR FLOAT FALSE EOF ELLIPSES DELETE DEFINE DEDENT CONTINUE COMPLEX CLASS BYTES BREAK AWAIT AT ASYNC ASTERIKS ASSERT ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production conditional -> test_list COLON block named_optional_block(ELSE)

State 438:
## Known stack suffix:
## IF conditional
## LR(1) items:
compound_statement -> IF conditional . [ YIELD WITH WHILE TRY TRUE TILDE STRING RETURN RAISE PLUS PASS NOT NONLOCAL NEWLINE MINUS LEFTPARENS LEFTCURLY LEFTBRACKET LAMBDA INTEGER IMPORT IF IDENTIFIER GLOBAL FROM FORMAT FOR FLOAT FALSE EOF ELLIPSES DELETE DEFINE DEDENT CONTINUE COMPLEX CLASS BYTES BREAK AWAIT AT ASYNC ASTERIKS ASSERT ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production compound_statement -> IF conditional

State 439:
## Known stack suffix:
## FOR
## LR(1) items:
compound_statement -> FOR . expression_list IN test_list COLON option(ANNOTATION_COMMENT) block named_optional_block(ELSE) [ YIELD WITH WHILE TRY TRUE TILDE STRING RETURN RAISE PLUS PASS NOT NONLOCAL NEWLINE MINUS LEFTPARENS LEFTCURLY LEFTBRACKET LAMBDA INTEGER IMPORT IF IDENTIFIER GLOBAL FROM FORMAT FOR FLOAT FALSE EOF ELLIPSES DELETE DEFINE DEDENT CONTINUE COMPLEX CLASS BYTES BREAK AWAIT AT ASYNC ASTERIKS ASSERT ]
## Transitions:
-- On TRUE shift to state 4
-- On TILDE shift to state 5
-- On STRING shift to state 6
-- On PLUS shift to state 12
-- On NOT shift to state 13
-- On MINUS shift to state 14
-- On LEFTPARENS shift to state 15
-- On LEFTCURLY shift to state 18
-- On LEFTBRACKET shift to state 20
-- On INTEGER shift to state 22
-- On IDENTIFIER shift to state 23
-- On FORMAT shift to state 24
-- On FLOAT shift to state 26
-- On FALSE shift to state 27
-- On ELLIPSES shift to state 28
-- On COMPLEX shift to state 29
-- On BYTES shift to state 30
-- On AWAIT shift to state 32
-- On ASYNC shift to state 33
-- On ASTERIKS shift to state 34
-- On set_or_dictionary shift to state 35
-- On separated_nonempty_list_indicator(COMMA,expression) shift to state 43
-- On nonempty_list(BYTES) shift to state 36
-- On identifier shift to state 37
-- On expression_list shift to state 440
-- On expression shift to state 144
-- On atom shift to state 71
## Reductions:

State 440:
## Known stack suffix:
## FOR expression_list
## LR(1) items:
compound_statement -> FOR expression_list . IN test_list COLON option(ANNOTATION_COMMENT) block named_optional_block(ELSE) [ YIELD WITH WHILE TRY TRUE TILDE STRING RETURN RAISE PLUS PASS NOT NONLOCAL NEWLINE MINUS LEFTPARENS LEFTCURLY LEFTBRACKET LAMBDA INTEGER IMPORT IF IDENTIFIER GLOBAL FROM FORMAT FOR FLOAT FALSE EOF ELLIPSES DELETE DEFINE DEDENT CONTINUE COMPLEX CLASS BYTES BREAK AWAIT AT ASYNC ASTERIKS ASSERT ]
## Transitions:
-- On IN shift to state 441
## Reductions:

State 441:
## Known stack suffix:
## FOR expression_list IN
## LR(1) items:
compound_statement -> FOR expression_list IN . test_list COLON option(ANNOTATION_COMMENT) block named_optional_block(ELSE) [ YIELD WITH WHILE TRY TRUE TILDE STRING RETURN RAISE PLUS PASS NOT NONLOCAL NEWLINE MINUS LEFTPARENS LEFTCURLY LEFTBRACKET LAMBDA INTEGER IMPORT IF IDENTIFIER GLOBAL FROM FORMAT FOR FLOAT FALSE EOF ELLIPSES DELETE DEFINE DEDENT CONTINUE COMPLEX CLASS BYTES BREAK AWAIT AT ASYNC ASTERIKS ASSERT ]
## Transitions:
-- On TRUE shift to state 4
-- On TILDE shift to state 5
-- On STRING shift to state 6
-- On PLUS shift to state 12
-- On NOT shift to state 17
-- On MINUS shift to state 14
-- On LEFTPARENS shift to state 15
-- On LEFTCURLY shift to state 18
-- On LEFTBRACKET shift to state 20
-- On LAMBDA shift to state 21
-- On INTEGER shift to state 22
-- On IDENTIFIER shift to state 23
-- On FORMAT shift to state 24
-- On FLOAT shift to state 26
-- On FALSE shift to state 27
-- On ELLIPSES shift to state 28
-- On COMPLEX shift to state 29
-- On BYTES shift to state 30
-- On AWAIT shift to state 32
-- On ASYNC shift to state 33
-- On ASTERIKS shift to state 34
-- On test_list shift to state 442
-- On test shift to state 75
-- On set_or_dictionary shift to state 35
-- On separated_nonempty_list_indicator(COMMA,test) shift to state 80
-- On or_test shift to state 62
-- On not_test shift to state 49
-- On nonempty_list(BYTES) shift to state 36
-- On identifier shift to state 67
-- On expression shift to state 51
-- On comparison shift to state 70
-- On atom shift to state 71
-- On and_test shift to state 72
## Reductions:

State 442:
## Known stack suffix:
## FOR expression_list IN test_list
## LR(1) items:
compound_statement -> FOR expression_list IN test_list . COLON option(ANNOTATION_COMMENT) block named_optional_block(ELSE) [ YIELD WITH WHILE TRY TRUE TILDE STRING RETURN RAISE PLUS PASS NOT NONLOCAL NEWLINE MINUS LEFTPARENS LEFTCURLY LEFTBRACKET LAMBDA INTEGER IMPORT IF IDENTIFIER GLOBAL FROM FORMAT FOR FLOAT FALSE EOF ELLIPSES DELETE DEFINE DEDENT CONTINUE COMPLEX CLASS BYTES BREAK AWAIT AT ASYNC ASTERIKS ASSERT ]
## Transitions:
-- On COLON shift to state 443
## Reductions:

State 443:
## Known stack suffix:
## FOR expression_list IN test_list COLON
## LR(1) items:
compound_statement -> FOR expression_list IN test_list COLON . option(ANNOTATION_COMMENT) block named_optional_block(ELSE) [ YIELD WITH WHILE TRY TRUE TILDE STRING RETURN RAISE PLUS PASS NOT NONLOCAL NEWLINE MINUS LEFTPARENS LEFTCURLY LEFTBRACKET LAMBDA INTEGER IMPORT IF IDENTIFIER GLOBAL FROM FORMAT FOR FLOAT FALSE EOF ELLIPSES DELETE DEFINE DEDENT CONTINUE COMPLEX CLASS BYTES BREAK AWAIT AT ASYNC ASTERIKS ASSERT ]
## Transitions:
-- On ANNOTATION_COMMENT shift to state 232
-- On option(ANNOTATION_COMMENT) shift to state 444
## Reductions:
-- On YIELD TRUE TILDE STRING RETURN RAISE PLUS PASS NOT NONLOCAL NEWLINE MINUS LEFTPARENS LEFTCURLY LEFTBRACKET LAMBDA INTEGER IMPORT IDENTIFIER GLOBAL FROM FORMAT FLOAT FALSE ELLIPSES DELETE CONTINUE COMPLEX BYTES BREAK AWAIT ASYNC ASTERIKS ASSERT
--   reduce production option(ANNOTATION_COMMENT) ->

State 444:
## Known stack suffix:
## FOR expression_list IN test_list COLON option(ANNOTATION_COMMENT)
## LR(1) items:
compound_statement -> FOR expression_list IN test_list COLON option(ANNOTATION_COMMENT) . block named_optional_block(ELSE) [ YIELD WITH WHILE TRY TRUE TILDE STRING RETURN RAISE PLUS PASS NOT NONLOCAL NEWLINE MINUS LEFTPARENS LEFTCURLY LEFTBRACKET LAMBDA INTEGER IMPORT IF IDENTIFIER GLOBAL FROM FORMAT FOR FLOAT FALSE EOF ELLIPSES DELETE DEFINE DEDENT CONTINUE COMPLEX CLASS BYTES BREAK AWAIT AT ASYNC ASTERIKS ASSERT ]
## Transitions:
-- On YIELD shift to state 1
-- On TRUE shift to state 4
-- On TILDE shift to state 5
-- On STRING shift to state 6
-- On RETURN shift to state 234
-- On RAISE shift to state 236
-- On PLUS shift to state 12
-- On PASS shift to state 242
-- On NOT shift to state 17
-- On NONLOCAL shift to state 243
-- On NEWLINE shift to state 251
-- On MINUS shift to state 14
-- On LEFTPARENS shift to state 15
-- On LEFTCURLY shift to state 18
-- On LEFTBRACKET shift to state 20
-- On LAMBDA shift to state 21
-- On INTEGER shift to state 22
-- On IMPORT shift to state 253
-- On IDENTIFIER shift to state 23
-- On GLOBAL shift to state 276
-- On FROM shift to state 278
-- On FORMAT shift to state 24
-- On FLOAT shift to state 26
-- On FALSE shift to state 27
-- On ELLIPSES shift to state 28
-- On DELETE shift to state 291
-- On CONTINUE shift to state 293
-- On COMPLEX shift to state 29
-- On BYTES shift to state 30
-- On BREAK shift to state 294
-- On AWAIT shift to state 32
-- On ASYNC shift to state 33
-- On ASTERIKS shift to state 34
-- On ASSERT shift to state 295
-- On yield shift to state 299
-- On test_list shift to state 300
-- On test shift to state 75
-- On targets shift to state 336
-- On small_statement shift to state 348
-- On simple_statement shift to state 385
-- On set_or_dictionary shift to state 35
-- On separated_nonempty_list_indicator(COMMA,test) shift to state 80
-- On parser_generator_separated_nonempty_list_of_lists(SEMICOLON,small_statement) shift to state 386
-- On or_test shift to state 62
-- On not_test shift to state 49
-- On nonempty_list(NEWLINE) shift to state 388
-- On nonempty_list(BYTES) shift to state 36
-- On identifier shift to state 67
-- On expression shift to state 353
-- On comparison shift to state 70
-- On block shift to state 445
-- On atom shift to state 71
-- On and_test shift to state 72
## Reductions:

State 445:
## Known stack suffix:
## FOR expression_list IN test_list COLON option(ANNOTATION_COMMENT) block
## LR(1) items:
compound_statement -> FOR expression_list IN test_list COLON option(ANNOTATION_COMMENT) block . named_optional_block(ELSE) [ YIELD WITH WHILE TRY TRUE TILDE STRING RETURN RAISE PLUS PASS NOT NONLOCAL NEWLINE MINUS LEFTPARENS LEFTCURLY LEFTBRACKET LAMBDA INTEGER IMPORT IF IDENTIFIER GLOBAL FROM FORMAT FOR FLOAT FALSE EOF ELLIPSES DELETE DEFINE DEDENT CONTINUE COMPLEX CLASS BYTES BREAK AWAIT AT ASYNC ASTERIKS ASSERT ]
## Transitions:
-- On ELSE shift to state 394
-- On named_optional_block(ELSE) shift to state 446
## Reductions:
-- On YIELD WITH WHILE TRY TRUE TILDE STRING RETURN RAISE PLUS PASS NOT NONLOCAL NEWLINE MINUS LEFTPARENS LEFTCURLY LEFTBRACKET LAMBDA INTEGER IMPORT IF IDENTIFIER GLOBAL FROM FORMAT FOR FLOAT FALSE EOF ELLIPSES DELETE DEFINE DEDENT CONTINUE COMPLEX CLASS BYTES BREAK AWAIT AT ASYNC ASTERIKS ASSERT
--   reduce production named_optional_block(ELSE) ->

State 446:
## Known stack suffix:
## FOR expression_list IN test_list COLON option(ANNOTATION_COMMENT) block named_optional_block(ELSE)
## LR(1) items:
compound_statement -> FOR expression_list IN test_list COLON option(ANNOTATION_COMMENT) block named_optional_block(ELSE) . [ YIELD WITH WHILE TRY TRUE TILDE STRING RETURN RAISE PLUS PASS NOT NONLOCAL NEWLINE MINUS LEFTPARENS LEFTCURLY LEFTBRACKET LAMBDA INTEGER IMPORT IF IDENTIFIER GLOBAL FROM FORMAT FOR FLOAT FALSE EOF ELLIPSES DELETE DEFINE DEDENT CONTINUE COMPLEX CLASS BYTES BREAK AWAIT AT ASYNC ASTERIKS ASSERT ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production compound_statement -> FOR expression_list IN test_list COLON option(ANNOTATION_COMMENT) block named_optional_block(ELSE)

State 447:
## Known stack suffix:
## DEFINE
## LR(1) items:
compound_statement -> DEFINE . reference LEFTPARENS define_parameters RIGHTPARENS option(return_annotation) COLON option(SIGNATURE_COMMENT) block_or_stub_body [ YIELD WITH WHILE TRY TRUE TILDE STRING RETURN RAISE PLUS PASS NOT NONLOCAL NEWLINE MINUS LEFTPARENS LEFTCURLY LEFTBRACKET LAMBDA INTEGER IMPORT IF IDENTIFIER GLOBAL FROM FORMAT FOR FLOAT FALSE EOF ELLIPSES DELETE DEFINE DEDENT CONTINUE COMPLEX CLASS BYTES BREAK AWAIT AT ASYNC ASTERIKS ASSERT ]
## Transitions:
-- On IDENTIFIER shift to state 23
-- On ASYNC shift to state 33
-- On reference shift to state 448
-- On parser_generator_separated_nonempty_list(DOT,identifier) shift to state 259
-- On identifier shift to state 268
## Reductions:

State 448:
## Known stack suffix:
## DEFINE reference
## LR(1) items:
compound_statement -> DEFINE reference . LEFTPARENS define_parameters RIGHTPARENS option(return_annotation) COLON option(SIGNATURE_COMMENT) block_or_stub_body [ YIELD WITH WHILE TRY TRUE TILDE STRING RETURN RAISE PLUS PASS NOT NONLOCAL NEWLINE MINUS LEFTPARENS LEFTCURLY LEFTBRACKET LAMBDA INTEGER IMPORT IF IDENTIFIER GLOBAL FROM FORMAT FOR FLOAT FALSE EOF ELLIPSES DELETE DEFINE DEDENT CONTINUE COMPLEX CLASS BYTES BREAK AWAIT AT ASYNC ASTERIKS ASSERT ]
## Transitions:
-- On LEFTPARENS shift to state 449
## Reductions:

State 449:
## Known stack suffix:
## DEFINE reference LEFTPARENS
## LR(1) items:
compound_statement -> DEFINE reference LEFTPARENS . define_parameters RIGHTPARENS option(return_annotation) COLON option(SIGNATURE_COMMENT) block_or_stub_body [ YIELD WITH WHILE TRY TRUE TILDE STRING RETURN RAISE PLUS PASS NOT NONLOCAL NEWLINE MINUS LEFTPARENS LEFTCURLY LEFTBRACKET LAMBDA INTEGER IMPORT IF IDENTIFIER GLOBAL FROM FORMAT FOR FLOAT FALSE EOF ELLIPSES DELETE DEFINE DEDENT CONTINUE COMPLEX CLASS BYTES BREAK AWAIT AT ASYNC ASTERIKS ASSERT ]
## Transitions:
-- On TRUE shift to state 4
-- On TILDE shift to state 5
-- On STRING shift to state 6
-- On SLASH shift to state 450
-- On PLUS shift to state 12
-- On NOT shift to state 13
-- On MINUS shift to state 14
-- On LEFTPARENS shift to state 15
-- On LEFTCURLY shift to state 18
-- On LEFTBRACKET shift to state 20
-- On INTEGER shift to state 22
-- On IDENTIFIER shift to state 23
-- On FORMAT shift to state 24
-- On FLOAT shift to state 26
-- On FALSE shift to state 27
-- On ELLIPSES shift to state 28
-- On COMPLEX shift to state 29
-- On BYTES shift to state 30
-- On AWAIT shift to state 32
-- On ASYNC shift to state 33
-- On ASTERIKS shift to state 453
-- On set_or_dictionary shift to state 35
-- On nonempty_list(BYTES) shift to state 36
-- On identifier shift to state 37
-- On expression shift to state 456
-- On define_parameters shift to state 474
-- On atom shift to state 71
## Reductions:
-- On RIGHTPARENS
--   reduce production define_parameters ->

State 450:
## Known stack suffix:
## SLASH
## LR(1) items:
define_parameters -> SLASH . COMMA option(comment_annotation) define_parameters [ RIGHTPARENS ]
define_parameters -> SLASH . option(comment_annotation) [ RIGHTPARENS ]
## Transitions:
-- On COMMA shift to state 451
-- On ANNOTATION_COMMENT shift to state 339
-- On option(comment_annotation) shift to state 473
## Reductions:
-- On RIGHTPARENS
--   reduce production option(comment_annotation) ->

State 451:
## Known stack suffix:
## SLASH COMMA
## LR(1) items:
define_parameters -> SLASH COMMA . option(comment_annotation) define_parameters [ RIGHTPARENS ]
## Transitions:
-- On ANNOTATION_COMMENT shift to state 339
-- On option(comment_annotation) shift to state 452
## Reductions:
-- On TRUE TILDE STRING SLASH RIGHTPARENS PLUS NOT MINUS LEFTPARENS LEFTCURLY LEFTBRACKET INTEGER IDENTIFIER FORMAT FLOAT FALSE ELLIPSES COMPLEX BYTES AWAIT ASYNC ASTERIKS
--   reduce production option(comment_annotation) ->

State 452:
## Known stack suffix:
## SLASH COMMA option(comment_annotation)
## LR(1) items:
define_parameters -> SLASH COMMA option(comment_annotation) . define_parameters [ RIGHTPARENS ]
## Transitions:
-- On TRUE shift to state 4
-- On TILDE shift to state 5
-- On STRING shift to state 6
-- On SLASH shift to state 450
-- On PLUS shift to state 12
-- On NOT shift to state 13
-- On MINUS shift to state 14
-- On LEFTPARENS shift to state 15
-- On LEFTCURLY shift to state 18
-- On LEFTBRACKET shift to state 20
-- On INTEGER shift to state 22
-- On IDENTIFIER shift to state 23
-- On FORMAT shift to state 24
-- On FLOAT shift to state 26
-- On FALSE shift to state 27
-- On ELLIPSES shift to state 28
-- On COMPLEX shift to state 29
-- On BYTES shift to state 30
-- On AWAIT shift to state 32
-- On ASYNC shift to state 33
-- On ASTERIKS shift to state 453
-- On set_or_dictionary shift to state 35
-- On nonempty_list(BYTES) shift to state 36
-- On identifier shift to state 37
-- On expression shift to state 456
-- On define_parameters shift to state 472
-- On atom shift to state 71
## Reductions:
-- On RIGHTPARENS
--   reduce production define_parameters ->

State 453:
## Known stack suffix:
## ASTERIKS
## LR(1) items:
atom -> ASTERIKS . expression [ SLASH RIGHTPARENS RIGHTANGLERIGHTANGLE PLUS PERCENT MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLE HAT EQUALS DOT COMMA COLON BAR AT ASTERIKS ANNOTATION_COMMENT AMPERSAND ]
define_parameters -> ASTERIKS . COMMA option(comment_annotation) define_parameters [ RIGHTPARENS ]
define_parameters -> ASTERIKS . option(comment_annotation) [ RIGHTPARENS ]
## Transitions:
-- On TRUE shift to state 4
-- On TILDE shift to state 5
-- On STRING shift to state 6
-- On PLUS shift to state 12
-- On NOT shift to state 13
-- On MINUS shift to state 14
-- On LEFTPARENS shift to state 15
-- On LEFTCURLY shift to state 18
-- On LEFTBRACKET shift to state 20
-- On INTEGER shift to state 22
-- On IDENTIFIER shift to state 23
-- On FORMAT shift to state 24
-- On FLOAT shift to state 26
-- On FALSE shift to state 27
-- On ELLIPSES shift to state 28
-- On COMPLEX shift to state 29
-- On COMMA shift to state 454
-- On BYTES shift to state 30
-- On AWAIT shift to state 32
-- On ASYNC shift to state 33
-- On ASTERIKS shift to state 34
-- On ANNOTATION_COMMENT shift to state 339
-- On set_or_dictionary shift to state 35
-- On option(comment_annotation) shift to state 471
-- On nonempty_list(BYTES) shift to state 36
-- On identifier shift to state 37
-- On expression shift to state 38
-- On atom shift to state 71
## Reductions:
-- On RIGHTPARENS
--   reduce production option(comment_annotation) ->

State 454:
## Known stack suffix:
## ASTERIKS COMMA
## LR(1) items:
define_parameters -> ASTERIKS COMMA . option(comment_annotation) define_parameters [ RIGHTPARENS ]
## Transitions:
-- On ANNOTATION_COMMENT shift to state 339
-- On option(comment_annotation) shift to state 455
## Reductions:
-- On TRUE TILDE STRING SLASH RIGHTPARENS PLUS NOT MINUS LEFTPARENS LEFTCURLY LEFTBRACKET INTEGER IDENTIFIER FORMAT FLOAT FALSE ELLIPSES COMPLEX BYTES AWAIT ASYNC ASTERIKS
--   reduce production option(comment_annotation) ->

State 455:
## Known stack suffix:
## ASTERIKS COMMA option(comment_annotation)
## LR(1) items:
define_parameters -> ASTERIKS COMMA option(comment_annotation) . define_parameters [ RIGHTPARENS ]
## Transitions:
-- On TRUE shift to state 4
-- On TILDE shift to state 5
-- On STRING shift to state 6
-- On SLASH shift to state 450
-- On PLUS shift to state 12
-- On NOT shift to state 13
-- On MINUS shift to state 14
-- On LEFTPARENS shift to state 15
-- On LEFTCURLY shift to state 18
-- On LEFTBRACKET shift to state 20
-- On INTEGER shift to state 22
-- On IDENTIFIER shift to state 23
-- On FORMAT shift to state 24
-- On FLOAT shift to state 26
-- On FALSE shift to state 27
-- On ELLIPSES shift to state 28
-- On COMPLEX shift to state 29
-- On BYTES shift to state 30
-- On AWAIT shift to state 32
-- On ASYNC shift to state 33
-- On ASTERIKS shift to state 453
-- On set_or_dictionary shift to state 35
-- On nonempty_list(BYTES) shift to state 36
-- On identifier shift to state 37
-- On expression shift to state 456
-- On define_parameters shift to state 470
-- On atom shift to state 71
## Reductions:
-- On RIGHTPARENS
--   reduce production define_parameters ->

State 456:
## Known stack suffix:
## expression
## LR(1) items:
atom -> expression . PLUS expression [ SLASH RIGHTPARENS RIGHTANGLERIGHTANGLE PLUS PERCENT MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLE HAT EQUALS DOT COMMA COLON BAR AT ASTERIKS ANNOTATION_COMMENT AMPERSAND ]
atom -> expression . AT expression [ SLASH RIGHTPARENS RIGHTANGLERIGHTANGLE PLUS PERCENT MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLE HAT EQUALS DOT COMMA COLON BAR AT ASTERIKS ANNOTATION_COMMENT AMPERSAND ]
atom -> expression . AMPERSAND expression [ SLASH RIGHTPARENS RIGHTANGLERIGHTANGLE PLUS PERCENT MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLE HAT EQUALS DOT COMMA COLON BAR AT ASTERIKS ANNOTATION_COMMENT AMPERSAND ]
atom -> expression . BAR expression [ SLASH RIGHTPARENS RIGHTANGLERIGHTANGLE PLUS PERCENT MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLE HAT EQUALS DOT COMMA COLON BAR AT ASTERIKS ANNOTATION_COMMENT AMPERSAND ]
atom -> expression . HAT expression [ SLASH RIGHTPARENS RIGHTANGLERIGHTANGLE PLUS PERCENT MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLE HAT EQUALS DOT COMMA COLON BAR AT ASTERIKS ANNOTATION_COMMENT AMPERSAND ]
atom -> expression . SLASH SLASH expression [ SLASH RIGHTPARENS RIGHTANGLERIGHTANGLE PLUS PERCENT MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLE HAT EQUALS DOT COMMA COLON BAR AT ASTERIKS ANNOTATION_COMMENT AMPERSAND ]
atom -> expression . SLASH expression [ SLASH RIGHTPARENS RIGHTANGLERIGHTANGLE PLUS PERCENT MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLE HAT EQUALS DOT COMMA COLON BAR AT ASTERIKS ANNOTATION_COMMENT AMPERSAND ]
atom -> expression . LEFTANGLELEFTANGLE expression [ SLASH RIGHTPARENS RIGHTANGLERIGHTANGLE PLUS PERCENT MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLE HAT EQUALS DOT COMMA COLON BAR AT ASTERIKS ANNOTATION_COMMENT AMPERSAND ]
atom -> expression . PERCENT expression [ SLASH RIGHTPARENS RIGHTANGLERIGHTANGLE PLUS PERCENT MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLE HAT EQUALS DOT COMMA COLON BAR AT ASTERIKS ANNOTATION_COMMENT AMPERSAND ]
atom -> expression . ASTERIKS ASTERIKS expression [ SLASH RIGHTPARENS RIGHTANGLERIGHTANGLE PLUS PERCENT MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLE HAT EQUALS DOT COMMA COLON BAR AT ASTERIKS ANNOTATION_COMMENT AMPERSAND ]
atom -> expression . ASTERIKS expression [ SLASH RIGHTPARENS RIGHTANGLERIGHTANGLE PLUS PERCENT MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLE HAT EQUALS DOT COMMA COLON BAR AT ASTERIKS ANNOTATION_COMMENT AMPERSAND ]
atom -> expression . RIGHTANGLERIGHTANGLE expression [ SLASH RIGHTPARENS RIGHTANGLERIGHTANGLE PLUS PERCENT MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLE HAT EQUALS DOT COMMA COLON BAR AT ASTERIKS ANNOTATION_COMMENT AMPERSAND ]
atom -> expression . MINUS expression [ SLASH RIGHTPARENS RIGHTANGLERIGHTANGLE PLUS PERCENT MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLE HAT EQUALS DOT COMMA COLON BAR AT ASTERIKS ANNOTATION_COMMENT AMPERSAND ]
atom -> expression . LEFTPARENS arguments RIGHTPARENS [ SLASH RIGHTPARENS RIGHTANGLERIGHTANGLE PLUS PERCENT MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLE HAT EQUALS DOT COMMA COLON BAR AT ASTERIKS ANNOTATION_COMMENT AMPERSAND ]
define_parameters -> expression . option(annotation) COMMA option(comment_annotation) define_parameters [ RIGHTPARENS ]
define_parameters -> expression . option(annotation) EQUALS test COMMA option(comment_annotation) define_parameters [ RIGHTPARENS ]
define_parameters -> expression . option(annotation) option(comment_annotation) [ RIGHTPARENS ]
define_parameters -> expression . option(annotation) EQUALS test option(comment_annotation) [ RIGHTPARENS ]
expression -> expression . DOT identifier [ SLASH RIGHTPARENS RIGHTANGLERIGHTANGLE PLUS PERCENT MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLE HAT EQUALS DOT COMMA COLON BAR AT ASTERIKS ANNOTATION_COMMENT AMPERSAND ]
expression -> expression . LEFTBRACKET parser_generator_separated_nonempty_list(COMMA,subscript_key) RIGHTBRACKET [ SLASH RIGHTPARENS RIGHTANGLERIGHTANGLE PLUS PERCENT MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLE HAT EQUALS DOT COMMA COLON BAR AT ASTERIKS ANNOTATION_COMMENT AMPERSAND ]
## Transitions:
-- On SLASH shift to state 52
-- On RIGHTANGLERIGHTANGLE shift to state 95
-- On PLUS shift to state 97
-- On PERCENT shift to state 99
-- On MINUS shift to state 104
-- On LEFTPARENS shift to state 39
-- On LEFTBRACKET shift to state 55
-- On LEFTANGLELEFTANGLE shift to state 106
-- On HAT shift to state 108
-- On DOT shift to state 90
-- On COLON shift to state 457
-- On BAR shift to state 112
-- On AT shift to state 92
-- On ASTERIKS shift to state 101
-- On AMPERSAND shift to state 110
-- On option(annotation) shift to state 459
## Reductions:
-- On RIGHTPARENS EQUALS COMMA ANNOTATION_COMMENT
--   reduce production option(annotation) ->

State 457:
## Known stack suffix:
## COLON
## LR(1) items:
option(annotation) -> COLON . expression [ RIGHTPARENS EQUALS COMMA ANNOTATION_COMMENT ]
## Transitions:
-- On TRUE shift to state 4
-- On TILDE shift to state 5
-- On STRING shift to state 6
-- On PLUS shift to state 12
-- On NOT shift to state 13
-- On MINUS shift to state 14
-- On LEFTPARENS shift to state 15
-- On LEFTCURLY shift to state 18
-- On LEFTBRACKET shift to state 20
-- On INTEGER shift to state 22
-- On IDENTIFIER shift to state 23
-- On FORMAT shift to state 24
-- On FLOAT shift to state 26
-- On FALSE shift to state 27
-- On ELLIPSES shift to state 28
-- On COMPLEX shift to state 29
-- On BYTES shift to state 30
-- On AWAIT shift to state 32
-- On ASYNC shift to state 33
-- On ASTERIKS shift to state 34
-- On set_or_dictionary shift to state 35
-- On nonempty_list(BYTES) shift to state 36
-- On identifier shift to state 37
-- On expression shift to state 458
-- On atom shift to state 71
## Reductions:

State 458:
## Known stack suffix:
## COLON expression
## LR(1) items:
atom -> expression . PLUS expression [ SLASH RIGHTPARENS RIGHTANGLERIGHTANGLE PLUS PERCENT MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLE HAT EQUALS DOT COMMA BAR AT ASTERIKS ANNOTATION_COMMENT AMPERSAND ]
atom -> expression . AT expression [ SLASH RIGHTPARENS RIGHTANGLERIGHTANGLE PLUS PERCENT MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLE HAT EQUALS DOT COMMA BAR AT ASTERIKS ANNOTATION_COMMENT AMPERSAND ]
atom -> expression . AMPERSAND expression [ SLASH RIGHTPARENS RIGHTANGLERIGHTANGLE PLUS PERCENT MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLE HAT EQUALS DOT COMMA BAR AT ASTERIKS ANNOTATION_COMMENT AMPERSAND ]
atom -> expression . BAR expression [ SLASH RIGHTPARENS RIGHTANGLERIGHTANGLE PLUS PERCENT MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLE HAT EQUALS DOT COMMA BAR AT ASTERIKS ANNOTATION_COMMENT AMPERSAND ]
atom -> expression . HAT expression [ SLASH RIGHTPARENS RIGHTANGLERIGHTANGLE PLUS PERCENT MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLE HAT EQUALS DOT COMMA BAR AT ASTERIKS ANNOTATION_COMMENT AMPERSAND ]
atom -> expression . SLASH SLASH expression [ SLASH RIGHTPARENS RIGHTANGLERIGHTANGLE PLUS PERCENT MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLE HAT EQUALS DOT COMMA BAR AT ASTERIKS ANNOTATION_COMMENT AMPERSAND ]
atom -> expression . SLASH expression [ SLASH RIGHTPARENS RIGHTANGLERIGHTANGLE PLUS PERCENT MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLE HAT EQUALS DOT COMMA BAR AT ASTERIKS ANNOTATION_COMMENT AMPERSAND ]
atom -> expression . LEFTANGLELEFTANGLE expression [ SLASH RIGHTPARENS RIGHTANGLERIGHTANGLE PLUS PERCENT MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLE HAT EQUALS DOT COMMA BAR AT ASTERIKS ANNOTATION_COMMENT AMPERSAND ]
atom -> expression . PERCENT expression [ SLASH RIGHTPARENS RIGHTANGLERIGHTANGLE PLUS PERCENT MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLE HAT EQUALS DOT COMMA BAR AT ASTERIKS ANNOTATION_COMMENT AMPERSAND ]
atom -> expression . ASTERIKS ASTERIKS expression [ SLASH RIGHTPARENS RIGHTANGLERIGHTANGLE PLUS PERCENT MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLE HAT EQUALS DOT COMMA BAR AT ASTERIKS ANNOTATION_COMMENT AMPERSAND ]
atom -> expression . ASTERIKS expression [ SLASH RIGHTPARENS RIGHTANGLERIGHTANGLE PLUS PERCENT MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLE HAT EQUALS DOT COMMA BAR AT ASTERIKS ANNOTATION_COMMENT AMPERSAND ]
atom -> expression . RIGHTANGLERIGHTANGLE expression [ SLASH RIGHTPARENS RIGHTANGLERIGHTANGLE PLUS PERCENT MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLE HAT EQUALS DOT COMMA BAR AT ASTERIKS ANNOTATION_COMMENT AMPERSAND ]
atom -> expression . MINUS expression [ SLASH RIGHTPARENS RIGHTANGLERIGHTANGLE PLUS PERCENT MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLE HAT EQUALS DOT COMMA BAR AT ASTERIKS ANNOTATION_COMMENT AMPERSAND ]
atom -> expression . LEFTPARENS arguments RIGHTPARENS [ SLASH RIGHTPARENS RIGHTANGLERIGHTANGLE PLUS PERCENT MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLE HAT EQUALS DOT COMMA BAR AT ASTERIKS ANNOTATION_COMMENT AMPERSAND ]
expression -> expression . DOT identifier [ SLASH RIGHTPARENS RIGHTANGLERIGHTANGLE PLUS PERCENT MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLE HAT EQUALS DOT COMMA BAR AT ASTERIKS ANNOTATION_COMMENT AMPERSAND ]
expression -> expression . LEFTBRACKET parser_generator_separated_nonempty_list(COMMA,subscript_key) RIGHTBRACKET [ SLASH RIGHTPARENS RIGHTANGLERIGHTANGLE PLUS PERCENT MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLE HAT EQUALS DOT COMMA BAR AT ASTERIKS ANNOTATION_COMMENT AMPERSAND ]
option(annotation) -> COLON expression . [ RIGHTPARENS EQUALS COMMA ANNOTATION_COMMENT ]
## Transitions:
-- On SLASH shift to state 52
-- On RIGHTANGLERIGHTANGLE shift to state 95
-- On PLUS shift to state 97
-- On PERCENT shift to state 99
-- On MINUS shift to state 104
-- On LEFTPARENS shift to state 39
-- On LEFTBRACKET shift to state 55
-- On LEFTANGLELEFTANGLE shift to state 106
-- On HAT shift to state 108
-- On DOT shift to state 90
-- On BAR shift to state 112
-- On AT shift to state 92
-- On ASTERIKS shift to state 101
-- On AMPERSAND shift to state 110
## Reductions:
-- On RIGHTPARENS EQUALS COMMA ANNOTATION_COMMENT
--   reduce production option(annotation) -> COLON expression

State 459:
## Known stack suffix:
## expression option(annotation)
## LR(1) items:
define_parameters -> expression option(annotation) . COMMA option(comment_annotation) define_parameters [ RIGHTPARENS ]
define_parameters -> expression option(annotation) . EQUALS test COMMA option(comment_annotation) define_parameters [ RIGHTPARENS ]
define_parameters -> expression option(annotation) . option(comment_annotation) [ RIGHTPARENS ]
define_parameters -> expression option(annotation) . EQUALS test option(comment_annotation) [ RIGHTPARENS ]
## Transitions:
-- On EQUALS shift to state 460
-- On COMMA shift to state 466
-- On ANNOTATION_COMMENT shift to state 339
-- On option(comment_annotation) shift to state 469
## Reductions:
-- On RIGHTPARENS
--   reduce production option(comment_annotation) ->

State 460:
## Known stack suffix:
## expression option(annotation) EQUALS
## LR(1) items:
define_parameters -> expression option(annotation) EQUALS . test COMMA option(comment_annotation) define_parameters [ RIGHTPARENS ]
define_parameters -> expression option(annotation) EQUALS . test option(comment_annotation) [ RIGHTPARENS ]
## Transitions:
-- On TRUE shift to state 4
-- On TILDE shift to state 5
-- On STRING shift to state 6
-- On PLUS shift to state 12
-- On NOT shift to state 17
-- On MINUS shift to state 14
-- On LEFTPARENS shift to state 15
-- On LEFTCURLY shift to state 18
-- On LEFTBRACKET shift to state 20
-- On LAMBDA shift to state 21
-- On INTEGER shift to state 22
-- On IDENTIFIER shift to state 23
-- On FORMAT shift to state 24
-- On FLOAT shift to state 26
-- On FALSE shift to state 27
-- On ELLIPSES shift to state 28
-- On COMPLEX shift to state 29
-- On BYTES shift to state 30
-- On AWAIT shift to state 32
-- On ASYNC shift to state 33
-- On ASTERIKS shift to state 34
-- On test shift to state 461
-- On set_or_dictionary shift to state 35
-- On or_test shift to state 62
-- On not_test shift to state 49
-- On nonempty_list(BYTES) shift to state 36
-- On identifier shift to state 67
-- On expression shift to state 51
-- On comparison shift to state 70
-- On atom shift to state 71
-- On and_test shift to state 72
## Reductions:

State 461:
## Known stack suffix:
## expression option(annotation) EQUALS test
## LR(1) items:
define_parameters -> expression option(annotation) EQUALS test . COMMA option(comment_annotation) define_parameters [ RIGHTPARENS ]
define_parameters -> expression option(annotation) EQUALS test . option(comment_annotation) [ RIGHTPARENS ]
## Transitions:
-- On COMMA shift to state 462
-- On ANNOTATION_COMMENT shift to state 339
-- On option(comment_annotation) shift to state 465
## Reductions:
-- On RIGHTPARENS
--   reduce production option(comment_annotation) ->

State 462:
## Known stack suffix:
## expression option(annotation) EQUALS test COMMA
## LR(1) items:
define_parameters -> expression option(annotation) EQUALS test COMMA . option(comment_annotation) define_parameters [ RIGHTPARENS ]
## Transitions:
-- On ANNOTATION_COMMENT shift to state 339
-- On option(comment_annotation) shift to state 463
## Reductions:
-- On TRUE TILDE STRING SLASH RIGHTPARENS PLUS NOT MINUS LEFTPARENS LEFTCURLY LEFTBRACKET INTEGER IDENTIFIER FORMAT FLOAT FALSE ELLIPSES COMPLEX BYTES AWAIT ASYNC ASTERIKS
--   reduce production option(comment_annotation) ->

State 463:
## Known stack suffix:
## expression option(annotation) EQUALS test COMMA option(comment_annotation)
## LR(1) items:
define_parameters -> expression option(annotation) EQUALS test COMMA option(comment_annotation) . define_parameters [ RIGHTPARENS ]
## Transitions:
-- On TRUE shift to state 4
-- On TILDE shift to state 5
-- On STRING shift to state 6
-- On SLASH shift to state 450
-- On PLUS shift to state 12
-- On NOT shift to state 13
-- On MINUS shift to state 14
-- On LEFTPARENS shift to state 15
-- On LEFTCURLY shift to state 18
-- On LEFTBRACKET shift to state 20
-- On INTEGER shift to state 22
-- On IDENTIFIER shift to state 23
-- On FORMAT shift to state 24
-- On FLOAT shift to state 26
-- On FALSE shift to state 27
-- On ELLIPSES shift to state 28
-- On COMPLEX shift to state 29
-- On BYTES shift to state 30
-- On AWAIT shift to state 32
-- On ASYNC shift to state 33
-- On ASTERIKS shift to state 453
-- On set_or_dictionary shift to state 35
-- On nonempty_list(BYTES) shift to state 36
-- On identifier shift to state 37
-- On expression shift to state 456
-- On define_parameters shift to state 464
-- On atom shift to state 71
## Reductions:
-- On RIGHTPARENS
--   reduce production define_parameters ->

State 464:
## Known stack suffix:
## expression option(annotation) EQUALS test COMMA option(comment_annotation) define_parameters
## LR(1) items:
define_parameters -> expression option(annotation) EQUALS test COMMA option(comment_annotation) define_parameters . [ RIGHTPARENS ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production define_parameters -> expression option(annotation) EQUALS test COMMA option(comment_annotation) define_parameters

State 465:
## Known stack suffix:
## expression option(annotation) EQUALS test option(comment_annotation)
## LR(1) items:
define_parameters -> expression option(annotation) EQUALS test option(comment_annotation) . [ RIGHTPARENS ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production define_parameters -> expression option(annotation) EQUALS test option(comment_annotation)

State 466:
## Known stack suffix:
## expression option(annotation) COMMA
## LR(1) items:
define_parameters -> expression option(annotation) COMMA . option(comment_annotation) define_parameters [ RIGHTPARENS ]
## Transitions:
-- On ANNOTATION_COMMENT shift to state 339
-- On option(comment_annotation) shift to state 467
## Reductions:
-- On TRUE TILDE STRING SLASH RIGHTPARENS PLUS NOT MINUS LEFTPARENS LEFTCURLY LEFTBRACKET INTEGER IDENTIFIER FORMAT FLOAT FALSE ELLIPSES COMPLEX BYTES AWAIT ASYNC ASTERIKS
--   reduce production option(comment_annotation) ->

State 467:
## Known stack suffix:
## expression option(annotation) COMMA option(comment_annotation)
## LR(1) items:
define_parameters -> expression option(annotation) COMMA option(comment_annotation) . define_parameters [ RIGHTPARENS ]
## Transitions:
-- On TRUE shift to state 4
-- On TILDE shift to state 5
-- On STRING shift to state 6
-- On SLASH shift to state 450
-- On PLUS shift to state 12
-- On NOT shift to state 13
-- On MINUS shift to state 14
-- On LEFTPARENS shift to state 15
-- On LEFTCURLY shift to state 18
-- On LEFTBRACKET shift to state 20
-- On INTEGER shift to state 22
-- On IDENTIFIER shift to state 23
-- On FORMAT shift to state 24
-- On FLOAT shift to state 26
-- On FALSE shift to state 27
-- On ELLIPSES shift to state 28
-- On COMPLEX shift to state 29
-- On BYTES shift to state 30
-- On AWAIT shift to state 32
-- On ASYNC shift to state 33
-- On ASTERIKS shift to state 453
-- On set_or_dictionary shift to state 35
-- On nonempty_list(BYTES) shift to state 36
-- On identifier shift to state 37
-- On expression shift to state 456
-- On define_parameters shift to state 468
-- On atom shift to state 71
## Reductions:
-- On RIGHTPARENS
--   reduce production define_parameters ->

State 468:
## Known stack suffix:
## expression option(annotation) COMMA option(comment_annotation) define_parameters
## LR(1) items:
define_parameters -> expression option(annotation) COMMA option(comment_annotation) define_parameters . [ RIGHTPARENS ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production define_parameters -> expression option(annotation) COMMA option(comment_annotation) define_parameters

State 469:
## Known stack suffix:
## expression option(annotation) option(comment_annotation)
## LR(1) items:
define_parameters -> expression option(annotation) option(comment_annotation) . [ RIGHTPARENS ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production define_parameters -> expression option(annotation) option(comment_annotation)

State 470:
## Known stack suffix:
## ASTERIKS COMMA option(comment_annotation) define_parameters
## LR(1) items:
define_parameters -> ASTERIKS COMMA option(comment_annotation) define_parameters . [ RIGHTPARENS ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production define_parameters -> ASTERIKS COMMA option(comment_annotation) define_parameters

State 471:
## Known stack suffix:
## ASTERIKS option(comment_annotation)
## LR(1) items:
define_parameters -> ASTERIKS option(comment_annotation) . [ RIGHTPARENS ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production define_parameters -> ASTERIKS option(comment_annotation)

State 472:
## Known stack suffix:
## SLASH COMMA option(comment_annotation) define_parameters
## LR(1) items:
define_parameters -> SLASH COMMA option(comment_annotation) define_parameters . [ RIGHTPARENS ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production define_parameters -> SLASH COMMA option(comment_annotation) define_parameters

State 473:
## Known stack suffix:
## SLASH option(comment_annotation)
## LR(1) items:
define_parameters -> SLASH option(comment_annotation) . [ RIGHTPARENS ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production define_parameters -> SLASH option(comment_annotation)

State 474:
## Known stack suffix:
## DEFINE reference LEFTPARENS define_parameters
## LR(1) items:
compound_statement -> DEFINE reference LEFTPARENS define_parameters . RIGHTPARENS option(return_annotation) COLON option(SIGNATURE_COMMENT) block_or_stub_body [ YIELD WITH WHILE TRY TRUE TILDE STRING RETURN RAISE PLUS PASS NOT NONLOCAL NEWLINE MINUS LEFTPARENS LEFTCURLY LEFTBRACKET LAMBDA INTEGER IMPORT IF IDENTIFIER GLOBAL FROM FORMAT FOR FLOAT FALSE EOF ELLIPSES DELETE DEFINE DEDENT CONTINUE COMPLEX CLASS BYTES BREAK AWAIT AT ASYNC ASTERIKS ASSERT ]
## Transitions:
-- On RIGHTPARENS shift to state 475
## Reductions:

State 475:
## Known stack suffix:
## DEFINE reference LEFTPARENS define_parameters RIGHTPARENS
## LR(1) items:
compound_statement -> DEFINE reference LEFTPARENS define_parameters RIGHTPARENS . option(return_annotation) COLON option(SIGNATURE_COMMENT) block_or_stub_body [ YIELD WITH WHILE TRY TRUE TILDE STRING RETURN RAISE PLUS PASS NOT NONLOCAL NEWLINE MINUS LEFTPARENS LEFTCURLY LEFTBRACKET LAMBDA INTEGER IMPORT IF IDENTIFIER GLOBAL FROM FORMAT FOR FLOAT FALSE EOF ELLIPSES DELETE DEFINE DEDENT CONTINUE COMPLEX CLASS BYTES BREAK AWAIT AT ASYNC ASTERIKS ASSERT ]
## Transitions:
-- On MINUS shift to state 476
-- On option(return_annotation) shift to state 479
## Reductions:
-- On COLON
--   reduce production option(return_annotation) ->

State 476:
## Known stack suffix:
## MINUS
## LR(1) items:
option(return_annotation) -> MINUS . RIGHTANGLE expression [ COLON ]
## Transitions:
-- On RIGHTANGLE shift to state 477
## Reductions:

State 477:
## Known stack suffix:
## MINUS RIGHTANGLE
## LR(1) items:
option(return_annotation) -> MINUS RIGHTANGLE . expression [ COLON ]
## Transitions:
-- On TRUE shift to state 4
-- On TILDE shift to state 5
-- On STRING shift to state 6
-- On PLUS shift to state 12
-- On NOT shift to state 13
-- On MINUS shift to state 14
-- On LEFTPARENS shift to state 15
-- On LEFTCURLY shift to state 18
-- On LEFTBRACKET shift to state 20
-- On INTEGER shift to state 22
-- On IDENTIFIER shift to state 23
-- On FORMAT shift to state 24
-- On FLOAT shift to state 26
-- On FALSE shift to state 27
-- On ELLIPSES shift to state 28
-- On COMPLEX shift to state 29
-- On BYTES shift to state 30
-- On AWAIT shift to state 32
-- On ASYNC shift to state 33
-- On ASTERIKS shift to state 34
-- On set_or_dictionary shift to state 35
-- On nonempty_list(BYTES) shift to state 36
-- On identifier shift to state 37
-- On expression shift to state 478
-- On atom shift to state 71
## Reductions:

State 478:
## Known stack suffix:
## MINUS RIGHTANGLE expression
## LR(1) items:
atom -> expression . PLUS expression [ SLASH RIGHTANGLERIGHTANGLE PLUS PERCENT MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLE HAT DOT COLON BAR AT ASTERIKS AMPERSAND ]
atom -> expression . AT expression [ SLASH RIGHTANGLERIGHTANGLE PLUS PERCENT MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLE HAT DOT COLON BAR AT ASTERIKS AMPERSAND ]
atom -> expression . AMPERSAND expression [ SLASH RIGHTANGLERIGHTANGLE PLUS PERCENT MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLE HAT DOT COLON BAR AT ASTERIKS AMPERSAND ]
atom -> expression . BAR expression [ SLASH RIGHTANGLERIGHTANGLE PLUS PERCENT MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLE HAT DOT COLON BAR AT ASTERIKS AMPERSAND ]
atom -> expression . HAT expression [ SLASH RIGHTANGLERIGHTANGLE PLUS PERCENT MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLE HAT DOT COLON BAR AT ASTERIKS AMPERSAND ]
atom -> expression . SLASH SLASH expression [ SLASH RIGHTANGLERIGHTANGLE PLUS PERCENT MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLE HAT DOT COLON BAR AT ASTERIKS AMPERSAND ]
atom -> expression . SLASH expression [ SLASH RIGHTANGLERIGHTANGLE PLUS PERCENT MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLE HAT DOT COLON BAR AT ASTERIKS AMPERSAND ]
atom -> expression . LEFTANGLELEFTANGLE expression [ SLASH RIGHTANGLERIGHTANGLE PLUS PERCENT MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLE HAT DOT COLON BAR AT ASTERIKS AMPERSAND ]
atom -> expression . PERCENT expression [ SLASH RIGHTANGLERIGHTANGLE PLUS PERCENT MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLE HAT DOT COLON BAR AT ASTERIKS AMPERSAND ]
atom -> expression . ASTERIKS ASTERIKS expression [ SLASH RIGHTANGLERIGHTANGLE PLUS PERCENT MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLE HAT DOT COLON BAR AT ASTERIKS AMPERSAND ]
atom -> expression . ASTERIKS expression [ SLASH RIGHTANGLERIGHTANGLE PLUS PERCENT MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLE HAT DOT COLON BAR AT ASTERIKS AMPERSAND ]
atom -> expression . RIGHTANGLERIGHTANGLE expression [ SLASH RIGHTANGLERIGHTANGLE PLUS PERCENT MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLE HAT DOT COLON BAR AT ASTERIKS AMPERSAND ]
atom -> expression . MINUS expression [ SLASH RIGHTANGLERIGHTANGLE PLUS PERCENT MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLE HAT DOT COLON BAR AT ASTERIKS AMPERSAND ]
atom -> expression . LEFTPARENS arguments RIGHTPARENS [ SLASH RIGHTANGLERIGHTANGLE PLUS PERCENT MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLE HAT DOT COLON BAR AT ASTERIKS AMPERSAND ]
expression -> expression . DOT identifier [ SLASH RIGHTANGLERIGHTANGLE PLUS PERCENT MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLE HAT DOT COLON BAR AT ASTERIKS AMPERSAND ]
expression -> expression . LEFTBRACKET parser_generator_separated_nonempty_list(COMMA,subscript_key) RIGHTBRACKET [ SLASH RIGHTANGLERIGHTANGLE PLUS PERCENT MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLE HAT DOT COLON BAR AT ASTERIKS AMPERSAND ]
option(return_annotation) -> MINUS RIGHTANGLE expression . [ COLON ]
## Transitions:
-- On SLASH shift to state 52
-- On RIGHTANGLERIGHTANGLE shift to state 95
-- On PLUS shift to state 97
-- On PERCENT shift to state 99
-- On MINUS shift to state 104
-- On LEFTPARENS shift to state 39
-- On LEFTBRACKET shift to state 55
-- On LEFTANGLELEFTANGLE shift to state 106
-- On HAT shift to state 108
-- On DOT shift to state 90
-- On BAR shift to state 112
-- On AT shift to state 92
-- On ASTERIKS shift to state 101
-- On AMPERSAND shift to state 110
## Reductions:
-- On COLON
--   reduce production option(return_annotation) -> MINUS RIGHTANGLE expression

State 479:
## Known stack suffix:
## DEFINE reference LEFTPARENS define_parameters RIGHTPARENS option(return_annotation)
## LR(1) items:
compound_statement -> DEFINE reference LEFTPARENS define_parameters RIGHTPARENS option(return_annotation) . COLON option(SIGNATURE_COMMENT) block_or_stub_body [ YIELD WITH WHILE TRY TRUE TILDE STRING RETURN RAISE PLUS PASS NOT NONLOCAL NEWLINE MINUS LEFTPARENS LEFTCURLY LEFTBRACKET LAMBDA INTEGER IMPORT IF IDENTIFIER GLOBAL FROM FORMAT FOR FLOAT FALSE EOF ELLIPSES DELETE DEFINE DEDENT CONTINUE COMPLEX CLASS BYTES BREAK AWAIT AT ASYNC ASTERIKS ASSERT ]
## Transitions:
-- On COLON shift to state 480
## Reductions:

State 480:
## Known stack suffix:
## DEFINE reference LEFTPARENS define_parameters RIGHTPARENS option(return_annotation) COLON
## LR(1) items:
compound_statement -> DEFINE reference LEFTPARENS define_parameters RIGHTPARENS option(return_annotation) COLON . option(SIGNATURE_COMMENT) block_or_stub_body [ YIELD WITH WHILE TRY TRUE TILDE STRING RETURN RAISE PLUS PASS NOT NONLOCAL NEWLINE MINUS LEFTPARENS LEFTCURLY LEFTBRACKET LAMBDA INTEGER IMPORT IF IDENTIFIER GLOBAL FROM FORMAT FOR FLOAT FALSE EOF ELLIPSES DELETE DEFINE DEDENT CONTINUE COMPLEX CLASS BYTES BREAK AWAIT AT ASYNC ASTERIKS ASSERT ]
## Transitions:
-- On SIGNATURE_COMMENT shift to state 481
-- On option(SIGNATURE_COMMENT) shift to state 482
## Reductions:
-- On YIELD TRUE TILDE STRING RETURN RAISE PLUS PASS NOT NONLOCAL NEWLINE MINUS LEFTPARENS LEFTCURLY LEFTBRACKET LAMBDA INTEGER IMPORT IDENTIFIER GLOBAL FROM FORMAT FLOAT FALSE ELLIPSES DELETE CONTINUE COMPLEX BYTES BREAK AWAIT ASYNC ASTERIKS ASSERT
--   reduce production option(SIGNATURE_COMMENT) ->

State 481:
## Known stack suffix:
## SIGNATURE_COMMENT
## LR(1) items:
option(SIGNATURE_COMMENT) -> SIGNATURE_COMMENT . [ YIELD TRUE TILDE STRING RETURN RAISE PLUS PASS NOT NONLOCAL NEWLINE MINUS LEFTPARENS LEFTCURLY LEFTBRACKET LAMBDA INTEGER IMPORT IDENTIFIER GLOBAL FROM FORMAT FLOAT FALSE ELLIPSES DELETE CONTINUE COMPLEX BYTES BREAK AWAIT ASYNC ASTERIKS ASSERT ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production option(SIGNATURE_COMMENT) -> SIGNATURE_COMMENT

State 482:
## Known stack suffix:
## DEFINE reference LEFTPARENS define_parameters RIGHTPARENS option(return_annotation) COLON option(SIGNATURE_COMMENT)
## LR(1) items:
compound_statement -> DEFINE reference LEFTPARENS define_parameters RIGHTPARENS option(return_annotation) COLON option(SIGNATURE_COMMENT) . block_or_stub_body [ YIELD WITH WHILE TRY TRUE TILDE STRING RETURN RAISE PLUS PASS NOT NONLOCAL NEWLINE MINUS LEFTPARENS LEFTCURLY LEFTBRACKET LAMBDA INTEGER IMPORT IF IDENTIFIER GLOBAL FROM FORMAT FOR FLOAT FALSE EOF ELLIPSES DELETE DEFINE DEDENT CONTINUE COMPLEX CLASS BYTES BREAK AWAIT AT ASYNC ASTERIKS ASSERT ]
## Transitions:
-- On YIELD shift to state 1
-- On TRUE shift to state 4
-- On TILDE shift to state 5
-- On STRING shift to state 6
-- On RETURN shift to state 234
-- On RAISE shift to state 236
-- On PLUS shift to state 12
-- On PASS shift to state 242
-- On NOT shift to state 17
-- On NONLOCAL shift to state 243
-- On NEWLINE shift to state 251
-- On MINUS shift to state 14
-- On LEFTPARENS shift to state 15
-- On LEFTCURLY shift to state 18
-- On LEFTBRACKET shift to state 20
-- On LAMBDA shift to state 21
-- On INTEGER shift to state 22
-- On IMPORT shift to state 253
-- On IDENTIFIER shift to state 23
-- On GLOBAL shift to state 276
-- On FROM shift to state 278
-- On FORMAT shift to state 24
-- On FLOAT shift to state 26
-- On FALSE shift to state 27
-- On ELLIPSES shift to state 483
-- On DELETE shift to state 291
-- On CONTINUE shift to state 293
-- On COMPLEX shift to state 29
-- On BYTES shift to state 30
-- On BREAK shift to state 294
-- On AWAIT shift to state 32
-- On ASYNC shift to state 33
-- On ASTERIKS shift to state 34
-- On ASSERT shift to state 295
-- On yield shift to state 299
-- On test_list shift to state 300
-- On test shift to state 75
-- On targets shift to state 336
-- On small_statement shift to state 348
-- On simple_statement shift to state 385
-- On set_or_dictionary shift to state 35
-- On separated_nonempty_list_indicator(COMMA,test) shift to state 80
-- On parser_generator_separated_nonempty_list_of_lists(SEMICOLON,small_statement) shift to state 386
-- On or_test shift to state 62
-- On not_test shift to state 49
-- On nonempty_list(NEWLINE) shift to state 485
-- On nonempty_list(BYTES) shift to state 36
-- On identifier shift to state 67
-- On expression shift to state 353
-- On comparison shift to state 70
-- On block_or_stub_body shift to state 526
-- On block shift to state 501
-- On atom shift to state 71
-- On and_test shift to state 72
## Reductions:

State 483:
## Known stack suffix:
## ELLIPSES
## LR(1) items:
atom -> ELLIPSES . [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT EXCLAMATIONMARK EQUALS DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
block_or_stub_body -> ELLIPSES . NEWLINE [ YIELD WITH WHILE TRY TRUE TILDE STRING RETURN RAISE PLUS PASS NOT NONLOCAL NEWLINE MINUS LEFTPARENS LEFTCURLY LEFTBRACKET LAMBDA INTEGER IMPORT IF IDENTIFIER GLOBAL FROM FORMAT FOR FLOAT FALSE EOF ELLIPSES DELETE DEFINE DEDENT CONTINUE COMPLEX CLASS BYTES BREAK AWAIT AT ASYNC ASTERIKS ASSERT ]
## Transitions:
-- On NEWLINE shift to state 484
## Reductions:
-- On SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT EXCLAMATIONMARK EQUALS DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND
--   reduce production atom -> ELLIPSES

State 484:
## Known stack suffix:
## ELLIPSES NEWLINE
## LR(1) items:
block_or_stub_body -> ELLIPSES NEWLINE . [ YIELD WITH WHILE TRY TRUE TILDE STRING RETURN RAISE PLUS PASS NOT NONLOCAL NEWLINE MINUS LEFTPARENS LEFTCURLY LEFTBRACKET LAMBDA INTEGER IMPORT IF IDENTIFIER GLOBAL FROM FORMAT FOR FLOAT FALSE EOF ELLIPSES DELETE DEFINE DEDENT CONTINUE COMPLEX CLASS BYTES BREAK AWAIT AT ASYNC ASTERIKS ASSERT ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production block_or_stub_body -> ELLIPSES NEWLINE

State 485:
## Known stack suffix:
## nonempty_list(NEWLINE)
## LR(1) items:
block -> nonempty_list(NEWLINE) . INDENT statements DEDENT list(NEWLINE) [ YIELD WITH WHILE TRY TRUE TILDE STRING RETURN RAISE PLUS PASS NOT NONLOCAL NEWLINE MINUS LEFTPARENS LEFTCURLY LEFTBRACKET LAMBDA INTEGER IMPORT IF IDENTIFIER GLOBAL FROM FORMAT FOR FLOAT FALSE EOF ELLIPSES DELETE DEFINE DEDENT CONTINUE COMPLEX CLASS BYTES BREAK AWAIT AT ASYNC ASTERIKS ASSERT ]
block_or_stub_body -> nonempty_list(NEWLINE) . INDENT ELLIPSES NEWLINE DEDENT list(NEWLINE) [ YIELD WITH WHILE TRY TRUE TILDE STRING RETURN RAISE PLUS PASS NOT NONLOCAL NEWLINE MINUS LEFTPARENS LEFTCURLY LEFTBRACKET LAMBDA INTEGER IMPORT IF IDENTIFIER GLOBAL FROM FORMAT FOR FLOAT FALSE EOF ELLIPSES DELETE DEFINE DEDENT CONTINUE COMPLEX CLASS BYTES BREAK AWAIT AT ASYNC ASTERIKS ASSERT ]
## Transitions:
-- On INDENT shift to state 486
## Reductions:

State 486:
## Known stack suffix:
## nonempty_list(NEWLINE) INDENT
## LR(1) items:
block -> nonempty_list(NEWLINE) INDENT . statements DEDENT list(NEWLINE) [ YIELD WITH WHILE TRY TRUE TILDE STRING RETURN RAISE PLUS PASS NOT NONLOCAL NEWLINE MINUS LEFTPARENS LEFTCURLY LEFTBRACKET LAMBDA INTEGER IMPORT IF IDENTIFIER GLOBAL FROM FORMAT FOR FLOAT FALSE EOF ELLIPSES DELETE DEFINE DEDENT CONTINUE COMPLEX CLASS BYTES BREAK AWAIT AT ASYNC ASTERIKS ASSERT ]
block_or_stub_body -> nonempty_list(NEWLINE) INDENT . ELLIPSES NEWLINE DEDENT list(NEWLINE) [ YIELD WITH WHILE TRY TRUE TILDE STRING RETURN RAISE PLUS PASS NOT NONLOCAL NEWLINE MINUS LEFTPARENS LEFTCURLY LEFTBRACKET LAMBDA INTEGER IMPORT IF IDENTIFIER GLOBAL FROM FORMAT FOR FLOAT FALSE EOF ELLIPSES DELETE DEFINE DEDENT CONTINUE COMPLEX CLASS BYTES BREAK AWAIT AT ASYNC ASTERIKS ASSERT ]
## Transitions:
-- On YIELD shift to state 1
-- On WITH shift to state 220
-- On WHILE shift to state 390
-- On TRY shift to state 398
-- On TRUE shift to state 4
-- On TILDE shift to state 5
-- On STRING shift to state 6
-- On RETURN shift to state 234
-- On RAISE shift to state 236
-- On PLUS shift to state 12
-- On PASS shift to state 242
-- On NOT shift to state 17
-- On NONLOCAL shift to state 243
-- On NEWLINE shift to state 430
-- On MINUS shift to state 14
-- On LEFTPARENS shift to state 15
-- On LEFTCURLY shift to state 18
-- On LEFTBRACKET shift to state 20
-- On LAMBDA shift to state 21
-- On INTEGER shift to state 22
-- On IMPORT shift to state 253
-- On IF shift to state 431
-- On IDENTIFIER shift to state 23
-- On GLOBAL shift to state 276
-- On FROM shift to state 278
-- On FORMAT shift to state 24
-- On FOR shift to state 439
-- On FLOAT shift to state 26
-- On FALSE shift to state 27
-- On ELLIPSES shift to state 487
-- On DELETE shift to state 291
-- On DEFINE shift to state 447
-- On CONTINUE shift to state 293
-- On COMPLEX shift to state 29
-- On CLASS shift to state 493
-- On BYTES shift to state 30
-- On BREAK shift to state 294
-- On AWAIT shift to state 32
-- On AT shift to state 502
-- On ASYNC shift to state 509
-- On ASTERIKS shift to state 34
-- On ASSERT shift to state 295
-- On yield shift to state 299
-- On test_list shift to state 300
-- On test shift to state 75
-- On targets shift to state 336
-- On statements shift to state 511
-- On statement shift to state 514
-- On small_statement shift to state 348
-- On simple_statement shift to state 516
-- On set_or_dictionary shift to state 35
-- On separated_nonempty_list_indicator(COMMA,test) shift to state 80
-- On parser_generator_separated_nonempty_list_of_lists(SEMICOLON,small_statement) shift to state 386
-- On or_test shift to state 62
-- On not_test shift to state 49
-- On nonempty_list(decorator) shift to state 517
-- On nonempty_list(BYTES) shift to state 36
-- On identifier shift to state 67
-- On expression shift to state 353
-- On decorator shift to state 521
-- On decorated_statement shift to state 523
-- On compound_statement shift to state 524
-- On comparison shift to state 70
-- On atom shift to state 71
-- On async_statement shift to state 525
-- On and_test shift to state 72
## Reductions:
-- On DEDENT
--   reduce production statements ->

State 487:
## Known stack suffix:
## nonempty_list(NEWLINE) INDENT ELLIPSES
## LR(1) items:
atom -> ELLIPSES . [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT EXCLAMATIONMARK EQUALS DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
block_or_stub_body -> nonempty_list(NEWLINE) INDENT ELLIPSES . NEWLINE DEDENT list(NEWLINE) [ YIELD WITH WHILE TRY TRUE TILDE STRING RETURN RAISE PLUS PASS NOT NONLOCAL NEWLINE MINUS LEFTPARENS LEFTCURLY LEFTBRACKET LAMBDA INTEGER IMPORT IF IDENTIFIER GLOBAL FROM FORMAT FOR FLOAT FALSE EOF ELLIPSES DELETE DEFINE DEDENT CONTINUE COMPLEX CLASS BYTES BREAK AWAIT AT ASYNC ASTERIKS ASSERT ]
## Transitions:
-- On NEWLINE shift to state 488
## Reductions:
-- On SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT EXCLAMATIONMARK EQUALS DOUBLEEQUALS DOT COMMA COLON BAREQUALS BAR ATEQUALS AT ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND
--   reduce production atom -> ELLIPSES

State 488:
## Known stack suffix:
## nonempty_list(NEWLINE) INDENT ELLIPSES NEWLINE
## LR(1) items:
block_or_stub_body -> nonempty_list(NEWLINE) INDENT ELLIPSES NEWLINE . DEDENT list(NEWLINE) [ YIELD WITH WHILE TRY TRUE TILDE STRING RETURN RAISE PLUS PASS NOT NONLOCAL NEWLINE MINUS LEFTPARENS LEFTCURLY LEFTBRACKET LAMBDA INTEGER IMPORT IF IDENTIFIER GLOBAL FROM FORMAT FOR FLOAT FALSE EOF ELLIPSES DELETE DEFINE DEDENT CONTINUE COMPLEX CLASS BYTES BREAK AWAIT AT ASYNC ASTERIKS ASSERT ]
## Transitions:
-- On DEDENT shift to state 489
## Reductions:

State 489:
## Known stack suffix:
## nonempty_list(NEWLINE) INDENT ELLIPSES NEWLINE DEDENT
## LR(1) items:
block_or_stub_body -> nonempty_list(NEWLINE) INDENT ELLIPSES NEWLINE DEDENT . list(NEWLINE) [ YIELD WITH WHILE TRY TRUE TILDE STRING RETURN RAISE PLUS PASS NOT NONLOCAL NEWLINE MINUS LEFTPARENS LEFTCURLY LEFTBRACKET LAMBDA INTEGER IMPORT IF IDENTIFIER GLOBAL FROM FORMAT FOR FLOAT FALSE EOF ELLIPSES DELETE DEFINE DEDENT CONTINUE COMPLEX CLASS BYTES BREAK AWAIT AT ASYNC ASTERIKS ASSERT ]
## Transitions:
-- On NEWLINE shift to state 490
-- On list(NEWLINE) shift to state 492
## Reductions:
-- On YIELD WITH WHILE TRY TRUE TILDE STRING RETURN RAISE PLUS PASS NOT NONLOCAL MINUS LEFTPARENS LEFTCURLY LEFTBRACKET LAMBDA INTEGER IMPORT IF IDENTIFIER GLOBAL FROM FORMAT FOR FLOAT FALSE EOF ELLIPSES DELETE DEFINE DEDENT CONTINUE COMPLEX CLASS BYTES BREAK AWAIT AT ASYNC ASTERIKS ASSERT
--   reduce production list(NEWLINE) ->

State 490:
## Known stack suffix:
## NEWLINE
## LR(1) items:
list(NEWLINE) -> NEWLINE . list(NEWLINE) [ YIELD WITH WHILE TRY TRUE TILDE STRING RETURN RAISE PLUS PASS NOT NONLOCAL NEWLINE MINUS LEFTPARENS LEFTCURLY LEFTBRACKET LAMBDA INTEGER IMPORT IF IDENTIFIER GLOBAL FROM FORMAT FOR FLOAT FINALLY FALSE EXCEPT EOF ELSEIF ELSE ELLIPSES DELETE DEFINE DEDENT CONTINUE COMPLEX CLASS BYTES BREAK AWAIT AT ASYNC ASTERIKS ASSERT ]
## Transitions:
-- On NEWLINE shift to state 490
-- On list(NEWLINE) shift to state 491
## Reductions:
-- On YIELD WITH WHILE TRY TRUE TILDE STRING RETURN RAISE PLUS PASS NOT NONLOCAL MINUS LEFTPARENS LEFTCURLY LEFTBRACKET LAMBDA INTEGER IMPORT IF IDENTIFIER GLOBAL FROM FORMAT FOR FLOAT FINALLY FALSE EXCEPT EOF ELSEIF ELSE ELLIPSES DELETE DEFINE DEDENT CONTINUE COMPLEX CLASS BYTES BREAK AWAIT AT ASYNC ASTERIKS ASSERT
--   reduce production list(NEWLINE) ->

State 491:
## Known stack suffix:
## NEWLINE list(NEWLINE)
## LR(1) items:
list(NEWLINE) -> NEWLINE list(NEWLINE) . [ YIELD WITH WHILE TRY TRUE TILDE STRING RETURN RAISE PLUS PASS NOT NONLOCAL NEWLINE MINUS LEFTPARENS LEFTCURLY LEFTBRACKET LAMBDA INTEGER IMPORT IF IDENTIFIER GLOBAL FROM FORMAT FOR FLOAT FINALLY FALSE EXCEPT EOF ELSEIF ELSE ELLIPSES DELETE DEFINE DEDENT CONTINUE COMPLEX CLASS BYTES BREAK AWAIT AT ASYNC ASTERIKS ASSERT ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production list(NEWLINE) -> NEWLINE list(NEWLINE)

State 492:
## Known stack suffix:
## nonempty_list(NEWLINE) INDENT ELLIPSES NEWLINE DEDENT list(NEWLINE)
## LR(1) items:
block_or_stub_body -> nonempty_list(NEWLINE) INDENT ELLIPSES NEWLINE DEDENT list(NEWLINE) . [ YIELD WITH WHILE TRY TRUE TILDE STRING RETURN RAISE PLUS PASS NOT NONLOCAL NEWLINE MINUS LEFTPARENS LEFTCURLY LEFTBRACKET LAMBDA INTEGER IMPORT IF IDENTIFIER GLOBAL FROM FORMAT FOR FLOAT FALSE EOF ELLIPSES DELETE DEFINE DEDENT CONTINUE COMPLEX CLASS BYTES BREAK AWAIT AT ASYNC ASTERIKS ASSERT ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production block_or_stub_body -> nonempty_list(NEWLINE) INDENT ELLIPSES NEWLINE DEDENT list(NEWLINE)

State 493:
## Known stack suffix:
## CLASS
## LR(1) items:
compound_statement -> CLASS . reference bases COLON block_or_stub_body [ YIELD WITH WHILE TRY TRUE TILDE STRING RETURN RAISE PLUS PASS NOT NONLOCAL NEWLINE MINUS LEFTPARENS LEFTCURLY LEFTBRACKET LAMBDA INTEGER IMPORT IF IDENTIFIER GLOBAL FROM FORMAT FOR FLOAT FALSE EOF ELLIPSES DELETE DEFINE DEDENT CONTINUE COMPLEX CLASS BYTES BREAK AWAIT AT ASYNC ASTERIKS ASSERT ]
## Transitions:
-- On IDENTIFIER shift to state 23
-- On ASYNC shift to state 33
-- On reference shift to state 494
-- On parser_generator_separated_nonempty_list(DOT,identifier) shift to state 259
-- On identifier shift to state 268
## Reductions:

State 494:
## Known stack suffix:
## CLASS reference
## LR(1) items:
compound_statement -> CLASS reference . bases COLON block_or_stub_body [ YIELD WITH WHILE TRY TRUE TILDE STRING RETURN RAISE PLUS PASS NOT NONLOCAL NEWLINE MINUS LEFTPARENS LEFTCURLY LEFTBRACKET LAMBDA INTEGER IMPORT IF IDENTIFIER GLOBAL FROM FORMAT FOR FLOAT FALSE EOF ELLIPSES DELETE DEFINE DEDENT CONTINUE COMPLEX CLASS BYTES BREAK AWAIT AT ASYNC ASTERIKS ASSERT ]
## Transitions:
-- On LEFTPARENS shift to state 495
-- On bases shift to state 498
## Reductions:
-- On COLON
--   reduce production bases ->

State 495:
## Known stack suffix:
## LEFTPARENS
## LR(1) items:
bases -> LEFTPARENS . parser_generator_separated_list(COMMA,argument) RIGHTPARENS [ COLON ]
## Transitions:
-- On TRUE shift to state 4
-- On TILDE shift to state 5
-- On STRING shift to state 6
-- On PLUS shift to state 12
-- On NOT shift to state 17
-- On MINUS shift to state 14
-- On LEFTPARENS shift to state 15
-- On LEFTCURLY shift to state 18
-- On LEFTBRACKET shift to state 20
-- On LAMBDA shift to state 21
-- On INTEGER shift to state 22
-- On IDENTIFIER shift to state 23
-- On FORMAT shift to state 24
-- On FLOAT shift to state 26
-- On FALSE shift to state 27
-- On ELLIPSES shift to state 28
-- On COMPLEX shift to state 29
-- On BYTES shift to state 30
-- On AWAIT shift to state 32
-- On ASYNC shift to state 33
-- On ASTERIKS shift to state 34
-- On test shift to state 168
-- On set_or_dictionary shift to state 35
-- On parser_generator_separated_list(COMMA,argument) shift to state 496
-- On or_test shift to state 62
-- On not_test shift to state 49
-- On nonempty_list(BYTES) shift to state 36
-- On identifier shift to state 159
-- On expression shift to state 51
-- On comparison shift to state 70
-- On atom shift to state 71
-- On argument shift to state 166
-- On and_test shift to state 72
## Reductions:
-- On RIGHTPARENS
--   reduce production parser_generator_separated_list(COMMA,argument) ->

State 496:
## Known stack suffix:
## LEFTPARENS parser_generator_separated_list(COMMA,argument)
## LR(1) items:
bases -> LEFTPARENS parser_generator_separated_list(COMMA,argument) . RIGHTPARENS [ COLON ]
## Transitions:
-- On RIGHTPARENS shift to state 497
## Reductions:

State 497:
## Known stack suffix:
## LEFTPARENS parser_generator_separated_list(COMMA,argument) RIGHTPARENS
## LR(1) items:
bases -> LEFTPARENS parser_generator_separated_list(COMMA,argument) RIGHTPARENS . [ COLON ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production bases -> LEFTPARENS parser_generator_separated_list(COMMA,argument) RIGHTPARENS

State 498:
## Known stack suffix:
## CLASS reference bases
## LR(1) items:
compound_statement -> CLASS reference bases . COLON block_or_stub_body [ YIELD WITH WHILE TRY TRUE TILDE STRING RETURN RAISE PLUS PASS NOT NONLOCAL NEWLINE MINUS LEFTPARENS LEFTCURLY LEFTBRACKET LAMBDA INTEGER IMPORT IF IDENTIFIER GLOBAL FROM FORMAT FOR FLOAT FALSE EOF ELLIPSES DELETE DEFINE DEDENT CONTINUE COMPLEX CLASS BYTES BREAK AWAIT AT ASYNC ASTERIKS ASSERT ]
## Transitions:
-- On COLON shift to state 499
## Reductions:

State 499:
## Known stack suffix:
## CLASS reference bases COLON
## LR(1) items:
compound_statement -> CLASS reference bases COLON . block_or_stub_body [ YIELD WITH WHILE TRY TRUE TILDE STRING RETURN RAISE PLUS PASS NOT NONLOCAL NEWLINE MINUS LEFTPARENS LEFTCURLY LEFTBRACKET LAMBDA INTEGER IMPORT IF IDENTIFIER GLOBAL FROM FORMAT FOR FLOAT FALSE EOF ELLIPSES DELETE DEFINE DEDENT CONTINUE COMPLEX CLASS BYTES BREAK AWAIT AT ASYNC ASTERIKS ASSERT ]
## Transitions:
-- On YIELD shift to state 1
-- On TRUE shift to state 4
-- On TILDE shift to state 5
-- On STRING shift to state 6
-- On RETURN shift to state 234
-- On RAISE shift to state 236
-- On PLUS shift to state 12
-- On PASS shift to state 242
-- On NOT shift to state 17
-- On NONLOCAL shift to state 243
-- On NEWLINE shift to state 251
-- On MINUS shift to state 14
-- On LEFTPARENS shift to state 15
-- On LEFTCURLY shift to state 18
-- On LEFTBRACKET shift to state 20
-- On LAMBDA shift to state 21
-- On INTEGER shift to state 22
-- On IMPORT shift to state 253
-- On IDENTIFIER shift to state 23
-- On GLOBAL shift to state 276
-- On FROM shift to state 278
-- On FORMAT shift to state 24
-- On FLOAT shift to state 26
-- On FALSE shift to state 27
-- On ELLIPSES shift to state 483
-- On DELETE shift to state 291
-- On CONTINUE shift to state 293
-- On COMPLEX shift to state 29
-- On BYTES shift to state 30
-- On BREAK shift to state 294
-- On AWAIT shift to state 32
-- On ASYNC shift to state 33
-- On ASTERIKS shift to state 34
-- On ASSERT shift to state 295
-- On yield shift to state 299
-- On test_list shift to state 300
-- On test shift to state 75
-- On targets shift to state 336
-- On small_statement shift to state 348
-- On simple_statement shift to state 385
-- On set_or_dictionary shift to state 35
-- On separated_nonempty_list_indicator(COMMA,test) shift to state 80
-- On parser_generator_separated_nonempty_list_of_lists(SEMICOLON,small_statement) shift to state 386
-- On or_test shift to state 62
-- On not_test shift to state 49
-- On nonempty_list(NEWLINE) shift to state 485
-- On nonempty_list(BYTES) shift to state 36
-- On identifier shift to state 67
-- On expression shift to state 353
-- On comparison shift to state 70
-- On block_or_stub_body shift to state 500
-- On block shift to state 501
-- On atom shift to state 71
-- On and_test shift to state 72
## Reductions:

State 500:
## Known stack suffix:
## CLASS reference bases COLON block_or_stub_body
## LR(1) items:
compound_statement -> CLASS reference bases COLON block_or_stub_body . [ YIELD WITH WHILE TRY TRUE TILDE STRING RETURN RAISE PLUS PASS NOT NONLOCAL NEWLINE MINUS LEFTPARENS LEFTCURLY LEFTBRACKET LAMBDA INTEGER IMPORT IF IDENTIFIER GLOBAL FROM FORMAT FOR FLOAT FALSE EOF ELLIPSES DELETE DEFINE DEDENT CONTINUE COMPLEX CLASS BYTES BREAK AWAIT AT ASYNC ASTERIKS ASSERT ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production compound_statement -> CLASS reference bases COLON block_or_stub_body

State 501:
## Known stack suffix:
## block
## LR(1) items:
block_or_stub_body -> block . [ YIELD WITH WHILE TRY TRUE TILDE STRING RETURN RAISE PLUS PASS NOT NONLOCAL NEWLINE MINUS LEFTPARENS LEFTCURLY LEFTBRACKET LAMBDA INTEGER IMPORT IF IDENTIFIER GLOBAL FROM FORMAT FOR FLOAT FALSE EOF ELLIPSES DELETE DEFINE DEDENT CONTINUE COMPLEX CLASS BYTES BREAK AWAIT AT ASYNC ASTERIKS ASSERT ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production block_or_stub_body -> block

State 502:
## Known stack suffix:
## AT
## LR(1) items:
decorator -> AT . reference decorator_arguments nonempty_list(NEWLINE) [ WITH WHILE TRY IF FOR DEFINE CLASS AT ASYNC ]
## Transitions:
-- On IDENTIFIER shift to state 23
-- On ASYNC shift to state 33
-- On reference shift to state 503
-- On parser_generator_separated_nonempty_list(DOT,identifier) shift to state 259
-- On identifier shift to state 268
## Reductions:

State 503:
## Known stack suffix:
## AT reference
## LR(1) items:
decorator -> AT reference . decorator_arguments nonempty_list(NEWLINE) [ WITH WHILE TRY IF FOR DEFINE CLASS AT ASYNC ]
## Transitions:
-- On LEFTPARENS shift to state 504
-- On decorator_arguments shift to state 507
## Reductions:
-- On NEWLINE
--   reduce production decorator_arguments ->

State 504:
## Known stack suffix:
## LEFTPARENS
## LR(1) items:
decorator_arguments -> LEFTPARENS . arguments RIGHTPARENS [ NEWLINE ]
## Transitions:
-- On TRUE shift to state 4
-- On TILDE shift to state 5
-- On STRING shift to state 6
-- On PLUS shift to state 12
-- On NOT shift to state 17
-- On MINUS shift to state 14
-- On LEFTPARENS shift to state 15
-- On LEFTCURLY shift to state 18
-- On LEFTBRACKET shift to state 20
-- On LAMBDA shift to state 21
-- On INTEGER shift to state 22
-- On IDENTIFIER shift to state 23
-- On FORMAT shift to state 24
-- On FLOAT shift to state 26
-- On FALSE shift to state 27
-- On ELLIPSES shift to state 28
-- On COMPLEX shift to state 29
-- On BYTES shift to state 30
-- On AWAIT shift to state 32
-- On ASYNC shift to state 33
-- On ASTERIKS shift to state 34
-- On test_with_generator shift to state 40
-- On test shift to state 41
-- On set_or_dictionary shift to state 35
-- On parser_generator_separated_list(COMMA,argument) shift to state 158
-- On or_test shift to state 62
-- On not_test shift to state 49
-- On nonempty_list(BYTES) shift to state 36
-- On identifier shift to state 159
-- On generator shift to state 162
-- On expression shift to state 51
-- On comparison shift to state 70
-- On atom shift to state 71
-- On arguments shift to state 505
-- On argument shift to state 166
-- On and_test shift to state 72
## Reductions:
-- On RIGHTPARENS
--   reduce production parser_generator_separated_list(COMMA,argument) ->

State 505:
## Known stack suffix:
## LEFTPARENS arguments
## LR(1) items:
decorator_arguments -> LEFTPARENS arguments . RIGHTPARENS [ NEWLINE ]
## Transitions:
-- On RIGHTPARENS shift to state 506
## Reductions:

State 506:
## Known stack suffix:
## LEFTPARENS arguments RIGHTPARENS
## LR(1) items:
decorator_arguments -> LEFTPARENS arguments RIGHTPARENS . [ NEWLINE ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production decorator_arguments -> LEFTPARENS arguments RIGHTPARENS

State 507:
## Known stack suffix:
## AT reference decorator_arguments
## LR(1) items:
decorator -> AT reference decorator_arguments . nonempty_list(NEWLINE) [ WITH WHILE TRY IF FOR DEFINE CLASS AT ASYNC ]
## Transitions:
-- On NEWLINE shift to state 251
-- On nonempty_list(NEWLINE) shift to state 508
## Reductions:

State 508:
## Known stack suffix:
## AT reference decorator_arguments nonempty_list(NEWLINE)
## LR(1) items:
decorator -> AT reference decorator_arguments nonempty_list(NEWLINE) . [ WITH WHILE TRY IF FOR DEFINE CLASS AT ASYNC ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production decorator -> AT reference decorator_arguments nonempty_list(NEWLINE)

State 509:
## Known stack suffix:
## ASYNC
## LR(1) items:
async_statement -> ASYNC . compound_statement [ YIELD WITH WHILE TRY TRUE TILDE STRING RETURN RAISE PLUS PASS NOT NONLOCAL NEWLINE MINUS LEFTPARENS LEFTCURLY LEFTBRACKET LAMBDA INTEGER IMPORT IF IDENTIFIER GLOBAL FROM FORMAT FOR FLOAT FALSE EOF ELLIPSES DELETE DEFINE DEDENT CONTINUE COMPLEX CLASS BYTES BREAK AWAIT AT ASYNC ASTERIKS ASSERT ]
identifier -> ASYNC . [ SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN IF HATEQUALS HAT EXCLAMATIONMARK EQUALS DOUBLEEQUALS DOT COMMA COLONEQUALS COLON BAREQUALS BAR ATEQUALS AT ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND ]
## Transitions:
-- On WITH shift to state 220
-- On WHILE shift to state 390
-- On TRY shift to state 398
-- On IF shift to state 431
-- On FOR shift to state 439
-- On DEFINE shift to state 447
-- On CLASS shift to state 493
-- On compound_statement shift to state 510
## Reductions:
-- On SLASHSLASHEQUALS SLASHEQUALS SLASH SEMICOLON RIGHTANGLERIGHTANGLEEQUALS RIGHTANGLERIGHTANGLE RIGHTANGLEEQUALS RIGHTANGLE PLUSEQUALS PLUS PERCENTEQUALS PERCENT OR NOT NEWLINE MINUSEQUALS MINUS LEFTPARENS LEFTBRACKET LEFTANGLELEFTANGLEEQUALS LEFTANGLELEFTANGLE LEFTANGLEEQUALS LEFTANGLE ISNOT IS IN HATEQUALS HAT EXCLAMATIONMARK EQUALS DOUBLEEQUALS DOT COMMA COLONEQUALS COLON BAREQUALS BAR ATEQUALS AT ASTERIKSEQUALS ASTERIKSASTERIKSEQUALS ASTERIKS ANNOTATION_COMMENT AND AMPERSANDEQUALS AMPERSAND
--   reduce production identifier -> ASYNC

State 510:
## Known stack suffix:
## ASYNC compound_statement
## LR(1) items:
async_statement -> ASYNC compound_statement . [ YIELD WITH WHILE TRY TRUE TILDE STRING RETURN RAISE PLUS PASS NOT NONLOCAL NEWLINE MINUS LEFTPARENS LEFTCURLY LEFTBRACKET LAMBDA INTEGER IMPORT IF IDENTIFIER GLOBAL FROM FORMAT FOR FLOAT FALSE EOF ELLIPSES DELETE DEFINE DEDENT CONTINUE COMPLEX CLASS BYTES BREAK AWAIT AT ASYNC ASTERIKS ASSERT ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production async_statement -> ASYNC compound_statement

State 511:
## Known stack suffix:
## nonempty_list(NEWLINE) INDENT statements
## LR(1) items:
block -> nonempty_list(NEWLINE) INDENT statements . DEDENT list(NEWLINE) [ YIELD WITH WHILE TRY TRUE TILDE STRING RETURN RAISE PLUS PASS NOT NONLOCAL NEWLINE MINUS LEFTPARENS LEFTCURLY LEFTBRACKET LAMBDA INTEGER IMPORT IF IDENTIFIER GLOBAL FROM FORMAT FOR FLOAT FINALLY FALSE EXCEPT EOF ELSEIF ELSE ELLIPSES DELETE DEFINE DEDENT CONTINUE COMPLEX CLASS BYTES BREAK AWAIT AT ASYNC ASTERIKS ASSERT ]
## Transitions:
-- On DEDENT shift to state 512
## Reductions:

State 512:
## Known stack suffix:
## nonempty_list(NEWLINE) INDENT statements DEDENT
## LR(1) items:
block -> nonempty_list(NEWLINE) INDENT statements DEDENT . list(NEWLINE) [ YIELD WITH WHILE TRY TRUE TILDE STRING RETURN RAISE PLUS PASS NOT NONLOCAL NEWLINE MINUS LEFTPARENS LEFTCURLY LEFTBRACKET LAMBDA INTEGER IMPORT IF IDENTIFIER GLOBAL FROM FORMAT FOR FLOAT FINALLY FALSE EXCEPT EOF ELSEIF ELSE ELLIPSES DELETE DEFINE DEDENT CONTINUE COMPLEX CLASS BYTES BREAK AWAIT AT ASYNC ASTERIKS ASSERT ]
## Transitions:
-- On NEWLINE shift to state 490
-- On list(NEWLINE) shift to state 513
## Reductions:
-- On YIELD WITH WHILE TRY TRUE TILDE STRING RETURN RAISE PLUS PASS NOT NONLOCAL MINUS LEFTPARENS LEFTCURLY LEFTBRACKET LAMBDA INTEGER IMPORT IF IDENTIFIER GLOBAL FROM FORMAT FOR FLOAT FINALLY FALSE EXCEPT EOF ELSEIF ELSE ELLIPSES DELETE DEFINE DEDENT CONTINUE COMPLEX CLASS BYTES BREAK AWAIT AT ASYNC ASTERIKS ASSERT
--   reduce production list(NEWLINE) ->

State 513:
## Known stack suffix:
## nonempty_list(NEWLINE) INDENT statements DEDENT list(NEWLINE)
## LR(1) items:
block -> nonempty_list(NEWLINE) INDENT statements DEDENT list(NEWLINE) . [ YIELD WITH WHILE TRY TRUE TILDE STRING RETURN RAISE PLUS PASS NOT NONLOCAL NEWLINE MINUS LEFTPARENS LEFTCURLY LEFTBRACKET LAMBDA INTEGER IMPORT IF IDENTIFIER GLOBAL FROM FORMAT FOR FLOAT FINALLY FALSE EXCEPT EOF ELSEIF ELSE ELLIPSES DELETE DEFINE DEDENT CONTINUE COMPLEX CLASS BYTES BREAK AWAIT AT ASYNC ASTERIKS ASSERT ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production block -> nonempty_list(NEWLINE) INDENT statements DEDENT list(NEWLINE)

State 514:
## Known stack suffix:
## statement
## LR(1) items:
statements -> statement . statements [ EOF DEDENT ]
## Transitions:
-- On YIELD shift to state 1
-- On WITH shift to state 220
-- On WHILE shift to state 390
-- On TRY shift to state 398
-- On TRUE shift to state 4
-- On TILDE shift to state 5
-- On STRING shift to state 6
-- On RETURN shift to state 234
-- On RAISE shift to state 236
-- On PLUS shift to state 12
-- On PASS shift to state 242
-- On NOT shift to state 17
-- On NONLOCAL shift to state 243
-- On NEWLINE shift to state 430
-- On MINUS shift to state 14
-- On LEFTPARENS shift to state 15
-- On LEFTCURLY shift to state 18
-- On LEFTBRACKET shift to state 20
-- On LAMBDA shift to state 21
-- On INTEGER shift to state 22
-- On IMPORT shift to state 253
-- On IF shift to state 431
-- On IDENTIFIER shift to state 23
-- On GLOBAL shift to state 276
-- On FROM shift to state 278
-- On FORMAT shift to state 24
-- On FOR shift to state 439
-- On FLOAT shift to state 26
-- On FALSE shift to state 27
-- On ELLIPSES shift to state 28
-- On DELETE shift to state 291
-- On DEFINE shift to state 447
-- On CONTINUE shift to state 293
-- On COMPLEX shift to state 29
-- On CLASS shift to state 493
-- On BYTES shift to state 30
-- On BREAK shift to state 294
-- On AWAIT shift to state 32
-- On AT shift to state 502
-- On ASYNC shift to state 509
-- On ASTERIKS shift to state 34
-- On ASSERT shift to state 295
-- On yield shift to state 299
-- On test_list shift to state 300
-- On test shift to state 75
-- On targets shift to state 336
-- On statements shift to state 515
-- On statement shift to state 514
-- On small_statement shift to state 348
-- On simple_statement shift to state 516
-- On set_or_dictionary shift to state 35
-- On separated_nonempty_list_indicator(COMMA,test) shift to state 80
-- On parser_generator_separated_nonempty_list_of_lists(SEMICOLON,small_statement) shift to state 386
-- On or_test shift to state 62
-- On not_test shift to state 49
-- On nonempty_list(decorator) shift to state 517
-- On nonempty_list(BYTES) shift to state 36
-- On identifier shift to state 67
-- On expression shift to state 353
-- On decorator shift to state 521
-- On decorated_statement shift to state 523
-- On compound_statement shift to state 524
-- On comparison shift to state 70
-- On atom shift to state 71
-- On async_statement shift to state 525
-- On and_test shift to state 72
## Reductions:
-- On EOF DEDENT
--   reduce production statements ->

State 515:
## Known stack suffix:
## statement statements
## LR(1) items:
statements -> statement statements . [ EOF DEDENT ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production statements -> statement statements

State 516:
## Known stack suffix:
## simple_statement
## LR(1) items:
statement -> simple_statement . [ YIELD WITH WHILE TRY TRUE TILDE STRING RETURN RAISE PLUS PASS NOT NONLOCAL NEWLINE MINUS LEFTPARENS LEFTCURLY LEFTBRACKET LAMBDA INTEGER IMPORT IF IDENTIFIER GLOBAL FROM FORMAT FOR FLOAT FALSE EOF ELLIPSES DELETE DEFINE DEDENT CONTINUE COMPLEX CLASS BYTES BREAK AWAIT AT ASYNC ASTERIKS ASSERT ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production statement -> simple_statement

State 517:
## Known stack suffix:
## nonempty_list(decorator)
## LR(1) items:
decorated_statement -> nonempty_list(decorator) . compound_statement [ YIELD WITH WHILE TRY TRUE TILDE STRING RETURN RAISE PLUS PASS NOT NONLOCAL NEWLINE MINUS LEFTPARENS LEFTCURLY LEFTBRACKET LAMBDA INTEGER IMPORT IF IDENTIFIER GLOBAL FROM FORMAT FOR FLOAT FALSE EOF ELLIPSES DELETE DEFINE DEDENT CONTINUE COMPLEX CLASS BYTES BREAK AWAIT AT ASYNC ASTERIKS ASSERT ]
decorated_statement -> nonempty_list(decorator) . async_statement [ YIELD WITH WHILE TRY TRUE TILDE STRING RETURN RAISE PLUS PASS NOT NONLOCAL NEWLINE MINUS LEFTPARENS LEFTCURLY LEFTBRACKET LAMBDA INTEGER IMPORT IF IDENTIFIER GLOBAL FROM FORMAT FOR FLOAT FALSE EOF ELLIPSES DELETE DEFINE DEDENT CONTINUE COMPLEX CLASS BYTES BREAK AWAIT AT ASYNC ASTERIKS ASSERT ]
## Transitions:
-- On WITH shift to state 220
-- On WHILE shift to state 390
-- On TRY shift to state 398
-- On IF shift to state 431
-- On FOR shift to state 439
-- On DEFINE shift to state 447
-- On CLASS shift to state 493
-- On ASYNC shift to state 518
-- On compound_statement shift to state 519
-- On async_statement shift to state 520
## Reductions:

State 518:
## Known stack suffix:
## ASYNC
## LR(1) items:
async_statement -> ASYNC . compound_statement [ YIELD WITH WHILE TRY TRUE TILDE STRING RETURN RAISE PLUS PASS NOT NONLOCAL NEWLINE MINUS LEFTPARENS LEFTCURLY LEFTBRACKET LAMBDA INTEGER IMPORT IF IDENTIFIER GLOBAL FROM FORMAT FOR FLOAT FALSE EOF ELLIPSES DELETE DEFINE DEDENT CONTINUE COMPLEX CLASS BYTES BREAK AWAIT AT ASYNC ASTERIKS ASSERT ]
## Transitions:
-- On WITH shift to state 220
-- On WHILE shift to state 390
-- On TRY shift to state 398
-- On IF shift to state 431
-- On FOR shift to state 439
-- On DEFINE shift to state 447
-- On CLASS shift to state 493
-- On compound_statement shift to state 510
## Reductions:

State 519:
## Known stack suffix:
## nonempty_list(decorator) compound_statement
## LR(1) items:
decorated_statement -> nonempty_list(decorator) compound_statement . [ YIELD WITH WHILE TRY TRUE TILDE STRING RETURN RAISE PLUS PASS NOT NONLOCAL NEWLINE MINUS LEFTPARENS LEFTCURLY LEFTBRACKET LAMBDA INTEGER IMPORT IF IDENTIFIER GLOBAL FROM FORMAT FOR FLOAT FALSE EOF ELLIPSES DELETE DEFINE DEDENT CONTINUE COMPLEX CLASS BYTES BREAK AWAIT AT ASYNC ASTERIKS ASSERT ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production decorated_statement -> nonempty_list(decorator) compound_statement

State 520:
## Known stack suffix:
## nonempty_list(decorator) async_statement
## LR(1) items:
decorated_statement -> nonempty_list(decorator) async_statement . [ YIELD WITH WHILE TRY TRUE TILDE STRING RETURN RAISE PLUS PASS NOT NONLOCAL NEWLINE MINUS LEFTPARENS LEFTCURLY LEFTBRACKET LAMBDA INTEGER IMPORT IF IDENTIFIER GLOBAL FROM FORMAT FOR FLOAT FALSE EOF ELLIPSES DELETE DEFINE DEDENT CONTINUE COMPLEX CLASS BYTES BREAK AWAIT AT ASYNC ASTERIKS ASSERT ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production decorated_statement -> nonempty_list(decorator) async_statement

State 521:
## Known stack suffix:
## decorator
## LR(1) items:
nonempty_list(decorator) -> decorator . [ WITH WHILE TRY IF FOR DEFINE CLASS ASYNC ]
nonempty_list(decorator) -> decorator . nonempty_list(decorator) [ WITH WHILE TRY IF FOR DEFINE CLASS ASYNC ]
## Transitions:
-- On AT shift to state 502
-- On nonempty_list(decorator) shift to state 522
-- On decorator shift to state 521
## Reductions:
-- On WITH WHILE TRY IF FOR DEFINE CLASS ASYNC
--   reduce production nonempty_list(decorator) -> decorator

State 522:
## Known stack suffix:
## decorator nonempty_list(decorator)
## LR(1) items:
nonempty_list(decorator) -> decorator nonempty_list(decorator) . [ WITH WHILE TRY IF FOR DEFINE CLASS ASYNC ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production nonempty_list(decorator) -> decorator nonempty_list(decorator)

State 523:
## Known stack suffix:
## decorated_statement
## LR(1) items:
statement -> decorated_statement . [ YIELD WITH WHILE TRY TRUE TILDE STRING RETURN RAISE PLUS PASS NOT NONLOCAL NEWLINE MINUS LEFTPARENS LEFTCURLY LEFTBRACKET LAMBDA INTEGER IMPORT IF IDENTIFIER GLOBAL FROM FORMAT FOR FLOAT FALSE EOF ELLIPSES DELETE DEFINE DEDENT CONTINUE COMPLEX CLASS BYTES BREAK AWAIT AT ASYNC ASTERIKS ASSERT ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production statement -> decorated_statement

State 524:
## Known stack suffix:
## compound_statement
## LR(1) items:
statement -> compound_statement . [ YIELD WITH WHILE TRY TRUE TILDE STRING RETURN RAISE PLUS PASS NOT NONLOCAL NEWLINE MINUS LEFTPARENS LEFTCURLY LEFTBRACKET LAMBDA INTEGER IMPORT IF IDENTIFIER GLOBAL FROM FORMAT FOR FLOAT FALSE EOF ELLIPSES DELETE DEFINE DEDENT CONTINUE COMPLEX CLASS BYTES BREAK AWAIT AT ASYNC ASTERIKS ASSERT ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production statement -> compound_statement

State 525:
## Known stack suffix:
## async_statement
## LR(1) items:
statement -> async_statement . [ YIELD WITH WHILE TRY TRUE TILDE STRING RETURN RAISE PLUS PASS NOT NONLOCAL NEWLINE MINUS LEFTPARENS LEFTCURLY LEFTBRACKET LAMBDA INTEGER IMPORT IF IDENTIFIER GLOBAL FROM FORMAT FOR FLOAT FALSE EOF ELLIPSES DELETE DEFINE DEDENT CONTINUE COMPLEX CLASS BYTES BREAK AWAIT AT ASYNC ASTERIKS ASSERT ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production statement -> async_statement

State 526:
## Known stack suffix:
## DEFINE reference LEFTPARENS define_parameters RIGHTPARENS option(return_annotation) COLON option(SIGNATURE_COMMENT) block_or_stub_body
## LR(1) items:
compound_statement -> DEFINE reference LEFTPARENS define_parameters RIGHTPARENS option(return_annotation) COLON option(SIGNATURE_COMMENT) block_or_stub_body . [ YIELD WITH WHILE TRY TRUE TILDE STRING RETURN RAISE PLUS PASS NOT NONLOCAL NEWLINE MINUS LEFTPARENS LEFTCURLY LEFTBRACKET LAMBDA INTEGER IMPORT IF IDENTIFIER GLOBAL FROM FORMAT FOR FLOAT FALSE EOF ELLIPSES DELETE DEFINE DEDENT CONTINUE COMPLEX CLASS BYTES BREAK AWAIT AT ASYNC ASTERIKS ASSERT ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production compound_statement -> DEFINE reference LEFTPARENS define_parameters RIGHTPARENS option(return_annotation) COLON option(SIGNATURE_COMMENT) block_or_stub_body

State 527:
## Known stack suffix:
## NEWLINE statements
## LR(1) items:
statements -> NEWLINE statements . [ EOF DEDENT ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production statements -> NEWLINE statements

State 528:
## Known stack suffix:
## WITH parser_generator_separated_nonempty_list(COMMA,with_item) COLON option(ANNOTATION_COMMENT) block
## LR(1) items:
compound_statement -> WITH parser_generator_separated_nonempty_list(COMMA,with_item) COLON option(ANNOTATION_COMMENT) block . [ YIELD WITH WHILE TRY TRUE TILDE STRING RETURN RAISE PLUS PASS NOT NONLOCAL NEWLINE MINUS LEFTPARENS LEFTCURLY LEFTBRACKET LAMBDA INTEGER IMPORT IF IDENTIFIER GLOBAL FROM FORMAT FOR FLOAT FALSE EOF ELLIPSES DELETE DEFINE DEDENT CONTINUE COMPLEX CLASS BYTES BREAK AWAIT AT ASYNC ASTERIKS ASSERT ]
## Transitions:
## Default reduction:
-- After reading the next token, reduce production compound_statement -> WITH parser_generator_separated_nonempty_list(COMMA,with_item) COLON option(ANNOTATION_COMMENT) block

State 529:
## Known stack suffix:
## statements
## LR(1) items:
parse -> statements . EOF [ # ]
## Transitions:
-- On EOF shift to state 530
## Reductions:

State 530:
## Known stack suffix:
## statements EOF
## LR(1) items:
parse -> statements EOF . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, reduce production parse -> statements EOF

State 531:
## Known stack suffix:
## parse
## LR(1) items:
parse' -> parse . [ # ]
## Transitions:
## Default reduction:
-- Without reading the next token, accept parse

